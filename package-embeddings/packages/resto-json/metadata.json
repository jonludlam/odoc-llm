{
  "package": "resto-json",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:38.793370",
  "modules": [
    {
      "module_path": "Resto_json.Encoding",
      "description": "Encodes and decodes values using custom transformations and pre-defined formats, including unit, string, and request/response structures. Works with type-safe encodings and JSON schema definitions for structured data. Used to serialize API requests and generate schema documentation for endpoints.",
      "description_length": 297,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resto_json.Ezjsonm",
      "description": "Encodes and decodes values using a custom encoding specification, mapping between OCaml types and JSON representations. It operates on OCaml values and the `t` type, which represents JSON values. This is used to serialize configuration data and parse user input from JSON strings.",
      "description_length": 280,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resto_json.Bson",
      "description": "Encodes and decodes values using a custom encoding schema into a BSON-like structure. It operates on user-defined types and the `t` type representing BSON data. Used to serialize complex data structures for storage or transmission in a binary format.",
      "description_length": 250,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "resto-json",
      "description": "Provides functions to define and handle HTTP/JSON RPC endpoints with type-safe request and response structures. Works with custom protocol buffers and JSON-encoded data types to ensure consistency between client and server. Used in the Tezos project to build secure, structured RPC interfaces for blockchain interactions.",
      "description_length": 321,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resto_json",
      "description": "Converts values between OCaml types and a generic `t` representation using specified encodings. Operates on custom encodings that define how to serialize and deserialize data. Used to transform complex data structures like records and variants into a format suitable for JSON serialization or parsing.",
      "description_length": 301,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 321,
    "min_description_length": 250,
    "avg_description_length": 289.8,
    "embedding_file_size_mb": 0.018587112426757812
  }
}