{
  "package": "yaml-sexp",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:12.650485",
  "modules": [
    {
      "module_path": "Yaml_sexp.Stream.Mark",
      "library": "yaml-sexp",
      "description": "This module defines a type `t` representing position metadata in a YAML stream, with fields for index, line, and column numbers. It provides functions to convert this position data to and from S-expressions. It is used to track and serialize parsing locations for debugging or error reporting in YAML processing.",
      "description_length": 312,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yaml_sexp.Stream.Event",
      "library": "yaml-sexp",
      "description": "This module defines data structures and conversion functions for parsing and serializing YAML events with precise source location tracking. It handles event types like stream, document, mapping, and sequence markers, scalar values, and aliases, along with their associated metadata. It is used to represent and manipulate YAML parsing events in a format compatible with S-expressions for debugging or intermediate representation purposes.",
      "description_length": 438,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yaml_sexp.Stream",
      "library": "yaml-sexp",
      "description": "This module tracks position metadata and parsing events in a YAML stream, providing precise source location information for debugging and error reporting. It defines data types for positions (index, line, column) and YAML events such as stream markers, documents, mappings, sequences, scalars, and aliases, each annotated with location data. Operations include converting positions and events to and from S-expressions, enabling serialization and inspection of parsing intermediate representations. For example, it can record the exact location of a scalar value in a YAML file and serialize that information for later analysis or error display.",
      "description_length": 645,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yaml_sexp",
      "library": "yaml-sexp",
      "description": "This module enables bidirectional conversion between YAML and S-expressions, supporting structured data types like sequences, mappings, and scalars, along with metadata handling for versions and encoding styles. It provides utilities for serializing and deserializing custom types, such as versioned formats, and the Stream submodule allows incremental processing of YAML sequences. The child module tracks position metadata and parsing events with precise source locations, defining types for YAML structures annotated with line and column information. Together, they support use cases like parsing YAML into typed OCaml values, transforming nested data, and streaming large documents with detailed error reporting.",
      "description_length": 716,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 716,
    "min_description_length": 312,
    "avg_description_length": 527.75,
    "embedding_file_size_mb": 0.014936447143554688
  }
}