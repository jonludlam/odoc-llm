{
  "package": "yaml-sexp",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:29:02.873778",
  "modules": [
    {
      "module_path": "Yaml_sexp.Stream.Mark",
      "description": "Provides serialization and deserialization between Yaml.Stream.Mark.t and Sexp format. Works with the Yaml.Stream.Mark.t data structure, which represents position information in a YAML document. Used to convert mark data for debugging or persistent storage.",
      "description_length": 257,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yaml_sexp.Stream.Event",
      "description": "Converts position data from Yaml events to and from S-expression format, and serializes/deserializes Yaml event objects to and from S-expressions. Works with concrete types representing YAML stream positions and events. Used to persist or transmit event data in a structured, textual format.",
      "description_length": 291,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yaml_sexp.Stream",
      "description": "Converts YAML stream positions and events between Yaml.Stream.Mark.t and S-exp formats, enabling structured representation of document positions and event data. Supports serialization and deserialization of mark and event objects for storage or transmission. Allows debugging by converting internal position data into human-readable forms. Example uses include saving event sequences to files or transmitting them over networks in a standardized format.",
      "description_length": 453,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "yaml-sexp",
      "description": "Parses and generates YAML files, supporting a subset of YAML features compatible with Ezjsonm for JSON-like data. Works with OCaml's native data types such as lists, variants, and maps. Used to read configuration files or exchange data between systems that require YAML input or output.",
      "description_length": 286,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yaml_sexp",
      "description": "Converts YAML stream positions and events between Yaml.Stream.Mark.t and S-exp formats, enabling structured representation and exchange of document data. Provides serialization and deserialization functions for mark and event objects, supporting storage and transmission. Offers human-readable debugging outputs by translating internal position data. Examples include saving event sequences to files or sending them over networks in a standardized format.",
      "description_length": 455,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 455,
    "min_description_length": 257,
    "avg_description_length": 348.4,
    "embedding_file_size_mb": 0.018599510192871094
  }
}