{
  "package": "docker-api",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:20.777495",
  "modules": [
    {
      "module_path": "Docker.Container.Exec",
      "library": "docker-api",
      "description": "This module creates and starts executable instances within running Docker containers, providing direct interaction with their output streams. It works with container identifiers and command-line arguments to execute programs, capturing stdout and stderr in real time. Concrete use cases include running diagnostic tools, executing ad-hoc scripts, or interacting with processes inside a container for debugging or automation.",
      "description_length": 424,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Docker.Container",
      "library": "docker-api",
      "description": "This module manages Docker containers by providing functions to list, create, start, stop, and inspect containers, along with controlling execution and file system changes. It supports operations like launching containers with custom resource limits, monitoring status, and inspecting file system modifications using container IDs, host configurations, and bind mounts. A child module enables executing commands inside running containers, capturing stdout and stderr in real time for tasks like running diagnostics or automating interactions. Together, they allow full lifecycle management of containers and direct interaction with processes inside them.",
      "description_length": 654,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Docker.Image",
      "library": "docker-api",
      "description": "Handles image management via the Docker Remote API, providing functions to list existing images and create new ones from sources like registries or archives. It works with image identifiers, metadata records, and source specifications for image creation. Concrete use cases include pulling images from a Docker registry, importing images from a tarball, and querying local image details like size, creation time, and tags.",
      "description_length": 422,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Docker.Stream",
      "library": "docker-api",
      "description": "This module handles streaming input and output from Docker containers, providing functions to read from and write to container processes. It works with `out_channel` for sending data and returns stream content as `(kind * string)` pairs, where `kind` indicates stdout or stderr. Concrete use cases include capturing command output, sending input to a running container, and managing stream lifecycles during container communication.",
      "description_length": 432,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Docker",
      "library": "docker-api",
      "description": "This module provides direct access to the Docker Remote API, enabling interaction with Docker daemons through Unix sockets to manage containers, images, and streams. It supports key operations such as querying Docker versions, pulling images, and controlling container lifecycles, with data structures defined in submodules for precise handling of container configurations, image metadata, and stream content. The containers submodule allows creation, inspection, and execution control of containers, including real-time command execution with output capture, while the images submodule handles listing, importing, and pulling images from registries. Streaming functionality enables bidirectional communication with container processes, allowing input injection and multiplexed stdout/stderr retrieval for automation and monitoring tasks.",
      "description_length": 838,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 838,
    "min_description_length": 422,
    "avg_description_length": 554.0,
    "embedding_file_size_mb": 0.01859569549560547
  }
}