{
  "package": "docker-api",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:25.451067",
  "modules": [
    {
      "module_path": "Docker.Container.Exec",
      "description": "Exec sets up and starts an interactive command execution within a container, using a specified ID and command list. It supports configuring stdin, stdout, and stderr attachment, environment variables, user privileges, and custom detach keys. It returns a stream for real-time interaction with the running command.",
      "description_length": 313,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Docker.Stream",
      "description": "Provides operations to send and receive data over a stream, including writing to an output channel, shutting down transmission, reading individual payloads with timeout control, and reading all available data at once. Works with a stream type and a kind type representing message types. Used to interact with Docker container processes by sending commands and receiving output.",
      "description_length": 377,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Docker.Container",
      "description": "manages container configurations and interactions, including port mappings, volume mounts, resource limits, and execution of commands. it handles types such as port numbers, paths, environment variables, and cgroup settings. it enables creating bind mounts, setting CPU and memory limits, and running interactive commands with custom configurations. examples include mounting a host directory, restricting container memory, and executing a shell session with specified environment variables.",
      "description_length": 491,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Docker.Image",
      "description": "Provides functions to list, create, and reference images using network addresses, source URLs, and repository tags. Operates on types such as `id`, `t` (representing image metadata), and `source` (defining image retrieval methods). Used to fetch images from registries, import them with specific repositories, and generate image sources with defined tags.",
      "description_length": 355,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "docker-api",
      "description": "Provides functions to interact with Docker containers, images, and networks using the Remote API 1.29. Operates on types such as container IDs, image names, and network configurations. Enables starting, stopping, and inspecting containers, as well as building and managing images.",
      "description_length": 280,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Docker",
      "description": "handles communication with Docker containers through stream operations, manages container configurations with detailed settings, and facilitates image management via network sources. it works with stream and message types for real-time interaction, container config types for resource control, and image metadata for registry operations. it enables sending commands to containers, mounting host directories, and pulling images from remote repositories. examples include executing shell commands with environment variables, restricting memory usage, and fetching images with specific tags.",
      "description_length": 588,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 588,
    "min_description_length": 280,
    "avg_description_length": 400.6666666666667,
    "embedding_file_size_mb": 0.02222442626953125
  }
}