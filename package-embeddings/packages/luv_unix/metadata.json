{
  "package": "luv_unix",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:50.056085",
  "modules": [
    {
      "module_path": "Luv_unix.Os_fd.Socket",
      "library": "luv_unix",
      "description": "This module provides functions to convert between Unix file descriptors and libuv socket descriptors. It works with `Unix.file_descr` and `Luv_c_types.Os_socket.t` types. Use this module when integrating Unix-level sockets with libuv-based networking code, ensuring proper type compatibility across platforms.",
      "description_length": 309,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Luv_unix.Os_fd.Fd",
      "library": "luv_unix",
      "description": "This module converts file descriptors between Unix and libuv representations. It supports conversion from a Unix file descriptor to a libuv-compatible descriptor and vice versa. Use this module when interfacing with system-level I/O operations that require compatible descriptor types, such as integrating Unix-based file handles with libuv-based networking code.",
      "description_length": 363,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Luv_unix.Os_fd",
      "library": "luv_unix",
      "description": "This module bridges Unix and libuv file descriptor representations, enabling seamless integration between Unix system calls and libuv-based I/O operations. It supports conversions between `Unix.file_descr` and `Luv_c_types.Os_socket.t`, allowing developers to pass file descriptors between these two environments. For example, a Unix socket can be converted into a libuv-compatible descriptor for use with libuv's event loop, or a libuv socket can be converted back into a Unix file descriptor for further system-level manipulation. This facilitates interoperability in hybrid networking or I/O codebases that span both Unix and libuv abstractions.",
      "description_length": 648,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Luv_unix",
      "library": "luv_unix",
      "description": "This module integrates Unix file descriptors with libuv's I/O model, enabling bidirectional conversion between `Unix.file_descr` and `Luv_c_types.Os_socket.t`. It allows passing open sockets or file handles between Unix system calls and libuv-based asynchronous operations. For instance, a Unix domain socket can be imported into libuv for non-blocking I/O, or a libuv TCP handle can be exported to a Unix file descriptor for use with standard system APIs. This enables fine-grained control over I/O resources in mixed concurrency or networking stacks.",
      "description_length": 552,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 648,
    "min_description_length": 309,
    "avg_description_length": 468.0,
    "embedding_file_size_mb": 0.014937400817871094
  }
}