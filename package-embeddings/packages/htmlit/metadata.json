{
  "package": "htmlit",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:29:35.996837",
  "modules": [
    {
      "module_path": "Htmlit.El.Low",
      "description": "Converts HTML elements into a low-level internal representation. Works with HTML nodes and structural elements parsed from markup. Used to preprocess and normalize HTML before rendering or manipulation.",
      "description_length": 202,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Htmlit.At",
      "description": "This module offers functions to construct and manage HTML attributes, handling types such as strings, integers, booleans, and custom values while supporting operations like conditional rendering and attribute comparison. It enables precise manipulation of attributes like `src`, `style`, and `value` within HTML elements, facilitating tasks such as dynamic attribute generation and structured data representation. The tools provided allow for converting attributes to readable formats and integrating them into element definitions with explicit value bindings.",
      "description_length": 560,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Htmlit.El",
      "description": "Encapsulates HTML elements and fragments, transforming them into a structured internal format for processing. It handles node traversal, element construction, and page assembly using types like `element`, `node`, and `fragment`. Operations include parsing, normalization, and rendering of HTML content. For example, it can convert a raw string of HTML into a tree of nodes or generate a complete minimal web page from component elements.",
      "description_length": 437,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "htmlit",
      "description": "Generates HTML fragments and pages using combinators that concatenate and nest elements. Works with strings, lists of elements, and inline HTML content. Enables building structured web outputs from modular components.",
      "description_length": 217,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Htmlit",
      "description": "Generates and manipulates HTML content through attribute and element modules. Handles types like `string`, `int`, `bool`, `element`, `node`, and `fragment`, supporting operations such as attribute comparison, conditional rendering, and node traversal. Constructs dynamic HTML by combining attributes with elements, enabling tasks like generating styled forms or assembling web pages from components. Examples include creating a `<div>` with a class attribute or converting a raw HTML string into a structured node tree.",
      "description_length": 519,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 560,
    "min_description_length": 202,
    "avg_description_length": 387.0,
    "embedding_file_size_mb": 0.018616676330566406
  }
}