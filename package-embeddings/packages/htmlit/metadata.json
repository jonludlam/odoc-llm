{
  "package": "htmlit",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:24.515922",
  "modules": [
    {
      "module_path": "Htmlit.El.Low",
      "library": "htmlit",
      "description": "This module directly represents HTML elements, text, and raw content as variants for efficient manipulation. It supports constructing and deconstructing HTML structures using types like `El`, `Txt`, and `Raw`, enabling precise control over output. Concrete use cases include building custom HTML renderers, transforming element trees, or embedding raw HTML fragments safely.",
      "description_length": 374,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Htmlit.At",
      "library": "htmlit",
      "description": "This module enables the creation and manipulation of HTML attributes through typed constructors that accept strings, integers, or booleans, ensuring proper escaping for safe HTML generation. It supports conditional attribute inclusion, value comparisons, and formatting operations, with predefined constructors for standard attributes like `href`, `id`, `class'`, and `style`. It is particularly useful for building type-safe, dynamic HTML structures in OCaml applications where attributes depend on runtime data or validation logic.",
      "description_length": 533,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Htmlit.El",
      "library": "htmlit",
      "description": "This module enables the creation and manipulation of HTML elements and fragments using a rich set of constructors for both container and self-closing tags, supporting structured document assembly and semantic HTML5 markup. It provides core data types like `El`, `Txt`, and `Raw` to represent HTML structures, along with operations for text node generation (`txt`, `sp`), fragment splicing (`splice`), and rendering (`to_string`), ensuring proper UTF-8 handling and explicit escaping. You can build complete HTML documents programmatically, embed raw HTML fragments safely using `unsafe_raw`, and construct dynamic layouts using semantic elements like `header`, `main`, and `footer`. Submodules allow for fine-grained manipulation of element trees, enabling custom renderers or transformations on the HTML structure directly.",
      "description_length": 824,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Htmlit",
      "library": "htmlit",
      "description": "This module provides a structured way to generate HTML documents programmatically using type-safe element and attribute constructors. It supports dynamic HTML creation with typed elements like `El`, `Txt`, and `Raw`, and attributes that handle proper escaping for strings, integers, and booleans, including special cases like `class'` and `style`. You can build complete HTML structures with semantic tags, conditionally include attributes, and safely embed raw HTML fragments. Examples include generating a document header with `header`, inserting dynamic text with `txt`, and constructing a page layout with `main` and `footer` elements.",
      "description_length": 639,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 824,
    "min_description_length": 374,
    "avg_description_length": 592.5,
    "embedding_file_size_mb": 0.014949798583984375
  }
}