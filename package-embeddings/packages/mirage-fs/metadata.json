{
  "package": "mirage-fs",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:52.442194",
  "modules": [
    {
      "module_path": "Mirage_fs.To_KV_RO",
      "library": "mirage-fs",
      "description": "This module maps a filesystem device into a read-only key/value store, enabling access to files and directories via keys. It supports operations like checking existence, retrieving values, listing directory contents, and obtaining metadata such as modification time and digest. Use cases include serving static files from a read-only filesystem or exposing configuration data stored in a structured hierarchy.",
      "description_length": 409,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mirage_fs.S",
      "library": "mirage-fs",
      "description": "This module defines operations for interacting with a filesystem, including reading and writing files, creating and removing directories, and retrieving metadata. It works with files represented as strings, directories, and structured data via `Cstruct.t`. Concrete use cases include reading file contents with byte offsets, creating directories recursively, and listing directory contents.",
      "description_length": 390,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mirage_fs",
      "library": "mirage-fs",
      "description": "This module defines the core signatures and error handling for filesystem interactions in MirageOS, offering operations like reading, writing, and managing files and directories. It includes utilities for metadata retrieval and error formatting, supporting unikernel filesystem abstractions for creation, deletion, and traversal. The first child module exposes a read-only key/value interface over a filesystem, enabling directory listing, metadata access, and existence checks for static content delivery. The second child module provides direct filesystem manipulation with support for byte-range reads, directory management, and structured data handling via `Cstruct.t`.",
      "description_length": 673,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 673,
    "min_description_length": 390,
    "avg_description_length": 490.6666666666667,
    "embedding_file_size_mb": 0.011311531066894531
  }
}