{
  "package": "cbat-explicit-edge",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:29:13.849230",
  "modules": [
    {
      "module_path": "Cbat_explicit_edge_plugin.Config",
      "description": "This module handles configuration parsing, type conversion, and documentation generation, supporting operations like parameter registration and structured data manipulation. It works with diverse data types including booleans, integers, strings, enums, lists, and optional values, along with structured formats like files and directories. Use cases include application configuration management, input validation, and dynamic documentation of settings.",
      "description_length": 451,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cbat_explicit_edge_plugin.Cmdline",
      "description": "Parses command-line arguments to extract a subgraph identifier and a maximum edge limit. It processes string and integer values from user input. Used to filter graph data and control output size during analysis.",
      "description_length": 211,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "cbat-explicit-edge",
      "description": "Provides functions to construct and manipulate explicit edge representations in graph structures, including adding, removing, and querying edges. Operates on custom types for nodes and edges, with support for directed and undirected relationships. Used to implement graph algorithms that require precise control over edge connectivity and traversal.",
      "description_length": 349,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cbat_explicit_edge_plugin",
      "description": "Handles configuration parsing, type conversion, and command-line argument processing, supporting structured data manipulation and input validation. It manages booleans, integers, strings, enums, lists, optional values, and file/directory structures, while extracting subgraph identifiers and edge limits from user input. Operations include parameter registration, data filtering, and dynamic documentation generation. Examples include configuring application settings, limiting graph analysis output, and validating user-provided inputs.",
      "description_length": 537,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 4,
    "filtered_empty_modules": 4,
    "retention_rate": 0.5
  },
  "statistics": {
    "max_description_length": 537,
    "min_description_length": 211,
    "avg_description_length": 387.0,
    "embedding_file_size_mb": 0.014926910400390625
  }
}