{
  "package": "cviode",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 8,
  "creation_timestamp": "2025-07-15T23:05:48.007533",
  "modules": [
    {
      "module_path": "Cviode.D.Contact2_damped",
      "library": "cviode",
      "description": "Implements damped contact dynamics simulations using matrix-based state representations. Provides `step` to compute a single time step update and `solve` to integrate over a time span, both operating on state pairs of matrices and scalar time. Designed for physical systems modeling where damping and contact forces interact, such as in rigid body dynamics or constrained mechanical systems.",
      "description_length": 391,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cviode.S.Contact1_damped",
      "library": "cviode",
      "description": "Implements a damped contact solver for rigid body dynamics using matrix-based state representations. It provides `step` and `solve` functions to compute time evolution of position and velocity states under damping forces, given a system matrix and external forces. Designed for physics simulations where contact constraints and energy dissipation are modeled through linear complementarity or penalty methods.",
      "description_length": 409,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cviode.D.Contact1_damped",
      "library": "cviode",
      "description": "Implements numerical integration for a damped contact system using a second-order ODE solver. It operates on state vectors represented as pairs of matrices (position and velocity) and evolves them according to a provided force function. This module is suitable for simulating mechanical systems with damping, such as mass-spring systems with friction.",
      "description_length": 351,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cviode.S.Contact2_damped",
      "library": "cviode",
      "description": "Implements contact mechanics simulations with damped 2D systems using matrix-based state representations. It provides stepwise and full-solution solvers for differential equations modeling contact forces and damping effects. Designed for physics simulations where rigid body interactions with friction and compliance are required.",
      "description_length": 330,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cviode.Make",
      "library": "cviode",
      "description": "Implements damped contact dynamics for 1D and 2D systems using a custom array type. Provides `contact1_damped_s` and `contact2_damped_s` to simulate damped contact behavior with time integration. Designed for physics simulations involving constrained motion and energy dissipation.",
      "description_length": 281,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cviode.D",
      "library": "cviode",
      "description": "This module performs numerical computations for damped contact mechanics using dense matrices, supporting simulations of mechanical systems with unilateral constraints in one and two dimensions. It provides core operations for matrix manipulation and system dynamics, with key data types including matrices for state representation and functions for force and time evolution. The first child module enables time integration of contact dynamics through `step` and `solve`, updating state matrices at each time interval for applications like rigid body collisions. The second child module extends this with second-order ODE solvers that evolve position and velocity matrices under damping forces, suitable for simulating systems like frictional mass-spring networks.",
      "description_length": 764,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cviode.S",
      "library": "cviode",
      "description": "This module solves damped contact problems in one and two dimensions using dense matrices, offering direct solvers for constrained motion and force resolution in physical systems. It provides core operations for matrix-based simulation of damping forces and contact constraints, with main data types including dense matrices and state vectors. The child modules extend this functionality to rigid body dynamics and 2D contact mechanics, enabling simulations of frictional interactions and compliant systems through `step` and `solve` functions. Example applications include robotic motion planning and mechanical system analysis under damping and contact constraints.",
      "description_length": 667,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cviode",
      "library": "cviode",
      "description": "This module simulates damped contact dynamics in one and two dimensions using dense matrices and custom array types, enabling the modeling of constrained mechanical systems with energy dissipation. It provides key operations for time integration, force computation, and constraint resolution through functions like `step` and `solve`, which update system states based on damping and contact forces. Main data types include matrices and state vectors that represent positions, velocities, and forces, supporting simulations of rigid bodies, frictional interactions, and compliant systems. Example applications include simulating damped collisions in robotic systems and analyzing motion under unilateral constraints in mechanical networks.",
      "description_length": 738,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 764,
    "min_description_length": 281,
    "avg_description_length": 491.375,
    "embedding_file_size_mb": 0.029463768005371094
  }
}