{
  "package": "h2-async",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:57:44.344318",
  "modules": [
    {
      "module_path": "H2_async.Client.SSL",
      "library": "h2-async",
      "description": "This module implements asynchronous HTTP/2 client connections over SSL/TLS. It provides functions to establish secure connections, send requests with optional trailers, handle server-initiated pushes, and manage connection lifecycle events like shutdown and ping. Concrete use cases include building secure HTTP/2 clients for APIs, streaming data over encrypted channels, and handling server push in web services.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async.Server.SSL",
      "library": "h2-async",
      "description": "Handles incoming HTTPS connections for an HTTP/2 server using OpenSSL. It provides functions to create connection handlers that process requests and errors, working with SSL sockets and server addresses. Use cases include setting up secure HTTP/2 servers with custom TLS configurations or default certificates.",
      "description_length": 310,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async.Client.TLS",
      "library": "h2-async",
      "description": "This module implements asynchronous HTTP/2 client connections over TLS. It provides functions to establish secure connections, send requests with optional trailers, handle server-initiated pushes, and manage connection lifecycle events like shutdown and ping. Concrete use cases include building efficient HTTPS clients for microservices or streaming data from secure APIs with HTTP/2 semantics.",
      "description_length": 395,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async.Server",
      "library": "h2-async",
      "description": "Handles incoming HTTP/2 connections over both plaintext and SSL sockets, providing functions to create connection handlers that process requests and errors. Works with custom or default TLS configurations for secure communication. Use cases include building high-performance HTTP/2 servers with support for HTTPS via OpenSSL.",
      "description_length": 325,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async.Client",
      "library": "h2-async",
      "description": "This module implements asynchronous HTTP/2 client connections over SSL/TLS. It provides functions to establish secure connections, send requests with optional trailers, handle server-initiated pushes, and manage connection lifecycle events like shutdown and ping. Concrete use cases include building secure HTTP/2 clients for APIs, streaming data over encrypted channels, and handling server push in web services.",
      "description_length": 413,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async",
      "library": "h2-async",
      "description": "Implements HTTP/2 client and server communication over SSL/TLS. The Server module handles incoming connections, request processing, and secure configuration with OpenSSL, ideal for high-performance HTTPS services. The Client module enables secure request sending, response handling, and server push management, suitable for API clients and encrypted data streaming.",
      "description_length": 365,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 413,
    "min_description_length": 310,
    "avg_description_length": 370.1666666666667,
    "embedding_file_size_mb": 0.08736705780029297
  }
}