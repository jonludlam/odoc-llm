{
  "package": "h2-async",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:31:18.790950",
  "modules": [
    {
      "module_path": "H2_async.Server.SSL",
      "description": "Handles SSL socket connections by establishing secure communication channels using provided certificate and key files. Processes HTTP/2 requests and errors through custom handlers, binding to specified network addresses. Designed for deploying secure, high-performance web servers with TLS encryption.",
      "description_length": 301,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async.Client.SSL",
      "description": "Establishes secure HTTP/2 connections over SSL, sends requests with custom headers and body handling, and manages connection lifecycle events like shutdown and pings. Operates on SSL-wrapped socket types and HTTP/2 request/response structures. Used to implement secure client interactions with servers requiring TLS encryption and bidirectional stream management.",
      "description_length": 363,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "H2_async.Client.TLS",
      "description": "Handles HTTP/2 over TLS connections, enabling creation of secure client connections, sending requests with custom headers and trailers, and managing connection lifecycle events like shutdown and pings. Operates on TLS-wrapped socket types and HTTP/2 request/response structures. Used to establish secure communication with servers, send structured HTTP/2 requests, and handle asynchronous responses and errors.",
      "description_length": 410,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "H2_async.Server",
      "description": "Establishes secure SSL/TLS connections using certificate and key files, enabling encrypted communication over HTTP/2. Processes incoming requests and errors through customizable handlers, supporting high-performance web server deployment. Accepts network address configurations to bind and listen for connections. Examples include serving encrypted web content, handling secure API requests, and managing error responses within a protected channel.",
      "description_length": 448,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_async.Client",
      "description": "Manages secure HTTP/2 communication over TLS, supporting request sending with custom headers and trailers, and handling connection events such as shutdown and pings. Operates on TLS-wrapped sockets and HTTP/2 message structures, enabling bidirectional stream management and error handling. Allows for structured client-server interactions with encrypted data exchange and lifecycle control. Examples include sending authenticated requests, managing stream timeouts, and responding to server-initiated pings.",
      "description_length": 507,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "h2-async",
      "description": "Provides HTTP/2 protocol parsing and serialization using Angstrom and Faraday, handling frames, streams, and connection management. Works with byte sequences, binary data, and HTTP/2-specific structures like headers and settings. Enables building high-performance HTTP/2 servers and clients with low-level control over the protocol stack.",
      "description_length": 338,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "H2_async",
      "description": "Provides secure HTTP/2 communication over TLS, enabling encrypted request handling, custom header and trailer support, and bidirectional stream management. Processes incoming connections, manages error responses, and supports lifecycle events like pings and shutdowns through configurable handlers. Operates on TLS-wrapped sockets and HTTP/2 message structures, allowing for secure API interactions and stream timeouts. Examples include serving encrypted web content, sending authenticated requests, and responding to server-initiated pings.",
      "description_length": 541,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 541,
    "min_description_length": 301,
    "avg_description_length": 415.42857142857144,
    "embedding_file_size_mb": 0.02583789825439453
  }
}