{
  "package": "ocurl",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:22.329052",
  "modules": [
    {
      "module_path": "Curl.Multi",
      "description": "The module manages asynchronous data transfers by coordinating multiple libcurl handles, offering operations to add/remove connections, perform transfers, and handle socket/timer events. It works with multi stack and handle types to enable low-level event-driven network I/O. This is particularly useful for scenarios requiring concurrent network operations, such as managing multiple simultaneous HTTP requests or real-time data streaming.",
      "description_length": 440,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "ocurl",
      "description": "Provides functions for parsing and generating HTTP headers, handling URL encoding and decoding, and managing cookie sessions. Works with strings, lists, and custom record types representing HTTP requests and responses. Used to construct HTTP client requests with proper formatting and to extract session cookies from server responses.",
      "description_length": 334,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curl_lwt",
      "description": "Handles asynchronous HTTP requests using Lwt, performing transfers and configuring global multi-handle options. Operates with `Curl.t` for individual requests and `Curl.Multi.curlMultiOption` for managing multiple connections. Used to execute non-blocking web requests and adjust settings for concurrent network operations.",
      "description_length": 323,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curl",
      "description": "Provides functions to manage and inspect HTTP connections, including retrieving connection state and configuration. Works with connection objects that encapsulate low-level socket and protocol details. Used to monitor or debug network interactions during HTTP requests.",
      "description_length": 269,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 440,
    "min_description_length": 269,
    "avg_description_length": 341.5,
    "embedding_file_size_mb": 0.014923095703125
  }
}