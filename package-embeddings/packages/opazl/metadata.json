{
  "package": "opazl",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:53:14.162210",
  "modules": [
    {
      "module_path": "Opazl.Ast",
      "library": "opazl",
      "description": "This module defines core data structures for representing chat logs, including timestamps, user messages, notices, and actions. It provides constructors and types for parsing and manipulating individual lines of chat data, such as distinguishing between messages, notices, and actions with associated users and times. Concrete use cases include modeling IRC or chat log entries for analysis, transformation, or rendering.",
      "description_length": 421,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Opazl.Pp",
      "library": "opazl",
      "description": "This module formats and prints structured data, including timestamps, integers, and content values. It provides functions to output lines and files containing time-stamped content, with support for custom formatting. Concrete use cases include logging events with timestamps and generating formatted output files from lists of time-marked data entries.",
      "description_length": 352,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Opazl.Parser",
      "library": "opazl",
      "description": "Parses input sources like lexing buffers, input channels, or strings into a list of structured content elements annotated with position data. Works with `Sedlexing.lexbuf`, `Stdlib.in_channel`, and string inputs, producing tuples of position information and AST content. Used to convert raw input into typed abstract syntax trees for further processing.",
      "description_length": 353,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Opazl.Lexer",
      "library": "opazl",
      "description": "This module handles token extraction, structured data parsing, and AST element construction. It operates on `Sedlexing.lexbuf` inputs, transforming them into tuples with positional metadata and AST nodes such as `Opazl.Ast.content` and `Opazl.Ast.msg`. These functions are used to parse input strings into tokens, extract time components, usernames, notices, and build message/action structures from the AST for further processing.",
      "description_length": 431,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Opazl",
      "library": "opazl",
      "description": "This module processes chat log data through lexing, parsing, and formatting. It defines data structures for messages, notices, and actions with timestamps and users, extracts tokens and structured content from input streams, and generates formatted output. Used for analyzing, transforming, and rendering IRC-style chat logs from raw text.",
      "description_length": 339,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 431,
    "min_description_length": 339,
    "avg_description_length": 379.2,
    "embedding_file_size_mb": 0.07286453247070312
  }
}