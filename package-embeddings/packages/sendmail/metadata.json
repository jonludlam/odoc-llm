{
  "package": "sendmail",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T23:04:37.999261",
  "modules": [
    {
      "module_path": "Sendmail",
      "library": "sendmail",
      "description": "This module implements SMTP client logic for sending emails, handling authentication via PLAIN or LOGIN mechanisms and managing connections with servers. It works with domains, reverse and forward paths, and streams for message content, supporting error handling for protocol issues, authentication failures, and temporary delivery problems. Concrete use cases include sending authenticated emails through an SMTP server and handling server responses with detailed error reporting.",
      "description_length": 481,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sendmail_with_starttls.Context_with_tls",
      "library": "sendmail.starttls",
      "description": "This module manages TLS-secured communication contexts for sending email, handling data encoding and decoding during transmission. It works with byte sequences and ring buffers to process encrypted SMTP traffic. Concrete use cases include initializing TLS sessions, encoding outgoing email data, and decoding incoming server responses during secure email delivery.",
      "description_length": 364,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sendmail_with_starttls.Value",
      "library": "sendmail.starttls",
      "description": "This module defines error types for handling SMTP authentication and message transmission failures. It includes errors for encoding/decoding SMTP requests/replies, unexpected server responses, and invalid base64 or login challenge data. It is used to manage errors during email sending operations over STARTTLS.",
      "description_length": 311,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sendmail_with_starttls.Make_with_tls",
      "library": "sendmail.starttls",
      "description": "This module implements STARTTLS protocol negotiation for secure SMTP communication, handling client and server-side TLS upgrades. It works with `encoder` and `decoder` types to manage SMTP message streams, and uses `Tls.Config.client` and `Tls.Config.server` for TLS configuration. Concrete operations include initiating TLS sessions, sending and receiving SMTP commands securely, and gracefully closing connections.",
      "description_length": 416,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sendmail_with_starttls",
      "library": "sendmail.starttls",
      "description": "This module implements secure SMTP communication with STARTTLS protocol negotiation, handling TLS session initialization, SMTP command transmission, and authentication over encrypted channels. It works with SMTP domains, email paths, and TLS configurations to securely send email messages and process server responses. Concrete use cases include sending authenticated emails over TLS-secured connections and handling encryption upgrades during SMTP transactions.",
      "description_length": 462,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 481,
    "min_description_length": 311,
    "avg_description_length": 406.8,
    "embedding_file_size_mb": 0.07287406921386719
  }
}