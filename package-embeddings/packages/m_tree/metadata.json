{
  "package": "m_tree",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:50.394340",
  "modules": [
    {
      "module_path": "M_tree.Private",
      "library": "m_tree",
      "description": "This module implements an M-tree data structure for efficient similarity search and nearest neighbor queries. It supports operations such as insertion of data points, range queries within a given radius, and tree restructuring through promotion, partitioning, and splitting nodes. The core data types include nodes and objects representing data points with associated distances and optional parent links, designed for use in metric space indexing applications.",
      "description_length": 460,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "M_tree.T",
      "library": "m_tree",
      "description": "This module implements an M-tree data structure for efficient similarity search and nearest neighbor queries. It supports creating a tree with a specified branching factor and distance function, inserting elements, iterating over stored values, and finding points within a given radius of a query. The structure is particularly useful for applications in metric spaces, such as clustering or recommendation systems based on distance metrics.",
      "description_length": 441,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "M_tree",
      "library": "m_tree",
      "description": "The module organizes a hierarchical index for efficient similarity search in metric spaces, combining core tree operations with specialized submodules for configuration and traversal. It defines data types for nodes and data points, with operations to insert elements, perform range queries, and restructure the tree through splitting and promotion. Submodules extend functionality for custom branching factors, distance metrics, and iteration over stored values. This enables applications like high-dimensional clustering, recommendation systems, and radius-constrained nearest-neighbor searches.",
      "description_length": 597,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 597,
    "min_description_length": 441,
    "avg_description_length": 499.3333333333333,
    "embedding_file_size_mb": 0.011305809020996094
  }
}