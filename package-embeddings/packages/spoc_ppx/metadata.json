{
  "package": "spoc_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:48:18.865931",
  "modules": [
    {
      "module_path": "Spoc_ppx.External_kernel",
      "library": "spoc_ppx",
      "description": "This module handles parsing and transformation of OCaml type expressions into internal representations, generating fresh variables, patterns, and expressions during AST manipulation. It works with OCaml's `core_type`, `expression`, and `pattern` types, along with custom parsed type structures. It is used to build and manipulate kernel-specific type representations for code generation, particularly in contexts like vector processing and inversion.",
      "description_length": 450,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spoc_ppx",
      "library": "spoc_ppx",
      "description": "This module processes OCaml type expressions into internal representations, generating fresh variables, patterns, and expressions during AST manipulation. It operates on `core_type`, `expression`, and `pattern` types, supporting code generation for kernel-specific types in vector processing and inversion tasks. It is used to transform and build type structures needed for low-level code generation and type-driven optimizations.",
      "description_length": 430,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 2,
    "filtered_empty_modules": 1,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 450,
    "min_description_length": 430,
    "avg_description_length": 440.0,
    "embedding_file_size_mb": 0.0294189453125
  }
}