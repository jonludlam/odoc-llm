{
  "package": "irc-client-lwt-ssl",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:56.094248",
  "modules": [
    {
      "module_path": "Irc_client_lwt_ssl.Config",
      "description": "Provides functions to load, merge, and access configuration settings represented as a record type with fields for environment, logging level, and database connection parameters. Includes a default configuration value pre-filled with development settings. Used to initialize application settings from environment variables or a config file.",
      "description_length": 339,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irc_client_lwt_ssl.Io",
      "description": "Provides asynchronous I/O operations such as reading from and writing to file descriptors, handling network connections, and managing timeouts. Works with Lwt-based promises, IP addresses, and configuration records. Used to implement non-blocking network servers and handle concurrent I/O tasks efficiently.",
      "description_length": 307,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "irc-client-lwt-ssl",
      "description": "Provides asynchronous and synchronous message handling, connection management, and event dispatching for IRC protocols. Works with socket connections, message parsing, and event loops using Lwt or Unix IO. Used to build real-time chat clients, bot interactions, and protocol-aware network services.",
      "description_length": 298,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irc_client_lwt_ssl",
      "description": "Loads and manages configuration settings through a structured record type, enabling initialization from environment variables or files, with default development values. Supports asynchronous I/O operations including network communication and file handling, leveraging Lwt for non-blocking execution and concurrency. Combines configuration and I/O capabilities to build responsive, scalable network applications. Example tasks include reading from a socket, writing to a database, and applying logging settings based on environment variables.",
      "description_length": 541,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 541,
    "min_description_length": 298,
    "avg_description_length": 371.25,
    "embedding_file_size_mb": 0.014911651611328125
  }
}