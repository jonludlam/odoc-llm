{
  "package": "ldp_js",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:01.752829",
  "modules": [
    {
      "module_path": "Ldp_js.Make",
      "description": "Outputs debug information to the console in an asynchronous manner. Accepts a string argument and returns a unit promise. Useful for tracing execution flow during development or debugging complex asynchronous workflows.",
      "description_length": 219,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ldp_js.Dbg",
      "description": "Logs debug messages using Firebug's console.log and performs HTTP requests with customizable headers and body. Operates on strings, HTTP methods, IRIs, and Cohttp data structures. Used for inspecting network traffic and debugging API interactions during development.",
      "description_length": 266,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ldp_js.Nodbg",
      "description": "Provides functions for making HTTP requests with optional body and headers, and a debug logging function. Works with Cohttp types such as request methods, IRIs, headers, and response bodies. Used to perform network calls in a non-debugging context, such as sending API requests or fetching resources without logging details.",
      "description_length": 324,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ldp_js",
      "description": "Provides functions to create and manage HTTP clients using Cohttp_lwt_jsoo's synchronous client implementation. Works with request and response types from Ldp.Http.Http, including headers, body data, and status codes. Used to send GET and POST requests in a browser-based environment with Lwt and Js_of_ocaml.",
      "description_length": 309,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ldp_js",
      "description": "Outputs debug information to the console in a non-blocking manner, using Lwt for asynchronous execution. Works with string values to log messages during runtime. Useful for tracing execution flow in event-driven JavaScript environments.",
      "description_length": 236,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 324,
    "min_description_length": 219,
    "avg_description_length": 270.8,
    "embedding_file_size_mb": 0.0186004638671875
  }
}