{
  "package": "archi-async",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:55:42.153908",
  "modules": [
    {
      "module_path": "Archi_async.Component",
      "library": "archi-async",
      "description": "This module composes and manages components with explicit dependencies and lifecycle handling in an asynchronous context. It supports operations like appending dependencies, concatenating component chains, and creating components from systems or modules. Concrete use cases include building service components with dependency injection, managing startup and shutdown sequences, and linking components into pipelines.",
      "description_length": 416,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Archi_async.System",
      "library": "archi-async",
      "description": "This module manages the lifecycle of component-based systems, allowing components to be defined, started, and stopped in a controlled manner. It works with systems parameterized by context, arguments, and component types, supporting both one-time and reusable component configurations. Concrete use cases include orchestrating startup and shutdown of interdependent services, such as initializing a web server with its dependencies and cleanly shutting it down.",
      "description_length": 461,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Archi_async.Io",
      "library": "archi-async",
      "description": "This module implements monadic operations for handling asynchronous I/O actions. It provides `return` for wrapping values in an asynchronous context, `map` for transforming results of asynchronous actions, and `bind` for sequencing asynchronous operations. These functions work with the `Io.t` type representing asynchronous computations. Use cases include composing non-blocking file reads, network requests, or concurrent system calls while managing their results in a structured way.",
      "description_length": 486,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Archi_async",
      "library": "archi-async",
      "description": "This module provides monadic I/O operations for asynchronous computation, dependency-aware component composition, and lifecycle-managed system orchestration. It works with asynchronous values, component graphs, and context-parametrized systems to enable building and managing complex, interdependent services with clear startup and shutdown sequences. Use cases include constructing non-blocking network services, composing components with shared dependencies, and orchestrating the lifecycle of distributed system nodes.",
      "description_length": 521,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 521,
    "min_description_length": 416,
    "avg_description_length": 471.0,
    "embedding_file_size_mb": 0.05837440490722656
  }
}