{
  "package": "archi-async",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:27:14.260411",
  "modules": [
    {
      "module_path": "Archi_async.Io",
      "description": "Provides operations to sequence and transform asynchronous computations, including lifting values into the context, mapping functions over results, and chaining operations that produce new asynchronous values. Works with asynchronous deferred values derived from the Async library. Used to handle I/O operations and coordinate asynchronous workflows in a composable way.",
      "description_length": 370,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Archi_async.Component",
      "description": "Handles initialization and termination of components with asynchronous I/O operations. Operates on custom types `t` for component instances, `ctx` for configuration context, and `args` for startup parameters. Used to manage lifecycle events in a system with concurrent processes.",
      "description_length": 279,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Archi_async.System",
      "description": "Provides functions to construct and manage stateful processes with context, including creating reusable components, starting and stopping processes, and retrieving their current state. Operates on typed components and stateful objects with distinct lifecycle states. Used to initialize and control long-running tasks with explicit error handling during transitions.",
      "description_length": 365,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "archi-async",
      "description": "Manages stateful components and their dependencies through lifecycle events and dependency resolution. Operates on custom component types and dependency graphs. Enables structured initialization, cleanup, and coordination of interdependent components in application workflows.",
      "description_length": 276,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Archi_async",
      "description": "Sequences and transforms asynchronous computations using deferred values, enabling I/O handling and workflow coordination through lifting, mapping, and chaining. Manages component lifecycles with custom types for instances, configuration, and arguments, supporting initialization and termination of concurrent processes. Constructs and controls stateful processes with typed components, allowing start/stop operations and state retrieval. Enables composable, asynchronous system management with explicit error handling and lifecycle control.",
      "description_length": 541,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 541,
    "min_description_length": 276,
    "avg_description_length": 366.2,
    "embedding_file_size_mb": 0.01858997344970703
  }
}