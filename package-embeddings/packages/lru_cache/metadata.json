{
  "package": "lru_cache",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:58:07.159622",
  "modules": [
    {
      "module_path": "Lru_cache.Make_with_monad",
      "library": "lru_cache",
      "description": "This module creates a Least Recently Used (LRU) cache that integrates with a monadic context, allowing asynchronous or effectful computations within cache operations. It supports initializing a cache with a fixed size, checking for key presence, retrieving or computing values with monadic actions, and removing keys. Concrete use cases include caching results of expensive I/O-bound lookups like database queries or HTTP requests, where validation checks or computations must run in a monad (e.g., Lwt or Async).",
      "description_length": 513,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lru_cache.Make",
      "library": "lru_cache",
      "description": "This module implements an LRU cache with operations to initialize a cache of fixed size, check membership, retrieve and update values with optional validation, and remove entries. It works with a user-defined key type `K.t` and arbitrary value types `'a`, using a monadic interface for asynchronous or effectful computations. Concrete use cases include caching results of expensive computations or database queries, where keys identify resources and values are computed on demand or fetched from a backend.",
      "description_length": 506,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Lru_cache",
      "library": "lru_cache",
      "description": "Implements an LRU cache with operations to initialize a fixed-size cache, check membership, retrieve and update values with optional validation, and remove entries. Works with user-defined key types and arbitrary value types, using a monadic interface for asynchronous or effectful computations. Useful for caching results of expensive computations or database queries, where keys identify resources and values are computed or fetched on demand.",
      "description_length": 445,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 513,
    "min_description_length": 445,
    "avg_description_length": 488.0,
    "embedding_file_size_mb": 0.043842315673828125
  }
}