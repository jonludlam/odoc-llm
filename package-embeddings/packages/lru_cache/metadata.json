{
  "package": "lru_cache",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:03.857833",
  "modules": [
    {
      "module_path": "Lru_cache.Make",
      "description": "Compares instances of the type `t` using a custom ordering, converts `t` values to S-expression representations, computes hash values for use in hash tables, and checks internal consistency guarantees. Works with the abstract type `t` that represents build configurations. Used to ensure consistent behavior during build process comparisons, serialization, and debugging.",
      "description_length": 371,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "lru_cache",
      "description": "Maintains a fixed-size cache that automatically evicts the least recently used items when capacity is reached. It operates on key-value pairs with time-based expiration and supports concurrent access. Used to optimize repeated lookups in high-throughput systems, such as query result caching in distributed services.",
      "description_length": 316,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Lru_cache",
      "description": "Provides operations to manage an LRU cache, including inserting, retrieving, and removing key-value pairs while maintaining size constraints. Works with key-value pairs and tracks access order to evict the least recently used entries. Used to optimize repeated lookups by storing results of expensive computations or frequently accessed data.",
      "description_length": 342,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 371,
    "min_description_length": 316,
    "avg_description_length": 343.0,
    "embedding_file_size_mb": 0.011325836181640625
  }
}