{
  "package": "csv-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:50:09.117330",
  "modules": [
    {
      "module_path": "Csv_lwt.Rows",
      "library": "csv-lwt",
      "description": "This module processes CSV data using Lwt for asynchronous I/O. It provides functions to read rows incrementally, fold over row data, and load entire CSV files into row lists. It works with `Csv_lwt.in_channel` and `Csv_lwt.Row.t` types, supporting operations like header handling, row iteration, and parsing with customizable options. Use it to efficiently stream and process large CSV files asynchronously or load their contents into memory.",
      "description_length": 442,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Csv_lwt.Row",
      "library": "csv-lwt",
      "description": "This module handles CSV rows with associated headers, providing access to columns by index or header name, conversion to lists and associative lists, and header manipulation. It works with string lists for headers and rows, and supports partial or missing headers. Concrete use cases include parsing and transforming structured CSV data, mapping header-based data to typed records, and handling irregular CSV rows with varying lengths.",
      "description_length": 435,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Csv_lwt",
      "library": "csv-lwt",
      "description": "This module provides Lwt-based asynchronous input and output operations for handling CSV data, including reading from and writing to CSV files with customizable formatting options. It works with `Lwt_io` channels and `string list` rows, supporting features like header handling, field escaping, and record iteration. Concrete use cases include loading and parsing CSV files asynchronously, streaming large CSV data incrementally, and writing structured data to CSV output channels.",
      "description_length": 481,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 481,
    "min_description_length": 435,
    "avg_description_length": 452.6666666666667,
    "embedding_file_size_mb": 0.04385662078857422
  }
}