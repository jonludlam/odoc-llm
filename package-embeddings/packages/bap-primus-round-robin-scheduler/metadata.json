{
  "package": "bap-primus-round-robin-scheduler",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:49:23.339538",
  "modules": [
    {
      "module_path": "Primus_round_robin_main.Config",
      "library": "bap-plugin-primus_round_robin",
      "description": "This module provides operations to declare and manage typed configuration parameters, convert values between string representations and structured types, and generate documentation blocks for command-line interfaces. It works with arbitrary data types, command-line arguments, and formatter functions, supporting primitives (bool, int, float), path types, collections (lists, arrays, tuples), and optional values with customizable parsing and documentation. It is used to build extensible, type-safe configuration systems for round-robin schedulers and similar tools requiring documented CLI parameters and automated manpage generation.",
      "description_length": 636,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Primus_round_robin_main.RR",
      "library": "bap-plugin-primus_round_robin",
      "description": "This module implements a round-robin scheduler using a state machine. It provides `schedule` to run a round-robin iteration, `step` to execute a single step of a given value, `finish` to terminate the current round, and `init` to start a new round. It works with a generic `Machine` module representing the execution context, and is useful for managing cooperative multitasking or iterative processing of tasks in a fixed order.",
      "description_length": 428,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Primus_round_robin_main",
      "library": "bap-plugin-primus_round_robin",
      "description": "This module implements a round-robin scheduling system with typed configuration management. It provides functions to control execution flow through scheduled iterations, task stepping, and termination, while supporting structured configuration parameters with parsing and documentation generation. It works with task queues, state machines, and formatter-based logging to enable extensible CLI-driven scheduling tools.",
      "description_length": 418,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 636,
    "min_description_length": 418,
    "avg_description_length": 494.0,
    "embedding_file_size_mb": 0.043869972229003906
  }
}