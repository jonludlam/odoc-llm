{
  "package": "universal-portal",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:39.466716",
  "modules": [
    {
      "module_path": "UniversalPortal_Server.PortalCollector.Provider",
      "description": "Provides a way to create and manage React context values, allowing components to access and update shared state. Works with context types wrapped in React's context structure and portal-based event handlers. Used to inject dynamic data into component trees while maintaining reactivity.",
      "description_length": 286,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "UniversalPortal_Server.PortalCollector",
      "description": "Manages shared state through React context, enabling components to access and update values dynamically. Supports context types wrapped in React's structure and integrates portal-based event handling for reactive data injection. Operations include creating contexts, updating values, and propagating changes across component trees. Example use cases include theme management, user authentication, and real-time data synchronization.",
      "description_length": 432,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "universal-portal",
      "description": "Handles server-side rendering of ReasonReact components, including lifecycle management and state hydration. Processes React elements and JavaScript interop data to generate static HTML outputs. Enables seamless integration of client and server rendering for full-stack ReasonReact applications.",
      "description_length": 295,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "UniversalPortal_Js_Hooks_useRemoveServerPortals",
      "description": "Provides functions to query and manipulate DOM elements, including selecting nodes, slicing them into arrays, and removing specific elements. Operates on document, node list, and element types to interact with the browser's DOM. Removes server-rendered portals by querying and eliminating targeted elements from the document.",
      "description_length": 325,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "UniversalPortal_Shared_Portal",
      "description": "Provides a context for collecting portal elements and a constructor for embedding content into a specified DOM selector. Works with React elements and a portal record type containing configuration details. Used to dynamically render components into specific DOM locations, such as overlay containers or modal hubs.",
      "description_length": 314,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "UniversalPortal_Js",
      "description": "Removes all server-managed portals from the current context. Operates on internal state tracking portal registrations. Used to clean up portal references before reinitializing client-side components.",
      "description_length": 199,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "UniversalPortal_Server",
      "description": "Manages shared state through reactive context, allowing components to access and update values dynamically with portal-based event handling. Key data types include context wrappers and event handlers, with operations for creation, updating, and propagation. It enables theme switching, authentication tracking, and real-time data updates across the application. Example implementations include dynamic UI adjustments and synchronized user sessions.",
      "description_length": 448,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 7,
    "filtered_empty_modules": 2,
    "retention_rate": 0.7777777777777778
  },
  "statistics": {
    "max_description_length": 448,
    "min_description_length": 199,
    "avg_description_length": 328.42857142857144,
    "embedding_file_size_mb": 0.025838851928710938
  }
}