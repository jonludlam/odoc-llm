{
  "package": "tidy",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T23:00:24.426981",
  "modules": [
    {
      "module_path": "Tidy.Attr",
      "library": "tidy",
      "description": "This module provides functions to retrieve attribute identifiers, check if an attribute is an event, and fetch attributes by ID from a node. It operates on `Tidy.attr` and `Tidy.node` types, enabling direct manipulation and inspection of document attributes. Concrete use cases include extracting specific attributes from HTML elements and validating event attributes in a parsed document.",
      "description_length": 389,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.Node",
      "library": "tidy",
      "description": "This module provides functions to inspect and extract information from node structures, including type checks, property accessors, and text retrieval. It operates on `Tidy.node` values, which represent structured data elements with associated metadata. Use cases include parsing and analyzing structured documents, extracting text content, and validating node properties during data processing.",
      "description_length": 394,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.Config",
      "library": "tidy",
      "description": "This module governs document formatting and parsing configurations through a suite of getter and setter operations that control indentation, encoding, tag handling, and HTML tidying behaviors. It operates on `Tidy.doc` instances, supporting boolean flags, integer values, and string parameters to customize aspects like character encoding, doctype declarations, and output formatting. These configurations enable tasks such as enforcing consistent code style, converting between encodings, suppressing warnings, or adjusting accessibility checks during document processing.",
      "description_length": 573,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.DocTree",
      "library": "tidy",
      "description": "Navigates and extracts structured data from parsed HTML documents. It provides direct access to document nodes like the root, html, head, and body elements, and allows traversing the node tree through parent and child relationships. Retrieves attribute maps from individual nodes for inspection or processing.",
      "description_length": 309,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.Tree",
      "library": "tidy",
      "description": "This module builds and queries an index of tree nodes organized by type and attribute values. It processes a tree structure to map node types and attributes to lists of nodes, enabling efficient lookups by type or attribute key-value pairs. Use it to quickly locate nodes in a tree based on structural or attribute criteria without traversing the entire tree.",
      "description_length": 359,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 5,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8333333333333334
  },
  "statistics": {
    "max_description_length": 573,
    "min_description_length": 309,
    "avg_description_length": 404.8,
    "embedding_file_size_mb": 0.07285499572753906
  }
}