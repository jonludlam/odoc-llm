{
  "package": "tidy",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:37.181975",
  "modules": [
    {
      "module_path": "Tidy.Config",
      "description": "The module provides get and set operations for configuring document properties, including formatting options, processing flags, and output settings, all operating on a document object. It enables precise control over parameters like indentation, encoding, tag handling, boolean behaviors for line wrapping, entity formatting, and output formats (e.g., XML/HTML), supporting customization of document rendering and processing workflows.",
      "description_length": 435,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.Attr",
      "description": "Returns the unique identifier of an attribute, checks if an attribute represents an event, and retrieves an attribute by ID from a node. Works with attribute objects and node structures. Used to inspect event attributes and fetch specific attributes during DOM traversal.",
      "description_length": 271,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.DocTree",
      "description": "Extracts the root, HTML, head, and body nodes from a document structure. Retrieves parent nodes and child lists, and extracts attribute maps from individual nodes. Designed for navigating and inspecting structured document trees.",
      "description_length": 229,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.Node",
      "description": "Provides methods to inspect and extract information from structured data nodes, including type checking, attribute retrieval, and text extraction. Works with custom types such as nodeType, tagId, and lists of strings. Used to process parsed documents, validate node content, and generate structured outputs from hierarchical data.",
      "description_length": 330,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy.Tree",
      "description": "Generates a unique identifier from a node structure and retrieves a list of nodes based on an index and two string parameters. Operates on node and index types, where index contains structured metadata. Used to efficiently query and navigate hierarchical data in a tree-based system.",
      "description_length": 283,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "tidy",
      "description": "Provides functions to parse, validate, and format JSON data, including decoding nested structures and ensuring type consistency. Operates on OCaml's native data types such as lists, variants, and records, with support for custom type serializers. Used to process configuration files and API responses with strict schema enforcement.",
      "description_length": 332,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tidy",
      "description": "manages document configuration, attribute inspection, node navigation, and data extraction through targeted operations on document and node structures. it handles tasks like setting formatting options, retrieving event attributes, accessing root elements, and generating unique node identifiers. it supports precise control over document rendering, DOM traversal, and hierarchical data querying. examples include customizing XML output, checking event attributes during parsing, and extracting text content from specific nodes.",
      "description_length": 527,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 527,
    "min_description_length": 229,
    "avg_description_length": 343.85714285714283,
    "embedding_file_size_mb": 0.025869369506835938
  }
}