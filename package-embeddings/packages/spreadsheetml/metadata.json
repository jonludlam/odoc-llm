{
  "package": "spreadsheetml",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 43,
  "creation_timestamp": "2025-06-18T16:42:32.908228",
  "modules": [
    {
      "module_path": "Spreadsheetml.Shared_string_table.Rich_text.Fields.Direct",
      "description": "Provides operations to manipulate and query text formatting attributes, including text content, font settings, and styling options. Works with a structured type containing optional fields for properties like bold, font size, and underline. Used to apply transformations, validate attributes, or extract formatted text properties in a document processing context.",
      "description_length": 362,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles.Format.Fields.Direct",
      "description": "Provides operations to apply and check properties like alignment, borders, fonts, and number formats on a structured data type, with support for modifying identifiers and boolean flags. Works with fields wrapped in option types and boolean values, enabling transformation and validation of cell attributes. Used to update spreadsheet cell styles and configurations in a controlled, field-specific manner.",
      "description_length": 404,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles.Number_format.Fields.Direct",
      "description": "Processes a structured data type by applying custom operations to specific fields. It handles fields of type uint32 and string, allowing iteration, folding, and transformation based on provided functions. Used to update or inspect all mutable fields within a data structure efficiently.",
      "description_length": 286,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Workbook.Sheet.Fields.Direct",
      "description": "Provides operations to iterate over, fold, check conditions, and transform fields of a structured record type, including string identifiers, sheet IDs, and state values. Supports mapping and setting mutable fields within the structure. Used for processing and modifying records in data pipelines or validation workflows.",
      "description_length": 320,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Book_view.Fields.Direct",
      "description": "Provides operations to iterate over, fold, check conditions, and transform properties of a structured data type representing a UI state. Works with fields of various types including integers, booleans, options, and a custom visibility type. Used to update or validate window dimensions, tab settings, and scroll visibility in a graphical interface.",
      "description_length": 348,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Cell.Fields.Direct",
      "description": "Processes and transforms cell-level properties in a structured data format, including references, values, metadata indices, and display settings. Operates on a custom type representing cells, applying functions to extract or modify specific attributes like data type, style index, and phonetic visibility. Supports bulk updates to mutable fields and enables filtering, iteration, and conversion to lists based on per-field predicates and transformations.",
      "description_length": 454,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Column.Fields.Direct",
      "description": "Provides operations to iterate over, fold, check conditions, and transform properties of a structured data type representing configurable field attributes. Works with a complex record type containing boolean flags, numeric values, and optional floats for each field. Used to update or query settings like column width, visibility, and formatting in a spreadsheet-like structure.",
      "description_length": 378,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Row.Fields.Direct",
      "description": "Provides operations to iterate, fold, check conditions, and transform properties of a row structure, including cell data, visibility, formatting, and layout attributes. Works with custom field types that encapsulate row properties like cell lists, boolean flags, numeric values, and options. Used to apply bulk updates or queries to row configurations in spreadsheet-like data models.",
      "description_length": 384,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Shared_string_table.Rich_text.Underline",
      "description": "Converts a string to a typed representation and serializes that type to an S-expression. Works with an opaque type encapsulating string-based data. Used to parse and encode structured text in a format compatible with Sexp serialization.",
      "description_length": 236,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Shared_string_table.Rich_text.Vertical_align",
      "description": "Handles conversion of vertical alignment values between string representations and S-expressions. Works with an abstract type representing alignment options such as top, middle, and bottom. Used to parse configuration settings from text and serialize them for debugging or logging.",
      "description_length": 281,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Shared_string_table.Rich_text.Fields",
      "description": "manages text formatting through a structured type with optional attributes such as bold, font size, and underline. it supports operations to apply, validate, and extract these properties, enabling precise control over document styling. transformations can adjust font settings, while queries retrieve specific formatting details from text elements. examples include converting bold text to italic or extracting font sizes from a formatted paragraph.",
      "description_length": 449,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles.Format.Fields",
      "description": "manages cell attributes through property-based operations, handling alignment, borders, fonts, and number formats while supporting identifier and flag modifications. It operates on option-wrapped fields and boolean values, enabling safe transformations and validations. Users can adjust spreadsheet cell styles, enforce formatting rules, and modify configuration flags selectively. Examples include setting a cell's font to bold or ensuring numeric values are formatted correctly.",
      "description_length": 480,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles.Number_format.Fields",
      "description": "Processes a structured data type by applying custom operations to specific fields, supporting uint32 and string types through iteration, folding, and transformation. It enables efficient updates and inspections of mutable fields using provided functions. Users can traverse and modify field values in a data structure with precise control. For example, it can increment all uint32 fields by a value or extract string fields for logging.",
      "description_length": 436,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Styles.Fields.Direct",
      "description": "Processes and transforms field-specific data within a structured record, applying operations to cell formats, formatting records, and number formats. Operates on a custom record type containing lists of format and number format structures. Enables bulk updates, validation checks, and data extraction tailored to spreadsheet or data layout configurations.",
      "description_length": 355,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Workbook.Sheet.State",
      "description": "Converts a state representation to an S-expression and parses a string into a state value. Works with an abstract type representing application state. Used to serialize and deserialize state data during configuration loading and persistence.",
      "description_length": 241,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Sheet.Fields",
      "description": "Processes structured records by enabling iteration, folding, condition checks, and transformation of fields such as string identifiers, sheet IDs, and state values. Supports mapping and updating mutable fields within the record structure. Allows for complex data manipulations in pipelines or validation logic. Examples include filtering fields by type, updating state values, or extracting identifiers for further processing.",
      "description_length": 426,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Book_view.Visibility",
      "description": "Converts a string representation of visibility levels into a typed value, and serializes the type into an S-expression format. Works with a custom type representing visibility settings, such as public, private, or internal. Used to parse configuration strings and generate structured data for serialization.",
      "description_length": 307,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Book_view.Fields",
      "description": "Processes and manipulates UI state data through iteration, folding, and transformation, supporting integers, booleans, options, and visibility flags. Enables validation and updates for window dimensions, tab configurations, and scroll visibility. Offers condition checks to enforce constraints on field values. Examples include adjusting layout parameters or toggling component visibility based on user interactions.",
      "description_length": 416,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Fields.Direct",
      "description": "Processes and transforms collections of book views and sheets within a structured data type. Applies operations like iteration, folding, and filtering to nested field values. Modifies mutable fields in bulk for efficient updates.",
      "description_length": 229,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Cell.Type",
      "description": "Converts string representations of types into internal type structures and serializes type values to S-expressions. Works with abstract type representations and string inputs. Used to parse type information from configuration files and generate structured data for analysis tools.",
      "description_length": 280,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Cell.Value",
      "description": "Provides functions to convert values to S-expressions, generate string representations using shared string tables, and parse XML into typed values. Works with custom value types and XML data structures. Used to serialize and deserialize data in a structured, type-safe manner.",
      "description_length": 276,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Cell.Fields",
      "description": "manages cell data through a custom type, enabling extraction, modification, and bulk updates of properties such as data type, style index, and visibility. It supports filtering, iteration, and conversion to lists using predicates and transformations. Operations include handling references, metadata indices, and display settings. Examples include updating all cells with a specific style or extracting phonetic information for processing.",
      "description_length": 439,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Column.Fields",
      "description": "manages structured field attributes through iteration, folding, and transformation, handling records with boolean flags, numeric values, and optional floats. It supports operations to check conditions, adjust visibility, set column widths, and format data. Functions allow querying and modifying settings within a spreadsheet-like system. Examples include filtering visible fields, calculating summary statistics, and applying uniform formatting across multiple fields.",
      "description_length": 469,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Fields.Direct",
      "description": "Processes and transforms data structures representing tabular datasets, applying column and row operations with permission-based access. Operates on custom types for columns and rows, including mutable field updates. Enables data validation, transformation, and extraction for structured data workflows.",
      "description_length": 303,
      "index": 23,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Row.Fields",
      "description": "manages row configurations through customizable field types, enabling traversal, transformation, and condition-based manipulation of cell data, visibility, and layout. it supports operations like iteration, folding, and filtering over structured properties, including lists, booleans, numbers, and optional values. users can apply bulk updates or queries to modify or extract information from complex row structures. for example, it can adjust cell formatting across multiple rows or extract visibility flags for further processing.",
      "description_length": 532,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Shared_string_table.Rich_text",
      "description": "Encapsulates text processing capabilities through typed representations, alignment handling, and formatting controls. It works with opaque and abstract types for text data, alignment options, and styled elements, enabling parsing, serialization, and manipulation of structured content. Operations include converting text to styled objects, adjusting alignment settings, and modifying formatting attributes like bold or font size. Examples include serializing a paragraph with specific styling, parsing alignment from a config string, and transforming bold text into italic.",
      "description_length": 573,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Shared_string_table.String_item",
      "description": "Converts a list of rich text elements into a string or S-expression, and parses XML into a structured text representation. Works with lists of Rich_text.t values to encode and decode textual content. Used to generate human-readable output from XML data and to serialize structured text for storage or transmission.",
      "description_length": 314,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles.Format",
      "description": "handles cell styling and formatting via property manipulation, supporting alignment, fonts, borders, and numeric rules through optional and boolean operations. It enables precise control over cell attributes, allowing adjustments like bold text or numeric validation. Operations include modifying flags, applying styles, and enforcing format constraints. Users can set cell-specific properties or validate data integrity during spreadsheet processing.",
      "description_length": 451,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Styles.Number_format",
      "description": "Handles structured data by applying custom operations to specific fields, supporting uint32 and string types through iteration, folding, and transformation. It allows for efficient modification and inspection of mutable fields using provided functions, enabling precise control over data traversal and alteration. Users can increment all uint32 fields by a specified value or extract string fields for logging purposes. Operations are applied selectively, ensuring targeted updates without disrupting other parts of the data structure.",
      "description_length": 535,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles.Fields",
      "description": "manages structured field data through custom record types, supporting format transformations, validation, and bulk updates. It handles lists of format and number format structures, enabling precise manipulation of cell and record layouts. Users can extract and modify data based on specific spreadsheet configurations. Examples include converting date formats, validating numerical ranges, and applying consistent styling across multiple cells.",
      "description_length": 444,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Book_view",
      "description": "Converts visibility strings to typed values and serializes them as S-expressions, while enabling manipulation of UI state through iteration, folding, and transformation. It handles integers, booleans, options, and visibility flags to validate and update window dimensions, tab configurations, and scroll visibility. Operations include adjusting layout parameters and toggling component visibility based on user input. Examples include parsing configuration strings and enforcing constraints during state transitions.",
      "description_length": 516,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Sheet",
      "description": "Encapsulates state management through serialization and structured data manipulation. Handles abstract state types and provides operations for iterating, transforming, and validating record fields. Enables tasks like filtering by identifier, updating mutable values, and extracting metadata. Supports seamless data flow between persistence layers and application logic.",
      "description_length": 369,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook.Fields",
      "description": "manages nested field structures through iterative and transformative operations, enabling bulk modifications and data extraction. It handles complex data types such as lists and records, supporting operations like map, filter, and fold across nested layers. Users can efficiently update specific fields within large datasets or extract aggregated values from structured collections. For example, it can adjust pricing across multiple book entries or summarize view counts from a hierarchy of sheets.",
      "description_length": 499,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Cell",
      "description": "handles type and value serialization, conversion, and cell data manipulation through custom types and structured operations. it supports parsing and generating S-expressions, XML conversion, and cell property management with filters and transformations. users can update cells by style, extract metadata, or convert data for analysis. operations include type validation, value serialization, and bulk property modifications.",
      "description_length": 424,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Row",
      "description": "manages row configurations by allowing customization of field types and performing operations like iteration, folding, and filtering on structured properties such as lists, booleans, numbers, and options. it enables traversal and transformation of cell data, visibility, and layout, supporting bulk updates and queries on complex row structures. users can adjust formatting across multiple rows or extract visibility flags for downstream use. operations include modifying cell properties, extracting specific values, and applying conditional logic to row elements.",
      "description_length": 564,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Column",
      "description": "manages structured field attributes with iteration, transformation, and condition checks, supporting boolean flags, numeric values, and optional floats. It enables querying, modifying, and formatting settings within a spreadsheet-like structure. Operations include filtering visible fields, adjusting column widths, and applying consistent formatting. Examples include calculating summary statistics and dynamically updating field visibility.",
      "description_length": 442,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet.Fields",
      "description": "Processes and transforms tabular datasets by applying column and row operations with access control, using custom types for structured data manipulation. Supports mutable field updates, data validation, and transformation pipelines. Examples include filtering rows based on permissions, reshaping columns, and extracting subsets of structured data. Operations are designed for efficient and controlled data workflow management.",
      "description_length": 427,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Spreadsheetml.Shared_string_table",
      "description": "Provides a unified interface for handling structured text through conversion between rich text elements, styled objects, and serialized formats. It supports operations such as parsing alignment settings, applying formatting changes, and encoding/decoding text into strings or S-expressions. Key data types include rich text elements, styled objects, and alignment configurations. Examples include generating a styled paragraph from XML, converting bold text to italic, and serializing a list of text elements into a human-readable format.",
      "description_length": 538,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Styles",
      "description": "manages cell and field data through customizable properties, record types, and structured transformations. It supports operations like adjusting alignment, modifying numeric values, and applying format rules, with functions for iterating over fields, validating data, and updating records. Users can enforce numeric constraints, convert date formats, and apply consistent styling across spreadsheets. It enables precise control over both visual and structural aspects of data processing.",
      "description_length": 487,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Workbook",
      "description": "Converts and manages visibility states using S-expressions, enabling layout adjustments and UI updates through operations on integers, booleans, and options. Handles structured state transformations, allowing record field manipulation, filtering, and metadata extraction for consistent data flow. Supports nested data processing with map, filter, and fold operations, facilitating bulk updates and aggregation across complex structures. Examples include parsing configuration strings, updating pricing in book entries, and summarizing view counts from hierarchical data.",
      "description_length": 570,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml.Worksheet",
      "description": "provides structured data handling through type-safe serialization, row configuration, field attribute management, and tabular transformation. it supports S-expression and XML parsing, row and cell property manipulation, field visibility control, and data validation with custom types. users can filter rows by access level, adjust column widths, extract metadata, and apply conditional formatting across large datasets. operations enable efficient data workflow management, from raw input processing to refined output generation.",
      "description_length": 529,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "spreadsheetml",
      "description": "Provides functions to parse and extract content from Office Open XML containers, including reading relationships, parts, and package metadata. Works with XML documents, byte streams, and structured data models specific to Microsoft Office formats. Used to access embedded worksheets, charts, and metadata from XLSX files programmatically.",
      "description_length": 338,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spreadsheetml",
      "description": "handles structured text, cell data, visibility states, and tabular information through type-safe conversions, formatting, and transformations. it works with rich text elements, styled objects, numeric and date values, S-expressions, and row configurations, enabling tasks like converting XML to styled paragraphs, adjusting cell alignment, and serializing hierarchical data. operations include parsing, encoding, filtering, and applying format rules across diverse data structures. examples include updating pricing in records, generating formatted reports, and managing visibility based on metadata.",
      "description_length": 600,
      "index": 42,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 43,
    "meaningful_modules": 43,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 600,
    "min_description_length": 229,
    "avg_description_length": 411.8837209302326,
    "embedding_file_size_mb": 0.15660572052001953
  }
}