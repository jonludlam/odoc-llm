{
  "package": "mirage-block-ccm",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:59.092871",
  "modules": [
    {
      "module_path": "Block_ccm.Make",
      "library": "mirage-block-ccm",
      "description": "This module implements a block device interface with support for reading from and writing to sectors, handling encryption via a provided key and optional nonce length. It works with block devices abstracted by the `B` module and uses `Cstruct.t` buffers for data transfer, enforcing sector-aligned operations. Concrete use cases include secure storage access where encrypted block device interactions are required, such as in virtualized or embedded systems with MirageOS.",
      "description_length": 472,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Block_ccm",
      "library": "mirage-block-ccm",
      "description": "This module provides a secure block device interface that supports reading and writing sector-aligned data with encryption. It operates on block devices abstracted by the `B` module, using `Cstruct.t` buffers for data transfer and requiring a key and optional nonce length for encryption. Users can perform concrete tasks like accessing encrypted storage in virtualized or embedded environments, ensuring data confidentiality during block-level operations.",
      "description_length": 456,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 472,
    "min_description_length": 456,
    "avg_description_length": 464.0,
    "embedding_file_size_mb": 0.0076847076416015625
  }
}