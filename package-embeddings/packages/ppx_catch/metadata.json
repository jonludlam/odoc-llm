{
  "package": "ppx_catch",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:04:11.603429",
  "modules": [
    {
      "module_path": "Ppx_catch",
      "library": "ppx_catch",
      "description": "This module provides functions to generate catch-all expression handlers, converting results into `option` or `result` types. It works with OCaml parsetrees, locations, and extension points to transform expressions within the AST. Concrete use cases include automatically wrapping expressions in `try ... with` blocks that return `Some / None` or `Ok / Error` based on execution success.",
      "description_length": 387,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 387,
    "min_description_length": 387,
    "avg_description_length": 387.0,
    "embedding_file_size_mb": 0.004078865051269531
  }
}