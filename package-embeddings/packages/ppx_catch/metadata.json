{
  "package": "ppx_catch",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-06-18T16:26:49.901753",
  "modules": [
    {
      "module_path": "ppx_catch",
      "description": "Catches exceptions and transforms expressions into options or results, wrapping them in `None` or `Some` and `Error` or `Ok`. It operates on OCaml expressions and supports both `option` and `result` types. Used to safely evaluate potentially failing code and handle errors explicitly.",
      "description_length": 284,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_catch",
      "description": "Provides functions to generate error-handling code in OCaml ASTs, including `catch` for creating try-catch blocks and mappers for `catch.o` and `catch.r` extensions. Operates on OCaml parsetree expressions and location data. Used to inject exception handling logic into parsed code during preprocessing.",
      "description_length": 303,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 303,
    "min_description_length": 284,
    "avg_description_length": 293.5,
    "embedding_file_size_mb": 0.0076923370361328125
  }
}