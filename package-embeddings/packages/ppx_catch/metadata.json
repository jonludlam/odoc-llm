{
  "package": "ppx_catch",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1,
  "creation_timestamp": "2025-08-14T22:47:16.976813",
  "modules": [
    {
      "module_path": "Ppx_catch",
      "library": "ppx_catch",
      "description": "This module provides functions to generate catch-all expressions for handling exceptions and optional values in OCaml. It works with expression and extension types from the Ppxlib library, enabling inline error handling with custom messages and optional data binding. Concrete use cases include safely evaluating expressions that may raise exceptions or return optional values, directly embedding error handling logic within the syntax tree during preprocessing.",
      "description_length": 462,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 462,
    "min_description_length": 462,
    "avg_description_length": 462.0,
    "embedding_file_size_mb": 0.014911651611328125
  }
}