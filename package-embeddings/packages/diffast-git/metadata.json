{
  "package": "diffast-git",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:39.861477",
  "modules": [
    {
      "module_path": "Diffast_git.Git_storage.F",
      "library": "diffast-git",
      "description": "This module implements file system operations for handling Git objects, including directory traversal, type checking, and value serialization. It works with Git trees, hashes, and custom storage types to manage object persistence and retrieval. Concrete use cases include dumping commit values to disk, filtering entries by type, and constructing objects from version-controlled files.",
      "description_length": 385,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Diffast_git.Git_storage",
      "library": "diffast-git",
      "description": "This module provides file system operations for managing Git objects like trees, hashes, and commits through serialization, type filtering, and directory traversal. It supports persisting and reconstructing version-controlled data, enabling tasks such as dumping commits to disk or extracting specific object types from storage. Example uses include building Git trees from tracked files, filtering objects by hash, and serializing commit metadata for storage.",
      "description_length": 460,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Diffast_git",
      "library": "diffast-git",
      "description": "This module handles file system operations for Git objects, including trees, hashes, and commits, enabling their serialization, type filtering, and directory traversal. It allows persisting and reconstructing version-controlled data, such as dumping commits to disk or extracting specific object types. Main data types include tree entries, commit metadata, and object hashes, with operations for filtering, serializing, and traversing these elements. You can build Git trees from tracked files, filter objects by hash, or serialize commit data for storage.",
      "description_length": 557,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 3,
    "filtered_empty_modules": 4,
    "retention_rate": 0.42857142857142855
  },
  "statistics": {
    "max_description_length": 557,
    "min_description_length": 385,
    "avg_description_length": 467.3333333333333,
    "embedding_file_size_mb": 0.011325836181640625
  }
}