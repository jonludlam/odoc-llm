{
  "package": "gendarme-json",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:44:34.884819",
  "modules": [
    {
      "module_path": "Gendarme_json.Prelude",
      "library": "gendarme-json",
      "description": "This module defines core JSON encoding operations for the `Gendarme` library, including functions to convert values into JSON-compatible representations. It works with the `Gendarme.encoder` type and standard OCaml data structures like strings, integers, and lists. Concrete use cases include serializing configuration data and error messages into JSON format for logging or API responses.",
      "description_length": 389,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gendarme_json",
      "library": "gendarme-json",
      "description": "This module implements JSON serialization and deserialization for values in the Gendarme library, converting between `Gendarme.target` and `Yojson.Safe.t` representations. It supports operations like `pack`, `unpack`, `encode`, and `decode` to transform typed values into JSON strings and back, using the `Gendarme.encoder` type. It is used to serialize configuration data, error messages, and other structured values into JSON for logging, storage, or API communication.",
      "description_length": 471,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 471,
    "min_description_length": 389,
    "avg_description_length": 430.0,
    "embedding_file_size_mb": 0.02940654754638672
  }
}