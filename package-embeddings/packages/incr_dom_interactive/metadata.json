{
  "package": "incr_dom_interactive",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:57:41.545838",
  "modules": [
    {
      "module_path": "Incr_dom_interactive.Primitives.Button_state",
      "library": "incr_dom_interactive",
      "description": "Represents the state of a button in a user interface, with variants for pressed and not pressed. Used to track and update button interactions in a declarative UI framework. Enables handling user input by distinguishing between active and inactive button states.",
      "description_length": 261,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Incr_dom_interactive.Let_syntax.Let_syntax",
      "library": "incr_dom_interactive",
      "description": "This module provides monadic operations for composing incremental computations. It supports values wrapped in the `Incr_dom_interactive.t` type, allowing sequencing with `bind`, transforming values with `map`, combining two computations with `both`, and injecting pure values with `return`. These functions enable building dynamic user interfaces where state changes propagate efficiently through the application.",
      "description_length": 413,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Incr_dom_interactive.Let_syntax",
      "library": "incr_dom_interactive",
      "description": "This module provides monadic composition for incremental computations using the `Incr_dom_interactive.t` type. It includes `bind` (`>>=`), `map` (`>>|`), and `return` to sequence and transform asynchronous, state-dependent values. Concrete use cases include building reactive UI components that update in response to user input or external events.",
      "description_length": 347,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Incr_dom_interactive.Primitives",
      "library": "incr_dom_interactive",
      "description": "This module implements primitive UI components for interactive web applications, handling user input and state updates through functions like `text`, `button`, `dropdown_exn`, and `checkbox`. It works with basic data types such as strings, booleans, and options, along with custom state types like `Button_state.t`, to build dynamic interfaces. Concrete use cases include form inputs, user selection via dropdowns, and interactive button controls that respond to user actions.",
      "description_length": 476,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Incr_dom_interactive.Monad_infix",
      "library": "incr_dom_interactive",
      "description": "This module defines infix operators for monadic chaining and mapping over values in the `Incr_dom_interactive.t` type. It allows sequencing asynchronous or incremental computations using `>>=` and transforming their results with `>>|`. These operations are used when building interactive UI components that react to user input or model changes.",
      "description_length": 344,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Incr_dom_interactive",
      "library": "incr_dom_interactive",
      "description": "This module implements monadic operations and UI primitives for building interactive web components with incremental state updates. It provides functions like `bind`, `map`, and `join` for sequencing and transforming incremental computations, along with UI elements such as buttons, text inputs, and dropdowns that react to user actions. Concrete use cases include form handling, dynamic UI rendering based on state changes, and user interaction tracking through event-driven updates.",
      "description_length": 484,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 484,
    "min_description_length": 261,
    "avg_description_length": 387.5,
    "embedding_file_size_mb": 0.087371826171875
  }
}