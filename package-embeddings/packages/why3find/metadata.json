{
  "package": "why3find",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 12,
  "creation_timestamp": "2025-07-15T23:07:40.325086",
  "modules": [
    {
      "module_path": "Why3find.Global.Sites",
      "library": "why3find",
      "description": "This module defines lists of package and resource locations used for managing external dependencies and assets. It works with `Dune_site.Private_.Helpers.Location.t` values, which represent paths or identifiers for these resources. Concrete use cases include locating installed packages and shared resources during build or runtime operations.",
      "description_length": 343,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Dump",
      "library": "why3find",
      "description": "This module provides a collection of pretty-printing functions for various Why3 internal data structures, including identifiers, terms, types, expressions, and symbols. Each function is designed to format and output detailed representations of these entities for debugging or logging purposes. Use cases include inspecting the structure of terms and types during development or analyzing expression trees in Why3's intermediate representation.",
      "description_length": 443,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Version",
      "library": "why3find",
      "description": "Stores and provides access to the current version of the Why3find tool as a string. Exposes a single value `version` that represents the semantic version number. Used to check or display the version of Why3find at runtime or in diagnostic output.",
      "description_length": 246,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Global",
      "library": "why3find",
      "description": "This module organizes and manages external dependencies and resource locations using structured path or identifier values. It provides lists of package and resource locations, supporting operations to resolve and access installed packages and shared assets during build or runtime. Main data types include lists of `Dune_site.Private_.Helpers.Location.t` values, which represent specific resource identifiers. Example uses include retrieving the location of an installed package or resolving shared resources needed for execution.",
      "description_length": 530,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Meta",
      "library": "why3find",
      "description": "This module handles package metadata for Why3 installations, providing access to package names, paths, dependencies, and installation status. It includes functions to locate shared files, resolve package paths, retrieve metadata for installed packages, and install new packages. Concrete use cases include managing Why3 package dependencies, querying installed package information, and installing packages with their dependencies in the correct order.",
      "description_length": 451,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Prover",
      "library": "why3find",
      "description": "This module manages theorem prover representation, selection, and configuration validation. It operates on prover descriptions and instances, supporting version-based comparison, pattern matching for precise prover identification, and environment-aware configuration retrieval. These capabilities are used to resolve prover dependencies during proof session initialization or ensure environment compatibility by validating prover availability.",
      "description_length": 443,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Id",
      "library": "why3find",
      "description": "This module provides utilities for identifier manipulation, source location extraction, and resolution of structured paths within Why3's syntax tree. It operates on identifier values and string-based qualified paths, supporting operations like hashing, comparison, category detection, and context-sensitive pretty-printing with variants for proof-related formatting. Typical use cases include resolving identifiers to their declaration sites, extracting file/line metadata for diagnostics, and generating human-readable representations of program entities during analysis or tool interactions.",
      "description_length": 593,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Why3find.Config",
      "library": "why3find",
      "description": "Handles configuration and environment setup for Why3 projects using JSON files. It provides functions to load, save, and convert configuration data, including paths, provers, and packages, while supporting environment creation with customizable load paths. Concrete use cases include initializing project-specific settings and managing Why3 environments with associated metadata.",
      "description_length": 379,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Why3find.Tactic",
      "library": "why3find",
      "description": "This module defines operations for managing and querying tactics, including retrieving named tactics from an environment, comparing tactics for equality, and formatting tactic output. It works with the `tactic` type, string identifiers, and environment contexts. Concrete use cases include selecting a list of tactics by name, looking up individual tactics, and printing tactic names and formatted descriptions using a formatter.",
      "description_length": 429,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Why3find.Vc",
      "library": "why3find",
      "description": "This module processes Why3 tasks to extract structured chunks of code, such as goals and conditions, along with their source ranges. It works with Why3's task and theory types, organizing verification conditions into labeled segments. Use it to analyze or report on specific parts of Why3 proof scripts, such as isolating goals or conditional expressions for further processing.",
      "description_length": 378,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Why3find.Wutil",
      "library": "why3find",
      "description": "This module handles file extensions, path parsing, and loading of Why3 theories and modules. It provides functions to iterate over identifiers in declarations, symbol maps, and module instantiations. Additionally, it includes printers for various Why3 constructs like theories, modules, and declarations, supporting structured output formatting.",
      "description_length": 345,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Why3find",
      "library": "why3find",
      "description": "The Why3find module integrates tools for inspecting, configuring, and interacting with Why3's internal structures and external dependencies. It supports operations on data types such as identifiers, terms, types, expressions, symbols, provers, tactics, and configuration metadata, enabling tasks like pretty-printing, version checking, package management, and tactic querying. Users can resolve package locations, extract source ranges from tasks, format expressions for debugging, or configure proof environments with specific provers and load paths. Specific examples include retrieving the installation path of a Why3 package, pretty-printing a term for diagnostic output, or selecting a prover based on version and environment constraints.",
      "description_length": 743,
      "index": 11,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 14,
    "meaningful_modules": 12,
    "filtered_empty_modules": 2,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 743,
    "min_description_length": 246,
    "avg_description_length": 443.5833333333333,
    "embedding_file_size_mb": 0.044005393981933594
  }
}