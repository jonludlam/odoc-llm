{
  "package": "mmo",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:29.649970",
  "modules": [
    {
      "module_path": "Mmo.V3",
      "library": "mmo",
      "description": "This module provides core 3D vector arithmetic operations including addition, subtraction, dot and cross products, normalization, and magnitude calculation, alongside utilities for generating axis-aligned vectors and computing angular differences. It operates on 3D vectors represented as `Mmo.V3.t`, supporting conversions to/from tuples and string formats, with specialized functions for distance metrics (Euclidean and squared) and compact string serialization. Typical applications include 3D geometry processing, physics simulations, and scenarios requiring precise spatial calculations or vector normalization.",
      "description_length": 616,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mmo.Math",
      "library": "mmo",
      "description": "This module provides trigonometric operations including cosine and sine calculations, degree-radian conversions, and checks for approximate equality and non-zero distances. It works with floating-point numbers and a custom `cosin` type that holds paired cosine and sine values. Concrete use cases include calculating dihedral angles between vectors, converting angular measurements, and comparing floating-point values with tolerance thresholds.",
      "description_length": 445,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mmo.SO3",
      "library": "mmo",
      "description": "This module implements quaternion-based rotation generation and sampling for 3D orientations. It provides a super Fibonacci sequence for quaternion interpolation, along with functions to generate arrays of evenly distributed rotations and orientation samples. These operations are used for creating smooth 3D animations and procedural object placement in 3D space.",
      "description_length": 364,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mmo.Quat",
      "library": "mmo",
      "description": "This module implements quaternion operations for representing 3D rotations, including creation from axis-angle and conversion to and from strings. It works with float values and vectors from the V3 module to perform rotation calculations. Concrete use cases include camera orientation in 3D graphics and interpolation between rotations in animation systems.",
      "description_length": 357,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mmo.Rot",
      "library": "mmo",
      "description": "This module implements 3D rotation matrices with 9 elements arranged in a flat record. It supports creating identity, axis-aligned, and arbitrary rotations, composing rotations, converting to/from quaternions and axis-angle representations, and applying rotations to 3D vectors. Concrete use cases include 3D graphics transformations, physics simulations, and robotics control systems.",
      "description_length": 385,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mmo",
      "library": "mmo",
      "description": "This module provides a comprehensive toolkit for 3D spatial computations, integrating vector arithmetic, trigonometric functions, quaternions, and rotation matrices into a unified system for handling orientation, rotation, and geometric operations. Key data types include 3D vectors, quaternions, rotation matrices, and paired cosine-sine values, with operations for addition, normalization, conversion, interpolation, and application of transformations. It enables tasks such as computing angular differences, generating smooth 3D animations via quaternion sampling, converting between rotation representations, and performing precise spatial calculations like Euclidean distance or dihedral angle measurement. Specific applications include physics simulations, 3D graphics, robotics, and procedural object placement.",
      "description_length": 818,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 818,
    "min_description_length": 357,
    "avg_description_length": 497.5,
    "embedding_file_size_mb": 0.022228240966796875
  }
}