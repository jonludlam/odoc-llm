{
  "package": "orthologic-coq",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:58:56.440027",
  "modules": [
    {
      "module_path": "OLCoq.Ce_api.Constrhash",
      "library": "orthologic-coq.plugin",
      "description": "This implementation offers efficient key-value storage and manipulation where keys are symbolic representations of Coq terms, supporting atomic and batch modifications through sequence-driven operations. It operates on a polymorphic hash table structure mapping normalized term representations to arbitrary values, enabling use cases like term indexing, proof state caching, or intermediate result tracking in formal verification workflows. The design emphasizes bulk updates via lazy sequences, aligning with Coq's computational model for structured term manipulation.",
      "description_length": 569,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OLCoq.Ce_api",
      "library": "orthologic-coq.plugin",
      "description": "This module enables term decomposition, logical formula manipulation, and proof automation using Coq's internal representations (`Constr.constr`, `Evd.evar_map`) paired with a hash-based storage system for terms. It structures logical expressions via a cached, uniquely identified GADT-like type (`cert_formula`), supporting transformations, certificate-based reasoning, and goal normalization. Key use cases include optimizing logical expressions, automating proofs through cached results, and managing environment-dependent term conversions with efficient hashing.",
      "description_length": 566,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OLCoq.Ol",
      "library": "orthologic-coq.plugin",
      "description": "This module enables logical formula manipulation through operations like normalization, contradiction detection, and lattice-based comparison, while managing bidirectional transformations between polarized and normalized forms. It works with interlinked formula representations (`formula`, `polar_formula`, `normal_formula`) that use unique keys and mutable references to enable efficient caching of comparisons and dynamic updates. These capabilities are particularly useful in formal verification tasks requiring structured logical reasoning and transformation of complex expressions.",
      "description_length": 586,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OLCoq",
      "library": "orthologic-coq.plugin",
      "description": "This module provides term decomposition, logical formula manipulation, and proof automation using Coq's internal representations paired with a hash-based storage system. It works with logical expressions structured as a cached, uniquely identified GADT-like type, supporting transformations, certificate-based reasoning, and goal normalization. Key use cases include optimizing logical expressions, automating proofs through cached results, and managing environment-dependent term conversions with efficient hashing.",
      "description_length": 516,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 4,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 586,
    "min_description_length": 516,
    "avg_description_length": 559.25,
    "embedding_file_size_mb": 0.05840587615966797
  }
}