{
  "package": "resto-cohttp-self-serving-client",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:03.756755",
  "modules": [
    {
      "module_path": "Resto_cohttp_self_serving_client.Self_serving_client.Make",
      "library": "resto-cohttp-self-serving-client",
      "description": "This module provides a `launch` function that creates a self-contained RPC client capable of executing calls locally without external connections. It works with REST directories and media types, using an encoding module to handle data serialization. Useful for testing or implementing local services that mimic remote server behavior, with fixed access controls and in-memory execution.",
      "description_length": 386,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resto_cohttp_self_serving_client.Self_serving_client",
      "library": "resto-cohttp-self-serving-client",
      "description": "This module enables local execution of RPC clients without external connections, using REST directories and media types with customizable data serialization. It supports testing and implementing self-contained services that simulate remote behavior in-memory. Key operations include launching clients with fixed access controls and handling requests through encoding and routing. Example use cases include mocking server endpoints or running local services with predefined responses.",
      "description_length": 483,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_self_serving_client",
      "library": "resto-cohttp-self-serving-client",
      "description": "This module allows RPC clients to execute locally without external connections, using REST directories and customizable media types for data serialization. It provides in-memory routing and request handling, supporting testing and self-contained service simulation. Key data types include endpoints, encodings, and access control policies, with operations to launch clients and define response behaviors. Example uses include mocking server interactions and implementing local services with predefined routing logic.",
      "description_length": 516,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 516,
    "min_description_length": 386,
    "avg_description_length": 461.6666666666667,
    "embedding_file_size_mb": 0.011317253112792969
  }
}