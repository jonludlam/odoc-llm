{
  "package": "resto-cohttp-self-serving-client",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:54:05.865281",
  "modules": [
    {
      "module_path": "Resto_cohttp_self_serving_client.Self_serving_client.Make",
      "library": "resto-cohttp-self-serving-client",
      "description": "This module provides a `launch` function that creates a self-serving client for handling RPCs locally without external connections. It works with `unit` directories and media types, using in-memory execution to simulate server behavior. Useful for testing or when local execution of RPCs is preferred over remote calls, such as mocking external services or enabling offline functionality.",
      "description_length": 388,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_self_serving_client.Self_serving_client",
      "library": "resto-cohttp-self-serving-client",
      "description": "This module implements a self-serving HTTP client for handling Cohttp requests, specifically designed for environments where the client must manage its own service lifecycle. It provides functions for initiating HTTP requests, managing connections, and handling responses without relying on external event loops or runtime systems. Concrete use cases include embedded systems or standalone applications that require HTTP connectivity while maintaining full control over execution flow.",
      "description_length": 485,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_self_serving_client",
      "library": "resto-cohttp-self-serving-client",
      "description": "This module provides functions to initiate and manage HTTP requests and responses, including connection handling and request dispatching. It works directly with Cohttp request and response types, along with custom connection state tracking. It is used in embedded or standalone applications where the client must control its own execution flow without depending on external event loops.",
      "description_length": 386,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 485,
    "min_description_length": 386,
    "avg_description_length": 419.6666666666667,
    "embedding_file_size_mb": 0.043890953063964844
  }
}