{
  "package": "ocamlapi",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:31.323469",
  "modules": [
    {
      "module_path": "Ocamlapi.Make_with_config.Routes",
      "library": "ocamlapi",
      "description": "This module defines a list of HTTP routes that can be used to construct a router instance with custom default values. It works with route definitions, including path patterns and request handlers, typically tied to a specific HTTP library like Cohttp_async. A concrete use case is passing the routes list to `create_from_modules` to build a fully configured HTTP server router.",
      "description_length": 377,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocamlapi.Make.Routes",
      "library": "ocamlapi",
      "description": "This module defines a list of HTTP routes that can be dynamically passed to routing functions. It works with `route` values, which encapsulate path patterns and request handlers. Use it to build modular, composable route tables for web applications using Cohttp_async.",
      "description_length": 268,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocamlapi.Make",
      "library": "ocamlapi",
      "description": "This module builds a router for handling HTTP requests by matching paths and methods to registered callbacks, using Cohttp_async types for requests, responses, and IO. It supports defining typed routes, handling exceptions, and providing fallback responses, enabling creation of RESTful APIs with structured routing. The child module manages route tables as lists of `route` values, allowing dynamic composition and reuse of routing logic across different parts of an application. Example use cases include serving JSON endpoints, handling route parameters, and organizing routes into modular components.",
      "description_length": 604,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ocamlapi.Route_exceptions",
      "library": "ocamlapi",
      "description": "This module defines exceptions raised during the construction and validation of route configurations. It handles malformed routes, duplicate path definitions, and invalid HTTP method assignments. Useful for catching configuration errors when initializing routers in web applications.",
      "description_length": 283,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocamlapi.Make_with_config",
      "library": "ocamlapi",
      "description": "This module configures a router with customizable defaults for handling HTTP requests, including exception handling and fallback responses. It supports defining RESTful endpoints with method-specific handlers, route variables, and error management through route definitions and callbacks. The child module provides a structured list of routes that, when passed to `create_from_modules`, builds a fully configured router compatible with libraries like Cohttp_async. For example, you can define a route that responds to `GET /users/:id` with a custom handler and specify a default 404 response for unmatched paths.",
      "description_length": 612,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocamlapi",
      "library": "ocamlapi",
      "description": "This module implements a path-based HTTP routing system for building RESTful APIs, using Cohttp_async for handling requests and responses. It centers around typed routes that match HTTP methods and paths to callbacks, supporting route parameters, error handling, and fallback responses. The system allows dynamic composition of route tables and detects configuration errors such as duplicates or invalid methods. Example usage includes defining a `GET /users/:id` endpoint with a typed handler, or setting up a default 404 response for unmatched routes.",
      "description_length": 553,
      "index": 5,
      "embedding_norm": 0.9999998807907104
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 612,
    "min_description_length": 268,
    "avg_description_length": 449.5,
    "embedding_file_size_mb": 0.022184371948242188
  }
}