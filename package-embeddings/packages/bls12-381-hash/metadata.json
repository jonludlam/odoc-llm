{
  "package": "bls12-381-hash",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 9,
  "creation_timestamp": "2025-08-14T23:06:11.094447",
  "modules": [
    {
      "module_path": "Bls12_381_hash.Poseidon.Parameters",
      "library": "bls12-381-hash",
      "description": "This module defines parameter sets for the Poseidon hash function instantiated over the BLS12-381 scalar field, specifically for 128-bit and 256-bit security levels. It includes constants such as state size, round counts, and matrices defining the linear layer and round constants used in the permutation. These parameters are used directly in configuring the Poseidon permutation function for cryptographic hashing in zero-knowledge proof systems or blockchain applications.",
      "description_length": 475,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bls12_381_hash.Anemoi.Parameters",
      "library": "bls12-381-hash",
      "description": "This module defines constants and parameter configurations for the Anemoi permutation over the BLS12-381 scalar field, specifically tailored for 128-bit security levels with varying state sizes. It includes fixed parameters like exponents, generators, and helper functions to compute round counts and generate round constants based on the state size and security level. It is used to configure cryptographic hash functions and permutations in zero-knowledge proof systems relying on the BLS12-381 curve.",
      "description_length": 503,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bls12_381_hash.Griffin.Parameters",
      "library": "bls12-381-hash",
      "description": "This module defines parameters for the Griffin hash function instantiated over the BLS12-381 scalar field, specifically configured for 128-bit security. It includes round counts, state sizes, and precomputed constants used during hash computation, along with the substitution box exponent and its inverse. These parameters are used to configure the Griffin permutation with either a state size of 3 or 4 elements for cryptographic hashing in applications requiring BLS12-381 compatibility.",
      "description_length": 489,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bls12_381_hash.Rescue.Parameters",
      "library": "bls12-381-hash",
      "description": "This module defines the parameters for the Rescue hash function instantiated over the BLS12-381 scalar field, specifically configured for 128-bit security and a state size of 3. It includes the linear layer matrix, round constants, state size, and number of rounds as a record of type `t`. The provided `security_128_state_size_3` value gives concrete parameters for this configuration, intended for use in cryptographic applications requiring a secure permutation with the `x^5` S-box.",
      "description_length": 486,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bls12_381_hash.Griffin",
      "library": "bls12-381-hash",
      "description": "This module implements the Griffin hash function over the BLS12-381 scalar field with 128-bit security, using a state size of 3 or 4 elements and the substitution function `x^5`. It provides functions to initialize a context, set and retrieve the internal state, apply the full permutation, or execute individual rounds with specified round constants. Use cases include cryptographic hashing in zero-knowledge proof systems and verifiable computation where BLS12-381 is required.",
      "description_length": 479,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bls12_381_hash.Poseidon",
      "library": "bls12-381-hash",
      "description": "This module implements the Poseidon hash function over the BLS12-381 scalar field using a permutation based on `x^5`. It provides functions to configure and manage a hash context with customizable state size, round counts, and constants, and supports operations like state retrieval, setting, and permutation application. It is used in cryptographic protocols requiring zero-knowledge proofs or blockchain-based hashing with high security levels.",
      "description_length": 446,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bls12_381_hash.Anemoi",
      "library": "bls12-381-hash",
      "description": "This module implements the Anemoi permutation and Jive mode over the BLS12-381 scalar field, operating on a context (`ctxt`) that holds a mutable state array of field elements. It provides functions to configure the permutation via parameters, apply individual rounds or the full permutation, and compute the Jive compression function for a 128-bit input. Concrete use cases include building cryptographic hash functions and compression functions for zero-knowledge proof systems requiring 128-bit security on the BLS12-381 curve.",
      "description_length": 530,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bls12_381_hash.Rescue",
      "library": "bls12-381-hash",
      "description": "This module implements a cryptographic permutation based on the Rescue algorithm over the BLS12-381 scalar field, using the `x^5` S-box and configured for 128-bit security with a state size of 3. It provides functions to allocate a context with specified parameters, access and modify the internal state, and apply the Rescue permutation. Concrete use cases include building hash functions or zero-knowledge proof systems requiring a secure, configurable permutation.",
      "description_length": 467,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bls12_381_hash",
      "library": "bls12-381-hash",
      "description": "This module implements cryptographic hash functions and permutations over the BLS12-381 scalar field, supporting algorithms like Poseidon, Rescue, Anemoi, and Griffin. It operates on field elements and mutable state arrays, enabling configuration of security parameters such as state size, round counts, and S-box exponents. Concrete applications include constructing zero-knowledge proof systems, blockchain hashing, and verifiable computation requiring BLS12-381 compatibility.",
      "description_length": 479,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 530,
    "min_description_length": 446,
    "avg_description_length": 483.77777777777777,
    "embedding_file_size_mb": 0.13081645965576172
  }
}