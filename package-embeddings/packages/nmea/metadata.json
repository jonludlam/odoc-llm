{
  "package": "nmea",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:30.482280",
  "modules": [
    {
      "module_path": "Nmea.Sentence",
      "library": "nmea",
      "description": "This module defines data structures for parsing and representing NMEA GPS sentences, including GGA, RMC, GSV, and others, along with associated types for coordinates, satellite data, and magnetic variation. It provides functions to convert time and date values from NMEA formats to Unix timestamps, and a function to convert sentence data into a human-readable string. Use cases include processing GPS data streams for navigation, logging, and real-time tracking applications.",
      "description_length": 476,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nmea.Lexer",
      "library": "nmea",
      "description": "This module provides functions for lexing NMEA sentences by converting raw input into structured tokens. It operates on `Lexing.lexbuf` and produces tokens defined in `Nmea.Parser`, using internal lexing tables for efficient parsing. It is used to break down NMEA message streams into meaningful components for further processing.",
      "description_length": 330,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nmea.Parser",
      "library": "nmea",
      "description": "Parses NMEA 0183 sentences into structured tokens and sentence types. It processes raw input using a lexer to identify message types like GGA, RMC, and VDM, along with numeric and string values. This module is used to decode GPS and marine instrument data streams into usable message records.",
      "description_length": 292,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nmea.Coord",
      "library": "nmea",
      "description": "This module defines data types for geographic coordinates, including latitude and longitude values paired with cardinal directions (N/S/E/W). It provides functions to construct, compare, and convert coordinate values, such as parsing raw values into typed coordinates and transforming coordinates into readable strings. Concrete use cases include processing GPS data from NMEA sentences where latitude and longitude are represented with degrees and direction.",
      "description_length": 459,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nmea.Parse",
      "library": "nmea",
      "description": "Parses NMEA sentences from strings or input channels, returning structured sentence or coordinate data. Works with raw string inputs and standard input channels to extract GPS-related data. Useful for reading GPS logs line-by-line or extracting position data directly from a serial stream.",
      "description_length": 289,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nmea",
      "library": "nmea",
      "description": "This module processes NMEA GPS data streams by parsing raw input into structured sentence types and extracting geographic coordinates. It supports key sentence types like GGA, RMC, and GSV, and handles conversion of time, date, and coordinate values into standard formats. Lexing functions break down input into tokens for further processing, while coordinate types manage direction-based values and string representations. Examples include decoding GPS logs into usable message records, converting latitude/longitude from NMEA format, and transforming timestamp data into Unix time.",
      "description_length": 583,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 583,
    "min_description_length": 289,
    "avg_description_length": 404.8333333333333,
    "embedding_file_size_mb": 0.022231101989746094
  }
}