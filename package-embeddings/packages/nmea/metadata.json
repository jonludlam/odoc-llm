{
  "package": "nmea",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:00.749581",
  "modules": [
    {
      "module_path": "Nmea.Coord",
      "description": "Returns true when two coordinates are identical, extracts latitude and longitude values, and converts coordinates to strings. Operates on tuples combining floating-point numbers with direction indicators (north-south, east-west). Parses NMEA latitude and longitude values from numeric and directional inputs.",
      "description_length": 308,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nmea.Lexer",
      "description": "Processes input streams to identify and extract tokens according to predefined lexical rules. Operates on lexing buffers and returns parsed tokens matching a grammar's lexical structure. Used to convert raw source code into a sequence of recognized syntactic elements for further processing.",
      "description_length": 291,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nmea.Parse",
      "description": "Parses strings into Sentence.t values, with a fallback version that returns an option. Reads sentences and coordinates from input channels, returning them as options. Used to process textual input and extract structured data for further analysis.",
      "description_length": 246,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nmea.Parser",
      "description": "Parses a stream of tokens into a structured sentence representation using a provided lexer. It processes input through a lexical buffer and maps token sequences to syntactic constructs. This enables transformation of raw input into a domain-specific abstract syntax tree.",
      "description_length": 271,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nmea.Sentence",
      "description": "Converts NMEA time and date formats to Unix time using specific integer inputs. Handles geographic data types such as magnetic variation and deviation, along with GPS message structures like GGA, RMC, and ZDA. Generates human-readable representations of structured sentence data for logging or display.",
      "description_length": 302,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "nmea",
      "description": "Parses NMEA sentences to extract position, velocity, and time data from GPS sources. Processes GGA, RMC, and other common sentence types to retrieve structured location information. Converts raw string data into typed records for use in navigation and tracking applications.",
      "description_length": 274,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nmea",
      "description": "Processes NMEA data by comparing and converting coordinates, parsing input streams into tokens, extracting structured sentences, and converting time and geographic information into usable formats. It handles tuples with floating-point values and direction indicators, token sequences, and string-based sentence representations. Operations include coordinate comparison, lexical analysis, sentence parsing, and time conversion, enabling tasks like GPS data extraction and format transformation. Examples include checking coordinate equality, parsing raw input into syntactic elements, and converting NMEA time to Unix time.",
      "description_length": 622,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 622,
    "min_description_length": 246,
    "avg_description_length": 330.57142857142856,
    "embedding_file_size_mb": 0.025859832763671875
  }
}