{
  "package": "functoria-runtime",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:44.696602",
  "modules": [
    {
      "module_path": "Functoria_runtime.Arg",
      "description": "Provides functions to define and parse command-line arguments at runtime, including optional, required, and flag-based options. Works with types such as boolean, lists, and custom parsed values through conversion functions. Used to configure application behavior based on user input during execution.",
      "description_length": 300,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Functoria_runtime.Key",
      "description": "Provides functions to create and retrieve runtime keys based on command-line arguments, with support for default values and integration with Cmdliner. Operates on values of arbitrary type wrapped in a `t` type. Used to bind command-line options to runtime values and access their parsed or default states.",
      "description_length": 305,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "functoria-runtime",
      "description": "Provides functions to generate, configure, and deploy unikernel applications targeting Xen, KVM, and BHyve. Works with configuration files, build scripts, and platform-specific metadata to assemble standalone network applications. Used to automate the creation of lightweight, secure unikernels for cloud and embedded deployments.",
      "description_length": 330,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Functoria_runtime",
      "description": "defines runtime configuration through command-line argument parsing and key-based value retrieval, enabling dynamic application behavior. It handles boolean, list, and custom types via conversion functions, and supports default values through a typed `t` structure. Users can bind options to runtime keys and access their parsed or default states. This allows for flexible configuration, such as setting logging levels or input sources based on user input.",
      "description_length": 456,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 456,
    "min_description_length": 300,
    "avg_description_length": 347.75,
    "embedding_file_size_mb": 0.014941215515136719
  }
}