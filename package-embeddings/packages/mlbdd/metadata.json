{
  "package": "mlbdd",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:14.644317",
  "modules": [
    {
      "module_path": "MLBDD.Raw",
      "description": "This module enables logical operations such as boolean manipulations, implication, XOR, and quantification on abstract types like `t` (logical terms) and `man` (structure managers), alongside variable handling and truth value transformations. It supports advanced tasks like SAT solving, prime implicant generation, and solution iteration, leveraging data structures including `var` arrays, `e`/`b` elements, and history tracking. Key use cases involve boolean logic optimization, symbolic reasoning, and variable permutation within constrained logical domains.",
      "description_length": 561,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MLBDD.WeakHash",
      "description": "Compares keys using a provided equality function and generates hash values for key indexing. Operates on arbitrary key types, ensuring consistent hashing for equivalent keys. Used to implement hash tables with custom equality and hashing strategies, such as structural comparison with proper NaN handling or physical equality for mutable structures.",
      "description_length": 349,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "mlbdd",
      "description": "Creates and manipulates binary decision diagrams (BDDs) with operations like conjunction, disjunction, and negation. Works with BDD nodes, variables, and boolean expressions to represent and evaluate logical formulas. Used in formal verification, model checking, and symbolic computation tasks where efficient logical reasoning is required.",
      "description_length": 340,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MLBDD",
      "description": "Provides operations to manage a key-value store with dynamic resizing, including inserting, removing, and retrieving values by key. Works with a polymorphic table type that maps unique keys to associated values. Used to efficiently track and update state in applications requiring frequent lookups and modifications, such as configuration management or session tracking.",
      "description_length": 370,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 561,
    "min_description_length": 340,
    "avg_description_length": 405.0,
    "embedding_file_size_mb": 0.014948844909667969
  }
}