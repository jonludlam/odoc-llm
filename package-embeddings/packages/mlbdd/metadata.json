{
  "package": "mlbdd",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:53.295032",
  "modules": [
    {
      "module_path": "MLBDD.WHS",
      "library": "mlbdd",
      "description": "This module implements a hash table with support for key-value operations including insertion, removal, lookup, and iteration. It works with a polymorphic value type `'a` and a specific key type `key`, maintaining a dynamic mapping between keys and their associated values. Concrete use cases include efficient storage and retrieval of bindings in symbol tables, caching mechanisms, and state management requiring constant-time access.",
      "description_length": 435,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MLBDD.WeakHash",
      "library": "mlbdd",
      "description": "Implements a weak-key hash table where keys are of type `H.t` and values are arbitrary. Supports standard hash table operations like insertion, lookup, and iteration, with the key feature that entries are automatically removed when keys are no longer referenced elsewhere. Useful for caching or memoization scenarios where holding onto values should not prevent garbage collection of keys.",
      "description_length": 389,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MLBDD.Raw",
      "library": "mlbdd",
      "description": "This module provides operations for constructing and manipulating Binary Decision Diagrams (BDDs) through logical connectives, quantification, and structural transformations. It works with BDD nodes (`t`), variable sets (`support`), and a manager type (`man`) for memory and state control, supporting tasks like variable reordering, prime implicant extraction, and solution enumeration. Use cases include symbolic reasoning, formal verification, and combinatorial problem solving where efficient Boolean function manipulation is required.",
      "description_length": 538,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MLBDD",
      "library": "mlbdd",
      "description": "The module combines core BDD operations with specialized storage and caching utilities to support efficient manipulation of Boolean functions. It provides key data types like BDD nodes (`t`), variable sets (`support`), and a manager (`man`), along with hash tables for strong and weak key-value mappings. Operations include logical connectives, quantification, variable reordering, and cache-aware node management, enabling tasks such as formal verification and combinatorial optimization. Examples include building BDDs from logical expressions, extracting prime implicants, and using weak-key tables to cache intermediate results without hindering garbage collection.",
      "description_length": 669,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 669,
    "min_description_length": 389,
    "avg_description_length": 507.75,
    "embedding_file_size_mb": 0.014935493469238281
  }
}