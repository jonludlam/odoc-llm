{
  "package": "flac",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:23.241137",
  "modules": [
    {
      "module_path": "Flac.Encoder.File",
      "library": "flac",
      "description": "This module encodes audio data into a native FLAC file using either a provided Unix file descriptor or a file path. It works with FLAC encoder parameters, audio samples, and file handles, supporting metadata like comments. It is used to write FLAC files directly to disk, such as saving processed audio streams or converting raw audio to compressed FLAC format.",
      "description_length": 361,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Flac.Decoder.File",
      "library": "flac",
      "description": "This module decodes FLAC audio from local files using file descriptors or file paths. It provides handles that encapsulate a decoder, file descriptor, stream info, and optional comments. Concrete use cases include streaming audio data from disk and extracting metadata from FLAC files.",
      "description_length": 285,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Flac.Encoder",
      "library": "flac",
      "description": "This module encodes raw PCM audio data into the FLAC format, converting input to floating-point arrays and supporting metadata via Vorbis comments. It provides operations to write FLAC files directly to disk using either a file path or a Unix file descriptor, integrating encoder parameters, audio samples, and file handling. Child modules extend this functionality by enabling direct file output, allowing use cases such as converting WAV files or raw PCM streams into tagged, compressed FLAC files. Specific examples include saving processed audio from memory or encoding live audio streams with custom metadata.",
      "description_length": 614,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Flac.Decoder",
      "library": "flac",
      "description": "This module decodes FLAC audio streams into raw PCM data using a configurable decoder with custom I/O callbacks, supporting frame-level processing and sample-accurate seeking. It provides direct access to decoding state and stream info, while its child module handles file-based decoding, exposing concrete functionality like streaming audio from disk or extracting metadata from FLAC files. Key data types include decoder instances, stream info, and FLAC frames, with operations for reading, seeking, and converting audio data. Example uses include converting FLAC files to WAV format and analyzing audio content by accessing raw PCM output.",
      "description_length": 642,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Flac",
      "library": "flac",
      "description": "This module provides FLAC audio encoding and decoding capabilities, handling conversion between raw PCM data and the FLAC format with support for metadata via Vorbis comments. It includes data types for encoder and decoder instances, stream information, and audio frames, offering operations to write FLAC files from raw audio, decode FLAC streams to PCM data, and manipulate metadata. The module enables use cases such as converting WAV files to FLAC, encoding live audio streams with custom tags, and extracting or analyzing raw audio from FLAC files. Specific functionality includes file-based encoding, frame-level decoding, and sample-accurate seeking.",
      "description_length": 657,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 657,
    "min_description_length": 285,
    "avg_description_length": 511.8,
    "embedding_file_size_mb": 0.018606185913085938
  }
}