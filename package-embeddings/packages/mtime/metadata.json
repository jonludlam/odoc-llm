{
  "package": "mtime",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:52:21.180466",
  "modules": [
    {
      "module_path": "Mtime.Span",
      "library": "mtime",
      "description": "This module provides arithmetic operations for measuring and manipulating non-negative time intervals, including scaling, addition, and absolute difference calculations. It operates on time spans represented as `Mtime.span` values, which can be converted to and from numeric types (integers and floats) in nanoseconds. These capabilities are useful for tasks like calculating durations between events, converting timing data for logging, or formatting intervals with SI prefixes for human-readable diagnostics.",
      "description_length": 510,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mtime",
      "library": "mtime",
      "description": "This module handles monotonic time measurements with timestamps and time spans, offering precise timing operations unaffected by system clock changes. It supports timestamp comparisons, span arithmetic, and conversions to and from nanosecond integers, enabling accurate event timing, duration calculations, and inter-process time synchronization. Concrete uses include profiling code execution, measuring response times in distributed systems, and tracking event intervals in real-time applications.",
      "description_length": 499,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mtime_clock",
      "library": "mtime.clock",
      "description": "This module provides precise monotonic time measurement through functions like `elapsed`, `now`, and `counter`, which track time spans and timestamps independent of system clock adjustments. It operates on `Mtime.span` and `Mtime.t` types, with optional nanosecond-resolution raw integer interfaces via `elapsed_ns` and `now_ns`. Concrete use cases include measuring execution duration, tracking timeouts, and synchronizing timing across components where clock drift must be avoided.",
      "description_length": 483,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 510,
    "min_description_length": 483,
    "avg_description_length": 497.3333333333333,
    "embedding_file_size_mb": 0.04388904571533203
  }
}