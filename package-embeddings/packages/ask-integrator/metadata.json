{
  "package": "ask-integrator",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 15,
  "creation_timestamp": "2025-08-14T23:24:21.827833",
  "modules": [
    {
      "module_path": "Ask_integrator.Model.ServiceMappingRow.Fields.Direct",
      "library": "ask-integrator",
      "description": "This module provides operations to iterate over, fold, map, and query individual fields of a `ServiceMappingRow` record, specifically handling fields like `id`, `member_id`, `member_label`, and `created_at`. It supports working directly with string and `Ptime.t` values, allowing transformation, validation, and conditional checks on these fields. Concrete use cases include extracting field values, applying business logic to row data, and updating mutable fields in bulk.",
      "description_length": 473,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.Handler.Fields.Direct",
      "library": "ask-integrator",
      "description": "This module provides operations to iterate over, fold, map, and query individual fields of a `Ask_integrator.Model.Handler.t` record, including `id`, `member_id`, `label`, `questionnaires`, `created_at`, and `updated_at`. Each field is accessed or transformed with explicit permission handling via `Fieldslib.Field.t_with_perm`. It supports concrete workflows like validating field values, transforming timestamps, or checking conditions across specific fields during data processing or persistence.",
      "description_length": 499,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.QuestionnaireMappingRow.Fields.Direct",
      "library": "ask-integrator",
      "description": "This module processes rows in a questionnaire mapping structure by iterating over, folding, filtering, or mapping fields like service identifiers, labels, timestamps, and questionnaire references. It operates directly on `QuestionnaireMappingRow.t` values, applying functions to each field with specific type signatures for string and time values. Concrete use cases include validating field contents, transforming row data, or extracting values for external processing.",
      "description_length": 470,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ask_integrator.Model.QuestionnaireMapping.Fields.Direct",
      "library": "ask-integrator",
      "description": "This module provides operations to iterate over, fold, map, and validate fields of a questionnaire mapping, specifically handling its label, associated questionnaire, and timestamps. It works directly with `Ask_integrator.Model.QuestionnaireMapping.t`, `Ask.Model.Questionnaire.t`, and `Ptime.t` values. Concrete use cases include transforming or inspecting individual fields during data synchronization, validation, or serialization processes.",
      "description_length": 444,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.QuestionnaireMappingRow.Fields",
      "library": "ask-integrator",
      "description": "This module directly manipulates `QuestionnaireMappingRow.t` values by providing field-level accessors and operations for strings and Ptime timestamps. It supports creating, mapping, folding, filtering, and iterating over row fields such as service_mapper, label, questionnaire, created_at, and updated_at. Concrete use cases include constructing questionnaire mapping rows from raw data, validating field values, and transforming or extracting specific fields for storage or display.",
      "description_length": 484,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.QuestionnaireMapping.Fields",
      "library": "ask-integrator",
      "description": "This module provides accessors and transformers for the fields of a questionnaire mapping, including its label, associated questionnaire, and timestamps. It supports operations to create, map, fold, iterate, and validate these fields directly. Concrete use cases include extracting or transforming individual components when synchronizing questionnaire data, validating mappings before storage, or preparing data for serialization.",
      "description_length": 431,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.ServiceMappingRow.Fields",
      "library": "ask-integrator",
      "description": "This module provides direct access to individual fields of a `ServiceMappingRow` record, including `id`, `member_id`, `member_label`, and `created_at`, supporting operations like mapping, folding, filtering, and field iteration. It works with string and `Ptime.t` data types, enabling transformations, validations, and bulk updates on these fields. Concrete use cases include extracting timestamps for logging, validating member identifiers, and transforming row data during persistence or retrieval.",
      "description_length": 500,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.Handler.Fields",
      "library": "ask-integrator",
      "description": "This module directly manipulates individual fields of a `Ask_integrator.Model.Handler.t` record, including `id`, `member_id`, `label`, `questionnaires`, `created_at`, and `updated_at`. It provides operations to iterate over, fold, map, and query these fields with explicit handling of field permissions via `Fieldslib.Field.t_with_perm`. Concrete use cases include validating field values during record creation, transforming timestamps, and checking constraints across specific fields before persistence or further processing.",
      "description_length": 527,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.QuestionnaireMappingRow",
      "library": "ask-integrator",
      "description": "This module defines a data structure representing a questionnaire mapping row with fields for service mapper, label, questionnaire, and timestamps. It provides operations to create, access, and compare rows, along with serialization and pretty-printing for debugging or logging. Concrete use cases include mapping database records to in-memory structures, validating questionnaire metadata, and preparing data for API responses or storage.",
      "description_length": 439,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.Handler",
      "library": "ask-integrator",
      "description": "This module defines a record type with identifiers, timestamps, and a list of questionnaires, offering functions to access individual fields, create instances with optional parameters, and convert to related model types. It supports operations like pretty-printing, equality checks, and field-level transformations, primarily used for managing structured data during integration workflows. Concrete use cases include assembling handler records from database rows and questionnaires, validating field values, and preparing data for persistence or API responses.",
      "description_length": 560,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model.ServiceMappingRow",
      "library": "ask-integrator",
      "description": "This module defines a record type with string and timestamp fields to represent service mapping data, including identifiers and creation timestamps. It provides constructors, accessors, and serialization functions for manipulating and inspecting individual records. Use cases include persisting service mappings with timestamps, validating member identifiers, and transforming row data during database interactions.",
      "description_length": 415,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ask_integrator.Model.QuestionnaireMapping",
      "library": "ask-integrator",
      "description": "This module defines a structured mapping between a label and a questionnaire with timestamps for tracking creation and updates. It provides constructors, accessors, and equality checks for managing questionnaire mappings directly. Use cases include synchronizing questionnaire data with external systems, validating mappings before persistence, and transforming individual fields during data processing.",
      "description_length": 403,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.MariaDb",
      "library": "ask-integrator",
      "description": "This module implements a MariaDB-backed handler for managing questionnaire integrations. It provides operations to create, find, update, and delete questionnaire records associated with members, supporting label-based filtering and lookup. The module works directly with member identifiers, questionnaire data structures, and timestamps to store and retrieve integration state in a relational database.",
      "description_length": 402,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator.Model",
      "library": "ask-integrator",
      "description": "This module implements data structures and operations for handling service and questionnaire mappings with timestamps, identifiers, and associated metadata. It supports creating, accessing, validating, and transforming records used in database interactions, API responses, and integration workflows. Specific use cases include mapping database rows to in-memory structures, synchronizing questionnaire data with external systems, and assembling handler records with optional parameters and field-level transformations.",
      "description_length": 518,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask_integrator",
      "library": "ask-integrator",
      "description": "This module implements operations for integrating questionnaire data with external systems using a MariaDB backend. It provides functions to map, validate, and transform questionnaire records with support for timestamped storage, label-based filtering, and member-specific synchronization. Concrete use cases include persisting questionnaire responses to a relational database and reconstructing integration workflows from stored state.",
      "description_length": 436,
      "index": 14,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 15,
    "meaningful_modules": 15,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 560,
    "min_description_length": 402,
    "avg_description_length": 466.73333333333335,
    "embedding_file_size_mb": 0.21772003173828125
  }
}