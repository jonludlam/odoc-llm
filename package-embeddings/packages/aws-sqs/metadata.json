{
  "package": "aws-sqs",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 105,
  "creation_timestamp": "2025-06-18T16:48:48.586365",
  "modules": [
    {
      "module_path": "Aws_sqs.Types.BinaryList",
      "description": "Constructs a list of binary data blobs, parses XML nodes into such lists, converts them to query parameters, serializes to JSON lists, and deserializes JSON into lists. Operates on lists of binary data blobs and JSON values. Used to handle binary data in AWS API requests and responses, including XML parsing and query string encoding.",
      "description_length": 335,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.StringList",
      "description": "Provides functions to create empty lists, parse XML nodes into string lists, convert lists to query parameters, serialize to JSON lists, and deserialize from JSON. Operates on lists of string-like values wrapped in a custom type. Used to handle AWS query parameters and JSON representations of string arrays.",
      "description_length": 308,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageAttributeValue",
      "description": "Provides operations to construct, parse, serialize, and deserialize message attribute values with support for string, binary, and list types. Works with AWS-specific types such as strings, blobs, and lists of these types. Used to prepare and process message attributes in AWS SNS and SQS interactions.",
      "description_length": 301,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageSystemAttributeNameForSends",
      "description": "Converts between a custom type and string, XML, and JSON representations, supporting bidirectional mapping and parsing. Operates on a polymorphic type that encapsulates message system attribute names for sends. Used to serialize and deserialize attribute names in AWS query and JSON formats during API interactions.",
      "description_length": 315,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageSystemAttributeValue",
      "description": "Provides operations to construct, parse, serialize, and deserialize message system attribute values, supporting string, binary, and list-based data types. Works with AWS-specific types such as strings, blobs, and lists, as well as XML and JSON representations. Used to handle attribute values in AWS SNS or SQS message metadata during request processing and response generation.",
      "description_length": 378,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageSystemAttributeName",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a type `t` that serves as a unique identifier for message system attributes. Used to map attribute names between internal representations and external data formats in AWS service interactions.",
      "description_length": 357,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageBodyAttributeMap",
      "description": "Provides functions to create, parse, and serialize message attribute maps between a hash table of string to message attribute values and query or JSON formats. Operates on a hash table type where keys are strings and values are message attributes. Used to convert attribute data for AWS SNS message payloads into query parameters and JSON structures.",
      "description_length": 350,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.MessageBodySystemAttributeMap",
      "description": "Provides operations to construct, parse, and serialize message system attribute maps between internal representations and external formats. Works with hash tables mapping system attribute names to values, and supports conversion to AWS query parameters and JSON structures. Used to prepare and process message attributes for AWS SNS/SQS communication.",
      "description_length": 351,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.MessageSystemAttributeMap",
      "description": "Provides functions to create, parse, and serialize message system attribute maps between hash tables and query or JSON formats. Operates on hash tables with message system attribute names as keys and string values. Used to convert attribute data for AWS message processing and API requests.",
      "description_length": 290,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.QueueAttributeName",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that is instantiated with a specific value. Used to handle attribute names in AWS services by converting between internal representations and external data formats.",
      "description_length": 348,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityBatchRequestEntry",
      "description": "Provides operations to construct, parse, and serialize a batch request entry for changing message visibility, including setting an ID, receipt handle, and optional visibility timeout. Works with string and integer types for message identifiers and timeout values. Used to prepare and process batch updates in message queue systems.",
      "description_length": 331,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageBatchRequestEntry",
      "description": "Provides functions to construct, parse, and serialize objects representing individual messages in a batch send operation. Works with string-based identifiers, message bodies, and attributes, including delay, deduplication, and group IDs. Used to prepare messages for submission to a messaging service like Amazon SQS.",
      "description_length": 317,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageBatchRequestEntry",
      "description": "Provides operations to construct, parse, and serialize message batch request entries, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers and receipt handles for message operations. Used to prepare and process individual message deletion requests in batch operations.",
      "description_length": 335,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.BatchResultErrorEntry",
      "description": "Provides operations to construct, parse, serialize, and deserialize error entries from AWS batch results, including creating instances with specific IDs, fault flags, and error codes, and converting between XML, query, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to process and transmit error details from batch job executions in AWS SDK interactions.",
      "description_length": 408,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityBatchResultEntry",
      "description": "Provides operations to construct, parse, and serialize a message visibility batch result entry, including creating an instance with an ID, parsing XML nodes, and converting to query parameters, JSON, or from JSON. Works with a record type containing an ID and possibly other fields. Used to handle responses from AWS SQS when updating message visibility in batches.",
      "description_length": 365,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageBatchResultEntry",
      "description": "Encapsulates details of a message sent in a batch, including unique identifiers, message content hashes, and sequence numbers. Works with string-based identifiers and JSON/XML data formats for serialization and parsing. Used to process results from batch message delivery operations in AWS SQS.",
      "description_length": 294,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.Message",
      "description": "Provides functions to construct, parse, and serialize message data including message ID, receipt handle, body, attributes, and MD5 hashes. Works with string-based message content, attribute maps, and XML or JSON representations. Used to create and process messages in AWS SQS interactions, such as handling incoming queue messages or preparing responses for deletion.",
      "description_length": 367,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageBatchResultEntry",
      "description": "Provides operations to construct, parse, and serialize a message deletion result entry, including creating an instance with an ID, converting to query parameters, JSON representation, and reconstructing from JSON. Works with string identifiers and AWS-specific data structures for query and JSON formatting. Used to handle individual outcomes of batch message deletions in AWS SQS interactions.",
      "description_length": 394,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.QueueAttributeMap",
      "description": "Provides operations to create, parse, and convert a hash table mapping queue attribute names to string values into query parameters and JSON format. Works with a specific hash table type using queue attribute names and base string types. Used to serialize and deserialize queue attribute data for API requests and responses.",
      "description_length": 324,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityBatchRequestEntryList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of message visibility change entries. Operates on lists of `ChangeMessageVisibilityBatchRequestEntry.t` values. Used to handle batch updates for message visibility in AWS SQS requests and responses.",
      "description_length": 271,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageBatchRequestEntryList",
      "description": "Provides functions to construct, parse, and serialize lists of message batch entries for AWS SQS. Operates on lists of `SendMessageBatchRequestEntry.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to prepare and process batches of messages for queue submission.",
      "description_length": 311,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageBatchRequestEntryList",
      "description": "Handles serialization and deserialization of a list of message batch entries for deletion. Parses XML nodes into a list of entries, converts them to query parameters, and encodes/decodes them as JSON. Used to prepare and process AWS SQS delete message batch requests.",
      "description_length": 267,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.BatchResultErrorEntryList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of batch result error entries. Works with XML nodes, AWS query parameters, and JSON structures. Used to process error responses from batch operations in AWS services.",
      "description_length": 239,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityBatchResultEntryList",
      "description": "Handles conversion and parsing of lists of message visibility change results. Accepts XML nodes, JSON values, or structured data to generate or extract lists of result entries. Used to process batch responses from message queue services.",
      "description_length": 237,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageBatchResultEntryList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of message batch result entries. Operates on lists of `SendMessageBatchResultEntry.t` values, converting them to XML nodes, query parameters, and JSON structures. Used to handle AWS SQS batch send responses by transforming raw data into structured formats for processing.",
      "description_length": 341,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.AWSAccountIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of AWS account IDs. Works with lists of string-type values representing AWS account identifiers. Parses XML nodes into account ID lists, converts them to query parameters, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 314,
      "index": 25,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.ActionNameList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing action names. Used to process XML-formatted action lists from API responses and prepare them for query parameters or JSON serialization.",
      "description_length": 356,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.AttributeNameList",
      "description": "Provides functions to create, parse, and serialize lists of queue attribute names. Operates on lists of `QueueAttributeName.t` values and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into attribute lists and constructs JSON representations for API interactions.",
      "description_length": 301,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageAttributeNameList",
      "description": "Provides operations to create, parse, serialize, and deserialize a list of string attributes from XML, query parameters, and JSON. Works with lists of strings representing message attribute names. Used to process AWS message attributes in API requests and responses.",
      "description_length": 266,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.QueueUrlList",
      "description": "Provides operations to construct, parse, and serialize a list of strings as a queue URL structure. Works with lists of string-type values and converts them into query parameters, JSON lists, and vice versa. Parses XML nodes into a list of queue URLs for use in API requests.",
      "description_length": 274,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.TagMap",
      "description": "Creates and manipulates hash tables mapping string keys to string values, supporting parsing, JSON serialization, and query string generation. Parses values into optional results and converts between hash tables and AWS-specific query and JSON formats. Used to process and encode metadata or parameters in AWS API interactions.",
      "description_length": 327,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of message objects. Works with XML nodes, AWS query structures, and JSON representations. Parses XML into message lists, converts them to AWS queries, and handles JSON serialization and deserialization for message data.",
      "description_length": 293,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageBatchResultEntryList",
      "description": "Provides functions to create, parse, and serialize lists of message batch result entries. Operates on lists of `DeleteMessageBatchResultEntry.t` values and XML or JSON representations. Used to process AWS SQS delete message batch responses by converting between XML nodes, JSON, and structured data.",
      "description_length": 299,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.TagKeyList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values representing tag keys. Used to handle AWS tag key data during request construction and response parsing.",
      "description_length": 325,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.MessageNotInflight",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and arbitrary input types for parsing. Used to represent the absence of an in-flight message in AWS request formatting.",
      "description_length": 240,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.DeleteQueueRequest",
      "description": "Creates a request structure for deleting a message from an SQS queue, using a queue URL. Operates on string-based queue URLs and provides serialization to query parameters and JSON format. Parses XML nodes into request objects for processing SQS delete operations.",
      "description_length": 264,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.InvalidIdFormat",
      "description": "Generates and processes invalid ID format errors, handling conversion to query parameters and JSON representations. Works with arbitrary input types and produces structured JSON data. Used to standardize error responses in API interactions involving malformed identifiers.",
      "description_length": 272,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.GetQueueUrlRequest",
      "description": "Provides operations to construct, parse, and serialize a request for retrieving a queue URL, including parsing XML nodes, generating query parameters, and converting to and from JSON. Works with string-based queue names and AWS account IDs, and represents the request as a structured record. Used to prepare and process requests in AWS SQS interactions, such as fetching queue endpoints from a service.",
      "description_length": 402,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.GetQueueAttributesResult",
      "description": "Provides functions to construct, parse, serialize, and deserialize queue attribute data. Works with a record type containing queue attributes and an associated map structure. Used to process AWS SQS response data into a structured format for further handling.",
      "description_length": 259,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.PurgeQueueInProgress",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON. Operates on the unit type and related JSON structures. Used to manage in-progress purge queue states in AWS requests.",
      "description_length": 212,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.EmptyBatchRequest",
      "description": "Provides operations to create, parse, and serialize empty batch requests. Works with the unit type and AWS query and JSON structures. Used to generate empty request payloads for API calls that require batch processing.",
      "description_length": 218,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityBatchRequest",
      "description": "Provides operations to construct, parse, and serialize batch requests for changing message visibility in a queue, working with a list of entries and a queue URL. Supports converting the request to query parameters, JSON format, and parsing from XML nodes. Used to manage multiple message visibility updates in a single API call to a message queue service.",
      "description_length": 355,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageBatchRequest",
      "description": "Provides operations to construct, parse, and serialize a batch of message send requests for a queue, including creating a request from a list of entries and converting between XML, JSON, and query formats. Works with queue URLs and a list of message entries structured as a custom type. Used to prepare and transmit multiple messages in a single API call to a messaging service.",
      "description_length": 378,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageBatchRequest",
      "description": "Provides operations to construct, parse, and serialize batch delete message requests for a queue, including converting between XML, JSON, and query parameters. Works with queue URLs and lists of message entries identified by receipt handles. Used to efficiently remove multiple messages from a message queue in a single API call.",
      "description_length": 329,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityBatchResult",
      "description": "Provides operations to construct, parse, and serialize a batch result for changing message visibility, including handling lists of successful entries and error entries. Works with custom types representing lists of result entries and error entries. Used to process AWS SQS batch visibility updates and convert results between XML, query, and JSON formats.",
      "description_length": 355,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.RemovePermissionRequest",
      "description": "Provides operations to construct, parse, and serialize a request for removing a permission from an SQS queue. Works with string-based queue URLs and labels, and supports query and JSON serialization formats. Used to generate HTTP requests for SQS permission management tasks.",
      "description_length": 275,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageBatchResult",
      "description": "Provides operations to construct, parse, and serialize a batch message send result, including converting between XML nodes, query parameters, and JSON representations. Works with lists of successful message entries and error entries from batch operations. Used to process AWS SQS send batch responses and prepare data for API interactions.",
      "description_length": 339,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.AddPermissionRequest",
      "description": "Provides operations to construct, parse, and serialize an AWS SQS add permission request, including creating a request from parameters, converting to query format, and handling JSON serialization and deserialization. Works with types such as queue URLs, labels, AWS account IDs lists, and action names lists. Used to generate structured requests for adding access permissions to an SQS queue in AWS interactions.",
      "description_length": 412,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ChangeMessageVisibilityRequest",
      "description": "Provides operations to construct, parse, and serialize a request for changing the visibility timeout of a message in a queue, working with string and integer types for queue URL, receipt handle, and timeout duration. Includes parsing from XML nodes and conversion to query parameters and JSON structures. Used to interact with message queue services by adjusting message visibility settings programmatically.",
      "description_length": 408,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ReceiptHandleIsInvalid",
      "description": "Provides operations to create, parse, and serialize error representations related to invalid receipt handling. Works with unit type and AWS query/json structures. Used to generate AWS API error responses and handle malformed receipt data.",
      "description_length": 238,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ReceiveMessageRequest",
      "description": "Provides operations to construct, parse, and serialize request parameters for receiving messages from a queue, including setting attributes, message attributes, and receive settings. Works with types such as queue URLs, attribute name lists, message attribute name lists, and integer values. Used to generate HTTP query strings and JSON payloads for AWS SQS API interactions.",
      "description_length": 375,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageResult",
      "description": "Provides operations to construct, parse, and serialize message send result data, including MD5 hashes for message body and attributes, message ID, and sequence number. Works with string-based identifiers and structured XML or JSON data. Used to process AWS SQS message send responses and prepare them for API requests or logging.",
      "description_length": 329,
      "index": 51,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageRequest",
      "description": "Provides operations to construct, parse, and serialize a message deletion request, including creating an instance from queue URL and receipt handle, converting to query parameters, and encoding/decoding from JSON. Works with string-based queue URLs and receipt handles, and JSON or XML representations. Used to generate HTTP requests for deleting messages from an AWS SQS queue.",
      "description_length": 378,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ListDeadLetterSourceQueuesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing dead-letter source queues, including parsing XML responses and converting to query parameters or JSON format. Works with string-based queue URLs, pagination tokens, and result limits. Used to retrieve source queues linked to a specified dead-letter queue in AWS SQS.",
      "description_length": 342,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.QueueDeletedRecently",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with AWS query structures and JSON associations. Used to represent and handle the absence of data in API requests and responses.",
      "description_length": 230,
      "index": 54,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.SendMessageRequest",
      "description": "Provides functions to construct, parse, and serialize AWS SQS send message requests, including setting queue URL, message body, delay, attributes, and deduplication and group IDs. Works with string, integer, and attribute map types specific to AWS SQS messaging. Used to generate HTTP query parameters and JSON payloads for sending messages to an SQS queue.",
      "description_length": 357,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.BatchRequestTooLong",
      "description": "Provides functions to create, parse, and serialize request data into query and JSON formats. Operates on a unit type, handling request structures that exceed length limits. Used to manage and validate requests that need to be split or rejected based on size constraints.",
      "description_length": 270,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.ListDeadLetterSourceQueuesResult",
      "description": "Provides functions to construct, parse, and serialize a result containing a list of dead letter source queue URLs, including conversion to query parameters, JSON, and parsing from XML. Works with `QueueUrlList.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses that return collections of queue URLs in AWS Lambda or SQS interactions.",
      "description_length": 375,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.QueueDoesNotExist",
      "description": "Provides operations to create, parse, and serialize data structures into AWS query and JSON formats. Works with the unit type and arbitrary values through type-erased functions. Used to generate AWS-compatible query parameters and JSON representations from simple data inputs.",
      "description_length": 276,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ListQueuesRequest",
      "description": "Provides operations to construct, parse, and serialize request parameters for listing queues, including setting a prefix, pagination token, and result limit. Works with string and integer types for queue names, tokens, and result counts. Used to generate HTTP query strings and JSON payloads for AWS SQS list queue operations.",
      "description_length": 326,
      "index": 59,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.UnsupportedOperation",
      "description": "Provides operations to create, parse, and serialize an empty unit type into query and JSON formats. Works with the unit type and generic input values for conversion. Used to handle unsupported operations by encoding them as JSON or query parameters for external processing.",
      "description_length": 273,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.BatchEntryIdsNotDistinct",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON, with a dedicated parsing function that returns an option. Works with the unit type and AWS query structures. Used to handle distinct batch entry ID validation in API requests.",
      "description_length": 270,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.CreateQueueResult",
      "description": "Creates a result structure containing a queue URL, supporting construction from a string, XML parsing, query and JSON serialization, and deserialization. Works with AWS-specific types including XML nodes, JSON values, and query parameters. Used to handle the response from an AWS SQS queue creation API call.",
      "description_length": 308,
      "index": 62,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.TagQueueRequest",
      "description": "Provides operations to construct, parse, and serialize request data for AWS SQS tag operations. Works with `Aws.BaseTypes.String.t` for queue URLs and `TagMap.t` for tag collections. Used to generate HTTP query parameters and JSON payloads for tagging SQS queues.",
      "description_length": 263,
      "index": 63,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.InvalidAttributeName",
      "description": "Provides operations to create, parse, and serialize invalid attribute name data, including converting to and from JSON and AWS query formats. Works with a unit type to represent the absence of data. Used to handle malformed attribute names in AWS request parsing and serialization workflows.",
      "description_length": 291,
      "index": 64,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.OverLimit",
      "description": "Provides operations to create an instance, parse input into an optional unit, convert values to AWS query format, serialize to JSON, and deserialize from JSON. Works with the unit type and generic input types. Used to handle request limits by generating query parameters and validating JSON structures.",
      "description_length": 302,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ReceiveMessageResult",
      "description": "Provides operations to construct, parse, and serialize message results, including converting between XML nodes, query parameters, and JSON structures. Works with message lists and AWS-specific data types like `Query.t` and `Json.t`. Used to process and format HTTP response data from message-based APIs.",
      "description_length": 303,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.GetQueueAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving queue attributes, including methods to convert between XML, JSON, and query parameters. Works with queue URLs and attribute name lists, using custom types for structured data representation. Used to prepare and process AWS SQS API requests for fetching specific queue metadata.",
      "description_length": 356,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.InvalidBatchEntryId",
      "description": "Provides operations to create, parse, and serialize error representations for invalid batch entry identifiers. Works with unit type and arbitrary input types for parsing and conversion. Used to generate AWS query parameters and JSON structures from error values.",
      "description_length": 262,
      "index": 68,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.DeleteMessageBatchResult",
      "description": "Provides operations to construct, parse, and serialize batch deletion results for messages, including handling lists of successful entries and error details. Works with custom types representing lists of message deletion entries and error responses. Used to process AWS SQS batch delete responses and prepare them for HTTP queries or JSON transmission.",
      "description_length": 352,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ListQueueTagsResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structured result containing tags, using a tag map as input. Works with XML nodes, AWS query parameters, and JSON structures for data interchange. Used to process and format tag-based responses from AWS API calls.",
      "description_length": 283,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.UntagQueueRequest",
      "description": "Provides operations to construct, parse, and serialize requests for untagging AWS SQS queue resources. Works with AWS string types, tag key lists, and JSON/XML data structures. Used to generate HTTP query parameters and JSON payloads for API interactions, and to parse incoming XML responses into structured request objects.",
      "description_length": 324,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.TooManyEntriesInBatchRequest",
      "description": "Provides functions to create, parse, and serialize a unit type representing a batch request with too many entries. Operates on a unit type and converts it to AWS query parameters or JSON structures. Used to signal and handle batch operation limits in API interactions.",
      "description_length": 268,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ListQueuesResult",
      "description": "Provides operations to construct, parse, and serialize a result containing a list of queue URLs and a pagination token. Works with `QueueUrlList.t` and AWS-specific types for queries and JSON. Used to handle responses from AWS SQS list queues API calls, including pagination support.",
      "description_length": 283,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.CreateQueueRequest",
      "description": "Creates and manipulates queue creation requests with a specified name, optional attributes, and tags. Operates on string-based queue names, attribute maps, and tag maps. Used to generate AWS API-compatible query parameters, JSON representations, and to parse XML input into structured request data.",
      "description_length": 298,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.InvalidMessageContents",
      "description": "Provides operations to create, parse, and convert a unit type into query parameters and JSON format. Works with the unit type and generic input types for parsing and serialization. Used to handle invalid message representations in AWS request formatting and validation.",
      "description_length": 269,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.SetQueueAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for setting queue attributes, including creating a request from a queue URL and attribute map, parsing XML nodes into a request, and converting between query, JSON, and internal representations. Works with string-based queue URLs and a map of queue attributes. Used to prepare and process AWS SQS set queue attributes requests in API interactions.",
      "description_length": 418,
      "index": 76,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Types.PurgeQueueRequest",
      "description": "Provides operations to construct, parse, and serialize requests for purging an SQS queue, including creating a request from a queue URL, parsing XML nodes, and converting to query or JSON formats. Works with AWS SQS queue URLs and internal request representations. Used to generate HTTP requests for queue purging and to process incoming XML-based request data.",
      "description_length": 361,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.ListQueueTagsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for tagging an SQS queue, including converting between XML, query parameters, and JSON formats. Works with AWS queue URLs and structured request data. Used to generate and process tagging requests for SQS resources in API interactions.",
      "description_length": 299,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.QueueNameExists",
      "description": "Provides functions to create, parse, and serialize a unit type into AWS query parameters and JSON format. Works with the unit type and related JSON structures. Used to represent the existence of a queue name in API requests and responses.",
      "description_length": 238,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.Types.GetQueueUrlResult",
      "description": "Provides operations to construct, parse, and serialize a queue URL result, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a queue URL string. Used to process AWS SQS response data for retrieving queue URLs.",
      "description_length": 279,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.AddPermission",
      "description": "Handles AWS request signing and conversion between native and HTTP representations for permission-related API calls. Processes input of type `Types.AddPermissionRequest.t` and returns HTTP requests with proper encoding and signing. Decodes HTTP responses into native outputs or specific error types, including parsing AWS error messages based on status codes.",
      "description_length": 359,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.ChangeMessageVisibility",
      "description": "Handles AWS SQS message visibility updates by converting request inputs to HTTP format and parsing response outputs. Processes query-encoded requests with specific action and version parameters, and decodes error responses from XML into native error types. Designed for direct interaction with SQS endpoints using defined input structures and error handling.",
      "description_length": 358,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.ChangeMessageVisibilityBatch",
      "description": "Handles batch updates to message visibility in AWS SQS by converting input data into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific request and result types defined in the AWS SQS API, including error handling for malformed or unexpected responses. Used to adjust visibility timeouts for multiple messages in a single API call, ensuring consistent state across a queue.",
      "description_length": 409,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.CreateQueue",
      "description": "Handles conversion between native input and HTTP requests for creating an AWS queue, including query parameter encoding and signing. Processes HTTP responses to extract results or specific error types based on AWS XML deserialization. Works with input and output types specific to the CreateQueue operation and AWS error responses.",
      "description_length": 331,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.DeleteMessage",
      "description": "Handles AWS message deletion by converting request inputs to HTTP format and parsing responses. Processes input of type `Types.DeleteMessageRequest.t` and returns no output. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 268,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.DeleteMessageBatch",
      "description": "Handles conversion of delete message batch requests into HTTP format and parses corresponding responses. Operates on input containing a list of message receipts and outputs a result confirming successful deletions. Processes AWS error responses, mapping them to internal error types based on HTTP status and XML content.",
      "description_length": 320,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.DeleteQueue",
      "description": "Handles conversion between native delete queue requests and HTTP format, including query parameter encoding and signing. Processes HTTP responses to extract results or specific AWS error details. Works with AWS service identifiers, request inputs, and error responses tied to queue deletion operations.",
      "description_length": 302,
      "index": 87,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and from strings, along with a list of common errors. Works with the abstract type `t` representing error states. Used to handle error serialization and HTTP response mapping in API layers.",
      "description_length": 278,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.GetQueueAttributes",
      "description": "Handles conversion between native input and HTTP requests for retrieving queue attributes, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS SQS API to fetch queue metadata.",
      "description_length": 338,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.GetQueueUrl",
      "description": "Handles the conversion of queue URL requests into HTTP format and processes HTTP responses back into structured results. Operates on input containing queue configuration details and output containing the resulting URL. Used to retrieve the URL of an existing Amazon SQS queue by encoding the request and decoding the service response.",
      "description_length": 334,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.ListDeadLetterSourceQueues",
      "description": "Converts input requests into HTTP format for listing dead-letter source queues, encoding parameters and setting action and version. Parses HTTP responses into structured results or specific AWS error types based on status codes and XML content. Handles error decoding by matching AWS error formats with predefined API-specific error representations.",
      "description_length": 349,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.ListQueueTags",
      "description": "Handles conversion between native input and HTTP requests for listing queue tags, including proper query encoding and setting Action/Version parameters. Processes HTTP responses into structured output or error representations specific to the AWS service. Parses AWS error responses into internal error types based on HTTP status and XML content.",
      "description_length": 345,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.ListQueues",
      "description": "Converts AWS request inputs to HTTP format, including encoding parameters and setting action/version. Parses HTTP responses into structured outputs or specific error types based on AWS XML. Handles error validation by matching status codes with expected error formats.",
      "description_length": 268,
      "index": 93,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.PurgeQueue",
      "description": "Converts AWS PurgeQueue requests into HTTP format and handles response decoding, including error parsing based on specific AWS error codes and status codes. Operates on input types representing queue purge requests and outputs unit, with error handling for malformed or invalid responses. Used to manage queue deletion operations in AWS services like SQS by encoding and decoding HTTP interactions.",
      "description_length": 398,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.ReceiveMessage",
      "description": "Handles conversion of message receive requests into HTTP format and parses HTTP responses into structured outputs or specific error types. Operates on input containing message retrieval parameters, output representing received messages, and error data from AWS service responses. Used to process AWS SQS receive message operations, including request signing and error decoding.",
      "description_length": 377,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.RemovePermission",
      "description": "Handles AWS request signing and HTTP conversion for removing permissions, using service-specific parameters and signature versions. Converts between native input types and HTTP requests, and decodes HTTP responses into success or error states. Parses AWS error responses into domain-specific error types based on HTTP status and XML content.",
      "description_length": 341,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sqs.SendMessage",
      "description": "Handles AWS request signing and HTTP conversion for message-sending operations. Converts input data into HTTP requests with proper query encoding and parses HTTP responses into structured outputs or errors. Processes AWS error responses and maps them to service-specific error types based on status codes and XML content.",
      "description_length": 321,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.SendMessageBatch",
      "description": "Converts native input data into HTTP requests for AWS services, setting necessary parameters like Action and Version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS specifications. Handles error parsing by matching HTTP status codes with expected error formats from AWS API responses.",
      "description_length": 337,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.SetQueueAttributes",
      "description": "Handles AWS request signing and HTTP conversion for queue attribute operations. Processes input in the form of queue attribute requests and returns unit outputs, with error parsing tailored to AWS response formats. Converts between native types and HTTP representations, including setting action and version parameters in queries.",
      "description_length": 330,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.TagQueue",
      "description": "Handles conversion between AWS request formats and internal representations for TagQueue operations. Processes input structures to generate HTTP requests with proper encoding and parses HTTP responses into native output or error types. Specifically manages error decoding based on HTTP status codes and predefined error specifications.",
      "description_length": 335,
      "index": 100,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_sqs.Types",
      "description": "The module provides a comprehensive set of operations for handling AWS API data structures, including parsing, serializing, and converting between XML, query parameters, and JSON formats. It supports lists of binary data, strings, and message attributes, as well as hash tables mapping keys to attribute values, and handles batch operations for message visibility, deletion, and sending. Examples include converting XML nodes to query parameters, serializing message attributes to JSON, and constructing batch delete requests for SQS.",
      "description_length": 534,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs.UntagQueue",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 untagging operations, encoding parameters into query format and setting necessary request fields. Processes HTTP responses to extract results or decode specific AWS error formats based on status codes. Works with structured input representing untagging requests and returns unit output, with error handling tailored to EC2 API responses.",
      "description_length": 407,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "aws-sqs",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as HTTP headers, query parameters, and JSON-encoded data structures. Used to interact with specific AWS services like S3 for object storage or DynamoDB for database operations.",
      "description_length": 341,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sqs",
      "description": "Handles AWS SQS API interactions by converting native request types to HTTP formats, signing requests, and decoding responses into structured outputs or error types. Processes operations like message deletion, visibility updates, queue creation, and attribute retrieval, with support for batch actions and error handling based on AWS XML and status codes. Examples include adjusting message visibility timeouts, deleting multiple messages, and retrieving queue URLs. Manages request signing, query encoding, and XML parsing for direct communication with SQS endpoints.",
      "description_length": 568,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 105,
    "meaningful_modules": 105,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 568,
    "min_description_length": 212,
    "avg_description_length": 323.34285714285716,
    "embedding_file_size_mb": 0.38195037841796875
  }
}