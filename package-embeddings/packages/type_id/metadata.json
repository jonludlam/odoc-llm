{
  "package": "type_id",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:26.487776",
  "modules": [
    {
      "module_path": "Type_id.Error",
      "library": "type_id",
      "description": "This module defines error types and operations for handling type comparison errors. It includes a variant type `t` representing errors like `Ids_not_equal`, along with functions `equal` to check error equality and `pp` to format error messages. It is used to report and compare errors when type identifiers do not match during type checking or validation.",
      "description_length": 355,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Type_id",
      "library": "type_id",
      "description": "This module creates and manages type identifiers with string labels, enabling runtime comparisons between types through functions to construct identifiers, retrieve labels, and check equality, returning either an optional proof of equality or a result with an error. The main data types include the identifier type and the error type `t`, which represents conditions like `Ids_not_equal`. Operations allow concrete use cases such as implementing type-safe dynamic dispatch, tracking type metadata in serialization frameworks, or enforcing type consistency in generic containers. The error submodule provides utilities to handle and format comparison errors, supporting precise error reporting and validation workflows.",
      "description_length": 718,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 718,
    "min_description_length": 355,
    "avg_description_length": 536.5,
    "embedding_file_size_mb": 0.0076904296875
  }
}