{
  "package": "ctypes-build",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:30.174162",
  "modules": [
    {
      "module_path": "ctypes-build",
      "description": "Provides functions to generate and manipulate C type definitions, including struct, enum, and pointer operations. Works with custom data types such as CStruct, CEnum, and CPointer. Used to create bindings between OCaml and C code for low-level system interactions.",
      "description_length": 264,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ctypes_stub_generator",
      "description": "Generates C stubs for OCaml bindings using a list of configuration records that specify C types, function signatures, and output paths. Processes type definitions and function declarations to produce C code compatible with OCaml's Ctypes library. Used to automate the creation of C glue code for interfacing with native libraries.",
      "description_length": 330,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ctypes_rules",
      "description": "Provides functions to generate and manage Ctypes bindings for foreign libraries, including rules for building and linking. Operates with string-based configuration parameters and directory paths. Used to automate the setup of Ctypes integration in projects requiring low-level system calls or library interfacing.",
      "description_length": 313,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 330,
    "min_description_length": 264,
    "avg_description_length": 302.3333333333333,
    "embedding_file_size_mb": 0.011309623718261719
  }
}