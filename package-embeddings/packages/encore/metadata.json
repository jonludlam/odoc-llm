{
  "package": "encore",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:50:52.822184",
  "modules": [
    {
      "module_path": "Encore.Bij",
      "library": "encore",
      "description": "This module implements bijections\u2014invertible transformations between pairs of types. It provides operations to construct and manipulate bijections using functions like `v`, `flip`, `compose`, and `product`, enabling precise conversions between structured data types. Use cases include lossless data transformation, bidirectional parsing, and isomorphism-based data manipulation.",
      "description_length": 378,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Encore.Lavoisier",
      "library": "encore",
      "description": "This module implements a parser and serializer combinator library for incremental processing of byte streams. It provides primitives like `char`, `string`, and `put` to match and emit specific characters or strings, and combinators like `choose`, `<*`, and `product` to build complex parsers from simpler components. Use cases include implementing custom binary or text-based protocols, parsing structured file formats, and constructing validated serializers for network communication.",
      "description_length": 485,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Encore",
      "library": "encore",
      "description": "This module provides combinators to build synchronized parsers and serializers that work with structured values, ensuring consistent serialization and deserialization. It operates on custom data types by requiring explicit bijections between values and strings, primarily supporting bidirectional handling of types like integers, strings, and structured formats such as Git tree objects. Concrete use cases include defining format-preserving parsers and encoders for structured text formats and implementing verified serialization for data interchange.",
      "description_length": 552,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 3,
    "filtered_empty_modules": 2,
    "retention_rate": 0.6
  },
  "statistics": {
    "max_description_length": 552,
    "min_description_length": 378,
    "avg_description_length": 471.6666666666667,
    "embedding_file_size_mb": 0.04389381408691406
  }
}