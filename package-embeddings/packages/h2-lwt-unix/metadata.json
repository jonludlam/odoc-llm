{
  "package": "h2-lwt-unix",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:02:39.893399",
  "modules": [
    {
      "module_path": "H2_lwt_unix.Client.SSL",
      "library": "h2-lwt-unix",
      "description": "This module implements an HTTP/2 client over SSL/TLS, providing functions to establish secure connections, send requests, handle responses, and manage connection lifecycle events. It works with SSL sockets and HTTP/2 client connections, supporting operations like sending requests with optional trailers, handling server push, and sending ping frames. Concrete use cases include building secure HTTP/2 clients for APIs, streaming data over encrypted channels, and managing bidirectional communication with TLS termination.",
      "description_length": 522,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "H2_lwt_unix.Server.TLS",
      "library": "h2-lwt-unix",
      "description": "This module implements TLS-based HTTP/2 server connections using Lwt for asynchronous I/O. It provides functions to create secure connection handlers that process incoming requests and errors over TLS-encrypted sockets. Typical use cases include building secure web servers that handle HTTP/2 traffic with custom request and error handling logic.",
      "description_length": 346,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "H2_lwt_unix.Client.TLS",
      "library": "h2-lwt-unix",
      "description": "This module implements an HTTP/2 client over TLS using Lwt for asynchronous I/O. It provides functions to establish a secure connection, send requests with optional trailers, handle server push, and manage connection lifecycle operations like ping, shutdown, and checking closure status. Concrete use cases include building asynchronous HTTP/2 clients for secure web services, handling bidirectional communication with TLS-encrypted backends, and managing streaming or multiplexed API interactions.",
      "description_length": 498,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_lwt_unix.Server.SSL",
      "library": "h2-lwt-unix",
      "description": "This module implements SSL/TLS connection handlers for HTTP/2 servers using Lwt and Unix sockets. It provides functions to create secure connection handlers with custom or default SSL configurations, handling incoming requests and errors per client address. Concrete use cases include serving encrypted HTTP/2 traffic with per-connection request routing and error handling.",
      "description_length": 373,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "H2_lwt_unix.Client",
      "library": "h2-lwt-unix",
      "description": "This module implements HTTP/2 client functionality over Lwt-based Unix sockets, supporting request/response exchange with optional trailers, server push handling, and connection management operations. It works with raw file descriptors, HTTP/2 client connections, and runtime configurations to enable asynchronous communication with backend services. Concrete use cases include implementing lightweight HTTP/2 clients for local Unix domain socket services, handling streaming requests/responses, and integrating with custom network stacks using Lwt for concurrency.",
      "description_length": 565,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_lwt_unix.Server",
      "library": "h2-lwt-unix",
      "description": "Implements HTTP/2 server connection handlers over Unix sockets using Lwt for asynchronous I/O. It provides functions to create connection handlers that process incoming requests and errors per client address, supporting both TLS and SSL encrypted connections. Used to build custom HTTP/2 servers with secure, per-connection routing and error handling logic.",
      "description_length": 357,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "H2_lwt_unix",
      "library": "h2-lwt-unix",
      "description": "Implements HTTP/2 client and server functionality over Unix sockets using Lwt for asynchronous I/O. Works with file descriptors, HTTP/2 connections, and TLS/SSL contexts to handle secure communication. Used to build custom HTTP/2 servers with per-connection routing and to implement lightweight clients for local services with streaming or push support.",
      "description_length": 353,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 565,
    "min_description_length": 346,
    "avg_description_length": 430.57142857142856,
    "embedding_file_size_mb": 0.10184001922607422
  }
}