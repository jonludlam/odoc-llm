{
  "package": "httpun-types",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:24.979404",
  "modules": [
    {
      "module_path": "Httpun_types.Version",
      "library": "httpun-types",
      "description": "This module defines a version type with major and minor fields, representing HTTP protocol versions. It provides constants for common versions, functions for parsing and formatting versions, and comparison operations. Use this module to handle version negotiation, parsing HTTP headers, or comparing protocol versions in network communication.",
      "description_length": 343,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_types.Status",
      "library": "httpun-types",
      "description": "This module defines polymorphic variant types for HTTP status codes, including informational, successful, redirection, client error, and server error categories. It provides functions to convert status codes to and from integers, check their classification, and obtain default reason phrases. Concrete use cases include validating HTTP response codes, generating appropriate status messages, and handling different classes of HTTP responses in network applications.",
      "description_length": 465,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_types.IOVec",
      "library": "httpun-types",
      "description": "This module provides functions to manipulate IOVec.t structures, which represent sequences of bytes. It supports operations like calculating the total length of a single IOVec or a list of IOVecs, shifting their contents by a specified offset, and pretty-printing them. These operations are useful when handling network data buffers, such as parsing or constructing HTTP messages efficiently without unnecessary memory copies.",
      "description_length": 426,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_types.Method",
      "library": "httpun-types",
      "description": "This module defines HTTP request methods and operations to classify their properties, such as safety, cacheability, and idempotence. It works with symbolic representations of standard methods (`GET`, `POST`, etc.) and custom methods as strings. Use it to validate, convert, and determine the semantic characteristics of HTTP methods in request handling and routing logic.",
      "description_length": 371,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_types",
      "library": "httpun-types",
      "description": "This module provides core abstractions for working with HTTP protocols, including version handling, status code management, method classification, and efficient byte buffer manipulation. Key data types include version tuples, polymorphic variant status codes, method symbols, and IOVec structures, with operations for parsing, comparison, classification, and transformation. You can use these tools to implement HTTP parsing and serialization, validate response codes, handle version negotiation, and manage network data buffers efficiently. Examples include extracting HTTP versions from headers, converting status codes to reason phrases, checking method properties, and assembling message bodies from fragmented byte sequences.",
      "description_length": 730,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 5,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8333333333333334
  },
  "statistics": {
    "max_description_length": 730,
    "min_description_length": 343,
    "avg_description_length": 467.0,
    "embedding_file_size_mb": 0.01857757568359375
  }
}