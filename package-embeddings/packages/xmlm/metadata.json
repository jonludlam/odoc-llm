{
  "package": "xmlm",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T23:00:49.497634",
  "modules": [
    {
      "module_path": "Xmlm.Make",
      "library": "xmlm",
      "description": "This module enables streaming XML parsing and serialization via sequences of signals representing depth-first document traversal events. It operates on input sources and output buffers/channels, converting between low-level XML signals (element starts, text data, DTDs) and structured tree representations. Useful for memory-efficient processing of large XML documents or incremental generation of XML content with customizable formatting and namespace handling.",
      "description_length": 462,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Xmlm",
      "library": "xmlm",
      "description": "This module provides streaming XML encoding and decoding through depth-first signal sequences that mirror XML tree traversals, enabling incremental parsing and generation. It operates on input/output abstractions like channels and buffers, supporting structured transformations between XML signals, recursive trees, and custom data types while handling namespaces, DTDs, and formatting. Typical use cases include processing large XML documents without full in-memory representation, validating XML structure during streaming, and mapping XML data to domain-specific models.",
      "description_length": 573,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 573,
    "min_description_length": 462,
    "avg_description_length": 517.5,
    "embedding_file_size_mb": 0.029379844665527344
  }
}