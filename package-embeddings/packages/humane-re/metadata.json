{
  "package": "humane-re",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:29:37.602070",
  "modules": [
    {
      "module_path": "Str.Group",
      "description": "Extracts specific captured groups from a match result using indices, returning either the group string, its position, or both. Operates on a `t` type representing match data, with `str` and `index` for string and group identifier. Used to retrieve exact substrings and their positions during pattern matching, such as parsing structured text or extracting delimited segments.",
      "description_length": 375,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Str.Infix",
      "description": "Checks if a string matches a regular expression pattern. Operates on strings and compiled regular expression patterns. Used to validate input formats such as email addresses or date strings.",
      "description_length": 190,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "S.Group",
      "description": "Extracts specific captured groups from a match result by index, returning either the string, position, or both. Operates on match results, indices, and string substrings to retrieve detailed match information. Supports folding over all groups, extracting full match content, and obtaining positions for precise text manipulation.",
      "description_length": 329,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "S.Infix",
      "description": "Checks if a string matches a regular expression pattern. Works with strings and compiled regular expression patterns. Used to validate input formats such as email addresses or phone numbers.",
      "description_length": 190,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "humane-re",
      "description": "Provides functions for parsing and validating email addresses, extracting domain components, and checking syntax against RFC 5322 standards. Operates on strings and returns structured results with error handling. Used to sanitize user input in web forms and verify email formats in authentication systems.",
      "description_length": 305,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "S",
      "description": "Extracts group strings, positions, and substrings by index, with options for safe or explicit failure. Processes match data structures to return ordered lists of matched values and their associated indices. Provides folding over matches and retrieves full match boundaries.",
      "description_length": 273,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Str",
      "description": "Provides functions to check string matches against compiled regular expressions and extract specific captured groups with their positions. Operates on string data and match results, offering `str` to retrieve group content and `index` to locate its position within the original string. Enables precise parsing of structured data, such as isolating substrings from log entries or parsing formatted input. Supports operations like validating email syntax and extracting key-value pairs from text.",
      "description_length": 494,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 7,
    "filtered_empty_modules": 1,
    "retention_rate": 0.875
  },
  "statistics": {
    "max_description_length": 494,
    "min_description_length": 190,
    "avg_description_length": 308.0,
    "embedding_file_size_mb": 0.025859832763671875
  }
}