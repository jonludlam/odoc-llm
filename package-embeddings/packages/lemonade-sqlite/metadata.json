{
  "package": "lemonade-sqlite",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:01.716685",
  "modules": [
    {
      "module_path": "Lemonade_Sqlite.Infix",
      "description": "Provides lifted function application and sequencing operations for monadic values, including function composition, value extraction, and result transformation. Works with any type `'a t` that supports monadic behavior, enabling chaining and combining of effectful computations. Used to flatten nested operations, apply functions within contexts, and manage control flow in asynchronous or error-prone workflows.",
      "description_length": 411,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lemonade_Sqlite.S",
      "description": "This module offers operations for processing generic sequential and container types 'a t, including stream construction, element transformation via mapping/filtering, and bulk data conversion from lists/arrays/strings. It supports monadic workflows for sequential data manipulation, enabling tasks like pipeline processing or batch transformations, while also providing container combination and traversal functions for functional composition and element aggregation. Use cases include data stream filtering, collection concatenation, and structured data extraction.",
      "description_length": 566,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "lemonade-sqlite",
      "description": "Provides functions to execute SQL queries, fetch results as lists of tuples, and manage database connections using SQLite. Works with connection handles, SQL query strings, and heterogeneous lists representing row data. Used to retrieve user data from a database table and insert new records based on structured input.",
      "description_length": 318,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lemonade_Sqlite",
      "description": "Provides monadic operations for sequencing and transforming effectful computations, along with generic data processing functions for sequential and container types. It supports lifting functions into contexts, composing monadic workflows, and manipulating data through mapping, filtering, and conversion. Users can flatten nested operations, process data streams, and combine collections in functional pipelines. Examples include transforming error-prone computations, filtering large datasets, and building complex data processing chains.",
      "description_length": 539,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 566,
    "min_description_length": 318,
    "avg_description_length": 458.5,
    "embedding_file_size_mb": 0.014925956726074219
  }
}