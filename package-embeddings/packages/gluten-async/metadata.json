{
  "package": "gluten-async",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:51.404031",
  "modules": [
    {
      "module_path": "Gluten_async.Server.SSL",
      "library": "gluten-async",
      "description": "Handles SSL/TLS connections for asynchronous servers, providing functions to create secure connection handlers and configure SSL sockets with specific protocols and certificates. Works with SSL sockets, runtime protocols, and request handlers, supporting operations like ALPN protocol negotiation and certificate-based authentication. Used to set up HTTPS servers with custom SSL configurations and handle encrypted client requests efficiently.",
      "description_length": 444,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_async.Client.SSL",
      "library": "gluten-async",
      "description": "This module implements SSL/TLS client functionality for asynchronous network communication. It provides operations to create and manage secure client connections, including initializing SSL contexts, upgrading existing sockets to encrypted ones, and shutting down connections gracefully. The module works with SSL sockets and integrates with the Async library's socket and deferred types for non-blocking I/O operations.",
      "description_length": 420,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_async.Client.TLS",
      "library": "gluten-async",
      "description": "This module implements TLS client operations for secure network communication. It provides functions to create and manage TLS connections, including upgrading existing sockets, shutting down connections, and checking connection status. Concrete use cases include establishing encrypted client connections to servers and managing TLS handshakes with specific protocol configurations.",
      "description_length": 382,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_async.Server",
      "library": "gluten-async",
      "description": "This module manages asynchronous HTTP/1.1 and HTTP/2 connections with support for protocol upgrades and SSL/TLS encryption through the SSL submodule. It provides core types like sockets, request handlers, and protocol runtimes, along with operations to bind servers, handle streaming requests, and negotiate protocols. The SSL submodule extends this functionality with secure connection setup, certificate configuration, and ALPN negotiation, enabling HTTPS servers with custom encryption settings. You can build high-performance, secure web servers that handle streaming data and custom protocols using both synchronous and asynchronous handler logic.",
      "description_length": 652,
      "index": 3,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Gluten_async.Client",
      "library": "gluten-async",
      "description": "This module manages WebSocket client connections with asynchronous I/O, enabling creation, protocol upgrade, shutdown, and state monitoring of connections over sockets. It supports real-time communication patterns in web applications and network services, integrating with runtime primitives for async messaging. The SSL and TLS submodules extend this functionality with secure communication layers, allowing encryption of existing connections, handshake management, and protocol-specific configuration. Examples include establishing encrypted WebSocket sessions, upgrading raw sockets to secure ones, and handling non-blocking I/O with deferred results during connection lifecycle events.",
      "description_length": 689,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gluten_async",
      "library": "gluten-async",
      "description": "This module provides asynchronous networking capabilities for building secure, high-performance web and WebSocket servers with support for HTTP/1.1, HTTP/2, and TLS encryption. Core data types include sockets, request handlers, and connection states, with operations to bind servers, manage protocol upgrades, stream data, and handle secure connections using SSL/TLS. It enables real-time communication through WebSocket client management with async I/O, ALPN negotiation, and secure handshake handling. Examples include setting up HTTPS servers with custom certificates, streaming large payloads over HTTP/2, and managing encrypted WebSocket sessions with non-blocking I/O.",
      "description_length": 674,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 689,
    "min_description_length": 382,
    "avg_description_length": 543.5,
    "embedding_file_size_mb": 0.02221965789794922
  }
}