{
  "package": "dkml-package-console",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 9,
  "creation_timestamp": "2025-06-18T16:31:04.794853",
  "modules": [
    {
      "module_path": "Dkml_package_console_common.Windows_registry.Add_remove_programs",
      "description": "Deletes a program entry from the Windows registry to remove it from the Add/Remove Programs list. Creates a registry entry for a program, including installation path, organization, name, assets, version, and additional info. Used to manage the visibility of installed applications in the system's control panel during installation and uninstallation.",
      "description_length": 350,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dkml_package_console_common.Author_types",
      "description": "Provides functions to construct and manipulate build metadata, program identifiers, organizational details, and asset configurations. Works with records representing software build information, program names, organizations, and associated assets. Used to generate structured data for deployment pipelines and configuration files.",
      "description_length": 329,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkml_package_console_common.Windows_registry",
      "description": "Manages program entries in the Windows registry, enabling creation and deletion of entries that appear in the Add/Remove Programs list. It handles structured data such as installation paths, organization names, versions, and asset references. Operations include adding a program with detailed metadata or removing it to update system visibility. This allows precise control over how applications are represented in the operating system's uninstall interface.",
      "description_length": 458,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "dkml-package-console",
      "description": "Generates installer artifacts by combining Opam packages and OCaml installation scripts. Processes package metadata, build configurations, and platform-specific dependencies. Enables creation of distributable installers for cross-platform OCaml applications.",
      "description_length": 258,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkml_package_console_common",
      "description": "Constructs and manages build metadata, program identifiers, and registry entries, combining software configuration with system integration. It handles records for build information, program names, organizations, and registry structures, supporting operations like adding or removing program entries. Functions enable generating deployment data and modifying Windows registry entries for accurate application representation. Examples include creating structured build manifests and ensuring programs appear in the Add/Remove Programs list with proper metadata.",
      "description_length": 559,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkml_package_console_setup",
      "description": "Configures a package's console environment using an ABI context, organization details, program name, assets, and metadata. It processes command-line arguments and initializes console-specific settings. The function operates on structured data including organization names, program assets, and package arguments.",
      "description_length": 311,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkml_package_console_entry",
      "description": "Provides an entry point for initiating installation or uninstallation processes based on the specified ABI and installation direction. It operates with installation direction flags and ABI version data structures. Used to trigger platform-specific setup or cleanup routines during package deployment.",
      "description_length": 300,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dkml_package_console_uninstaller",
      "description": "Provides functions to initiate the uninstallation of a package based on its context, program name, and arguments. Operates on types representing installation contexts, program names, and package-specific arguments. Used to remove installed components during package deinstallation workflows.",
      "description_length": 291,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkml_package_console_create",
      "description": "Creates installer files by combining organization, program name, and program information with a version number. Operates on types representing organizational identity, program names, and descriptive metadata. Used to generate platform-specific installers for software distribution.",
      "description_length": 281,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 559,
    "min_description_length": 258,
    "avg_description_length": 348.55555555555554,
    "embedding_file_size_mb": 0.03314781188964844
  }
}