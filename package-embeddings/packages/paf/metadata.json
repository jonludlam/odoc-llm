{
  "package": "paf",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T23:22:02.030168",
  "modules": [
    {
      "module_path": "Alpn",
      "library": "paf.alpn",
      "description": "This module selects and initializes HTTP/1.1 or HTTP/2 protocols based on ALPN negotiation results during TLS handshake. It works with flow-based network connections, handling protocol-specific request and response types like `H1.Request.t`, `H2.Response.t`, and their corresponding body readers and writers. It is used to implement ALPN-aware clients and servers that can dynamically switch between HTTP versions over the same connection interface.",
      "description_length": 449,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Paf_mirage.Make.TLS",
      "library": "paf.mirage",
      "description": "This module implements a TLS layer over TCP flows, providing functions to establish secure connections, read and write encrypted data, and manage session lifecycle events like shutdown and renegotiation. It works with TCP flows to create TLS-secured communication channels, supporting operations such as certificate-based server and client authentication, key updates, and session renegotiation. Concrete use cases include securing network services like HTTPS servers or authenticated client connections over TLS.",
      "description_length": 513,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Paf_mirage.Make.TCP",
      "library": "paf.mirage",
      "description": "This module implements TCP flow operations for MirageOS, providing functions to read from and write to TCP connections using `Cstruct.t` buffers. It supports connection lifecycle management through `shutdown`, `close`, and reference handling with `no_close` and `to_close`. Use cases include building network servers and clients that require precise control over TCP communication, such as HTTP implementations or custom network protocols.",
      "description_length": 439,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Paf_mirage.Make",
      "library": "paf.mirage",
      "description": "This module implements TCP and TLS network protocols for building HTTP servers and clients on MirageOS. It provides functions to manage connection lifecycles with precise control over closing and shutting down flows, supports HTTP/1.1 and HTTP/2 over TLS with ALPN negotiation, and enables binding to specific network stacks and ports for serving requests. Concrete use cases include implementing secure HTTPS servers, HTTP proxies, and ALPN-based protocol negotiation for mixed HTTP/1.1 and HTTP/2 services.",
      "description_length": 508,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Paf_mirage",
      "library": "paf.mirage",
      "description": "This module implements TCP and TLS network protocols for building HTTP servers and clients on MirageOS. It provides functions to manage connection lifecycles, supporting HTTP/1.1 and HTTP/2 over TLS with ALPN negotiation, and enables binding to specific network stacks and ports. Use it to implement secure HTTPS servers, HTTP proxies, or services requiring ALPN-based protocol negotiation between HTTP/1.1 and HTTP/2.",
      "description_length": 418,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Paf",
      "library": "paf",
      "description": "This module implements a runtime for handling network services using Lwt for concurrency, providing functions to run servers and manage connections over flows. It works with abstract connection types, Mimic flows, and service definitions that encapsulate connection handling logic. Concrete use cases include building asynchronous TCP or TLS-based network servers that process incoming connections and manage their lifecycles.",
      "description_length": 426,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 513,
    "min_description_length": 418,
    "avg_description_length": 458.8333333333333,
    "embedding_file_size_mb": 0.08737564086914062
  }
}