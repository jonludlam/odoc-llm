{
  "package": "autofonce_core",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:49:23.101812",
  "modules": [
    {
      "module_path": "Autofonce_core.Parser",
      "library": "autofonce_core",
      "description": "Converts location data into string representations, escapes strings for M4 processing, and reads test suite definitions from files. Operates on location and suite data types defined in the Types module. Used to parse input files into structured test suites and handle location-based identifiers.",
      "description_length": 295,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Autofonce_core.Types",
      "library": "autofonce_core",
      "description": "This module defines core data types for representing test checks, locations, and actions in a testing framework. It includes structured types for check outputs, steps, and detailed check configurations with fields like command, return code, and expected outputs. The module provides functions to convert these types to human-readable strings for logging or reporting purposes.",
      "description_length": 376,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Autofonce_core.Version",
      "library": "autofonce_core",
      "description": "Stores and exposes version metadata including the version string, commit hash, and commit date. Works with string and option types to represent version information. Used to provide build-time details for debugging, logging, or system identification.",
      "description_length": 249,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Autofonce_core",
      "library": "autofonce_core",
      "description": "This module implements core testing framework components including test suite parsing, structured type definitions for test operations, and version metadata handling. It processes location data into string representations, converts test configurations to human-readable formats, and exposes build-time version details. Used to parse test input files into executable suites, manage test execution contexts, and report framework version information.",
      "description_length": 447,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 447,
    "min_description_length": 249,
    "avg_description_length": 341.75,
    "embedding_file_size_mb": 0.05838584899902344
  }
}