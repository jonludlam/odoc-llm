{
  "package": "feat-num",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:42.972296",
  "modules": [
    {
      "module_path": "FeatNum.Enum",
      "library": "feat-num",
      "description": "This module implements enumerations with explicit size control, supporting operations like union, Cartesian product, and mapping functions over enumerated values. It works with polymorphic enumeration types where each element has an associated size, and supports building complex enumerations from simpler ones using combinators. Concrete use cases include generating structured test inputs, such as boolean values, lists, or dependent sequences where elements are context-sensitive.",
      "description_length": 483,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FeatNum.Num",
      "library": "feat-num",
      "description": "This module implements arbitrary-precision integer arithmetic with operations including addition, subtraction, multiplication, division with remainder, bitwise shifts, and comparisons. It works with the `t` type, which is an alias for `Big_int.big_int`, supporting both positive and negative integers of arbitrary size. Concrete use cases include cryptographic calculations, large-scale combinatorics, and precise financial computations where integer overflow must be avoided.",
      "description_length": 476,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FeatNum.IFSeq",
      "library": "feat-num",
      "description": "This module implements finite sequences with operations for concatenation, Cartesian product, mapping, and indexed access. It supports sequence construction, reversal, iteration, and sampling, working with elements of any type paired with integer indices. Concrete use cases include generating integer ranges, combining sequences of pairs, and extracting sampled elements from large sequences.",
      "description_length": 393,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FeatNum",
      "library": "feat-num",
      "description": "This module combines enumeration, arbitrary-precision integer arithmetic, and finite sequence manipulation into a unified framework for constructing and operating on structured, size-aware data. Key data types include polymorphic enumerated values, arbitrary-precision integers, and indexed sequences, with operations such as union, Cartesian product, arithmetic, and mapping. It enables tasks like generating complex test inputs, performing precise numerical calculations, and manipulating structured sequences. For example, it can generate all lists of a given length with specific elements, compute large factorials without overflow, or construct and sample from sequences of pairs.",
      "description_length": 685,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 685,
    "min_description_length": 393,
    "avg_description_length": 509.25,
    "embedding_file_size_mb": 0.014935493469238281
  }
}