{
  "package": "feat-num",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:50:48.608719",
  "modules": [
    {
      "module_path": "FeatNum.Num",
      "library": "feat-num",
      "description": "This module implements arbitrary-precision integer arithmetic with operations including addition, subtraction, multiplication, division with remainder, bitwise shifts, and comparisons. It works with the `t` type, which is an alias for `Big_int.big_int`, and provides conversions to and from regular integers. Concrete use cases include cryptographic calculations, large number manipulations, and precise financial computations where overflow must be avoided.",
      "description_length": 458,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FeatNum.IFSeq",
      "library": "feat-num",
      "description": "This module implements finite sequences with operations for concatenation, Cartesian product, mapping, and indexed access. It supports data types including polymorphic sequences, integer ranges, and standard library compatible sequences. Concrete use cases include generating combinatorial structures, sampling elements from large sequences, and building complex sequences from simpler components using map and product operations.",
      "description_length": 430,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FeatNum.Enum",
      "library": "feat-num",
      "description": "This module implements enumerations with explicit size control, supporting operations like union, Cartesian product, and mapping. It works with custom enumeration types that track element sizes, built from sequences, lists, or dynamic environments. Concrete use cases include generating instruction sequences with environment dependencies, sampling elements by size, and constructing complex enumerated types such as lists or pairs with controlled distribution.",
      "description_length": 461,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FeatNum",
      "library": "feat-num",
      "description": "This module combines arbitrary-precision arithmetic, finite sequence operations, and controlled-size enumerations. It supports precise numeric calculations, combinatorial generation, and environment-aware enumeration of complex data structures. Use it for tasks like generating test cases with size constraints, performing exact financial or cryptographic computations, or building custom enumerated types with dynamic sizing.",
      "description_length": 426,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 461,
    "min_description_length": 426,
    "avg_description_length": 443.75,
    "embedding_file_size_mb": 0.05843353271484375
  }
}