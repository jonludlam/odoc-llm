{
  "package": "aliases",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:13.849206",
  "modules": [
    {
      "module_path": "Bitree",
      "library": "bitree",
      "description": "This module implements a binary indexed tree (Fenwick tree) that supports efficient range queries and point updates. It works with associative structures mapping integers to arbitrary values, maintaining cumulative information over intervals. Use it for dynamic frequency tables, prefix sums with selective updates, or range-aggregation problems where keys are integers within a bounded domain.",
      "description_length": 394,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Quadtree",
      "library": "quadtree",
      "description": "This module implements a quadtree data structure for efficiently storing and querying spatial data within 2D rectangular regions. It supports operations to insert, remove, and fold over elements indexed by floating-point coordinates, with control over traversal behavior using the `instr` type. Typical use cases include spatial indexing for geographic data, collision detection in simulations, and region-based querying in interactive maps.",
      "description_length": 441,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Radix",
      "library": "patriciatree",
      "description": "This module implements a radix tree data structure that efficiently stores and retrieves key-value bindings using string prefixes. It supports operations to add or remove specific key-value pairs, fold over matches of a given prefix, and limit the number of results during traversal. Concrete use cases include routing tables in networking, auto-complete suggestions, and IP address lookups where partial matches are meaningful.",
      "description_length": 428,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ptree",
      "library": "patriciatree",
      "description": "This module implements a radix tree data structure that supports efficient insertion, removal, and traversal of key-value pairs using string prefixes. It provides operations to insert and remove entries, clear the tree, and fold over matching prefixes either fully or up to a specified maximum number of matches. Concrete use cases include routing tables in networking, auto-complete suggestions, and IP address lookups where prefix matching is essential.",
      "description_length": 455,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 455,
    "min_description_length": 394,
    "avg_description_length": 429.5,
    "embedding_file_size_mb": 0.014942169189453125
  }
}