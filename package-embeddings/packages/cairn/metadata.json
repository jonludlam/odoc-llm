{
  "package": "cairn",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T23:24:05.126316",
  "modules": [
    {
      "module_path": "Cairn.Parsing.Make",
      "library": "cairn",
      "description": "This module generates a parser that logs execution steps, captures multiple errors, and supports interactive exploration of parsing logs. It works with lexing buffers, string inputs, and parser configurations to produce detailed logs and error reports. Concrete use cases include debugging complex parsing scenarios, analyzing error recovery strategies, and visualizing parser behavior through a terminal interface.",
      "description_length": 415,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cairn.Parsing.MakeWithDefaultMessage",
      "library": "cairn",
      "description": "This module provides functions to parse input using a Menhir-generated parser while logging execution details and handling errors with default messages. It works with lexing buffers and string inputs, producing parsed values, log configurations, and error lists. Concrete use cases include interactive parsing with terminal navigation, logging parser execution to files, and combining both interactive and file-based logging workflows.",
      "description_length": 435,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cairn.ParserLog",
      "library": "cairn",
      "description": "This module tracks parser execution through a `configuration` type representing parser states and a stack of actions like shifts, reductions, and errors. It provides functions to build and modify parser logs, including applying actions, printing configurations, and exploring derivations via a TUI. Use cases include logging custom parser steps, visualizing parsing sequences, and debugging syntax errors with detailed state transitions.",
      "description_length": 437,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cairn.Parsing",
      "library": "cairn",
      "description": "This module provides a functor to create a decorated parser that supports error handling strategies and logging during parsing. It works with parser modules generated by Menhir, along with associated token and grammar definitions from `.cmly` files. Concrete use cases include building resilient parsers that can recover from syntax errors or log detailed parsing steps for debugging.",
      "description_length": 384,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cairn",
      "library": "cairn",
      "description": "This module implements a parser instrumentation system with two core components. The first manages detailed parser state tracking and action logging through configuration snapshots and a stack-based model, enabling interactive visualization of parsing sequences. The second provides a decorator for Menhir-generated parsers that integrates error recovery and execution logging directly into the parsing process, working with tokens and grammars defined in `.cmly` files.",
      "description_length": 470,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 470,
    "min_description_length": 384,
    "avg_description_length": 428.2,
    "embedding_file_size_mb": 0.07286643981933594
  }
}