{
  "package": "httpun-ws-eio",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:46.355801",
  "modules": [
    {
      "module_path": "Httpun_ws_eio.Server",
      "library": "httpun-ws-eio",
      "description": "Implements a WebSocket connection handler for incoming HTTP Upgrade requests. Accepts a stream socket and address, then initializes a WebSocket connection using provided input handlers and configuration. Useful for building asynchronous WebSocket servers that handle client communication over Eio's network primitives.",
      "description_length": 318,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_ws_eio.Client",
      "library": "httpun-ws-eio",
      "description": "This module implements a WebSocket client that connects to a remote server using Eio for asynchronous I/O. It provides functions to establish a connection with a given host, port, and resource, handle incoming WebSocket messages, and manage connection errors. The client works with stream sockets and handles WebSocket handshakes, message framing, and connection lifecycle events. Use it to build real-time communication clients for protocols like chat systems, live updates, or remote procedure calls over WebSocket.",
      "description_length": 517,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_ws_eio",
      "library": "httpun-ws-eio",
      "description": "This module provides WebSocket communication capabilities for both servers and clients using Eio's asynchronous I/O. It supports handling incoming HTTP Upgrade requests to establish server-side WebSocket connections and connecting to remote WebSocket servers with automatic handshake and message framing. The main data types include stream sockets and WebSocket connection handlers, with operations for sending and receiving messages, managing connection states, and handling errors. You can use it to implement real-time services like chat servers, live data feeds, or bidirectional RPC over WebSocket.",
      "description_length": 603,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 603,
    "min_description_length": 318,
    "avg_description_length": 479.3333333333333,
    "embedding_file_size_mb": 0.011322021484375
  }
}