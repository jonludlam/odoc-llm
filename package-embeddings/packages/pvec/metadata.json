{
  "package": "pvec",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:16.445370",
  "modules": [
    {
      "module_path": "Pvec.Make",
      "library": "pvec",
      "description": "This module provides persistent, trie-based data structures with efficient indexed access and dynamic growth, supporting operations like indexed element retrieval, in-place modifications, and batched appends. It works with an immutable vector type implemented as a bitwise trie, enabling quasi-constant time lookups and updates while maintaining persistence across modifications. The structure is particularly suited for applications requiring both random access performance and immutable state transitions, such as functional programming workflows or stateful computations with versioning.",
      "description_length": 590,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pvec",
      "library": "pvec",
      "description": "This module implements persistent vectors using bitwise tries, enabling efficient indexed access and updates with quasi-constant time complexity. It supports key operations like `get`, `set`, and `append`, maintaining immutability while allowing structural sharing for performance. Child modules extend functionality with custom branching factors, batch operations, and optimized traversal methods. Examples include building large vectors with indexed elements, efficiently modifying specific positions, and appending elements in a way that batches updates for performance.",
      "description_length": 573,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 590,
    "min_description_length": 573,
    "avg_description_length": 581.5,
    "embedding_file_size_mb": 0.0076923370361328125
  }
}