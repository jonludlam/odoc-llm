{
  "package": "fpath",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:43.543287",
  "modules": [
    {
      "module_path": "Fpath.Set",
      "library": "fpath",
      "description": "This module supports set operations for file system paths, including union, intersection, subset checks, and membership testing, alongside transformations like mapping, filtering, and partitioning. It manages collections of paths processed without file system access, relying on a consistent comparison function to ensure equivalence. Typical applications involve deduplicating path hierarchies, static analysis of directory structures, and converting between sets, sequences, or lists for batch processing.",
      "description_length": 507,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fpath.Map",
      "library": "fpath",
      "description": "This module provides path-aware associative collections with operations for ordered key management, value transformation, and structural inspection. It works with maps where keys represent normalized file system paths and values can be arbitrary data, maintaining hierarchical path ordering without filesystem interaction. Typical applications include organizing file metadata, tracking directory hierarchies, or analyzing path-based relationships in virtual file trees.",
      "description_length": 470,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Fpath",
      "library": "fpath",
      "description": "This module handles file system paths with platform-agnostic precision, supporting construction, normalization, and querying of hierarchical path structures. It distinguishes absolute and relative paths, manages segments including \".\" and \"..\", and manipulates extensions and basenames without filesystem access. The module includes set operations for managing path collections with union, intersection, and subset checks, as well as map operations for associating data with normalized paths in ordered structures. You can use it to analyze directory hierarchies, deduplicate paths, or track file metadata across virtual trees.",
      "description_length": 627,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 627,
    "min_description_length": 470,
    "avg_description_length": 534.6666666666666,
    "embedding_file_size_mb": 0.011315345764160156
  }
}