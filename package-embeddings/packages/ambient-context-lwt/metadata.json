{
  "package": "ambient-context-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:27.555030",
  "modules": [
    {
      "module_path": "Ambient_context_lwt.M",
      "library": "ambient-context-lwt",
      "description": "This module manages dynamic, thread-local ambient state using a heterogeneous map structure. It supports creating typed keys, binding values to keys within a scope, and retrieving or removing those values. Concrete use cases include managing request-specific data in web servers or propagating contextual information across asynchronous workflows without explicit parameter passing.",
      "description_length": 382,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ambient_context_lwt",
      "library": "ambient-context-lwt",
      "description": "This module enables ambient context propagation in Lwt-based asynchronous workflows through a dynamic, thread-local storage system keyed by typed Hmap identifiers. It provides a monadic bind operator for optional values and scoped value binding, allowing state to be implicitly carried across asynchronous boundaries. Developers can create typed keys, bind values to those keys within a computation, and retrieve or remove them later, all while preserving type safety. Example uses include tracking request-specific metadata in web servers or correlating logs across asynchronous operations without manual parameter threading.",
      "description_length": 626,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 626,
    "min_description_length": 382,
    "avg_description_length": 504.0,
    "embedding_file_size_mb": 0.007693290710449219
  }
}