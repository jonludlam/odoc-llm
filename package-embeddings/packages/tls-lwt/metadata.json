{
  "package": "tls-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:08.674949",
  "modules": [
    {
      "module_path": "Tls_lwt.Unix",
      "library": "tls-lwt",
      "description": "This module implements low-level TLS communication primitives over Unix file descriptors and Lwt I/O channels, handling TLS handshakes, data transfer, session shutdown, and protocol-level operations like renegotiation and key updates. It works directly with TLS configurations, sockets, and byte buffers, exposing explicit control over secure client and server sessions. Concrete use cases include establishing TLS-secured network servers, connecting to TLS-protected services, and managing encrypted data streams with precise error handling and session lifecycle control.",
      "description_length": 572,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tls_lwt",
      "library": "tls-lwt",
      "description": "This module enables TLS-secured communication over network sockets using Lwt for asynchronous I/O, managing both client and server sessions with configurations, handshakes, and encrypted data transfer. It provides high-level functions for wrapping existing sockets and handling TLS connections, while the low-level Unix submodule offers direct control over TLS sessions, including explicit handshake management, renegotiation, and buffer-level I/O operations. You can use it to implement secure network servers that accept TLS connections, build clients that connect to TLS-protected services, or manage encrypted streams with fine-grained control over session state and protocol behavior. Key data types include TLS configurations, communication channels (`ic`/`oc`), and session objects that track connection state and cryptographic parameters.",
      "description_length": 846,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "X509_lwt",
      "library": "tls-lwt",
      "description": "This module loads and authenticates X.509 certificates using Lwt for asynchronous I/O. It reads PEM-encoded certificate chains and private keys from files, and builds certificate authenticators based on trusted CAs, fingerprints, or certificate revocation lists. It directly handles `X509.Certificate.t` lists and `Tls.Config.certchain` values for use in TLS configurations.",
      "description_length": 374,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 846,
    "min_description_length": 374,
    "avg_description_length": 597.3333333333334,
    "embedding_file_size_mb": 0.011323928833007812
  }
}