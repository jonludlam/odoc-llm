{
  "package": "tls-lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:53.176595",
  "modules": [
    {
      "module_path": "Tls_lwt.Unix",
      "description": "Provides functions to establish and manage TLS connections using file descriptors or I/O channels, supporting both server and client roles with configuration-specific handshakes. Operates on file descriptors, input/output channels, and a session type `t` representing an active TLS connection. Enables reading from and writing to encrypted sessions, renegotiating connections, and managing session closure and key updates.",
      "description_length": 422,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "tls-lwt",
      "description": "Handles key exchange, encryption, and authentication using TLS protocols. Operates on cryptographic keys, certificates, and network streams. Enables secure web communications, email transmission, and encrypted data transfer over untrusted networks.",
      "description_length": 248,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tls_lwt",
      "description": "Establishes and manages TLS connections through file descriptors or I/O channels, supporting both client and server roles with configurable handshakes. It operates on a session type `t`, enabling encrypted read/write operations, connection renegotiation, and session management. Functions include initializing sessions, handling I/O, and updating keys during active connections. Examples include securing network communication, renegotiating encryption parameters, and managing session lifecycles in real-time applications.",
      "description_length": 523,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "X509_lwt",
      "description": "Reads PEM-encoded certificates and private keys from files or directories, constructs certificate chains, and builds X.509 authenticators with hash-based validation or file-based trust stores. Processes X509.Certificate.t lists and handles asynchronous I/O through Lwt. Used to load and validate TLS credentials in network applications requiring certificate-based authentication.",
      "description_length": 379,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 523,
    "min_description_length": 248,
    "avg_description_length": 393.0,
    "embedding_file_size_mb": 0.014952659606933594
  }
}