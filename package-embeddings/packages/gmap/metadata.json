{
  "package": "gmap",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:57:03.881464",
  "modules": [
    {
      "module_path": "Gmap.Make",
      "library": "gmap",
      "description": "This module provides operations for managing heterogeneous maps where each key's type determines its associated value's type, supporting efficient insertion, lookup, and traversal with logarithmic time complexity. It uses GADT-based keys to enforce type-safe value access and storage, leveraging balanced trees for performance while maintaining key uniqueness. Such structures are particularly useful in parsing binary protocols with variable-length, type-diverse extensions like TLS or IP options, where efficient validation and retrieval of typed fields are critical.",
      "description_length": 569,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gmap.Order",
      "library": "gmap",
      "description": "This module defines total ordering relations for GADT keys that enable efficient comparison operations required for balanced tree-based map structures. It works with GADT constructors and their associated value types to establish a canonical ordering between keys. Concrete use cases include comparing keys during insertion or lookup in the underlying `Map` to maintain logarithmic time complexity for operations.",
      "description_length": 413,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gmap",
      "library": "gmap",
      "description": "This module implements heterogeneous maps over GADTs, enabling type-safe storage and retrieval of values associated with keys that carry their value type. It supports efficient operations like insertion, lookup, and traversal with logarithmic time complexity, ensuring key uniqueness and type correctness. It is especially useful for parsing binary protocols with extensible, typed fields such as TLS extensions or IP options, where efficient and safe handling of diverse, structured data is required.",
      "description_length": 501,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 569,
    "min_description_length": 413,
    "avg_description_length": 494.3333333333333,
    "embedding_file_size_mb": 0.043883323669433594
  }
}