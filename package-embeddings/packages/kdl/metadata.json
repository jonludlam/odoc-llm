{
  "package": "kdl",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:48.470306",
  "modules": [
    {
      "module_path": "Kdl.Num",
      "library": "kdl",
      "description": "This module provides bidirectional conversion functions between a sum type representing numeric values (integers, raw integer strings, and raw float strings) and OCaml's numeric types, including safe and unsafe variants with precision/range validation. It supports equality checks between numeric values without requiring normalized representations, enabling direct comparison of raw string-based numbers. These operations are particularly useful for deserializing KDL documents into typed OCaml values and validating numeric representations during data parsing workflows.",
      "description_length": 572,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Kdl.L",
      "library": "kdl",
      "description": "This module provides lens-based accessors for navigating and manipulating KDL node structures, enabling type-safe extraction, transformation, and update operations on deeply nested fields like node names, annotations, arguments, properties, and child nodes. It works with KDL's core data representations\u2014nodes, annotated values, and primitive types (strings, numbers, booleans, null)\u2014using composable lenses to target elements by position, name, or annotation metadata. Typical use cases include querying specific values from hierarchical KDL documents, converting between value types in a type-preserving way, or building reusable accessors for frequent data transformations, though direct modifications should be used sparingly due to inefficiency in set operations.",
      "description_length": 768,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Kdl",
      "library": "kdl",
      "description": "This module processes hierarchical data structures with named nodes, properties, and annotated values, supporting parsing, construction, and transformation of KDL documents. It enables precise manipulation of nested values\u2014such as scalars, lists, and objects\u2014along with typed interpretations of numeric and annotated data. The numeric submodule handles safe conversion between KDL's numeric representations and OCaml types, allowing comparisons without normalization, while the lens-based submodule offers type-safe accessors for navigating and updating deeply nested node structures. Examples include extracting annotated timestamps, converting raw numeric strings to integers, and transforming document subtrees using composable lenses.",
      "description_length": 738,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 768,
    "min_description_length": 572,
    "avg_description_length": 692.6666666666666,
    "embedding_file_size_mb": 0.01131439208984375
  }
}