{
  "package": "kdl",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:29:45.480399",
  "modules": [
    {
      "module_path": "Kdl.Num",
      "description": "The module offers conversion, parsing, and formatting operations for numeric types including integers, floats, and a custom `t` type, supporting safe and raising variants for type transformations. It enables arithmetic manipulations and equality checks, facilitating tasks like data serialization, numerical computation, and type-safe numeric processing. Use cases include handling heterogeneous numeric inputs, ensuring type consistency in calculations, and converting between string representations and native numeric formats.",
      "description_length": 528,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Kdl.L",
      "description": "This module offers lenses for navigating and extracting values from deeply nested KDL structures, focusing on operations like hierarchical traversal, type-specific access, and list manipulation (e.g., `nth`, `each`, `filter`). It works with KDL nodes, annotations, and typed values (string, number, bool, etc.), enabling precise retrieval and composition of nested data. Use cases include parsing configuration files or transforming structured data where direct access to specific attributes or list elements is required.",
      "description_length": 521,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "kdl",
      "description": "Parses and generates KDL v2 documents using a structured representation of nodes and attributes. Processes nested hierarchies and key-value pairs with explicit syntax for comments and directives. Enables conversion between human-readable KDL text and an abstract syntax tree for programmatic manipulation.",
      "description_length": 305,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Kdl",
      "description": "Provides conversion, parsing, and formatting for numeric types, along with lenses for navigating and extracting values from complex KDL structures. It supports arithmetic operations, type checks, and safe or raising conversions between numeric representations, while enabling precise access to nested nodes, annotations, and lists. Users can serialize and deserialize numeric data, perform type-safe computations, and extract specific elements from deeply structured KDL documents. Examples include parsing configuration files, transforming nested data, and ensuring consistent numeric handling across heterogeneous inputs.",
      "description_length": 623,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 623,
    "min_description_length": 305,
    "avg_description_length": 494.25,
    "embedding_file_size_mb": 0.014942169189453125
  }
}