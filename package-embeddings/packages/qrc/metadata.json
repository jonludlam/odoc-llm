{
  "package": "qrc",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:30:20.780637",
  "modules": [
    {
      "module_path": "Qrc.Matrix",
      "description": "Provides operations to create and manipulate 2D matrices of boolean values, including initializing from bit sequences, accessing and modifying individual elements, and folding over all elements. Works with matrices represented as square grids with width determined at creation, and bit arrays for storage. Generates SVG images of matrices with customizable size, inversion, and quiet zone inclusion.",
      "description_length": 399,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qrc.Gf_256",
      "description": "Performs arithmetic operations on bytes within a Galois field defined by an irreducible polynomial and a generator. Supports addition, subtraction, multiplication, exponentiation, logarithms, and inversion of bytes using specified field parameters. Used in error correction and cryptographic algorithms requiring finite field computations.",
      "description_length": 339,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qrc.Prop",
      "description": "Calculates QR code dimensions, data capacity, and error correction parameters based on version and error correction level. It handles version-to-width mappings, byte counts for data and error correction, and alignment pattern positions. Provides precise encoding limits per mode and generates Reed-Solomon error correction polynomials.",
      "description_length": 335,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "qrc",
      "description": "Encodes data into QR codes with support for SVG, ANSI terminal, and text output. Operates on strings and byte sequences, generating structured QR matrices. Used to create scannable codes for URLs, configuration data, and command-line interfaces.",
      "description_length": 245,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qrc_fmt",
      "description": "Formats QR matrices using distinct text-based representations. It outputs ASCII art with spaces and hashes, ANSI-colored text, and UTF-8 block characters for varying levels of detail. It supports full-block and half-block rendering for compact or detailed visualizations.",
      "description_length": 271,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Qrc",
      "description": "Encodes and processes QR codes by managing 2D boolean matrices, performing Galois field arithmetic, and calculating encoding parameters. It supports matrix creation, manipulation, and visualization, byte-level finite field operations, and determines code structure, capacity, and error correction requirements. Users can generate matrices from bit sequences, compute error correction polynomials, and validate encoding constraints. Examples include creating a matrix with a specific quiet zone, calculating Reed-Solomon polynomials, and determining data capacity for a given version and error level.",
      "description_length": 599,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 599,
    "min_description_length": 245,
    "avg_description_length": 364.6666666666667,
    "embedding_file_size_mb": 0.022208213806152344
  }
}