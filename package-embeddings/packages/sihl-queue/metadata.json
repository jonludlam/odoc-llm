{
  "package": "sihl-queue",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:38.735668",
  "modules": [
    {
      "module_path": "Sihl_queue.InMemory",
      "library": "sihl-queue",
      "description": "This module provides an in-memory, non-persistent job queue for testing purposes. It supports job dispatching with optional delays, batch dispatching of multiple jobs, and registration of job handlers. The queue works with job data structures defined via `Sihl__.Contract_queue.job` and operates with Lwt-based asynchronous workflows. Concrete use cases include temporarily queuing background tasks during development or testing, such as sending test emails or processing mock events, without requiring persistence or locking.",
      "description_length": 526,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_queue.MariaDb",
      "library": "sihl-queue",
      "description": "This module provides functions for dispatching and managing jobs in a persistent queue with MariaDB as the backend. It supports job registration, delayed execution, batch dispatching, and reverse-order queueing for prioritization. Concrete use cases include processing background tasks like sending emails, handling file uploads, or running scheduled operations with guaranteed delivery and locking.",
      "description_length": 399,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_queue.PostgreSql",
      "library": "sihl-queue",
      "description": "This module implements a persistent job queue with PostgreSQL as the backend, providing operations to enqueue jobs, enqueue multiple jobs in reverse order, register job handlers, and create a web dashboard router. It works with job data structures that include processing functions and context metadata, supporting delayed execution and scoped routing. Concrete use cases include managing background tasks like email dispatch or data processing pipelines with guaranteed delivery and visibility into queue state via a web interface.",
      "description_length": 532,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_queue",
      "library": "sihl-queue",
      "description": "This module organizes job management by combining in-memory and database-backed queue systems to handle background tasks with typed payloads. It centers around job data structures that support serialization, retries, failure handling, and timed execution, with operations for dispatching, registering handlers, and batch processing. The in-memory implementation enables lightweight testing of deferred tasks like mock event handling, while the MariaDB and PostgreSQL backends ensure reliable execution for production workflows such as email delivery and data processing with delay support and web-based monitoring. Each implementation works seamlessly with Lwt-based asynchronous workflows and scoped routing for flexible integration into larger applications.",
      "description_length": 759,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 759,
    "min_description_length": 399,
    "avg_description_length": 554.0,
    "embedding_file_size_mb": 0.014944076538085938
  }
}