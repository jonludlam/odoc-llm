{
  "package": "pgx_value_core",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:04:10.784949",
  "modules": [
    {
      "module_path": "Pgx_value_core",
      "library": "pgx_value_core",
      "description": "The module supports bidirectional conversion between PostgreSQL values and OCaml types like `bool`, `float`, `int`, `string`, `option`, and structured formats such as `hstore` key-value lists, `Uuidm.t`, and Core_kernel's `Date.t`/`Time.t`. It provides type-safe marshaling for handling complex SQL types (e.g., `inet`, `point`, `uuid`) and includes utilities for error-resilient parsing, binary/S-expression serialization, and precise temporal data interoperability. This is particularly useful in database applications requiring robust mapping of custom PostgreSQL types to OCaml representations or managing schema-driven data transformations.",
      "description_length": 645,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 645,
    "min_description_length": 645,
    "avg_description_length": 645.0,
    "embedding_file_size_mb": 0.004073143005371094
  }
}