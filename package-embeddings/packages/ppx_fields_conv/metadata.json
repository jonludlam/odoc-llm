{
  "package": "ppx_fields_conv",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:59:30.274268",
  "modules": [
    {
      "module_path": "Ppx_fields_conv.Selector.Per_field",
      "library": "ppx_fields_conv",
      "description": "This module defines a type `t` that represents different aspects of record fields, such as getters, setters, field names, and field definitions. It is used to select and manipulate specific components of record types in a structured way. Concrete use cases include generating or processing record field accessors and mutators during code transformation or serialization.",
      "description_length": 370,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_fields_conv.Selector.Iterator",
      "library": "ppx_fields_conv",
      "description": "This module defines a polymorphic variant type `t` representing operations for iterating and transforming data structures. It includes constructors like `Map`, `Fold`, and `Iter` for common traversal and transformation tasks. Use cases include defining custom iteration strategies for containers or implementing generic algorithms over structured data.",
      "description_length": 352,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_fields_conv.Selector.Direct_iterator",
      "library": "ppx_fields_conv",
      "description": "This module defines a polymorphic variant type `t` representing specific operations for field-based data manipulation, such as `Fold`, `Map`, and `Iter`. It is used to select and apply transformations over record fields in a structured and composable way. Concrete use cases include generating traversal functions for records, enabling operations like folding over all fields or mapping values while preserving structure.",
      "description_length": 421,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_fields_conv.Selector",
      "library": "ppx_fields_conv",
      "description": "This module defines a polymorphic variant type `t` that represents different modes of record field selection and data traversal, including per-field operations, generic iteration, and direct field-based transformations. It provides functions for comparing, serializing, and generating code based on these selectors, enabling precise control over record processing during derivation. Concrete use cases include implementing custom record serializers, generating field accessors, and defining traversal strategies for structured data in code generation pipelines.",
      "description_length": 561,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_fields_conv",
      "library": "ppx_fields_conv",
      "description": "This module provides functions for defining and manipulating record field selection strategies through a polymorphic variant type. It supports operations such as comparing selectors, generating code for field traversal, and applying transformations per field. It is used to implement custom serializers, generate field accessors, and define data traversal strategies in code generation pipelines.",
      "description_length": 396,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 561,
    "min_description_length": 352,
    "avg_description_length": 420.0,
    "embedding_file_size_mb": 0.07285499572753906
  }
}