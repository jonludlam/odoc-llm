{
  "package": "aws-elasticloadbalancing",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 156,
  "creation_timestamp": "2025-07-15T23:25:41.144306",
  "modules": [
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConfigureHealthCheckInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring health checks on a load balancer, including the load balancer name and health check parameters. It provides functions to create, parse, and serialize the configuration for use in API requests. Use this module when setting up or modifying health check settings for an Elastic Load Balancer in AWS.",
      "description_length": 349,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles errors related to missing policy types in AWS Elastic Load Balancing operations. It defines a unit type for representing the absence of a policy type, along with functions to parse, convert to query format, and serialize to and from JSON. It is used when interacting with AWS APIs to handle and propagate errors where a specified policy type does not exist.",
      "description_length": 377,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPolicyTypesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing load balancer policy types by providing functions to construct, parse, and serialize policy type descriptions. It works with XML nodes, JSON values, and AWS query parameters to facilitate interactions with AWS Elastic Load Balancing services. Use cases include retrieving and processing policy type metadata from AWS API responses.",
      "description_length": 376,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles parsing, serialization, and transformation of load balancer description data from AWS Elastic Load Balancing. It works with XML nodes, JSON values, and query parameters, converting them to and from a list of load balancer description records. Use this module when retrieving, modifying, or sending load balancer configurations through AWS APIs.",
      "description_length": 364,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeTagsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles input parameters for describing tags of load balancers in AWS Elastic Load Balancing. It works with load balancer names limited to a maximum of 20 entries and supports operations to create, parse, and serialize input data to query or JSON formats. It is used when retrieving tags associated with specific load balancers via the AWS API.",
      "description_length": 356,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LBCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring load balancer cookie stickiness policies, including optional policy names and cookie expiration periods. It provides functions to create, serialize, and parse these policies using JSON, query parameters, or XML. Use this module when managing ELB stickiness settings programmatically, such as when setting up session persistence or integrating with AWS APIs.",
      "description_length": 410,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AppCookieStickinessPolicies",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles app cookie stickiness policies for load balancers. It provides functions to parse XML input into policy lists, convert policies to query parameters or JSON format, and construct policies from JSON data. It works directly with lists of `AppCookieStickinessPolicy.t` records, supporting configuration and management of sticky sessions in AWS Elastic Load Balancing.",
      "description_length": 383,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveAvailabilityZonesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for handling the output of removing availability zones from a load balancer, specifically containing a list of availability zones. It provides functions to construct, parse, and serialize the structure to query parameters or JSON format. Concrete use cases include managing load balancer configurations in AWS Elastic Load Balancing by updating associated availability zones.",
      "description_length": 412,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAccessPointOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for handling the output of creating an access point in a load balancing service, specifically capturing the DNS name associated with the access point. It provides functions to construct, parse, and serialize this data structure to and from XML, JSON, and query formats. Use this module when managing load balancer access points to retrieve and transmit their DNS configuration details programmatically.",
      "description_length": 439,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AvailabilityZones",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of availability zone lists for AWS Elastic Load Balancing operations. It works with lists of base string types to represent availability zones, supporting conversions to and from XML, JSON, and query formats. It is used when configuring or retrieving load balancer settings that involve availability zones.",
      "description_length": 379,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidSubnetException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid subnet exceptions. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. Useful for error handling in load balancer configuration workflows.",
      "description_length": 278,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Subnets",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the conversion and manipulation of subnet lists in AWS Elastic Load Balancing. It provides functions to parse subnet data from XML, convert it to query parameters or JSON, and extract subnet information from JSON responses. It works specifically with lists of base string types, representing subnet IDs, and is used when configuring or retrieving load balancer subnet configurations.",
      "description_length": 403,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CertificateNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling certificate not found errors in AWS Elastic Load Balancing. It provides operations for creating, parsing, and converting error data to query parameters, JSON, and back. Use this module when interacting with AWS APIs to manage or respond to missing certificate scenarios in load balancer configurations.",
      "description_length": 372,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Tag",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing tags with a key and an optional value. It provides functions to create, parse, and convert tags to and from query parameters, XML nodes, and JSON format. It is used to manage metadata for AWS Elastic Load Balancing resources, such as load balancers or target groups, during API interactions.",
      "description_length": 345,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAccessPointInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and operations for creating an Elastic Load Balancing access point. It includes functions to construct, parse, and serialize the access point configuration, which consists of required and optional fields like load balancer name, listeners, availability zones, subnets, security groups, scheme, and tags. It is used to configure and send create access point requests to AWS ELB.",
      "description_length": 417,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AdditionalAttribute",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for key-value pairs used in load balancer configurations, with operations to create, serialize, and convert instances to and from XML, JSON, and query formats. It works with optional string-typed keys and values, primarily for configuring additional attributes in AWS Elastic Load Balancing. Concrete use cases include setting timeout settings or logging options when creating or updating load balancers via the AWS API.",
      "description_length": 457,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for specifying input parameters to delete a load balancer policy, including the load balancer and policy names. It provides functions to construct, serialize, and parse these inputs in various formats such as JSON and query strings. Concrete use cases include configuring load balancer policies in AWS Elastic Load Balancing workflows and handling policy deletion requests in API clients.",
      "description_length": 425,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagKeyList",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of tag keys for AWS Elastic Load Balancing resources. It provides functions to parse, convert to query format, and serialize to and from JSON for use in API requests and responses. The module works with lists of `TagKeyOnly` structures, typically used when managing metadata tags on load balancers.",
      "description_length": 324,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the structure and operations for configuring load balancer attributes, including cross-zone load balancing, access logging, connection draining, and connection settings. It provides functions to create, parse, and serialize these attributes for use in API requests or configuration management. Concrete use cases include setting up or updating load balancer behavior in AWS Elastic Load Balancing services.",
      "description_length": 426,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeAccessPointsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing load balancer access points in AWS Elastic Load Balancing. It includes functions to construct, parse, and convert load balancer descriptions and pagination markers to and from XML, JSON, and query formats. It is used when retrieving and processing information about load balancer configurations and their access points.",
      "description_length": 364,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Ports",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of port lists for AWS Elastic Load Balancing operations. It works with lists of integers representing ports, providing functions to convert these lists to and from XML, JSON, and query string formats. Use this module when interacting with load balancer APIs that require port configurations in specific wire formats.",
      "description_length": 374,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SecurityGroups",
      "library": "aws-elasticloadbalancing",
      "description": "Handles serialization and deserialization of security group lists for AWS Elastic Load Balancing. Works with string lists representing security group IDs, converting between XML, JSON, and query parameter formats. Used when configuring or retrieving load balancer security settings in AWS APIs.",
      "description_length": 294,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles parsing, converting, and constructing lists of policy descriptions, primarily working with XML nodes and JSON values. It provides functions to transform policy description lists into AWS query format or JSON, and to construct or extract them from JSON. Use this module when interacting with AWS Elastic Load Balancing APIs that require policy descriptions in different data formats.",
      "description_length": 402,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddTagsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for adding tags to AWS Elastic Load Balancing resources. It defines a unit type to represent the absence of a return value, with functions to convert data to query parameters, JSON, and back. Use this module when interacting with AWS ELB tagging operations that require empty responses to be processed in a type-safe manner.",
      "description_length": 396,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Listeners",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of listener lists for load balancers. It provides functions to convert listener lists to and from XML, JSON, and query formats, supporting API interactions. Use this module when configuring or retrieving load balancer listeners in AWS Elastic Load Balancing workflows.",
      "description_length": 341,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConnectionDraining",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring connection draining on an Elastic Load Balancer, with fields indicating whether it is enabled and the optional timeout period. It provides functions to construct, parse, and serialize this configuration for use in API requests. Use this module when setting up or modifying load balancer attributes that require connection draining behavior.",
      "description_length": 393,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerAttributeNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the absence of load balancer attributes in AWS Elastic Load Balancing operations. It provides functions to create, parse, and serialize empty values, primarily used when a requested load balancer attribute does not exist. It supports query and JSON formats for interaction with AWS APIs.",
      "description_length": 307,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing load balancer policy types, including their name, description, and associated attribute type descriptions. It provides functions to construct, parse, and serialize these descriptions to and from XML, JSON, and query formats. Concrete use cases include handling policy type metadata in AWS Elastic Load Balancing API interactions, such as retrieving and configuring load balancer policies.",
      "description_length": 440,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesForBackendServerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for setting load balancer policies on a backend server in AWS Elastic Load Balancing. It includes fields for the load balancer name, instance port, and a list of policy names, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when applying policies to backend instances in ELB configurations.",
      "description_length": 389,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeregisterEndPointsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of deregistering endpoints in an Elastic Load Balancing service. It provides functions to create, parse, and serialize a response containing a list of instances. Use this module when processing the result of a deregistration request, converting it to or from JSON, query parameters, or XML.",
      "description_length": 321,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAppCookieStickinessPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for creating an application cookie stickiness policy in an AWS Elastic Load Balancing API call. It defines a unit type to represent the empty response and provides functions to convert values to query parameters and JSON, along with parsing from JSON. It is used when interacting with load balancer policies that require cookie-based session affinity.",
      "description_length": 423,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeNames",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of a list of policy type names used in AWS Elastic Load Balancing. It works with lists of strings represented as `Aws.BaseTypes.String.t list`, providing conversions to and from JSON, query parameters, and XML. It is used when interacting with AWS APIs to manage or retrieve policy type configurations.",
      "description_length": 360,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TooManyTagsException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an error condition for exceeding tag limits. It provides functions to construct, parse, and serialize the error in various formats, including JSON and AWS query format. Use this module when handling or reporting errors related to excessive tagging in AWS Elastic Load Balancing operations.",
      "description_length": 343,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerAttributesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for describing load balancer attributes, containing a single field for the load balancer name. It provides functions to construct, parse, and convert the input to various formats such as JSON and query parameters. It is used when retrieving configuration details of a specific load balancer in AWS Elastic Load Balancing.",
      "description_length": 361,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SubnetNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling the absence of a subnet in load balancer configurations. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back from JSON. This is used when interacting with AWS Elastic Load Balancing APIs to represent cases where a specified subnet does not exist.",
      "description_length": 376,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddTagsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for adding tags to load balancers in the AWS Elastic Load Balancing service. It includes functions to construct, parse, and serialize the input data, supporting operations like API request generation and JSON conversion. It works with load balancer names and tag lists to enable tagging resources during or after creation.",
      "description_length": 362,
      "index": 35,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling policy not found errors in AWS Elastic Load Balancing. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this module when interacting with AWS APIs to manage or respond to missing policy scenarios in load balancer configurations.",
      "description_length": 368,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveTagsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for removing tags from AWS Elastic Load Balancing resources. It defines a unit type to represent the absence of a return value, along with functions to convert data to query parameters, JSON, and back. It is used when performing tag removal operations that do not return additional data beyond a success or failure signal.",
      "description_length": 394,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Instance",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing an EC2 instance with an optional instance ID. It provides functions to create, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when interacting with AWS Elastic Load Balancing APIs that require specifying or retrieving associated EC2 instances.",
      "description_length": 337,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Listener",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring load balancer listeners, including protocol, port mappings, and optional SSL certificate identifiers. It provides functions to construct, serialize, and deserialize listener configurations for use with AWS Elastic Load Balancing. Use this module when setting up or modifying load balancer listeners, particularly when integrating with AWS APIs or managing infrastructure as code.",
      "description_length": 432,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagKeyOnly",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing a tag key in AWS Elastic Load Balancing. It provides functions to create, parse, and serialize the structure to query parameters or JSON, specifically handling optional string keys. It is used when managing resource tags, such as filtering or listing tags associated with load balancers.",
      "description_length": 341,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLBCookieStickinessPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of creating an LB cookie stickiness policy in an AWS Elastic Load Balancing context. It provides operations to construct, parse, and serialize the output as a query or JSON, specifically working with unit type values. Concrete use cases include integrating with AWS API calls to manage load balancer stickiness policies programmatically.",
      "description_length": 413,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TooManyAccessPointsException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling the `TooManyAccessPointsException` error in AWS Elastic Load Balancing. It provides operations for creating, parsing, and converting the exception to query parameters or JSON format. Use this module when interacting with AWS APIs to manage load balancer access points and handle rate-limiting errors.",
      "description_length": 370,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ListenerDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of listener descriptions for load balancers. It works with XML nodes, JSON values, and query parameters, converting between these formats and the internal listener description type. It is used when retrieving or configuring load balancer listeners via API calls.",
      "description_length": 335,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerNames",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of load balancer names in AWS Elastic Load Balancing operations. It provides functions to convert lists of strings to query parameters, JSON, and to parse them from XML responses. Use this module when working with AWS API calls that require or return multiple load balancer names, such as describing or deleting multiple load balancers.",
      "description_length": 362,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLBCookieStickinessPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and associated operations for creating an LB cookie stickiness policy in AWS Elastic Load Balancing. It includes functions to construct, parse, and serialize the policy configuration, which consists of a load balancer name, policy name, and optional cookie expiration period. It is used to configure session stickiness based on cookies for load balancer policies.",
      "description_length": 403,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerListenerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of a load balancer listener deletion operation. It provides functions to convert unit values to query parameters, JSON objects, and back, ensuring correct serialization and deserialization. It is used specifically for representing empty responses in AWS Elastic Load Balancing API calls.",
      "description_length": 363,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of load balancer policy creation responses. It works with unit type values, converting them to and from JSON and query formats. It is used to process empty responses from AWS Elastic Load Balancing API calls that indicate successful policy creation.",
      "description_length": 307,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing policy attributes in Elastic Load Balancing, with optional name and value fields. It provides functions to construct, parse, and convert these attributes to and from JSON and query formats. It is used when managing load balancer policies, such as retrieving or setting attributes like SSL protocols or ciphers.",
      "description_length": 364,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddAvailabilityZonesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for adding availability zones to a load balancer, including the load balancer name and a list of availability zones. It provides functions to construct, parse, and serialize the input for use in API requests. Use this module when configuring load balancer availability zones via AWS Elastic Load Balancing.",
      "description_length": 346,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing tags associated with a load balancer, including the load balancer's name and a list of tags. It provides functions to construct, serialize, and parse this structure in various formats such as JSON, query parameters, and XML. It is used when managing metadata tags for load balancers in AWS Elastic Load Balancing services.",
      "description_length": 374,
      "index": 50,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Policies",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for managing load balancer policies, including app cookie stickiness, LB cookie stickiness, and other policy names. It provides functions to construct, parse, and serialize policy data for use with AWS Elastic Load Balancing APIs. Use this module when configuring or retrieving load balancer policies in AWS-based applications.",
      "description_length": 364,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.HealthCheck",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a health check configuration for load balancers, including target, interval, timeout, and threshold values. It provides functions to create, parse, and serialize health check data to JSON, query parameters, or XML. Use this module when configuring or retrieving health check settings for AWS Elastic Load Balancing resources.",
      "description_length": 345,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPolicyTypesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for input parameters used to describe load balancer policy types. It includes functions to create, parse, and convert the structure to query or JSON formats. It works with a list of policy type names and is used when retrieving details about available policies for Elastic Load Balancing.",
      "description_length": 325,
      "index": 53,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LBCookieStickinessPolicies",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles a list of load balancer cookie stickiness policies. It provides functions to convert policy lists to and from XML, JSON, and query formats. Use it when configuring or retrieving sticky session settings for ELB load balancers.",
      "description_length": 245,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeTypeDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and transformation of policy attribute type descriptions. It works with lists of `PolicyAttributeTypeDescription.t` records, converting them to and from XML, JSON, and query formats. It is used when interacting with AWS Elastic Load Balancing APIs to manage policy attribute types.",
      "description_length": 337,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteAccessPointInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and serialization functions for deleting an access point in Elastic Load Balancing. It works with the `t` record containing a `load_balancer_name` string, providing operations to construct, parse, and convert the structure to query parameters, JSON, and from JSON. It is used when issuing delete requests for load balancers through the AWS API.",
      "description_length": 384,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of load balancer policy attributes. It works with lists of `PolicyAttribute.t` values, supporting conversion to and from XML, JSON, and query formats. It is used when configuring or retrieving policies for Elastic Load Balancing services, such as setting sticky session attributes or SSL negotiation settings.",
      "description_length": 382,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicateAccessPointNameException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an error condition for duplicate load balancer names. It provides functions to construct, parse, and serialize the error to common formats like JSON and query strings. It is used when handling API responses that indicate a conflict due to duplicate access point names in load balancing operations.",
      "description_length": 351,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicateListenerException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an error condition where a listener is duplicated. It includes operations to construct, parse, and convert the error to query parameters or JSON format. Use this module when handling duplicate listener errors in AWS Elastic Load Balancing operations.",
      "description_length": 304,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeTagsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing tags for Elastic Load Balancing resources, specifically by managing a collection of tag descriptions. It provides functions to construct, parse, and serialize this output data to different formats such as JSON and query parameters. Use this module when retrieving and working with resource tags in AWS Elastic Load Balancing workflows.",
      "description_length": 380,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AppCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for application cookie stickiness policies, with operations to create, serialize, and parse these policies. It works with XML and JSON data formats, enabling conversion to and from query parameters and JSON objects. Concrete use cases include configuring load balancer stickiness policies using cookie-based session affinity in AWS Elastic Load Balancing.",
      "description_length": 392,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ModifyLoadBalancerAttributesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for modifying load balancer attributes, including the load balancer name and the attributes to update. It provides functions to construct, parse, and serialize the input for API requests, supporting operations like enabling access logs or changing idle timeout settings. Use this module when configuring Elastic Load Balancing behavior through the AWS API.",
      "description_length": 396,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicatePolicyNameException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling the `DuplicatePolicyNameException` in AWS Elastic Load Balancing. It provides operations for creating, parsing, and converting the exception to query parameters or JSON format. Use this module when interacting with AWS APIs that require handling of duplicate policy name errors.",
      "description_length": 348,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AdditionalAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the conversion and manipulation of additional attributes for Elastic Load Balancing, specifically working with lists of `AdditionalAttribute.t`. It provides functions to parse XML input, convert to query format, and serialize to and from JSON. Use cases include preparing attribute data for API requests and processing responses from AWS services.",
      "description_length": 367,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of deleting a load balancer policy. It primarily works with the `unit` type, providing operations to construct, parse, and convert the output into query or JSON formats. It is used when confirming the successful deletion of a policy from an Elastic Load Balancer.",
      "description_length": 339,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerNamesMax20",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of up to 20 load balancer names, providing operations to convert them to and from JSON and query formats. It includes parsing from XML nodes and constructing empty lists. It is used when interacting with AWS Elastic Load Balancing APIs that require multiple load balancer names as input.",
      "description_length": 313,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerListenerSSLCertificateOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the response for setting an SSL certificate on a load balancer listener. It provides operations to create, parse, and serialize the output, which is an empty structure (`unit`). Use this module when configuring SSL certificates for Elastic Load Balancers in AWS.",
      "description_length": 282,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InstanceStates",
      "library": "aws-elasticloadbalancing",
      "description": "Handles parsing and serialization of EC2 instance states for load balancers. Works with lists of `InstanceState.t` records, converting them to and from XML, JSON, and query parameters. Used when retrieving or updating instance health statuses in Elastic Load Balancing.",
      "description_length": 269,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a record type representing the detailed configuration of a load balancer, including its network settings, associated instances, security groups, and health checks. It provides functions to construct, parse, and serialize load balancer descriptions for use in querying or processing AWS ELB data. Concrete use cases include retrieving load balancer metadata from AWS responses, building ELB configurations for provisioning, and converting ELB data to JSON for logging or further processing.",
      "description_length": 509,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPoliciesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing load balancer policies, primarily by managing a collection of policy descriptions. It provides functions to construct, parse, and serialize policy data to query parameters or JSON format. Use this module when retrieving and processing policy information from an Elastic Load Balancing service response.",
      "description_length": 347,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TooManyPoliciesException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an exception for exceeding policy limits. It provides functions to construct, parse, and convert the exception to query parameters, JSON, or from JSON. Use this when handling AWS Elastic Load Balancing API errors related to policy quotas.",
      "description_length": 292,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerListenerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for creating load balancer listeners, including the load balancer name and a list of listeners. It provides functions to construct, parse, and serialize the input data for API requests. Use this module when configuring new listeners for an Elastic Load Balancer in AWS.",
      "description_length": 309,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ListenerNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling cases where a listener is not found in load balancer configurations. It provides operations to create, parse, and serialize the unit value to query parameters or JSON, primarily used in error handling scenarios. Concrete use cases include validating listener existence during load balancer management and returning structured errors in API responses.",
      "description_length": 420,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AccessPointNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling cases where an access point is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. Use this module when you need to represent the absence of an access point in API responses or error handling scenarios.",
      "description_length": 345,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidSecurityGroupException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid security group exceptions. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. It is used to represent and serialize errors related to invalid security group configurations in API requests.",
      "description_length": 330,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyNames",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of policy names for AWS Elastic Load Balancing operations. It provides functions to convert policy name lists to and from JSON and query parameters, along with parsing from XML. It is used when configuring or retrieving load balancer policies through AWS API calls.",
      "description_length": 291,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeEndPointStateOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing endpoint states in Elastic Load Balancing. It provides functions to create, parse, and serialize endpoint state data, specifically working with `InstanceStates.t`. Use this module to retrieve and process the state of instances attached to a load balancer from AWS API responses in XML or JSON format.",
      "description_length": 345,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttribute",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing policy attributes with optional name and value fields, using AWS-specific string types. It provides functions to construct instances, convert to and from JSON and query formats, and parse from XML nodes. Use this module when configuring or retrieving load balancer policies, where attributes like session stickiness settings need to be encoded or decoded in API requests and responses.",
      "description_length": 439,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ListenerDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing a listener description, including an optional listener configuration and associated policy names. It provides functions to construct, parse, and convert listener descriptions to and from XML, JSON, and query formats. Use this module when managing Elastic Load Balancing listeners with policies in AWS deployments.",
      "description_length": 363,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPoliciesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for describing load balancer policies, including the load balancer name and policy names. It provides functions to construct, parse, and serialize the input for API requests. Use this module when querying AWS ELB to retrieve details about specific policies attached to a load balancer.",
      "description_length": 325,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing load balancer policies, including their names, types, and associated attributes. It provides functions to construct, parse, and serialize policy descriptions to and from XML, JSON, and query formats. Concrete use cases include managing Elastic Load Balancing policy configurations and integrating with AWS API requests and responses.",
      "description_length": 385,
      "index": 81,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerListenerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output structure for creating a load balancer listener in AWS Elastic Load Balancing. It defines a unit type and operations to construct, parse, and serialize the response data. Use this module when interacting with load balancer listener creation workflows that require query or JSON serialization.",
      "description_length": 323,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesForBackendServerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for setting load balancer policies on a backend server. It defines a unit type and operations to construct, parse, and serialize the response in various formats. Use this module when interacting with AWS Elastic Load Balancing to confirm successful policy application without returning additional data.",
      "description_length": 342,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CrossZoneLoadBalancing",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a single data type `t` representing cross-zone load balancing configuration with a boolean field indicating whether it is enabled. It provides functions to construct, parse, and convert the type to and from XML, JSON, and query formats. This module is used when configuring Elastic Load Balancing to enable or disable cross-zone traffic distribution.",
      "description_length": 370,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InstanceState",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing the state of an EC2 instance associated with a load balancer, including optional fields for instance ID, state, reason code, and description. It provides functions to construct, serialize, and parse this structure in various formats such as JSON, query parameters, and XML. It is used when retrieving or updating instance health information from Elastic Load Balancing services.",
      "description_length": 428,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAppCookieStickinessPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring application cookie stickiness policies in load balancing. It includes functions to create, serialize, and parse policy configurations using XML, JSON, and query parameters. Concrete use cases include setting up session persistence based on cookies when managing load balancer policies in AWS.",
      "description_length": 345,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesOfListenerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for setting load balancer policies on a listener in AWS Elastic Load Balancing. It defines a unit type and associated functions for parsing, converting to query format, and serializing to and from JSON. It is used when applying policies to listeners on load balancers, typically in conjunction with AWS SDK calls.",
      "description_length": 353,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddAvailabilityZonesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for handling the output of adding availability zones to a load balancer, specifically containing a list of availability zones. It provides functions to construct, parse, and serialize the structure to query or JSON formats, ensuring compatibility with AWS API requests and responses. Use cases include managing load balancer zone configurations in AWS Elastic Load Balancing workflows.",
      "description_length": 422,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagList",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of AWS Elastic Load Balancing tags, providing operations to convert between XML, JSON, and query formats. It supports parsing tag lists from XML nodes and serializing them for API requests or JSON output. Use this module when working with load balancer tags in AWS API interactions, such as listing or updating resource tags.",
      "description_length": 351,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.BackendServerDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing backend server descriptions for load balancers, including the instance port and associated policy names. It provides functions to construct, parse, and convert these descriptions to and from XML, JSON, and query formats. Use this module when configuring or retrieving backend server settings in Elastic Load Balancing services.",
      "description_length": 377,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RegisterEndPointsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of registering endpoints in a load balancer, specifically managing a collection of instances. It provides functions to construct, parse, and serialize the output data for use in API requests and responses. Use this module when working with load balancer endpoint registration workflows that require instance list manipulation and serialization.",
      "description_length": 375,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConnectionSettings",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a single data type representing connection settings for a load balancer, specifically tracking an idle timeout value. It provides functions to construct, serialize, and deserialize this data type to and from JSON, query parameters, and XML. Use this module when configuring or retrieving load balancer connection settings in AWS Elastic Load Balancing.",
      "description_length": 372,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeregisterEndPointsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for deregistering endpoints from a load balancer. It includes fields for the load balancer name and a list of instances, along with functions to construct, parse, and serialize the input for API requests. It is used when removing instances from an Elastic Load Balancer in AWS.",
      "description_length": 317,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerListenerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for deleting a load balancer listener, including the load balancer name and associated ports. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include configuring load balancer listeners during infrastructure setup or updates.",
      "description_length": 328,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveTagsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for removing tags from load balancers in the AWS Elastic Load Balancing service. It includes functions to construct, parse, and serialize the input data, supporting operations that specify which load balancers and which tag keys to remove. The module works directly with lists of load balancer names and tag keys, enabling precise control over tag management in API requests.",
      "description_length": 415,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for creating a load balancer policy in AWS Elastic Load Balancing. It includes fields for the load balancer name, policy name, policy type, and optional policy attributes, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when configuring custom policies for load balancers, such as setting SSL negotiation or backend authentication settings.",
      "description_length": 439,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SourceSecurityGroup",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing a source security group with optional owner alias and group name fields. It provides functions to construct, serialize, and deserialize this structure to and from JSON, query parameters, and XML. It is used when configuring load balancer policies that reference security groups by name or owner.",
      "description_length": 345,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeAccessPointsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for describing load balancer access points, including optional pagination parameters. It provides functions to construct, parse, and convert the input to query or JSON formats, specifically handling load balancer names, markers, and page sizes. It is used when retrieving access point configurations from Elastic Load Balancing, supporting paginated responses.",
      "description_length": 400,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of tag descriptions in AWS Elastic Load Balancing. It works with lists of `TagDescription` records, supporting conversion to and from XML, JSON, and query formats. It is used when managing metadata tags for load balancers, particularly during API requests and responses involving tag listing or filtering.",
      "description_length": 378,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.BackendServerDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of backend server descriptions in AWS Elastic Load Balancing. It works with lists of `BackendServerDescription.t` structures, providing direct conversions to and from XML, JSON, and query formats. It is used when retrieving or configuring backend server settings for load balancers, particularly during API interactions.",
      "description_length": 393,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerAttributesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for describing load balancer attributes in AWS Elastic Load Balancing. It provides functions to construct, parse, and serialize the response data, which includes optional load balancer attributes. It is used when retrieving and processing configuration details of a load balancer, such as access logs, deletion protection, and idle timeout settings.",
      "description_length": 389,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DetachLoadBalancerFromSubnetsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for detaching a load balancer from subnets, including the load balancer name and a list of subnets. It provides functions to construct, parse, and serialize the input for API requests, specifically handling conversions to query parameters and JSON format. It is used when updating load balancer subnet associations in AWS Elastic Load Balancing.",
      "description_length": 385,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ModifyLoadBalancerAttributesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for handling the output of modifying load balancer attributes, including the load balancer name and its updated attributes. It provides functions to construct, parse, and serialize this output in various formats such as JSON and query parameters. It is used when interacting with AWS Elastic Load Balancing to retrieve and process the result of attribute modification operations.",
      "description_length": 416,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeEndPointStateInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and associated operations for querying the state of endpoints in a load balancer. It includes functions to construct, parse, and serialize the input data, which consists of a load balancer name and an optional list of instances. It is used when retrieving the health status of specific instances attached to a load balancer.",
      "description_length": 364,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicateTagKeysException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an exception for duplicate tag keys in AWS Elastic Load Balancing operations. It provides functions to construct, parse, and convert the exception to common data formats like JSON and AWS query strings. It is used to handle errors when attempting to apply identically named tags to a load balancer.",
      "description_length": 352,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ApplySecurityGroupsToLoadBalancerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for applying security groups to an Elastic Load Balancer. It provides functions to construct, parse, and serialize the response data, which includes a list of security group IDs. Use cases include processing API responses after updating load balancer security groups and converting between XML, JSON, and internal data representations.",
      "description_length": 375,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AttachLoadBalancerToSubnetsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for attaching a load balancer to subnets, including the load balancer name and a list of subnet identifiers. It provides functions to construct, parse, and serialize the input data in various formats such as JSON, query parameters, and XML. Use this module when configuring load balancer subnet associations in AWS Elastic Load Balancing workflows.",
      "description_length": 388,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ApplySecurityGroupsToLoadBalancerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for applying security groups to a load balancer, consisting of the load balancer name and a list of security group IDs. It provides functions to construct, parse, and serialize the input for use in API requests, specifically when modifying load balancer security settings. The module handles XML, JSON, and query parameter formats for integration with AWS SDK operations.",
      "description_length": 411,
      "index": 108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveAvailabilityZonesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for removing availability zones from a load balancer. It includes operations to create, parse, and serialize the input data, supporting interactions with AWS Elastic Load Balancing. The structure contains the load balancer name and a list of availability zones, used when updating load balancer configuration.",
      "description_length": 349,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidEndPointException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid endpoint exceptions. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. It is used to represent and serialize errors related to invalid endpoints in API requests.",
      "description_length": 303,
      "index": 110,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RegisterEndPointsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for registering endpoints with a load balancer, including the load balancer name and a list of instances. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include preparing registration data for AWS Elastic Load Balancing API calls and converting between XML, JSON, and query formats.",
      "description_length": 386,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles parsing, formatting, and conversion of policy attribute descriptions for Elastic Load Balancing. It operates on lists of `PolicyAttributeDescription.t` values, supporting transformations to and from XML, JSON, and query formats. It is used when retrieving or configuring load balancer policies, particularly for working with backend server settings or SSL negotiation policies.",
      "description_length": 397,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Instances",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of EC2 instance lists used in Elastic Load Balancing operations. It provides functions to convert instance data to and from XML, JSON, and query formats, specifically working with `Instance.t` lists. Use this module when interacting with AWS Elastic Load Balancing APIs to manage instance health checks or register/deregister instances.",
      "description_length": 409,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AccessLog",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring access logs, including fields for enabling logs, specifying an S3 bucket, setting an emission interval, and defining a bucket prefix. It provides functions to construct, parse, and serialize access log configurations to and from XML, JSON, and query formats. Use this module when setting up or modifying access logging for load balancers in AWS Elastic Load Balancing services.",
      "description_length": 430,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeTypeDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing policy attributes in Elastic Load Balancing, including fields like attribute name, type, description, default value, and cardinality. It provides functions to construct, parse, and convert these descriptions to and from XML, JSON, and query formats. Use this module when configuring or retrieving load balancer policies, particularly when working with attribute metadata in AWS API interactions.",
      "description_length": 447,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidConfigurationRequestException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid configuration requests in AWS Elastic Load Balancing. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all centered around the unit value. Use this when interacting with AWS APIs to manage load balancer configurations and handle validation errors.",
      "description_length": 390,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DetachLoadBalancerFromSubnetsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of detaching a load balancer from subnets, primarily working with subnet data structures. It provides functions to construct, parse, and serialize the output for use in API responses or further processing. Concrete use cases include handling AWS Elastic Load Balancing API calls that return subnet detachment results in XML, JSON, or query formats.",
      "description_length": 379,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidSchemeException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid scheme exceptions in API responses. It includes operations for parsing, converting to query format, and serializing to and from JSON. Use this module when working with error responses related to unsupported load balancer schemes in AWS Elastic Load Balancing.",
      "description_length": 337,
      "index": 118,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AttachLoadBalancerToSubnetsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of attaching a load balancer to subnets, primarily working with subnet data structures. It provides functions to create, parse, and convert the output format to query parameters, JSON, and XML. Use this module when managing load balancer subnet associations in AWS Elastic Load Balancing workflows.",
      "description_length": 329,
      "index": 119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerListenerSSLCertificateInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring an SSL certificate on a load balancer listener. It includes functions to create, parse, and serialize the configuration for use with AWS Elastic Load Balancing operations. The structure holds the load balancer name, port, and SSL certificate ID, and supports input serialization to JSON, query parameters, and XML.",
      "description_length": 367,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConfigureHealthCheckOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing the output of a health check configuration operation, containing an optional `HealthCheck` object. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. It is used when configuring health checks for load balancers, allowing retrieval or modification of health check settings in AWS Elastic Load Balancing.",
      "description_length": 415,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteAccessPointOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of a load balancer deletion operation. It includes functions for creating, parsing, and converting the output to query parameters or JSON format. It is used when confirming the successful deletion of a load balancer in AWS Elastic Load Balancing.",
      "description_length": 322,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesOfListenerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for setting load balancer policies on a listener in AWS Elastic Load Balancing. It includes fields for the load balancer name, port, and a list of policy names, and provides functions to construct, parse, and serialize the input for API requests. It is used when configuring SSL policies or other listener-specific policies directly through the AWS API.",
      "description_length": 393,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and transformation of load balancer policy type descriptions. It works with lists of `PolicyTypeDescription.t` values, supporting operations to convert to and from XML, JSON, and query formats. It is used when retrieving or configuring policy types in Elastic Load Balancing services.",
      "description_length": 340,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancerPolicies",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing load balancer policies in AWS Elastic Load Balancing by converting input data into HTTP requests and parsing responses. It works with input and output types defined in `Aws_elasticloadbalancing.Types`, along with error types for handling failures. It is used to retrieve detailed configuration information about policies associated with a specific load balancer.",
      "description_length": 393,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeInstanceHealth",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing the health state of instances behind an Elastic Load Balancer. It works with input and output types specific to querying endpoint health, along with error handling for failed requests. It is used to construct and interpret HTTP calls to the AWS Elastic Load Balancing API, specifically for retrieving instance health status.",
      "description_length": 355,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancerPolicyTypes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing load balancer policy types by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the AWS Elastic Load Balancing service, along with error handling tailored to the operation. Use this module to retrieve information about available policy types supported by load balancers, such as SSL negotiation policies or access log policies, directly from AWS.",
      "description_length": 446,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.SetLoadBalancerListenerSSLCertificate",
      "library": "aws-elasticloadbalancing",
      "description": "This module sets the SSL certificate for a load balancer listener in AWS Elastic Load Balancing. It handles the conversion of input data to HTTP requests and parses responses or errors from the service. It works directly with load balancer listener configurations and SSL certificate identifiers.",
      "description_length": 296,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.ApplySecurityGroupsToLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles applying security groups to an Elastic Load Balancer by converting input data into properly signed HTTP requests and parsing responses or errors. It works with specific input and output types defined in the Elastic Load Balancing service, along with handling service-specific errors and standard AWS signing methods. It is used when modifying the security group configuration of an existing load balancer in an AWS environment.",
      "description_length": 447,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeleteLoadBalancerListeners",
      "library": "aws-elasticloadbalancing",
      "description": "This module deletes listeners from a load balancer in AWS Elastic Load Balancing. It handles the conversion between native OCaml types and HTTP requests/responses for the DeleteLoadBalancerListeners API call. It works directly with the DeleteLoadBalancerListenerInput type to specify which load balancer and ports to remove, and returns no output on success.",
      "description_length": 358,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.ModifyLoadBalancerAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module modifies attributes of a load balancer in AWS Elastic Load Balancing, such as access logs, connection draining, and cross-zone load balancing. It works with structured input and output types specific to load balancer attribute configurations, along with error types defined for AWS Elastic Load Balancing. Concrete use cases include enabling or disabling access logging, adjusting idle timeout settings, and configuring connection limits for a load balancer.",
      "description_length": 470,
      "index": 131,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_elasticloadbalancing.RemoveTags",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the removal of tags from resources in AWS Elastic Load Balancing. It works with `RemoveTagsInput` to construct requests and processes responses as either unit success or specific AWS errors. Use this module to programmatically strip tags from load balancers or other associated resources directly through AWS API calls.",
      "description_length": 339,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeleteLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the deletion of load balancers in AWS Elastic Load Balancing. It provides functions to construct HTTP requests for deleting a load balancer, parse responses, and handle errors specific to the delete operation. It works with the `DeleteAccessPointInput` type for input and returns no output on success, using custom error types to represent failure conditions such as invalid load balancer names or resource not found.",
      "description_length": 437,
      "index": 133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.RegisterInstancesWithLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles registering instances with a load balancer by converting input data into properly formatted HTTP requests and parsing responses or errors from AWS. It works directly with `RegisterEndPointsInput` and `RegisterEndPointsOutput` types, along with internal error types for failure handling. Concrete use cases include updating load balancer targets during deployment or scaling events by sending the correct query-encoded requests and interpreting the results.",
      "description_length": 476,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.DisableAvailabilityZonesForLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles disabling availability zones for a load balancer by converting input parameters into an HTTP request and processing the response. It works with `RemoveAvailabilityZonesInput` and `RemoveAvailabilityZonesOutput` types, along with internal error types for handling failures. It is used when modifying load balancer configuration to remove specific availability zones, ensuring traffic is no longer routed through them.",
      "description_length": 436,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateAppCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module creates an application cookie stickiness policy for Elastic Load Balancing. It handles HTTP requests to configure session stickiness based on cookies for load balancer listeners. The module works with input structures defining policy names, load balancer names, and cookie attributes, returning no output on success or an error if the request fails.",
      "description_length": 361,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLoadBalancerPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the creation of load balancer policies in AWS Elastic Load Balancing. It works with the `CreateLoadBalancerPolicyInput` type to construct HTTP requests and processes responses into unit output or specific errors. Use this module to define custom policies for load balancers, such as SSL negotiation or backend authentication policies, by sending properly formatted API requests.",
      "description_length": 398,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.AddTags",
      "library": "aws-elasticloadbalancing",
      "description": "This module adds tags to Elastic Load Balancing resources by converting tag data into a properly signed HTTP request. It handles input encoding into query parameters and decodes responses, managing errors specific to the tagging operation. Use it when programmatically organizing load balancers with metadata in AWS environments.",
      "description_length": 329,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancers",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing load balancers in AWS Elastic Load Balancing by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the `DescribeAccessPoints` operation, along with error handling tailored to the service's XML responses. It is used to query metadata and configuration details of existing load balancers, such as their DNS names, health checks, and attached instances.",
      "description_length": 449,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types",
      "library": "aws-elasticloadbalancing",
      "description": "This module models load balancer configurations and interactions with AWS Elastic Load Balancing, combining core types for attributes, policies, health checks, and network settings with submodules that handle serialization, parsing, and error conditions. It defines key data structures such as listeners, tags, subnets, SSL certificates, and policy types, along with operations for modifying attributes, registering endpoints, and managing access logs. Examples include configuring cookie stickiness policies, setting up health checks, attaching security groups, and handling errors like missing policies or invalid subnets. Submodules provide format conversions between XML, JSON, and query parameters, ensuring seamless API communication and data transformation across load balancer management tasks.",
      "description_length": 802,
      "index": 140,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.EnableAvailabilityZonesForLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module enables adding availability zones to a load balancer by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with AWS ELB types for availability zones and load balancer configurations. Use this module when programmatically expanding the availability zones of an ELB to distribute traffic across more regions.",
      "description_length": 418,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeleteLoadBalancerPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the deletion of load balancer policies in AWS Elastic Load Balancing. It works with the `DeleteLoadBalancerPolicyInput` type to construct HTTP requests and processes responses into unit output or specific errors. It is used to send API requests to remove custom policies from load balancers, handling encoding, signing, and error parsing.",
      "description_length": 358,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancerAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing attributes of a load balancer in AWS Elastic Load Balancing. It provides functions to convert input data into an HTTP request and parse the HTTP response into output or error types specific to the operation. It works with input and output types defined in the `Types` module and handles errors specific to the `DescribeLoadBalancerAttributes` API call.",
      "description_length": 383,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.AttachLoadBalancerToSubnets",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles attaching an Elastic Load Balancer to subnets by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with the `AttachLoadBalancerToSubnetsInput` and `AttachLoadBalancerToSubnetsOutput` data structures, representing the load balancer name and subnet identifiers. It is used when configuring load balancers in AWS VPC environments, specifically to enable traffic routing across multiple subnets.",
      "description_length": 512,
      "index": 144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles creating a load balancer by defining the input and output types for the operation, along with error handling specific to the AWS Elastic Load Balancing service. It provides functions to convert native input to an HTTP request and parse HTTP responses into output or errors, ensuring correct encoding and decoding of request parameters and responses. Concrete use cases include setting up new load balancers with specified configurations and handling service-specific errors during creation.",
      "description_length": 510,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.ConfigureHealthCheck",
      "library": "aws-elasticloadbalancing",
      "description": "This module configures health checks for load balancers by defining input and output types that map to AWS API requests and responses. It provides functions to convert native input to HTTP requests and parse HTTP responses into outputs or errors, specifically handling health check configurations. Use this module to set up or modify health check parameters for Elastic Load Balancing in AWS, such as timeout and interval settings.",
      "description_length": 431,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLoadBalancerListeners",
      "library": "aws-elasticloadbalancing",
      "description": "This module creates listeners for a load balancer, handling the conversion between native OCaml types and HTTP requests/responses. It works with `CreateLoadBalancerListenerInput` to configure listener properties and communicates errors through AWS-specific error types. Concrete use cases include setting up HTTPS or TCP listeners on an Elastic Load Balancer with specified ports and policies.",
      "description_length": 393,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.SetLoadBalancerPoliciesForBackendServer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles setting load balancer policies for backend servers in AWS Elastic Load Balancing. It works with the `SetLoadBalancerPoliciesForBackendServerInput` type as input and returns no output on success, using AWS internal error types for failure. It is used to associate policies with backend servers attached to a load balancer, typically for managing SSL or access control behavior.",
      "description_length": 396,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLBCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module creates an HTTP request to configure sticky sessions using load balancer cookies in AWS Elastic Load Balancing. It encodes input parameters into a signed query request and decodes responses, handling errors specific to the service. It is used when enabling cookie-based session affinity for an ELB, ensuring subsequent requests from the same client are routed to the same backend instance.",
      "description_length": 401,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeTags",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing tags for Elastic Load Balancing resources by converting input data into HTTP requests and parsing responses. It works with input and output types specific to the DescribeTags operation, along with error types from the AWS Elastic Load Balancing API. It is used to retrieve tag metadata for load balancers, target groups, and other related resources.",
      "description_length": 380,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Errors_internal",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a list of specific error cases encountered in Elastic Load Balancing operations, such as `LoadBalancerNotFound` and `InvalidParameter`, along with utilities to convert errors to HTTP status codes, strings, and back. It works directly with the `t` sum type representing individual error conditions and provides a predefined list of common errors. Use cases include error handling during API requests, mapping service responses to appropriate client-facing error codes, and parsing error strings from AWS into structured types.",
      "description_length": 545,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DetachLoadBalancerFromSubnets",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles detaching an Elastic Load Balancer from subnets by converting input data into an HTTP request and parsing the response or errors. It works with input and output types specific to the DetachLoadBalancerFromSubnets operation, along with internal error types. It is used when managing load balancer network configurations, specifically to update subnet associations in AWS Elastic Load Balancing.",
      "description_length": 413,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.SetLoadBalancerPoliciesOfListener",
      "library": "aws-elasticloadbalancing",
      "description": "This module sets the policies for a specific listener on an Elastic Load Balancer. It works with the `SetLoadBalancerPoliciesOfListenerInput` type to specify the load balancer name, listener port, and policy names, and returns no output on success. It is used to configure SSL negotiation or other policy-based settings directly on load balancer listeners.",
      "description_length": 356,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeregisterInstancesFromLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles deregistering instances from a load balancer by converting input data into a properly signed HTTP request and decoding the response. It works with input and output types specific to the deregistration operation, including encoded query parameters and error responses. Concrete use cases include updating load balancer configurations by removing specified instances and handling AWS-specific errors during the deregistration process.",
      "description_length": 452,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing",
      "library": "aws-elasticloadbalancing",
      "description": "This module provides comprehensive tools for managing Elastic Load Balancers in AWS, covering configuration, monitoring, and lifecycle operations. It supports key data types such as load balancer attributes, policies, listeners, health checks, tags, and security groups, enabling operations like creating and deleting load balancers, setting SSL certificates, configuring health checks, and managing instance registration. Specific examples include enabling cookie-based session stickiness, modifying load balancer attributes like access logs, and programmatically updating security groups or availability zones associated with a load balancer.",
      "description_length": 644,
      "index": 155,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 156,
    "meaningful_modules": 156,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 802,
    "min_description_length": 245,
    "avg_description_length": 380.7692307692308,
    "embedding_file_size_mb": 0.5671272277832031
  }
}