{
  "package": "aws-elasticloadbalancing",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 155,
  "creation_timestamp": "2025-08-15T16:48:23.838982",
  "modules": [
    {
      "module_path": "Aws_elasticloadbalancing.Types.ApplySecurityGroupsToLoadBalancerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for applying security groups to an Elastic Load Balancer. It provides functions to construct, parse, and serialize the response containing the updated security groups. Use cases include processing API responses after updating load balancer security group settings and converting between XML, JSON, and internal data representations.",
      "description_length": 372,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddAvailabilityZonesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for adding availability zones to a load balancer, including the load balancer name and a list of availability zones. It provides functions to construct, parse, and serialize the input for use in API requests. Use this module when configuring load balancer availability zones in AWS Elastic Load Balancing workflows.",
      "description_length": 355,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DetachLoadBalancerFromSubnetsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for detaching a load balancer from subnets, including the load balancer name and a list of subnets. It provides functions to construct, parse, and serialize the input for API requests. Use this module when configuring load balancer subnet associations in AWS Elastic Load Balancing workflows.",
      "description_length": 332,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ModifyLoadBalancerAttributesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for modifying load balancer attributes in AWS Elastic Load Balancing. It defines a record type with optional fields for the load balancer name and its updated attributes, and provides functions to construct, parse, and serialize the response in various formats. It is used when updating settings such as connection draining or access logs on a load balancer.",
      "description_length": 398,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Listeners",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of listener lists for load balancers. It provides functions to convert listener lists to and from XML, JSON, and query formats, enabling interaction with AWS Elastic Load Balancing APIs. Use this module when configuring or retrieving load balancer listeners, particularly when working with API requests and responses.",
      "description_length": 390,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidSubnetException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid subnet exceptions. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. Useful for error handling in load balancer configurations where subnet validation fails.",
      "description_length": 300,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TooManyTagsException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` and operations for handling errors related to excessive tags in AWS Elastic Load Balancing. It provides functions to construct, parse, and convert the error to query parameters, JSON, and back from JSON. It is used specifically for signaling and handling \"Too Many Tags\" error conditions in API interactions.",
      "description_length": 349,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveTagsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for removing tags from load balancers in the AWS Elastic Load Balancing service. It includes functions to construct, parse, and serialize the input data, supporting operations that specify which load balancers and tag keys to process. It works directly with load balancer names and tag key lists, used when making API requests to remove metadata tags.",
      "description_length": 391,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InstanceStates",
      "library": "aws-elasticloadbalancing",
      "description": "Handles parsing, querying, and serializing lists of EC2 instance states for load balancer operations. Works with XML nodes, JSON values, and query parameters to convert between instance state data structures. Used when retrieving or updating the status of instances attached to an Elastic Load Balancer.",
      "description_length": 303,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the parsing, conversion, and serialization of policy attribute descriptions, specifically working with lists of `PolicyAttributeDescription.t`. It provides functions to convert these lists to and from XML, JSON, and query formats. Use this module when interacting with AWS Elastic Load Balancing APIs that require policy attribute descriptions in different data formats.",
      "description_length": 390,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DetachLoadBalancerFromSubnetsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of detaching a load balancer from subnets, providing functions to create, parse, and convert the result to various formats. It works with a record type containing a list of subnets. Concrete use cases include processing API responses when managing load balancer subnet associations in AWS Elastic Load Balancing.",
      "description_length": 343,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.BackendServerDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of backend server descriptions in AWS Elastic Load Balancing. It works with lists of `BackendServerDescription.t` records, supporting operations like XML parsing, JSON conversion, and query parameter generation. It is used when retrieving or configuring backend server settings for load balancers in AWS.",
      "description_length": 377,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ModifyLoadBalancerAttributesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for modifying load balancer attributes in AWS Elastic Load Balancing. It includes functions to create, parse, and serialize the input data, supporting operations like updating access logs or connection draining settings. The module works with string and load balancer attribute types, enabling direct interaction with API requests.",
      "description_length": 371,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteAccessPointOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of a load balancer deletion operation. It provides functions to convert unit values to query parameters, JSON objects, and back, ensuring compatibility with AWS API requests. It is used specifically for representing empty responses in the context of deleting Elastic Load Balancing access points.",
      "description_length": 372,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for specifying parameters to delete a load balancer policy, including the load balancer and policy names. It provides functions to construct, serialize, and parse these parameters in various formats such as JSON and query strings. Use this module when configuring or modifying load balancer policies in AWS Elastic Load Balancing.",
      "description_length": 367,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ApplySecurityGroupsToLoadBalancerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for applying security groups to a load balancer, including the load balancer name and a list of security group IDs. It provides functions to construct, parse, and serialize the input for use in API requests, specifically when modifying load balancer security settings. The module handles XML, JSON, and query string formats for integration with AWS API calls.",
      "description_length": 399,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerListenerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for creating a load balancer listener in AWS Elastic Load Balancing. It works with unit type values, converting them to and from JSON and query string formats. Use this module when interacting with AWS APIs to create load balancer listeners and process the resulting responses.",
      "description_length": 349,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RegisterEndPointsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of registering endpoints in a load balancer, specifically working with a list of instances. It provides functions to create, parse, and convert the output structure to query parameters, JSON, or back from JSON. Concrete use cases include processing responses after registering EC2 instances with a load balancer.",
      "description_length": 343,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPoliciesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for describing load balancer policies, including the load balancer name and policy names. It provides functions to construct, parse, and serialize the input for API requests. Use this module when querying AWS ELB to retrieve details about specific policies attached to a load balancer.",
      "description_length": 325,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AppCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type `t` representing application cookie stickiness policy configurations, with optional `policy_name` and `cookie_name` fields. It provides functions to construct, parse, and convert these policies to and from query parameters, JSON, and XML formats. It is used when configuring load balancer stickiness policies based on application cookies in AWS Elastic Load Balancing.",
      "description_length": 395,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing load balancer policy types, including their name, description, and associated attribute types. It provides functions to construct, parse, and serialize these descriptions to and from XML, JSON, and query formats. Concrete use cases include managing Elastic Load Balancing policies and handling configuration data during API interactions.",
      "description_length": 389,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAccessPointOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for creating an Elastic Load Balancing access point, primarily providing a DNS name. It includes functions to construct, parse, and serialize the response data to various formats like JSON and query parameters. It works directly with XML nodes for parsing and outputs structured data used in API responses.",
      "description_length": 346,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveAvailabilityZonesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for removing availability zones from a load balancer, including the load balancer name and a list of availability zones. It provides functions to construct, parse, and serialize the input for use in API requests. Use this module when configuring load balancer availability zones in AWS Elastic Load Balancing workflows.",
      "description_length": 359,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Subnets",
      "library": "aws-elasticloadbalancing",
      "description": "Handles serialization and deserialization of subnet lists for AWS Elastic Load Balancing operations. Works with string lists representing subnet IDs, converting between XML, JSON, and query string formats. Used when configuring or retrieving load balancer subnets in AWS API requests and responses.",
      "description_length": 298,
      "index": 23,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AppCookieStickinessPolicies",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles app cookie stickiness policies for load balancers, providing functions to parse XML data into policy objects, convert policies to query parameters or JSON format, and construct policy lists. It works with lists of `AppCookieStickinessPolicy.t` records, which represent individual stickiness policies. Use this module when configuring or retrieving load balancer settings that maintain session affinity based on application cookies.",
      "description_length": 451,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing policy attributes in Elastic Load Balancing, with optional name and value fields. It provides functions to construct, parse, and convert these attributes to and from JSON and query formats. It is used when managing load balancer policies, such as retrieving or setting attributes like SSL protocols or backend server settings.",
      "description_length": 380,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesOfListenerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for setting load balancer policies on a listener in AWS Elastic Load Balancing. It includes fields for the load balancer name, port, and a list of policy names, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when applying policies to listeners in ELB configurations.",
      "description_length": 366,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicateListenerException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an exception for duplicate listener configurations. It provides functions to construct, parse, and convert the exception to query parameters, JSON, or from JSON. Use this module when handling or reporting errors related to duplicate listeners in load balancer configurations.",
      "description_length": 329,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerListenerSSLCertificateOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the response for setting an SSL certificate on a load balancer listener. It defines a unit type for representing empty responses and provides functions to parse, convert to query format, serialize to JSON, and deserialize from JSON. Use this module when interacting with AWS Elastic Load Balancing APIs to configure SSL certificates for listeners.",
      "description_length": 367,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidSchemeException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid scheme exceptions in API responses. It includes operations for creating, parsing, and converting exception data to query parameters, JSON, or back from JSON. Use this when interacting with AWS Elastic Load Balancing APIs to manage errors related to unsupported load balancer schemes.",
      "description_length": 361,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InstanceState",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing the state of an EC2 instance associated with a load balancer, including optional fields for instance ID, state, reason code, and description. It provides functions to construct, parse, and convert instance state data to and from XML, JSON, and query formats. Use this module when retrieving or updating health check information for instances behind an Elastic Load Balancer.",
      "description_length": 424,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagList",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of tag lists for AWS Elastic Load Balancing resources. It provides functions to convert tag lists to and from XML, JSON, and query parameters, ensuring compatibility with AWS API formats. Use this module when working with load balancer tags in API requests or responses.",
      "description_length": 343,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeregisterEndPointsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of deregistering endpoints in an Elastic Load Balancing service. It provides functions to create, parse, and convert the output structure, which includes a list of instances. Use cases include processing responses from AWS API calls that deregister instances from a load balancer.",
      "description_length": 311,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveTagsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for removing tags from AWS Elastic Load Balancing resources. It defines a unit type to represent the absence of a return value, along with functions to convert data to query parameters, JSON, and back. It is used when performing tag removal operations that do not require additional response data.",
      "description_length": 369,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of load balancer policy attributes. It works with lists of `PolicyAttribute.t` values, supporting conversion to and from XML, JSON, and query formats. It is used when configuring or retrieving policies for Elastic Load Balancing in AWS, such as setting sticky session or SSL negotiation settings.",
      "description_length": 369,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeTagsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing tags for Elastic Load Balancing resources, specifically working with `TagDescriptions`. It provides functions to construct, parse, and serialize tag descriptions to and from XML, JSON, and query formats. Use this module when retrieving and processing tags associated with load balancers in AWS.",
      "description_length": 339,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidEndPointException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a minimal exception type used to represent invalid endpoint errors in API interactions. It provides operations to construct, parse, and serialize the exception to common formats like JSON and query strings. It is typically used when handling or propagating errors related to misconfigured or unreachable endpoints in load balancing services.",
      "description_length": 361,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerListenerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for deleting a load balancer listener, including the load balancer name and associated ports. It provides functions to construct, parse, and serialize the input for use in API requests. Use this module when configuring or managing Elastic Load Balancing listeners via the AWS API.",
      "description_length": 320,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles errors related to missing policy types in AWS Elastic Load Balancing operations. It defines a unit type to represent the absence of a policy type, along with functions to parse, convert to query format, and serialize to and from JSON. It is used when interacting with AWS APIs to manage load balancer policies, ensuring correct error handling for invalid or unknown policy types.",
      "description_length": 399,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AdditionalAttribute",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for key-value pairs used in load balancer configurations, with operations to create, serialize, and convert instances to and from XML, JSON, and query formats. It works with optional string fields to represent configuration attributes. Concrete use cases include managing load balancer settings such as idle timeout or proxy protocol versions through structured data interchange.",
      "description_length": 416,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeTagsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for describing tags of load balancers in AWS Elastic Load Balancing. It includes operations to create, parse, and serialize the input data, supporting interaction with AWS services through JSON and query formats. It works specifically with load balancer names limited to a maximum of 20 entries.",
      "description_length": 335,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeAccessPointsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for describing load balancer access points, including optional pagination parameters. It provides functions to construct, parse, and serialize the input for API requests, working with types like load balancer names, strings, and integers. Concrete use cases include querying AWS ELB for access point details with optional pagination and handling request input in a type-safe way.",
      "description_length": 419,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerAttributeNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the absence of load balancer attributes in AWS Elastic Load Balancing operations. It provides functions to create, parse, and serialize empty values, supporting query and JSON formats. It is used when a requested load balancer attribute does not exist, ensuring consistent handling of missing data.",
      "description_length": 318,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Instances",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of EC2 instance lists used in Elastic Load Balancing. It provides functions to convert instance data to and from XML, JSON, and query formats, specifically working with `Instance.t` lists. Use this module when interacting with AWS Elastic Load Balancing APIs to manage instance attachments or retrieve instance health information.",
      "description_length": 403,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SubnetNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the SubnetNotFoundException error type, providing functions to create, parse, and serialize the exception. It works with unit values and converts to AWS query parameters, JSON objects, and back from JSON. Use it when interacting with AWS Elastic Load Balancing APIs to manage subnet-related errors.",
      "description_length": 318,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicateTagKeysException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an exception for duplicate tag keys in AWS Elastic Load Balancing operations. It provides functions to construct, parse, and convert the exception to query or JSON formats, primarily used when handling API errors related to tag validation. The module is used in the context of managing load balancer tags to ensure unique key enforcement during API requests.",
      "description_length": 412,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for creating a load balancer policy, including fields for the load balancer name, policy name, policy type, and optional policy attributes. It provides functions to construct, parse, and serialize the input data in query, JSON, and XML formats. Concrete use cases include configuring SSL policies or custom load balancing settings for an Elastic Load Balancer.",
      "description_length": 400,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LBCookieStickinessPolicies",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles load balancer cookie stickiness policies by providing functions to convert, parse, and manipulate lists of policy data. It works with XML nodes, JSON values, and query parameters to facilitate policy configuration in AWS Elastic Load Balancing. Use this module when managing session stickiness settings via cookies in ELB API interactions.",
      "description_length": 359,
      "index": 47,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesForBackendServerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for setting load balancer policies on a backend server in AWS Elastic Load Balancing. It includes fields for the load balancer name, instance port, and a list of policy names, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when configuring backend server policies through the AWS API, enabling precise policy assignment for load balancing behavior.",
      "description_length": 448,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AccessPointNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling cases where an access point is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. Use this module when you need to represent and handle missing access point errors in API responses or input validation.",
      "description_length": 345,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Listener",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring load balancer listeners, including protocol, port mappings, and optional SSL settings. It provides functions to construct, serialize, and deserialize listener configurations, supporting operations like converting to and from JSON and query parameters. Concrete use cases include setting up HTTP/HTTPS listeners for Elastic Load Balancers and managing SSL certificate associations.",
      "description_length": 433,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeNames",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of string policy type names for AWS Elastic Load Balancing. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this module when configuring or retrieving policy types in load balancer settings.",
      "description_length": 290,
      "index": 51,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Policies",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for managing load balancer policies, including app cookie stickiness, LB cookie stickiness, and other policy names. It provides functions to construct, parse, and serialize policy data for use with AWS Elastic Load Balancing. Use this module when configuring or retrieving load balancer policies via API calls or JSON/XML data.",
      "description_length": 364,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of tag descriptions in AWS Elastic Load Balancing. It works with lists of `TagDescription` records, supporting operations to convert between XML, JSON, and query formats. It is used when managing metadata tags for load balancers, particularly during API requests and responses involving tag lists.",
      "description_length": 370,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConnectionSettings",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a single data type `t` representing connection settings for a load balancer, primarily consisting of an `idle_timeout` value. It provides functions to construct, parse, and serialize these settings to and from XML, JSON, and query formats. Use this module when configuring or retrieving load balancer connection timeouts in AWS Elastic Load Balancing services.",
      "description_length": 380,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAccessPointInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and operations for creating an Elastic Load Balancing access point. It includes functions to construct, parse, and serialize the access point configuration, handling fields such as load balancer name, listeners, availability zones, subnets, security groups, scheme, and tags. It is used when setting up or modifying load balancers in AWS via the API, supporting both JSON and XML formats.",
      "description_length": 428,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Ports",
      "library": "aws-elasticloadbalancing",
      "description": "Handles the serialization and deserialization of port lists for AWS Elastic Load Balancing operations. Works directly with lists of integers representing ports, converting between XML, JSON, and query string formats. Used when configuring or retrieving load balancer listeners and rules that require specific port numbers.",
      "description_length": 322,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SourceSecurityGroup",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing a source security group with optional owner alias and group name fields. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and XML formats. It is used to specify and manage security group associations in load balancer configurations.",
      "description_length": 329,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SecurityGroups",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of security group lists for AWS Elastic Load Balancing. It works with lists of base string types, providing conversions to and from JSON, XML, and query parameters. Use this module when configuring or retrieving security groups associated with load balancers in AWS.",
      "description_length": 324,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteAccessPointInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and serialization functions for deleting an access point in Elastic Load Balancing. It works with a record type containing a load balancer name and supports conversion to and from JSON, query parameters, and XML. It is used when making API requests to delete a load balancer, handling the necessary data transformations for communication with AWS services.",
      "description_length": 396,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AdditionalAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the conversion and manipulation of additional attributes used in Elastic Load Balancing configurations. It provides functions to parse XML input into attribute lists, convert attribute lists to query parameters or JSON format, and construct attribute structures from JSON data. Use this module when configuring or retrieving load balancer attributes programmatically.",
      "description_length": 387,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeTypeDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and transformation of policy attribute type descriptions. It works with lists of `PolicyAttributeTypeDescription.t` values, converting them to and from XML, JSON, and query formats. It is used when interacting with AWS Elastic Load Balancing APIs to manage policy attribute types.",
      "description_length": 336,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AttachLoadBalancerToSubnetsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for attaching a load balancer to subnets in AWS Elastic Load Balancing. It defines a record type with a list of subnets and provides functions to construct, parse, and serialize the response in various formats. It is used specifically when managing load balancer subnet associations in AWS infrastructure code.",
      "description_length": 350,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AvailabilityZones",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of availability zone lists for AWS Elastic Load Balancing operations. It provides functions to convert between XML, JSON, query parameters, and OCaml string lists, specifically working with `Aws.BaseTypes.String.t list`. Concrete use cases include preparing availability zone data for API requests and parsing responses from AWS services.",
      "description_length": 411,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "Handles parsing, serialization, and JSON conversion for a list of policy descriptions. Works with XML nodes, JSON values, and query parameters to facilitate AWS Elastic Load Balancing API interactions. Used when retrieving or configuring load balancer policies via API requests and responses.",
      "description_length": 292,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesForBackendServerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for setting load balancer policies on a backend server in AWS Elastic Load Balancing. It defines a unit type and functions to construct, parse, and serialize the response into query or JSON formats. It is used when applying policies to backend servers, where the operation does not return meaningful data beyond a success or error signal.",
      "description_length": 378,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles parsing, serialization, and transformation of load balancer description data from AWS Elastic Load Balancing. It operates on lists of `LoadBalancerDescription.t` values, supporting conversion to and from XML, JSON, and query formats. It is used when retrieving or sending load balancer configurations to AWS APIs, enabling structured data manipulation.",
      "description_length": 372,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ListenerNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling cases where a listener is not found in load balancer configurations. It provides operations to convert unit values to query parameters, JSON objects, and back, enabling consistent error handling and serialization. Use this when working with AWS Elastic Load Balancing APIs to represent missing listener errors in requests and responses.",
      "description_length": 406,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of load balancer policy creation responses. It works with unit type values and provides functions to convert to and from JSON and query formats. Use it to process AWS API responses when creating load balancer policies.",
      "description_length": 276,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeEndPointStateInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for querying endpoint states in a load balancer. It includes operations to create, parse, and serialize the input data, supporting interactions with AWS Elastic Load Balancing. The module works directly with load balancer names and instance lists, used when checking the health or status of specific endpoints in a load-balanced setup.",
      "description_length": 375,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the structure and operations for configuring load balancer attributes, including cross-zone load balancing, access logging, connection draining, and connection settings. It provides functions to create, parse, and serialize these attributes for use in API requests or configuration management. Concrete use cases include setting up or modifying Elastic Load Balancing resources with specific operational parameters.",
      "description_length": 435,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPolicyTypesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for describing load balancer policy types in AWS Elastic Load Balancing. It provides functions to construct, parse, and serialize the response data, which includes policy type descriptions. It is used when retrieving information about available policy types for configuring load balancers.",
      "description_length": 329,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerNames",
      "library": "aws-elasticloadbalancing",
      "description": "Handles the serialization and deserialization of load balancer names in AWS Elastic Load Balancing operations. Works directly with lists of base string types, converting them to and from XML, JSON, and query parameters. Used when managing load balancer references in API requests and responses.",
      "description_length": 294,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyNames",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of policy names for AWS Elastic Load Balancing operations. It provides functions to convert policy name lists to and from JSON and query formats, along with parsing from XML nodes. It is used when managing load balancer policies, such as listing or applying policies to listeners.",
      "description_length": 306,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Instance",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing an EC2 instance with an optional instance ID. It provides functions to create, parse, and convert instance data to query parameters or JSON format. Use this module when interacting with AWS Elastic Load Balancing APIs to specify or retrieve instance information.",
      "description_length": 312,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerAttributesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for describing load balancer attributes in AWS Elastic Load Balancing. It provides functions to construct, parse, and serialize the response data, which includes optional load balancer attributes. Use this module when retrieving and working with attribute configurations of a load balancer, such as access logs, deletion protection, or idle timeout settings.",
      "description_length": 398,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling policy not found errors in AWS Elastic Load Balancing. It provides operations for creating, parsing, and converting the unit value to query parameters, JSON, and back from JSON. Use this when interacting with AWS APIs that require or return policy-related error information in a standardized format.",
      "description_length": 369,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RegisterEndPointsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for registering endpoints with a load balancer, including the load balancer name and a list of instances. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include preparing data to register EC2 instances with an Elastic Load Balancer via AWS SDK calls.",
      "description_length": 354,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.BackendServerDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing backend server descriptions for load balancers, including instance port and associated policy names. It provides functions to construct, parse, and serialize these descriptions to and from XML, JSON, and query parameters. Use this module when configuring or retrieving backend server settings in Elastic Load Balancing services.",
      "description_length": 378,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAppCookieStickinessPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring application cookie stickiness policies in load balancing. It includes functions to create, serialize, and parse policy configurations using XML, JSON, and query parameters. Concrete use cases include setting up session persistence based on cookies when managing load balancer policies in AWS.",
      "description_length": 345,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AccessLog",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring access logs in load balancing services, with fields to enable logging, specify S3 buckets, set emission intervals, and define object key prefixes. It provides functions to construct, serialize, and parse access log configurations, supporting integration with AWS ELB APIs. Use cases include enabling detailed traffic monitoring by directing logs to S3 and configuring log delivery intervals and storage paths.",
      "description_length": 462,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of deleting a load balancer policy. It provides operations to construct, parse, and serialize unit values to query parameters, JSON, and back from JSON. Use this when interacting with AWS Elastic Load Balancing APIs to delete policies, where the response carries no meaningful data.",
      "description_length": 358,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.Tag",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing tags in AWS Elastic Load Balancing, consisting of a key-value pair where the value is optional. It provides functions to construct tags, parse them from XML, convert them to query parameters or JSON, and create them from JSON input. This module is used to manage metadata tags associated with load balancer resources in AWS.",
      "description_length": 378,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPolicyTypesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles input data for describing load balancer policy types by providing functions to construct, parse, and serialize the input. It works with a list of policy type names and supports conversion to query parameters and JSON format. It is used when retrieving details about specific policy types in an Elastic Load Balancing configuration.",
      "description_length": 351,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerListenerSSLCertificateInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for setting an SSL certificate on an Elastic Load Balancer listener. It includes functions to create, parse, and serialize the structure to query parameters or JSON, primarily working with string and integer types. It is used when updating the SSL certificate associated with a specific load balancer port in AWS Elastic Load Balancing.",
      "description_length": 373,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidConfigurationRequestException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid configuration requests in AWS Elastic Load Balancing. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all acting on a unit value. Use this when interacting with AWS APIs to handle errors related to invalid load balancer configurations.",
      "description_length": 379,
      "index": 85,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TooManyPoliciesException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type exception for handling cases where too many policies are associated with a load balancer. It includes functions to create, parse, and convert the exception to query parameters or JSON format. Use this when managing policy limits in AWS Elastic Load Balancing operations.",
      "description_length": 302,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ListenerDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing a listener description, including an optional listener configuration and associated policy names. It provides functions to construct, parse, and serialize listener descriptions to and from XML, JSON, and query formats. Use this module when managing Elastic Load Balancing listener configurations, particularly when working with AWS API requests and responses that require detailed listener information.",
      "description_length": 452,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagKeyOnly",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing a tag key without a value, typically used in AWS Elastic Load Balancing operations. It provides functions to create, parse, and serialize tag key objects to query parameters or JSON format. Use cases include managing metadata tags for load balancers where only the key is needed, such as filtering or listing resources by tag.",
      "description_length": 380,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeregisterEndPointsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for deregistering endpoints from a load balancer. It includes fields for the load balancer name and a list of instances, along with functions to construct, parse, and serialize the input for API requests. It is used when removing instances from an Elastic Load Balancer in AWS.",
      "description_length": 317,
      "index": 89,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLBCookieStickinessPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for creating an ELB cookie stickiness policy. It works with unit type values, converting them to and from JSON and query formats. It is used to process responses from AWS Elastic Load Balancing API calls that create cookie-based session stickiness policies.",
      "description_length": 329,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerAttributesInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a single data type `t` representing input parameters for describing load balancer attributes, specifically containing the load balancer name. It provides functions to construct, parse, and serialize the input data to various formats such as JSON, query parameters, and XML nodes. It is used when querying AWS Elastic Load Balancing for detailed configuration attributes of a specific load balancer.",
      "description_length": 418,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttribute",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing policy attributes with optional name and value fields, using string-based AWS base types. It provides functions to construct, serialize, and deserialize these attributes to and from query parameters, JSON, and XML formats. Concrete use cases include configuring and retrieving load balancer policies in AWS Elastic Load Balancing.",
      "description_length": 384,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicatePolicyNameException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an error condition for duplicate policy names in load balancer configurations. It provides operations to construct, parse, and serialize the error to common formats like JSON and query strings. Concrete use cases include handling API responses when creating or updating load balancer policies with conflicting names.",
      "description_length": 370,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConnectionDraining",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring connection draining on an Elastic Load Balancer, with fields indicating whether it is enabled and an optional timeout value. It provides functions to construct, parse, and serialize this configuration to and from XML, JSON, and query parameters. Use this module when setting up or modifying load balancer attributes that require connection draining behavior.",
      "description_length": 411,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DeleteLoadBalancerListenerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a type and associated functions for handling the output of a load balancer listener deletion operation. It provides functions to create, parse, and serialize unit values into query parameters or JSON, specifically for representing empty responses. It is used when processing AWS API calls that do not return data upon successful deletion of a listener.",
      "description_length": 372,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyTypeDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and transformation of policy type descriptions used in AWS Elastic Load Balancing. It operates on lists of `PolicyTypeDescription.t` values, converting them to and from XML, JSON, and query formats. It is used when managing load balancer policies, such as retrieving or configuring policy types via the AWS API.",
      "description_length": 367,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LBCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for configuring load balancer cookie stickiness policies, including optional policy names and cookie expiration periods. It provides functions to create, serialize, and parse these policies using JSON, XML, or AWS query formats. Use this module when managing ELB stickiness settings for session persistence across requests.",
      "description_length": 360,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.RemoveAvailabilityZonesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for handling the output of removing availability zones from a load balancer, specifically containing a list of availability zones. It provides functions to construct, parse, and serialize the structure to query or JSON formats, as well as conversion from JSON input. It is used when managing load balancer configurations in AWS Elastic Load Balancing, particularly when updating or retrieving availability zone settings.",
      "description_length": 457,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConfigureHealthCheckInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a configuration input for setting up health checks on a load balancer. It includes operations to create, parse, and serialize health check configurations using XML, JSON, and query string formats. It works directly with load balancer names and health check parameters, such as target and interval settings.",
      "description_length": 326,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddTagsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for adding tags to load balancers in the AWS Elastic Load Balancing service. It includes functions to construct, parse, and serialize the input data, supporting operations like API request generation and JSON conversion. The module works with load balancer names and tag lists, used when tagging ELB resources for organization or cost tracking.",
      "description_length": 384,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeAccessPointsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing load balancer access points in AWS Elastic Load Balancing. It includes functions to construct, parse, and convert load balancer descriptions and pagination markers. It is used to process and serialize responses containing load balancer configuration data and next-marker values for paginated results.",
      "description_length": 345,
      "index": 101,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLoadBalancerListenerInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for creating load balancer listeners, including the load balancer name and a list of listener configurations. It provides functions to construct, parse, and serialize the input for API requests, supporting both XML and JSON formats. Use this module when configuring new listeners for an Elastic Load Balancer in AWS.",
      "description_length": 356,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateAppCookieStickinessPolicyOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for creating an application cookie stickiness policy in an AWS Elastic Load Balancing API call. It defines a unit type to represent the absence of a structured response, along with functions to convert data to and from JSON and query formats. It is used when interacting with load balancer policies that require cookie-based session affinity.",
      "description_length": 414,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing policy descriptions in Elastic Load Balancing, including policy name, type name, and attribute descriptions. It provides functions to construct, parse, and serialize policy descriptions to and from XML, JSON, and query formats. Concrete use cases include handling policy configuration data when interacting with AWS ELB APIs, particularly for describing or setting load balancer policies.",
      "description_length": 442,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.PolicyAttributeTypeDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing policy attribute types in AWS Elastic Load Balancing. It provides functions to create, parse, and serialize these descriptions to and from XML, JSON, and query parameters. Use this module when configuring or retrieving policy attributes for load balancers, such as setting cookie stickiness or SSL negotiation settings.",
      "description_length": 371,
      "index": 105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AttachLoadBalancerToSubnetsInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure for attaching a load balancer to subnets, including the load balancer name and a list of subnet identifiers. It provides functions to construct, parse, and serialize the input data in various formats such as JSON, query parameters, and XML. It is used when configuring load balancer network placement in AWS Elastic Load Balancing.",
      "description_length": 371,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CrossZoneLoadBalancing",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for cross-zone load balancing settings in Elastic Load Balancing, containing a single boolean field indicating whether cross-zone load balancing is enabled. It provides functions to construct, serialize, and deserialize this structure to and from JSON, query parameters, and XML. Use this module when configuring or retrieving load balancer attributes that control traffic distribution across zones.",
      "description_length": 436,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.InvalidSecurityGroupException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling invalid security group exceptions. It provides operations to create, parse, and convert the exception to query parameters, JSON, or from JSON. Use this when interacting with AWS Elastic Load Balancing APIs to manage errors related to invalid security groups.",
      "description_length": 328,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ConfigureHealthCheckOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of configuring health checks for load balancers, primarily working with the `ConfigureHealthCheckOutput` type, which contains an optional `HealthCheck` structure. It provides functions to create, parse, and serialize health check configurations to query parameters or JSON, facilitating integration with AWS API requests and responses. Use cases include processing the result of a health check update operation and preparing it for further API interactions or logging.",
      "description_length": 499,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CreateLBCookieStickinessPolicyInput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines the input structure and associated operations for creating an LB cookie stickiness policy in AWS Elastic Load Balancing. It includes functions to construct, parse, and serialize the policy data, which consists of a load balancer name, policy name, and optional cookie expiration period. It is used when configuring session stickiness for load balancers using cookies.",
      "description_length": 387,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure representing detailed configuration and state information for an Elastic Load Balancer, including properties like DNS name, availability zones, listeners, health checks, and associated security groups. It provides functions to construct, serialize, and parse load balancer descriptions, enabling integration with AWS API operations for managing load balancers. Use cases include retrieving and modifying load balancer configurations, querying load balancer metadata, and parsing responses from ELB API calls.",
      "description_length": 545,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddTagsOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization and deserialization of the output for adding tags to AWS Elastic Load Balancing resources. It defines a unit type for successful tag addition responses and provides functions to convert unit values to query parameters, JSON objects, and back. Use this module when interacting with AWS ELB tagging operations to format and interpret API responses.",
      "description_length": 384,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TooManyAccessPointsException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling the `TooManyAccessPointsException` error in AWS Elastic Load Balancing. It provides operations for creating, parsing, and converting the exception to query parameters or JSON format. Use this module when managing error responses related to exceeding access point limits in load balancer configurations.",
      "description_length": 372,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DuplicateAccessPointNameException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a singleton type `t` representing an error condition for duplicate load balancer names. It provides functions to construct, parse, and serialize the error to query parameters or JSON. It is used when handling exceptions from AWS Elastic Load Balancing operations that require unique access point names.",
      "description_length": 322,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagKeyList",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of tag keys for AWS Elastic Load Balancing resources. It provides functions to parse, convert to query format, and serialize to and from JSON. Use this module when managing tags for load balancers, particularly when listing or filtering by tag keys.",
      "description_length": 275,
      "index": 115,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.SetLoadBalancerPoliciesOfListenerOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output response for setting load balancer policies on an ELB listener. It defines a unit type for representing empty responses and provides functions to construct, parse, and serialize the response data. Use this module when interacting with AWS ELB APIs to confirm successful policy updates without returning additional data.",
      "description_length": 350,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.ListenerDescriptions",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the serialization, deserialization, and manipulation of listener descriptions for load balancers. It works with XML nodes, JSON values, and query parameters, converting between these formats and the internal listener description type. It is used when retrieving or configuring load balancer listeners via AWS API calls.",
      "description_length": 339,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.AddAvailabilityZonesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for representing the output of adding availability zones to a load balancer, containing a list of availability zones. It provides functions to construct, parse, and serialize the structure in various formats including JSON, XML, and query parameters. Concrete use cases include handling responses from AWS Elastic Load Balancing API calls that modify load balancer availability zones.",
      "description_length": 421,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.HealthCheck",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a health check configuration for load balancers, including target, interval, timeout, and threshold values. It provides functions to create, parse, and serialize health check data to and from XML, JSON, and query formats. Concrete use cases include configuring and managing health checks for EC2 instances behind an Elastic Load Balancer.",
      "description_length": 358,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeLoadBalancerPoliciesOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing load balancer policies, primarily by encapsulating a collection of policy descriptions. It provides functions to construct, parse, and serialize the output in various formats including JSON and query strings. It is used when retrieving detailed configuration information about policies attached to an Elastic Load Balancer.",
      "description_length": 368,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.DescribeEndPointStateOutput",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the output of describing endpoint states in Elastic Load Balancing. It provides functions to create, parse, and serialize endpoint state data, specifically working with instance states. It is used to interpret and format the response when querying the state of instances attached to a load balancer.",
      "description_length": 319,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.LoadBalancerNamesMax20",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles lists of up to 20 load balancer names in AWS Elastic Load Balancing operations. It provides functions to convert, parse, and serialize these lists to and from JSON, query parameters, and XML. Use this module when working with AWS API calls that require or return multiple load balancer names, such as describing or deleting multiple load balancers.",
      "description_length": 368,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.CertificateNotFoundException",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a unit type and associated functions for handling the absence of a certificate in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back from JSON. This is used specifically to represent and manage missing certificate data in API interactions.",
      "description_length": 335,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types.TagDescription",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines a data structure for describing tags associated with a load balancer, including the load balancer's name and a list of tags. It provides functions to construct, parse, and convert the structure to and from query parameters, JSON, and XML. Concrete use cases include managing metadata for load balancers in AWS Elastic Load Balancing services.",
      "description_length": 362,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeInstanceHealth",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing the health state of instances behind an Elastic Load Balancer. It works with input and output types specific to the DescribeInstanceHealth API call, including endpoint state input and output structures. It is used to send HTTP requests to AWS ELB, parse responses, and handle errors specific to instance health checks.",
      "description_length": 349,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancers",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing load balancers in AWS Elastic Load Balancing by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the `DescribeLoadBalancers` operation, along with error handling tailored to the API's specifications. It is used to query metadata and configuration details of existing load balancers, such as their DNS names, health status, and attached instances.",
      "description_length": 447,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancerPolicies",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the `DescribeLoadBalancerPolicies` API call, retrieving configuration details for policies associated with a specified load balancer. It works with input and output types specific to policy descriptions, including policy names and load balancer identifiers. Use this module to inspect SSL negotiation settings, backend authentication policies, or other custom policies attached to an Elastic Load Balancer.",
      "description_length": 426,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeleteLoadBalancerListeners",
      "library": "aws-elasticloadbalancing",
      "description": "This module deletes listeners from a load balancer in AWS Elastic Load Balancing. It handles the conversion between native OCaml types and HTTP requests/responses, specifically encoding input into a query string format and decoding responses or errors from XML. It is used when managing load balancer configurations by removing specific listener ports or protocols.",
      "description_length": 365,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.SetLoadBalancerListenerSSLCertificate",
      "library": "aws-elasticloadbalancing",
      "description": "This module sets the SSL certificate for a load balancer listener in AWS Elastic Load Balancing. It handles the conversion of input data to HTTP requests and parses responses or errors from the service. It works directly with load balancer listener configurations and SSL certificate identifiers.",
      "description_length": 296,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeleteLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the deletion of load balancers in AWS Elastic Load Balancing. It works with the `DeleteAccessPointInput` type as input and returns no output on success, using internal error types for failure handling. It provides functions to convert requests to HTTP format, parse responses, and handle errors specific to the load balancer deletion operation.",
      "description_length": 364,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.AddTags",
      "library": "aws-elasticloadbalancing",
      "description": "This module adds tags to Elastic Load Balancing resources by converting tag data into properly formatted HTTP requests. It handles input encoding, request signing, and response parsing specific to the AddTags API operation. Use this module when programmatically managing metadata for load balancers in AWS environments.",
      "description_length": 319,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeTags",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing tags for Elastic Load Balancing resources by converting input data into signed HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to the DescribeTags operation, along with error types defined in the AWS Elastic Load Balancing API. Use this module to retrieve tag metadata for load balancers when managing resource tagging or cost allocation in AWS environments.",
      "description_length": 458,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.ApplySecurityGroupsToLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles applying security groups to an Elastic Load Balancer by converting input data into properly signed HTTP requests and parsing responses or errors. It works directly with input and output types specific to the ApplySecurityGroupsToLoadBalancer API call, including encoded query parameters and XML error responses. Concrete use cases include updating load balancer security group configurations and handling AWS API responses in an Elastic Load Balancing context.",
      "description_length": 480,
      "index": 133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.RegisterInstancesWithLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles registering instances with a load balancer by converting input data into properly formatted HTTP requests and parsing responses or errors. It works with input and output types specific to endpoint registration, including encoded query parameters and XML-parsed errors. Concrete use cases include sending registration requests to AWS Elastic Load Balancing and handling success or error responses from those requests.",
      "description_length": 436,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.SetLoadBalancerPoliciesForBackendServer",
      "library": "aws-elasticloadbalancing",
      "description": "This module sets policies for a backend server on an Elastic Load Balancer. It handles the conversion of input data to HTTP requests and parses responses or errors from AWS. It works directly with the `SetLoadBalancerPoliciesForBackendServerInput` type and communicates with the AWS Elastic Load Balancing service using signed HTTP requests.",
      "description_length": 341,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.SetLoadBalancerPoliciesOfListener",
      "library": "aws-elasticloadbalancing",
      "description": "This module sets the policies for a load balancer listener in AWS Elastic Load Balancing. It handles the conversion of input data to HTTP requests and parsing of responses, specifically working with the `SetLoadBalancerPoliciesOfListenerInput` type and returning a unit output. It is used when updating listener policies, ensuring correct query encoding and error handling during API interactions.",
      "description_length": 397,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLBCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module creates an LBCookieStickinessPolicy for an Elastic Load Balancer, configuring session stickiness based on cookies. It handles AWS API requests and responses, specifically encoding input data into HTTP queries and decoding responses or errors from the server. Use this when setting up load balancer policies that require session persistence across instances.",
      "description_length": 369,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DetachLoadBalancerFromSubnets",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles detaching an Elastic Load Balancer from specified subnets in AWS. It works with input and output types defined in the `Aws_elasticloadbalancing.Types` module, specifically `DetachLoadBalancerFromSubnetsInput` and `DetachLoadBalancerFromSubnetsOutput`. Concrete use cases include updating load balancer network configuration and managing subnet associations in VPC environments.",
      "description_length": 397,
      "index": 138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateAppCookieStickinessPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module creates an application cookie stickiness policy for an Elastic Load Balancer. It handles HTTP requests to configure session affinity based on cookies, working with input structures that specify the load balancer name, policy name, and cookie attributes. It returns no output on success or an error if the policy could not be created.",
      "description_length": 345,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DisableAvailabilityZonesForLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the removal of availability zones from an Elastic Load Balancer. It works with input and output types defined in the `Aws_elasticloadbalancing.Types` module, specifically `RemoveAvailabilityZonesInput` and `RemoveAvailabilityZonesOutput`, along with internal error types for failure handling. It is used when adjusting load balancer capacity by disabling specific availability zones, ensuring requests are routed only through active zones.",
      "description_length": 459,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeregisterInstancesFromLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles deregistering instances from a load balancer by converting input data into a properly signed HTTP request and decoding the response. It works with input and output types specific to the deregistration operation, including encoded query parameters and error responses. Concrete use cases include updating load balancer configurations by removing specified instances and handling errors returned from the AWS API.",
      "description_length": 431,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Errors_internal",
      "library": "aws-elasticloadbalancing",
      "description": "This module defines error types specific to Elastic Load Balancing operations, including detailed error codes like `LoadBalancerNotFound` and `InvalidParameter`. It provides functions to convert errors to HTTP status codes, strings, and back from strings, enabling precise error handling and communication. These operations are used when parsing and responding to API errors from AWS Elastic Load Balancing services.",
      "description_length": 416,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLoadBalancerPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the creation of load balancer policies in AWS Elastic Load Balancing. It works with `CreateLoadBalancerPolicyInput` to define policy parameters and communicates via HTTP requests signed with a specific version. It is used to send policy creation requests to the AWS service endpoint and parse responses or errors from the server.",
      "description_length": 349,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.ConfigureHealthCheck",
      "library": "aws-elasticloadbalancing",
      "description": "This module configures health checks for load balancers by sending HTTP requests to update health check settings. It works with `ConfigureHealthCheckInput` and `ConfigureHealthCheckOutput` types, representing the configuration parameters and response data. A concrete use case is adjusting the health check interval or timeout for an Elastic Load Balancer to ensure accurate backend instance monitoring.",
      "description_length": 403,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.RemoveTags",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the removal of tags from AWS Elastic Load Balancing resources by converting native input into HTTP requests and parsing responses. It works with `RemoveTagsInput` to construct requests and processes responses into unit outputs or specific errors. Concrete use cases include untagging load balancers by resource ARN and tag keys.",
      "description_length": 348,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.ModifyLoadBalancerAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module modifies load balancer attributes by sending an HTTP request with updated configuration settings. It works with structured input and output types defined in the `Types` module, along with error handling specific to AWS Elastic Load Balancing. Use this module to programmatically adjust load balancer settings such as connection draining, cross-zone load balancing, or access logs.",
      "description_length": 392,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.EnableAvailabilityZonesForLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module enables adding availability zones to a load balancer by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with AWS Elastic Load Balancing types, specifically handling availability zone configurations. Use this module when programmatically expanding the availability zones of a load balancer within AWS.",
      "description_length": 415,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.Types",
      "library": "aws-elasticloadbalancing",
      "description": "This module enables structured manipulation of AWS Elastic Load Balancing configuration data, focusing on **serialization/deserialization** between internal types and external formats (JSON, XML, query parameters) for components like **listeners, stickiness policies, tags, backend servers, and health checks**. It supports **API request/response handling, policy management, and metadata operations** through typed representations of load balancer attributes, subnets, security groups, and error conditions like invalid configurations or quota limits. Specific use cases include constructing load balancer descriptors, parsing policy attributes, and managing tag lists during ELB resource provisioning or updates.",
      "description_length": 714,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancerAttributes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles describing attributes of an Elastic Load Balancer by converting input data into an HTTP request and parsing the response or errors. It works with input and output types specific to the DescribeLoadBalancerAttributes operation, along with error types defined in the AWS Elastic Load Balancing API. Use this module to retrieve configuration details such as connection draining, cross-zone load balancing, and access logs settings for a specific load balancer.",
      "description_length": 477,
      "index": 149,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.DeleteLoadBalancerPolicy",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the deletion of load balancer policies in AWS Elastic Load Balancing. It works with the `DeleteLoadBalancerPolicyInput` type to construct requests and converts them into HTTP requests for the DeleteLoadBalancerPolicy API action. It also decodes responses and parses errors specific to this operation, such as invalid policy names or missing load balancers.",
      "description_length": 376,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLoadBalancer",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the creation of load balancers in AWS Elastic Load Balancing by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with `CreateAccessPointInput` and `CreateAccessPointOutput` structures, encoding requests into query format and decoding responses. Concrete use cases include provisioning new load balancers with specified configurations and handling API responses or errors during creation.",
      "description_length": 509,
      "index": 151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticloadbalancing.DescribeLoadBalancerPolicyTypes",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles the conversion of inputs and outputs for the `DescribeLoadBalancerPolicyTypes` API call, encoding inputs into HTTP requests and decoding HTTP responses into structured outputs or errors. It works with input and output types defined in the `Types` module, along with internal error types for handling AWS responses. It is used to interact directly with the Elastic Load Balancing service to retrieve policy type definitions for load balancers.",
      "description_length": 462,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.CreateLoadBalancerListeners",
      "library": "aws-elasticloadbalancing",
      "description": "This module creates listeners for a load balancer, handling the conversion between native OCaml types and HTTP requests/responses. It works with `CreateLoadBalancerListenerInput` for request data and returns a unit on success or an internal error type on failure. Use this module when configuring load balancer listeners with specific protocols, ports, and SSL settings in AWS environments.",
      "description_length": 390,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticloadbalancing.AttachLoadBalancerToSubnets",
      "library": "aws-elasticloadbalancing",
      "description": "This module handles attaching an Elastic Load Balancer to subnets by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with AWS-specific data structures like `AttachLoadBalancerToSubnetsInput` and `AttachLoadBalancerToSubnetsOutput`. Concrete use cases include encoding load balancer and subnet identifiers into properly formatted HTTP requests and decoding responses or errors from the AWS API.",
      "description_length": 496,
      "index": 154,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 156,
    "meaningful_modules": 155,
    "filtered_empty_modules": 1,
    "retention_rate": 0.9935897435897436
  },
  "statistics": {
    "max_description_length": 714,
    "min_description_length": 275,
    "avg_description_length": 377.01290322580644,
    "embedding_file_size_mb": 2.246088981628418
  }
}