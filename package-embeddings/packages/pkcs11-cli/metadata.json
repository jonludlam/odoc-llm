{
  "package": "pkcs11-cli",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:28.429057",
  "modules": [
    {
      "module_path": "Pkcs11_cli.Arg",
      "description": "Provides arguments for selecting PKCS11 slots by index, ID, or description, and for specifying token labels, DLL names, PINs, load modes, and user types. Works with options for integers, strings, and custom types like P11.Load_mode.t and P11.User_type.t. Used to configure PKCS11 operations with precise control over slot selection and library loading.",
      "description_length": 352,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pkcs11_cli.Term",
      "description": "Provides terms for parsing command-line arguments related to PKCS#11 operations, including slot selection, token labels, PINs, load modes, and user types. Works with options wrapping types like `int`, `string`, and `P11.Slot.t`, `P11.Load_mode.t`, and `P11.User_type.t`. Used to construct command-line interfaces that configure cryptographic operations with specific slot and token parameters.",
      "description_length": 393,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "pkcs11-cli",
      "description": "Provides functions to interact with PKCS#11 token attributes, session management, and cryptographic key operations. Works with data types such as session handles, object attributes, and cryptographic mechanisms. Used to retrieve certificate information from a token and sign data using a private key stored on a hardware security module.",
      "description_length": 337,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pkcs11_cli",
      "description": "Handles command-line configuration for PKCS#11 operations by parsing and validating arguments for slot selection, token labels, PINs, library loading, and user types. Accepts integer, string, and custom types such as load mode and user type to define precise cryptographic execution parameters. Enables construction of CLI tools that control slot-specific interactions with PKCS#11 tokens and libraries. Examples include selecting a slot by ID, specifying a token label, or setting a load mode for dynamic library loading.",
      "description_length": 522,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 522,
    "min_description_length": 337,
    "avg_description_length": 401.0,
    "embedding_file_size_mb": 0.014943122863769531
  }
}