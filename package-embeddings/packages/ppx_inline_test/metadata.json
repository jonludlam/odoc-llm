{
  "package": "ppx_inline_test",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:31.391700",
  "modules": [
    {
      "module_path": "ppx_inline_test",
      "description": "Provides in-line test writing capabilities with support for anonymous tests using `_` and dynamically named tests via `[%name <string expr>]`. Operates on OCaml syntax trees to inject test definitions during compilation. Enables concise test scaffolding within source files without external setup.",
      "description_length": 297,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_inline_test_lib",
      "description": "Provides functions to detect and control test execution context, including whether code is running inline tests or within a test runner process. Works with boolean flags, environment variables, and test configuration lists to manage test execution flow. Used to initialize test runners with custom arguments or check if help was requested during test setup.",
      "description_length": 357,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Inline_test_config",
      "description": "Provides a mechanism to execute a predefined function before each test run, ensuring consistent setup. Operates with unit-returning functions and integrates directly into the testing workflow. Used to initialize environment variables or mock dependencies prior to test execution.",
      "description_length": 279,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_inline_test_libname",
      "description": "Retrieves the name and optional override of an inline test library from command-line arguments. Operates on unit input and returns a tuple of strings. Used to configure test libraries during compilation with ppx_bench or ppx_inline_test.",
      "description_length": 237,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_inline_test",
      "description": "Provides functions to control test expansion based on command line flags, validate ppx extension points with location and tags, and process parsetree expressions into structures. Works with ppxlib's location, parsetree, and custom maybe_drop type. Used to conditionally skip test code during ppx processing and enforce tag constraints on inline test extensions.",
      "description_length": 361,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 5,
    "filtered_empty_modules": 3,
    "retention_rate": 0.625
  },
  "statistics": {
    "max_description_length": 361,
    "min_description_length": 237,
    "avg_description_length": 306.2,
    "embedding_file_size_mb": 0.018599510192871094
  }
}