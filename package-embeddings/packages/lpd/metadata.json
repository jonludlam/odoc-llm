{
  "package": "lpd",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:58:03.937537",
  "modules": [
    {
      "module_path": "Lpd.Make",
      "library": "lpd",
      "description": "Implements an LPD protocol server with functions to create a listening socket, accept connections with optional threading, and handle LPD queries per RFC 1179. Works with Unix sockets, in_channels, and out_channels to manage client communication. Designed for printing service implementations where queue configurations and host authorization are enforced via the parameter module `C`.",
      "description_length": 385,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lpd",
      "library": "lpd",
      "description": "This module implements an LPD protocol server for handling print jobs as defined in RFC 1179, providing functions to manage job queues, receive print jobs, and control print operations. It works with custom types representing print jobs, file types, and queue actions, including banners, job metadata, and file storage handling. Concrete use cases include setting up a print server that accepts remote print jobs, manages job queues with user and job-based filtering, and sends status updates or emails upon completion.",
      "description_length": 519,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Socket",
      "library": "lpd.socket",
      "description": "This module enables buffered socket communication with operations for creating and managing input/output channels from file descriptors, supporting line-based and delimiter-driven data reading, along with connection lifecycle control and readiness monitoring via `select`. It works with `in_channel` and `out_channel` types to facilitate structured network programming tasks like handling streaming data, synchronous I/O multiplexing, and cross-platform socket synchronization. Specific use cases include building network clients/servers requiring buffered message parsing, multiplexing I/O across multiple sockets, or implementing protocols with framed or line-delimited data exchange.",
      "description_length": 686,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 3,
    "filtered_empty_modules": 2,
    "retention_rate": 0.6
  },
  "statistics": {
    "max_description_length": 686,
    "min_description_length": 385,
    "avg_description_length": 530.0,
    "embedding_file_size_mb": 0.04388999938964844
  }
}