{
  "package": "dtools",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:50:35.764420",
  "modules": [
    {
      "module_path": "Dtools.Conf",
      "library": "dtools",
      "description": "This module enables hierarchical configuration management through typed key structures, supporting operations like path-based navigation, type-safe value access, and conversion between string representations and structured data. It works with configuration trees stored in `ut` objects, handling primitive types (int, bool, string, etc.) and lists, while providing utilities for file/command-line input parsing and error-resilient configuration serialization. Typical use cases include loading settings from dot-separated key files, generating CLI flags, and validating structured configuration hierarchies.",
      "description_length": 607,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dtools.Init",
      "library": "dtools",
      "description": "This module manages initialization and shutdown procedures with dependency tracking. It defines atoms (`t`) representing units of work executed at startup or shutdown, supporting dependencies, triggers, and ordering constraints. Use cases include daemon setup with PID file management, tracing configuration, and structured resource initialization/cleanup.",
      "description_length": 356,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dtools.Log",
      "library": "dtools",
      "description": "This module implements a flexible logging system with configurable output destinations, log levels, and formatting. It supports structured log entries with timestamps, labels, and severity levels, and allows custom log handlers to be registered for extended behavior. Concrete use cases include logging to files with specific permissions, controlling verbosity through command-line arguments, and integrating with initialization systems to manage log startup and shutdown.",
      "description_length": 472,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dtools",
      "library": "dtools",
      "description": "This module provides configuration management, initialization orchestration, and structured logging. It handles hierarchical configuration trees, dependency-aware startup/shutdown procedures, and customizable log output with severity levels and structured entries. Concrete uses include loading typed configurations from files, managing daemon initialization with ordered dependencies, and directing logs to files or handlers with runtime-configurable verbosity.",
      "description_length": 462,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 607,
    "min_description_length": 356,
    "avg_description_length": 474.25,
    "embedding_file_size_mb": 0.05836772918701172
  }
}