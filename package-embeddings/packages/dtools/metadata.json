{
  "package": "dtools",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:41.127332",
  "modules": [
    {
      "module_path": "Dtools.Log",
      "library": "dtools",
      "description": "This module provides structured logging with configurable severity levels, timestamping, and output destinations. It supports logging to stdout, files, and custom handlers with optional colorization and formatting. Concrete use cases include tracking application events, debugging with timed logs, and integrating with command-line tools via `Arg`-compatible configuration.",
      "description_length": 373,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dtools.Init",
      "library": "dtools",
      "description": "This module manages initialization and shutdown procedures with dependencies and triggers. It defines atoms (`t`) representing units of work executed at startup or shutdown, supporting dependency ordering and triggering relationships. Use it to structure setup and teardown logic with precise execution order, such as initializing subsystems before starting a server and cleaning up resources in a specific sequence on exit.",
      "description_length": 424,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dtools.Conf",
      "library": "dtools",
      "description": "This module enables hierarchical configuration management through a tree-structured node system with metadata, supporting typed value operations (unit, int, float, bool, string, list) and path-based navigation using dot-separated strings. It provides utilities to serialize configurations, parse structured data from files or strings, and bridge settings to command-line interfaces, making it suitable for application setup, CLI tool integration, and validated hierarchical data modeling.",
      "description_length": 488,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dtools",
      "library": "dtools",
      "description": "This module suite integrates structured logging, lifecycle management, and hierarchical configuration into a cohesive toolkit for building robust, configurable applications. Core components include loggers with severity and output control, dependency-aware initialization atoms, and a typed configuration tree with path-based access. Use it to manage startup/shutdown sequences, centralize and validate application settings, and produce formatted, timestamped logs to stdout or files. Example workflows include coordinating subsystem initialization, mapping CLI arguments to runtime configuration, and tracking debug events with colorized output.",
      "description_length": 646,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 646,
    "min_description_length": 373,
    "avg_description_length": 482.75,
    "embedding_file_size_mb": 0.014935493469238281
  }
}