{
  "package": "duppy",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 16,
  "creation_timestamp": "2025-06-18T16:33:23.271174",
  "modules": [
    {
      "module_path": "Duppy.Monad.Condition.Factory.Control",
      "description": "Provides functions to manage task execution order using a priority-based scheduling system. Operates with a `priority` type to define and compare task priorities. Used to control the sequence of operations in real-time systems or event-driven applications.",
      "description_length": 256,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Monad.Mutex.Factory.Control",
      "description": "Provides functions to manage task execution order using a priority-based scheduling system. Operates with a `priority` type to define and compare task priorities. Used to control the sequence of operations in real-time systems or event-driven applications.",
      "description_length": 256,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Monad.Condition.Factory",
      "description": "manages task execution by prioritizing operations through a `priority` type, enabling precise control over process order. It supports insertion, retrieval, and adjustment of tasks based on their assigned priority levels. Users can implement real-time decision-making or event handling by dynamically reordering tasks. For example, high-priority alerts can be processed before routine operations.",
      "description_length": 395,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Monad.Mutex.Factory",
      "description": "Provides functions to manage and execute tasks based on priority levels. Operates with a custom `priority` type to define task urgency and a scheduler to process tasks in order. Used to implement task execution pipelines where specific operations must be handled in a defined sequence.",
      "description_length": 285,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Duppy.Monad.Mutex.Control",
      "description": "Provides functions to manage and manipulate scheduling priorities, including a priority scheduler and a priority value. Operates on the `priority` type to define and control task execution order. Used to implement task scheduling logic in concurrent systems where execution order depends on defined priority levels.",
      "description_length": 315,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Duppy.Monad.Mutex",
      "description": "Provides functions to access scheduler and priority values used in task initialization. Operates with priority values and scheduler configurations. Used to configure task execution contexts that handle mutual exclusion and synchronization.",
      "description_length": 239,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Duppy.Monad.Condition",
      "description": "manages task execution by prioritizing operations through a `priority` type, enabling precise control over process order. It supports insertion, retrieval, and adjustment of tasks based on their assigned priority levels. Users can implement real-time decision-making or event handling by dynamically reordering tasks. For example, high-priority alerts can be processed before routine operations.",
      "description_length": 395,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Monad.MakeIo",
      "description": "Provides functions to read from and write to sockets with custom handling of markers, timeouts, and error conditions. Reads split data into strings based on a marker or size, and writes data from strings or bigarrays. Used for streaming data processing and reliable network communication.",
      "description_length": 288,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Monad.Io",
      "description": "Provides functions to read from and write to sockets, handling data as strings or bigarrays, with support for markers to split incoming data. Reads can be configured to process data recursively or with a timeout, and writes include error handling and optional execution after completion. Works with socket descriptors, custom marker types, and byte-based data structures for low-level network communication.",
      "description_length": 407,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Task",
      "description": "Registers event-driven tasks that execute specified functions upon event triggers, with results capable of generating new tasks. Operates on scheduler contexts and event-bound task structures. Used to manage asynchronous workflows like user input handling or system event responses.",
      "description_length": 282,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Async",
      "description": "Provides functions to schedule and manage asynchronous tasks that execute a function and optionally repeat after a delay. Operates on a task type `t` and a scheduler, allowing control through wake-up and stop operations. Used to implement periodic or event-driven behaviors in a non-blocking manner.",
      "description_length": 299,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.MakeIo",
      "description": "Provides operations to interact with I/O resources using a file descriptor, including reading bytes into a buffer, writing bytes from a buffer, and writing from a bigarray. Works with Unix file descriptors and a specific bigarray type for efficient memory handling. Used to manage low-level network or file data transfers with direct memory access.",
      "description_length": 348,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Io",
      "description": "Provides operations for reading from and writing to Unix sockets, handling markers to split data, and managing errors during I/O. Works with sockets, strings, bigarrays, and custom failure types. Used to process streamed data by splitting on markers or send binary data efficiently with error handling.",
      "description_length": 302,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Duppy.Monad",
      "description": "provides a framework for building network-aware computations with fine-grained control over data handling and execution flow. it supports reading and writing to sockets using strings, bigarrays, and custom markers, with options for recursive processing, timeouts, and post-write actions. operations include low-level byte manipulation, socket descriptor management, and priority-based task redirection. examples include parsing streamed data with custom delimiters, managing asynchronous I/O with timeouts, and rerouting tasks to different execution contexts.",
      "description_length": 559,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "duppy",
      "description": "Provides functions for scheduling and managing timed events, including delay registration, event cancellation, and periodic execution. Operates with time intervals, event identifiers, and callback functions. Used to implement real-time audio streaming logic and task coordination in multimedia applications.",
      "description_length": 307,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Duppy",
      "description": "Provides asynchronous read and write operations on Unix file descriptors, using markers to split incoming data and handle partial reads. Works with sockets, custom marker types, and byte-based data structures like strings and bigarrays. Used to process streaming data from network sockets, such as parsing protocol messages or handling real-time data feeds.",
      "description_length": 357,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 18,
    "meaningful_modules": 16,
    "filtered_empty_modules": 2,
    "retention_rate": 0.8888888888888888
  },
  "statistics": {
    "max_description_length": 559,
    "min_description_length": 239,
    "avg_description_length": 330.625,
    "embedding_file_size_mb": 0.055001258850097656
  }
}