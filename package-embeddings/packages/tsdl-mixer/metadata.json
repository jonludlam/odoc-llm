{
  "package": "tsdl-mixer",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:09.690880",
  "modules": [
    {
      "module_path": "Tsdl_mixer.Mixer.Init",
      "library": "tsdl-mixer",
      "description": "This module defines bitflag values representing audio file formats and initializes support for them in SDL2_mixer. It provides bitwise combination (`+`) and comparison operations (`eq`, `test`) to manage sets of supported formats like FLAC, MOD, MP3, and OGG. Use it to specify which audio formats to enable when initializing audio playback systems in games or multimedia applications.",
      "description_length": 385,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tsdl_mixer.Mixer",
      "library": "tsdl-mixer",
      "description": "This library enables audio initialization, playback control, and spatial audio processing through operations on audio channels, music streams, and chunk data. It supports dynamic channel allocation, multi-track mixing, custom effects registration, and 3D audio positioning via low-level bindings. The format module defines bitflag values for audio file formats and provides bitwise operations to manage sets of supported formats such as FLAC, MOD, MP3, and OGG. Use the format module to specify enabled audio formats during initialization, and use the main library to implement game soundtracks with synchronized mixing, interactive audio applications with real-time effects, and spatialized sound rendering for immersive environments.",
      "description_length": 735,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tsdl_mixer",
      "library": "tsdl-mixer",
      "description": "OCaml module Tsdl_mixer containing: This library enables audio initialization, playback control, and spatial audio processing through operations on audio channels, music streams, and chunk data. It supports dynamic channel allocation, multi-track mixing, custom effects registration, and 3D audio positioning via low-level bindings. The format module defines bitflag values for audio file formats and provides bitwise operations to manage sets of supported formats such as FLAC, MOD, MP3, and OGG. Use the format module to specify enabled audio formats during initialization, and use the main library to implement game soundtracks with synchronized mixing, interactive audio applications with real-time effects, and spatialized sound rendering for immersive environments.",
      "description_length": 771,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 771,
    "min_description_length": 385,
    "avg_description_length": 630.3333333333334,
    "embedding_file_size_mb": 0.011322975158691406
  }
}