{
  "package": "tsdl-mixer",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:55:00.345722",
  "modules": [
    {
      "module_path": "Tsdl_mixer.Mixer.Init",
      "library": "tsdl-mixer",
      "description": "This module defines a set of constants and operations for initializing audio file format support in the audio library. It provides bitwise combination and comparison operations on an abstract type `t`, allowing specification and testing of supported formats such as FLAC, MP3, OGG, MOD, and FluidSynth. Concrete use cases include enabling specific audio backends at initialization time and checking whether a given format is supported.",
      "description_length": 435,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tsdl_mixer.Mixer",
      "library": "tsdl-mixer",
      "description": "This module provides audio initialization, playback control, and low-level sound processing capabilities, focusing on operations like channel management, music streaming, and spatial audio effects. It works with audio chunks, music objects, channel groups, and raw audio data through types like `chunk`, `music`, and integer channel identifiers, while supporting format configuration and decoder management. Specific use cases include game sound effect triggering, background music fading with event hooks, 3D positional audio rendering via panning/distance controls, and custom audio filter integration for dynamic sound manipulation.",
      "description_length": 635,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tsdl_mixer",
      "library": "tsdl-mixer",
      "description": "This module handles audio initialization, playback control, and low-level sound processing with operations for managing channels, streaming music, and applying spatial audio effects. It works directly with audio chunks, music objects, channel groups, and raw audio data using types like `chunk`, `music`, and integer channel IDs, while supporting format configuration and decoder management. Concrete use cases include triggering game sound effects, fading background music with event hooks, rendering 3D positional audio through panning and distance controls, and integrating custom audio filters for dynamic sound manipulation.",
      "description_length": 629,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 635,
    "min_description_length": 435,
    "avg_description_length": 566.3333333333334,
    "embedding_file_size_mb": 0.04390525817871094
  }
}