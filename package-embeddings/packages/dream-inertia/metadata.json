{
  "package": "dream-inertia",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:40.694707",
  "modules": [
    {
      "module_path": "Dream_inertia.Prop",
      "library": "dream-inertia",
      "description": "This module defines and manipulates property descriptors for Inertia.js components, including their resolution behavior, merging strategy, and loading mode. It works with strings, resolver functions, and enumerated types for merge and loading modes, producing JSON values asynchronously. Concrete use cases include constructing and formatting component properties to control how they are merged with page data and loaded in the client.",
      "description_length": 435,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dream_inertia.Template",
      "library": "dream-inertia",
      "description": "This module defines a template system for rendering Inertia.js pages in a Dream web application. It includes a `make` function to create template values from a renderer function, and uses a record type with a `render` field to encapsulate rendering logic. The `page_app` and `render` functions generate string output from page data and a template, suitable for sending as HTTP responses.",
      "description_length": 387,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_inertia",
      "library": "dream-inertia",
      "description": "This module integrates Inertia.js with Dream web applications, handling request processing, property management, and response rendering through middleware and custom types. It supports dynamic page rendering with encrypted history state and shared properties, using operations like `render`, `property`, and `redirect`. The child module on property descriptors controls how component data is resolved, merged, and loaded, enabling fine-grained client-side behavior. Another child module provides a template system with `make` and `render` to generate HTML output from Inertia page data.",
      "description_length": 586,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 586,
    "min_description_length": 387,
    "avg_description_length": 469.3333333333333,
    "embedding_file_size_mb": 0.011307716369628906
  }
}