{
  "package": "dbase4",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:39.316799",
  "modules": [
    {
      "module_path": "Dbase4.Base",
      "library": "dbase4",
      "description": "This module handles reading and navigating dBASE database files, providing functions to open and close files, move through records, and retrieve structured data. It works with `dbf_file` records containing file channels, metadata, and current record positions, along with bitstrings for record content. Concrete use cases include parsing dBASE tables, filtering records based on field values, and accessing memo fields from associated files.",
      "description_length": 441,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dbase4.Data",
      "library": "dbase4",
      "description": "This module directly handles data extraction from DBF files by converting field values into specific OCaml types such as int, int64, float, string, and bool. It provides functions to access fields either by index or by name, using a rider mechanism that operates on byte buffers with position and length metadata. These functions are used to read typed values from specific positions in a DBF file's records.",
      "description_length": 408,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dbase4.Memo",
      "library": "dbase4",
      "description": "This module provides a fixed block size for memo data and a function to load memo content from a DBF file at a specified offset. It operates directly on DBF files and string-based memo records. Use this module to retrieve memo field values stored externally in dBASE IV database files.",
      "description_length": 285,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dbase4",
      "library": "dbase4",
      "description": "This module provides tools for working with dBASE IV database files, enabling structured access to both table data and memo fields. It supports opening and navigating DBF files using `dbf_file` records, extracting typed field values by index or name, and retrieving memo content from specified offsets. Key operations include moving through records, converting raw data to OCaml types like int and string, and handling external memo data with fixed block sizes. Example uses include parsing dBASE tables, filtering records by field values, and extracting memo content from associated files.",
      "description_length": 590,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 590,
    "min_description_length": 285,
    "avg_description_length": 431.0,
    "embedding_file_size_mb": 0.014941215515136719
  }
}