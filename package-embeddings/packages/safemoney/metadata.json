{
  "package": "safemoney",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 197,
  "creation_timestamp": "2025-08-15T17:10:35.177306",
  "modules": [
    {
      "module_path": "Safemoney.Predefined.ISO4217_SGD",
      "library": "safemoney",
      "description": "This module defines the Singapore Dollar (SGD) with specific values such as its symbol, description, and currency units. It provides functions to construct quotient and discrete monetary values in SGD, using predefined scaling and validation rules. Use cases include financial calculations and currency conversions involving SGD in contexts like banking or e-commerce systems.",
      "description_length": 376,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ETB",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Ethiopian Birr, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using the Birr's scale. Use this module when handling financial calculations involving Ethiopian Birr, ensuring correct unit conversions and value representations.",
      "description_length": 349,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_YER",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Yemeni Rial, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Rial's scale. Use this module when handling financial calculations involving Yemeni Rials, particularly for converting quantities into typed monetary values.",
      "description_length": 363,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_USN",
      "library": "safemoney",
      "description": "This module defines the US Dollar (Next day) currency with its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use it when working with financial calculations requiring precise handling of USD next-day denominations.",
      "description_length": 300,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Discrete.Scale",
      "library": "safemoney",
      "description": "This module represents monetary values with a currency symbol, sub-unit name, and a rational number scale. It provides functions to construct these values and convert them to JSON or S-expressions. Use this module to serialize and work with scaled monetary amounts in different currencies.",
      "description_length": 289,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_XTZ",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Tezos (XTZ), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values from numeric inputs, ensuring correct scaling for Tezos units. Use this module when handling financial calculations involving XTZ, such as converting between mutez and tez or representing XTZ amounts in a type-safe way.",
      "description_length": 402,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MVR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Maldivian Rufiyaa, including its symbol, description, and units. It provides functions to construct quotient and discrete values specific to this currency. Use this module when handling financial calculations involving Maldivian Rufiyaa, particularly for creating and validating monetary values in a type-safe manner.",
      "description_length": 369,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_LTC",
      "library": "safemoney",
      "description": "This module defines specific values and functions for handling Litecoin (LTC), including currency symbol, description, and unit scales. It provides operations to construct quotient and discrete monetary values using predefined Litecoin units. Use this module to create and manipulate precise LTC amounts in financial calculations.",
      "description_length": 330,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Ops.Separator",
      "library": "safemoney",
      "description": "This module defines a separator configuration type consisting of a pair of strings, where the second may be absent. It provides functions to construct a separator configuration from character pairs, and to access the individual components. It is used to specify delimiters for formatting and parsing monetary values, such as thousand separators and decimal points.",
      "description_length": 364,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LAK",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Lao Kip (LAK), including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values using the LAK currency. Concrete use cases include creating and validating LAK-based financial amounts in monetary calculations and transactions.",
      "description_length": 352,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ZWL",
      "library": "safemoney",
      "description": "This module defines the currency symbol, description, and scaling units for the Zimbabwe Dollar (ZWL). It provides functions to construct quotient and discrete monetary values using predefined configurations. Use this module to create and work with ZWL currency values in financial calculations.",
      "description_length": 295,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KWD",
      "library": "safemoney",
      "description": "This module defines the Kuwaiti Dinar (KWD) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to KWD. Use this module when handling financial calculations or representations involving Kuwaiti Dinars, such as formatting amounts or performing currency-specific arithmetic.",
      "description_length": 367,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HTG",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Haitian Gourde, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using standard numeric types. Use this module when handling financial calculations or data involving the Haitian Gourde currency.",
      "description_length": 329,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DZD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Algerian Dinar, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to the DZD currency. Use this module when handling financial calculations involving Algerian Dinars, particularly when working with scaled units or converting numeric values into typed monetary representations.",
      "description_length": 432,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PAB",
      "library": "safemoney",
      "description": "This module defines the currency symbol, description, and units for the Panamanian Balboa (PAB). It provides functions to construct quotient and discrete monetary values specific to PAB, using standard string and numeric types. Concrete use cases include creating and validating PAB-denominated amounts for financial calculations and data exchange.",
      "description_length": 348,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BOV",
      "library": "safemoney",
      "description": "This module defines the Bolivian Mvdol (BOV) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to BOV. Use this module when handling BOV currency in financial calculations requiring precise scaling and representation.",
      "description_length": 305,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ARS",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Argentine Peso, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Argentine Peso, particularly when working with scaled amounts or currency units.",
      "description_length": 387,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BAM",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bosnia-Herzegovina Convertible Marka, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving BAM, particularly for parsing and formatting amounts in accordance with its standard units.",
      "description_length": 435,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_WST",
      "library": "safemoney",
      "description": "This module defines the Samoan Tala (WST) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to WST. Use this module when handling financial calculations or representations involving Samoan currency.",
      "description_length": 299,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BYN",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Belarusian Ruble, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Belarusian Ruble, particularly when working with scaled units or parsing string representations into discrete amounts.",
      "description_length": 418,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CUP",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Cuban Peso (CUP). It includes functions to construct valid monetary values in CUP, either as quotient or discrete types, using standardized units. It is used when handling financial calculations requiring strict adherence to ISO 4217 CUP specifications, such as in banking or international transfers.",
      "description_length": 373,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MUR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Mauritius Rupee, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Mauritius Rupee.",
      "description_length": 334,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ZMW",
      "library": "safemoney",
      "description": "This module defines the Zambian Kwacha currency, including its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to ZMW. Use this module when handling financial calculations involving Zambian currency, such as constructing amounts in kwacha or performing currency conversions.",
      "description_length": 337,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NIO",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Cordoba Oro, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving Cordoba Oro, ensuring correct unit handling and formatting.",
      "description_length": 326,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BRL",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations specific to the Brazilian Real (BRL). It provides access to the currency's symbol, description, and unit denominations, along with functions to construct quantity and discrete values. It is used to create and validate monetary amounts in BRL, particularly handling real-world units like \"BRL\" and cents.",
      "description_length": 356,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_BNB",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to Binance Coin, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values from raw inputs, ensuring correct scaling and representation. These utilities enable precise financial calculations and value creation tailored to Binance Coin's specifications.",
      "description_length": 383,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BDT",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Bangladeshi Taka, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving Bangladeshi Taka with precise scaling and unit representations.",
      "description_length": 352,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CZK",
      "library": "safemoney",
      "description": "This module defines the Czech Koruna (CZK) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to CZK. Use cases include handling CZK amounts in financial calculations and ensuring correct unit scaling.",
      "description_length": 288,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_DOT",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Polkadot (DOT), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values from raw inputs, using DOT's specific scaling rules. These operations are used when parsing or building financial values tied to the Polkadot blockchain, such as transaction amounts or balances.",
      "description_length": 380,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SRD",
      "library": "safemoney",
      "description": "This module defines the Surinam Dollar currency, including its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Surinam Dollars, such as constructing monetary quantities or working with currency units.",
      "description_length": 344,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KMF",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Comorian Franc (KMF). It provides functions to construct quotient and discrete monetary values specific to KMF, using standard string and numeric types. Use this module when handling financial calculations involving KMF to ensure correct unit scaling and value creation.",
      "description_length": 343,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HKD",
      "library": "safemoney",
      "description": "This module defines the Hong Kong Dollar (HKD) with its symbol, description, and currency units. It provides functions to create quotient and discrete monetary values specific to HKD. Use this module when handling financial calculations or representations involving Hong Kong Dollars.",
      "description_length": 284,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GNF",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Guinean Franc, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using the ISO 4217 standard for GNF. Use this module when handling financial calculations involving Guinean Franc denominations.",
      "description_length": 313,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TMT",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for Turkmenistan New Manat, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation requiring precise handling of Turkmenistan Manat denominations.",
      "description_length": 368,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UYI",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Uruguayan Peso in Indexed Units (UYI). It provides the currency symbol, description, and scaling units, along with functions to construct quotient and discrete monetary values. Use cases include financial calculations and data representation requiring precise handling of UYI amounts.",
      "description_length": 345,
      "index": 34,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AFN",
      "library": "safemoney",
      "description": "This module defines the Afghani currency with its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to the Afghani. Use this module when handling financial calculations involving the Afghan currency, particularly for creating and validating monetary quantities.",
      "description_length": 325,
      "index": 35,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_USDT",
      "library": "safemoney",
      "description": "This module defines operations for creating and handling Tether (USDT) values. It provides functions to construct discrete and quotient values specific to USDT, along with metadata like symbol and description. It works with discrete scales, string identifiers, and big integers to represent currency units and quantities.",
      "description_length": 321,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ALL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Albanian Lek, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scaling rules. Use this module when handling financial calculations involving the Albanian Lek, particularly for parsing and formatting amounts with correct decimal precision.",
      "description_length": 389,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TOP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Tongan Pa'anga, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values specific to this currency. Use cases include financial calculations and data representation requiring strict adherence to Tongan Pa'anga denominations.",
      "description_length": 346,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MNT",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Mongolian Tugrik, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Mongolian Tugrik, particularly for parsing and formatting amounts in different units.",
      "description_length": 385,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NOK",
      "library": "safemoney",
      "description": "This module defines the Norwegian Krone (NOK) currency, providing its symbol, description, and unit denominations. It includes functions to construct quotient and discrete monetary values specific to NOK. Use this module to create and manipulate NOK amounts in financial calculations and representations.",
      "description_length": 304,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RSD",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Serbian Dinar (RSD). It includes functions to construct quotient and discrete monetary values using standard denominations. The module is used to ensure correct formatting and arithmetic for financial calculations involving Serbian Dinars.",
      "description_length": 312,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SBD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations for the Solomon Islands Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Solomon Islands Dollar.",
      "description_length": 357,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_JPY",
      "library": "safemoney",
      "description": "This module defines the Japanese Yen (JPY) currency with its symbol, description, and discrete units. It provides functions to construct quotient and discrete monetary values specific to JPY, using standard numeric types. Use this module when handling financial calculations involving Japanese Yen, such as pricing, currency conversion, or transaction processing.",
      "description_length": 363,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HUF",
      "library": "safemoney",
      "description": "This module defines the Hungarian Forint (HUF) currency, including its symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to HUF. Use this module when handling financial calculations or representations involving Hungarian Forint.",
      "description_length": 298,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XDR",
      "library": "safemoney",
      "description": "This module defines the Special Drawing Right (SDR) currency, including its symbol, description, and unit composition. It provides functions to create quotient and discrete monetary values denominated in SDR, using exchange rates and scaled amounts. Use this module when working with international reserve assets or multi-currency financial calculations involving SDR.",
      "description_length": 368,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MOP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Macanese Pataca, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving Macanese Pataca in contexts requiring precise currency handling.",
      "description_length": 374,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_OMR",
      "library": "safemoney",
      "description": "This module defines the Omani Rial (OMR) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to OMR. Use this module when handling financial calculations or representations involving Omani Rials, particularly for parsing and formatting amounts in banking or commerce applications.",
      "description_length": 379,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BWP",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Botswanan Pula, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Pula's scale. Direct use cases include handling financial calculations and representations specific to the BWP currency in applications like banking or e-commerce.",
      "description_length": 372,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UYU",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Uruguayan Peso (UYU), including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to UYU. Use this module when handling financial calculations involving UYU, particularly when working with predefined currency metadata and value creation.",
      "description_length": 366,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MWK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Malawi Kwacha, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete values specific to this currency. Use this module when handling financial calculations involving Malawi Kwacha, ensuring correct scaling and representation.",
      "description_length": 335,
      "index": 50,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XCD",
      "library": "safemoney",
      "description": "This module defines the East Caribbean Dollar currency, including its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving East Caribbean Dollars, such as constructing amounts in XCD with proper scaling.",
      "description_length": 342,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CRC",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Costa Rican Col\u00f3n, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards for the CRC currency. Use this module when handling financial calculations or representations involving Costa Rican Col\u00f3n with precise scaling and unit handling.",
      "description_length": 388,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TWD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for New Taiwan Dollar, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and representations involving New Taiwan Dollars, such as handling transactions or formatting amounts.",
      "description_length": 382,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_USD",
      "library": "safemoney",
      "description": "This module defines the US Dollar currency according to ISO 4217, providing its symbol, description, and unit denominations. It includes functions to construct quotient and discrete monetary values specific to USD. Use this module when handling USD amounts in financial calculations requiring precise scaling and unit representation.",
      "description_length": 333,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BZD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Belize Dollar, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module to handle financial calculations involving the Belize Dollar, ensuring correct unit conversions and formatting.",
      "description_length": 351,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BMD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bermudian Dollar, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation requiring precise handling of Bermudian Dollar amounts.",
      "description_length": 349,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CNY",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Chinese Yuan Renminbi, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to CNY. Use cases include financial calculations and currency conversions involving Chinese Yuan.",
      "description_length": 313,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ANG",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Netherlands Antillean Guilder, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving the ANG currency, particularly for representing amounts in specific denominations like coins or bills.",
      "description_length": 404,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KRW",
      "library": "safemoney",
      "description": "This module defines the South Korean Won (KRW) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to KRW. Use cases include financial calculations and currency representation where KRW is the target unit of account.",
      "description_length": 302,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SZL",
      "library": "safemoney",
      "description": "This module defines the currency representation for Swazi Lilangeni, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Swazi Lilangeni, particularly for creating and validating monetary amounts in different units.",
      "description_length": 385,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KGS",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Kyrgyzstani Som, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using standardized scales. Direct use cases include handling financial calculations and formatting for Kyrgyzstani Som in applications requiring precise currency operations.",
      "description_length": 373,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SLL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Sierra Leonean Leone, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving Sierra Leonean currency, particularly for creating and validating monetary units.",
      "description_length": 374,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SYP",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the Syrian Pound (SYP), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the SYP currency code. Concrete use cases include creating and validating SYP amounts for financial calculations or transactions.",
      "description_length": 360,
      "index": 63,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_THB",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Thai Baht, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined Thai Baht units. Use this module when handling financial calculations involving Thai Baht, particularly when working with discrete amounts or scaling values.",
      "description_length": 364,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UGX",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Ugandan Shilling (UGX), including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to UGX, ensuring correct scaling and representation. Use cases include financial calculations and data modeling involving Ugandan currency.",
      "description_length": 369,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBD",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and units for the Bond Markets Unit European Unit of Account 17 (E.U.A.-17). It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving E.U.A.-17 in contexts like bond settlements or accounting systems.",
      "description_length": 358,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MGA",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Malagasy Ariary, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving the MGA currency, ensuring correct formatting and arithmetic behavior.",
      "description_length": 358,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TTD",
      "library": "safemoney",
      "description": "This module defines the Trinidad and Tobago Dollar (TTD) currency, providing its symbol, description, and unit denominations. It includes functions to construct quotient and discrete monetary values specific to TTD. Use this module when handling financial calculations or representations involving Trinidad and Tobago's official currency.",
      "description_length": 338,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BND",
      "library": "safemoney",
      "description": "This module defines the Brunei Dollar (BND) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to BND. Use this module when handling financial calculations or representations involving Brunei Dollars.",
      "description_length": 287,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AUD",
      "library": "safemoney",
      "description": "This module defines the Australian Dollar (AUD) with specific values such as its symbol and description. It includes units for handling denominations and functions to construct quotient and discrete monetary values. It is used to represent and manipulate AUD amounts in financial calculations and transactions.",
      "description_length": 310,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NZD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the New Zealand Dollar (NZD), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using standard numeric types. Direct use cases include handling financial calculations and representations involving NZD in applications requiring precise currency handling.",
      "description_length": 404,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MAD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Moroccan Dirham, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Moroccan Dirham, such as creating scaled amounts or validating currency units.",
      "description_length": 356,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LRD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the Liberian Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations or representations involving Liberian Dollars, particularly for parsing, formatting, or arithmetic operations tied to its specific units.",
      "description_length": 437,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DKK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Danish Krone (DKK), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to DKK, using predefined scales and string representations. Use cases include financial calculations and currency conversions involving DKK, ensuring correct handling of decimal precision and unit representation.",
      "description_length": 425,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GIP",
      "library": "safemoney",
      "description": "This module defines the Gibraltar Pound (GIP) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to GIP. Use this module when handling financial calculations or representations involving the Gibraltar Pound.",
      "description_length": 303,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KES",
      "library": "safemoney",
      "description": "This module defines the Kenyan Shilling (KES) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to KES. Use this module when handling financial calculations or representations involving Kenyan Shillings.",
      "description_length": 291,
      "index": 76,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ILS",
      "library": "safemoney",
      "description": "This module defines the currency specifications for New Israeli Sheqel (ILS), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to ILS, using predefined scales and validation rules. Use cases include financial calculations and currency conversions involving ILS in contexts like banking and international trade.",
      "description_length": 402,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KPW",
      "library": "safemoney",
      "description": "This module defines the currency configuration for the North Korean Won, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving North Korean Won, particularly for creating and validating monetary values with appropriate scaling.",
      "description_length": 404,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PKR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Pakistan Rupee, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to PKR. Use cases include financial calculations and currency conversions involving the Pakistan Rupee.",
      "description_length": 325,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TRY",
      "library": "safemoney",
      "description": "This module defines the Turkish Lira (TRY) currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to TRY, using standard scale and string representations. Concrete use cases include handling TRY amounts in financial calculations and currency conversions.",
      "description_length": 353,
      "index": 80,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VND",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Vietnamese Dong (VND), including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to VND, ensuring correct scaling and representation. Use cases include financial calculations and data handling where VND is the target currency, particularly in contexts requiring precise arithmetic operations.",
      "description_length": 418,
      "index": 81,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XOF",
      "library": "safemoney",
      "description": "This module defines the CFA Franc BCEAO (XOF) currency, including its symbol, description, and discrete units. It provides functions to construct quotient and discrete monetary values specific to XOF. Use this module when handling financial calculations involving the CFA Franc BCEAO, such as creating or manipulating amounts in XOF with precise scaling.",
      "description_length": 354,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_XRP",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Ripple (XRP), including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values using XRP units. Use this module when handling financial calculations involving XRP, such as creating amounts in drops or converting between units.",
      "description_length": 333,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SCR",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling units for the Seychelles Rupee. It provides functions to construct quotient and discrete monetary values specific to this currency. The module is used to ensure correct formatting and arithmetic handling when performing financial calculations involving Seychelles Rupees.",
      "description_length": 330,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KZT",
      "library": "safemoney",
      "description": "This module defines currency-specific values for Kazakhstani Tenge, including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values tied to this currency. Use this module when handling financial calculations involving Kazakhstani Tenge, particularly for creating and validating monetary quantities with the correct scale and formatting.",
      "description_length": 397,
      "index": 85,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SHP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Saint Helena Pound, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values using predefined scales. Specifically, it supports creating discrete values from a string and integer, and quotient values from a rational number, ensuring correct handling of the currency's specific units.",
      "description_length": 410,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PLN",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Polish Zloty (PLN), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to PLN, using predefined scales and string representations. Use cases include financial calculations and currency conversions involving Polish Zloty.",
      "description_length": 362,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CDF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Congolese Franc, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Congolese Franc, particularly when working with its subunits or formatting outputs.",
      "description_length": 377,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBA",
      "library": "safemoney",
      "description": "This module defines the Bond Markets Unit European Composite Unit (EURCO) with operations to create quotient and discrete monetary values. It provides a symbol, description, and optional units mapping for handling EURCO in financial calculations. Use it to construct and manipulate EURCO-based amounts in contexts like bond market transactions or composite currency computations.",
      "description_length": 379,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XUA",
      "library": "safemoney",
      "description": "This module defines the ADB Unit of Account (XUA) currency, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to XUA. Use this module when working with financial calculations involving the XUA currency in compliance with ISO 4217 standards.",
      "description_length": 338,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CUC",
      "library": "safemoney",
      "description": "This module defines the Cuban Peso Convertible (CUC) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to CUC. Use this module when handling financial calculations involving CUC, such as creating amounts in CUC from numeric values or working with predefined denominations.",
      "description_length": 373,
      "index": 91,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BHD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bahraini Dinar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to BHD, using standard scales and string representations. Use this module when handling financial calculations or data involving Bahraini Dinars, particularly for parsing and constructing currency values with precision.",
      "description_length": 432,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_INR",
      "library": "safemoney",
      "description": "This module defines the Indian Rupee (INR) currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to INR, using predefined scaling and validation rules. Use cases include financial calculations and representations involving Indian Rupees, such as handling amounts in paise or rupees with proper scaling.",
      "description_length": 402,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_EGP",
      "library": "safemoney",
      "description": "This module defines the Egyptian Pound (EGP) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to EGP. Use this module when handling financial calculations or representations involving Egyptian currency.",
      "description_length": 300,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_FKP",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Falkland Islands Pound, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations or representations specific to the Falkland Islands Pound.",
      "description_length": 343,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_SHIB",
      "library": "safemoney",
      "description": "This module defines specific monetary units and conversion functions for the Shiba Inu cryptocurrency. It provides the currency symbol, description, and scaling units, along with functions to construct quotient and discrete monetary values from numeric inputs. It is used to represent and manipulate Shiba Inu amounts in financial calculations.",
      "description_length": 344,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SEK",
      "library": "safemoney",
      "description": "This module defines the Swedish Krona (SEK) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to SEK. Use cases include handling financial calculations and representations involving Swedish Krona, such as formatting amounts or performing currency-specific arithmetic.",
      "description_length": 355,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SAR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Saudi Riyal, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to SAR, using predefined scales and validation logic. Use cases include financial calculations and currency conversions involving Saudi Riyals.",
      "description_length": 353,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_STN",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the S\u00e3o Tom\u00e9 and Pr\u00edncipe Dobra, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Dobra, particularly for parsing, formatting, and arithmetic operations tied to its subunits.",
      "description_length": 408,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_XMR",
      "library": "safemoney",
      "description": "This module defines Monero-specific currency metadata, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values for Monero amounts, using standard scaling and representation. These operations support precise financial calculations and serialization for Monero-based applications.",
      "description_length": 345,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AED",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the UAE Dirham, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using the Dirham's scale. Use this module when handling financial calculations involving UAE Dirham to ensure correct scaling and representation.",
      "description_length": 327,
      "index": 101,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CHE",
      "library": "safemoney",
      "description": "This module defines the WIR Euro currency, including its symbol, description, and unit scales. It provides functions to construct quotient and discrete values specific to the WIR Euro, using predefined configurations. Use cases include financial calculations and data representation involving the WIR Euro in economic systems.",
      "description_length": 326,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XPD",
      "library": "safemoney",
      "description": "This module defines currency-specific data and operations for Palladium (Pd), including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values using the currency's unique scale. These utilities enable precise financial calculations and value creation specific to the Palladium currency.",
      "description_length": 348,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BSD",
      "library": "safemoney",
      "description": "This module defines the currency metadata for the Bahamian Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Bahamian Dollars, particularly for parsing and representing amounts in their smallest units.",
      "description_length": 381,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MKD",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Macedonian Denar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scaling rules. Use this module when handling financial calculations involving MKD, such as parsing amounts or formatting output.",
      "description_length": 346,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HNL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Honduran Lempira, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Lempira's scale. Direct use cases include handling financial calculations and representations specific to Honduras.",
      "description_length": 326,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DOP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Dominican Peso, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and representations involving Dominican Pesos, such as handling amounts in different denominations or formatting currency values.",
      "description_length": 401,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GBP",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations specific to Pound Sterling (GBP), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module to handle GBP-specific financial calculations with precise scaling and unit management.",
      "description_length": 347,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LYD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Libyan Dinar, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to LYD, handling valid input conversions. Use cases include financial calculations and currency representation where LYD is the target currency.",
      "description_length": 364,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBB",
      "library": "safemoney",
      "description": "This module defines the Bond Markets Unit European Composite Unit (E.M.U.-6) with operations to create quotient and discrete monetary values. It provides a symbol, description, and optional units mapping for handling E.M.U.-6 in financial calculations. Use cases include representing and manipulating composite currency units in bond market computations.",
      "description_length": 354,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CAD",
      "library": "safemoney",
      "description": "This module defines the Canadian Dollar (CAD) with a symbol, description, and currency units. It provides functions to construct quotient and discrete monetary values specific to CAD. Use cases include financial calculations and currency conversions involving Canadian Dollars.",
      "description_length": 277,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XAF",
      "library": "safemoney",
      "description": "This module defines the CFA Franc BEAC (XAF) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to XAF. Use this module to handle financial calculations involving XAF, such as creating and manipulating amounts in CFA Francs.",
      "description_length": 311,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AOA",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Angolan Kwanza, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation involving Angolan Kwanza in contexts requiring precise currency handling.",
      "description_length": 372,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PGK",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Papua New Guinean Kina, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Kina's scale. Concrete use cases include handling financial calculations and representations specific to the PGK currency in applications requiring precise monetary arithmetic.",
      "description_length": 393,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_EUR",
      "library": "safemoney",
      "description": "This module defines the Euro (EUR) currency with standard properties and operations. It provides the currency symbol, description, and optional units for sub-denominations, along with functions to construct quotient and discrete monetary values specific to EUR. It works directly with string identifiers, numeric types like Z.t and Q.t, and custom types for monetary representation. Use this module to create and manipulate Euro-based financial values with precise scaling and formatting.",
      "description_length": 488,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KHR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Cambodian Riel, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using the Riel's scale. Direct use cases include handling financial calculations and representations involving Cambodian Riel in a type-safe manner.",
      "description_length": 334,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ISK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Iceland Krona (ISK), including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to ISK, ensuring correct scaling and representation. Use cases include financial calculations and data modeling where ISK is the currency, particularly when working with the `Safemoney` library's monetary value types.",
      "description_length": 422,
      "index": 117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SSP",
      "library": "safemoney",
      "description": "This module defines the South Sudanese Pound currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use it to handle financial calculations involving South Sudanese Pounds with precise scaling and unit representation.",
      "description_length": 318,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PHP",
      "library": "safemoney",
      "description": "This module defines the Philippine Peso (PHP) as a currency, providing its symbol, description, and optional units with scaling information. It includes functions to construct quotient and discrete monetary values specific to PHP, using quantity and denomination inputs. These operations support precise financial calculations and representations for Philippine Peso amounts.",
      "description_length": 375,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CHF",
      "library": "safemoney",
      "description": "This module defines the Swiss Franc (CHF) currency with its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to CHF. Use this module when handling financial calculations involving Swiss Francs, such as creating monetary values in CHF from numeric inputs or working with currency units like \"Rappen\" or \"Franken\".",
      "description_length": 377,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BOB",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bolivian Boliviano, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Bolivian Boliviano, particularly when working with scaled or unit-based amounts.",
      "description_length": 391,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BBD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Barbados Dollar (BBD), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to BBD. Use this module when handling financial calculations or representations involving Barbados Dollars.",
      "description_length": 327,
      "index": 122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CLF",
      "library": "safemoney",
      "description": "This module defines the Chilean Unidad de Fomento (CLF) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to CLF, using predefined scaling factors. Use this module when handling financial calculations involving CLF to ensure correct unit conversions and representations.",
      "description_length": 366,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NAD",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Namibia Dollar (NAD). It provides a function to create quotient values from quantities and discrete values from string inputs, ensuring correct monetary scaling. Use this module to handle NAD-specific financial calculations with precise unit conversions.",
      "description_length": 327,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SOS",
      "library": "safemoney",
      "description": "This module defines the Somali Shilling (SOS) currency, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to SOS. Use cases include financial calculations and data representation requiring ISO 4217-compliant Somali Shilling handling.",
      "description_length": 320,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ERN",
      "library": "safemoney",
      "description": "This module defines the Eritrean Nakfa currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Eritrean Nakfa, such as creating or validating amounts in that currency.",
      "description_length": 330,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_IDR",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the Indonesian Rupiah (IDR), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values in IDR, handling valid input conversions. Use cases include financial calculations and currency representations where IDR is required with precise scaling and validation.",
      "description_length": 400,
      "index": 127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_IRR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Iranian Rial, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values using the Rial's scale. Direct use cases include handling financial calculations and representations involving Iranian Rials, particularly in contexts requiring precise scaling and unit handling.",
      "description_length": 401,
      "index": 128,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PEN",
      "library": "safemoney",
      "description": "This module defines the Peruvian Sol (PEN) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to PEN. Use cases include financial calculations and currency representations requiring precise handling of Peruvian Sol denominations.",
      "description_length": 325,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BIF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Burundi Franc (BIF), including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to BIF, ensuring correct scaling and representation. Use this module when handling financial calculations involving BIF to maintain precision and adherence to ISO 4217 standards.",
      "description_length": 392,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AWG",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Aruban Florin (AWG), including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving AWG, such as parsing amounts or formatting output.",
      "description_length": 338,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XXX",
      "library": "safemoney",
      "description": "This module defines currency metadata including symbol, description, and units for ISO 4217 currencies. It provides functions to construct quotient and discrete monetary values from raw inputs. Use it when working with standardized currency codes and their associated scale and representation.",
      "description_length": 293,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XPF",
      "library": "safemoney",
      "description": "This module defines the CFP Franc currency, including its symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to the CFP Franc. Use this module when handling financial calculations involving the CFP Franc, such as constructing monetary values from quantities or discrete amounts.",
      "description_length": 347,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TND",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Tunisian Dinar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the TND currency. Use cases include financial calculations and currency conversions involving Tunisian Dinars.",
      "description_length": 326,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AMD",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and description for Armenian Dram (AMD) according to ISO 4217. It provides functions to construct quotient and discrete values in AMD, using standard numeric types. Use this module when handling financial calculations involving Armenian Dram, particularly for creating and validating monetary values in discrete or scaled forms.",
      "description_length": 375,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RON",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Romanian Leu (RON), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using RON-specific scales. Use this module when handling financial calculations involving Romanian Leu, particularly for parsing and constructing monetary values with standard units.",
      "description_length": 385,
      "index": 136,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_QAR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Qatari Rial, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations or representations involving Qatari Rials.",
      "description_length": 313,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GTQ",
      "library": "safemoney",
      "description": "This module defines the Guatemalan Quetzal currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to GTQ. Use cases include handling GTQ-denominated financial calculations with precise scaling and formatting.",
      "description_length": 299,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GHS",
      "library": "safemoney",
      "description": "This module defines the Ghana Cedi (GHS) currency with its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to GHS. Use this module when handling financial calculations involving Ghanaian currency, such as pricing, payments, or accounting in GHS.",
      "description_length": 311,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GEL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Georgian Lari (GEL), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined GEL units. Use this module when handling financial calculations or representations involving the Georgian Lari in applications like payment systems or financial ledgers.",
      "description_length": 390,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBC",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Bond Markets Unit European Unit of Account 9 (E.U.A.-9), including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values using predefined scales tied to this currency. Use cases include financial calculations and data representation specific to bond market instruments denominated in E.U.A.-9.",
      "description_length": 417,
      "index": 141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CVE",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Cabo Verde Escudo, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values using the ISO 4217 standard. Use cases include financial calculations and data representation requiring precise handling of Cabo Verde Escudo denominations.",
      "description_length": 354,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XAG",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and units for Silver (XAG) as specified by ISO 4217. It includes functions to construct quotient and discrete values from raw inputs, using standard string and numeric types. These operations support precise financial calculations involving Silver bullion.",
      "description_length": 308,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VED",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Bolivar Soberano (VED), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using VED-specific scales. Use this module when handling financial calculations or representations involving the Venezuelan Bolivar.",
      "description_length": 339,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RWF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Rwanda Franc (RWF), including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to RWF, ensuring correct scaling and representation. Use cases include financial calculations and data handling where RWF amounts must be accurately modeled with their associated scale.",
      "description_length": 398,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MMK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Myanmar Kyat, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include handling financial calculations and representations for the MMK currency in applications like banking or e-commerce.",
      "description_length": 355,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NGN",
      "library": "safemoney",
      "description": "This module defines the Nigerian Naira currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to Naira. Use this module when handling financial calculations involving Nigerian Naira, particularly when working with scaled units or currency conversions.",
      "description_length": 350,
      "index": 147,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XSU",
      "library": "safemoney",
      "description": "This module defines the Sucre currency with its symbol, description, and optional unit mappings. It provides functions to create quotient and discrete monetary values specific to Sucre, using predefined scales and string representations. Use this module when handling financial calculations involving the Sucre currency, particularly when working with its discrete or scaled units.",
      "description_length": 381,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LSL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Lesotho Loti, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations involving Lesotho currency, particularly for parsing and formatting amounts in a type-safe manner.",
      "description_length": 374,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_COU",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Colombian Unidad de Valor Real (UVR), including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values according to the UVR standard. Use this module when handling Colombian inflation-adjusted currency values in financial calculations or data representation.",
      "description_length": 376,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ZAR",
      "library": "safemoney",
      "description": "This module defines specific monetary values and operations for the South African Rand (ZAR), including currency symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values, ensuring correct handling of financial calculations. Use cases include representing ZAR amounts with precise scaling and performing currency-specific financial computations.",
      "description_length": 400,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_JMD",
      "library": "safemoney",
      "description": "This module defines the Jamaican Dollar (JMD) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to JMD. Use cases include handling JMD-denominated financial calculations with precise scaling and formatting.",
      "description_length": 294,
      "index": 152,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_ETH",
      "library": "safemoney",
      "description": "This module defines operations for handling Ethereum-based currency values, including creating discrete and quotient types from amounts or strings. It provides the currency symbol, description, and unit scales specific to Ethereum. Use this module to construct and validate Ethereum value representations in financial calculations or blockchain transaction handling.",
      "description_length": 366,
      "index": 153,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RUB",
      "library": "safemoney",
      "description": "This module defines the Russian Ruble (RUB) currency, including its symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to RUB. Use this module when handling financial calculations involving Russian Rubles, particularly for constructing and validating RUB-based amounts.",
      "description_length": 338,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PYG",
      "library": "safemoney",
      "description": "This module defines the Paraguayan Guarani (PYG) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to PYG. Use cases include handling PYG-denominated financial calculations and ensuring correct currency representation in transactions.",
      "description_length": 322,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SVC",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the El Salvador Colon (SVC), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to SVC. Use this module when handling financial calculations or representations involving the El Salvador Colon currency.",
      "description_length": 348,
      "index": 156,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_SOL",
      "library": "safemoney",
      "description": "This module defines Solana-specific monetary units and conversion functions. It provides access to the currency symbol, description, and unit scales, along with functions to create quotient and discrete monetary values from raw inputs. It is used to safely construct and manipulate Solana-based financial quantities in a type-safe manner.",
      "description_length": 338,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_JOD",
      "library": "safemoney",
      "description": "This module defines the Jordanian Dinar (JOD) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to JOD. Use this module when handling financial calculations or representations involving Jordanian currency.",
      "description_length": 302,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TZS",
      "library": "safemoney",
      "description": "This module defines the Tanzanian Shilling (TZS) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to TZS. Use this module when handling financial calculations involving Tanzanian Shillings, such as creating monetary amounts or working with currency units.",
      "description_length": 344,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VES",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Bolivar Soberano (VES), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using VES-specific scaling. Use this module when handling financial calculations involving the Venezuelan Bolivar, particularly for parsing and formatting amounts with correct decimal precision.",
      "description_length": 401,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_BTC",
      "library": "safemoney",
      "description": "This module defines Bitcoin-specific monetary units and conversion functions. It provides the currency symbol, description, and unit mappings for Bitcoin, along with functions to construct quotient and discrete values from raw inputs. Concrete use cases include validating Bitcoin amounts and converting them into typed monetary values for financial calculations.",
      "description_length": 363,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BGN",
      "library": "safemoney",
      "description": "This module defines the Bulgarian Lev (BGN) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to BGN. Use cases include handling BGN-denominated financial calculations with precise scaling and validation.",
      "description_length": 292,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_ADA",
      "library": "safemoney",
      "description": "This module defines the currency schema for Cardano (ADA), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values specific to ADA, using standard scaling and unit definitions. Use this module to create and manipulate ADA amounts in financial calculations or blockchain-related applications.",
      "description_length": 358,
      "index": 163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NPR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Nepalese Rupees, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Specifically, `make_qv` creates a quotient value from a numeric quantity, while `make_dv` constructs a discrete value from a string and integer, supporting precise monetary calculations.",
      "description_length": 412,
      "index": 164,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VUV",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Vanuatu Vatu, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values using the Vatu scale. Use this module when handling financial calculations involving Vanuatu currency, particularly for parsing or formatting amounts with standard units.",
      "description_length": 372,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GMD",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Gambian Dalasi (GMD). It provides functions to construct valid monetary values in GMD, including discrete and quotient types, ensuring correct unit handling. Use this module when working with financial calculations involving Gambian Dalasi, such as representing amounts like 150 GMD or computing ratios between GMD values.",
      "description_length": 395,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_IQD",
      "library": "safemoney",
      "description": "This module defines the Iraqi Dinar (IQD) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to IQD. Use this module when handling financial calculations or data involving the Iraqi Dinar, such as representing amounts in IQD or performing currency conversions.",
      "description_length": 356,
      "index": 167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KYD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Cayman Islands Dollar, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Cayman Islands Dollar.",
      "description_length": 355,
      "index": 168,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LKR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Sri Lankan Rupee, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Rupee's scale. Use this module when handling financial calculations involving Sri Lankan Rupees, particularly for parsing and constructing currency values with correct scaling.",
      "description_length": 387,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XPT",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and optional units for Platinum (XPT). It provides functions to construct quotient and discrete monetary values specific to XPT, using predefined scaling and validation rules. Use cases include creating and validating XPT amounts for financial transactions or data processing.",
      "description_length": 328,
      "index": 170,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MYR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Malaysian Ringgit, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving Malaysian Ringgit with precise scaling and currency formatting.",
      "description_length": 353,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_COP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Colombian Peso, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving Colombian Pesos, particularly for parsing and formatting amounts with correct scale and unit definitions.",
      "description_length": 418,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UYW",
      "library": "safemoney",
      "description": "This module defines the Unidad Previsional (UYW) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to UYW. Use this module when handling financial calculations involving UYW, such as creating scaled values or parsing amounts from strings.",
      "description_length": 334,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BTN",
      "library": "safemoney",
      "description": "This module defines the Bhutanese Ngultrum currency, providing its symbol, description, and optional units. It includes functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Bhutanese Ngultrum, such as creating or validating amounts in transactions or accounting systems.",
      "description_length": 368,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UZS",
      "library": "safemoney",
      "description": "This module defines the currency configuration for the Uzbekistani Sum, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Uzbekistani Sum, ensuring correct formatting and unit handling.",
      "description_length": 364,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DJF",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Djibouti Franc, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations or representations involving Djibouti Franc denominations.",
      "description_length": 336,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SLE",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Sierra Leonean Leone (SLL), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to SLL, using standard and scaled units. Use cases include financial calculations and currency conversions involving Sierra Leonean Leone.",
      "description_length": 368,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SDG",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Sudanese Pound, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Sudanese Pound, such as creating scaled values or working with currency units.",
      "description_length": 363,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_FJD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Fiji Dollar, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to the Fiji Dollar, using standard string and numeric types. Concrete use cases include handling financial calculations and representations where Fiji Dollar values are required.",
      "description_length": 384,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GYD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Guyana Dollar (GYD), including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to GYD, using predefined scales and string representations. Use cases include financial calculations and currency conversions involving the Guyana Dollar.",
      "description_length": 381,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_DOGE",
      "library": "safemoney",
      "description": "This module defines Dogecoin-specific monetary units and conversion functions. It provides the currency symbol, description, and unit mappings, along with functions to construct quotient and discrete values from raw inputs. It is used to represent and manipulate Dogecoin amounts in a type-safe manner.",
      "description_length": 302,
      "index": 181,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MXV",
      "library": "safemoney",
      "description": "This module defines the Mexican Unidad de Inversi\u00f3n (MXV) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to MXV. Use this module when handling MXV-denominated financial calculations requiring precise scaling and unit conversion.",
      "description_length": 327,
      "index": 182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LBP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Lebanese Pound, including its symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Lebanese Pounds, particularly for constructing and validating monetary quantities and discrete values with optional unit scaling.",
      "description_length": 416,
      "index": 183,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MDL",
      "library": "safemoney",
      "description": "This module defines the Moldovan Leu (MDL) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to MDL. Use cases include handling MDL-denominated financial calculations and ensuring correct currency unit conversions.",
      "description_length": 302,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XAU",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and units for gold (XAU) as specified by ISO 4217. It provides functions to construct quotient and discrete values denominated in XAU from numeric inputs. Use this module to handle financial calculations involving gold as a currency unit.",
      "description_length": 290,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AZN",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Azerbaijan Manat, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the Manat. Use cases include financial calculations and data representation requiring precise handling of Azerbaijani currency units.",
      "description_length": 351,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UAH",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Ukrainian Hryvnia (UAH), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to UAH, using predefined scaling rules. Use this module when handling financial calculations or representations involving Ukrainian currency, such as pricing, payments, or currency conversion.",
      "description_length": 410,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CLP",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Chilean Peso (CLP). It includes functions to construct quotient and discrete monetary values specific to CLP, using standard numeric types. Use this module when handling financial calculations involving Chilean Pesos, particularly for creating and validating CLP-based amounts with correct decimal precision.",
      "description_length": 381,
      "index": 188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MXN",
      "library": "safemoney",
      "description": "This module defines the Mexican Peso (MXN) currency, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to MXN. Use this module when handling financial calculations involving Mexican Pesos, such as creating MXN amounts from numeric inputs or retrieving currency metadata for display or processing.",
      "description_length": 394,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TJS",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Tajikstani Somoni, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations or representations specific to TJS in contexts like pricing, currency conversion, or transaction recording.",
      "description_length": 387,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined",
      "library": "safemoney",
      "description": "This module provides operations for constructing quotient and discrete monetary values with precise scaling, unit conversion, and formatting, tailored to ISO 4217 currency standards. It works with currency-specific data structures that encapsulate metadata like symbols, denominations, and scaling rules, enabling type-safe financial calculations, parsing, and validation for both traditional currencies (e.g., USD, EUR) and cryptocurrencies (e.g., BTC, ETH). These tools are designed for applications requiring strict adherence to currency precision and formatting standards, such as financial systems, payment processing, and cross-currency conversions.",
      "description_length": 655,
      "index": 191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Discrete",
      "library": "safemoney",
      "description": "This module represents monetary values as discrete integers scaled by a rational factor, with support for arithmetic operations like addition, subtraction, and multiplication. It works with integer values and scale settings that define currency-specific sub-units, enabling precise financial calculations without floating-point errors. Use this module to handle exact monetary amounts in different currencies, perform arithmetic, and serialize results to JSON or S-expressions.",
      "description_length": 477,
      "index": 192,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Exchange",
      "library": "safemoney",
      "description": "This module represents and manipulates exchange rates between currencies, with operations to construct, display, and convert exchange rate data. It defines an exchange rate as a record containing source and destination currencies and a rational value, supporting composition of rates and reciprocal calculation. Concrete use cases include converting between currencies using composed exchange rates, serializing exchange data to JSON or S-expressions, and maintaining accurate rate representations through reciprocal operations.",
      "description_length": 528,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Quotient",
      "library": "safemoney",
      "description": "This module represents monetary values with a currency symbol and a rational number, supporting arithmetic operations like addition, subtraction, multiplication, and division with rational numbers. It provides functions to construct, display, and convert these values, including negation and absolute value operations. Concrete use cases include financial calculations where precise rational arithmetic is required, such as currency conversion or exact monetary computations.",
      "description_length": 475,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Ops",
      "library": "safemoney",
      "description": "This module provides formatting, parsing, and conversion operations for monetary values, supporting customizable separators and rounding strategies. It works with currency types like `Exchange.t` and `Scale.t`, as well as rational and discrete numeric representations, enabling precise string serialization and deserialization. Typical use cases include handling locale-specific currency formatting (e.g., commas vs. periods), converting string inputs to typed monetary values with configurable precision, and managing cross-currency exchanges while avoiding lossy float intermediaries.",
      "description_length": 586,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney",
      "library": "safemoney",
      "description": "This module provides precise financial computations using discrete integers and rational numbers, supporting currency-specific arithmetic, exchange rate manipulation, and exact conversions. It handles monetary values, exchange rates, and currency metadata with operations for serialization, formatting, and parsing, ensuring accuracy in financial contexts. Use it for financial systems, payment processing, and cross-currency calculations requiring strict precision and ISO currency compliance.",
      "description_length": 494,
      "index": 196,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 197,
    "meaningful_modules": 197,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 655,
    "min_description_length": 277,
    "avg_description_length": 361.5837563451777,
    "embedding_file_size_mb": 2.854909896850586
  }
}