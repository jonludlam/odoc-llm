{
  "package": "safemoney",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 198,
  "creation_timestamp": "2025-07-15T23:33:55.548672",
  "modules": [
    {
      "module_path": "Safemoney.Predefined.ISO4217_FKP",
      "library": "safemoney",
      "description": "This module defines the Falkland Islands Pound currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Falkland Islands Pound, such as parsing or formatting amounts with correct scale and unit representation.",
      "description_length": 384,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KGS",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Kyrgyzstani Som, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations or representations involving the KGS currency code.",
      "description_length": 330,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MOP",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Macanese Pataca, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the currency's specific scale. Direct use cases include handling financial calculations and representations involving Macanese Pataca in a type-safe manner.",
      "description_length": 362,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BOV",
      "library": "safemoney",
      "description": "This module defines the Bolivian Mvdol currency with its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to the Mvdol currency. Use this module when handling financial calculations involving Bolivian Mvdol, such as creating or validating amounts in that currency.",
      "description_length": 349,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SGD",
      "library": "safemoney",
      "description": "This module defines the Singapore Dollar (SGD) with a fixed symbol, description, and currency units. It provides functions to construct quotient and discrete monetary values specific to SGD. Use cases include financial calculations and currency representations where SGD is the standard unit.",
      "description_length": 292,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SEK",
      "library": "safemoney",
      "description": "This module defines the Swedish Krona (SEK) currency, including its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to SEK. Use cases include handling financial calculations and representations in Swedish Krona within a type-safe money library.",
      "description_length": 307,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XOF",
      "library": "safemoney",
      "description": "This module defines the currency specification for CFA Franc BCEAO, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving CFA Franc BCEAO to ensure correct scaling and representation.",
      "description_length": 338,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SDG",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Sudanese Pound, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Sudanese Pound, such as creating scaled values or validating unit denominations.",
      "description_length": 365,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_ADA",
      "library": "safemoney",
      "description": "This module defines the currency parameters and operations specific to Cardano (ADA), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values from raw inputs, ensuring correct scaling for ADA's monetary model. Use this module when handling ADA transactions, balances, or conversions in financial applications requiring precise value representation.",
      "description_length": 415,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CNY",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for Chinese Yuan Renminbi (CNY). It includes functions to construct quotient and discrete monetary values using standard units. Use this module to create and validate CNY amounts in financial calculations or transactions.",
      "description_length": 286,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XSU",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and scaling units for Sucre (XSU), a currency used in international financial transactions. It provides functions to construct quotient and discrete monetary values specific to XSU, using standard numeric types. Use this module when handling XSU amounts in financial calculations requiring precise scaling and unit conversion.",
      "description_length": 378,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TND",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Tunisian Dinar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the TND currency. Use cases include financial calculations and currency conversions involving Tunisian Dinars.",
      "description_length": 326,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BIF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Burundi Franc, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to the BIF currency. Use cases include handling financial calculations and representations for the Burundi Franc in applications requiring precise monetary arithmetic.",
      "description_length": 366,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MDL",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Moldovan Leu (MDL), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to MDL, using predefined scales and string representations. Use cases include financial calculations and currency conversions involving MDL, ensuring correct handling of its subunits and formatting.",
      "description_length": 415,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DKK",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to Danish Krone (DKK), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values tied to DKK, using predefined scales and validation. Use cases include financial calculations and representations where DKK is the target currency, ensuring correct unit handling and value creation.",
      "description_length": 419,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XAG",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and units for Silver (XAG), along with functions to construct quantity and discrete values. It works with strings, numeric types like Z.t, and structures like Hashtbl for unit definitions. Concrete use cases include creating and validating Silver currency values for financial calculations.",
      "description_length": 342,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ANG",
      "library": "safemoney",
      "description": "This module defines the currency symbol, description, and scaling units for the Netherlands Antillean Guilder (ANG). It includes functions to construct quotient and discrete monetary values specific to ANG, using predefined formatting and scale. Use this module when handling financial calculations or data involving ANG in contexts like banking, invoicing, or currency conversion.",
      "description_length": 381,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BSD",
      "library": "safemoney",
      "description": "This module defines the currency metadata for the Bahamian Dollar, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving Bahamian Dollars.",
      "description_length": 334,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XAF",
      "library": "safemoney",
      "description": "This module defines the CFA Franc BEAC (XAF) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to XAF. Use this module when working with financial calculations involving the XAF currency, particularly in contexts requiring precise handling of currency units and conversions.",
      "description_length": 362,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_SHIB",
      "library": "safemoney",
      "description": "This module defines specific monetary units and conversion functions for the Shiba Inu cryptocurrency. It provides the currency symbol, description, and a hash table mapping unit names to their scales, along with functions to create quotient and discrete values from numeric inputs. It is used to represent and manipulate Shiba Inu amounts in a type-safe manner.",
      "description_length": 362,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VED",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bolivar Soberano (VED), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to VED, using predefined scales and string representations. Use this module when handling financial calculations or data involving the Venezuelan currency in contexts like payment systems or economic modeling.",
      "description_length": 430,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MVR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Maldivian Rufiyaa, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Specifically, it supports creating discrete values from string inputs and handles conversions aligned with ISO 4217 standards for the MVR currency.",
      "description_length": 375,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CUP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Cuban Peso, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the Cuban Peso, using standard scale units. Use this module when handling financial calculations or representations involving Cuban Pesos, particularly for converting and validating amounts in different denominations.",
      "description_length": 429,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HTG",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Haitian Gourde, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving Haitian Gourde, particularly for parsing and formatting amounts according to its standard units.",
      "description_length": 384,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TJS",
      "library": "safemoney",
      "description": "This module defines the Tajikstani Somoni (TJS) currency, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to TJS, using standard numeric types. Use this module when handling financial calculations or representations involving Tajikstani currency.",
      "description_length": 346,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LYD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Libyan Dinar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to LYD, using standard scale units like \"LD\" or \"dinar\". Use this module when handling financial calculations or data involving Libyan Dinars, ensuring correct unit handling and value creation.",
      "description_length": 404,
      "index": 25,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_COP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Colombian Peso (COP), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to COP, ensuring correct scaling and representation. Use this module when handling financial calculations or data involving Colombian Pesos, particularly in contexts requiring precise value handling and currency-aware operations.",
      "description_length": 448,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_LTC",
      "library": "safemoney",
      "description": "This module defines currency-specific constants and operations for Litecoin, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using Litecoin's scale. Use this module to create and manipulate precise Litecoin amounts in financial calculations.",
      "description_length": 325,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ARS",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Argentine Peso, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Argentine Peso, particularly when working with scaled amounts or currency units.",
      "description_length": 387,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_IQD",
      "library": "safemoney",
      "description": "This module defines the Iraqi Dinar (IQD) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to IQD. Use this module when handling financial calculations or representations involving Iraqi Dinars, such as processing transactions or formatting currency amounts.",
      "description_length": 360,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_USDT",
      "library": "safemoney",
      "description": "This module defines Tether USDT as a currency with a symbol and description. It provides functions to create quantity values from a rational number and discrete values from a string and integer, using USDT's specific scale. It works with discrete and quotient types to represent monetary values in USDT, such as token amounts in blockchain transactions.",
      "description_length": 353,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TZS",
      "library": "safemoney",
      "description": "This module defines the Tanzanian Shilling (TZS) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to TZS. Use this module when handling financial calculations or representations involving Tanzanian Shillings.",
      "description_length": 306,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_INR",
      "library": "safemoney",
      "description": "This module defines the Indian Rupee (INR) currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to INR, using predefined scales and string representations. Concrete use cases include handling INR-denominated financial calculations and currency conversions.",
      "description_length": 357,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MYR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Malaysian Ringgit (MYR), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to MYR, ensuring correct scaling and representation. Use this module when handling financial calculations or data involving MYR to maintain currency accuracy and consistency.",
      "description_length": 392,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MMK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Myanmar Kyat, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to the Kyat, using predefined scales and string representations. Use cases include financial calculations and data modeling where precise handling of Kyat denominations is required.",
      "description_length": 388,
      "index": 34,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_BTC",
      "library": "safemoney",
      "description": "This module defines Bitcoin-specific monetary units and conversion functions. It provides access to currency metadata like symbol and description, along with discrete unit scales for Bitcoin denominations. It supports creating quotient and discrete monetary values using Bitcoin's unit system.",
      "description_length": 293,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XPF",
      "library": "safemoney",
      "description": "This module defines the CFP Franc currency, including its symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to the CFP Franc. Use this module when handling financial calculations involving the XPF currency code, such as in international payments or currency conversion systems.",
      "description_length": 347,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ALL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Albanian Lek, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scaling rules. Use this module when handling financial calculations involving the Albanian Lek, particularly for parsing and formatting amounts with correct decimal precision.",
      "description_length": 389,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GTQ",
      "library": "safemoney",
      "description": "This module defines the Guatemalan Quetzal currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to GTQ. Use cases include handling GTQ-denominated financial calculations and currency conversions.",
      "description_length": 280,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TTD",
      "library": "safemoney",
      "description": "This module defines the Trinidad and Tobago Dollar (TTD) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to TTD. Use cases include financial calculations and currency conversions involving TTD in applications requiring precise monetary arithmetic.",
      "description_length": 350,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KRW",
      "library": "safemoney",
      "description": "This module defines the South Korean Won (KRW) with a symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to KRW. Use cases include handling KRW-denominated financial calculations where precise scaling and currency identity are required.",
      "description_length": 305,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SLL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Sierra Leonean Leone, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving the SLL currency, ensuring correct formatting and scaling.",
      "description_length": 338,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_OMR",
      "library": "safemoney",
      "description": "This module defines the Omani Rial (OMR) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to OMR. Use this module when handling financial calculations or representations involving Omani Rials, such as processing transactions or formatting currency amounts.",
      "description_length": 358,
      "index": 42,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CZK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Czech Koruna, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to CZK. Use cases include handling CZK-denominated financial calculations with precise scaling and validation.",
      "description_length": 304,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CHE",
      "library": "safemoney",
      "description": "This module defines the WIR Euro currency, including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values specific to the WIR Euro. Use this module when handling financial calculations involving the WIR Euro, particularly for creating and validating monetary quantities and discrete values.",
      "description_length": 352,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XUA",
      "library": "safemoney",
      "description": "This module defines the ADB Unit of Account (XUA) currency, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to XUA. Use this module when working with financial calculations involving the XUA currency in compliance with ISO 4217 standards.",
      "description_length": 340,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PEN",
      "library": "safemoney",
      "description": "This module defines the Peruvian Sol (PEN) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to PEN. Use cases include handling PEN-denominated financial calculations with precise scaling and unit conversions.",
      "description_length": 297,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MUR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Mauritius Rupee, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Mauritius Rupee in contexts requiring precise currency handling.",
      "description_length": 382,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VES",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Bolivar Soberano (VES), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to VES, using standard scales and string representations. Use this module when handling VES amounts in financial calculations requiring precision and currency-specific formatting.",
      "description_length": 405,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DJF",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Djibouti Franc, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations or representations involving Djibouti Francs, particularly for parsing and formatting amounts in different units.",
      "description_length": 391,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_FJD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Fiji Dollar, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to the Fiji Dollar, using standard and scaled denominations. Use cases include financial calculations and currency conversions involving the Fiji Dollar.",
      "description_length": 359,
      "index": 50,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PGK",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the Papua New Guinean Kina, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Kina's scale. Concrete use cases include handling financial calculations and representations involving the Kina's subdivisions, such as converting between quantity values and discrete currency units.",
      "description_length": 438,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CVE",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations for the Cabo Verde Escudo (CVE), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to CVE, ensuring correct scaling and representation. Use cases include financial calculations and currency conversions involving CVE in contexts like banking or international transactions.",
      "description_length": 419,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KYD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Cayman Islands Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving Cayman Islands Dollars.",
      "description_length": 343,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XAU",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for gold (XAU) including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to XAU. Use cases include financial calculations and representations involving gold as a currency unit.",
      "description_length": 307,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UGX",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Ugandan Shilling, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to UGX, handling string-based inputs and numeric quantities. Use this module when working with financial calculations or representations involving the Ugandan Shilling.",
      "description_length": 392,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XDR",
      "library": "safemoney",
      "description": "This module defines the Special Drawing Right (XDR) currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values in XDR, using specific string identifiers and numeric types. Use this module when handling XDR currency values in financial calculations or data representation.",
      "description_length": 345,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_IDR",
      "library": "safemoney",
      "description": "This module defines the Indonesian Rupiah currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to IDR. Use cases include handling IDR-denominated financial calculations and ensuring correct currency formatting and unit representation.",
      "description_length": 332,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XCD",
      "library": "safemoney",
      "description": "This module defines the East Caribbean Dollar with specific currency units and scaling. It provides functions to construct quotient and discrete monetary values using predefined configurations. Use cases include financial calculations and currency conversions specific to East Caribbean Dollar.",
      "description_length": 294,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LKR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Sri Lankan Rupee (LKR), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values tailored to LKR's scaling rules. Use this module when handling financial calculations or representations involving Sri Lankan currency.",
      "description_length": 342,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SBD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the Solomon Islands Dollar (SBD), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the SBD currency code. The module is used to represent and manipulate SBD amounts in financial calculations requiring precise scaling and currency identification.",
      "description_length": 403,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_IRR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Iranian Rial (IRR), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Rial's scale. Concrete use cases include handling financial calculations and formatting for Iranian Rial in applications requiring ISO 4217 currency support.",
      "description_length": 370,
      "index": 61,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BBD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Barbados Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Barbados Dollar.",
      "description_length": 334,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BHD",
      "library": "safemoney",
      "description": "This module defines the Bahraini Dinar (BHD) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete values specific to BHD, using predefined scaling rules. Use this module when handling financial calculations or data involving Bahraini Dinar, ensuring correct unit conversions and value representations.",
      "description_length": 370,
      "index": 63,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SOS",
      "library": "safemoney",
      "description": "This module defines the Somali Shilling (SOS) currency, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to SOS. Use cases include financial calculations and representations involving Somali Shilling amounts.",
      "description_length": 309,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UZS",
      "library": "safemoney",
      "description": "This module defines the currency configuration for the Uzbekistani Sum, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Uzbekistani Sum, ensuring proper scaling and representation.",
      "description_length": 361,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BAM",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bosnia-Herzegovina Convertible Marka (BAM), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations or data involving BAM to ensure correct unit handling and formatting.",
      "description_length": 379,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PYG",
      "library": "safemoney",
      "description": "This module defines the Paraguayan Guarani (PYG) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to PYG. Use this module to handle financial calculations involving Paraguayan Guarani with precise scaling and unit representation.",
      "description_length": 318,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_JPY",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Japanese Yen, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to JPY, handling string-based unit identifiers and numeric inputs. Use cases include financial calculations and representations involving JPY, particularly where precise handling of currency units and formatting is required.",
      "description_length": 440,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_JOD",
      "library": "safemoney",
      "description": "This module defines the Jordanian Dinar (JOD) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to JOD. Use this module when handling financial calculations or representations involving Jordanian currency.",
      "description_length": 302,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LAK",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Lao Kip (LAK), including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values using the LAK currency. Direct use cases include handling financial calculations and representations specific to the Lao Kip in a type-safe manner.",
      "description_length": 354,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ILS",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the New Israeli Sheqel (ILS), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ILS-specific scales. Use this module when handling financial calculations or representations involving ILS, particularly for converting between numeric values and typed currency representations.",
      "description_length": 409,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XPD",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for Palladium (PXD), including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to PXD. Use cases include handling PXD-denominated financial calculations with precise scaling and unit conversion.",
      "description_length": 325,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GYD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Guyana Dollar (GYD), including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to GYD, using predefined scaling and formatting. Use this module when handling financial calculations or representations involving Guyanese currency.",
      "description_length": 376,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_JMD",
      "library": "safemoney",
      "description": "This module defines the Jamaican Dollar (JMD) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to JMD. Use cases include handling financial calculations and representations involving Jamaican Dollars.",
      "description_length": 289,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RUB",
      "library": "safemoney",
      "description": "This module defines the Russian Ruble (RUB) currency with its symbol, description, and optional units. It provides functions to create quotient and discrete monetary values specific to RUB, using predefined scales and string representations. Use this module when handling financial calculations involving Russian Rubles, particularly when constructing or validating RUB-based amounts from numeric or string inputs.",
      "description_length": 414,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBA",
      "library": "safemoney",
      "description": "This module defines the Bond Markets Unit European Composite Unit (EURCO) with operations to create quotient and discrete monetary values. It provides a symbol, description, and optional units mapping for handling EURCO in financial calculations. Use cases include representing and manipulating composite currency units in bond market transactions.",
      "description_length": 348,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BRL",
      "library": "safemoney",
      "description": "This module defines specific monetary values and operations for the Brazilian Real (BRL), including its symbol, description, and currency units. It provides functions to construct quotient and discrete monetary values, ensuring correct scaling and representation. Use cases include financial calculations and data handling involving BRL in contexts like currency conversion, payroll systems, and transaction processing.",
      "description_length": 419,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GHS",
      "library": "safemoney",
      "description": "This module defines the Ghana Cedi (GHS) currency, including its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to GHS. Use this module when handling financial calculations involving Ghanaian currency, such as constructing amounts in cedis or working with scaled units like pesewas.",
      "description_length": 346,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBC",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Bond Markets Unit European Unit of Account 9 (E.U.A.-9), including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values using the currency's specific units. Use cases include financial calculations and data representation involving E.U.A.-9 in bond market contexts.",
      "description_length": 388,
      "index": 79,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NAD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Namibia Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the currency's specific units. Use this module when handling financial calculations involving Namibia Dollars, particularly for parsing and validating amounts in predefined denominations.",
      "description_length": 397,
      "index": 80,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_ETH",
      "library": "safemoney",
      "description": "This module defines Ethereum-specific currency metadata, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values from raw inputs, using Ethereum's native scale. Use this module to handle Ethereum-based financial calculations with precise unit conversions and value creation.",
      "description_length": 341,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SYP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Syrian Pound (SYP), including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to SYP, ensuring correct scaling and representation. Use cases include financial calculations and data modeling where SYP currency handling is required.",
      "description_length": 378,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LRD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the Liberian Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations or representations involving Liberian Dollars.",
      "description_length": 346,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AFN",
      "library": "safemoney",
      "description": "This module defines the Afghani currency with its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to the Afghani. Use cases include handling financial calculations and representations in applications dealing with Afghan currency.",
      "description_length": 292,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBD",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Bond Markets Unit European Unit of Account 17 (E.U.A.-17), including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation in systems handling European bond market units.",
      "description_length": 386,
      "index": 85,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ZWL",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Zimbabwe Dollar, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values using the currency's specific scaling rules. The module is used to ensure correct financial calculations involving Zimbabwe Dollar amounts in contexts like currency conversion or financial instrument pricing.",
      "description_length": 408,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MXN",
      "library": "safemoney",
      "description": "This module defines the Mexican Peso (MXN) currency, including its symbol, description, and standard units. It provides functions to construct quotient and discrete monetary values specific to MXN. Use this module when handling financial calculations involving Mexican Pesos, such as creating MXN amounts from numeric inputs or retrieving currency metadata for display or validation.",
      "description_length": 383,
      "index": 87,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UYU",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Uruguayan Peso (UYU), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving UYU, particularly when working with exact decimal representations and currency units.",
      "description_length": 378,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BND",
      "library": "safemoney",
      "description": "This module defines the Brunei Dollar (BND) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to BND. Use this module when handling financial calculations or representations involving Brunei Dollars.",
      "description_length": 296,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PLN",
      "library": "safemoney",
      "description": "This module defines the Polish Zloty (PLN) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete values specific to PLN, using standard string and numeric types. Use this module to create and manipulate monetary values in PLN with precise scaling and formatting.",
      "description_length": 321,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_DOGE",
      "library": "safemoney",
      "description": "This module defines Dogecoin-specific monetary units and conversion functions. It provides the currency symbol, description, and optional unit definitions for Dogecoin, along with functions to create quotient and discrete monetary values from raw inputs. It works directly with string identifiers, numeric types like `Q.t` and `Z.t`, and structures like `Safemoney.Quotient.t` and `Safemoney.Discrete.t` for financial calculations.",
      "description_length": 431,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GMD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Gambian Dalasi (GMD), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to GMD. Use this module when handling financial calculations or representations involving Gambian currency in contexts like banking, payment systems, or economic modeling.",
      "description_length": 390,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DZD",
      "library": "safemoney",
      "description": "This module defines the Algerian Dinar currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to DZD. Use this module when handling financial calculations involving Algerian Dinars, such as parsing input into typed monetary values or formatting output for display.",
      "description_length": 356,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_THB",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Thai Baht, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to THB. Use cases include handling financial calculations and representations involving Thai Baht, such as formatting amounts or validating denominations.",
      "description_length": 367,
      "index": 94,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HNL",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Honduran Lempira, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Honduran Lempira, particularly for parsing and constructing currency values with correct scaling.",
      "description_length": 397,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SVC",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the El Salvador Colon, including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values using predefined configurations. Use this module when handling financial calculations involving the El Salvador Colon, ensuring correct formatting and unit handling.",
      "description_length": 360,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PAB",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Panamanian Balboa, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Panamanian Balboa.",
      "description_length": 338,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CLF",
      "library": "safemoney",
      "description": "This module defines the Chilean Unidad de Fomento (CLF) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to CLF, using predefined scaling factors. Use this module when handling financial calculations denominated in CLF, particularly for applications involving Chilean financial instruments or regulatory reporting.",
      "description_length": 411,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_USD",
      "library": "safemoney",
      "description": "This module defines the US Dollar currency according to ISO 4217, providing its symbol, description, and unit denominations. It includes functions to construct quotient and discrete monetary values specific to USD. Use this module when working with financial calculations requiring precise USD handling, such as currency conversion or accounting operations.",
      "description_length": 357,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_BNB",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to Binance Coin. It provides access to its symbol, description, and unit definitions, along with functions to construct quotient and discrete values from raw inputs. It is used to represent and manipulate BNB amounts in financial calculations and transfers.",
      "description_length": 323,
      "index": 100,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ERN",
      "library": "safemoney",
      "description": "This module defines the Eritrean Nakfa currency, providing its symbol, description, and units. It includes functions to construct quotient and discrete monetary values specific to this currency. Use it to handle financial calculations involving Eritrean Nakfa with precise scaling and representation.",
      "description_length": 300,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KZT",
      "library": "safemoney",
      "description": "This module defines currency-specific values and operations for Kazakhstani Tenge, including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values using Tenge units. Concrete use cases include handling financial calculations and currency conversions specific to Tenge in a type-safe manner.",
      "description_length": 351,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BGN",
      "library": "safemoney",
      "description": "This module defines the Bulgarian Lev (BGN) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to BGN. Use cases include financial calculations and currency conversions involving Bulgarian Lev.",
      "description_length": 280,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UYW",
      "library": "safemoney",
      "description": "This module defines the Unidad Previsional (UYW) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to UYW. Use this module when handling UYW-denominated financial calculations requiring precise scaling and unit conversion.",
      "description_length": 318,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_QAR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Qatari Rial, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the ISO 4217 standard for QAR. Use this module when handling financial calculations or representations involving Qatari Rials.",
      "description_length": 328,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MWK",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Malawi Kwacha, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the MWK currency. Use cases include financial calculations and representations involving Malawi Kwacha, such as handling transactions or formatting amounts.",
      "description_length": 371,
      "index": 106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_DOT",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Polkadot (DOT), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete values from raw inputs, using Polkadot's specific scaling rules. Use this module when handling Polkadot-based financial calculations requiring precise unit conversions and value representations.",
      "description_length": 373,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CAD",
      "library": "safemoney",
      "description": "This module defines the Canadian Dollar (CAD) with a currency symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to CAD. Use cases include financial calculations and data representation requiring strict currency typing and arithmetic.",
      "description_length": 306,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BYN",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Belarusian Ruble, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation requiring strict adherence to the Belarusian Ruble's denomination structure.",
      "description_length": 370,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SCR",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Seychelles Rupee. It provides a function to construct quotient values and another to create discrete values using a specific denomination string and integer amount. It is used to represent and manipulate monetary values in Seychelles Rupee with precise scaling and unit definitions.",
      "description_length": 355,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Custom",
      "library": "safemoney",
      "description": "This module defines a custom currency type with required fields like symbol, description, and units. It works with discrete and quotient monetary values, supporting operations to construct them from numeric inputs. Concrete use cases include defining specialized currencies with custom scales for financial calculations or domain-specific monetary representations.",
      "description_length": 364,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_USN",
      "library": "safemoney",
      "description": "This module defines the US Dollar (Next day) currency with its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to this currency. Use it to handle financial calculations involving US Dollar (Next day) with precise scaling and formatting.",
      "description_length": 299,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TOP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Tongan Pa'anga, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Tongan Pa'anga, particularly for representing amounts in its standard units.",
      "description_length": 374,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TRY",
      "library": "safemoney",
      "description": "This module defines the Turkish Lira (TRY) currency with its symbol, description, and optional units table. It provides functions to construct quotient and discrete monetary values specific to TRY, using standard scale and string representations. Concrete use cases include creating and validating TRY amounts for financial calculations or currency conversions.",
      "description_length": 361,
      "index": 114,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SAR",
      "library": "safemoney",
      "description": "This module defines the currency configuration for the Saudi Riyal, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to SAR, using predefined scales and validation rules. Use this module when handling financial calculations or data involving Saudi Riyals, such as pricing, payments, or currency conversion.",
      "description_length": 398,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CHF",
      "library": "safemoney",
      "description": "This module defines the Swiss Franc (CHF) currency with its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to CHF. Use this module when handling financial calculations involving Swiss Francs, such as creating amounts in CHF or working with currency units like cents.",
      "description_length": 333,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NGN",
      "library": "safemoney",
      "description": "This module defines the Nigerian Naira currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to NGN. Use this module when handling financial calculations involving Nigerian Naira, such as creating amounts in kobo or validating currency units.",
      "description_length": 342,
      "index": 117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_EGP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Egyptian Pound (EGP), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to EGP, using standard scale units like piastres and dirams. Use this module when handling financial calculations or data involving Egyptian currency, ensuring accurate scaling and representation.",
      "description_length": 415,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RWF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Rwanda Franc (RWF), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to RWF, using predefined scales. Use cases include financial calculations and currency conversions involving the Rwanda Franc.",
      "description_length": 343,
      "index": 119,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UYI",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Uruguayan Peso in Indexed Units (UYI). It provides the currency symbol, description, and scaling units, along with functions to construct quotient and discrete monetary values. Use cases include financial calculations and data representation requiring precise handling of UYI amounts.",
      "description_length": 345,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SZL",
      "library": "safemoney",
      "description": "This module defines the Swazi Lilangeni (SZL) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to SZL. Use this module when handling financial calculations or representations involving the Swazi Lilangeni currency.",
      "description_length": 312,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HKD",
      "library": "safemoney",
      "description": "This module defines the Hong Kong Dollar (HKD) with its symbol, description, and currency units. It provides functions to construct quotient and discrete monetary values specific to HKD. Use this module when handling financial calculations or representations involving Hong Kong Dollars.",
      "description_length": 287,
      "index": 122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SRD",
      "library": "safemoney",
      "description": "This module defines the Surinam Dollar currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving Surinam Dollars, particularly for creating and validating monetary amounts in either quotient or discrete form.",
      "description_length": 369,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VUV",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Vanuatu Vatu, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Vatu's scale. Use this module when handling financial calculations involving Vanuatu currency, particularly for parsing and formatting amounts with correct scaling.",
      "description_length": 371,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BOB",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bolivian Boliviano, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Bolivian Boliviano with precise scaling and unit definitions.",
      "description_length": 359,
      "index": 125,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LSL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Lesotho Loti, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations involving Lesotho currency, particularly for parsing and formatting amounts with appropriate scaling.",
      "description_length": 377,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AOA",
      "library": "safemoney",
      "description": "This module defines the Angolan Kwanza currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to AOA, handling valid unit scales where applicable. Use this module when working with financial calculations or representations involving the Angolan Kwanza currency.",
      "description_length": 360,
      "index": 127,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AWG",
      "library": "safemoney",
      "description": "This module defines the Aruban Florin (AWG) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to AWG. Use this module when handling financial calculations or representations involving Aruban Florin.",
      "description_length": 295,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_XRP",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Ripple (XRP), including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values using XRP units. Use this module when handling financial calculations involving XRP, such as creating transaction amounts or validating unit conversions.",
      "description_length": 339,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NIO",
      "library": "safemoney",
      "description": "This module defines currency-specific data for Cordoba Oro, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values using the currency's scale. Use this module when handling financial calculations involving Cordoba Oro to ensure correct unit handling and value creation.",
      "description_length": 333,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BDT",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Bangladeshi Taka, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to BDT, handling string and integer inputs. Use cases include financial calculations and data representation requiring precise handling of Bangladeshi Taka denominations.",
      "description_length": 390,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TMT",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Turkmenistan New Manat, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations or representations specific to the Turkmenistan New Manat.",
      "description_length": 339,
      "index": 132,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_DOP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Dominican Peso, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Dominican Peso, particularly for parsing and formatting amounts with the correct scale and symbol.",
      "description_length": 396,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KMF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Comorian Franc, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the Comorian Franc, particularly when working with scaled or precise numeric representations.",
      "description_length": 374,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_LBP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Lebanese Pound (LBP), including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to LBP, using predefined scaling and formatting. Use cases include financial calculations and data representation requiring strict adherence to LBP currency standards.",
      "description_length": 382,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_XTZ",
      "library": "safemoney",
      "description": "This module defines the Tezos cryptocurrency (XTZ) with its symbol, description, and unit scales. It provides functions to construct quotient and discrete values for XTZ, using Tezos-specific units and scaling factors. Use this module to create and manipulate XTZ amounts in financial calculations requiring precise unit handling.",
      "description_length": 330,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_SOL",
      "library": "safemoney",
      "description": "This module defines Solana-specific monetary units and operations. It provides access to the currency symbol, description, and unit denominations, along with functions to construct quotient and discrete values from raw inputs. It is used to represent and manipulate Solana token amounts in a type-safe manner.",
      "description_length": 309,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RON",
      "library": "safemoney",
      "description": "This module defines the Romanian Leu (RON) currency, providing its symbol, description, and units. It includes functions to construct quotient and discrete monetary values specific to RON. Use this module to create and manipulate RON amounts in financial calculations.",
      "description_length": 268,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KPW",
      "library": "safemoney",
      "description": "This module defines the currency metadata for the North Korean Won, including its symbol, description, and unit scales. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving the North Korean Won, particularly for creating and validating monetary quantities in both string and numeric formats.",
      "description_length": 401,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SLE",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Sierra Leonean Leone (SLL), including its symbol, description, and denomination units. It provides functions to construct quotient and discrete monetary values specific to SLL, using standard and scaled units. Use this module when handling financial calculations or representations involving Sierra Leonean currency.",
      "description_length": 377,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AZN",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Azerbaijan Manat, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the manat's scale. Use this module when handling financial calculations involving Azerbaijani currency, particularly for converting between quantity and discrete value representations.",
      "description_length": 402,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.Crypto_XMR",
      "library": "safemoney",
      "description": "This module defines Monero (XMR) with its symbol, description, and units. It provides functions to create quotient and discrete monetary values specific to XMR. Use it to handle XMR amounts in financial calculations with precise scaling and unit representation.",
      "description_length": 261,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_VND",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Vietnamese Dong (VND), including its symbol and description. It provides functions to construct quotient and discrete monetary values, and includes unit denominations as an optional hash table mapping string names to scale values. It is used to create and validate VND-specific monetary amounts in both discrete and quotient forms.",
      "description_length": 383,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NOK",
      "library": "safemoney",
      "description": "This module defines the Norwegian Krone (NOK) currency, providing its symbol, description, and unit denominations. It includes functions to construct quotient and discrete monetary values specific to NOK. Use this module to create and manipulate NOK amounts in financial calculations and representations.",
      "description_length": 304,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MNT",
      "library": "safemoney",
      "description": "This module defines the Mongolian Tugrik (MNT) currency, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to MNT. Use this module when working with financial calculations involving Mongolian currency, such as handling amounts in Tugriks and MNT subunits.",
      "description_length": 355,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MKD",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Macedonian Denar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving MKD, particularly for parsing and constructing valid currency units.",
      "description_length": 357,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_TWD",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling properties for New Taiwan Dollar (TWD). It provides functions to construct valid monetary values in TWD using either a rational quantity or a string amount with an explicit exponent. The module is used to ensure correct parsing and representation of TWD amounts in financial calculations and data exchange.",
      "description_length": 365,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ZMW",
      "library": "safemoney",
      "description": "This module defines the Zambian Kwacha currency with its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to ZMW. Use this module to handle Zambian currency in financial calculations requiring precise scaling and representation.",
      "description_length": 315,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_WST",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Samoan Tala (WST), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the WST currency code. Use this module when handling financial calculations or representations involving Samoan Tala with predefined formatting and scaling rules.",
      "description_length": 370,
      "index": 149,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_COU",
      "library": "safemoney",
      "description": "This module defines the currency representation for the Colombian Unidad de Valor Real (UVR), including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to the UVR currency. Use this module when handling financial calculations denominated in UVR, such as inflation-adjusted debt instruments in Colombia.",
      "description_length": 380,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SSP",
      "library": "safemoney",
      "description": "This module defines the South Sudanese Pound currency, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations involving South Sudanese Pounds, such as creating amounts in SSP or working with predefined denominations.",
      "description_length": 373,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_EUR",
      "library": "safemoney",
      "description": "This module defines the Euro (EUR) currency with standard properties and operations. It provides the currency symbol, description, and unit denominations as specified by ISO 4217. It supports creating quotient and discrete monetary values in euros, using standard scaling for euros (typically 2 decimal places).",
      "description_length": 311,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_STN",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for the Sao Tome and Principe Dobra, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or data involving the STN currency, particularly for parsing, formatting, or arithmetic operations tied to its defined units.",
      "description_length": 427,
      "index": 153,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_YER",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Yemeni Rial, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Rial's scale. Direct use cases include handling financial calculations and representations involving Yemeni Rials, such as formatting amounts or performing currency conversions.",
      "description_length": 383,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Ops.Separator",
      "library": "safemoney",
      "description": "This module defines a separator configuration type consisting of a pair of strings, where the second may be absent. It provides functions to construct a separator configuration from character pairs and access its components. It is used to specify and retrieve delimiters for formatting and parsing monetary values, such as thousand separators and decimal points.",
      "description_length": 362,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BWP",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Botswanan Pula, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving the BWP currency, particularly for representing amounts in different denominations or converting between value types.",
      "description_length": 404,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AUD",
      "library": "safemoney",
      "description": "This module defines the Australian Dollar (AUD) with a currency symbol, description, and optional units mapping. It provides functions to construct quotient and discrete monetary values specific to AUD. Use cases include financial calculations and data representation requiring strict currency typing and scale handling for Australian Dollars.",
      "description_length": 343,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GNF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Guinean Franc, including its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation requiring precise handling of Guinean Franc amounts.",
      "description_length": 343,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NPR",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Nepalese Rupee, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined scales. Use this module when handling financial calculations involving Nepalese Rupees, particularly for parsing and formatting amounts in a type-safe manner.",
      "description_length": 374,
      "index": 159,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ETB",
      "library": "safemoney",
      "description": "This module defines the currency specifications for Ethiopian Birr, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to the Birr, handling valid unit conversions. Use cases include financial calculations and currency representations requiring strict adherence to ISO 4217 standards for Ethiopian Birr.",
      "description_length": 389,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CUC",
      "library": "safemoney",
      "description": "This module defines the Cuban Peso Convertible (CUC) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to CUC. Use this module when handling financial calculations involving CUC, such as creating and validating CUC amounts in discrete or scaled representations.",
      "description_length": 349,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GBP",
      "library": "safemoney",
      "description": "This module defines currency-specific constants and operations for Pound Sterling (GBP), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined GBP units. Use this module to create and validate GBP amounts in financial calculations or transactions.",
      "description_length": 342,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PKR",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Pakistan Rupee, including its symbol, description, and optional unit denominations. It provides functions to construct quotient and discrete monetary values specific to PKR. Use cases include financial calculations and currency conversions involving the Pakistan Rupee.",
      "description_length": 325,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MAD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Moroccan Dirham, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to the Dirham. Use this module when handling financial calculations involving Moroccan Dirham, particularly for creating and validating monetary amounts in different units.",
      "description_length": 386,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_PHP",
      "library": "safemoney",
      "description": "This module defines the Philippine Peso currency with its symbol, description, and optional units. It provides functions to construct quotient and discrete monetary values specific to PHP. Use this module when handling financial calculations involving Philippine Pesos, ensuring correct currency representation and arithmetic.",
      "description_length": 326,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_HUF",
      "library": "safemoney",
      "description": "This module defines the Hungarian Forint (HUF) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to HUF. Use this module when handling financial calculations involving Hungarian Forint, such as representing amounts in HUF or performing currency-specific operations.",
      "description_length": 353,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XXX",
      "library": "safemoney",
      "description": "This module defines currency metadata and operations for handling monetary values with precision. It provides a currency symbol, description, and scaling units for converting quantities into quotient or discrete monetary values. Use it to create and validate discrete monetary amounts or scale quantities in financial calculations.",
      "description_length": 331,
      "index": 167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CRC",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Costa Rican Col\u00f3n, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards for CRC. Use this module when handling financial calculations or representations specific to Costa Rican currency.",
      "description_length": 341,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ZAR",
      "library": "safemoney",
      "description": "This module defines the South African Rand (ZAR) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to ZAR. Use cases include financial calculations and currency conversions involving South African Rand.",
      "description_length": 290,
      "index": 169,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KES",
      "library": "safemoney",
      "description": "This module defines the Kenyan Shilling (KES) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to KES. Use this module when handling financial calculations involving Kenyan Shillings, such as creating amounts in KES or working with currency units like cents.",
      "description_length": 347,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CDF",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Congolese Franc, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use cases include financial calculations and data representation requiring precise handling of Congolese Franc amounts.",
      "description_length": 338,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KWD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Kuwaiti Dinar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to KWD. Use cases include financial calculations and currency conversions involving Kuwaiti Dinars.",
      "description_length": 311,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BTN",
      "library": "safemoney",
      "description": "This module defines the Bhutanese Ngultrum (BTN) currency, providing its symbol, description, and optional units. It includes functions to construct quotient and discrete monetary values specific to BTN. Use cases include handling BTN-denominated financial calculations and currency conversions.",
      "description_length": 295,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BZD",
      "library": "safemoney",
      "description": "This module defines the Belize Dollar (BZD) currency, including its symbol, description, and monetary units. It provides functions to construct quotient and discrete monetary values specific to BZD. Use this module when handling financial calculations or data involving the Belize Dollar.",
      "description_length": 288,
      "index": 174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MGA",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Malagasy Ariary, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the Ariary's scale. Use this module when handling financial calculations involving Malagasy Ariary, particularly for parsing and formatting amounts according to its standard units.",
      "description_length": 386,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Discrete.Scale",
      "library": "safemoney",
      "description": "This module represents monetary scales with a currency symbol, sub-unit name, and a rational value. It provides functions to construct scale values and convert them to JSON or S-expressions. Use this module to serialize monetary amounts with precise scaling information for storage or transmission.",
      "description_length": 298,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_ISK",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for Icelandic Kr\u00f3na (ISK) as specified by ISO 4217. It provides functions to construct quotient and discrete monetary values using ISK's specific units, such as the main unit and subunits like aurar. Use this module when handling financial calculations involving ISK to ensure correct scaling and representation.",
      "description_length": 377,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_KHR",
      "library": "safemoney",
      "description": "This module defines the Cambodian Riel (KHR) currency, including its symbol, description, and optional unit definitions. It provides functions to construct quotient and discrete monetary values specific to KHR, handling string-based unit identifiers and scaling. Use cases include financial calculations and currency conversions involving Cambodian Riel.",
      "description_length": 354,
      "index": 178,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XPT",
      "library": "safemoney",
      "description": "This module defines the currency code, description, and optional units for Platinum (XPT) as specified by ISO 4217. It includes functions to construct quotient and discrete values from quantities or string representations. Concrete use cases include handling financial calculations involving Platinum in a type-safe manner, such as creating monetary values or parsing amounts from external data sources.",
      "description_length": 403,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_SHP",
      "library": "safemoney",
      "description": "This module defines the Saint Helena Pound (SHP) currency, including its symbol, description, and units. It provides functions to construct quotient and discrete monetary values specific to SHP. Use cases include handling SHP-denominated financial calculations with precise scaling and unit conversions.",
      "description_length": 303,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_MXV",
      "library": "safemoney",
      "description": "This module defines the Mexican Unidad de Inversion (MXV) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete values specific to MXV, using predefined scaling logic. Use this module when handling MXV-denominated financial calculations requiring precise unit conversions and arithmetic.",
      "description_length": 354,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_BMD",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Bermudian Dollar, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving Bermudian Dollars.",
      "description_length": 333,
      "index": 182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_RSD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations for the Serbian Dinar (RSD), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to RSD, using standard numeric types. Concrete use cases include handling financial calculations and representations involving RSD, such as formatting amounts or performing currency-specific arithmetic.",
      "description_length": 429,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_CLP",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for the Chilean Peso (CLP). It includes functions to construct quotient and discrete monetary values specific to CLP, using standard numeric types. Use this module when handling financial calculations involving CLP to ensure correct unit scaling and value construction.",
      "description_length": 334,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GEL",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the Georgian Lari (GEL), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using predefined GEL units. Use this module when handling financial calculations or representations involving the Georgian Lari.",
      "description_length": 332,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AMD",
      "library": "safemoney",
      "description": "This module defines the currency code, symbol, and scaling rules for Armenian Dram (AMD) according to ISO 4217. It provides functions to construct quotient and discrete monetary values specific to AMD, using standardized units and formatting. Use this module when handling financial calculations or data involving Armenian Dram with strict adherence to ISO currency definitions.",
      "description_length": 378,
      "index": 186,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_GIP",
      "library": "safemoney",
      "description": "This module defines the currency specifications for the Gibraltar Pound, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when handling financial calculations or representations involving the Gibraltar Pound.",
      "description_length": 334,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_XBB",
      "library": "safemoney",
      "description": "This module defines the Bond Markets Unit European Composite Unit (E.M.U.-6) currency, including its symbol, description, and scaling units. It provides functions to construct quotient and discrete monetary values specific to this currency. Use this module when working with financial calculations involving E.M.U.-6-denominated instruments in bond markets.",
      "description_length": 357,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_UAH",
      "library": "safemoney",
      "description": "This module defines the currency configuration for Ukrainian Hryvnia (UAH), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values specific to UAH, using standard scale units like hryvnias and kopiykas. Use this module when handling financial calculations or representations involving Ukrainian currency.",
      "description_length": 381,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_AED",
      "library": "safemoney",
      "description": "This module defines currency-specific data for the UAE Dirham, including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using ISO 4217 standards. Use this module when handling financial calculations involving UAE Dirham with precise scaling and unit representation.",
      "description_length": 340,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Predefined.ISO4217_NZD",
      "library": "safemoney",
      "description": "This module defines the currency metadata and operations specific to the New Zealand Dollar (NZD), including its symbol, description, and unit denominations. It provides functions to construct quotient and discrete monetary values using the NZD currency context. Concrete use cases include creating and validating NZD-based financial amounts in contexts like invoicing, accounting, or payment processing.",
      "description_length": 404,
      "index": 191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Exchange",
      "library": "safemoney",
      "description": "This module represents and manipulates exchange rates between currencies. It provides functions to construct exchange rate records, compose sequential rates, compute reciprocals, and serialize to JSON or S-expressions. Use cases include currency conversion pipelines and financial data serialization.",
      "description_length": 300,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Predefined",
      "library": "safemoney",
      "description": "This library standardizes currency identifiers, formatting, and conversions for ISO 4217 fiat and crypto currencies using fixed-point arithmetic. It centers around discrete and quotient monetary types, enabling type-safe arithmetic, regional formatting, and cross-currency conversion. Each child module specializes in a specific currency\u2014like SGD, BTC, or XAU\u2014providing its symbol, scale, and unit definitions, along with functions to construct and validate monetary values. For example, the USD module handles U.S. Dollar amounts with cent-scale precision, while the ADA module supports Cardano's native token units for blockchain transactions.",
      "description_length": 645,
      "index": 193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Quotient",
      "library": "safemoney",
      "description": "This module represents monetary values with a currency symbol and a rational number quotient, supporting arithmetic operations like addition, subtraction, multiplication, and division with rational numbers. It provides functions to construct, display, and convert monetary values to JSON or S-expression formats. Concrete use cases include handling precise currency calculations and serializing monetary data for storage or transmission.",
      "description_length": 437,
      "index": 194,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Safemoney.Ops",
      "library": "safemoney",
      "description": "This module provides tools for converting between string representations of monetary values and typed currency structures, using customizable formatting with thousand separators and decimal precision. It operates on Exchange.t and Scale.t types, supporting rational and discrete numeric values with precise rounding control, particularly useful in financial data pipelines and currency conversion. The included submodule handles separator configurations using pairs of strings, allowing construction and access to delimiters used in formatting and parsing monetary values. For example, it can parse \"1,000.99 USD\" into a typed currency value or format a value like 1500L with a custom thousand separator as \"1 500\".",
      "description_length": 715,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney.Discrete",
      "library": "safemoney",
      "description": "This module represents monetary values as discrete integers scaled by a specified factor, enabling precise arithmetic operations without floating-point errors. It supports construction, negation, absolute value, addition, subtraction, and multiplication by integers, along with serialization to JSON and S-expression formats. The child module represents monetary scales with a currency symbol, sub-unit name, and a rational value, allowing precise scaling information to be attached to amounts for serialization or transmission. Together, they enable exact financial calculations and robust interchange of monetary data with full scaling context.",
      "description_length": 646,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Safemoney",
      "library": "safemoney",
      "description": "This module enables precise financial arithmetic using rational and integer values, supporting currency conversion, discrete math, and quotient management through core types like `Q.t` and `Z.t`. It includes submodules for exchange rate manipulation, standardized currency definitions (e.g., USD, BTC), and both rational and discrete monetary representations with full serialization and formatting control. You can compute cross-currency transactions, define custom currency scales, or parse \"1,000.99 USD\" into a typed value for exact arithmetic. Additional tools handle regional formatting, thousand separators, and precise rounding, making it suitable for financial data pipelines and transaction balancing.",
      "description_length": 710,
      "index": 197,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 198,
    "meaningful_modules": 198,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 715,
    "min_description_length": 261,
    "avg_description_length": 362.0,
    "embedding_file_size_mb": 0.7195606231689453
  }
}