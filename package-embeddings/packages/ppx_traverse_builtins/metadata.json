{
  "package": "ppx_traverse_builtins",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-06-18T16:26:53.838639",
  "modules": [
    {
      "module_path": "ppx_traverse_builtins",
      "description": "Provides traversal functions for OCaml's abstract syntax tree, including mapping, folding, and filtering operations on expressions, patterns, and types. Works with core OCaml data structures such as lambda terms, module declarations, and type expressions. Enables transformation of parsed code during preprocessing, such as annotating nodes or extracting specific constructs.",
      "description_length": 375,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 1,
    "filtered_empty_modules": 2,
    "retention_rate": 0.3333333333333333
  },
  "statistics": {
    "max_description_length": 375,
    "min_description_length": 375,
    "avg_description_length": 375.0,
    "embedding_file_size_mb": 0.0040645599365234375
  }
}