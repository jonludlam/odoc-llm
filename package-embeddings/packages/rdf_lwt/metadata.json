{
  "package": "rdf_lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:47:55.060104",
  "modules": [
    {
      "module_path": "Rdf_4s_lwt",
      "library": "rdf_lwt",
      "description": "This module implements HTTP bindings for interacting with a 4Store RDF database using Lwt for asynchronous operations. It provides functions to execute SPARQL queries (SELECT, ASK, DESCRIBE) via GET, update operations (INSERT, DELETE) via POST, and manage graph data through PUT, POST-append, and DELETE requests. It works directly with RDF graphs, IRIs, and SPARQL messages, enabling concrete use cases such as querying a remote RDF dataset, updating triples in a named graph, or bulk-loading RDF data.",
      "description_length": 503,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_sparql_http_lwt",
      "library": "rdf_lwt",
      "description": "This module implements SPARQL protocol HTTP bindings using Lwt for asynchronous I/O. It provides `get` and `post` functions to send SPARQL queries to remote endpoints, handling response parsing based on content type and HTTP status. These functions work with RDF graphs, IRIs, and SPARQL protocol messages, producing Lwt promises that resolve to SPARQL results or errors.",
      "description_length": 371,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 503,
    "min_description_length": 371,
    "avg_description_length": 437.0,
    "embedding_file_size_mb": 0.029372215270996094
  }
}