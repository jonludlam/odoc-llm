{
  "package": "rdf_lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:35.207211",
  "modules": [
    {
      "module_path": "rdf_lwt",
      "description": "Provides functions to create, traverse, and query RDF graphs using SPARQL queries. Works with data types such as triples, graphs, and SPARQL query structures. Enables tasks like extracting specific subject-predicate-object relationships and executing filtered data retrieval from semantic datasets.",
      "description_length": 298,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_sparql_http_lwt",
      "description": "Provides functions to send SPARQL queries over HTTP using Lwt, handling GET and POST requests with customizable headers and content-type processing. Operates on IRIs, HTTP URIs, and SPARQL protocol messages, including error handling for HTTP responses. Used to fetch or submit SPARQL results from a remote endpoint, with support for specifying base IRIs and accepted content types.",
      "description_length": 381,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_4s_lwt",
      "description": "Provides HTTP operations for interacting with a 4Store SPARQL endpoint, including GET for query execution, POST for updates, DELETE for graph removal, PUT for data replacement, and POST for appending data. Operates with Iri.t, Uri.t, and Rdf.Graph.graph types, along with SPARQL message structures. Used to manage RDF data through HTTP requests, supporting query execution and graph manipulation in a linked data context.",
      "description_length": 421,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 421,
    "min_description_length": 298,
    "avg_description_length": 366.6666666666667,
    "embedding_file_size_mb": 0.011319160461425781
  }
}