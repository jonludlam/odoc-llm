{
  "package": "async_extra",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:28.330021",
  "modules": [
    {
      "module_path": "Async_bus.First_arity",
      "library": "async_extra.async_bus",
      "description": "Handles asynchronous event routing with first-arity functions over three type parameters. It supports creating, transforming, and binding event streams with concrete type serialization via S-expressions. Useful for implementing typed event buses that process and route asynchronous messages in distributed systems or event-driven architectures.",
      "description_length": 344,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Async_bus",
      "library": "async_extra.async_bus",
      "description": "This module bridges Core.Bus with asynchronous event handling, transforming bus updates into consumable streams or deferred results. It supports operations like `pipe1_exn` to subscribe to event streams, `pipe1_filter_map_exn` to process events on the fly, and `first_exn` to capture the first matching event with custom logic. The child module extends this functionality by enabling typed event routing with first-class functions, allowing transformation and binding of streams with S-expression serialization. Together, they facilitate building event-driven systems that consume, filter, and react to asynchronous messages in a type-safe and composable way.",
      "description_length": 659,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 659,
    "min_description_length": 344,
    "avg_description_length": 501.5,
    "embedding_file_size_mb": 0.007691383361816406
  }
}