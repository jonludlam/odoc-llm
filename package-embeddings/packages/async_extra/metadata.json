{
  "package": "async_extra",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:43:23.977391",
  "modules": [
    {
      "module_path": "Async_bus.First_arity",
      "library": "async_extra.async_bus",
      "description": "This module provides functions for handling asynchronous operations on a `Core.Bus` with first-arity event types. It supports operations like `sexp_of_t` to convert event values to S-expressions, working with event data types `'a`, `'b`, and `'c`. Concrete use cases include serializing event states for logging or debugging in asynchronous systems.",
      "description_length": 349,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Async_bus",
      "library": "async_extra.async_bus",
      "description": "This module enables asynchronous event handling on `Core.Bus` with functions to create pipes that observe or filter bus updates, and to await the first matching event. It supports data types like `Async_kernel.Pipe.Reader` for streaming updates and `Async_kernel.Deferred` for one-time event waits, working directly with event values of type `'a`, `'b`, and `'c`. Concrete use cases include filtering and processing real-time event streams, and synchronizing async logic based on the first occurrence of a specific event.",
      "description_length": 521,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 521,
    "min_description_length": 349,
    "avg_description_length": 435.0,
    "embedding_file_size_mb": 0.02938556671142578
  }
}