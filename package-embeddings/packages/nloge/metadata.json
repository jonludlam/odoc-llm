{
  "package": "nloge",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:18.369839",
  "modules": [
    {
      "module_path": "Nloge.Trans",
      "description": "Processes optional values by mapping and filtering, inserts structured data with level and metadata, and executes JSON serialization with lazy evaluation. Operates on options, lists, and custom tagged types. Used to conditionally build data pipelines and generate structured output with contextual information.",
      "description_length": 310,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nloge.Level",
      "description": "Provides operations to compare and check equality of level values, parse strings into level representations considering case variations, and format levels for output. Works with a sum type representing different level variants such as `Debug, Info, Warn, Error. Used to standardize log level handling across different input formats and ensure consistent display in outputs.",
      "description_length": 373,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "nloge",
      "description": "Emits structured JSON logs and converts them to string format for output. Works with JSON values and string buffers to handle log messages. Used to asynchronously write logs to files or streams without blocking I/O operations.",
      "description_length": 226,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nloge",
      "description": "Logs structured events with dynamic metadata and severity levels, supporting conditional data processing and JSON serialization. Handles log levels as a sum type, enabling parsing, comparison, and formatting across various input representations. Processes optional and list-based data to construct log entries with lazy evaluation, allowing efficient and flexible logging workflows. Example: injects timestamp metadata and emits debug messages with location info in a standardized JSON format.",
      "description_length": 493,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 493,
    "min_description_length": 226,
    "avg_description_length": 350.5,
    "embedding_file_size_mb": 0.01495361328125
  }
}