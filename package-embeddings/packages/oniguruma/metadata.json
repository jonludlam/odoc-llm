{
  "package": "oniguruma",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:59:05.193787",
  "modules": [
    {
      "module_path": "Oniguruma.Region",
      "library": "oniguruma",
      "description": "This module represents match results from regular expression captures, providing access to capture positions and lengths. It works with capture groups by index, returning byte offsets for start and end positions within the matched string. Concrete use cases include extracting specific submatches from text after a successful regex match, such as parsing log entries or structured data formats.",
      "description_length": 394,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oniguruma.Options",
      "library": "oniguruma",
      "description": "This module defines and combines regex compilation and search options for the Oniguruma library. It supports two distinct categories of options: `compile_time` for configuring regex pattern compilation (e.g., `singleline`, `ignorecase`, `find_longest`), and `search_time` for controlling match behavior during execution (e.g., `notbol`, `noteol`). These options can be composed using the `<+>` operator, with `none` serving as the neutral element for combinations.",
      "description_length": 464,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oniguruma.Encoding",
      "library": "oniguruma",
      "description": "This module defines character encodings supported by the Oniguruma library, including ASCII and UTF-8. It provides typed representations of these encodings as first-class values, enabling precise control over text processing in regular expressions. Concrete use cases include specifying input text encoding when compiling or matching patterns that handle multilingual or legacy character sets.",
      "description_length": 393,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oniguruma.Syntax",
      "library": "oniguruma",
      "description": "This module defines constants representing different regular expression syntaxes, such as `posix_basic`, `posix_extended`, `perl`, and `java`. It provides predefined syntax configurations used when compiling regular expressions. These values are used directly to control pattern parsing behavior in regex operations.",
      "description_length": 316,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Oniguruma",
      "library": "oniguruma",
      "description": "This module compiles and executes regular expressions with precise control over encoding, syntax, and matching behavior. It supports operations like `create` for regex compilation, `search` and `match_` for finding matches, and `Region`-based extraction of capture groups. It works with string inputs and structured types for encodings (e.g., ASCII, UTF-8), syntaxes (e.g., Perl-compatible), and match options, enabling use cases such as parsing log files, validating structured text, and transforming multilingual content.",
      "description_length": 523,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 523,
    "min_description_length": 316,
    "avg_description_length": 418.0,
    "embedding_file_size_mb": 0.07286643981933594
  }
}