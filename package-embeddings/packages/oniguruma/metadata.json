{
  "package": "oniguruma",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:04:57.193069",
  "modules": [
    {
      "module_path": "Oniguruma.Encoding",
      "library": "oniguruma",
      "description": "This module defines character encodings supported by the Oniguruma library, including ASCII and UTF-8. It provides typed representations of these encodings for use in regex operations. Concrete use cases include specifying input text encoding when compiling or matching regular expressions.",
      "description_length": 290,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Oniguruma.Syntax",
      "library": "oniguruma",
      "description": "This module defines syntax options for regular expressions, including standard and custom configurations. It provides predefined syntax values like `posix_basic`, `posix_extended`, `perl`, and `java` to control pattern parsing behavior. Use these values to specify regex syntax compatibility modes when compiling patterns.",
      "description_length": 322,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oniguruma.Region",
      "library": "oniguruma",
      "description": "This module represents match regions from regular expression captures, providing access to capture positions and lengths. It works with byte string indices to identify matched substrings, including nested capture groups. Use it to extract specific matched segments from a string after a successful regex match, such as parsing structured text formats or isolating tokens in a byte string.",
      "description_length": 388,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oniguruma.Options",
      "library": "oniguruma",
      "description": "This module defines and combines regex compilation and search options for the Oniguruma library. It supports two distinct categories of options: `compile_time` for configuring regex pattern compilation (e.g., `singleline`, `ignorecase`, `find_longest`), and `search_time` for controlling match behavior during execution (e.g., `notbol`, `noteol`). These options can be composed using the `<+>` operator, with `none` serving as the neutral element for combinations.",
      "description_length": 464,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oniguruma",
      "library": "oniguruma",
      "description": "This module enables regular expression matching and searching with customizable encodings, syntax options, and advanced capture handling. It supports creating and executing regex patterns with features like named subpatterns, Unicode, and flexible match extraction through typed encodings, syntax configurations, and region tracking. Use it to validate input formats, parse structured text, or extract nested capture groups from byte strings. Options for compilation and search behavior can be combined to fine-tune regex execution, such as enabling case-insensitive matching or controlling line boundary handling.",
      "description_length": 614,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 614,
    "min_description_length": 290,
    "avg_description_length": 415.6,
    "embedding_file_size_mb": 0.018609046936035156
  }
}