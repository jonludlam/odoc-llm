{
  "package": "fmt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:43.344446",
  "modules": [
    {
      "module_path": "Fmt.Dump",
      "library": "fmt",
      "description": "This module provides formatters for inspecting OCaml values with minimal configuration, using sensible defaults and OCaml-like syntax. It supports standard data types like lists, arrays, options, results, and structures such as hashtables, queues, and stacks, formatting them with clear visual layout. Concrete use cases include debugging and logging, where values need to be quickly visualized without custom formatting rules.",
      "description_length": 427,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fmt",
      "library": "fmt",
      "description": "This module combines low-level formatting primitives with higher-level combinators to build customizable pretty-printers for structured data and terminal output. It introduces formatters for common OCaml types and supports custom layout through combinators that control indentation, line breaks, and box nesting. You can format lists with custom separators, pretty-print nested records, or render error messages with ANSI colors. Submodules extend this functionality to value inspection, offering ready-to-use printers for data structures like lists, options, and hashtables using OCaml-like syntax.",
      "description_length": 599,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fmt_tty",
      "library": "fmt.tty",
      "description": "This module configures output formatters for TTYs by automatically detecting terminal capabilities. It sets color support via `set_style_renderer` using `Ansi_tty` when the output channel is a terminal and `TERM` is not \"dumb\", and enables UTF-8 output via `set_utf_8` if the environment variables indicate UTF-8 support. Use it to ensure proper formatting with colors and UTF-8 when writing to interactive terminals.",
      "description_length": 417,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 599,
    "min_description_length": 417,
    "avg_description_length": 481.0,
    "embedding_file_size_mb": 0.011311531066894531
  }
}