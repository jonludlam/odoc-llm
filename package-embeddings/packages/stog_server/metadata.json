{
  "package": "stog_server",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 8,
  "creation_timestamp": "2025-06-18T16:32:01.468139",
  "modules": [
    {
      "module_path": "Stog_server.Files",
      "description": "Provides functions to retrieve embedded JavaScript and CSS content as strings. Works with raw string data representing client-side resources. Used to embed static assets directly into application builds for web-based interfaces.",
      "description_length": 228,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Http",
      "description": "Generates preview URLs from configuration and path data, and processes HTTP requests to handle service interactions. It uses URL configurations and request objects to construct responses. Handles routing for a preview server by building internal links and managing incoming HTTP traffic.",
      "description_length": 287,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Main",
      "description": "Handles HTTP request routing and response generation for a single preview server. Processes JSON payloads and manages session state through in-memory storage. Enables real-time content rendering and user interaction tracking during live previews.",
      "description_length": 246,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Preview",
      "description": "The module provides a framework for rendering and manipulating content previews. It includes types for representing preview data and operations for generating and modifying previews. Users can create, update, and display previews using defined functions. Example tasks include generating summary views and applying formatting rules to content.",
      "description_length": 343,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Run",
      "description": "The module provides a framework for processing and rendering stog documents within a preview server environment. It includes data types for document structures, rendering configurations, and server interactions. Operations support parsing, transforming, and serving stog content dynamically. Users can generate live previews, apply custom transformations, and manage document states during editing.",
      "description_length": 398,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Ws",
      "description": "Handles WebSocket connections for real-time document previews by sending patches, errors, and warnings to clients. Operates on client connection lists, document states, and WebSocket streams to synchronize updates. Used to manage live editing sessions and error notifications in a collaborative environment.",
      "description_length": 307,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "stog_server",
      "description": "Provides functions to parse and validate HTTP request headers, process query parameters, and generate response bodies in a streaming fashion. Operates on strings, buffers, and custom request/response records. Used to handle incoming web requests, extract user input from URLs, and construct dynamic HTTP responses for a web server.",
      "description_length": 331,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server",
      "description": "combines functions for embedding client-side assets, managing HTTP and WebSocket interactions, and rendering dynamic content previews. It includes types for document structures, request objects, session states, and preview data, with operations for generating URLs, handling JSON payloads, and synchronizing real-time updates. Users can embed static resources, route HTTP requests, and manage live document previews with session tracking and WebSocket communication. Examples include creating preview URLs, rendering stog documents, and sending incremental updates to connected clients.",
      "description_length": 586,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 8,
    "filtered_empty_modules": 2,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 586,
    "min_description_length": 228,
    "avg_description_length": 340.75,
    "embedding_file_size_mb": 0.02948760986328125
  }
}