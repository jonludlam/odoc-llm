{
  "package": "stog_server",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:00:23.663325",
  "modules": [
    {
      "module_path": "Stog_server.Http",
      "library": "stog_server",
      "description": "Handles HTTP connections for a preview server, providing URL generation and request processing. It works with HTTP requests and responses, URL configurations, and server state. Used to serve dynamically generated content during document previews, handling routing and response construction based on incoming requests.",
      "description_length": 317,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Ws",
      "library": "stog_server",
      "description": "This module manages WebSocket connections for a preview server, enabling real-time updates and communication with clients. It provides functions to send error and warning messages, transmit document patches, and handle incoming WebSocket messages. It works with WebSocket frames, document state data, and client connection lists, specifically supporting document preview synchronization and interactive client-server communication during document editing.",
      "description_length": 455,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Preview",
      "library": "stog_server",
      "description": "This module serves preview content for a Stog document generation system by handling HTTP requests and providing embedded JavaScript and CSS resources. It constructs responses with appropriate MIME types, including dynamic client-side scripts that connect to a WebSocket for live updates. Key operations include serving preview pages, handling session initialization, and responding with embedded assets used for real-time document rendering.",
      "description_length": 442,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Main",
      "library": "stog_server",
      "description": "This module sets up and manages a local preview server for real-time content rendering. It handles server initialization, route registration for content display, and automatic browser reloading during development. Use it to serve and test dynamic content locally with live updates.",
      "description_length": 281,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Stog_server.Files",
      "library": "stog_server",
      "description": "This module provides direct access to embedded JavaScript and CSS files used by the server client interface. It exposes two string values representing the contents of `server_client.js` and `server_style.css`. These values can be used to serve static assets in web applications without relying on external file systems.",
      "description_length": 319,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server.Run",
      "library": "stog_server",
      "description": "This module manages the execution and updating of a document processing system. It provides functions to run document computations, watch for file changes, and refresh document content dynamically. It works with document states, module configurations, and error tracking structures. Use it to handle live document updates, error reporting, and client synchronization in a server environment.",
      "description_length": 391,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stog_server",
      "library": "stog_server",
      "description": "This module implements a local preview server with real-time document rendering, combining HTTP and WebSocket communication to serve dynamic content and embedded assets. It directly handles document state updates, client connections, and browser synchronization for interactive editing workflows. Concrete use cases include serving live document previews, transmitting patches over WebSockets, and managing automatic browser reloads during development.",
      "description_length": 452,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 455,
    "min_description_length": 281,
    "avg_description_length": 379.57142857142856,
    "embedding_file_size_mb": 0.10187244415283203
  }
}