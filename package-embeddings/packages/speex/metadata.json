{
  "package": "speex",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 9,
  "creation_timestamp": "2025-06-18T16:32:01.334037",
  "modules": [
    {
      "module_path": "Speex.Wrapper.Decoder",
      "description": "Opens Ogg/Speex streams from files, feeds, or sync objects and provides methods to extract headers, comments, and audio data in various formats. Handles mono and stereo audio decoding as float or integer arrays, and supports streaming decoding via callbacks. Designed for direct audio processing and metadata retrieval from Speex-encoded media.",
      "description_length": 344,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Speex.Header",
      "description": "Provides functions to initialize, encode, and decode Speex audio headers and metadata. Works with Speex header structures, Ogg packets, and metadata key-value pairs. Initializes audio settings, generates Ogg packets for header and metadata, and extracts information from incoming packets.",
      "description_length": 288,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Speex.Encoder",
      "description": "Encodes audio data into Ogg pages using specified control parameters, supporting both float and integer formats for mono and stereo streams. Operates on an encoder state type and Ogg stream objects, retrieving and setting configuration values through dedicated accessors. Processes audio data in chunks, generating complete Ogg pages suitable for streaming or file output.",
      "description_length": 372,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Speex.Decoder",
      "description": "Provides methods to initialize, configure, and decode audio data from Ogg streams, supporting both float and integer formats in mono and stereo. Operates on a stateful decoder object and Ogg stream data, allowing direct access to decoded samples or streaming via callback functions. Used for real-time audio processing, playback, and format conversion tasks.",
      "description_length": 358,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Speex.Wrapper",
      "description": "Provides seamless access to Speex audio streams, enabling header extraction, metadata retrieval, and audio decoding in multiple formats. Supports float and integer array outputs for mono and stereo audio, with callback-based streaming for real-time processing. Allows initialization from files, feeds, or sync objects, offering flexible integration into audio workflows. Examples include extracting comments from a stream, decoding audio data for playback, or processing audio in real time.",
      "description_length": 490,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Speex.Skeleton",
      "description": "Generates a vorbis fisbone packet with customizable granule position and headers, tailored for Ogg skeleton streams. It operates on nativeint granule values and Header.t structures, producing Ogg.Stream.packet outputs. Used to construct initial packets for streaming audio content with metadata in a structured Ogg format.",
      "description_length": 322,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "speex",
      "description": "Provides functions for encoding and decoding audio streams using the Ogg, Vorbis, and Opus formats. Works with raw byte buffers, audio sample arrays, and stream state objects. Enables integration of audio compression and playback in multimedia applications.",
      "description_length": 257,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Speex_decoder",
      "description": "Registers a Speex audio decoder with the Ogg demuxer, enabling playback of Speex-encoded audio streams. It processes Ogg packets and decodes them into raw audio data using Speex-specific decoding logic. The module interacts directly with the Ogg demuxer's packet handling system to deliver decoded audio samples.",
      "description_length": 312,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Speex",
      "description": "manages Speex audio processing through header manipulation, encoding, decoding, and stream construction. it handles header structures, Ogg packets, and metadata, while supporting float and integer audio formats in mono and stereo. it enables real-time decoding, streaming via callbacks, and generation of Ogg skeleton packets. examples include extracting metadata from a stream, decoding audio for playback, and constructing Ogg packets for streaming.",
      "description_length": 451,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 490,
    "min_description_length": 257,
    "avg_description_length": 354.8888888888889,
    "embedding_file_size_mb": 0.033135414123535156
  }
}