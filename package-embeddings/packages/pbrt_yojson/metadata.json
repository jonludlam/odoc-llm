{
  "package": "pbrt_yojson",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:10.016951",
  "modules": [
    {
      "module_path": "Pbrt_yojson.E",
      "library": "pbrt_yojson",
      "description": "This module defines exceptions and helper functions for handling JSON encoding and decoding errors. It works with error types like `Unexpected_json_type` and `Malformed_variant`, which capture context such as record names and expected types. Concrete use cases include raising errors when a JSON value does not match the expected structure, such as encountering a string where a number is required or failing to parse a variant.",
      "description_length": 428,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pbrt_yojson",
      "library": "pbrt_yojson",
      "description": "This module provides functions to encode and decode Protocol Buffers messages to and from JSON using the Yojson library, operating on `Yojson.Basic.t` values and mapping them to OCaml primitives. It supports serialization of protobuf messages for storage or transmission and deserialization of JSON payloads into structured data for processing. The child module handles JSON encoding and decoding errors with exceptions like `Unexpected_json_type` and `Malformed_variant`, providing context such as record names and expected types. These error-handling utilities enable precise validation, such as ensuring a JSON number is present where a float is required or correctly parsing variant types.",
      "description_length": 693,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 693,
    "min_description_length": 428,
    "avg_description_length": 560.5,
    "embedding_file_size_mb": 0.007678031921386719
  }
}