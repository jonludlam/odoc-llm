{
  "package": "pbrt_yojson",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:26.427053",
  "modules": [
    {
      "module_path": "Pbrt_yojson.E",
      "description": "Handles errors from JSON encoding and decoding by defining specific exception-raising functions. Works with string identifiers for records and variants to signal invalid types or malformed data. Used to detect and report issues when parsing or serializing structured data.",
      "description_length": 272,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "pbrt_yojson",
      "description": "Provides functions for parsing and validating JSON data, including decoding nested objects and extracting specific fields. Works with OCaml's native `string` and `list` types, as well as custom record types. Used to process configuration files and API responses by mapping JSON structures to typed OCaml values.",
      "description_length": 311,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pbrt_yojson",
      "description": "Provides error handling for JSON encoding and decoding through exception-raising functions that use string identifiers to signal invalid types or malformed data. Supports detection and reporting of issues during parsing or serialization of structured data. Main data types include error messages and string-based type identifiers. Examples include catching invalid variant tags during decoding or identifying missing fields in a JSON object.",
      "description_length": 441,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 441,
    "min_description_length": 272,
    "avg_description_length": 341.3333333333333,
    "embedding_file_size_mb": 0.011322975158691406
  }
}