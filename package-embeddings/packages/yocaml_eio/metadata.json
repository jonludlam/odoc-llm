{
  "package": "yocaml_eio",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:30.176617",
  "modules": [
    {
      "module_path": "Yocaml_eio.Runtime",
      "library": "yocaml_eio",
      "description": "This module provides low-level runtime operations for interacting with the file system and executing external processes in a Unix environment using Eio. It supports operations like reading and writing files, checking file existence, creating directories, listing directory contents, and running shell commands with customizable success checks. The module works directly with Yocaml's path type and exposes Eio-based implementations for time, logging, and error handling.",
      "description_length": 470,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_eio",
      "library": "yocaml_eio",
      "description": "This module integrates a Unix runtime with YOCaml using Eio, enabling file system operations, process execution, and custom error handling. It provides `run` and `serve` functions to build and serve static sites with live reloading, while its submodules handle low-level tasks like reading files, creating directories, and running shell commands. You can use it to compile templates, manage assets, and serve content over HTTP with Eio as the backend. Specific features include time-based triggers, logging control, and path-aware operations for Unix environments.",
      "description_length": 564,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 564,
    "min_description_length": 470,
    "avg_description_length": 517.0,
    "embedding_file_size_mb": 0.007700920104980469
  }
}