{
  "package": "vlq",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:57.010763",
  "modules": [
    {
      "module_path": "Vlq.Base64",
      "description": "Encodes binary data into Base64 format using a buffer and offset, and decodes a stream of characters into binary data, tracking the number of decoded bytes. It operates on OCaml's Buffer module and character streams. This is used for safely transmitting binary content over text-based protocols or storing it in formats that require ASCII encoding.",
      "description_length": 348,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "vlq",
      "description": "Encodes integers as base64 strings and writes them to a Buffer. It handles numeric values by converting them into variable-length byte sequences. This is useful for generating compact representations of integers in formats like JavaScript sourcemaps.",
      "description_length": 250,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vlq",
      "description": "Encodes a non-negative integer into a variable-length quantity format using a buffer, and decodes a stream of characters back into an integer. It operates on OCaml's Buffer module and character streams, handling integers as numeric values. This is used in scenarios requiring efficient binary data serialization, such as encoding integers for network protocols or file formats.",
      "description_length": 377,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 377,
    "min_description_length": 250,
    "avg_description_length": 325.0,
    "embedding_file_size_mb": 0.011323928833007812
  }
}