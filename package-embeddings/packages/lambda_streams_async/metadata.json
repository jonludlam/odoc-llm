{
  "package": "lambda_streams_async",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:00.375870",
  "modules": [
    {
      "module_path": "Lambda_streams_async.Async",
      "description": "Converts between lambda streams and asynchronous primitives like deferred values, streams, and pipes. Processes finite asynchronous sequences by extracting first or last elements, transforming into lists, or interfacing with Async's stream and pipe systems. Enables integration between stream-based data processing and asynchronous computation models.",
      "description_length": 351,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "lambda_streams_async",
      "description": "Processes lazy sequences using lambda expressions, enabling efficient data transformation and composition. Operates on streams and higher-order functions to manipulate continuous data flows. Used for real-time data processing and event-driven pipelines.",
      "description_length": 253,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lambda_streams_async",
      "description": "Transforms and bridges lambda streams with asynchronous constructs such as deferreds, streams, and pipes, enabling seamless interaction between sequential and concurrent data processing. It supports operations like extracting head or tail elements, converting streams to lists, and connecting to Async's stream and pipe APIs. Key data types include deferred values, stream elements, and pipe interfaces, with operations that handle asynchronous sequencing and data flow. Examples include processing event-driven data pipelines, handling asynchronous I/O in a stream-based workflow, and combining lazy evaluation with non-blocking computations.",
      "description_length": 643,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 643,
    "min_description_length": 253,
    "avg_description_length": 415.6666666666667,
    "embedding_file_size_mb": 0.011316299438476562
  }
}