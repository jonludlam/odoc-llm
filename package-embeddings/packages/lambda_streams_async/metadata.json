{
  "package": "lambda_streams_async",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:45:09.441074",
  "modules": [
    {
      "module_path": "Lambda_streams_async.Async",
      "library": "lambda_streams_async",
      "description": "This module provides functions to convert between lambda streams and async values, lists, streams, and pipe readers. It supports extracting the first or last value from a stream, collecting all values into a list, and bridging to and from async streams and pipes. Concrete use cases include integrating stream processing with async workflows, such as consuming async data sources or feeding async pipelines.",
      "description_length": 407,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lambda_streams_async",
      "library": "lambda_streams_async",
      "description": "This module provides functions to convert between lambda streams and async values, lists, streams, and pipe readers. It supports extracting the first or last value from a stream, collecting all values into a list, and bridging to and from async streams and pipes. Concrete use cases include integrating stream processing with async workflows, such as consuming async data sources or feeding async pipelines.",
      "description_length": 407,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 407,
    "min_description_length": 407,
    "avg_description_length": 407.0,
    "embedding_file_size_mb": 0.0150146484375
  }
}