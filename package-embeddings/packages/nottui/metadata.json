{
  "package": "nottui",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:30.576176",
  "modules": [
    {
      "module_path": "Nottui.Renderer",
      "library": "nottui",
      "description": "This module creates and manages a terminal UI renderer that processes input events and renders UI components to an image. It handles mouse and keyboard events, updates the UI layout at a specified size, and generates the final image for display. Concrete use cases include building interactive terminal applications with dynamic layouts and event-driven behavior.",
      "description_length": 363,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nottui.Gravity",
      "library": "nottui",
      "description": "This module defines and manipulates gravity values composed of horizontal and vertical directions, used to control alignment and positioning of UI elements in a terminal interface. It provides functions to construct, access, and print these gravity values, with a default set to top-left alignment. Concrete use cases include specifying the alignment of widgets within layouts, such as centering a dialog or anchoring a status bar to the bottom-right.",
      "description_length": 451,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Nottui.Focus",
      "library": "nottui",
      "description": "Manages focus state for user interface elements in a terminal application. It provides functions to request and release focus, track focus status reactively, and check whether a given status holds active focus. Uses `handle` to represent focus entities and `status` to describe their state, enabling precise control over input handling and UI interactions.",
      "description_length": 356,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nottui.Ui",
      "library": "nottui",
      "description": "This module provides layout composition, event handling, and dynamic dimension monitoring for terminal-based user interfaces. It operates on functional UI elements (`Nottui.Ui.t`) and structured input events (keyboard, mouse), enabling operations like element resizing, spatial joining, and focus-aware event filtering. Typical use cases include building responsive terminal interfaces with interactive components or tracking layout changes during runtime.",
      "description_length": 456,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nottui",
      "library": "nottui",
      "description": "This module enables the construction and management of interactive terminal user interfaces with combinators for layout, alignment, and input handling. It introduces core types like `ui` for functional UI elements, `gravity` for alignment, and `handle` / `status` for focus control, supporting operations such as layout composition, event filtering, and dynamic resizing. Child modules handle rendering with input event processing, gravity value manipulation, focus state tracking, and layout behavior with dimension monitoring. Examples include building forms with aligned fields, creating focusable menus, and rendering dashboards that adapt to terminal resizing.",
      "description_length": 665,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nottui_widgets",
      "library": "nottui",
      "description": "This module enables building dynamic terminal interfaces with text rendering, layout composition, and state management for interactive components. It operates on UI values and state-tracking types like `Lwd.t` and `scroll_state`, supporting features such as scrollable areas, overlays, and input forms. Typical use cases include terminal applications requiring navigable menus, editable fields, or dynamically updated content.",
      "description_length": 426,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 665,
    "min_description_length": 356,
    "avg_description_length": 452.8333333333333,
    "embedding_file_size_mb": 0.022233963012695312
  }
}