{
  "package": "conduit",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:27:28.685095",
  "modules": [
    {
      "module_path": "Resolver.Make",
      "description": "Provides monadic binding and return operations for sequencing computations wrapped in a context. Works with parameterized types that support chaining via the >>= operator. Enables structured asynchronous or effectful workflows such as parsing, state transformation, or I/O handling.",
      "description_length": 282,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "conduit",
      "description": "Provides functions for creating and managing network connections, resolving URI endpoints, and handling OS-specific connection details. Works with endpoint representations, URI strings, and network configuration data. Used to establish TCP links between local and remote services, such as connecting to a database server or a remote API.",
      "description_length": 337,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resolver",
      "description": "Resolves URIs into concrete endpoints using a service function and customizable rewrite rules. It operates on `Uri.t` and `Conduit.endp` types, allowing for dynamic endpoint generation based on host patterns. It supports composing service functions and applying temporary rewrites during resolution.",
      "description_length": 299,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Conduit_trie",
      "description": "Provides operations to build and query a radix tree for efficient longest-prefix matching on string keys. Supports inserting key-value pairs, folding over all entries, and checking prefix relationships between strings. Used for tasks like IP address routing or pattern matching where prefix-based lookups are critical.",
      "description_length": 318,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Conduit",
      "description": "Provides bind and return operations for sequencing asynchronous computations, enabling structured handling of I/O and event-driven tasks. Works with a parameterized type representing computations that may yield control. Used to implement non-blocking network protocols and stream processing pipelines.",
      "description_length": 301,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 337,
    "min_description_length": 282,
    "avg_description_length": 307.4,
    "embedding_file_size_mb": 0.01858043670654297
  }
}