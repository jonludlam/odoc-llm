{
  "package": "higlo",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 10,
  "creation_timestamp": "2025-06-18T16:32:32.508979",
  "modules": [
    {
      "module_path": "Higlo.Commonmark",
      "description": "This module provides lexical analysis and tokenization functionalities, focusing on structured text parsing through state machine transitions and pattern matching. It operates on integer state identifiers, string-valued tables, and `Sedlexing.lexbuf` structures to classify tokens, extract lexemes, and manage code block parsing. Use cases include processing markup formats, syntax representation, and generating token lists for structured text workflows.",
      "description_length": 455,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Dot",
      "description": "This module provides low-level lexical analysis operations, including state transition management, input partitioning, and token extraction, primarily through integer-based mappings and partitioning functions. It works with structured data like Sedlexing.lexbuf buffers, numeric state values, and internal parsing tables to enable efficient pattern matching and tokenization. These functionalities are tailored for implementing scanners, processing character sequences, and optimizing state-based parsing workflows.",
      "description_length": 515,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Json",
      "description": "The module provides lexical analysis operations for tokenizing structured data, including partitioning inputs, extracting tokens from a `Sedlexing.lexbuf`, and managing state transitions via integer states. It leverages internal tables for pattern matching, optimized for parsing tasks like JSON processing. These utilities are designed for low-level lexing workflows, supporting efficient token extraction and state management in structured data parsers.",
      "description_length": 455,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Lang",
      "description": "Provides functions to convert tokens and errors to strings, pretty-print errors, and manage language-specific lexers. Operates with tokens, errors, and lexers that process input into token lists. Used to parse code into structured tokens based on registered languages, supporting custom lexer registration and error handling.",
      "description_length": 325,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Misc",
      "description": "Splits a string into parts using specified delimiters, preserving empty segments if requested. Checks if one string is a prefix of another. Removes leading and trailing whitespace from a string. Used for parsing log entries, validating input prefixes, and cleaning user input.",
      "description_length": 276,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Ocaml",
      "description": "This module provides lexical analysis utilities through string-valued tables and integer partitioning functions, designed for token recognition and state transition management in scanners. It operates on strings, integers representing states or character codes, and lexing buffers, enabling tasks like regular expression matching and comment processing. These components are typically generated by tools like Sedlex to support efficient tokenization and parsing of input streams.",
      "description_length": 479,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Printers",
      "description": "Generates XML representations of code tokens and source files, using customizable class names for styling. Processes language-specific tokens through functions that produce either standard XML trees or rewrite trees for further processing. Registers and retrieves custom printing functions for different programming languages.",
      "description_length": 326,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Higlo.Xml",
      "description": "This module provides lexical analysis and tokenization utilities, leveraging precomputed state transition tables and string processing to efficiently recognize tokens. It operates on `Sedlexing.lexbuf` inputs, integer state representations, and string data to partition and extract lexemes. Use cases include parsing structured data formats like XML and generating token streams for syntax analysis in custom languages.",
      "description_length": 419,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "higlo",
      "description": "Provides functions to parse and highlight code using a Sedlex-based lexer, generating structured output in Xtmpl.Rewrite format. Works with tokenized data from input languages like OCaml, XML, JSON, and Graphviz. Enables custom language support by defining lexers and output mappings for specific formats.",
      "description_length": 305,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Higlo",
      "description": "combines lexical analysis, tokenization, and parsing capabilities through state machines, pattern matching, and structured data handling. It manages `Sedlexing.lexbuf` buffers, integer states, and string tables to extract tokens, process structured inputs, and generate XML representations. Functions include splitting strings by delimiters, converting tokens to strings, and handling language-specific lexers. It supports tasks like parsing JSON, generating token lists, and pretty-printing errors for structured text workflows.",
      "description_length": 529,
      "index": 9,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 10,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 529,
    "min_description_length": 276,
    "avg_description_length": 408.4,
    "embedding_file_size_mb": 0.03675651550292969
  }
}