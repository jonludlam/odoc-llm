{
  "package": "caisar-xgboost",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:49:58.938183",
  "modules": [
    {
      "module_path": "Caisar_xgboost.Tree",
      "library": "caisar-xgboost",
      "description": "This module implements decision tree structures for gradient boosting models, supporting prediction operations on input data. It defines tree nodes as either splits based on feature values or leaf nodes with output scores, and applies transformations like the sigmoid function after summing predictions. The primary use case is scoring input instances using an ensemble of trained decision trees.",
      "description_length": 396,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caisar_xgboost.Input",
      "library": "caisar-xgboost",
      "description": "This module handles input data representation and parsing for machine learning models. It defines a type `t` for input instances and provides functions to retrieve feature values by index, construct inputs from feature lists, and load inputs from files using a parser. It is used to prepare structured data for model training or inference tasks.",
      "description_length": 345,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caisar_xgboost.Predict",
      "library": "caisar-xgboost",
      "description": "Implements the sigmoid activation function and a prediction function that evaluates an input against a parsed model. Works with parsed model structures and input feature vectors to compute a float prediction. Used to score inputs using a trained gradient boosting model.",
      "description_length": 270,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caisar_xgboost.Parser",
      "library": "caisar-xgboost",
      "description": "This module handles JSON parsing and serialization for XGBoost model components, converting between OCaml types like `gbtree_model_param`, `tree`, and `gradient_booster` and their JSON representations. It supports structured output formatting and error handling, enabling use cases such as model configuration, parameter inspection, and persistent storage of trained models via JSON serialization.",
      "description_length": 397,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Caisar_xgboost",
      "library": "caisar-xgboost",
      "description": "Handles input data preparation, JSON parsing of XGBoost models, decision tree evaluation, and prediction scoring for gradient boosting workflows. Operates on structured input instances, decision trees, and model parameters to enable training, serialization, and inference tasks. Used to load model configurations, process feature vectors, and compute predictions using trained ensembles.",
      "description_length": 387,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 397,
    "min_description_length": 270,
    "avg_description_length": 359.0,
    "embedding_file_size_mb": 0.07286930084228516
  }
}