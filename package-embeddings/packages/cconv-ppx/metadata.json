{
  "package": "cconv-ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1,
  "creation_timestamp": "2025-08-14T22:43:48.309105",
  "modules": [
    {
      "module_path": "Ppx_deriving_cconv",
      "library": "ppx_deriving_cconv",
      "description": "This module enables the development of custom encoding and decoding logic in ppx derivers by processing OCaml AST components like `core_type`, `expression`, and `type_declaration`. It provides utilities for attribute parsing, type traversal, error handling, and generating code artifacts such as value bindings and signature items, supporting type-driven derivation of serialization routines and transformation functions. These capabilities are particularly valuable for building data marshaling systems, configuration parsers, or protocol implementations that adapt to user-defined types.",
      "description_length": 589,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 589,
    "min_description_length": 589,
    "avg_description_length": 589.0,
    "embedding_file_size_mb": 0.014919281005859375
  }
}