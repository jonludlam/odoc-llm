{
  "package": "cconv-ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:03:35.177267",
  "modules": [
    {
      "module_path": "Ppx_deriving_cconv",
      "library": "ppx_deriving_cconv",
      "description": "This module provides utilities for implementing type-driven code generation in PPX derivers, focusing on encoding and decoding logic. It operates on OCaml abstract syntax tree (AST) components like core types, expressions, and type declarations to produce Parsetree fragments with support for recursive types and customizable naming conventions. These tools are particularly useful for generating serializers, deserializers, or type-specific boilerplate in libraries requiring deep AST manipulation.",
      "description_length": 499,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 499,
    "min_description_length": 499,
    "avg_description_length": 499.0,
    "embedding_file_size_mb": 0.004061698913574219
  }
}