{
  "package": "camlzip",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:36.451221",
  "modules": [
    {
      "module_path": "Gzip",
      "library": "zip",
      "description": "This module implements reading from and writing to gzip-compressed files, supporting incremental input/output operations with byte-level precision. It works with abstract types `in_channel` and `out_channel` for compressed data streams, handling raw bytes, substrings, and character codes directly. Concrete use cases include uncompressing log files incrementally, compressing backups on disk, and streaming compressed data over network sockets without full file buffering.",
      "description_length": 473,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zlib",
      "library": "zip",
      "description": "This module implements compression and decompression using the DEFLATE algorithm, providing low-level access to zlib's streaming interface. It operates on raw byte sequences and strings, supporting incremental processing through stream objects with functions like `deflate` and `inflate`. Concrete use cases include implementing custom compression protocols, processing network data streams, and handling file formats requiring direct control over compression headers and flushing.",
      "description_length": 481,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zip",
      "library": "zip",
      "description": "This module supports creating, reading, and modifying ZIP archives with precise control over individual entries, including compression methods, timestamps, comments, and CRC checks. It operates on file handles for reading and writing, allowing extraction of entries to files or channels, and adding entries from strings, files, or generators. Concrete use cases include packaging files for distribution, extracting specific data from ZIP archives, and modifying ZIP contents incrementally without rewriting the entire archive.",
      "description_length": 526,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 526,
    "min_description_length": 473,
    "avg_description_length": 493.3333333333333,
    "embedding_file_size_mb": 0.011319160461425781
  }
}