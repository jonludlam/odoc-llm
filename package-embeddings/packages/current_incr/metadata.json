{
  "package": "current_incr",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:38.858972",
  "modules": [
    {
      "module_path": "Current_incr.Separate",
      "library": "current_incr",
      "description": "This module processes each item of a set efficiently by applying a function to each element and returning a map from input elements to results. It ensures that when new elements are added to the input, the function is only applied to those new elements, not the entire set. It works with `Current_incr.t` values containing maps and supports key-based incremental computation.",
      "description_length": 375,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_incr",
      "library": "current_incr",
      "description": "This library enables efficient incremental computation by tracking dependencies and recomputing only changed parts of a workflow. It centers on changeable values (`t`) and computations (`cc`), with core operations like `read`, `map`, and `write` to build dynamic, reactive pipelines. A child module extends this by processing set elements incrementally, applying functions only to new items and maintaining a map of results keyed by input. Together, they support use cases like reactive UIs, build systems, and data pipelines where precise invalidation and minimal recomputation are critical.",
      "description_length": 592,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 592,
    "min_description_length": 375,
    "avg_description_length": 483.5,
    "embedding_file_size_mb": 0.007686614990234375
  }
}