{
  "package": "mirage-profile",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:04:52.912357",
  "modules": [
    {
      "module_path": "MProf.Counter",
      "library": "mirage-profile",
      "description": "This module provides operations to create, update, and retrieve integer counters, including initializing with a specific value, setting an absolute value, and applying increments or decrements. It works with a mutable counter type that tracks time-varying integer metrics. Concrete use cases include tracking request counts in a server or measuring processed items in a pipeline.",
      "description_length": 379,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MProf.Trace",
      "library": "mirage-profile",
      "description": "This module adds tracing capabilities to Lwt-based applications by labeling threads, tracking counters, and marking execution states. It provides functions to create labeled synchronization primitives like tasks, conditions, and mvars, along with utilities to annotate thread behavior such as expected resolution and counter changes. Use cases include debugging concurrency issues in MirageOS applications and analyzing asynchronous execution flow with named thread identifiers.",
      "description_length": 478,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MProf_counter",
      "library": "mirage-profile",
      "description": "This module implements a simple counter with named identifiers, supporting operations to create, update, and retrieve integer values. It works with a record type containing a name and a mutable integer value. Concrete use cases include tracking statistics like request counts or performance metrics in profiling scenarios.",
      "description_length": 322,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MProf",
      "library": "mirage-profile",
      "description": "This module enables performance profiling and concurrency tracing in OCaml applications. It supports mutable integer counters for tracking runtime metrics and integrates with Lwt to label and trace asynchronous operations. Counters can be incremented, set, or retrieved, while tracing functions annotate threads and track execution states. Example uses include monitoring server request rates and debugging MirageOS concurrency workflows with labeled tasks and state transitions.",
      "description_length": 479,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MProf_trace",
      "library": "mirage-profile",
      "description": "This module tracks execution pauses and resource usage in asynchronous programs. It works with Lwt threads and variables, labeling tasks, waits, and conditions with metadata to monitor behavior at runtime. Concrete use cases include profiling task scheduling, tracing mvar and condition variable usage, and logging counter changes in concurrent systems.",
      "description_length": 353,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 479,
    "min_description_length": 322,
    "avg_description_length": 402.2,
    "embedding_file_size_mb": 0.018575668334960938
  }
}