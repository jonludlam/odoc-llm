{
  "package": "mirage-profile",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:52:22.470632",
  "modules": [
    {
      "module_path": "MProf.Counter",
      "library": "mirage-profile",
      "description": "Tracks integer values that can be incremented, decremented, or explicitly set. It stores a named counter with an internal state, allowing retrieval and modification of its current value. Useful for monitoring metrics like request counts, error rates, or resource usage over time.",
      "description_length": 279,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MProf.Trace",
      "library": "mirage-profile",
      "description": "This module adds tracing capabilities to Lwt-based applications by labeling threads, tracking counters, and marking execution states. It provides functions to wrap Lwt operations with named identifiers, record counter values, and signal execution pauses and resumptions. Concrete use cases include debugging asynchronous workflows, analyzing thread behavior in distributed systems, and profiling performance bottlenecks in event-driven applications.",
      "description_length": 449,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MProf_counter",
      "library": "mirage-profile",
      "description": "This module implements a simple counter with named tracking, supporting creation, value setting, incrementing, and retrieval. It works with a record type containing a name and a mutable integer value. Concrete use cases include tracking named metrics like request counts, error rates, or performance statistics in profiling scenarios.",
      "description_length": 334,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MProf_trace",
      "library": "mirage-profile",
      "description": "This module tracks execution pauses and resource usage in concurrent programs using Lwt. It labels tasks, waits, and synchronization primitives like mvars and conditions, associating them with custom metadata. Functions record state transitions, counter updates, and expected resolutions to aid profiling and debugging of asynchronous workflows.",
      "description_length": 345,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MProf",
      "library": "mirage-profile",
      "description": "This module provides tracing and counter functionality for Lwt-based applications. It allows labeling of threads, tracking execution states, and managing named counters for metrics like request counts or resource usage. Use cases include debugging asynchronous workflows, analyzing performance bottlenecks, and monitoring runtime metrics in distributed systems.",
      "description_length": 361,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 449,
    "min_description_length": 279,
    "avg_description_length": 353.6,
    "embedding_file_size_mb": 0.07289791107177734
  }
}