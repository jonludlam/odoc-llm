{
  "package": "ask",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:32:11.868835",
  "modules": [
    {
      "module_path": "Ask.MariaDb.Questionnaire",
      "description": "Handles user interactions and state changes for questionnaires, including answering questions, adding new questions to templates, and managing asset answers. Operates on questionnaire models, event data, and question structures. Used to dynamically build and update questionnaires based on user input and template definitions.",
      "description_length": 326,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ask.Model.AnswerInput",
      "description": "Provides functions to serialize and deserialize data to and from JSON, pretty-print, convert to string, extract text, map MIME types to file extensions, and compare instances. Works with types such as UUIDs, filenames, sizes, MIME types, and structured answer data including text and assets. Used to process user input responses in a format suitable for storage, transmission, and validation.",
      "description_length": 392,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.Model.Event",
      "description": "Provides functions to serialize and deserialize events to and from JSON, format events for output, compare events for equality, and generate string representations. Works with event data structured around questionnaire and question identifiers. Used to handle event data in API responses and logging.",
      "description_length": 300,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.Model.Question",
      "description": "This module handles serialization, pretty printing, and equality checks for structured data, along with accessors for properties like UUID, label, and input validation. It operates on a type `t` containing fields such as `uuid`, `label`, `help_text`, and `text`, alongside validation logic for form inputs. Use cases include form data management, configuration settings, and ensuring consistent data representation across systems.",
      "description_length": 430,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.Model.QuestionAnswer",
      "description": "Provides operations to serialize and deserialize data using Yojson, pretty-print, compare, and convert to string. Works with a tuple type containing a question and an optional answer input. Filters out specific assets, updates answer inputs, and checks if answered questions can be submitted.",
      "description_length": 292,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.Model.Questionnaire",
      "description": "Provides operations to manage and manipulate a structured collection of questions and answers, including setting, retrieving, and validating question data. Works with a custom type `t` that encapsulates metadata like UUIDs, labels, and descriptions, along with associated question-answer pairs. Used to prepare a questionnaire for submission, convert to and from JSON, and ensure all required questions are answered.",
      "description_length": 416,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.Model",
      "description": "Combines serialization, deserialization, and comparison functions for structured data, including JSON handling, pretty printing, and string conversion. Supports types like UUIDs, filenames, MIME types, events, and question-answer pairs, with operations to filter, validate, and manipulate data. Enables processing of user responses, event logging, form management, and questionnaire validation. Examples include converting structured answers to JSON, checking if questions are answered, and generating human-readable event logs.",
      "description_length": 528,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.MariaDb",
      "description": "Manages dynamic questionnaire construction and modification through user input and template definitions, handling question answering, template updates, and asset management. Operates on questionnaire models, event data, and question structures to track and modify state. Supports adding new questions to existing templates and updating answers in real time. Enables interactive form generation where user responses influence subsequent question visibility and structure.",
      "description_length": 470,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask.Questionnaire",
      "description": "Handles user interactions and state changes for questionnaires, including answering questions, adding new questions to templates, and managing asset answers. Operates on questionnaire models, event structures, and question data types. Used to dynamically build and modify questionnaires based on user input and template definitions.",
      "description_length": 332,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ask",
      "description": "Handles creation, modification, and submission of questionnaires using MariaDB, with support for dynamic template rendering. Operates on structured data types such as question sets, responses, and templates. Enables interactive form generation for user input in applications like surveys or assessments.",
      "description_length": 303,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ask",
      "description": "manages dynamic questionnaire construction by processing user inputs, modifying templates, and handling asset-based answers. It works with questionnaire models, event structures, and question data types to enable real-time updates. Users can add questions, respond to existing ones, and adjust asset answers during interaction. This supports flexible, interactive form-building workflows.",
      "description_length": 388,
      "index": 10,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 528,
    "min_description_length": 292,
    "avg_description_length": 379.72727272727275,
    "embedding_file_size_mb": 0.04039573669433594
  }
}