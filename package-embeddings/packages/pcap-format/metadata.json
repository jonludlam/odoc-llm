{
  "package": "pcap-format",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:09.072471",
  "modules": [
    {
      "module_path": "Pcap.Network",
      "description": "Converts between a network protocol representation and 32-bit integers, supporting safe decoding from raw data. Operates on an opaque type representing the outermost network protocol in packet captures. Used to extract or construct protocol identifiers in network analysis tools.",
      "description_length": 279,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcap.LE",
      "description": "This module provides low-level operations for inspecting and modifying PCAP packet headers, including timestamp fields, length values, and raw data, through getter and setter functions tailored for `Cstruct.t` and `Buffer.t` structures. It enables detailed packet analysis by offering hexdumping capabilities and field size retrieval, supporting tasks like network traffic debugging or protocol validation. The functionality is designed for scenarios requiring direct manipulation of raw packet data in networking applications.",
      "description_length": 527,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcap.BE",
      "description": "This module provides low-level operations for manipulating PCAP file format structures, including reading and writing numeric fields with endianness handling, timestamp extraction, and length management within packet headers. It works with Cstruct.t buffers for packet data and Buffer.t for output, enabling tasks like hex dump generation. Specific use cases include network packet analysis, protocol inspection, and processing captured traffic for debugging or monitoring.",
      "description_length": 473,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "pcap-format",
      "description": "Encodes and decodes pcap file formats, handling byte order and automatic endianness detection. Processes raw packet data and timestamp information from network capture files. Used to parse and generate pcap files for network analysis and packet inspection tasks.",
      "description_length": 262,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcap",
      "description": "The module provides functions to read and write specific fields of pcap headers and packet data, focusing on numeric values such as timestamps, lengths, and version numbers within a Cstruct buffer. It includes targeted operations for modifying packet metadata like microseconds of timestamp, included length, and original length using 32-bit integers. This is particularly useful in network packet processing tasks requiring precise header manipulation or analysis.",
      "description_length": 465,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 527,
    "min_description_length": 262,
    "avg_description_length": 401.2,
    "embedding_file_size_mb": 0.01860523223876953
  }
}