{
  "package": "pcap-format",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:59:10.691826",
  "modules": [
    {
      "module_path": "Pcap.BE",
      "library": "pcap-format",
      "description": "This module provides direct access to big-endian PCAP header fields and packet metadata through operations that read/write magic numbers, timestamps, version identifiers, and network configuration values. It works with `Cstruct.t` buffers to represent binary data structures, enabling precise manipulation of packet headers and payloads. Typical use cases involve analyzing network traffic captures, converting big-endian PCAP data to host byte order, or constructing valid PCAP files for network protocol testing.",
      "description_length": 514,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcap.Network",
      "library": "pcap-format",
      "description": "This module defines the type `t` representing the outermost network protocol in captured frames, specifically supporting Ethernet and IEEE 802.11 protocols. It provides conversions between this type and `int32` values using `to_int32` and `of_int32`. This is used when handling raw packet data to correctly interpret or set the network layer protocol identifier.",
      "description_length": 362,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pcap.LE",
      "library": "pcap-format",
      "description": "This module provides low-level access to PCAP file and packet header fields through direct memory manipulation of `Cstruct.t` buffers, supporting operations like reading/writing magic numbers, timestamps, length fields, and metadata in little-endian format. It targets scenarios requiring precise packet crafting, capture parsing, or binary analysis, with integrated hexdump tools for inspecting structured data during development or debugging.",
      "description_length": 444,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcap",
      "library": "pcap-format",
      "description": "This module handles PCAP file and packet header parsing and construction, supporting direct manipulation of binary data via `Cstruct.t` buffers. It works with Ethernet and IEEE 802.11 network protocols, providing endian-specific access to header fields such as magic numbers, timestamps, and length values. Concrete use cases include reading and writing PCAP files, analyzing network captures, and crafting custom packet headers for protocol testing or binary analysis.",
      "description_length": 469,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 514,
    "min_description_length": 362,
    "avg_description_length": 447.25,
    "embedding_file_size_mb": 0.05836296081542969
  }
}