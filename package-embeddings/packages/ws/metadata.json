{
  "package": "ws",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:45.984442",
  "modules": [
    {
      "module_path": "Ws.Make.M_result.E",
      "description": "Converts exceptions into string values for error tracking. Operates on exception types and produces string representations. Used to log or display error messages in a consistent format.",
      "description_length": 185,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ws.Make.M_result",
      "description": "Encapsulates error handling by transforming exceptions into standardized string outputs, enabling consistent error reporting. It supports operations on exception types, generating human-readable messages for debugging or user feedback. Functions include mapping exceptions to strings and formatting error details. This allows developers to track issues reliably and present clear error information in logs or interfaces.",
      "description_length": 420,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ws.Make.F",
      "description": "Parses WebSocket frame headers, extracting the FIN bit, RSV bits, opcode, and length, while handling masked and unmasked data payloads. Processes byte sequences to extract plain or masked data, using specific byte buffers and offsets. Reads and writes complete frames to and from I/O channels, working with custom frame structures and byte-level data.",
      "description_length": 351,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ws.Make.M",
      "description": "Provides monadic operations for chaining computations, including binding, sequencing, and mapping over values wrapped in a context. Works with a parameterized type 'a t, supporting nested operations and lazy execution. Enables structured handling of asynchronous or effectful workflows, such as parsing or I/O, by composing transformations and managing side effects.",
      "description_length": 366,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ws.Make",
      "description": "Encapsulates effectful computations through a parameterized type 'a t, enabling chaining of operations like bind, map, and sequence to handle asynchronous or I/O tasks. Supports nested and lazy evaluations, allowing for structured composition of complex workflows. Users can transform and combine values within a context, such as parsing input or managing stateful operations. Examples include building pipelines for data processing or coordinating multiple I/O actions in a controlled manner.",
      "description_length": 493,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ws",
      "description": "Provides functions for creating and managing WebSocket connections using cohttp and Lwt, including handling handshake requests and message framing. Operates on HTTP request and response objects, socket streams, and binary or text message payloads. Used to implement real-time communication servers that support WebSocket protocol extensions.",
      "description_length": 341,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ws",
      "description": "Encapsulates effectful computations using a parameterized type 'a t, supporting operations like bind, map, and sequence to compose asynchronous or I/O tasks. It enables structured handling of nested and lazy evaluations, allowing transformations and combinations of values within a context. Users can construct data pipelines or manage stateful operations, such as parsing input or coordinating multiple I/O actions. Examples include chaining HTTP requests or processing streams with controlled side effects.",
      "description_length": 508,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 508,
    "min_description_length": 185,
    "avg_description_length": 380.57142857142856,
    "embedding_file_size_mb": 0.025859832763671875
  }
}