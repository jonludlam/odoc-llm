{
  "package": "alt-ergo",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 16,
  "creation_timestamp": "2025-07-15T23:10:01.880106",
  "modules": [
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex.Core_Simplex",
      "library": "FmSimplexPlugin",
      "description": "This module implements core simplex algorithm operations for solving linear programming problems, focusing on constraint manipulation, pivot selection, and tableau transformations. It works with symbolic expressions (`t2`), indexed equation lists, integer arrays for variable assignments, and queues for constraint management, supporting tasks like resource allocation optimization and bounded feasibility analysis. Key procedures include initialization, iterative pivoting, result extraction, and unsatisfiability detection, operating on mathematical models represented through hybrid symbolic-numeric data structures.",
      "description_length": 619,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex.C2",
      "library": "FmSimplexPlugin",
      "description": "This module implements arithmetic operations and comparisons for pairs of values, supporting addition, multiplication, division, and negation. It works with tuples of type `C.t * C.t`, providing concrete and abstract value handling, string representation, and zero/one checks. Useful for numerical computations requiring paired value manipulation, such as interval arithmetic or dual-number implementations.",
      "description_length": 407,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex_Q.Core_Simplex",
      "library": "FmSimplexPlugin",
      "description": "This module implements the simplex algorithm for solving linear programming problems over rational numbers, focusing on constraint solving and state transformation. It operates on a simplex tableau structure (`t2`), integer arrays for variable/constraint indices, and queues to manage constraint propagation, enabling operations like pivoting, variable substitution, and result extraction. Key use cases include solving linear systems with rational coefficients, detecting unsatisfiability or unboundedness, and optimizing objective functions through iterative tableau manipulation.",
      "description_length": 582,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex.D",
      "library": "FmSimplexPlugin",
      "description": "This module offers utilities for analyzing and transforming linear programming problems represented as simplex tableaus, focusing on operations like pretty-printing constraint matrices, generating problem reports, and managing auxiliary or compacted system states. It manipulates data structures such as variable mappings (`H.t`), integer arrays encoding system states, and specialized types (`sbt`, `t2`) to facilitate debugging, pivot selection, and tableau updates during optimization. These tools are particularly useful for preprocessing constraint systems, tracing algorithm behavior, and extracting structured results from simplex-based solvers.",
      "description_length": 652,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex_Q.D",
      "library": "FmSimplexPlugin",
      "description": "The module provides functions for pretty-printing linear systems, transforming problem structures (e.g., auxiliary or compacted formulations), and executing simplex operations like pivot selection and tableau manipulation. It works with data structures including simplex tableaus (`sbt`), tableau entries (`t2`), and arrays of indexed rational numbers representing constraints and solutions. These tools are specifically applied to solve integer linear programming problems by iteratively modifying tableaus and reporting results such as unsatisfiability or optimal maximization.",
      "description_length": 579,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex_Q.C2",
      "library": "FmSimplexPlugin",
      "description": "This module implements arithmetic operations on pairs of rational numbers, supporting addition, multiplication by a scalar, division by a scalar, and negation. It provides constants for zero and one, along with utilities to check for these values, convert to strings, and compare pairs. It is used to represent and manipulate intervals or coefficients in a simplex-based solver.",
      "description_length": 378,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex_Q.Normalizer",
      "library": "FmSimplexPlugin",
      "description": "This module normalizes and simplifies linear arithmetic expressions represented as arrays or lists of coefficient-variable pairs. It provides operations to create and manipulate simplex structures, perform substitutions, pivot variables, and normalize polynomials for solving constraints. Key use cases include transforming inequality systems into a canonical form, eliminating variables through substitution, and preparing linear problems for decision procedures.",
      "description_length": 464,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex_cache.MAKE.SM",
      "library": "FmSimplexPlugin",
      "description": "This module implements a polymorphic map structure with keys composed of rational numbers and integer maps, supporting associative operations like insertion, lookup, traversal, and filtering. It provides utilities for converting between maps and sequences/lists, enabling efficient memoization and caching in simplex-based solvers that require precise handling of structured keys. Functional transformations, structural manipulations, and comparison operations further support complex data management tasks in a purely functional paradigm.",
      "description_length": 539,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex.Normalizer",
      "library": "FmSimplexPlugin",
      "description": "This module implements normalization routines for simplex-based linear arithmetic solving. It operates on constraint systems represented as arrays and lists of coefficient-variable pairs, manipulating them through pivoting, substitution, and compaction. Key functions include normalizing polynomials and substitutions, solving zero constraints, and constructing compacted problem representations for efficient solving.",
      "description_length": 418,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FmSimplexPlugin.Simplex_cache.MAKE",
      "library": "FmSimplexPlugin",
      "description": "This module combines a caching mechanism for simplex computations with a polymorphic map structure to efficiently manage and retrieve precomputed results based on structured keys of rational numbers and integer maps. It supports operations like insertion, lookup, and filtering on map-like structures (`MI.t`, `MD.t`, `SM.t`) over `Q.t` and integer keys, tracking results of type `Simplex.result`. You can register constraint system results and check for cached equivalents to avoid redundant solver invocations, or transform and compare complex key-value structures in a purely functional way. Direct API functions interoperate with submodule utilities to enable memoization, traversal, and precise data manipulation tailored to simplex-based solvers.",
      "description_length": 752,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex_Q",
      "library": "FmSimplexPlugin",
      "description": "This module orchestrates the core simplex algorithm for solving linear programming problems over rational numbers, integrating constraint manipulation, tableau transformations, and arithmetic operations. It centers on data structures like the simplex tableau (`t2`, `sbt`), integer and rational arrays for coefficients, and index queues for constraint propagation, supporting pivoting, substitution, and bound management. With these tools, users can solve systems of linear inequalities, optimize rational objective functions, and detect unsatisfiability or unboundedness through iterative state transformations. Submodules handle arithmetic on coefficient pairs, pretty-printing, problem restructuring, and normalization, enabling end-to-end solving from input formulation to result extraction.",
      "description_length": 795,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Simplex",
      "library": "FmSimplexPlugin",
      "description": "This module implements a simplex-based solver for linear programming problems, combining core algorithmic operations with utilities for constraint manipulation, arithmetic on paired values, tableau analysis, and normalization. It operates on data structures such as lists of integer-coefficient pairs, symbolic expressions (`t2`), indexed equations, and integer arrays, offering key operations like pivot selection, constraint substitution, tableau transformation, and result extraction. The solver supports tasks like optimizing linear objectives, checking feasibility, and analyzing constraint systems through both direct solving and auxiliary analysis tools. Specific capabilities include solving resource allocation problems, performing interval arithmetic via paired value operations, generating tableau reports, and compacting constraint representations for efficient solving.",
      "description_length": 882,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex.Coef_Type",
      "library": "FmSimplexPlugin",
      "description": "This module defines rational number coefficients used in simplex algorithm implementations. It provides arithmetic operations like addition, subtraction, multiplication, and division, along with comparisons, string conversion, and constants for zero, one, and negative one. These operations support precise numerical computations required for constraint solving in formal verification tools.",
      "description_length": 391,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin.Simplex",
      "library": "FmSimplexPlugin",
      "description": "This module implements a simplex algorithm for solving linear programming problems over rational numbers, centered on manipulating constraints as arrays of coefficients and bounds with support for equality, inequality, and strict comparisons. It uses core data structures like the simplex tableau (`t2`, `sbt`), integer and rational arrays, and index queues to enable pivoting, bound management, and constraint propagation, allowing users to optimize linear objectives, check feasibility, and detect unsatisfiability or unboundedness. Submodules handle arithmetic on coefficient pairs, tableau transformations, problem restructuring, and rational number operations, providing utilities for tasks like resource allocation, interval analysis, and constraint normalization. Together, they support end-to-end solving\u2014from problem formulation to result extraction\u2014using precise rational arithmetic and symbolic representations.",
      "description_length": 922,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "FmSimplexPlugin.Simplex_cache",
      "library": "FmSimplexPlugin",
      "description": "This module integrates a cache for simplex computation results with polymorphic map structures keyed by rational numbers and integers, enabling efficient storage and retrieval of precomputed solver outcomes. It provides data types like `MI.t`, `MD.t`, and `SM.t` for managing constraint systems and tracking results of type `Simplex.result`, supporting operations such as insertion, lookup, filtering, and key transformation. You can register solutions to constraint systems, check for cached equivalents to avoid redundant computations, and manipulate complex key-value mappings in a functional manner. For example, it can memoize the results of simplex solver queries or compare integer and rational-keyed maps to detect equivalent constraint configurations.",
      "description_length": 760,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "FmSimplexPlugin",
      "library": "FmSimplexPlugin",
      "description": "This module provides a simplex-based solver for linear programming problems over rational numbers, featuring precise constraint manipulation and optimization capabilities through data structures like simplex tableaux, coefficient arrays, and index queues. It supports operations such as pivoting, bound management, constraint propagation, and result caching via polymorphic maps keyed by integers and rationals, enabling efficient solving and memoization of feasibility, unboundedness, and optimization queries. Users can formulate constraint systems, optimize linear objectives, detect unsatisfiability, and retrieve cached results for equivalent problems, with applications in resource allocation, interval analysis, and symbolic constraint solving. Specific examples include normalizing constraints, solving linear programs with exact arithmetic, and memoizing solver outcomes to avoid redundant computations.",
      "description_length": 912,
      "index": 15,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 18,
    "meaningful_modules": 16,
    "filtered_empty_modules": 2,
    "retention_rate": 0.8888888888888888
  },
  "statistics": {
    "max_description_length": 922,
    "min_description_length": 378,
    "avg_description_length": 628.25,
    "embedding_file_size_mb": 0.05854988098144531
  }
}