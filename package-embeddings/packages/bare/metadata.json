{
  "package": "bare",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:43:38.760768",
  "modules": [
    {
      "module_path": "Bare.Rule",
      "library": "bare",
      "description": "This module parses, transforms, and applies rule specifications that define pattern matching logic over fact streams. It supports operations to construct rules from strings or files, inspect rule components like left-hand and right-hand sides, and apply rules incrementally to facts, producing new facts when matches complete. It works with facts represented as S-expressions and rules that include variables and constraints, enabling use cases such as binary analysis pattern detection and stream-based rule triggering in a forward-chaining engine.",
      "description_length": 549,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bare",
      "library": "bare",
      "description": "This module implements a forward-chaining rule engine for matching and transforming streams of S-expression-based facts using non-linear patterns and variable binding. It processes rules defined as pairs of pattern lists (left-hand side) and output fact lists (right-hand side), applying them to input fact streams to derive new facts when all patterns match. It supports binary analysis tasks such as detecting memory allocation patterns or instruction sequences by matching complex, variable-driven rules against event streams.",
      "description_length": 529,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 549,
    "min_description_length": 529,
    "avg_description_length": 539.0,
    "embedding_file_size_mb": 0.029378890991210938
  }
}