{
  "package": "varint",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:55:15.808126",
  "modules": [
    {
      "module_path": "Varint.VarInt32",
      "library": "varint",
      "description": "This module encodes and decodes 32-bit integers using variable-length encoding. It operates on `int32` values, converting them to and from `Cstruct.t` and `Mstruct.t` for efficient serialization and deserialization. It is used when compact binary representation of 32-bit integers is required, such as in network protocols or binary file formats.",
      "description_length": 346,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Varint.LengthFieldPrefixing",
      "library": "varint",
      "description": "Encodes and decodes byte buffers with a variable-length integer (VarInt) prefix indicating the payload length. Works directly with `Cstruct.t` for encoding and `Mstruct.t` for decoding. Useful for framing messages in network protocols or binary formats where length-prefixed chunks are required.",
      "description_length": 295,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Varint.VarInt64",
      "library": "varint",
      "description": "This module encodes and decodes 64-bit integers using variable-length encoding. It operates on `int64` values, converting them to and from `Cstruct.t` and `Mstruct.t` for efficient serialization and deserialization. Use it when working with compact binary representations of 64-bit integers in network protocols or file formats.",
      "description_length": 328,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Varint",
      "library": "varint",
      "description": "This module implements variable-length integer encoding and decoding for 32-bit and 64-bit integers, operating on `int32` and `int64` values with conversion to and from `Cstruct.t` and `Mstruct.t`. It supports length-prefixed buffer encoding and decoding, specifically for compact binary serialization in network protocols and binary file formats. Use cases include encoding integers in a space-efficient way for transmission or storage, and parsing length-prefixed message chunks in streaming data protocols.",
      "description_length": 509,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 509,
    "min_description_length": 295,
    "avg_description_length": 369.5,
    "embedding_file_size_mb": 0.05833244323730469
  }
}