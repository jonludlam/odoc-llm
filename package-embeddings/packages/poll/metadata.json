{
  "package": "poll",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:59:16.407604",
  "modules": [
    {
      "module_path": "Poll.Backend",
      "library": "poll",
      "description": "This module defines backend implementations for handling I/O multiplexing events, supporting platforms like Kqueue, Epoll, and Wepoll. It provides constructors and pattern matching capabilities to work with different event notification mechanisms. Concrete use cases include selecting and managing platform-specific event loops in network servers or asynchronous I/O applications.",
      "description_length": 380,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Poll.Poll_intf",
      "library": "poll",
      "description": "Defines a polymorphic interface for managing timed events with customizable clocks and scheduling. Supports operations to create, wait on, and cancel alarms, as well as track deadlines and timeouts. Designed for use with monotonic time representations and cooperative concurrency systems.",
      "description_length": 288,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Poll.Timeout",
      "library": "poll",
      "description": "This module defines timeouts for polling operations using an abstract time unit in nanoseconds. It provides constructors for immediate, indefinite, and timed timeouts. Used to specify duration constraints in asynchronous polling scenarios.",
      "description_length": 239,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Poll.Event",
      "library": "poll",
      "description": "This module defines a basic event type with `readable` and `writable` boolean fields to represent I/O event states. It provides predefined event combinations like `read`, `write`, `read_write`, and `none` for use in polling operations. These values are used to specify desired event types when monitoring file descriptors for input or output readiness.",
      "description_length": 352,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Poll",
      "library": "poll",
      "description": "This module implements a polling mechanism for monitoring I/O events on file descriptors using platform-specific backends like Kqueue, Epoll, or Wepoll. It allows setting events of interest on file descriptors, waiting for readiness with optional timeouts, and iterating over triggered events. Concrete use cases include building network servers that need to efficiently manage multiple connections or implementing custom event loops for asynchronous I/O operations.",
      "description_length": 466,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 466,
    "min_description_length": 239,
    "avg_description_length": 345.0,
    "embedding_file_size_mb": 0.07289314270019531
  }
}