{
  "package": "nacc",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:52:37.830943",
  "modules": [
    {
      "module_path": "Libnacc.Parsing",
      "library": "nacc",
      "description": "This module provides parser combinator operations for constructing and composing parsers that process string inputs while maintaining state with position, line number, and remaining input tracking. It supports recursive parsing, operator chaining (left/right associative via `chainl`/`chainr`), and input handling from strings or files through functions like `do_parse` and `do_parse_from_file`. These capabilities enable use cases such as parsing arithmetic expressions, structured text formats, and domain-specific languages with precise error reporting and input source tracing.",
      "description_length": 581,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Libnacc.Parsers",
      "library": "nacc",
      "description": "This module implements parsers for character-based input, handling individual characters, numeric literals, and structured expressions. It supports parsing binary operations, parenthesized content, and whitespace-sensitive constructs. Use it to build lexers and parsers for domain-specific languages, arithmetic expressions, or structured text formats.",
      "description_length": 352,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Libnacc",
      "library": "nacc",
      "description": "This module provides character-based parsing operations for building lexers and parsers that handle arithmetic expressions, structured text, and domain-specific languages. It works with string inputs and tracks parsing state including position, line numbers, and remaining input. Concrete use cases include parsing numeric literals, binary operations, parenthesized expressions, and whitespace-sensitive constructs using combinators like `chainl` and `chainr`.",
      "description_length": 460,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 581,
    "min_description_length": 352,
    "avg_description_length": 464.3333333333333,
    "embedding_file_size_mb": 0.04390907287597656
  }
}