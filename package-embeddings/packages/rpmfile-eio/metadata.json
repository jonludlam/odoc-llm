{
  "package": "rpmfile-eio",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:30:24.575805",
  "modules": [
    {
      "module_path": "Rpmfile_eio.Reader.Make",
      "description": "Selects HTML header tags based on a numeric level, returning true for matching elements. Identifies signature tags using an integer identifier, filtering elements accordingly. Used to parse and categorize structured document content during preprocessing.",
      "description_length": 254,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpmfile_eio.P.R",
      "description": "provides buffered input and parsing capabilities through a set of specialized modules. it includes data types for managing input streams and operations for reading and processing structured data. functions enable efficient handling of large inputs and custom parsing logic. examples include reading from files, parsing CSV data, and processing log entries.",
      "description_length": 356,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpmfile_eio.P",
      "description": "provides buffered input and parsing capabilities through specialized data types and operations for managing and processing structured data. it supports reading from files, parsing CSV data, and handling log entries with efficient, custom parsing logic. key data types include input stream managers and parser state structures. operations include reading, tokenizing, and transforming input data in a controlled manner.",
      "description_length": 418,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpmfile_eio.Reader",
      "description": "Provides functions to read and parse RPM file metadata from a flow, with control over initial and maximum buffer sizes. Operates on Eio.Flow.source and returns a result containing metadata or an error string. Used to efficiently process RPM files in streaming I/O contexts.",
      "description_length": 273,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "rpmfile-eio",
      "description": "Provides functions to extract specific metadata fields from RPM packages, including package name, version, and installation date. Works with binary RPM file data and structured metadata records parsed from the file header. Used to inspect package details during system auditing or dependency resolution.",
      "description_length": 303,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Rpmfile_eio",
      "description": "reads and processes RPM metadata using Eio-based streaming I/O, with control over buffer sizes and error handling. it includes input stream managers, parser state structures, and functions to parse structured data like CSV and log entries. operations include reading, tokenizing, and transforming data from flows or files. examples include extracting package details from RPM files or parsing log entries with custom logic.",
      "description_length": 423,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 6,
    "filtered_empty_modules": 3,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 423,
    "min_description_length": 254,
    "avg_description_length": 337.8333333333333,
    "embedding_file_size_mb": 0.022233963012695312
  }
}