{
  "package": "tyxml-ppx",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:55.605797",
  "modules": [
    {
      "module_path": "tyxml-ppx",
      "description": "Generates and manipulates HTML5 and SVG elements using a type-safe approach, supporting both standard HTML syntax and JSX through PPX. It works with custom element types, attributes, and event handlers, ensuring structural correctness at compile time. Used to construct dynamic web content with guaranteed valid markup in OCaml applications.",
      "description_length": 341,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tyxml_ppx",
      "description": "Converts HTML or SVG markup embedded in OCaml code into TyXML expressions, expands expressions and structure items with custom attributes, and processes location-aware syntax trees. Works with OCaml's ppxlib types such as expressions, location data, and value bindings. Used to integrate domain-specific markup directly into OCaml programs for web-related tasks.",
      "description_length": 362,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tyxml_ppx_register",
      "description": "Provides functions to generate ppx extension points for embedding HTML literals, accepting a string and a language tag to produce extension definitions. Works with Tyxml_ppx.lang and Ppxlib.Extension.t to customize syntax transformations. Used to register custom syntax for inline HTML elements in OCaml code.",
      "description_length": 309,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 362,
    "min_description_length": 309,
    "avg_description_length": 337.3333333333333,
    "embedding_file_size_mb": 0.01131439208984375
  }
}