{
  "package": "tyxml-ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:48:37.115873",
  "modules": [
    {
      "module_path": "Tyxml_ppx_register",
      "library": "tyxml_ppx_register",
      "description": "This module provides functions to expand string literals into Tyxml expressions using PPX extensions. It processes string content according to specified languages (e.g., HTML or SVG) and generates corresponding AST nodes during compilation. It is used to embed XML-like syntax directly in OCaml code, enabling type-safe markup generation.",
      "description_length": 338,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tyxml_ppx",
      "library": "tyxml-ppx.internal",
      "description": "This module processes TyXML markup syntax extensions, converting HTML or SVG literals into corresponding OCaml expressions. It operates on abstract syntax tree nodes from the Ppxlib library, using location and path information to generate properly scoped code. Concrete use cases include embedding HTML or SVG directly in OCaml source files, enabling type-safe template authoring within applications like web servers or GUI tools.",
      "description_length": 430,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 430,
    "min_description_length": 338,
    "avg_description_length": 384.0,
    "embedding_file_size_mb": 0.029364585876464844
  }
}