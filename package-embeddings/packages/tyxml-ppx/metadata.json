{
  "package": "tyxml-ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:26.702145",
  "modules": [
    {
      "module_path": "Tyxml_ppx_register",
      "library": "tyxml_ppx_register",
      "description": "This module defines functions for expanding string literals into XML or HTML expressions using PPX extensions. It processes string inputs according to a specified language (like XML or HTML) and generates corresponding extension nodes for OCaml syntax trees. It is used to embed XML or HTML directly in OCaml code as typed values.",
      "description_length": 330,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tyxml_ppx",
      "library": "tyxml-ppx.internal",
      "description": "This module processes TyXML markup syntax extensions, converting HTML or SVG literals into corresponding OCaml expressions. It operates on abstract syntax tree elements like expressions and structure items, using location and path information to resolve bindings. Concrete use cases include embedding HTML or SVG directly in OCaml code, enabling type-safe template generation and static markup validation.",
      "description_length": 405,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 405,
    "min_description_length": 330,
    "avg_description_length": 367.5,
    "embedding_file_size_mb": 0.0076999664306640625
  }
}