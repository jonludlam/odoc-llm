{
  "package": "github-data",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:57:07.545766",
  "modules": [
    {
      "module_path": "Github_json.Adapter",
      "library": "github-data",
      "description": "This module handles parsing and transforming GitHub webhook JSON payloads into typed OCaml structures. It includes functions to decode and validate JSON data for specific event types such as issues, pull requests, and comments. Concrete use cases include processing GitHub webhook events for CI/CD pipelines, issue tracking systems, and automated code review tools.",
      "description_length": 365,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Github_json",
      "library": "github-data",
      "description": "This module provides functions to parse and transform GitHub webhook JSON payloads into typed OCaml structures. It supports decoding and validating JSON data for specific event types like issues, pull requests, and comments. Use cases include processing GitHub webhook events in CI/CD pipelines, issue tracking systems, and automated code review tools.",
      "description_length": 352,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Github_t",
      "library": "github-data",
      "description": "This module provides structured data models for GitHub API interactions, focusing on serialization and deserialization of resources like repositories, issues, pull requests, commits, and events. It supports operations such as parsing API responses, handling webhook payloads, tracking repository state changes, and managing CI/CD workflows through detailed type definitions for entities, metadata, and event streams. Specific use cases include automating issue tracking, analyzing contribution statistics, validating check suite statuses, and configuring repository permissions via GitHub's API.",
      "description_length": 595,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Github_j",
      "library": "github-data",
      "description": "The module provides JSON serialization and deserialization functions for GitHub API data structures, enabling conversion between OCaml values and JSON payloads used in API requests and responses. It defines types representing GitHub resources like issues, pull requests, repositories, events, milestones, labels, teams, and organizations, along with metadata such as commit statuses, user activity, and repository configuration. These types support handling webhook events, parsing API responses, and managing resource updates (e.g., creating issues, modifying milestones, or tracking deployment keys) with structured, type-safe representations of GitHub's REST API data.",
      "description_length": 671,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 671,
    "min_description_length": 352,
    "avg_description_length": 495.75,
    "embedding_file_size_mb": 0.05833721160888672
  }
}