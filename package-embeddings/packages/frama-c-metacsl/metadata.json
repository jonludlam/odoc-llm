{
  "package": "frama-c-metacsl",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:29:31.820904",
  "modules": [
    {
      "module_path": "MetAcsl.Meta_utils.StrSet",
      "description": "The module offers set operations like union, intersection, and element retrieval, along with traversal and transformation functions for ordered processing of elements. It works with structured collections, enabling tasks such as validating configurations through presence checks or filtering data via predicates. Specific use cases include managing ordered string sequences and dynamically modifying sets during data processing workflows.",
      "description_length": 438,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MetAcsl.Meta_run",
      "description": "Translates program semantics by applying symbolic execution and constraint generation, handling function calls and memory assignments. It operates on Frama_c_kernel.Project.t and manipulates sets of kernel functions and string-based targets. Used to instrument code for verification, track assertions, and manage static analysis contexts.",
      "description_length": 338,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MetAcsl.Meta_utils",
      "description": "Provides set operations such as union, intersection, and element retrieval, along with traversal and transformation functions for ordered processing. It handles structured collections, supporting tasks like configuration validation and data filtering using predicates. Operations work on ordered sequences, enabling dynamic modifications during processing. Examples include managing ordered string sets and refining data through conditional transformations.",
      "description_length": 457,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "frama-c-metacsl",
      "description": "Provides functions to parse and validate meta-properties in ACSL annotations, including checks for memory constraints and function set relationships. Works with abstract syntax trees and custom property representations derived from Frama-C's internal data structures. Enables precise specification of cross-function invariants and memory safety rules in formal verification workflows.",
      "description_length": 384,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MetAcsl",
      "description": "Processes program semantics through symbolic execution and constraint generation, manipulating kernel project structures and tracking assertions. Supports set operations like union and intersection on ordered sequences, enabling dynamic data filtering and transformation. Can manage configuration sets, refine data with predicates, and instrument code for verification. Handles function calls, memory assignments, and static analysis contexts with structured data processing.",
      "description_length": 475,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 475,
    "min_description_length": 338,
    "avg_description_length": 418.4,
    "embedding_file_size_mb": 0.01861572265625
  }
}