{
  "package": "frama-c-metacsl",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:50:52.000236",
  "modules": [
    {
      "module_path": "MetAcsl.Meta_utils.StrSet",
      "library": "frama-c-metacsl.core",
      "description": "This module implements an ordered collection type for managing immutable string sets with efficient membership queries, element insertion/removal, and set algebra operations. It leverages lexicographical ordering to enable ordered traversals, extremum retrieval, and comparison-based transformations while supporting bulk conversions to and from lists and sequences. Typical applications include maintaining unique string collections with sorted access patterns, performing set-based data analysis, and handling bulk updates through sequence operations.",
      "description_length": 553,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MetAcsl.Meta_utils",
      "library": "frama-c-metacsl.core",
      "description": "This module provides operations for creating and manipulating ordered string sets, including membership testing, insertion, removal, union, intersection, and difference. It works with immutable sets of strings ordered lexicographically, enabling efficient traversal, comparison, and transformation. Concrete use cases include tracking unique identifiers with sorted access, performing set-based analysis on string data, and handling bulk sequence updates in parsing or static analysis tasks.",
      "description_length": 491,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MetAcsl.Meta_run",
      "library": "frama-c-metacsl.core",
      "description": "Translates a project into a new version with modified assertions and bindings. It applies transformations to functions and assertions, supporting selective checking, simplification, and renaming. This module is used to adapt code for analysis under different verification contexts, such as generating instrumented code for runtime checking or static analysis.",
      "description_length": 359,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MetAcsl",
      "library": "frama-c-metacsl.core",
      "description": "Meta_run transforms code by modifying assertions and bindings, enabling selective checking, simplification, and renaming of functions and assertions for different verification contexts. Meta_utils manipulates ordered string sets with operations like union, intersection, and difference, supporting efficient sorted access and set-based analysis. These modules handle code adaptation and string set processing for static analysis, instrumentation, and parsing tasks.",
      "description_length": 465,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 553,
    "min_description_length": 359,
    "avg_description_length": 467.0,
    "embedding_file_size_mb": 0.05841541290283203
  }
}