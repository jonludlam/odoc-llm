{
  "package": "bap-bundle",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 8,
  "creation_timestamp": "2025-06-18T16:30:53.568186",
  "modules": [
    {
      "module_path": "Bap_bundle.Std.Manifest.Fields.Direct",
      "description": "Provides functions to process and transform fields of a structured data type, including iterating over, folding, checking conditions, and mapping values. Operates on a type `t` containing string, list, and optional fields, such as name, version, date, and dependencies. Used to validate metadata, generate lists of attributes, or modify fields in a controlled manner.",
      "description_length": 367,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_bundle.Std.Manifest.Fields",
      "description": "Processes and transforms structured data fields, supporting iteration, folding, condition checks, and value mapping over a type `t` that includes strings, lists, and optional values. Key operations include validating metadata, generating attribute lists, and modifying fields programmatically. Examples include extracting dependency lists, checking for missing fields, or normalizing string values. Works with data structures containing fields like name, version, date, and dependencies.",
      "description_length": 487,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_bundle.Std.Bundle.Builder",
      "description": "Inserts files and data into a bundle, allowing for named storage and manifest embedding. Operates on URIs and strings, building a structured bundle incrementally. Finalizes the bundle and writes it to a specified output URI.",
      "description_length": 224,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bap_bundle.Std.Manifest",
      "description": "encapsulates metadata processing by enabling field manipulation, validation, and transformation across diverse data types. It supports operations like iteration, folding, and conditional checks on structures containing strings, lists, and options. Users can extract dependency lists, verify field completeness, or normalize values such as version strings. Examples include generating attribute summaries or ensuring required fields are present in a structured record.",
      "description_length": 467,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_bundle.Std.Bundle",
      "description": "manages program data through named storage and manifest embedding, using URIs and strings to build and finalize structured bundles. It supports incremental construction and output writing, enabling precise control over bundle contents. Operations include inserting files, managing manifests, and exporting to a specified URI. For example, it can store a binary with a label, embed its metadata, and write the bundle to a file.",
      "description_length": 426,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_bundle.Std",
      "description": "handles metadata and program data management by enabling field manipulation, validation, and structured storage. It works with strings, lists, options, and URIs to process and organize data, supporting operations like extracting dependencies, normalizing values, and embedding metadata. It allows building bundles by inserting files, managing manifests, and exporting to a specified location. Users can generate summaries, ensure field completeness, or store labeled binaries with associated metadata.",
      "description_length": 501,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "bap-bundle",
      "description": "Provides functions to parse, manipulate, and serialize BAP bundle files, including loading sections, extracting symbols, and generating binary representations. Operates on custom data types such as bundle headers, section records, and symbol tables. Used to integrate low-level binary data into analysis pipelines and toolchains.",
      "description_length": 329,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_bundle",
      "description": "manages metadata and program data through field manipulation, validation, and structured storage, using strings, lists, options, and URIs. It supports extracting dependencies, normalizing values, and embedding metadata while enabling the creation of bundles via file insertion, manifest management, and export. Users can generate summaries, verify field completeness, or store labeled binaries with associated metadata. Operations include validating data integrity, organizing files, and generating structured outputs.",
      "description_length": 518,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 518,
    "min_description_length": 224,
    "avg_description_length": 414.875,
    "embedding_file_size_mb": 0.029451370239257812
  }
}