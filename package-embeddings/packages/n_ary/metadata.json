{
  "package": "n_ary",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:34:24.063182",
  "modules": [
    {
      "module_path": "N_ary.Enum3",
      "description": "Provides comparison, equality, hashing, and conversion functions for a three-case enumeration type. Works with the `t` type, which represents one of three distinct values, each associated with an integer. Used to safely convert between integer representations and enumeration cases, and to check case membership.",
      "description_length": 312,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "N_ary.Tuple3",
      "description": "Provides comparison, equality checks, hashing, and S-expression conversion for triples of values. Works with tuples of three distinct types, offering accessors and mutators for individual components. Enables transformation of each element in a triple through mapping functions.",
      "description_length": 277,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "N_ary.Variant3",
      "description": "This module provides functions for comparing, checking equality, hashing, serializing, and transforming values of a three-variant type, enabling case-specific operations and inspections. It works with a parameterized variant type that encapsulates three distinct data forms, each associated with a unique constructor. Use cases include handling polymorphic data encodings, such as representing different data formats or state transitions requiring three distinct branches.",
      "description_length": 472,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "N_ary.List3",
      "description": "Processes three lists in parallel or transforms them into grouped structures. Operates on lists of arbitrary elements and tuples of three elements. Splits elements into three separate lists based on a predicate, combines three lists into tuples, or applies functions across three lists simultaneously.",
      "description_length": 301,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "n_ary",
      "description": "Provides operations for constructing and traversing n-ary trees, including node creation, depth-first search, and subtree extraction. Works with tree nodes represented as recursive records containing a value and a list of children. Used to parse and analyze hierarchical data structures such as XML documents or abstract syntax trees.",
      "description_length": 334,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "N_ary",
      "description": "Provides operations for handling three-case enumerations, triples of values, and parallel list processing. Features include converting between integers and enumeration cases, comparing and hashing tuples, and transforming or grouping three lists. Supports case-specific logic for variant types and enables element-wise manipulation of triplets. Examples include safely converting integer codes to enum values, combining three lists into tuples, and applying functions across three parallel lists.",
      "description_length": 496,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 63,
    "meaningful_modules": 6,
    "filtered_empty_modules": 57,
    "retention_rate": 0.09523809523809523
  },
  "statistics": {
    "max_description_length": 496,
    "min_description_length": 277,
    "avg_description_length": 365.3333333333333,
    "embedding_file_size_mb": 0.022222518920898438
  }
}