{
  "package": "n_ary",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:58:35.234484",
  "modules": [
    {
      "module_path": "N_ary.List3",
      "library": "n_ary",
      "description": "This module provides operations for partitioning, zipping, and unzipping lists of three elements. It handles data types such as lists of tuples and variant types to categorize elements into three distinct groups. Concrete use cases include transforming a list of results into separate success, warning, and error lists, or combining three parallel lists into a list of triples.",
      "description_length": 377,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "N_ary.Enum3",
      "library": "n_ary",
      "description": "This module defines an enumerated type with three distinct cases, each mapped to a consecutive integer starting from zero. It provides direct access to each case as a value, predicates to check case identity, and conversions between cases and integers. Concrete use cases include modeling tri-state logic, finite state machines with three states, or tagged values requiring explicit case handling.",
      "description_length": 397,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "N_ary.Tuple3",
      "library": "n_ary",
      "description": "This module implements a tuple type holding three distinct values with accessors, functional updates, and transformations for each position. It supports comparison, equality checks, hashing, and S-expression conversion through customizable functions for each element. Direct use cases include modeling three-component values like 3D coordinates, RGB color channels, or triple-key identifiers with independent manipulation of each component.",
      "description_length": 440,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "N_ary.Variant3",
      "library": "n_ary",
      "description": "This module implements a sum type with three distinct cases, each holding a single value of potentially different types. It provides constructors to create values for each case, predicates to check which case a value belongs to, and accessors to retrieve the contained values, with or without raising exceptions. Functions for mapping over the contents of each case and utilities for comparison, equality, and hashing are also included, enabling use in collections and persistent data structures.",
      "description_length": 496,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "N_ary",
      "library": "n_ary",
      "description": "This module provides precise operations for handling three distinct cases in enumerations, fixed-size tuples, sum types, and list manipulations. It works with enumerated values, three-element tuples, variant types with three cases, and lists partitioned into three groups. Use cases include modeling tri-state logic, manipulating 3D coordinates, handling tagged values with different types, and transforming lists of results into categorized groups.",
      "description_length": 449,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 5,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8333333333333334
  },
  "statistics": {
    "max_description_length": 496,
    "min_description_length": 377,
    "avg_description_length": 431.8,
    "embedding_file_size_mb": 0.07288646697998047
  }
}