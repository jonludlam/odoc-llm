{
  "package": "memcpy",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:03:57.810461",
  "modules": [
    {
      "module_path": "Memcpy",
      "library": "memcpy",
      "description": "This module implements efficient, type-safe memory copying between different memory representations such as OCaml bytes, bigarrays, Ctypes pointers, and C arrays. It provides direct operations for copying regions of memory with optional offsets, supporting both safe and unsafe modes. Concrete use cases include transferring data between OCaml-managed memory and C-allocated structures, optimizing bulk data movement in systems programming, and interfacing with external libraries requiring raw memory manipulation.",
      "description_length": 515,
      "index": 0,
      "embedding_norm": 0.9999998807907104
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 515,
    "min_description_length": 515,
    "avg_description_length": 515.0,
    "embedding_file_size_mb": 0.004061698913574219
  }
}