{
  "package": "urn",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:56.917574",
  "modules": [
    {
      "module_path": "Urn.Make",
      "description": "Provides a total ordering for weights, addition and subtraction operations that follow algebraic properties, and a sampling function to generate values within a weight range. Works with a custom type `t` representing weights. Used to manage and manipulate numerical weights in probabilistic algorithms or resource allocation systems.",
      "description_length": 333,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Urn.IntWeight",
      "description": "Provides operations for comparing, adding, subtracting, and sampling integer weights. Works with the int type to perform arithmetic and random selection. Used to generate random indices within a specified range based on weight values.",
      "description_length": 234,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Urn.FloatWeight",
      "description": "Provides operations for comparing, adding, subtracting, and sampling float-weighted values. Works with the float type to represent and manipulate weights. Used to generate random floats within a specified range based on a given weight.",
      "description_length": 235,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "urn",
      "description": "Provides operations for building and sampling from an urn structure, including inserting elements, removing elements, and drawing samples with uniform probability. Works with immutable lists and trees to maintain persistence and efficiency. Used to implement probabilistic algorithms requiring repeated random selection without replacement.",
      "description_length": 340,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Urn",
      "description": "Provides operations to construct and modify weighted collections, including adding elements with specific weights, sampling elements proportionally to their weights, and updating or removing elements. Works with a custom `weight` type and a polymorphic `t` type representing the urn structure. Used for scenarios like probabilistic selection, dynamic weight adjustments, and maintaining weighted distributions.",
      "description_length": 410,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 410,
    "min_description_length": 234,
    "avg_description_length": 310.4,
    "embedding_file_size_mb": 0.01861095428466797
  }
}