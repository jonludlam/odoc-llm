{
  "package": "xxhash",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:55:27.902851",
  "modules": [
    {
      "module_path": "XXHash.XXH64",
      "library": "xxhash",
      "description": "This module computes 64-bit xxHash digests of arbitrary byte sequences. It supports both one-shot hashing of strings and incremental updates to a hash state, enabling efficient hashing of streaming or fragmented data. Typical use cases include checksumming large files in chunks, verifying data integrity in network protocols, or generating unique identifiers for binary payloads.",
      "description_length": 380,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "XXHash.XXH32",
      "library": "xxhash",
      "description": "This module implements the XXH32 hash algorithm, providing functions to compute 32-bit hashes from input strings. It supports both one-shot hashing with `hash` and streaming operations using `update` and `digest` on a state object. Use cases include checksumming large data streams, generating fast hash values for integrity verification, and incremental hashing of concatenated inputs.",
      "description_length": 386,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "XXHash",
      "library": "xxhash",
      "description": "This module implements the XXH32 and XXH64 hash algorithms, offering one-shot and streaming hashing operations for 32-bit and 64-bit hash values. It works with strings and byte sequences, supporting incremental updates for large or fragmented data. Concrete use cases include checksumming data streams, verifying integrity in network protocols, and generating identifiers for binary payloads.",
      "description_length": 392,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 392,
    "min_description_length": 380,
    "avg_description_length": 386.0,
    "embedding_file_size_mb": 0.04386329650878906
  }
}