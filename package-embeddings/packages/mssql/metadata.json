{
  "package": "mssql",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:53.909239",
  "modules": [
    {
      "module_path": "Mssql.Error",
      "library": "mssql",
      "description": "This module defines an exception type that captures detailed error information including source code position, query context, parameters, and results. It provides functions to raise formatted exceptions and wrap existing exceptions with additional context. Useful for handling and propagating database errors with rich diagnostic information.",
      "description_length": 342,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mssql.Param",
      "library": "mssql",
      "description": "This module defines a polymorphic type `t` for representing SQL parameters, including atomic types like integers, floats, strings, and dates, as well as nested arrays of parameters. It provides functions to convert between these values and their string or escaped SQL representations, along with typed accessors for extracting specific value types from a parameter. It is used to safely pass parameters to SQL queries, preventing SQL injection by avoiding raw string formatting.",
      "description_length": 478,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mssql.Row",
      "library": "mssql",
      "description": "This module enables type-safe retrieval and conversion of SQL row values by column name, supporting typed outputs such as integers, floats, strings, Core.Date.t, and Core.Time.t. It provides both safe (`option`-returning) and unsafe (`exn`-raising) variants to handle nulls and missing columns explicitly. Use cases include extracting structured data from SQL query results where precise null or schema validation is required.",
      "description_length": 426,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mssql",
      "library": "mssql",
      "description": "This module connects to a Microsoft SQL Server database and executes parameterized SQL queries, supporting operations like mapping, folding, and iterating over rows, as well as transactions with scoped helpers. It handles type-safe parameters through a polymorphic type that prevents SQL injection and enables safe conversion to SQL representations, while providing rich error handling with detailed diagnostic context including query parameters and source positions. It supports structured extraction of row values by column name with typed accessors for handling nulls and schema validation explicitly. Example uses include querying tables, running stored procedures, and performing bulk inserts with transactional guarantees and precise error reporting.",
      "description_length": 756,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 756,
    "min_description_length": 342,
    "avg_description_length": 500.5,
    "embedding_file_size_mb": 0.014957427978515625
  }
}