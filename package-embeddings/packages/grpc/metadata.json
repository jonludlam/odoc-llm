{
  "package": "grpc",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:34.710683",
  "modules": [
    {
      "module_path": "Grpc.Server",
      "description": "Provides functions to create and manage a server instance, route HTTP requests to registered services, and add new services with specific names. Operates with H2.Reqd.t for request handling and a server type t that encapsulates service mappings. Used to dynamically register endpoints and process incoming HTTP/2 requests based on defined routes.",
      "description_length": 346,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Grpc.Status",
      "description": "Provides functions to convert between status codes and integers, format codes for output, and create or extract status objects with associated messages. Works with `code` and `t` types, where `t` encapsulates a status code and optional message. Used to handle gRPC status responses, validate headers, and generate human-readable representations.",
      "description_length": 345,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Grpc.Message",
      "description": "Encodes strings into gRPC messages and extracts them from buffer structures. Processes individual and multiple messages, handling partial or incomplete data. Used to parse incoming network data into structured message payloads.",
      "description_length": 227,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Grpc.Buffer",
      "description": "Provides operations to manage and manipulate a buffer's content, including copying data from a Bigstringaf, extracting substrings, and reading numeric values in specific endianness. Works with a custom type `t` that represents a buffer of bytes, supporting conversions to strings and bytes. Used to efficiently handle binary data, such as parsing network packets or processing file contents.",
      "description_length": 391,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "grpc",
      "description": "Provides functions for establishing HTTP/2 connections, encoding and decoding protocol buffers, and handling various RPC styles including unary, server streaming, client streaming, and bidirectional communication. Operates on byte sequences, protocol buffer messages, and connection state objects. Used to build efficient, low-level gRPC clients and servers within OCaml applications.",
      "description_length": 384,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Grpc",
      "description": "manages gRPC server operations, message encoding, status handling, and buffer manipulation. It includes server types for routing requests, status types for error communication, message encoders for parsing data, and buffer types for binary processing. Functions allow dynamic endpoint registration, status code conversion, message extraction from buffers, and efficient data manipulation. Examples include handling HTTP/2 requests, generating error responses, parsing network payloads, and reading binary values from memory.",
      "description_length": 524,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 524,
    "min_description_length": 227,
    "avg_description_length": 369.5,
    "embedding_file_size_mb": 0.02220916748046875
  }
}