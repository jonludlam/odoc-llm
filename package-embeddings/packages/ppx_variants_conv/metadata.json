{
  "package": "ppx_variants_conv",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1,
  "creation_timestamp": "2025-08-14T22:47:40.342739",
  "modules": [
    {
      "module_path": "Ppx_variants_conv",
      "library": "ppx_variants_conv",
      "description": "This module generates efficient traversal and transformation functions for variant types, enabling operations like mapping, folding, and iterating over all constructors. It works directly with algebraic data types defined in OCaml, producing optimized code for each specific variant structure. Use it to automatically derive boilerplate code for processing variants without runtime overhead.",
      "description_length": 391,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 391,
    "min_description_length": 391,
    "avg_description_length": 391.0,
    "embedding_file_size_mb": 0.014889717102050781
  }
}