{
  "package": "tezt-performance-regression",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:40.020920",
  "modules": [
    {
      "module_path": "Tezt_performance_regression.Long_test.Stats",
      "library": "tezt-performance-regression",
      "description": "This module defines statistical operations for performance regression testing, including mean, median, and standard deviation calculations. It works with float values and supports combining multiple statistics into tuples using Cartesian products. These functions are used to analyze historical performance data retrieved via `get_previous_stats` for regression detection.",
      "description_length": 372,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tezt_performance_regression.Statistics",
      "library": "tezt-performance-regression",
      "description": "This module computes statistical measures such as mean, median, and standard deviation from lists of floating-point numbers. It operates directly on float lists to derive these metrics. Use it to analyze numerical datasets for performance regression testing, such as benchmark results or timing measurements.",
      "description_length": 308,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tezt_performance_regression.Long_test",
      "library": "tezt-performance-regression",
      "description": "This module orchestrates the registration and evaluation of long-running performance tests by integrating statistical analysis, historical data comparison, and asynchronous execution. It centers around configuration records, time-series queries, and metrics like execution time medians, offering operations to register tests, analyze trends, and trigger alerts based on deviations. The statistical submodule enables mean, median, and standard deviation calculations, combining results into tuples for detailed regression analysis using historical data. Use it to monitor CI performance, detect regressions automatically, and feed metrics into Grafana dashboards via InfluxDB.",
      "description_length": 675,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tezt_performance_regression.Grafana",
      "library": "tezt-performance-regression",
      "description": "This module creates and updates Grafana dashboards by generating panels, graphs, and queries. It works with InfluxDB measurements, fields, and tags to build time-series visualizations, supporting customizable axes, intervals, and data sources. Concrete use cases include building performance regression dashboards with graphs that display test results over time, either as single series or split by tags.",
      "description_length": 404,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tezt_performance_regression.InfluxDB",
      "library": "tezt-performance-regression",
      "description": "This module enables time-series data ingestion and query execution for performance analysis workflows. It structures data points with tags and fields for writing to InfluxDB, while supporting complex query operations like aggregation, grouping, and time-range filtering. Typical applications include tracking system metrics, benchmarking performance trends, and visualizing temporal data patterns.",
      "description_length": 397,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tezt_performance_regression",
      "library": "tezt-performance-regression",
      "description": "This module analyzes performance data through statistical computation, time-series tracking, and visualization. It processes lists of numerical measurements to calculate mean, median, and standard deviation, and uses these metrics to detect regressions by comparing current and historical results. The module supports storing and querying time-series data with InfluxDB, enabling trend analysis and alerting based on performance deviations. It also generates Grafana dashboards to visualize test results over time, split by tags or aggregated across runs.",
      "description_length": 555,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 675,
    "min_description_length": 308,
    "avg_description_length": 451.8333333333333,
    "embedding_file_size_mb": 0.022228240966796875
  }
}