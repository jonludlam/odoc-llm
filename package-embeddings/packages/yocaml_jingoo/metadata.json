{
  "package": "yocaml_jingoo",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:30.160903",
  "modules": [
    {
      "module_path": "Yocaml_jingoo.Pipeline",
      "library": "yocaml_jingoo",
      "description": "Processes template files using the Jingoo template engine, allowing content and variables to be injected during rendering. Works with data types that conform to the `DATA_INJECTABLE` signature, typically records or associative structures. Useful for generating dynamic text content like HTML pages or configuration files from templates and structured data inputs.",
      "description_length": 363,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_jingoo",
      "library": "yocaml_jingoo",
      "description": "This module integrates the Jingoo template engine, enabling the transformation of normalized data into template-compatible structures and the rendering of templates with dynamic content injected. It operates on associative lists of `tvalue` types, supporting the generation of HTML pages or configuration files by combining structured data with string templates. The child module extends this functionality by processing template files and injecting values from data types that conform to the `DATA_INJECTABLE` signature, such as records or key-value maps. Together, they allow loading a template file, injecting dynamic values like user names or configuration parameters, and rendering the final output as a string or writing it directly to a file.",
      "description_length": 749,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 749,
    "min_description_length": 363,
    "avg_description_length": 556.0,
    "embedding_file_size_mb": 0.0076999664306640625
  }
}