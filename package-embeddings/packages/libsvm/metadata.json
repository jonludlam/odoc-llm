{
  "package": "libsvm",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:58:10.284563",
  "modules": [
    {
      "module_path": "Libsvm.Svm.Model",
      "library": "libsvm",
      "description": "This module manages SVM model data structures, providing functions to inspect model properties such as type, class count, labels, and support vector count. It supports serialization through `save` and `load` operations for persisting models to and from files. Direct use cases include retrieving model metadata after training and storing trained models for later prediction tasks.",
      "description_length": 380,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Libsvm.Svm.Problem",
      "library": "libsvm",
      "description": "This module represents a machine learning problem instance for SVM training, encapsulating training data and target values. It supports construction from sparse or dense feature matrices, loading from and saving to files, feature scaling, and extracting metadata like sample count, feature count, and target values. Concrete use cases include preparing datasets for SVM training, normalizing input features, and inspecting or persisting problem state.",
      "description_length": 451,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Libsvm.Svm",
      "library": "libsvm",
      "description": "This module implements support vector machine operations for training, validating, and predicting with SVM models. It works with labeled datasets represented as sparse feature vectors paired with target values, and supports multiple SVM types and kernels. Concrete use cases include training a classifier on a Problem instance, performing cross-validation to tune hyperparameters, and applying a trained Model to make predictions on new data points.",
      "description_length": 449,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Libsvm.Stats",
      "library": "libsvm",
      "description": "This module evaluates the performance of a support vector machine model by comparing predicted and expected values from test data. It provides functions to calculate the number of correct predictions, accuracy, mean squared error, and squared correlation coefficient. These metrics are specifically designed for numerical vectors representing classification or regression outcomes.",
      "description_length": 381,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Libsvm",
      "library": "libsvm",
      "description": "This module provides operations for training and evaluating support vector machine models using sparse feature vectors and numerical targets. It supports SVM model creation, cross-validation, prediction, and performance metrics such as accuracy and mean squared error. Concrete use cases include training a classifier on labeled data, tuning hyperparameters via cross-validation, and assessing model performance on test datasets.",
      "description_length": 429,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 451,
    "min_description_length": 380,
    "avg_description_length": 418.0,
    "embedding_file_size_mb": 0.07288455963134766
  }
}