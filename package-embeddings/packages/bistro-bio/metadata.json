{
  "package": "bistro-bio",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 59,
  "creation_timestamp": "2025-07-15T23:16:59.273725",
  "modules": [
    {
      "module_path": "Bistro_bio_examples.Chen2008.FQS",
      "library": "bistro-bio.examples",
      "description": "This module provides functions to retrieve FASTQ files and associated quality control reports for sequencing samples. It handles both compressed and uncompressed FASTQ formats, returning them as lists of files tagged with single or paired-end metadata. The functions are used to prepare input data and quality checks for downstream analysis pipelines.",
      "description_length": 351,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008.Dnaseq",
      "library": "bistro-bio.examples",
      "description": "This module provides functions to access mapped reads in various formats (SAM, BAM, indexed BAM), compute coverage tracks, perform alignment quality checks (BAMStats, chromosome statistics), and generate feature counts from GFF annotations. It works with DNA sequencing data from specific ChIP-seq experiments on mouse embryonic stem cells, including transcription factors Essrb, Nanog, Pou5f1, and Sox2. Concrete use cases include analyzing read distribution, assessing alignment quality, quantifying signal enrichment, and detecting potential contamination.",
      "description_length": 559,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008.Sample",
      "library": "bistro-bio.examples",
      "description": "This module defines a set of specific ChIP-seq samples from the Chen 2008 study, including transcription factors Nanog, Pou5f1, Sox2, and Essrb. It provides functions to retrieve metadata such as SRR IDs, source data, and URLs for published peaks, along with serialization and string conversion utilities. These functions support direct access to experimental data and facilitate analysis workflows for regulatory genomics studies.",
      "description_length": 431,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008",
      "library": "bistro-bio.examples",
      "description": "This module integrates tools for managing and analyzing ChIP-seq data from the Chen 2008 study, focusing on key transcription factors in mouse embryonic stem cells. It supports data retrieval in various formats (FASTQ, SAM/BAM, GFF), performs quality checks, coverage computation, and feature counting, and provides access to curated sample metadata including SRR IDs and peak data. Users can prepare sequencing inputs, assess alignment quality, quantify genomic signal enrichment, and directly access published experimental results for regulatory genomics analysis. Specific examples include processing paired-end FASTQ files, generating coverage tracks from BAM alignments, and retrieving Nanog or Sox2 ChIP-seq peak annotations.",
      "description_length": 731,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Zhou2011",
      "library": "bistro-bio.examples",
      "description": "This module provides structured metadata handling, ChIP-seq analysis pipelines, and quality control reporting for the Zhou2011 study. It operates on polymorphic variant types representing biological samples, experimental conditions, and factors, while integrating file access for FASTQ, BAM, and peak data through Bistro workflows. Key use cases include transcription factor binding analysis, motif discovery via MEME, and ChIPQC validation in the context of the GSE29506 dataset.",
      "description_length": 480,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio_examples",
      "library": "bistro-bio.examples",
      "description": "This module combines ChIP-seq data processing and analysis tools for the Chen 2008 and Zhou2011 studies, enabling users to retrieve, validate, and analyze transcription factor binding data in mouse embryonic stem cells. It supports common genomics file formats (FASTQ, BAM, GFF), performs quality checks, coverage computation, and peak annotation, and integrates with external tools like MEME for motif discovery. Users can process paired-end reads, generate signal enrichment tracks, and access curated metadata and published results for Nanog, Sox2, and other factors. Specific workflows include alignment validation, ChIPQC reporting, and feature counting for regulatory genomics analysis.",
      "description_length": 692,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Dnaseq_with_reference_genome.Make",
      "library": "bistro-bio",
      "description": "This module processes DNA sequencing data aligned to a reference genome, providing operations to retrieve mapped reads in various formats (SAM, BAM, indexed BAM), compute coverage tracks, perform feature counting, screen for contaminants, and generate alignment statistics. It works with FASTQ, BAM, GFF, and FASTA data types, along with custom types for workflow management. Concrete use cases include quality control of sequencing alignments, generating input for genome browsers, and preparing data for downstream analysis like differential expression or variant detection.",
      "description_length": 576,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Ucsc_gb.Lift_over",
      "library": "bistro-bio",
      "description": "This module performs coordinate translation between genome assemblies using UCSC liftOver. It provides functions to generate chain files for genome pairs, map BED3 intervals across assemblies, and access mapped or unmapped output intervals. It works with genome identifiers and BED3 file data types, enabling use cases like converting ChIP-seq peak coordinates from one reference genome to another.",
      "description_length": 398,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bedtools.Cmd",
      "library": "bistro-bio",
      "description": "Performs coordinate adjustment on genomic intervals using BEDTools slop, extending regions left, right, or both sides by fixed or percentage-based amounts. Operates on BED or interval files and requires chromosome size definitions. Useful for expanding peak regions in ChIP-seq analysis or adjusting feature boundaries before overlap checks.",
      "description_length": 341,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Fastq_sample.Data",
      "library": "bistro-bio",
      "description": "Represents FASTQ sample data with a type `t` that encapsulates sequencing read sources. Provides access to the underlying list of sources through the `source` function, which returns a non-empty list of `Biotk.List1.t` values. Designed for handling and processing high-throughput sequencing data in bioinformatics workflows, particularly when working with paired-end or single-end FASTQ files.",
      "description_length": 393,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Fastq_sample.Make",
      "library": "bistro-bio",
      "description": "This module processes FASTQ data by providing access to raw FASTQ files (compressed or uncompressed) and associated FastQC reports. It works with data types representing FASTQ samples, supporting operations to retrieve file paths, perform quality checks, and handle single-end or paired-end sequencing data. Concrete use cases include loading sequencing data for analysis pipelines and validating data quality before downstream processing.",
      "description_length": 439,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Dnaseq_with_reference_genome.Sample",
      "library": "bistro-bio",
      "description": "This module defines a type `t` representing a DNA sequencing sample paired with a reference genome. It provides access to the reference genome, a list of all samples, string representations, and associated FASTQ sample data. It is used to manage and process DNA sequence datasets in conjunction with their reference genomes for analysis workflows.",
      "description_length": 347,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Raxml",
      "library": "bistro-bio",
      "description": "This module implements phylogenetic tree inference using RAxML, supporting nucleotide, amino acid, binary, and multi-state models with specific substitution matrices like `WAG`, `GTR`, and `BINCAT`. It operates on sequence data in FASTA or PHYLIP formats and produces maximum likelihood trees, bootstrap replicates, and distance matrices. Concrete use cases include running `hpc_fasta` to infer a protein tree with a specified model and extracting the best-scoring tree or pairwise distances from the output directory.",
      "description_length": 518,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Deeptools",
      "library": "bistro-bio",
      "description": "This module implements signal processing and visualization tools for genomic data analysis. It supports operations like coverage calculation, comparison, and clustering of BAM and bigWig files, along with generating heatmaps, profiles, and enrichment plots. Key data types include genomic intervals (BED), aligned reads (BAM), and continuous signal tracks (bigWig), with outputs in image formats like PNG, PDF, and SVG.",
      "description_length": 419,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Bedtools",
      "library": "bistro-bio",
      "description": "This module provides tools for manipulating genomic intervals with BEDTools, enabling operations like intersection, merging, and proximity analysis. It includes converting BAM alignments to BED format and supports adjusting interval coordinates using slop, either absolutely or proportionally, with required chromosome size definitions. Main data types include BED intervals and alignment records, with operations such as overlap detection, interval extension, and closest feature identification. Example uses include expanding ChIP-seq peaks, comparing genomic features across datasets, and preparing intervals for downstream analysis.",
      "description_length": 636,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Fastq_sample",
      "library": "bistro-bio",
      "description": "This module manages FASTQ sample data, supporting single-end and paired-end sequencing from plain or gzip-compressed sources. It provides a core type `t` representing samples, with constructors and inspectors to build and query them, such as from URLs or SRA identifiers. The `source` function gives access to the underlying sequencing read sources as a non-empty list, enabling integration with processing pipelines. Submodules extend functionality to include file path resolution, quality validation via FastQC reports, and handling of compressed data, supporting end-to-end workflows from data loading to quality control.",
      "description_length": 624,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Phyml",
      "library": "bistro-bio",
      "description": "This module runs PhyML to infer phylogenetic trees from sequence alignments. It supports nucleotide and amino acid data with various substitution models and outputs a directory containing results including the inferred tree. The `tree` function extracts the resulting Newick-formatted tree file.",
      "description_length": 295,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Gff",
      "library": "bistro-bio",
      "description": "Converts BED3 files to GFF format, using specified feature and attribute types. Works with BED3 and GFF file types from the Bistro_bio.Formats module. Useful for integrating BED3 annotation data into workflows requiring GFF input.",
      "description_length": 230,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Star",
      "library": "bistro-bio",
      "description": "This module provides functions for generating STAR indices from FASTA files and aligning single-end or paired-end FASTQ reads to produce BAM files. It supports configuration options for alignment parameters such as memory limit, mismatch tolerance, and intron size. Use cases include RNA-seq read alignment and transcriptome analysis.",
      "description_length": 334,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Macs2",
      "library": "bistro-bio",
      "description": "This module processes genomic sequencing data to detect enriched regions using MACS2. It provides functions to generate bedGraph files from BAM alignments, call narrow or broad peaks with customizable parameters, and extract peak information like summits and peak lists. It works with BAM/SAM files, genomic size specifications, and peak output formats for downstream analysis.",
      "description_length": 377,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Macs",
      "library": "bistro-bio",
      "description": "This module processes ChIP-seq data using MACS2 for peak calling from aligned sequence reads in SAM or BAM format. It supports configuration of genome size, duplicate read handling, and various MACS2 parameters to detect enriched regions. Key outputs include peak summaries, narrow peaks, and peak summits files for downstream analysis.",
      "description_length": 336,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Busco",
      "library": "bistro-bio",
      "description": "This module implements the BUSCO workflow for assessing genome assembly completeness using lineage-specific single-copy orthologs. It supports bacterial, eukaryotic, and custom database selections, running in genome, transcriptome, or protein mode with configurable e-value, result limits, and compression. The core `busco` function takes a FASTA file and database target, returning a directory containing assessment results.",
      "description_length": 425,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Iqtree",
      "library": "bistro-bio",
      "description": "This module implements phylogenetic tree inference using the IQ-TREE algorithm, supporting DNA, protein, codon, and binary sequence data. It allows specification of substitution models like GTR for DNA or LG for proteins, with options to set rate heterogeneity, frequency types, and partitioned analyses. Concrete use cases include reconstructing evolutionary relationships from aligned sequence datasets and assessing model fit through automated selection of optimal substitution models.",
      "description_length": 488,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Kallisto",
      "library": "bistro-bio",
      "description": "This module implements RNA-seq quantification workflows using Kallisto. It provides functions to build transcript indices, perform quantification on single or paired-end FASTQ data with configurable parameters, and extract abundance tables. The module also supports merging expression counts or TPM values across multiple samples into tab-separated tables for downstream analysis.",
      "description_length": 380,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Ucsc_gb",
      "library": "bistro-bio",
      "description": "This module enables working with UCSC genome sequences and annotations, offering tools to retrieve chromosome sequences, convert between 2bit and FASTA formats, and process BED and bedGraph files using chromosome sizes. It supports genome versions such as `hg19`, `mm10`, and `dm3`, allowing operations like sequence extraction, format conversion, and size-based filtering for reference preparation and annotation processing. A child module extends functionality by performing coordinate translation between assemblies using UCSC liftOver, mapping BED3 intervals across genome references and generating chain files for cross-genome analysis. Together, they support tasks like converting ChIP-seq peak coordinates between genome versions and ensuring format compatibility in genomic pipelines.",
      "description_length": 792,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Dnaseq_with_reference_genome",
      "library": "bistro-bio",
      "description": "This module organizes DNA sequences in relation to reference genomes, enabling precise definition and manipulation of genomic intervals and annotations. It supports construction of samples linked to references, retrieval of aligned reads in multiple formats, and generation of coverage and alignment statistics. Key data types include genomic intervals, reference genome specifications, and sample records with associated FASTQ and BAM data. Users can define target regions for variant calling, perform quality control on alignments, or prepare tracks for genome browsers using integrated operations across its submodules.",
      "description_length": 622,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.ChIPQC",
      "library": "bistro-bio",
      "description": "Runs ChIPQC analysis on a list of samples to generate quality control metrics for ChIP-seq experiments. Works with sample data structures that include alignment files and experimental metadata. Produces a directory containing QC reports and diagnostic plots.",
      "description_length": 258,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Samtools",
      "library": "bistro-bio",
      "description": "This module handles conversion, sorting, indexing, and analysis of BAM and SAM alignment files. It provides functions to convert between BAM and SAM formats, sort BAM files by name or position, generate indexed BAM and FASTA files, and compute alignment statistics. Use cases include preparing aligned sequence data for downstream analysis, removing duplicates from BAM files, and extracting alignment metrics.",
      "description_length": 410,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Jaspar",
      "library": "bistro-bio",
      "description": "This module provides access to the JASPAR database of transcription factor binding motifs. It includes operations to retrieve the core vertebrates non-redundant motif collection and to parse motif data into a list of matrices. It works with Bistro workflows and directories, specifically handling JASPAR database files for bioinformatics analysis tasks such as motif matching and sequence annotation.",
      "description_length": 400,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Fastq",
      "library": "bistro-bio",
      "description": "Handles FASTQ file manipulation with operations to concatenate files, extract headers, and process compressed data. Works with FASTQ files encoded in Sanger, Solexa, or Phred64 formats, supporting both regular and gzip-compressed inputs. Useful for preprocessing sequencing data in bioinformatics pipelines, such as trimming reads or inspecting quality scores.",
      "description_length": 360,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Idba",
      "library": "bistro-bio",
      "description": "Converts FASTQ files to FASTA format using `fq2fa`, runs the IDBA-UD assembler on FASTA inputs to produce a directory of results, and extracts contigs or scaffolds from the output. Works with FASTQ and FASTA files, along with directory structures tagged with `[ `idba ]`. Useful for assembling genomic sequences from single-end or paired-end reads and retrieving assembled contigs or scaffolds.",
      "description_length": 394,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Fastq_screen",
      "library": "bistro-bio",
      "description": "Performs quality filtering and alignment of FASTQ samples against a set of reference sequences using Bowtie2. It supports various filtering modes, including unique mapping, multi-mapping, and exclusion of unmapped reads, and can generate a summary HTML report. Works with FASTQ samples and FASTA reference databases, producing filtered output directories and visual reports.",
      "description_length": 374,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.FastQC",
      "library": "bistro-bio",
      "description": "This module runs FastQC on FASTQ files, producing quality control reports in both raw and compressed formats. It provides access to the full HTML report and specific visualizations including per-base quality and sequence content plots. Designed for preprocessing steps in bioinformatics pipelines, it supports quality assessment of high-throughput sequencing data.",
      "description_length": 364,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Subread",
      "library": "bistro-bio",
      "description": "This module implements RNA-seq feature counting using the `featureCounts` tool from the Subread package. It processes BAM/SAM alignment files and GFF annotation files to quantify read counts per genomic feature, supporting strandedness options, fragment length filtering, and multi-overlap handling. The module outputs count tables in TSV format, HT-Seq-compatible TSV, and summary statistics files, suitable for downstream differential expression analysis.",
      "description_length": 457,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bowtie",
      "library": "bistro-bio",
      "description": "This module implements Bowtie-based alignment workflows for processing FASTQ sequencing data against reference genomes. It provides functions to build Bowtie indices from FASTA files and to run Bowtie alignments with customizable parameters such as mismatch tolerance and output constraints. The core operations produce SAM format alignment outputs, suitable for downstream genomic analysis tasks like variant detection or transcript quantification.",
      "description_length": 449,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Spades",
      "library": "bistro-bio",
      "description": "This module implements genome and transcriptome assembly workflows using SPAdes and RNA-SPAdes. It takes FASTQ samples as input and produces assembled contigs, scaffolds, or transcripts, with options to adjust assembly parameters like threading, memory, and library type. It is used to process sequencing data into interpretable genomic or transcriptomic sequences for downstream analysis.",
      "description_length": 389,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Ncbi_genome",
      "library": "bistro-bio",
      "description": "This module provides access to NCBI genome data through two main operations: retrieving an assembly summary in TSV format and fetching a specific genome assembly in gzipped FASTA format using genome and assembly IDs. It works with string identifiers and produces file values representing TSV and FASTA data. Concrete use cases include downloading reference genomes for analysis pipelines and accessing metadata about genome assemblies.",
      "description_length": 435,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Picardtools",
      "library": "bistro-bio",
      "description": "This module provides functions for processing BAM files using Picard tools, including marking duplicates, sorting reads by name, and extracting processed output. It operates on indexed BAM directories and BAM file formats, with support for duplicate removal during deduplication. Typical use cases include preparing BAM files for downstream analysis by ensuring read order and removing PCR duplicates.",
      "description_length": 401,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Fasta",
      "library": "bistro-bio",
      "description": "This module handles concatenation of FASTA files, supporting both plain and gzip-compressed inputs. It provides functions to merge multiple FASTA files into a single output file, with options to control the compression format of the result. Use cases include combining sequence data from multiple sources into a unified dataset for analysis or preprocessing.",
      "description_length": 358,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Idr",
      "library": "bistro-bio",
      "description": "This module provides functions to work with IDR (Irreproducible Discovery Rate) analysis outputs, including reading and processing peak files in narrowPeak, broadPeak, BED, and GFF formats. It supports running IDR with customizable thresholds, peak merging methods, and ranking strategies, producing processed peak files and summary figures. Concrete use cases include analyzing ChIP-seq replicate consistency and generating reproducibility plots.",
      "description_length": 447,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bowtie2",
      "library": "bistro-bio",
      "description": "This module implements Bowtie2 alignment workflows, providing functions to build indexes and perform sequence alignment. It operates on FASTA files for index construction and FASTQ samples for alignment, producing SAM output. Use cases include mapping short reads to reference genomes with customizable alignment parameters and handling paired-end or single-end data.",
      "description_length": 367,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Prokka",
      "library": "bistro-bio",
      "description": "Runs Prokka for bacterial genome annotation, producing a directory with annotated features. It accepts a FASTA file and parameters for customization of annotation behavior, such as organism taxonomy, genetic code, and output format. Useful for generating GenBank files, GFF3 annotations, and protein translations from assembled bacterial genomes.",
      "description_length": 346,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Cisa",
      "library": "bistro-bio",
      "description": "Merges overlapping FASTA sequences from multiple files, optionally filtering by minimum length. Applies the CISA genome scaffolding algorithm to a FASTA file, using a specified genome size to guide the process. Useful for improving genome assembly continuity by merging contigs and resolving repeats.",
      "description_length": 300,
      "index": 42,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Alignment_stats",
      "library": "bistro-bio",
      "description": "This module provides functions to generate alignment statistics from BAM files, including overall stats, fragment length distribution, and chromosome-specific coverage. It produces textual reports and an HTML summary aggregating results across samples. Typical use cases include quality control in NGS pipelines and preprocessing steps for downstream analysis.",
      "description_length": 360,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Meme_suite",
      "library": "bistro-bio",
      "description": "This module implements motif discovery and analysis workflows using the MEME suite tools. It provides functions for running MEME to identify motifs in FASTA sequences, generating motif logos, performing ChIP-seq analysis with MEME-ChIP, and scanning sequences with FIMO using a MEME-derived motif database. The module operates on FASTA files and MEME-formatted directories, producing motif directories and PNG visualizations as outputs.",
      "description_length": 436,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Ensembl",
      "library": "bistro-bio",
      "description": "This module provides functions to retrieve reference genomes and annotation files for specific species from Ensembl. It supports fetching UCSC reference genomes, GFF and GTF annotation files, and cDNA or DNA sequences in FASTA format, with options to control chromosome naming conventions. It is used to obtain genomic data for analysis pipelines, such as transcriptome alignment or variant annotation.",
      "description_length": 402,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Hisat2",
      "library": "bistro-bio",
      "description": "This module implements RNA-seq alignment workflows using HISAT2. It provides functions to build HISAT2 indices from FASTA files and to perform read alignment against those indices using single or paired-end FASTQ samples, producing SAM output. The module handles parameter configuration for index construction and alignment, supporting options like trimming, insert size constraints, and alignment sensitivity controls.",
      "description_length": 419,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Srst2",
      "library": "bistro-bio",
      "description": "This module runs the SRST2 pipeline for short read sequence typing, handling both single-end and paired-end FASTQ inputs. It aligns reads against MLST and gene databases, computes consensus sequences, and reports variant information with customizable thresholds for mismatches, coverage, and quality scores. The output is a directory containing alignment results, variant calls, and optional consensus sequences in standard formats.",
      "description_length": 432,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Comparative_genomics",
      "library": "bistro-bio",
      "description": "Fetches RefSeq genome sequences matching a given pattern, returning them as a list of FASTA files within a Bistro workflow. Works with Bistro's path and workflow types to integrate into larger genomic analysis pipelines. Useful for retrieving reference genomes for comparative studies across species or strains.",
      "description_length": 311,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Trinity",
      "library": "bistro-bio",
      "description": "This module implements RNA-seq analysis workflows using the Trinity assembler. It provides functions for read normalization, transcript assembly, and gene-to-transcript mapping. Key operations include `trinity` for de novo transcriptome assembly, `insilico_read_normalization` for reducing read redundancy, and `get_Trinity_gene_to_trans_map` for extracting gene-to-transcript relationships from assembly output. It works with FASTQ samples, SAM alignments, and FASTA-formatted transcript sequences. Use cases include transcript quantification, differential expression analysis, and isoform reconstruction from paired or single-end RNA-seq data.",
      "description_length": 645,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bed",
      "library": "bistro-bio",
      "description": "This module provides functions to retain specific BED format versions (3, 4, 5, or 6) from input files, ensuring data consistency. It operates directly on BED file values encapsulated in the `Bistro.file` type, preserving the structure and content of the selected format. These functions are useful when filtering or validating genomic interval data for downstream analysis that requires a strict BED format version.",
      "description_length": 416,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.SE_or_PE",
      "library": "bistro-bio",
      "description": "Handles single-end (SE) and paired-end (PE) sequencing data structures by providing operations to transform values within these structures and extract the first element. The `map` function applies a transformation to the contained value, while `fst` retrieves the first element of the structure. Useful for processing sequencing data in bioinformatics pipelines where SE and PE data require distinct handling.",
      "description_length": 409,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Sra_toolkit",
      "library": "bistro-bio",
      "description": "This module provides functions to download and convert SRA files into common sequence formats. It supports operations like `fastq_dump` and `fastq_dump_pe` for extracting FASTQ data from SRA identifiers or files, with options to filter and format output. It works directly with SRA data and produces FASTQ, FASTQ.gz, or FASTA outputs.",
      "description_length": 334,
      "index": 52,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.DESeq2",
      "library": "bistro-bio",
      "description": "Performs differential expression analysis from count data, generating normalized counts, statistical comparisons, and visualization outputs like PCA and clustering. Works with tabular data structures and file types from Bistro_bio, including count files and tables. Designed for RNA-seq workflows where gene-level expression differences across conditions are quantified and visualized.",
      "description_length": 385,
      "index": 53,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Htseq",
      "library": "bistro-bio",
      "description": "This module provides a function to count sequence reads overlapping genomic features using various modes and options for handling strandedness, quality thresholds, and feature attributes. It operates on SAM/BAM alignment files and GFF annotation files, producing a TSV file with counts per feature. It is used for quantifying RNA-seq data by assigning reads to genes or exons based on alignment position and feature definitions.",
      "description_length": 428,
      "index": 54,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Tophat",
      "library": "bistro-bio",
      "description": "This module runs TopHat for aligning RNA-Seq reads to a reference genome, producing aligned BAM files and splice junction annotations. It takes Bowtie or Bowtie2 indexes and FASTQ files as input, supporting both single-end and paired-end data. The output includes directories containing alignment results, accepted hits in BAM format, and detected junctions in BED6 format.",
      "description_length": 373,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Cisbp",
      "library": "bistro-bio",
      "description": "This module provides access to CisBP database resources, including downloading PWM archives and transcription factor (TF) information files. It defines an `annotated_motif` type that combines motif identifiers, PWMs, TF names, and associated metadata for regulatory sequence analysis. Key operations include retrieving curated motif data and working with PWMs for motif scanning or comparative analysis.",
      "description_length": 403,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Quast",
      "library": "bistro-bio",
      "description": "Performs genome assembly quality assessment using QUAST, comparing assemblies against a reference genome and generating metrics like N50, contig counts, and alignment statistics. Works with FASTA files as input and produces a directory containing QUAST reports. Useful for evaluating the accuracy and completeness of genome assemblies in comparative genomics studies.",
      "description_length": 367,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio",
      "library": "bistro-bio",
      "description": "This module provides a comprehensive toolkit for genomic and transcriptomic data analysis, spanning sequence processing, alignment, assembly, annotation, and downstream functional interpretation. Core data types include FASTQ samples, BAM/SAM alignments, BED/GFF genomic intervals, FASTA sequences, and phylogenetic trees, with operations for format conversion, quality control, feature quantification, and variant detection. Users can perform tasks such as aligning RNA-seq reads with HISAT2, calling ChIP-seq peaks with MACS2, assembling genomes with SPAdes, inferring phylogenies with IQ-TREE, and generating motif annotations from JASPAR or MEME. The module supports end-to-end workflows from raw sequencing data to annotated features, expression quantification, and comparative genomic analysis.",
      "description_length": 800,
      "index": 58,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 100,
    "meaningful_modules": 59,
    "filtered_empty_modules": 41,
    "retention_rate": 0.59
  },
  "statistics": {
    "max_description_length": 800,
    "min_description_length": 230,
    "avg_description_length": 434.6271186440678,
    "embedding_file_size_mb": 0.2148303985595703
  }
}