{
  "package": "bistro-bio",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 49,
  "creation_timestamp": "2025-06-18T16:41:56.076877",
  "modules": [
    {
      "module_path": "Bistro_bio.Fastq_sample.Make",
      "description": "Returns the source list associated with a build target, allowing access to input files for processing. Operates on a structured build representation, extracting dependencies and input data. Used to generate build steps based on source file metadata.",
      "description_length": 249,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Dnaseq_with_reference_genome.Make",
      "description": "Generates a reference genome string from a configuration object and extracts fastq samples for processing. It operates on a custom type representing configuration data and returns lists of samples. The `to_string` function produces human-readable output for logging or reporting.",
      "description_length": 279,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bedtools.Cmd",
      "description": "Handles sequence alignment trimming by removing specified portions of reads, supporting both absolute and percentage-based trimming from left, right, or both ends. Operates on file paths for input reads and genome chromosome sizes, producing shell commands for execution. Used to preprocess sequencing data before variant calling or alignment.",
      "description_length": 343,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008.Sample",
      "description": "Formats a sample representation for output, converts sample values to strings, and provides access to predefined sample identifiers, their associated data sources, and URLs for published peaks. Operates on a discriminated union of sample identifiers and a custom sample type. Generates URLs for genomic data retrieval and extracts reference genome information.",
      "description_length": 360,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008.FQS",
      "description": "Generates FASTQ file paths with specific compression and read pair configurations, and extracts sample metadata from sequencing data. Processes single-end or paired-end reads using structured sample representations. Produces quality control reports and manages file listings for downstream analysis.",
      "description_length": 299,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008.Dnaseq",
      "description": "Provides functions to retrieve and process aligned sequencing data, including BAM files, deduplicated BAM files, and coverage tracks from specific ChIP-seq experiments. Offers tools to generate statistics, quality reports, and feature counts from aligned reads. Supports contamination screening and chromosome-level summary statistics for experimental datasets.",
      "description_length": 361,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Alignment_stats",
      "description": "Calculates read alignment statistics, fragment length distributions, and chromosome coverage from BAM files, outputting tabular summaries. Processes BAM files and returns text-based reports for each analysis. Generates an HTML summary report combining sample names and mapped read data.",
      "description_length": 286,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Bed",
      "description": "Filters and returns BED format files with specific column counts, preserving only the required fields for bed3, bed4, bed5, and bed6 formats. Operates on Bistro.file types wrapped in Formats.bed3 to Formats.bed6 structures. Used to standardize genomic interval data for downstream analysis tools expecting precise column configurations.",
      "description_length": 336,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Bedtools",
      "description": "Processes sequencing reads by trimming specified regions from either end or both, using absolute positions or percentages. Accepts input file paths and genome size data, generating executable shell commands for data preprocessing. Supports flexible trimming strategies to prepare data for downstream analysis. Examples include removing 10 bases from the start of reads or trimming 5% from both ends of paired-end sequences.",
      "description_length": 423,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bowtie",
      "description": "Provides functions to build a Bowtie index from FASTA files and align FASTQ samples to it, with options for compression and color space. Works with FASTA, FASTQ, SAM formats and sample metadata structures. Used to generate alignment files for genomic data analysis and handle different FASTQ formats like Illumina 1.8 and 1.3.",
      "description_length": 326,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Bowtie2",
      "description": "Provides functions for building a reference index from FASTA files and aligning sequencing reads using the Bowtie2 algorithm. Operates on FASTA sequences, FASTQ samples, and SAM output files. Used to generate indexed genomes for alignment and to map reads with customizable alignment parameters like seed size, trimming, and alignment mode.",
      "description_length": 340,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Busco",
      "description": "Provides functions to handle container images and execute BUSCO analysis with customizable parameters like e-value, thread count, and output format. Operates on Bistro container images, FASTA files, and a custom `db` type representing database configurations. Used to assess genome, transcriptome, or protein completeness by running BUSCO in specified modes.",
      "description_length": 358,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.ChIPQC",
      "description": "Provides functions to process and analyze ChIP-seq data samples, including quality control checks and alignment validation. Operates on structured sample data containing experimental metadata and file paths. Used to generate QC reports and assess library complexity in genomic studies.",
      "description_length": 285,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Cisa",
      "description": "Merges multiple FASTA files into a single file, prioritizing sequences longer than a specified minimum length. Processes sequences from genomic data, filtering and combining them based on length criteria. Generates a consolidated FASTA output suitable for downstream analysis.",
      "description_length": 276,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Cisbp",
      "description": "Fetches transcription factor information from a TSV file and retrieves PWM archives from a specified directory, processing them into a structured workflow. Works with TSV files, directory paths, and a list of annotated motifs containing gene identifiers and binding site data. Used to integrate motif data with experimental annotations for downstream analysis in bioinformatics pipelines.",
      "description_length": 388,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Comparative_genomics",
      "description": "Fetches reference genomes from a sequence database using a specified pattern, returning a list of FASTA files in a workflow context. It operates on string patterns and produces paths to genomic sequences formatted in FASTA. This is used to retrieve curated genome data for comparative analysis tasks.",
      "description_length": 300,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Dnaseq_with_reference_genome",
      "description": "Provides operations to access a reference genome, retrieve all instances, convert to string, and extract fastq samples. Works with the `t` type, which represents sequences aligned to a reference. Used to process and inspect genomic data in workflows involving sequence alignment and sample analysis.",
      "description_length": 299,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Ensembl",
      "description": "Provides functions to retrieve reference genomes in UCSC format, GFF and GTF annotations, cDNA, and DNA sequences for specific species and Ensembl releases. Operates on species identifiers and handles compressed FASTA and GFF files. Used to fetch and process genomic data for downstream analysis in bioinformatics pipelines.",
      "description_length": 324,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.FastQC",
      "description": "Processes FASTQ files to generate quality control reports, including per-base quality and sequence content plots. Outputs structured reports and visualizations in HTML and PNG formats. Works with compressed and uncompressed FASTQ files and stores results in directory-based data structures.",
      "description_length": 290,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Fasta",
      "description": "Combines multiple FASTA files or compressed FASTA streams into a single output, handling both plain and GZipped formats. It operates on file handles and compressed file handles, supporting direct concatenation of sequences. This is useful for merging large genomic datasets before downstream analysis.",
      "description_length": 301,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Fastq",
      "description": "Processes FASTQ files by concatenating multiple files into a single output, extracting a specified number of leading reads, and handling compressed files with a specialized header reader. Operates on file handles and compressed file wrappers, supporting both standard and gzipped FASTQ formats. Used to merge sequencing data sets and preview contents of large or compressed FASTQ files efficiently.",
      "description_length": 398,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Fastq_sample",
      "description": "Extracts the source identifier from a FASTQ record, returning it as a Biotk.List1.t. Operates on a custom record type encapsulating FASTQ data. Used to trace the origin of sequencing reads in bioinformatics pipelines.",
      "description_length": 217,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Fastq_screen",
      "description": "Processes FASTQ samples using Bowtie2 to screen for contaminants, supporting filtering by mapping criteria and parallel execution. Operates on `Fastq_sample.t` and FASTA files, generating mapping statistics and reports. Produces detailed HTML summaries of screening results for quality control and analysis.",
      "description_length": 307,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Gff",
      "description": "Processes genomic interval data by converting BED3 format to GFF format, using specified feature and attribute types. Accepts BED3 files and outputs corresponding GFF files with structured annotations. Enables integration of interval-based data into annotation workflows requiring GFF standards.",
      "description_length": 295,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Hisat2",
      "description": "Provides functions for building a HISAT2 index from a FASTA file and aligning sequencing reads using HISAT2. Operates on FASTA and FASTQ files, SAM output, and directory structures containing reference indices. Used to generate a reference index for genome alignment and to map paired or single-end reads to a reference genome with customizable alignment parameters.",
      "description_length": 366,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Idba",
      "description": "Converts FASTQ data to FASTA, either single-end or paired-end, with optional filtering. Executes the IDBA-UD assembly algorithm on a FASTA file, producing assembly directories. Extracts contigs and scaffolds from these directories for downstream analysis.",
      "description_length": 255,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Idr",
      "description": "Processes IDR analysis for genomic peak data, supporting formats like narrow and broad peaks from MACS2, BED, and GFF. Accepts input files in specified formats and generates output files and visualizations. Produces IDR thresholds, merged peak lists, and figures for downstream analysis.",
      "description_length": 287,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Iqtree",
      "description": "Provides functions to specify evolutionary models and run IQ-TREE analyses, including tree inference and output extraction. Works with sequence data in PHYLIP or FASTA formats, and generates Newick tree files and textual reports. Supports DNA, protein, codon, and binary sequence models with customizable frequency and rate parameters.",
      "description_length": 335,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Jaspar",
      "description": "Provides functions to access and process JASPAR database directories, extracting motif lists from non-redundant vertebrate entries. Works with Bistro directory structures and Biotk.Jaspar.matrix types. Used to retrieve curated transcription factor binding motifs for downstream analysis in genomics pipelines.",
      "description_length": 309,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Meme_suite",
      "description": "Generates motif discovery results from FASTA sequences using MEME algorithms, with parameters for motif size, strand consideration, and alphabet type. Produces visual logos from motif directories and identifies motif occurrences in sequences with customizable statistical thresholds. Accepts background files and prioritizes motif matching with configurable scoring and filtering.",
      "description_length": 380,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Ncbi_genome",
      "description": "Provides functions to retrieve and process genome assembly summaries from TSV files and to fetch specific assembly sequences in compressed FASTA format. Operates with genome identifiers and handles compressed file structures. Used to extract reference genomes for downstream analysis and sequence alignment tasks.",
      "description_length": 313,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Phyml",
      "description": "Provides functions to run PhyML for phylogenetic analysis and extract resulting trees. It accepts substitution models, data types, and parameters to configure the analysis, then outputs a newick-formatted tree file. Used to infer evolutionary relationships from aligned amino acid or nucleotide sequences.",
      "description_length": 305,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Picardtools",
      "description": "Provides functions to process BAM files, including marking duplicates, sorting by name, and extracting read data. Operates on BAM files, directory structures containing processed data, and container images for execution. Used to clean and prepare aligned sequencing data for downstream analysis.",
      "description_length": 295,
      "index": 32,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Prokka",
      "description": "Processes bacterial genome sequences by annotating genes, predicting RNA features, and generating GFF3 files. Accepts FASTA input and produces structured output directories with features like protein sequences, HMM results, and rRNA predictions. Configures parameters such as genetic code, contig length filtering, and threading for efficient analysis.",
      "description_length": 352,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Quast",
      "description": "Provides alignment-free assessment of genome assemblies by comparing input FASTA files against a reference and generating quality metrics. Works with FASTA files and string lists to evaluate contig accuracy and coverage. Used to validate assembly correctness in bioinformatics pipelines.",
      "description_length": 287,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Raxml",
      "description": "Generates maximum likelihood phylogenetic trees from FASTA or PHYLIP sequence alignments using specified evolutionary models, with options to control search parameters and output formats. Processes sequence data in aligned formats and returns newick-format trees, best tree selections, and distance matrices. Supports nucleotide, amino acid, and multi-state models for diverse biological datasets.",
      "description_length": 397,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.SE_or_PE",
      "description": "Provides a mapping operation to transform elements within a wrapped value and a projection to extract the inner value. Works with a type constructor that encapsulates a single value of any type. Used to unwrap and transform results from computations that may carry additional context.",
      "description_length": 284,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio.Samtools",
      "description": "Converts between BAM and SAM formats, sorts BAM files by name or position, and generates indexed BAM files from SAM or BAM inputs. Handles operations on indexed FASTA files and provides tools to extract and summarize alignment data from BAM/SAM files. Supports direct conversion between formatted file types and facilitates downstream analysis with structured output.",
      "description_length": 367,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Spades",
      "description": "Generates contigs and scaffolds from paired-end or single-cell fastq data using assembly algorithms optimized for different sequencing platforms. Supports transcriptome-specific assembly with options for strand orientation and filtering of output sequences. Processes input samples through configurable thread and memory settings to adapt to varying computational requirements.",
      "description_length": 377,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Sra_toolkit",
      "description": "Provides functions to handle sequencing data formats such as FASTQ, FASTA, and SRA, with support for compressed and paired-end reads. Operates on container images, SRA files, and workflow identifiers to process and transform raw sequencing data. Enables direct extraction of read sequences and quality scores from SRA files into structured output formats.",
      "description_length": 355,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Srst2",
      "description": "Processes sequencing data to identify genes and mutations using customizable alignment and filtering parameters. Accepts FASTQ and FASTA files, performing read mapping, variant calling, and consensus sequence generation. Supports single-end and paired-end workflows with detailed control over mismatch thresholds, coverage requirements, and output reporting.",
      "description_length": 358,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Star",
      "description": "Generates a STAR index from a FASTA file and aligns sequencing reads to a reference genome using customizable alignment parameters. It processes single-end or paired-end FASTQ files and outputs BAM files with strand information options. The module supports memory limits, mismatch thresholds, and intron length constraints during alignment.",
      "description_length": 340,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Tophat",
      "description": "Processes RNA-seq data by aligning reads to a reference genome using Bowtie or Bowtie2, generating alignment files and junction annotations. Operates on FASTQ files and produces BAM and BED6 formatted output. Used to extract aligned reads and identify splice junctions from RNA-seq experiments.",
      "description_length": 294,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio.Trinity",
      "description": "Provides functions for processing RNA-seq data, including generating container images, performing read normalization, preparing FASTQ files, and generating gene-to-transcript mappings. Works with FASTQ, SAM, and FASTA files, as well as Bistro file types for workflow integration. Used to generate transcriptome assemblies and quantify read coverage for downstream analysis.",
      "description_length": 373,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Chen2008",
      "description": "Processes sample data through formatting, file generation, and alignment analysis. Handles sample identifiers, FASTQ paths, BAM files, and generates reports, URLs, and metadata. Supports genomic data retrieval, quality control, and experimental statistics. Enables workflow integration by managing file structures and extracting relevant biological information.",
      "description_length": 361,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples.Zhou2011",
      "description": "The module provides functions for pretty-printing and categorizing biological samples and experimental conditions, alongside tools for processing ChIP-seq data, including read mapping, peak detection, and motif analysis using bioinformatics tools like Bowtie, MACS2, and MEME. It operates on structured data types such as sample categories, conditions, and genomic files, enabling tasks like quality control, report generation, and sequence motif identification in genomics research. Specific use cases include analyzing experimental workflows, organizing sample metadata, and extracting actionable insights from high-throughput sequencing data.",
      "description_length": 645,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "bistro-bio",
      "description": "Provides functions to define, compose, and execute workflows made up of script-based computations, with support for dependencies and execution order. Operates on custom types representing tasks, dependencies, and execution plans. Used to manage pipeline stages in bioinformatics analyses, where each step depends on the output of previous ones.",
      "description_length": 344,
      "index": 46,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bistro_bio",
      "description": "Processes BAM, FASTQ, and FASTA files for alignment, quality control, and genomic analysis, offering tools to calculate statistics, filter data, trim reads, build indexes, and generate reports. Supports BED, GFF, and GTF formats for interval and annotation handling, and includes functions for motif discovery, assembly, and phylogenetic tree inference. Examples include trimming reads, aligning to reference genomes, converting file formats, and generating QC reports. Integrates with bioinformatics workflows for tasks like ChIP-seq analysis, RNA-seq alignment, and genome validation.",
      "description_length": 586,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bistro_bio_examples",
      "description": "Processes sample data by formatting, generating files, and performing alignment analysis, handling identifiers, FASTQ, BAM, and producing reports and metadata. It supports ChIP-seq workflows with read mapping, peak detection, and motif analysis using tools like Bowtie, MACS2, and MEME. Key data types include sample categories, conditions, genomic files, and experimental statistics. Examples include generating quality control reports, organizing metadata, and identifying sequence motifs from high-throughput sequencing data.",
      "description_length": 528,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 59,
    "meaningful_modules": 49,
    "filtered_empty_modules": 10,
    "retention_rate": 0.8305084745762712
  },
  "statistics": {
    "max_description_length": 645,
    "min_description_length": 217,
    "avg_description_length": 341.48979591836735,
    "embedding_file_size_mb": 0.17841815948486328
  }
}