{
  "package": "cborl",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:35.245806",
  "modules": [
    {
      "module_path": "Cborl.Signal",
      "library": "cborl",
      "description": "This module represents CBOR data items as sequences of low-level signals, enabling direct manipulation and streaming of CBOR structures such as indefinite-length arrays and maps. It supports operations to encode and decode CBOR items to and from these signals, handle large data items incrementally, and convert signal sequences to and from byte streams. Concrete use cases include streaming CBOR data without full in-memory representation and constructing or parsing CBOR items with indefinite lengths.",
      "description_length": 503,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cborl",
      "library": "cborl",
      "description": "This module implements CBOR serialization and deserialization for structured data, supporting nested types like arrays, maps, integers, strings, and tagged values. It provides direct APIs for encoding and decoding byte sequences, enabling efficient data interchange, compact storage, and stream processing. The child module works with low-level signals to handle indefinite-length structures and streaming, allowing incremental parsing and construction of CBOR items without full in-memory representation. Together, they support both full-document and streaming use cases, from encoding simple values to processing large CBOR streams.",
      "description_length": 634,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 634,
    "min_description_length": 503,
    "avg_description_length": 568.5,
    "embedding_file_size_mb": 0.007678031921386719
  }
}