{
  "package": "mindstorm-lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 13,
  "creation_timestamp": "2025-06-18T16:33:32.509096",
  "modules": [
    {
      "module_path": "Mindstorm_lwt.NXT.Sensor.Ultrasonic",
      "description": "Initializes and controls an ultrasonic sensor via I2C, allowing configuration of measurement modes, intervals, and scaling parameters. Retrieves sensor data such as distance readings from eight registers, measurement intervals, and calibration values. Manages sensor state transitions and status checks to ensure reliable operation.",
      "description_length": 332,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.USB",
      "description": "Provides functions to enumerate LEGO NXT bricks connected via USB and establish connections to them. Operates on device records and returns USB connection handles. Used to locate and connect to NXT bricks on Linux systems for direct communication.",
      "description_length": 247,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.Program",
      "description": "Starts and stops programs on a brick using specified connections, with options to verify status after operations. Works with connection objects and program names, handling errors when no program is running. Retrieves the name of the currently executing program via a connection.",
      "description_length": 278,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.Motor",
      "description": "Provides functions to control and monitor motor states on specific ports, including setting speed, applying brakes, and synchronizing. Works with port identifiers, motor states, and counters tracking rotation and tachometer data. Used to adjust motor speed and direction, reset position counters, and retrieve real-time motor status during robot operations.",
      "description_length": 357,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.Sensor",
      "description": "controls an ultrasonic sensor through I2C, handling configuration, data retrieval, and state management. it exposes distance readings, intervals, and calibration values through specific registers. operations include setting measurement modes, adjusting intervals, and accessing raw sensor data. examples include monitoring real-time distance changes and calibrating sensor output for accuracy.",
      "description_length": 393,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.Sound",
      "description": "Plays audio files with specified looping behavior and stops ongoing playback. Generates tones with defined frequency and duration. Operates on connection objects and string file paths to interact with audio hardware.",
      "description_length": 216,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.Message",
      "description": "Writes and reads messages from specific message queues on an NXT device, supporting both local and remote inboxes. Accepts string messages and handles queue management during writes, with options to preserve or remove messages upon reading. Used to communicate with running programs on the NXT, ensuring reliable message delivery or retrieval.",
      "description_length": 343,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT.Find",
      "description": "Provides functions to iterate over filenames matching a pattern, retrieve current filename and its size, advance to the next match, and close the iteration. Works with a generic iterator type and file paths that support wildcard patterns including extensions and file types. Enables processing of files in a non-blocking manner, such as scanning a robot's storage for specific data files.",
      "description_length": 388,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt_connect.USB",
      "description": "Provides functions to list USB devices and establish connections with them using status checks. Operates on device records and USB connection objects. Used to interface with LEGO NXT bricks via USB in asynchronous contexts.",
      "description_length": 223,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt.NXT",
      "description": "manages communication with LEGO NXT devices through multiple interfaces, offering control over motors, sensors, audio, and messaging. it handles USB enumeration, program execution, motor operations, sensor data, audio playback, and file iteration using connection handles, port identifiers, and queue references. functions include starting programs, adjusting motor speeds, reading ultrasonic distances, playing tones, and managing message queues. examples include synchronizing motor movements, calibrating sensors, and sending commands via message queues.",
      "description_length": 557,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "mindstorm-lwt",
      "description": "Provides functions for parsing and validating command-line arguments, handling file I/O operations, and managing configuration data. Works with strings, lists, and custom record types representing parsed options and settings. Used to automate setup processes and configure application behavior based on user input.",
      "description_length": 314,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mindstorm_lwt_connect",
      "description": "Establishes and manages connections to LEGO NXT bricks through USB and Bluetooth, supporting asynchronous operations. It handles device enumeration, status verification, and connection setup using structured device records and connection objects. Users can detect available devices, check their status, and initiate communication sessions. Examples include listing connected USB devices, verifying brick connectivity, and establishing a persistent USB link for data exchange.",
      "description_length": 475,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mindstorm_lwt",
      "description": "manages communication with LEGO NXT devices, enabling control over motors, sensors, audio, and messaging through USB, program execution, and queue operations. it supports motor speed adjustments, ultrasonic distance readings, tone playback, and message queue management using connection handles and port identifiers. functions allow for synchronized motor movements, sensor calibration, and command transmission via messaging. examples include executing preloaded programs, monitoring sensor inputs in real time, and coordinating multiple devices through queued commands.",
      "description_length": 571,
      "index": 12,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 13,
    "meaningful_modules": 13,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 571,
    "min_description_length": 216,
    "avg_description_length": 361.0769230769231,
    "embedding_file_size_mb": 0.047672271728515625
  }
}