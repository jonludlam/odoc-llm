{
  "package": "conduit-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:50:01.240165",
  "modules": [
    {
      "module_path": "Resolver_lwt.IO",
      "library": "conduit-lwt",
      "description": "This module provides Lwt-based input/output operations for resolving URIs, implementing the bind and return functions for asynchronous computation chaining. It works with Lwt threads and Resolver_lwt's internal types to handle non-blocking I/O tasks like network requests or file reads. Concrete use cases include asynchronously loading configuration files or fetching remote resources during endpoint resolution.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resolver_lwt",
      "library": "conduit-lwt",
      "description": "This module resolves URIs to endpoints through asynchronous operations using Lwt, supporting dynamic rewrites and service functions. It works with URIs, service definitions, and Lwt I/O threads to enable use cases like routing HTTP requests to resolved network endpoints or applying host-based rewrite rules to incoming URIs. Key operations include initializing a resolver with custom service logic, adding rewrite rules for specific hosts, and resolving URIs into conduit endpoints.",
      "description_length": 483,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 483,
    "min_description_length": 413,
    "avg_description_length": 448.0,
    "embedding_file_size_mb": 0.02937602996826172
  }
}