{
  "package": "pcf-format",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:09.406842",
  "modules": [
    {
      "module_path": "Pcf.Metrics",
      "description": "Provides operations to convert metric data structures into human-readable strings. Works with a record type containing numerical values and timestamps. Used to generate logs and reports from performance data.",
      "description_length": 208,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pcf.Accelerator",
      "description": "Provides conversion of accelerator data structures to string representations. Works with a type containing fields for device identifiers, performance metrics, and configuration settings. Used to generate human-readable logs for system diagnostics and user interfaces.",
      "description_length": 267,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcf.Encoding",
      "description": "Encodes integer values into a specific internal representation using the `of_int` function. It operates on the `t` type, which encapsulates encoded data. This is used to convert numerical identifiers into a standardized format for storage or transmission.",
      "description_length": 255,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcf.Glyph",
      "description": "Provides methods to extract an integer identifier from a glyph, retrieve bitmap data for specific encodings as 2D boolean arrays, and fetch metric information for given encodings. Works with glyph objects and encoding-specific data structures. Used to render glyphs in rasterized formats and compute layout dimensions during text processing.",
      "description_length": 341,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "pcf-format",
      "description": "Provides functions to parse and format PCF (Policy Configuration Format) data, including reading from and writing to structured text representations. Operates on custom data types such as key-value pairs, nested maps, and typed values. Used to convert between in-memory policy configurations and human-readable or machine-parsable text formats.",
      "description_length": 344,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcf",
      "description": "Converts various data structures into human-readable formats, including performance metrics, accelerator data, and glyph encodings. It handles record types with numerical values and timestamps, device identifiers with performance metrics, and glyph objects with encoding details. Key operations include string conversion, integer encoding via `of_int`, and extraction of bitmap and metric data from glyphs. This enables log generation, system diagnostics, and text rendering with precise layout calculations.",
      "description_length": 508,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pcf_unix",
      "description": "Opens a PCAP file and returns a Pcf.t value if successful, otherwise None. It operates on file paths and PCAP data structures. Used to load network capture data for analysis or processing.",
      "description_length": 188,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 508,
    "min_description_length": 188,
    "avg_description_length": 301.57142857142856,
    "embedding_file_size_mb": 0.025849342346191406
  }
}