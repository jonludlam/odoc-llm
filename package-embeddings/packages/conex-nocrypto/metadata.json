{
  "package": "conex-nocrypto",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:50:15.626116",
  "modules": [
    {
      "module_path": "Conex_nocrypto.V",
      "library": "conex-nocrypto",
      "description": "This module implements RSA-PSS signature verification using SHA256 and provides a function to compute SHA256 digests in hex format. It operates on strings for input data, keys, and signatures, returning result values that indicate success or verification failure. Use it to validate cryptographic signatures and generate SHA256 hashes of arbitrary data.",
      "description_length": 353,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Conex_nocrypto.NC_V",
      "library": "conex-nocrypto",
      "description": "This module provides cryptographic verification operations using the nocrypto library. It works with wire data, keys, digests, and signatures to validate signed resources. Concrete use cases include verifying the integrity and authenticity of distributed configuration data through signature checks and digest comparisons.",
      "description_length": 322,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Conex_nocrypto.C",
      "library": "conex-nocrypto",
      "description": "This module handles cryptographic operations for RSA keys, including decoding private keys, generating key pairs, and producing PSS signatures. It works with a private key type `t` that carries metadata such as creation timestamp, identifier, and bit length. Concrete use cases include loading and validating private keys from disk, generating new RSA keys for secure communication, and signing data using PSS with SHA-256.",
      "description_length": 423,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Conex_nocrypto",
      "library": "conex-nocrypto",
      "description": "This module implements RSA-PSS signature verification with SHA256, cryptographic signature validation, and RSA key handling operations. It works with strings, wire data, keys, digests, and signatures, supporting tasks like verifying signed configuration data, generating SHA256 hashes, and signing data with RSA private keys. Specific use cases include validating cryptographic signatures, generating and loading RSA key pairs, and performing secure data signing and digest comparisons.",
      "description_length": 486,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 486,
    "min_description_length": 322,
    "avg_description_length": 396.0,
    "embedding_file_size_mb": 0.05834388732910156
  }
}