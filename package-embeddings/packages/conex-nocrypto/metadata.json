{
  "package": "conex-nocrypto",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:38.290294",
  "modules": [
    {
      "module_path": "Conex_nocrypto.NC_V",
      "library": "conex-nocrypto",
      "description": "This module computes cryptographic digests and verifies signatures for wire-encoded resources. It operates on strings, wire encodings, and maps of keys and signatures. It is used to validate signed identifiers by checking digest matches against provided keys and signatures.",
      "description_length": 274,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Conex_nocrypto.C",
      "library": "conex-nocrypto",
      "description": "This module handles cryptographic operations for private keys, including decoding, generating RSA keys, and signing data using PSS. It works with private key values of type `t`, timestamps, and string-based PEM or raw data. Concrete use cases include loading private keys from strings, generating RSA key pairs with specified bit lengths, and producing PSS signatures for arbitrary data.",
      "description_length": 387,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Conex_nocrypto.V",
      "library": "conex-nocrypto",
      "description": "This module provides RSA-PSS signature verification using SHA256 and computes SHA256 digests of strings. It operates on strings for keys, data, signatures, and identifiers. Use it to validate cryptographic signatures and generate hash values for data integrity checks.",
      "description_length": 268,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Conex_nocrypto",
      "library": "conex-nocrypto",
      "description": "This module provides cryptographic operations for signing, verifying, and hashing data using RSA-PSS and SHA256. It supports key generation, private key decoding, signature creation, and digest computation over strings and wire-encoded data. Main data types include private keys (`t`), timestamps, and string-based PEM or raw data representations. You can generate RSA key pairs, sign data with a private key, verify signatures against public keys, and compute SHA256 hashes for data integrity checks.",
      "description_length": 501,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 501,
    "min_description_length": 268,
    "avg_description_length": 357.5,
    "embedding_file_size_mb": 0.014967918395996094
  }
}