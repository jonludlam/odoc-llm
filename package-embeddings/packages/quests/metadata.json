{
  "package": "quests",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:03.429724",
  "modules": [
    {
      "module_path": "Quests.Session",
      "library": "quests",
      "description": "This module manages persistent HTTP connections for making multiple requests to the same host, reusing underlying TCP connections to improve performance. It provides functions like `get`, `post`, `put`, and `delete` that mirror the top-level Quests API but operate within a session context. A session can be configured with a maximum connection pool size and supports operations such as closing or resetting all connections.",
      "description_length": 424,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Quests.Response",
      "library": "quests",
      "description": "This module handles HTTP responses by providing access to response content, status codes, headers, and associated request data. It includes functions to parse response bodies as JSON, check success status, and format responses for debugging or logging. Concrete use cases include validating API responses, extracting structured data from HTTP calls, and handling errors based on HTTP status codes.",
      "description_length": 397,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Quests.Request",
      "library": "quests",
      "description": "This module defines data structures for HTTP requests, including URLs, headers, authentication schemes, and payload formats. It supports operations to serialize requests into string representations using `show` and format them with `pp`. Concrete use cases include constructing authenticated HTTP requests with JSON, form, or raw payloads for transmission over persistent connections.",
      "description_length": 384,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Quests",
      "library": "quests",
      "description": "This module implements HTTP client operations for sending requests with customizable methods, headers, authentication, and payload data. It supports asynchronous responses and handles URLs, query parameters, and redirect policies, allowing interaction with REST APIs or authenticated services. Child modules manage persistent connections for performance, inspect and validate HTTP responses, and define structured request data that can be serialized or formatted for transmission. Use it to send JSON requests, handle redirects, inspect response status, or maintain connection pools for efficient API interaction.",
      "description_length": 613,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 613,
    "min_description_length": 384,
    "avg_description_length": 454.5,
    "embedding_file_size_mb": 0.014921188354492188
  }
}