{
  "package": "quests",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:54:07.025447",
  "modules": [
    {
      "module_path": "Quests.Request",
      "library": "quests",
      "description": "This module defines data structures for HTTP requests, including URLs, headers, authentication schemes, and payload formats. It provides direct ways to construct and serialize requests with specific methods like JSON, form data, or raw payloads. Useful for building and inspecting HTTP requests independently of the actual execution mechanism.",
      "description_length": 343,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Quests.Session",
      "library": "quests",
      "description": "This module manages persistent HTTP connections for making multiple requests to the same host. It provides functions like `get`, `post`, `put`, and `delete` that reuse underlying TCP connections, improving performance for repeated interactions. The module works with session objects (`t`) that track connection pools and configuration such as maximum pool size. Use cases include interacting with APIs that require multiple authenticated requests or efficiently polling a service over time.",
      "description_length": 490,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Quests.Response",
      "library": "quests",
      "description": "This module handles HTTP responses by providing access to response content, status codes, and headers. It includes functions to parse response bodies as JSON, check if a response was successful, and convert responses into result types. Use it to process the output of HTTP requests made via the `Quests` module, such as inspecting API response data or handling errors based on HTTP status.",
      "description_length": 389,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Quests",
      "library": "quests",
      "description": "This module implements HTTP client operations for sending requests with methods like GET, POST, PUT, and DELETE, supporting custom headers, authentication, query parameters, and payloads. It works with string-based URLs, key-value pairs for parameters and headers, and structured request/response types for handling HTTP data. Concrete use cases include interacting with REST APIs, submitting forms, uploading JSON payloads, and managing authenticated requests with persistent sessions.",
      "description_length": 486,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 490,
    "min_description_length": 343,
    "avg_description_length": 427.0,
    "embedding_file_size_mb": 0.058358192443847656
  }
}