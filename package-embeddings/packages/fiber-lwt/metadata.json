{
  "package": "fiber-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:44:29.936453",
  "modules": [
    {
      "module_path": "Fiber_lwt.Fiber_inside_lwt",
      "library": "fiber-lwt",
      "description": "This module provides direct integration between Lwt and fibers by converting Lwt promises to fiber-aware result values and enabling fiber-based control flow within Lwt-driven contexts. It operates on Lwt threads and fiber computations, allowing Lwt-based I/O operations to be composed with fiber-based concurrency primitives. Concrete use cases include embedding Lwt-based network or file I/O within a fiber-based scheduler or mixing fiber-managed parallelism with Lwt's event loop.",
      "description_length": 482,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Fiber_lwt",
      "library": "fiber-lwt",
      "description": "Converts Lwt promises to fiber-aware results and enables fiber-based control flow within Lwt contexts. It works with Lwt threads and fiber computations to compose Lwt I/O with fiber concurrency. Use for integrating Lwt-based network or file operations into a fiber-based scheduler or combining fiber-managed parallelism with Lwt's event loop.",
      "description_length": 342,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 482,
    "min_description_length": 342,
    "avg_description_length": 412.0,
    "embedding_file_size_mb": 0.029397964477539062
  }
}