{
  "package": "content_security_policy",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:38.323321",
  "modules": [
    {
      "module_path": "Content_security_policy.Fetch_type",
      "library": "content_security_policy",
      "description": "This module defines a polymorphic type `t` representing various resource fetch types used in content security policies, such as `Script`, `Style`, and `Img`. It provides `compare` for ordering values of type `t` and `sexp_of_t` for converting them to S-expressions. These operations support policy evaluation and serialization in security-related systems.",
      "description_length": 355,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Content_security_policy.Source",
      "library": "content_security_policy",
      "description": "This module defines a type `t` representing source expressions used in Content Security Policy (CSP) directives, including constants like `Self`, `Unsafe_inline`, and `Host_or_scheme` for specifying allowed content sources. It provides comparison and S-expression conversion functions to support policy evaluation and serialization. This module is used to construct and manipulate CSP source expressions for web security policies, such as restricting script or style sources in HTTP headers.",
      "description_length": 491,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Content_security_policy.Monoid",
      "library": "content_security_policy",
      "description": "This module provides operations to construct and combine content security policies using monoid structures. It defines functions like `combine`, `reduce`, and `finalize` to merge policies and produce a finalized policy for web-server integration, along with constructors for specific policy directives such as `report_uri`, `base_uri`, and `fetch`. It works directly with `Content_security_policy.t` to express policies that control resource loading and request handling in web applications.",
      "description_length": 491,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Content_security_policy",
      "library": "content_security_policy",
      "description": "This module builds and manages Content Security Policies for HTTP headers, combining directives like `base_uri` and `form_action` with source expressions and fetch types to control resource loading. It supports operations to create, combine, and finalize policies that restrict content sources, enforce security rules, and report violations. The `Source` submodule defines allowed origins such as `Self` and `Host_or_scheme`, while the `Fetch_type` submodule classifies resource types like `Script` and `Img` for precise policy control. Together with the `Policy` submodule, it enables merging and serializing policies to enforce security across web applications.",
      "description_length": 663,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 663,
    "min_description_length": 355,
    "avg_description_length": 500.0,
    "embedding_file_size_mb": 0.01493072509765625
  }
}