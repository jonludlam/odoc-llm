{
  "package": "vhd-format-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:55:32.418275",
  "modules": [
    {
      "module_path": "Vhd_format_lwt.Block",
      "library": "vhd-format-lwt",
      "description": "This module implements block device operations for reading from and writing to virtual hard disk (VHD) files. It works with `Cstruct.t` buffers for data transfer, `int64` for sector offsets, and standard Lwt promises for asynchronous I/O. Concrete use cases include mounting and manipulating VHD images in virtualization environments, such as reading or writing disk sectors during VM boot or snapshot operations.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vhd_format_lwt.File",
      "library": "vhd-format-lwt",
      "description": "This module provides direct file manipulation operations using Lwt for asynchronous handling, including opening files with configurable buffering, querying file size, and ensuring data persistence with `fsync`. It works with standard file descriptors and supports sparse file operations through `lseek_data` and `lseek_hole` to navigate data and hole regions efficiently. Concrete use cases include low-level disk image management, virtual hard disk formatting, and handling large sparse files where precise control over file I/O is required.",
      "description_length": 542,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vhd_format_lwt.IO",
      "library": "vhd-format-lwt",
      "description": "This module implements asynchronous file I/O operations for handling virtual disk images, including opening, reading, writing, and managing file descriptors. It works with raw file descriptors, Cstruct buffers, and 64-bit integers for positioning. Concrete use cases include loading and saving VHD metadata, streaming disk content, and managing sparse file regions.",
      "description_length": 365,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Vhd_format_lwt",
      "library": "vhd-format-lwt",
      "description": "This module provides asynchronous operations for working with virtual hard disk (VHD) images, including block device access, file manipulation, and low-level I/O. It handles `Cstruct.t` buffers, `int64` offsets, and Lwt promises for non-blocking disk interactions. Use cases include virtual machine disk management, VHD creation and modification, and efficient handling of sparse disk images.",
      "description_length": 392,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 542,
    "min_description_length": 365,
    "avg_description_length": 428.0,
    "embedding_file_size_mb": 0.05836296081542969
  }
}