{
  "package": "vhd-format-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:11.124217",
  "modules": [
    {
      "module_path": "Vhd_format_lwt.File",
      "library": "vhd-format-lwt",
      "description": "This module provides direct file manipulation operations using Lwt for asynchronous handling, including opening files with configurable buffering, seeking to data or hole regions, retrieving file sizes, and ensuring data is flushed to disk. It works primarily with file descriptors and string-based file paths, supporting precise control over disk I/O behavior. Concrete use cases include implementing virtual disk formats with sparse file support and managing low-level storage operations in virtualization environments.",
      "description_length": 521,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vhd_format_lwt.IO",
      "library": "vhd-format-lwt",
      "description": "This module implements asynchronous file I/O operations for handling virtual disk images, including opening, reading, writing, and querying files. It works with file descriptors and integrates with the Lwt concurrency library for non-blocking I/O. Concrete use cases include virtual disk creation, data streaming, and metadata retrieval for virtualization platforms.",
      "description_length": 366,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vhd_format_lwt.Block",
      "library": "vhd-format-lwt",
      "description": "This module implements block device operations for VHD images, including connecting to and disconnecting from devices, reading and writing data to specific sectors, and retrieving device metadata. It works with `Cstruct.t` buffers for data transfer, `int64` for sector offsets, and custom error types for reporting I/O failures. It is used to perform low-level disk image manipulation, such as reading or writing virtual disk contents at specific positions.",
      "description_length": 457,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Vhd_format_lwt",
      "library": "vhd-format-lwt",
      "description": "This module provides asynchronous I/O operations for managing virtual disk images and block devices, enabling precise control over file and device access in virtualization contexts. It centers on file descriptors, `Cstruct.t` buffers, and `int64` offsets, offering operations such as opening files with buffering options, seeking within sparse files, reading and writing disk sectors, and flushing data to storage. Custom error types ensure robust handling of I/O failures. Example uses include creating virtual disks, streaming disk contents, and performing direct sector-level reads and writes.",
      "description_length": 596,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 596,
    "min_description_length": 366,
    "avg_description_length": 485.0,
    "embedding_file_size_mb": 0.014942169189453125
  }
}