{
  "package": "ezsqlite",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:29.775292",
  "modules": [
    {
      "module_path": "Ezsqlite.Value",
      "description": "Checks if a value is null, extracts string, byte, float, integer, 64-bit integer, or boolean representations, and converts values to strings. Operates on a polymorphic value type that encapsulates different data kinds. Used to process serialized data formats like JSON or protocol buffers where values can have multiple representations.",
      "description_length": 336,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ezsqlite.Backup",
      "description": "Handles backup initialization with source and destination paths, tracks progress through steps, and provides details on remaining items and total pages. Operates on a custom `backup` type representing an ongoing backup process. Used to manage incremental data transfers and monitor completion status during file synchronization.",
      "description_length": 328,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ezsqlite.Blob",
      "description": "Handles low-level reading and writing to binary data streams, supporting offset-based access and size tracking. Operates on byte sequences and opaque binary objects, enabling direct manipulation of file-like data structures. Used for efficient data serialization, database record handling, and binary file operations.",
      "description_length": 317,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ezsqlite.Infix",
      "description": "Provides string and value manipulation through custom operators, allowing injection of formatted strings and execution of statements with associated values. Works with `t` type and `Value.value` to build and process structured data. Used to construct query-like expressions and execute them with specific parameters.",
      "description_length": 316,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ezsqlite",
      "description": "Provides functions for executing SQL queries, fetching results as lists of tuples, and managing database connections. Works with SQLite3 databases, handling types such as integers, strings, and blobs. Used to store and retrieve application data in a structured, persistent format.",
      "description_length": 280,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ezsqlite",
      "description": "Encapsulates operations for handling polymorphic values, binary data, backups, and structured queries. It supports type checking and conversion of values, manages backup processes with progress tracking, enables low-level binary I/O, and facilitates string and value manipulation with custom operators. Users can extract and convert data from serialized formats, monitor file transfers, read/write binary streams, and construct parameterized queries. Examples include parsing JSON values, tracking database backups, serializing records, and building SQL-like statements with embedded parameters.",
      "description_length": 595,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 595,
    "min_description_length": 280,
    "avg_description_length": 362.0,
    "embedding_file_size_mb": 0.022205352783203125
  }
}