{
  "package": "tsdl-image",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:09.468682",
  "modules": [
    {
      "module_path": "Tsdl_image.Image.Init",
      "library": "tsdl-image",
      "description": "This module defines and combines flags for initializing image loading capabilities in SDL2_image, supporting formats like JPEG, PNG, TIFF, and WebP. It provides bitwise operations to compose and test initialization flags for enabling specific image format support. Use it to specify which image formats to enable when initializing the image subsystem in an SDL2 application.",
      "description_length": 374,
      "index": 0,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Tsdl_image.Image",
      "library": "tsdl-image",
      "description": "This module provides SDL2_image bindings for loading, saving, and detecting image formats, supporting operations such as reading textures from files, saving screenshots, and parsing images from memory buffers. It includes flags for enabling format-specific support like JPEG, PNG, and WebP during initialization, allowing fine-grained control over image handling capabilities. Main data types include surfaces and textures, with operations for loading from files or arrays, saving as PNG, and checking stream compatibility. Examples include loading a PNG texture for rendering, reading an XPM image from memory, and saving a screenshot in a game loop.",
      "description_length": 651,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tsdl_image",
      "library": "tsdl-image",
      "description": "This module integrates SDL2_image functionality for handling image loading, saving, and format detection. It supports operations on surfaces and textures, enabling tasks like loading textures from files, saving screenshots, and parsing images from memory buffers with format-specific flags for JPEG, PNG, and WebP. You can load a PNG texture for rendering, read an XPM image from memory, or save a screenshot during a game loop.",
      "description_length": 428,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 651,
    "min_description_length": 374,
    "avg_description_length": 484.3333333333333,
    "embedding_file_size_mb": 0.011323928833007812
  }
}