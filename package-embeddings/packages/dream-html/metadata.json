{
  "package": "dream-html",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 11,
  "creation_timestamp": "2025-08-14T23:15:26.901927",
  "modules": [
    {
      "module_path": "Dream_html.Livereload",
      "library": "dream-html",
      "description": "Injects a live-reload script into HTML pages and handles reload requests. Works with `Dream_html.node` structures to insert the script tag directly into HTML documents. Use it by adding the route to your router and placing the script node inside your HTML `head` element.",
      "description_length": 271,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.Atom",
      "library": "dream-html",
      "description": "This module provides an XML namespace attribute (`xmlns`) and a standard HTML `<link>` tag. It works with HTML attribute and tag data types defined in the `Dream_html` library. Use it to define XML namespaces or include external resources like stylesheets in HTML documents.",
      "description_length": 274,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.SVG",
      "library": "dream-html",
      "description": "This module defines SVG-specific attributes and tags for building inline SVG elements in HTML. It includes attributes like `d`, `fill`, `stroke`, `stroke_width`, and functions to set `viewbox` and namespace declarations. Use it to construct inline SVG graphics directly within Dream HTML templates, such as rendering icons, charts, or custom vector graphics.",
      "description_length": 358,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dream_html.Form",
      "library": "dream-html",
      "description": "This module enables decoding and validating HTML form data into typed values like integers, strings, and custom records, using applicative and monadic combinators to express validation dependencies between fields. It operates on key-value lists extracted from form submissions, supporting structured data types, list decoding, and constraints like min/max ranges with detailed error reporting for failures. It is particularly useful in web applications for handling complex form submissions where cross-field validation and precise user error messages are required.",
      "description_length": 565,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.HTML",
      "library": "dream-html",
      "description": "This module enables constructing and manipulating HTML elements with type-safe attribute and tag constructors, handling form controls, media elements, accessibility features, and interactive components. It operates on polymorphic variants representing HTML tags (`std_tag`, `void_tag`, `text_tag`) and attributes with typed values (strings, enums, booleans, integers), ensuring proper HTML syntax generation. Specific use cases include building forms with validation, embedding multimedia content, and implementing accessible UI patterns programmatically in OCaml.",
      "description_length": 564,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.Hx",
      "library": "dream-html",
      "description": "This module enables client-side interactivity through HTML attributes that trigger HTTP requests, handle events, and manipulate the DOM, supporting dynamic content updates and form validation. It operates on standard HTML elements, embedding raw values like CSS selectors or JSON to define behaviors such as partial page swaps, history management, and WebSocket synchronization. Specific use cases include building single-page application-like interactions, real-time form validation, and declarative DOM updates driven by server responses.",
      "description_length": 540,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.MathML",
      "library": "dream-html",
      "description": "This module enables constructing and configuring MathML elements (e.g., `math`, `mrow`, `mfrac`) with precise control over rendering via boolean/string attributes like spacing, alignment, or stretchiness. It operates on Dream_html's attribute and tag types, representing structural components (e.g., `mi`, `mn`, `mo`) and presentation logic for mathematical expressions. Designed for embedding and fine-tuning mathematical content in HTML, it supports use cases like rendering equations in educational platforms or scientific documentation.",
      "description_length": 540,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.RSS",
      "library": "dream-html",
      "description": "This module provides functions to construct RSS 2.0 feeds by generating XML structures using typed combinators for elements like `channel`, `item`, `title`, and metadata tags (e.g., `pub_date`, `link`). It operates on strings and integers to define attributes such as `domain`, `protocol`, and `url_`, enabling the creation of valid RSS documents for content syndication, such as blog updates or news feeds with hierarchical data.",
      "description_length": 430,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.Aria",
      "library": "dream-html",
      "description": "This module constructs accessibility attributes for HTML elements using boolean flags, string values, and enumerated types to convey semantic meaning. It operates on standard HTML structures by transforming OCaml values into ARIA properties that describe dynamic states (like input validation), relationship hierarchies (such as table rows or list items), and interactive controls (including range inputs and sorting indicators). Specific applications include enhancing form accessibility with error messages, managing live regions for dynamic content updates, and implementing keyboard navigation in complex widgets.",
      "description_length": 617,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html",
      "library": "dream-html",
      "description": "This module enables type-safe construction and manipulation of HTML, SVG, MathML, and XML content through polymorphic variant-based data structures, supporting operations like attribute validation, conditional rendering, and cross-field form validation with detailed error handling. It integrates with routing logic for web applications, offering utilities for CSRF protection, path generation, static asset serving, and live-reload scripting while ensuring XSS-resistant output through safe string interpolation. Key use cases include building interactive forms with structured data, generating accessible markup via ARIA attributes, and composing type-safe web interfaces with client-side interactivity (Hx) or syndication feeds (RSS/Atom).",
      "description_length": 742,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx",
      "library": "ppx",
      "description": "This module provides a PPX extension for defining type-safe route paths in web applications. It transforms path literals into typed functions for route matching and generation, ensuring compile-time validation of path structure. Useful for safely handling URL routing with static guarantees, avoiding runtime errors from malformed paths.",
      "description_length": 337,
      "index": 10,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 742,
    "min_description_length": 271,
    "avg_description_length": 476.1818181818182,
    "embedding_file_size_mb": 0.1598033905029297
  }
}