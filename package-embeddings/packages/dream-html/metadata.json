{
  "package": "dream-html",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-07-15T23:07:11.447689",
  "modules": [
    {
      "module_path": "Dream_html.MathML",
      "library": "dream-html",
      "description": "This module provides functions to generate and manipulate MathML attributes and elements for embedding mathematical content in HTML. It offers operations to set presentation attributes controlling layout and styling, along with constructors for structural tags like fractions (`mfrac`), scripts (`msup`), tables (`mtable`), and semantic annotations. These tools enable rendering complex mathematical expressions, equations, and annotated formulas with customizable visual formatting.",
      "description_length": 483,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dream_html.Livereload",
      "library": "dream-html",
      "description": "Injects a live-reload script into HTML pages and handles reload requests. Works with `Dream_html.node` structures to embed the script directly in the page's head. Use by adding the `route` to your router and placing the `script` node in your HTML template's `<head>` section.",
      "description_length": 275,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.RSS",
      "library": "dream-html",
      "description": "This module provides functions to construct RSS feeds by defining XML elements and attributes, such as `channel`, `item`, `pub_date`, and `url_`, using Dream's HTML combinator framework. It works with XML structures to represent RSS-specific tags and metadata fields, enabling type-safe generation of RSS content. Typical use cases include building dynamic RSS feeds for web applications, where structured data like blog posts or news articles are serialized into standardized XML formats.",
      "description_length": 489,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.SVG",
      "library": "dream-html",
      "description": "This module defines SVG-specific attributes and tags for building inline SVG elements in HTML. It includes attributes like `d`, `fill`, `stroke`, `stroke_width`, and functions to set path data, viewBox, and SVG namespace. Use it to generate inline SVG graphics directly within Dream HTML templates, such as rendering icons, charts, or custom vector graphics.",
      "description_length": 358,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.HTML",
      "library": "dream-html",
      "description": "This module enables the programmatic construction of HTML elements and attributes, focusing on form configuration, media controls, and interactive components. It operates on OCaml values like strings, integers, and variants, converting them into typed HTML attributes (e.g., `accept`, `autofocus`, `src`) and structured elements (e.g., `div`, `table`, `video`) via `std_tag` and `void_tag` types. Use cases include building dynamic web interfaces with form validation, embedding media players, and generating semantic HTML structures for accessibility and layout.",
      "description_length": 563,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.Hx",
      "library": "dream-html",
      "description": "This module provides functions to manipulate client-side interactivity through HTML attributes like `hx-get`, `hx-on`, and `hx-swap`, enabling dynamic DOM updates, event-driven server communication, and partial page rendering. It operates on HTML elements and string-based Hyperscript expressions to support use cases such as form validation, real-time UI updates via WebSockets, and declarative AJAX interactions. The direct handling of unescaped Hyperscript and event triggers allows fine-grained control over client-side logic and seamless integration with htmx's reactive patterns.",
      "description_length": 585,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.Atom",
      "library": "dream-html",
      "description": "This module provides an XML namespace attribute (`xmlns`) and a standard HTML `<link>` tag. It works with HTML attribute and tag data types defined in the `Dream_html` library. Use it to define XML namespaces or include external resources like stylesheets in HTML documents.",
      "description_length": 274,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Dream_html.Aria",
      "library": "dream-html",
      "description": "This collection provides constructors for ARIA attributes that define element states, semantic roles, and accessibility relationships in HTML. They handle boolean flags (e.g., `expanded`), string identifiers (e.g., `labelledby`), and numerical values (e.g., `rowindex`, `valuenow`) to control screen reader behavior and interactive features. These functions are particularly useful for building accessible widgets with dynamic state toggles, labeled regions, live-updating content, and complex table structures.",
      "description_length": 511,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html.Form",
      "library": "dream-html",
      "description": "This module provides typed form decoding and validation operations that transform raw form data into structured values with precise error handling. It works with key-value lists representing HTML form submissions, supporting typed fields (e.g., integers, strings, timestamps) and complex structures like records or nested objects through combinators like `required`, `optional`, and dependency-aware chains. It is particularly useful for validating interdependent form fields, enforcing constraints like range checks or conditional presence, and generating actionable error messages for user correction during web form processing.",
      "description_length": 630,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dream_html",
      "library": "dream-html",
      "description": "This module offers type-safe construction of HTML, SVG, XML, and RSS content with secure string escaping, dynamic node manipulation, and form validation. It supports structured handling of elements, attributes, and paths for building interactive web interfaces, embedding mathematical expressions with MathML, generating inline SVG graphics, and creating accessible ARIA-enabled components. Users can define HTTP routes with CSRF protection, serve static assets with caching, and integrate WebSocket communication, while leveraging submodules for form decoding, live-reload scripting, and htmx-driven client interactivity. Specific capabilities include rendering dynamic RSS feeds, validating complex form submissions, and embedding live-updating DOM elements with server-driven Hyperscript triggers.",
      "description_length": 800,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx",
      "library": "ppx",
      "description": "This module enables the declaration of route paths using a syntactic extension, translating them into values that can be used in routing functions. It works with string literals to define paths and integrates directly into route definitions. Concrete use cases include defining URL routes in a web application, such as `/orders` or `/users/:id`, which are then used to match incoming requests in handlers like `Dream_html.get`.",
      "description_length": 427,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 800,
    "min_description_length": 274,
    "avg_description_length": 490.45454545454544,
    "embedding_file_size_mb": 0.040404319763183594
  }
}