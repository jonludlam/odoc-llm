{
  "package": "aws-ssm",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 73,
  "creation_timestamp": "2025-06-18T16:45:15.070279",
  "modules": [
    {
      "module_path": "Aws_ssm.Types.AssociationStatusName",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with mapping to AWS query parameters. Works with a polymorphic type `t` and string-based representations. Used to serialize and deserialize status names in AWS API interactions and XML parsing workflows.",
      "description_length": 285,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationFilterKey",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON values, along with bidirectional mappings from strings to `t`. Works with `t` and standard data structures like lists and options. Used to serialize and deserialize filter keys in AWS query and JSON formats.",
      "description_length": 286,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentFilterKey",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, along with mapping operations for query parameters. Works with `t` and standard data types like strings, lists, and XML nodes. Used to serialize and deserialize document filter keys in AWS API interactions.",
      "description_length": 286,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationStatus",
      "description": "Provides operations to construct, parse, and serialize association status data, including converting between XML nodes, query parameters, and JSON representations. Works with date, string, and custom status name types to represent system association states. Used to process and transmit status updates from AWS services in structured formats.",
      "description_length": 342,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchRequestEntry",
      "description": "Creates a batch request entry for associating resources, supporting construction from parameters, XML parsing, query string generation, and JSON serialization/deserialization. Works with string-based identifiers and structured data formats. Used to prepare batch association operations in AWS API interactions.",
      "description_length": 310,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.Fault",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type that can represent various fault-related data. Used to parse XML responses from AWS services and convert fault details into structured JSON for further processing.",
      "description_length": 315,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationFilter",
      "description": "Provides operations to construct, parse, and serialize key-value pairs with specific association filtering logic. Works with custom key type AssociationFilterKey.t and string values, converting between XML nodes, query parameters, and JSON structures. Used to process and encode AWS-style association filters in API requests and responses.",
      "description_length": 339,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.Association",
      "description": "Provides functions to create, parse, and serialize data structures representing AWS associations, including converting between XML nodes, query parameters, and JSON. Works with custom types for AWS names and instance IDs, and a record type `t` encapsulating association data. Used to process and transmit AWS association metadata in API requests and responses.",
      "description_length": 360,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentIdentifier",
      "description": "Creates a document identifier from a name or empty, parses XML nodes into the structure, converts it to query parameters, and serializes/deserializes between JSON and the internal representation. Works with XML node lists, JSON objects, and query strings. Used to process and encode document identifiers in AWS API requests and responses.",
      "description_length": 338,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentFilter",
      "description": "Encapsulates document filter criteria using a key and string value, supporting XML parsing, query string generation, and JSON serialization. Operates on structured data including XML nodes, query parameters, and JSON objects. Used to construct and interpret filters for document retrieval systems.",
      "description_length": 297,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and parsing capabilities. Works with a polymorphic variant type and AWS-specific data structures for query and JSON serialization. Used to transform document state data for XML parsing, API requests, and JSON encoding.",
      "description_length": 322,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationDescription",
      "description": "Represents an association with fields for name, instance ID, date, and status, supporting creation, XML parsing, query construction, and JSON serialization/deserialization. Works with custom types for strings, dates, and status values. Used to process and transmit association data in AWS API interactions.",
      "description_length": 306,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.FailedCreateAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing failed association creation events, including parsing XML nodes into structured data, converting to query parameters, and handling JSON serialization and deserialization. Works with custom types such as `CreateAssociationBatchRequestEntry.t`, `Fault.t`, and AWS-specific string and JSON representations. Used to process and transmit error details from association creation failures in AWS API interactions.",
      "description_length": 481,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationFilterList",
      "description": "Provides functions to construct, parse, and serialize lists of association filters. Operates on lists of `AssociationFilter.t` values and converts them to AWS query parameters, JSON structures, and vice versa. Parses XML nodes into filter lists and generates JSON representations for API interactions.",
      "description_length": 301,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of association data. Operates on XML nodes, JSON values, and a list of Association.t records. Used to convert XML input into structured data, generate AWS query parameters, and handle JSON serialization for network communication.",
      "description_length": 299,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentIdentifierList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of document identifiers. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML document metadata and AWS-compatible query or JSON representations.",
      "description_length": 256,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentFilterList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of document filters. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert filter data between different formats for API interactions and data processing.",
      "description_length": 257,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentDescription",
      "description": "Provides operations to construct, parse, and serialize document objects with optional SHA1, name, creation date, and status. Works with custom types including date-time and document status. Used to convert XML data into document structures and generate query or JSON representations for API interactions.",
      "description_length": 304,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationDescriptionList",
      "description": "Creates and manipulates lists of association descriptions, supporting parsing from XML nodes, conversion to AWS query parameters, and serialization to and from JSON. Operates on lists of `AssociationDescription.t` records, which represent structured data mappings. Used to process and format association data for API interactions and data exchange.",
      "description_length": 348,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.FailedCreateAssociationList",
      "description": "Provides functions to construct, parse, and serialize lists of failed association data. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert raw XML input into structured error data and back, supporting API interaction and data validation.",
      "description_length": 273,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchRequestEntries",
      "description": "Handles creation and parsing of batch association requests, converting between XML nodes, query parameters, and JSON representations. Operates on lists of association batch entries, each representing a specific resource association. Used to prepare and deserialize request payloads for batch association operations in AWS services.",
      "description_length": 331,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateDocumentRequest",
      "description": "Creates a document request with a specified name and content, parses XML nodes into this structure, converts it to query parameters, and serializes/deserializes between JSON and the internal representation. Works with strings for content and name, and uses XML and JSON for input/output. Used to generate structured requests for document creation in AWS services.",
      "description_length": 363,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.ListAssociationsRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for listing associations, including filtering, pagination, and JSON serialization. Works with association filter lists, integers for result limits, and strings for pagination tokens. Used to generate HTTP queries and JSON payloads for API calls retrieving association data.",
      "description_length": 344,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.MaxDocumentSizeExceeded",
      "description": "Provides operations to create, parse, and serialize error data related to exceeding document size limits. Works with unit type and AWS query/json structures. Used to handle and convert size limit violations in API responses.",
      "description_length": 224,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.UpdateAssociationStatusResult",
      "description": "Provides a constructor for building results from association descriptions, a parser for XML nodes, and conversions to and from query parameters and JSON structures. Works with association descriptions and AWS query and JSON formats. Used to process and serialize responses from association status updates in AWS interactions.",
      "description_length": 325,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.InvalidInstanceId",
      "description": "Generates and processes invalid instance ID representations, converting between internal and external formats. Works with unit type and AWS query or JSON structures. Used to handle error cases in AWS API interactions where instance IDs are invalid.",
      "description_length": 248,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.ListAssociationsResult",
      "description": "Provides functions to construct, parse, and serialize a result containing associations and a next token. Works with association lists and AWS query/json structures. Used to process and format API responses from services returning grouped data.",
      "description_length": 243,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociatedInstances",
      "description": "Provides functions to create, parse, and serialize data structures into AWS query and JSON formats. Operates on unit type and generic input types, converting them to structured representations. Used to generate AWS-compatible query parameters and JSON payloads from simple data models.",
      "description_length": 285,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DeleteDocumentRequest",
      "description": "Provides operations to construct, parse, and serialize a document deletion request, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers and structured data types for AWS requests. Used to generate and process requests for removing specific documents in an AWS service context.",
      "description_length": 344,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentAlreadyExists",
      "description": "Provides operations to create, parse, and serialize a unit type into AWS query parameters and JSON format. Works with the unit type and generic input values. Used to handle document existence checks in AWS interactions by converting between data representations.",
      "description_length": 262,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DescribeAssociationResult",
      "description": "Provides operations to construct, parse, and serialize association results, including converting between XML nodes, query parameters, and JSON structures. Works with XML nodes, AWS query parameters, and JSON objects structured as nested associations. Used to process and format association data from XML responses into a serializable format for API interactions.",
      "description_length": 362,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.ListDocumentsResult",
      "description": "Provides operations to construct, parse, and serialize a document listing result, including converting between XML nodes, query parameters, and JSON representations. Works with document identifiers and pagination tokens. Used to process API responses containing lists of documents and their associated metadata.",
      "description_length": 311,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DescribeAssociationRequest",
      "description": "Creates a structured request with a name and instance ID, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on string-based identifiers and JSON-compatible data structures. Used to generate and process AWS association requests in API interactions.",
      "description_length": 294,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationDoesNotExist",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON format. Works with the unit type and related JSON structures. Used to handle absence of associations in AWS requests and responses.",
      "description_length": 225,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DescribeDocumentRequest",
      "description": "Provides operations to construct, parse, and serialize document request data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured record type containing a name field of type Aws.BaseTypes.String.t. Used to generate and process HTTP requests for document-related API interactions.",
      "description_length": 335,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationRequest",
      "description": "Creates a structured request object with a name and instance ID, supporting parsing from XML nodes, conversion to query parameters, and serialization to JSON. Works with string-based identifiers and JSON associative structures. Used to generate and process association requests in AWS API interactions.",
      "description_length": 302,
      "index": 35,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DeleteAssociationResult",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters, JSON, and deserialization from JSON. Works with the unit type to represent empty or void results. Used to handle API responses that indicate the absence of data or successful deletion without additional information.",
      "description_length": 301,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.ListDocumentsRequest",
      "description": "Provides functions to construct, parse, and serialize request objects for listing documents, including setting filters, result limits, and pagination tokens. Works with document filter lists, integers, and strings to define query parameters. Used to generate AWS API-compatible queries and JSON representations for document retrieval operations.",
      "description_length": 345,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.InternalServerError",
      "description": "Provides functions to create, parse, and serialize error representations, including converting to and from query parameters and JSON. Works with unit type and generic input types for error handling. Used to generate HTTP 500 error responses and process associated data formats.",
      "description_length": 277,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationLimitExceeded",
      "description": "Provides functions to create, parse, and serialize an exception type representing an association limit exceeded error. Works with unit type and AWS query or JSON structures. Used to handle and encode error states in AWS API interactions.",
      "description_length": 237,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DescribeDocumentResult",
      "description": "Provides operations to construct, parse, and serialize document description data. Works with XML nodes, JSON structures, and AWS query parameters. Used to convert between XML input and structured AWS requests or JSON representations.",
      "description_length": 233,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.UpdateAssociationStatusRequest",
      "description": "Provides operations to construct, parse, and serialize a request for updating an association status, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and a custom association status type. Used to generate HTTP requests for cloud service interactions where association states need to be modified.",
      "description_length": 352,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.InvalidNextToken",
      "description": "Provides functions to create, parse, and serialize an empty unit type. Works with the unit type and AWS query structures. Used to represent invalid next token states in API responses.",
      "description_length": 183,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.InvalidDocument",
      "description": "Provides operations to create, parse, and convert a unit type into AWS query and JSON formats. Works with the unit type and generic input values. Used to handle invalid document representations in AWS request serialization and deserialization.",
      "description_length": 243,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationAlreadyExists",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON format. Works with the unit type and JSON associations. Used to handle HTTP query encoding and JSON representation of empty values.",
      "description_length": 225,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.GetDocumentResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a document result structure. Works with string-based name and content fields encapsulated in a record type. Used to generate HTTP query parameters from a document object and to parse XML nodes into a structured document representation.",
      "description_length": 303,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.TooManyUpdates",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON, with a dedicated parsing and deserialization mechanism. Works with the unit type and generic input types for conversion. Used to manage and encode state transitions in AWS-related workflows.",
      "description_length": 285,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchResult",
      "description": "Provides operations to construct, parse, and serialize a batch result structure containing lists of successfully and failed associations. Works with association descriptions and failed association lists. Used to process and encode responses from batch association creation operations in AWS API interactions.",
      "description_length": 308,
      "index": 47,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.CreateDocumentResult",
      "description": "Encapsulates the result of document creation, supporting construction from a description, parsing XML nodes, converting to AWS query parameters, and serializing/deserializing to JSON. Works with `DocumentDescription.t` and AWS-specific types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate structured responses for API interactions and data exchange.",
      "description_length": 373,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DocumentLimitExceeded",
      "description": "Provides functions to create, parse, and serialize an exception type representing a document limit exceeded error. Works with unit type and generic input to generate AWS query parameters and JSON representations. Used to handle and encode API response limits in AWS interactions.",
      "description_length": 279,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DeleteDocumentResult",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and arbitrary input types for parsing. Used to handle document deletion outcomes in AWS API interactions.",
      "description_length": 226,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchRequest",
      "description": "Provides operations to construct, parse, and serialize a batch of association entries, including converting between XML, JSON, and query formats. Works with structured data representing multiple associations, each containing key-value pairs. Used to prepare and process bulk association requests in AWS API interactions.",
      "description_length": 320,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.GetDocumentRequest",
      "description": "Creates a request structure from a name, parses XML nodes into the request, converts the request to a query string, serializes to JSON, and deserializes from JSON. Works with string names and AWS query and JSON representations. Used to construct and process document retrieval requests in API interactions.",
      "description_length": 306,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.StatusUnchanged",
      "description": "Provides operations to create, parse, and serialize a unit value into query parameters and JSON. Works with the unit type and associated JSON structures. Used to represent an unmodified state in API interactions and data serialization workflows.",
      "description_length": 245,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationResult",
      "description": "Encapsulates the result of creating an association, supporting construction from a description, parsing XML nodes, converting to AWS query parameters, and serializing/deserializing to JSON. Works with XML node structures, AWS query formats, and JSON objects. Used to process and represent association creation outcomes in AWS API interactions.",
      "description_length": 343,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.InvalidDocumentContent",
      "description": "Provides operations to construct, parse, and serialize error data from XML and JSON. Works with XML node structures and JSON values to represent invalid document content. Used to handle and convert error responses in AWS API interactions.",
      "description_length": 238,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DeleteAssociationRequest",
      "description": "Creates a request to remove an association between a name and an instance ID, using a structured record type. Accepts XML nodes for parsing, converts to query parameters, and serializes/deserializes to JSON. Used to construct and process API requests for disassociating resources in AWS services.",
      "description_length": 296,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DuplicateInstanceId",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and functions that handle optional parsing and JSON encoding. Used to manage instance ID duplication checks in AWS request formatting.",
      "description_length": 255,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.CreateAssociation",
      "description": "Handles AWS request signing and conversion between native types and HTTP formats for association operations. Processes input of type CreateAssociationRequest and outputs CreateAssociationResult, with error handling for AWS-specific responses. Converts HTTP requests to and from native structures, including parsing error responses based on status codes and XML content.",
      "description_length": 369,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.CreateAssociationBatch",
      "description": "Handles conversion of input data into AWS HTTP requests for batch association operations, including setting action and version parameters. Processes HTTP responses to extract results or specific error structures based on AWS protocol. Works with native request and result types, and parses AWS error responses into internal error representations.",
      "description_length": 346,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.CreateDocument",
      "description": "Converts native input data into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles AWS error parsing by validating status codes and matching them against predefined error specifications.",
      "description_length": 329,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.DeleteAssociation",
      "description": "Handles conversion of AWS delete association requests into HTTP format and processes responses. Operates on input representing association deletion parameters and outputs unit, with error handling for AWS-specific response formats. Parses HTTP responses to detect and structure API errors based on status codes and XML content.",
      "description_length": 327,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.DeleteDocument",
      "description": "Handles AWS document deletion by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with request and error structures defined in the AWS API specification.",
      "description_length": 299,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.DescribeAssociation",
      "description": "Handles AWS request signing and conversion between native and HTTP representations for describe association operations. Processes input of type `Types.DescribeAssociationRequest.t` and outputs `Types.DescribeAssociationResult.t`, including error parsing from XML responses. Converts request parameters into query-encoded HTTP requests and decodes response bodies into structured results or errors.",
      "description_length": 397,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.DescribeDocument",
      "description": "Handles conversion between native input and HTTP requests for AWS document description, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types.",
      "description_length": 340,
      "index": 64,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and from strings, along with a list of common errors. Works with a custom error type `t` representing application-specific error states. Used to handle error serialization and HTTP response mapping in API layers.",
      "description_length": 301,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.GetDocument",
      "description": "Converts input data into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error validation by matching HTTP status codes with expected error formats.",
      "description_length": 294,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.ListAssociations",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters and setting action/version. Decodes HTTP responses into structured output or error types based on AWS specifications. Parses AWS error responses into service-specific error representations using HTTP status codes and XML data.",
      "description_length": 336,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.ListDocuments",
      "description": "Handles conversion of document listing requests into HTTP format and parsing of corresponding responses. Processes input of type `Types.ListDocumentsRequest.t` and produces output of type `Types.ListDocumentsResult.t`, with error handling for AWS-specific response structures. Parses HTTP status codes and XML error bodies to identify and return service-specific errors.",
      "description_length": 370,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types",
      "description": "The module offers comprehensive serialization and deserialization capabilities for custom types across multiple formats, including XML, JSON, and AWS query parameters. It supports polymorphic and structured data types such as `t`, `AssociationFilterKey.t`, `DocumentDescription.t`, and `CreateAssociationBatchRequestEntry.t`, enabling conversion between string-based representations, lists, options, and AWS-specific data structures. Operations include parsing XML nodes, generating query strings, and serializing to JSON, facilitating tasks like handling association statuses, document filters, and batch requests in AWS API interactions. Examples include converting fault details to JSON, serializing document identifiers, and processing batch association entries for API transmission.",
      "description_length": 787,
      "index": 69,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.UpdateAssociationStatus",
      "description": "Handles conversion between native input and HTTP requests for updating association status, encoding parameters into query format and setting required action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS service responses. Works with AWS-specific request and error structures, including service identifiers and signature versions.",
      "description_length": 392,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "aws-ssm",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as request configurations, HTTP methods, and AWS service-specific data structures. Used to interact directly with AWS APIs like S3 for object storage or DynamoDB for database operations.",
      "description_length": 351,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm",
      "description": "Provides a unified interface for converting AWS SSM request and response data between native OCaml types and HTTP formats, supporting operations like creating, describing, deleting, and updating associations, as well as listing documents. Key data types include `CreateAssociationRequest`, `DescribeAssociationRequest`, `ListDocumentsRequest`, and various result and error types, with operations for encoding parameters, parsing XML responses, and handling AWS-specific error structures. Functions enable conversion of input data into query-encoded HTTP requests, decoding of response bodies into structured outputs, and mapping of error codes to internal representations. Examples include serializing batch association entries, parsing document descriptions, and translating AWS error responses into application-specific errors.",
      "description_length": 829,
      "index": 72,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 73,
    "meaningful_modules": 73,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 829,
    "min_description_length": 183,
    "avg_description_length": 319.7671232876712,
    "embedding_file_size_mb": 0.2656373977661133
  }
}