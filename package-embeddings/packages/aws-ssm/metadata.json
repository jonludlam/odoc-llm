{
  "package": "aws-ssm",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 72,
  "creation_timestamp": "2025-08-15T15:01:39.328480",
  "modules": [
    {
      "module_path": "Aws_ssm.Types.AssociationDescriptionList",
      "library": "aws-ssm",
      "description": "This module handles lists of SSM association descriptions, providing direct conversions to and from XML, JSON, and query formats. It supports parsing AWS XML responses into typed association data and serializing association lists for API requests. Use this when processing or constructing batches of SSM association information for AWS service interactions.",
      "description_length": 357,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.TooManyUpdates",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing an error case for handling excessive updates in a system. It includes operations to construct, parse, and convert the error to query or JSON formats. It is used when enforcing limits on concurrent updates, typically in API response handling.",
      "description_length": 285,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DeleteAssociationRequest",
      "library": "aws-ssm",
      "description": "This module defines a data structure for specifying parameters to delete an association in AWS SSM, consisting of a name and instance ID. It provides functions to construct the request, convert it to query format or JSON, and parse it from XML or JSON input. Use this module when configuring or managing SSM associations programmatically, particularly for disassociating documents from instances.",
      "description_length": 396,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.GetDocumentResult",
      "library": "aws-ssm",
      "description": "This module defines a data structure for holding the result of retrieving an SSM document, with optional fields for the document's name and content. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. It is used when handling responses from AWS SSM document retrieval operations, enabling straightforward access to document metadata and content.",
      "description_length": 398,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.CreateDocumentRequest",
      "library": "aws-ssm",
      "description": "This module defines a data structure for creating documents in AWS SSM, containing fields for document content and name. It provides functions to construct, parse, and serialize document requests in various formats, including JSON and query parameters. Use this module when interacting with AWS SSM's document creation API to structure and send valid document data.",
      "description_length": 365,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationList",
      "library": "aws-ssm",
      "description": "This module handles lists of AWS SSM associations, providing functions to parse, convert to query format, serialize to JSON, and deserialize from JSON. It works with `Association.t` lists and AWS XML, JSON, and query data types. Use this module when managing SSM association data for API requests or response processing.",
      "description_length": 320,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.InvalidDocument",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing an invalid document state, with operations to construct, parse, and convert values to query parameters, JSON, and back. It primarily works with unit values to signify absence of valid data. Concrete use cases include handling errors during document validation or parsing in AWS Systems Manager workflows.",
      "description_length": 348,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DuplicateInstanceId",
      "library": "aws-ssm",
      "description": "This module defines a type `t` and associated operations for handling duplicate instance IDs in AWS SSM. It includes functions for creating an empty value, parsing input into a unit value, and converting values to query parameters, JSON, and back from JSON. It is used when handling errors or responses that indicate a duplicate instance ID in SSM operations.",
      "description_length": 359,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationFilterList",
      "library": "aws-ssm",
      "description": "This module handles lists of association filters for managing AWS Systems Manager associations. It provides operations to convert filter lists to and from JSON and query formats, and to parse them from XML data. Use this module when configuring or querying SSM association filters programmatically.",
      "description_length": 298,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationStatusName",
      "library": "aws-ssm",
      "description": "This module defines an enumerated type representing the status of an association in AWS SSM, with values `Pending`, `Success`, and `Failed`. It provides functions to convert between string representations and the enumerated type, including case-insensitive parsing and JSON serialization. These operations are used when handling association status responses from AWS SSM APIs or when constructing requests that require status values.",
      "description_length": 433,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.StatusUnchanged",
      "library": "aws-ssm",
      "description": "This module defines a unit type and associated functions for handling a specific SSM status response. It provides operations to construct, parse, and serialize the unit value into query parameters, JSON, and back from JSON. Useful for interacting with AWS SSM APIs where a status response indicates no change occurred.",
      "description_length": 318,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DescribeAssociationResult",
      "library": "aws-ssm",
      "description": "This module handles the result of describing an SSM association, primarily providing a structured way to access an optional `AssociationDescription`. It includes operations for constructing, serializing, and parsing the result in formats like JSON and XML. Use this module when retrieving and processing details about a Systems Manager association, such as querying its status or configuration.",
      "description_length": 394,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.InvalidInstanceId",
      "library": "aws-ssm",
      "description": "This module handles errors related to invalid instance IDs in AWS SSM operations. It defines a unit type for representing such errors and provides functions to construct, parse, and convert these errors into query parameters, JSON, or from JSON. Concrete use cases include validating instance identifiers and handling API responses that indicate invalid instances.",
      "description_length": 364,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationFilterKey",
      "library": "aws-ssm",
      "description": "This module defines a polymorphic variant type with two constructors, `InstanceId` and `Name`, representing filter keys for associations. It provides bidirectional conversions between strings and the variant type, along with serialization to and from JSON, XML, and AWS query format. This module is used to specify filter criteria when querying AWS Systems Manager associations by instance ID or association name.",
      "description_length": 413,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DocumentStatus",
      "library": "aws-ssm",
      "description": "This module defines an enumerated type representing the status of a document, with values for Creating, Active, and Deleting states. It includes functions to convert between string representations and the enumerated type, as well as serialization to and from JSON and query formats. It is used to interpret and format document status values when interacting with AWS SSM APIs, particularly during status checks or state transitions.",
      "description_length": 432,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DeleteDocumentResult",
      "library": "aws-ssm",
      "description": "This module defines a result type for document deletion operations, with functions to create, parse, and convert the result to query or JSON formats. It works with unit type values, representing the absence of a return value. Concrete use cases include handling responses from document deletion requests in AWS SSM.",
      "description_length": 315,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.ListAssociationsRequest",
      "library": "aws-ssm",
      "description": "This module defines a request structure for listing associations in AWS SSM, including filters, pagination controls, and token-based continuation. It supports operations to create, parse, and serialize requests in JSON, query string, and XML formats. Concrete use cases include querying SSM for associations based on specific criteria, paginating through large result sets, and processing AWS API responses.",
      "description_length": 407,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentLimitExceeded",
      "library": "aws-ssm",
      "description": "This module handles errors related to document limits in AWS SSM. It provides functions to create, parse, and convert error data to query parameters, JSON, or from JSON. It works with unit values and is used when managing document quotas or handling API responses that indicate limit exceedances.",
      "description_length": 296,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DocumentDescription",
      "library": "aws-ssm",
      "description": "This module defines a data structure for holding metadata about a document, including its SHA-1 hash, name, creation date, and status. It provides functions to construct, serialize, and deserialize this structure to and from JSON, query parameters, and XML. It is used when retrieving or managing document metadata in AWS SSM workflows.",
      "description_length": 336,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentAlreadyExists",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing an error case where a document already exists, with operations to construct, parse, and convert the error to query, JSON, or other structured formats. It primarily works with unit values and is used when handling conflicts during document creation in configuration management systems. Concrete use cases include error signaling in AWS Systems Manager document APIs and handling duplicate document uploads.",
      "description_length": 449,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DocumentIdentifierList",
      "library": "aws-ssm",
      "description": "This module handles lists of document identifiers in the AWS SSM API. It provides functions to parse XML input into a list of document identifiers, convert the list to a query format, and serialize to and from JSON. It is used when retrieving or filtering documents based on identifiers in SSM operations.",
      "description_length": 305,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationResult",
      "library": "aws-ssm",
      "description": "This module defines a data structure representing the result of creating an association in AWS SSM, containing an optional association description. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include handling responses from the AWS SSM API when creating associations, enabling further processing or storage of association metadata.",
      "description_length": 417,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.FailedCreateAssociationList",
      "library": "aws-ssm",
      "description": "This module handles lists of failed association creation results from AWS SSM. It provides functions to parse XML input into association list data, convert the list to query parameters or JSON format, and reconstruct the list from JSON. Use this module when managing association creation errors in AWS Systems Manager workflows.",
      "description_length": 328,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.ListDocumentsResult",
      "library": "aws-ssm",
      "description": "Handles the result of listing documents in AWS SSM, containing a list of document identifiers and an optional pagination token. It supports parsing from XML, converting to JSON or query format, and constructing or extracting data from JSON. Used when retrieving and processing document metadata with pagination support in AWS SSM.",
      "description_length": 330,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationRequest",
      "library": "aws-ssm",
      "description": "This module defines a data structure for creating an association between an SSM document and an EC2 instance. It includes functions to construct, parse, and serialize the association request in various formats such as JSON and query parameters. It is used when initiating configurations or commands on EC2 instances via AWS Systems Manager.",
      "description_length": 340,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchResult",
      "library": "aws-ssm",
      "description": "This module handles the result of a batch association creation operation in AWS SSM. It includes functions to construct, parse, and serialize the result, which consists of lists of successful and failed associations. It works with XML, JSON, and AWS query formats for data exchange and processing.",
      "description_length": 297,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociatedInstances",
      "library": "aws-ssm",
      "description": "This module handles the serialization and deserialization of instance association data in AWS SSM operations. It works with unit types and converts data to query parameters, JSON, and back from JSON. It is used when managing instance associations in AWS Systems Manager, such as retrieving or formatting associated instances for API requests.",
      "description_length": 342,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.MaxDocumentSizeExceeded",
      "library": "aws-ssm",
      "description": "This module handles errors related to document size limits in AWS SSM operations. It defines a type `t` representing the condition when a document exceeds the maximum allowed size, along with functions to construct, parse, and serialize this error state. It is used when processing SSM documents to enforce size constraints during API requests.",
      "description_length": 344,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DeleteAssociationResult",
      "library": "aws-ssm",
      "description": "This module defines a result type for a deletion operation, where the primary value type is a unit. It includes functions to construct, parse, and convert the result to query, JSON, or other structured formats. It is used to represent the outcome of removing an association in a system that interacts with AWS SSM (Systems Manager).",
      "description_length": 332,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.Fault",
      "library": "aws-ssm",
      "description": "This module defines a sum type with three variants (`Client`, `Server`, `Unknown`) representing fault categories. It includes functions to convert between strings and the type, serialize to query parameters or JSON, and parse from XML nodes or JSON. It is used to handle fault classification in AWS SSM operations, such as distinguishing error sources in API responses.",
      "description_length": 369,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DocumentFilter",
      "library": "aws-ssm",
      "description": "This module defines a filter structure for selecting documents based on a key-value pair. It supports creating, parsing, and converting filters to query or JSON formats. It is used when querying AWS Systems Manager documents by criteria such as name or owner.",
      "description_length": 259,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationDescription",
      "library": "aws-ssm",
      "description": "This module defines a data structure for describing AWS Systems Manager associations, including fields like name, instance ID, date, and status. It provides functions to construct, parse, and convert association descriptions to and from JSON and query formats. It is used to manage and retrieve metadata about SSM associations in AWS environments.",
      "description_length": 347,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.ListAssociationsResult",
      "library": "aws-ssm",
      "description": "This module represents the result of listing AWS Systems Manager associations, containing a list of associations and an optional pagination token. It provides functions to construct, parse, and serialize the result for use in API responses or further processing. Use this module when handling outputs from SSM association list operations, especially during pagination or JSON/XML transformations.",
      "description_length": 396,
      "index": 32,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_ssm.Types.FailedCreateAssociation",
      "library": "aws-ssm",
      "description": "This module defines a data structure representing a failed association creation in AWS SSM, containing optional fields for the association entry, error message, and fault type. It provides functions to construct, parse, and convert the structure to and from JSON, query parameters, and XML. It is used to handle and propagate detailed error information when creating associations in SSM fails.",
      "description_length": 393,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DescribeAssociationRequest",
      "library": "aws-ssm",
      "description": "This module defines a data structure for specifying an association description request in the AWS Systems Manager (SSM) service. It includes operations to create, serialize, and parse requests using JSON and XML formats. The module works with string-typed fields for association name and instance ID, enabling direct interaction with SSM's API endpoints that retrieve association details.",
      "description_length": 388,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateDocumentResult",
      "library": "aws-ssm",
      "description": "This module handles the result of creating a document in AWS SSM, primarily working with the `CreateDocumentResult.t` type which may contain a `DocumentDescription.t`. It provides functions to construct, parse, and convert the result to and from XML, JSON, and query formats. Use this module when managing document creation responses in AWS SSM, particularly for handling output data and integrating with AWS API requests and responses.",
      "description_length": 436,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationStatus",
      "library": "aws-ssm",
      "description": "This module defines a data structure for representing the status of an association in AWS SSM, including the timestamp, status name, message, and optional additional information. It provides functions to construct, parse, and convert the structure to and from JSON, query parameters, and XML. Use this module when managing SSM association states, such as tracking compliance or execution results.",
      "description_length": 396,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.InvalidNextToken",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing an invalid next token error in AWS SSM operations, with `make` creating instances of this error. It includes functions to parse, convert to query format, serialize to JSON, and deserialize from JSON, enabling integration with AWS SDK error handling and API interactions. Use this module to manage pagination errors when working with SSM list operations like retrieving parameter history or inventory entries.",
      "description_length": 452,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentIdentifier",
      "library": "aws-ssm",
      "description": "This module defines a data structure for identifying AWS Systems Manager documents by name. It includes functions to create, parse, and convert document identifiers to and from JSON and query formats. It is used when managing SSM documents, such as retrieving metadata or referencing documents in API calls.",
      "description_length": 307,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.GetDocumentRequest",
      "library": "aws-ssm",
      "description": "This module defines a data structure for specifying a document retrieval request by name. It includes functions to construct the request, convert it to query parameters or JSON, and parse it from XML or JSON input. It is used to interact with AWS Systems Manager's document management API, specifically for fetching documents by their identifier.",
      "description_length": 346,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DescribeDocumentRequest",
      "library": "aws-ssm",
      "description": "This module defines a request structure for retrieving document details, containing a single document name field. It provides functions to construct, serialize, and parse the request in various formats including JSON, query parameters, and XML. It is used when querying AWS Systems Manager for information about a specific document by name.",
      "description_length": 340,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.Association",
      "library": "aws-ssm",
      "description": "This module defines a data structure representing an association between a resource and an instance in AWS Systems Manager. It includes functions to construct, serialize, and deserialize associations using JSON or query parameters, and to extract association data from XML. The module is used to manage SSM document associations with instances in AWS.",
      "description_length": 351,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationLimitExceeded",
      "library": "aws-ssm",
      "description": "This module handles error responses for association limit exceeded scenarios in AWS SSM operations. It defines a unit type to represent the error condition and provides functions to parse, convert to query format, and serialize to and from JSON. It is used when managing SSM associations to signal when the maximum allowed associations for a target have been exceeded.",
      "description_length": 368,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchRequestEntries",
      "library": "aws-ssm",
      "description": "This module handles the creation and manipulation of batch association requests for AWS SSM. It provides functions to convert lists of association entries to and from JSON and query formats, and includes parsing from XML nodes. It is used when submitting multiple associations in a single batch to AWS Systems Manager.",
      "description_length": 318,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchRequestEntry",
      "library": "aws-ssm",
      "description": "This module defines a data structure for creating association batch request entries, containing optional name and instance ID fields. It provides functions to construct, parse, and convert these entries to various formats like JSON and query parameters. It is used when managing batch associations in AWS SSM, particularly for mapping documents to instances programmatically.",
      "description_length": 375,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DeleteDocumentRequest",
      "library": "aws-ssm",
      "description": "This module defines a single data type `t` representing a request to delete a document by its name. It provides functions to construct, parse, and convert the request into query parameters or JSON format. It is used specifically for interacting with the AWS Systems Manager (SSM) API to delete documents by their string identifier.",
      "description_length": 331,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationAlreadyExists",
      "library": "aws-ssm",
      "description": "This module defines a type and associated functions for handling the condition where an association already exists in AWS SSM operations. It works with unit type values to represent the presence or absence of this condition. Functions support parsing, converting to query format, and serializing to and from JSON, specifically for managing API responses related to duplicate associations.",
      "description_length": 388,
      "index": 46,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.UpdateAssociationStatusRequest",
      "library": "aws-ssm",
      "description": "This module defines a record type for updating the status of an SSM association, including fields for the association name, instance ID, and new status. It provides functions to construct the record, parse it from XML, convert it to query parameters or JSON, and create it from JSON input. It is used to send updated association status information to the AWS SSM service, typically in response to state changes on managed instances.",
      "description_length": 432,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.UpdateAssociationStatusResult",
      "library": "aws-ssm",
      "description": "This module defines a data structure representing the result of an association status update in AWS SSM. It includes functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used to handle responses containing updated association descriptions in SSM operations.",
      "description_length": 309,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.DescribeDocumentResult",
      "library": "aws-ssm",
      "description": "This module handles the result of a document description operation in the AWS SSM service. It provides functions to create, parse, and convert document result data to and from JSON and query formats. It works with XML input for parsing and outputs structured data representing a document's description.",
      "description_length": 302,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.AssociationDoesNotExist",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing the absence of an association in AWS SSM operations, with `unit` as its only value. It includes functions to construct, parse, and convert the type to query parameters, JSON, and back from JSON, all handling the unit value consistently. It is used specifically to signal and manage missing associations in SSM configurations and responses.",
      "description_length": 383,
      "index": 50,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.InternalServerError",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing an internal server error in AWS SSM operations, with unit value indicating absence of detailed data. It provides functions to parse, convert to query format, serialize to JSON, and deserialize from JSON, all handling the unit type for simplicity and consistency in error handling workflows. Use cases include managing error responses from AWS SSM API calls, particularly when propagating or inspecting internal server errors without additional context.",
      "description_length": 496,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.CreateAssociationBatchRequest",
      "library": "aws-ssm",
      "description": "This module handles the creation and manipulation of batch association requests for AWS Systems Manager. It provides functions to construct, parse, and serialize association data, specifically working with batch request entries. Use this module when sending multiple associations to SSM, converting request data to query parameters or JSON, or processing XML responses into structured data.",
      "description_length": 390,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.ListDocumentsRequest",
      "library": "aws-ssm",
      "description": "This module defines a request structure for listing documents, including filters, pagination limits, and continuation tokens. It provides functions to construct, parse, and serialize document list requests in JSON, query string, and XML formats. Concrete use cases include querying AWS SSM for documents matching specific criteria and handling paginated responses.",
      "description_length": 364,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.AssociationFilter",
      "library": "aws-ssm",
      "description": "This module defines a data structure for filtering associations in AWS Systems Manager (SSM) by key-value pairs. It supports creating, serializing, and parsing association filters, specifically working with `AssociationFilterKey` and string values. Use this module to construct filters for querying or managing SSM associations based on attributes like `InstanceId` or `Name`.",
      "description_length": 376,
      "index": 54,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Types.InvalidDocumentContent",
      "library": "aws-ssm",
      "description": "This module defines a type `t` representing an error structure for invalid document content, with an optional message field. It provides functions to construct, parse, and serialize this error type to and from XML, JSON, and query formats. It is used when handling errors related to malformed SSM document content in AWS API interactions.",
      "description_length": 338,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentFilterKey",
      "library": "aws-ssm",
      "description": "This module defines a single enumerated type `t` with the constructor `Name` and provides bidirectional conversions between strings and this type using `str_to_t` and `t_to_str`. It includes standard serialization and parsing functions such as `to_string`, `of_string`, `parse`, `to_query`, `to_json`, and `of_json` for integrating with AWS query and JSON formats. This module is used when filtering documents in the AWS SSM service based on predefined keys like `Name`.",
      "description_length": 470,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types.DocumentFilterList",
      "library": "aws-ssm",
      "description": "This module handles lists of document filters for querying and parsing operations. It provides functions to convert filter lists to and from JSON and query formats, and to parse them from XML nodes. Use this module when working with AWS SSM document filter data in API requests or responses.",
      "description_length": 291,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.CreateAssociation",
      "library": "aws-ssm",
      "description": "This module handles creating associations in AWS SSM by defining input and output types corresponding to the CreateAssociation API call. It provides functions to convert native input into HTTP requests and parse HTTP responses into results or errors specific to the CreateAssociation operation. Use this module to initiate SSM associations with targets like EC2 instances, specifying documents and parameters in the request.",
      "description_length": 424,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.ListDocuments",
      "library": "aws-ssm",
      "description": "This module handles listing documents in AWS SSM by converting native input types to HTTP requests and parsing HTTP responses into output or errors. It works with `ListDocumentsRequest` and `ListDocumentsResult` types, along with internal error types for handling AWS-specific failures. It is used to interact with the SSM service endpoint, specifically for retrieving a list of documents with proper request signing and query encoding.",
      "description_length": 436,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.Types",
      "library": "aws-ssm",
      "description": "This module provides operations for modeling AWS SSM associations, documents, and metadata, including constructing, parsing, and serializing data structures to JSON, XML, and AWS query formats. It works with enumerated types, structured records, strings, and unit types to support API request/response handling, error signaling, and internal state management in SSM workflows. Specific use cases include transforming association statuses, applying filters, and managing document identifiers during SSM operations.",
      "description_length": 513,
      "index": 60,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_ssm.DeleteAssociation",
      "library": "aws-ssm",
      "description": "This module handles the deletion of associations in AWS SSM by providing functions to construct and interpret HTTP requests and responses for the `DeleteAssociation` API. It works with the `DeleteAssociationRequest` type as input and returns no output on success, using internal SSM error types to represent failure conditions. Concrete use cases include removing configuration associations from managed instances or cleaning up stale state manager configurations programmatically.",
      "description_length": 481,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.DescribeAssociation",
      "library": "aws-ssm",
      "description": "This module handles describing an SSM association by converting input requests to HTTP format and parsing responses. It works with SSM association requests and results, along with internal AWS errors. Use it to query the status or configuration of a specific SSM association by its ID or name.",
      "description_length": 293,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.ListAssociations",
      "library": "aws-ssm",
      "description": "This module handles listing AWS Systems Manager associations by converting input requests to HTTP format and parsing responses. It works with `ListAssociationsRequest` and `ListAssociationsResult` types, along with internal error types for handling failures. It is used to interact with the SSM service API, specifically for querying association data and handling paginated results.",
      "description_length": 382,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.UpdateAssociationStatus",
      "library": "aws-ssm",
      "description": "This module handles updating the status of AWS Systems Manager associations by converting native input types into properly signed HTTP requests and parsing responses into structured outputs or errors. It works directly with `UpdateAssociationStatusRequest` and `UpdateAssociationStatusResult` types, along with internal error types for precise error handling. Use this module to report the success or failure of an association execution on a managed instance, such as after applying configuration changes or detecting drift.",
      "description_length": 524,
      "index": 64,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.Errors_internal",
      "library": "aws-ssm",
      "description": "This module defines a list of error types returned by AWS SSM API operations and provides functions to convert these errors to HTTP status codes, strings, and back. It works directly with the `t` sum type representing specific SSM service errors and includes a predefined list of common errors. Concrete use cases include error handling in SSM API client code, mapping service responses to appropriate status codes, and parsing error strings from API responses.",
      "description_length": 461,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.CreateAssociationBatch",
      "library": "aws-ssm",
      "description": "This module handles creating association batches in AWS SSM by defining input and output types corresponding to SSM's API. It provides functions to convert native input types into properly signed HTTP requests and parse HTTP responses into either results or typed errors. It is used to associate SSM documents with multiple targets in a single batch operation, such as applying configurations or running automation across multiple instances.",
      "description_length": 441,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.CreateDocument",
      "library": "aws-ssm",
      "description": "This module handles creating documents in AWS SSM by defining input and output types specific to the CreateDocument API call. It includes functions to convert native input to HTTP requests and parse HTTP responses into results or errors, using AWS-specific error parsing based on status codes and XML data. Concrete use cases include uploading configuration documents or automation scripts to SSM through the AWS API.",
      "description_length": 417,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.DescribeDocument",
      "library": "aws-ssm",
      "description": "This module handles describing an SSM document by converting input requests into properly signed HTTP queries and parsing responses into structured outputs or errors. It works with SSM document request and result types, along with internal error representations. Use this module to retrieve metadata and content details of a Systems Manager document by its name or version.",
      "description_length": 373,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ssm.DeleteDocument",
      "library": "aws-ssm",
      "description": "This module handles the deletion of an SSM document by defining the request structure, encoding it into an HTTP query, and parsing responses. It works with `DeleteDocumentRequest` as input and returns no output on success, using AWS SSM error types for failure cases. Concrete use cases include removing outdated or unused SSM documents from an AWS environment.",
      "description_length": 361,
      "index": 69,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm.GetDocument",
      "library": "aws-ssm",
      "description": "This module handles retrieving documents from AWS SSM by defining the input and output types for the `GetDocument` operation. It provides functions to convert requests to HTTP format, parse responses, and handle errors specific to document retrieval. Use this module when fetching SSM documents by name or version, ensuring correct encoding and error handling.",
      "description_length": 360,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ssm",
      "library": "aws-ssm",
      "description": "This module implements client-side operations for interacting with AWS Systems Manager (SSM) by providing functions to create, delete, describe, list, and update SSM associations and documents. It works with structured types like `CreateAssociationRequest`, `DeleteDocumentRequest`, and `ListAssociationsResult`, along with AWS-specific error types for precise error handling. Concrete use cases include automating configuration management, applying documents to EC2 instances, retrieving document content, and programmatically managing association statuses and state manager configurations.",
      "description_length": 591,
      "index": 71,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 72,
    "meaningful_modules": 72,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 591,
    "min_description_length": 259,
    "avg_description_length": 376.19444444444446,
    "embedding_file_size_mb": 1.0435791015625
  }
}