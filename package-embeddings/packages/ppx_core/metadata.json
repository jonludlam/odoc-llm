{
  "package": "ppx_core",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-06-18T16:47:11.402093",
  "modules": [
    {
      "module_path": "Ppx_core.Std",
      "description": "Provides functions to manipulate and inspect type names from OCaml abstract syntax trees. Works with lists of strings representing type identifiers. Used to extract and process type information during code analysis or transformation.",
      "description_length": 233,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ppx_core",
      "description": "Provides functions for traversing and modifying OCaml abstract syntax trees using open recursion, along with utilities to construct and manipulate AST nodes. Works with OCaml's internal representation of code, including expressions, patterns, and type declarations. Used to implement custom syntax extensions and code transformation pipelines in ppx rewriters.",
      "description_length": 360,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 389,
    "meaningful_modules": 2,
    "filtered_empty_modules": 387,
    "retention_rate": 0.005141388174807198
  },
  "statistics": {
    "max_description_length": 360,
    "min_description_length": 233,
    "avg_description_length": 296.5,
    "embedding_file_size_mb": 0.007685661315917969
  }
}