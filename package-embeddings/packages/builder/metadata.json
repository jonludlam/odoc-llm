{
  "package": "builder",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:49:44.148611",
  "modules": [
    {
      "module_path": "Builder.Log",
      "library": "builder",
      "description": "This module provides functions for logging messages at various severity levels, including `app`, `err`, `warn`, `info`, and `debug`, all of which format and emit logs using the `Logs` infrastructure. It includes specialized functions like `on_error` and `on_error_msg` to handle and log `result` values that represent errors, allowing custom formatting and error recovery. These operations are useful for instrumenting applications with structured logging and handling failure cases in a type-safe manner.",
      "description_length": 505,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Builder.Asn",
      "library": "builder",
      "description": "This module facilitates ASN.1-based serialization and deserialization of structured build system data, enabling conversions between string representations and typed OCaml values for entities like jobs, schedules, execution results, and state items. It supports strict decoding of fixed schemas and bidirectional projections for variant types such as `cmd`, which represents command structures. Specific use cases include serializing commands for debugging, transmitting structured state across system components, and ensuring data integrity through precise parsing rules.",
      "description_length": 571,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Builder",
      "library": "builder",
      "description": "This module orchestrates job scheduling and build execution workflows using structured types for jobs, tasks, and system state, combined with result monads for error propagation. It leverages ASN.1 encoding for version-controlled state synchronization and Unix sockets for resilient inter-process communication between clients and workers. The design emphasizes observable builds through structured logging, debug-friendly output, and precise tracking of distributed execution states.",
      "description_length": 484,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 571,
    "min_description_length": 484,
    "avg_description_length": 520.0,
    "embedding_file_size_mb": 0.04390907287597656
  }
}