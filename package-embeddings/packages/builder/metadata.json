{
  "package": "builder",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:22.933099",
  "modules": [
    {
      "module_path": "Builder.Log",
      "description": "Provides logging operations for different severity levels, including message formatting and error handling. Works with log levels, formatted messages, and result types to capture and process errors. Enables structured error recovery with custom formatting and tagging.",
      "description_length": 268,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Builder.Asn",
      "description": "This module handles serialization and deserialization of structured data, including custom records, UUIDs, time values, and execution results, into string-based encodings using ASN format. It operates on specific data types like job configurations, schedules, and command structures, enabling transformations between in-memory representations and portable string formats. A key use case involves converting command objects (`cmd`) to strings for logging or transmission, alongside managing complex execution states and time-sensitive operations.",
      "description_length": 545,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "builder",
      "description": "Handles job scheduling, execution, and monitoring with a persistent queue managed by a server. Accepts job submissions, modifications, and deletions through a client, while workers process jobs from the queue and return results. Supports interval-based job scheduling and integrates with sandboxed execution environments.",
      "description_length": 321,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Builder",
      "description": "manages logging and data serialization with structured error handling and format conversion. it supports log levels, formatted messages, and result types for error tracking, and handles ASN encoding of custom records, UUIDs, and command objects. it enables converting command structures to strings for logging or transmission, and tracks execution states with time-sensitive data. examples include logging errors with custom tags and serializing job configurations for storage or network transfer.",
      "description_length": 497,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 545,
    "min_description_length": 268,
    "avg_description_length": 407.75,
    "embedding_file_size_mb": 0.014966011047363281
  }
}