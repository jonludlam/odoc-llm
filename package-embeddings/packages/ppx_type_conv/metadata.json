{
  "package": "ppx_type_conv",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-06-18T16:28:32.727580",
  "modules": [
    {
      "module_path": "ppx_type_conv",
      "description": "Converts type specifications into generated code for serialization and comparison. Works with OCaml type definitions and annotations to produce boilerplate-free implementations. Enables efficient binary protocol and ordering logic in data structures.",
      "description_length": 250,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_type_conv",
      "description": "provides a framework for type conversion through a set of auxiliary modules, offering no direct computational capabilities. It includes empty modules that define no types or operations, serving only as placeholders or structural components. Developers can use it to organize type conversion logic, but it does not perform any transformations on its own. The absence of executable code limits its utility to symbolic or meta-programming contexts.",
      "description_length": 445,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 2,
    "filtered_empty_modules": 3,
    "retention_rate": 0.4
  },
  "statistics": {
    "max_description_length": 445,
    "min_description_length": 250,
    "avg_description_length": 347.5,
    "embedding_file_size_mb": 0.007695198059082031
  }
}