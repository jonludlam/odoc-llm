{
  "package": "cohttp_static_handler",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:56:22.986900",
  "modules": [
    {
      "module_path": "Cohttp_static_handler.Asset.Kind",
      "library": "cohttp_static_handler",
      "description": "This module defines asset kinds for static file handling, supporting types like CSS, JavaScript, favicons, and source maps. It provides constructors for specific asset types and allows creating custom assets with a relative path and MIME type. Used to categorize and serve static resources in a web server context.",
      "description_length": 314,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_static_handler.Asset.What_to_serve",
      "library": "cohttp_static_handler",
      "description": "This module constructs values representing assets to be served by a static HTTP handler. It supports creating assets from embedded strings, files, or files with custom serve-as paths, allowing control over relative path resolution using `relative_to`. Use cases include serving static files from disk or in-memory content with customizable paths in a Cohttp-based server.",
      "description_length": 371,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_static_handler.Asset",
      "library": "cohttp_static_handler",
      "description": "This module represents assets to be served by a static HTTP handler, supporting construction from embedded strings, files, or custom paths. It works with asset kinds such as CSS, JavaScript, and favicons, allowing precise control over MIME types and relative path resolution. Concrete use cases include embedding in-memory assets, serving static files from disk with custom URLs, and generating opensearch.xml descriptors dynamically.",
      "description_length": 434,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_static_handler.Single_page_handler",
      "library": "cohttp_static_handler",
      "description": "This module creates HTTP handlers that serve single-page applications with customizable HTML content. It works with HTML strings, asset lists, and metadata to generate index pages that load specified assets. Use it to serve static SPAs with a custom body, div ID, or metadata, handling unknown URLs by returning 404 or redirecting to the index.",
      "description_length": 344,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_static_handler.Http_handler",
      "library": "cohttp_static_handler",
      "description": "This module defines a function type for handling HTTP requests in an asynchronous Cohttp server. It processes incoming requests along with connection metadata and returns a deferred response. It is used to implement custom logic for routing and responding to HTTP endpoints.",
      "description_length": 274,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_static_handler",
      "library": "cohttp_static_handler",
      "description": "This module implements HTTP handlers for serving static content in a Cohttp server. It supports request routing based on file paths, serving embedded or disk-based assets with correct MIME types, and generating single-page application entry points with customizable HTML and asset inclusions. Use it to build static file servers, embed client-side applications, or serve versioned assets with precise path control.",
      "description_length": 414,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 434,
    "min_description_length": 274,
    "avg_description_length": 358.5,
    "embedding_file_size_mb": 0.08736896514892578
  }
}