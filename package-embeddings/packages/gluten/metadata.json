{
  "package": "gluten",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:23.638939",
  "modules": [
    {
      "module_path": "Gluten.Client",
      "library": "gluten",
      "description": "This module manages bidirectional communication over a connection using bigstrings for efficient I/O. It provides methods to read from and write to a stream, handle end-of-file, yield control during blocking operations, and manage connection lifecycle events like shutdown and protocol upgrades. Concrete use cases include implementing network clients for protocols like HTTP/2 or WebSocket where precise control over I/O scheduling and buffering is required.",
      "description_length": 459,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gluten.RUNTIME",
      "library": "gluten",
      "description": "This module manages bidirectional streaming I/O operations with support for reading from and writing to bigstrings. It provides control over read and write states, including yielding, closing, and handling exceptions, while tracking stream closure. Concrete use cases include implementing custom network protocols, managing asynchronous data transfer, and handling streaming encoders and decoders.",
      "description_length": 397,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten.Server",
      "library": "gluten",
      "description": "This module implements server-side connection handling for asynchronous network protocols, managing bidirectional byte streams using Bigstringaf buffers and Faraday output vectors. It provides explicit state transitions for reading and writing, including yielding control during I/O, reporting read/write results, and handling protocol upgrades. Concrete use cases include implementing HTTP/1.1 servers with pipelining support, handling TLS upgrades, and building custom network daemons with precise I/O control.",
      "description_length": 512,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten.Buffer",
      "library": "gluten",
      "description": "This module manages a buffer with operations to create, read from, and write to a fixed-size memory region using Bigstringaf. It supports efficient handling of raw byte data through direct memory manipulation, enabling use cases like network packet processing or binary file parsing. The core operations involve allocating a buffer, retrieving bytes via a callback, and inserting bytes with a continuation-based writer.",
      "description_length": 419,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten",
      "library": "gluten",
      "description": "This module provides a low-level framework for building TCP-based network protocols, combining runtime management, buffered I/O, and precise control over bidirectional communication. It centers around bigstrings for efficient byte handling, with core operations for reading, writing, yielding during blocking calls, and managing connection lifecycle events like shutdowns and protocol upgrades. Submodules refine these capabilities for specific use cases: streaming I/O with state control, server-side byte stream handling, buffer manipulation for packet processing, and structured management of asynchronous data transfer. Examples include implementing HTTP/2 clients, pipelined HTTP/1.1 servers, TLS upgrades, and custom binary protocol handlers.",
      "description_length": 748,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 5,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8333333333333334
  },
  "statistics": {
    "max_description_length": 748,
    "min_description_length": 397,
    "avg_description_length": 507.0,
    "embedding_file_size_mb": 0.01861858367919922
  }
}