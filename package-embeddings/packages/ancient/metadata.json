{
  "package": "ancient",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:03:27.460221",
  "modules": [
    {
      "module_path": "Ancient",
      "library": "ancient",
      "description": "This module provides operations to move OCaml values out of the heap, either into local memory or shared memory files, allowing efficient handling of large or shared data. It supports marking objects as 'ancient', accessing and sharing them via proxies, and managing shared memory mappings with explicit control over memory addresses and file attachments. Concrete use cases include offloading large data structures from the heap and sharing OCaml values between processes via memory-mapped files.",
      "description_length": 497,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 497,
    "min_description_length": 497,
    "avg_description_length": 497.0,
    "embedding_file_size_mb": 0.004080772399902344
  }
}