{
  "package": "tyre",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:05:10.041655",
  "modules": [
    {
      "module_path": "Tyre.Infix",
      "library": "tyre",
      "description": "This module defines infix operators for combining and sequencing parser combinators. It works with values of type `'a Tyre.t`, representing parsers that can consume input and produce values of type `'a`. These operators enable concise composition of URL routes or string patterns by expressing alternatives, sequences, prefixes, and suffixes directly in code.",
      "description_length": 359,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tyre",
      "library": "tyre",
      "description": "This module enables composing regex-like parsers that capture and transform string input into structured OCaml values using combinators like `seq` and `alt`, alongside primitives for atomic values such as strings, numbers, and booleans. It operates on `Tyre.t` parsers and `Tyre.re` typed regex patterns, supporting lazy match extraction, route-based dispatch, and bidirectional serialization through pattern compilation and formatting. The child module enhances parser composition with infix operators that express alternatives, sequences, prefixes, and suffixes concisely, working directly with `'a Tyre.t` parsers to build complex URL routes or string parsers. Examples include parsing configuration files, implementing URL routing in web services, and converting between string representations and typed data structures.",
      "description_length": 824,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 824,
    "min_description_length": 359,
    "avg_description_length": 591.5,
    "embedding_file_size_mb": 0.007694244384765625
  }
}