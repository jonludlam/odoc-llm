{
  "package": "modular-arithmetic",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:52:11.985443",
  "modules": [
    {
      "module_path": "Mod_arith.Make",
      "library": "modular-arithmetic",
      "description": "This module provides functions to convert integers, strings, and floats to a modular integer type, perform arithmetic operations (addition, multiplication, exponentiation, division), comparisons, and compute modular inverses. It operates on a fixed modulus integer type `t`, ensuring all operations adhere to modular constraints through predefined constants and arithmetic rules. It is particularly useful in cryptographic protocols, cyclic data processing, and finite field computations where modular consistency is essential.",
      "description_length": 527,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mod_arith",
      "library": "modular-arithmetic",
      "description": "This module converts integers, strings, and floats to a modular integer type and supports arithmetic operations such as addition, multiplication, exponentiation, and division, along with comparisons and modular inverse calculations. It enforces modular constraints using a fixed modulus, making it ideal for cryptographic algorithms, cyclic data processing, and finite field computations where consistent modular behavior is required.",
      "description_length": 434,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 527,
    "min_description_length": 434,
    "avg_description_length": 480.5,
    "embedding_file_size_mb": 0.029410362243652344
  }
}