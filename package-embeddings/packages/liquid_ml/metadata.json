{
  "package": "liquid_ml",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:51:47.206212",
  "modules": [
    {
      "module_path": "Liquid_ml.Exports",
      "library": "liquid_ml",
      "description": "This module provides utilities for parsing Liquid templates into structured representations and manipulating template values with dynamic filters. It works with lexical tokens, abstract syntax trees (ASTs), and runtime values like integers, floats, and objects, enabling transformations between these forms. Specific use cases include template rendering for web pages, conditional logic evaluation, and data processing pipelines using custom filters.",
      "description_length": 450,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Liquid_ml.Logger",
      "library": "liquid_ml",
      "description": "This module provides functions for conditional logging and value inspection, using log policies to control output. It handles strings, options, and custom data representations, allowing logging of structured values with context-specific formatting. Concrete use cases include tracing variable values during template rendering and grouping related log messages with dynamic content.",
      "description_length": 381,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Liquid_ml.Liquid",
      "library": "liquid_ml",
      "description": "This module enables parsing, rendering, and abstract syntax tree manipulation of a templating language, supporting text substitution, control structures, and layout composition. It operates on strings, syntax tokens, and contextual variables, offering operations like converting lexed values into typed data (lists, numbers), applying transformation filters, and executing logic such as loops or conditionals. These capabilities facilitate dynamic content generation where templates integrate variables, programmatic logic, and reusable components for structured output.",
      "description_length": 570,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Liquid_ml",
      "library": "liquid_ml",
      "description": "This module processes Liquid templates into structured representations, supporting parsing, filtering, and rendering operations on tokens, ASTs, and runtime values like strings, numbers, and objects. It enables dynamic content generation through template substitution, control structures, and custom filters, with utilities for logging and inspecting values during execution. Use cases include web page rendering, conditional logic evaluation, and data transformation pipelines.",
      "description_length": 478,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 570,
    "min_description_length": 381,
    "avg_description_length": 469.75,
    "embedding_file_size_mb": 0.05836677551269531
  }
}