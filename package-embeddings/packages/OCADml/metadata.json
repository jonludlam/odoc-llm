{
  "package": "OCADml",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 19,
  "creation_timestamp": "2025-08-15T12:10:27.248305",
  "modules": [
    {
      "module_path": "PolyText",
      "library": "OCADml.PolyText",
      "description": "Creates 2D polygonal paths representing text shapes using system fonts, with control over font properties like size, weight, and slant. Works with `Poly2.t` lists to model character outlines, suitable for generating geometry in CAD applications. Useful for creating scalable text engravings or extrusions when combined with path processing tools.",
      "description_length": 346,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Mesh.Cap",
      "library": "OCADml",
      "description": "This module defines capping strategies for extruding 2D shapes into 3D meshes, using triangular faces. It provides functions to specify rounded, chamfered, or custom offset profiles for both outer and inner edges, supporting complex shapes like holes and beveled joins. Concrete use cases include defining end caps for swept geometry, creating fillets, and controlling mesh topology during extrusion.",
      "description_length": 400,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Mesh.Prism",
      "library": "OCADml",
      "description": "This module constructs and manipulates rounded prism specifications for generating triangular meshes with controlled edge curvature and joint geometry. It works with path-based shapes, applying curvature factors and joint offsets to create smooth transitions on bottom, top, and side edges. Concrete use cases include modeling extruded shapes with rounded corners and configurable bevels, such as mechanical parts or architectural elements.",
      "description_length": 440,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Path3.Round",
      "library": "OCADml",
      "description": "This module defines types and constructors for specifying rounded and chamfered corners along 3D paths, supporting precise control over geometry through radius, joint, cut, and width parameters. It provides functions to create corner types (`chamf`, `circ`, `bez`) and apply them to paths using fixed (`flat`) or mixed (`mix`) specifications, as well as variable amplitude roundovers (`chamfers`, `circles`, `beziers`) that vary per point. These operations are used to generate smoothly rounded 3D paths for CAD modeling, such as for creating fillets or custom swept shapes.",
      "description_length": 574,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Path2.Round",
      "library": "OCADml",
      "description": "This module defines types and functions for specifying rounded or chamfered corners along 2D paths, supporting precise control over corner geometry using radius, joint, cut, or width parameters. It provides constructors for circular, chamfered, and B\u00e9zier-rounded corners, either uniformly across a path or at specific points with variable amplitudes. These specifications are used to generate smooth or faceted transitions in 2D shapes, such as in CAD designs or vector graphics.",
      "description_length": 480,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Bezier3",
      "library": "OCADml",
      "description": "This module offers tools to generate, evaluate, and modify 3D B\u00e9zier curves and surfaces using control points represented as lists or arrays of 3D vectors. It supports interpolation through specified paths, geometric property calculations (like length and curvature), and transformations such as rotation, scaling, and affine adjustments, enabling applications in 3D modeling, animation, and CAD workflows where precise curve manipulation and spatial adjustments are critical.",
      "description_length": 476,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.BallTree2",
      "library": "OCADml",
      "description": "This module organizes 2D vector points into a ball tree structure for efficient nearest neighbor searches. It supports building trees from lists of 2D points and querying indices or points within a specified radius. It is ideal for applications like spatial queries in geometric modeling or collision detection where repeated searches are performed on static point sets.",
      "description_length": 370,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Mesh",
      "library": "OCADml",
      "description": "This module provides operations for constructing triangular meshes through geometric extrusion, path sweeping, and mathematical function-based surface generation, supporting complex shapes with customizable endcaps and triangulation patterns. It works with 3D vertex-indexed mesh structures, 2D/3D paths, and polygons to enable tasks like solid modeling, surface interpolation, and mesh optimization through point merging or face reversal. Specific applications include calculating volumetric properties, creating printable 3D models via STL export, and transforming meshes with rotations, scaling, or mirroring operations.",
      "description_length": 623,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.BallTree3",
      "library": "OCADml",
      "description": "This module implements a 3D ball tree data structure for efficient nearest neighbor searches. It supports building a tree from a list of 3D points and performing indexed or point-based queries within a given radius. It is particularly useful for applications like spatial indexing, collision detection, or proximity queries in 3D modeling and simulation tasks.",
      "description_length": 360,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Bezier2",
      "library": "OCADml",
      "description": "This module supports constructing, evaluating, and transforming 2D B\u00e9zier curves and surfaces using control points or paths, with operations like curve generation, length calculation, derivative computation, and intersection detection. It works with lists of 2D vectors (`V2.t`), B\u00e9zier functions (`float -> V2.t`), and transformations such as affine mappings, rotations, and quaternions to manipulate curves in 2D or project them into 3D space. Typical applications include generating smooth splines through specified points, measuring curve properties, and applying geometric modifications for design or animation workflows.",
      "description_length": 626,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "OCADml.Path3",
      "library": "OCADml",
      "description": "This module provides operations for constructing and modifying 3D paths represented as lists of 3D vectors, supporting geometric creation (arcs, helices, polygons), spatial analysis (closest points, proximity queries), and transformation workflows (rotation, scaling, alignment). It enables path refinement through resampling, smoothing, and topological adjustments, while integrating measurement tools for length, curvature, and coplanarity checks. Key applications include CAD modeling for sweep-based geometry generation, smooth path transitions, and precise spatial manipulation in design pipelines.",
      "description_length": 603,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Easing",
      "library": "OCADml",
      "description": "This module implements cubic B\u00e9zier easing functions for smooth interpolation between values, using 2D vectors to define control points. It provides predefined easing curves like linear, ease-in, ease-out, and ease-in-out, along with a function to create custom easings from control points. Use it to animate transitions with configurable acceleration and deceleration patterns, such as UI animations or motion paths.",
      "description_length": 417,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Path2",
      "library": "OCADml",
      "description": "This module provides operations for constructing paths from geometric primitives like arcs and splines, modifying them through offsetting, corner rounding, and affine transformations, and analyzing properties such as length, area, and spatial relationships. It works with 2D paths represented as point lists and supports closed/open path handling, making it suitable for CAD applications, toolpath generation in manufacturing, and geometric modeling where precise path manipulation and spatial queries are required.",
      "description_length": 515,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Math",
      "library": "OCADml",
      "description": "This module implements numerical computations including float manipulation, angle conversion, 2D matrix arithmetic, polynomial root finding, and bisection search. It operates on primitive floats, float arrays, and matrices represented as nested arrays. Concrete applications include interpolating values, solving equations numerically, transforming geometric coordinates, and quantizing measurements.",
      "description_length": 400,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Poly2",
      "library": "OCADml",
      "description": "This module provides geometric operations for constructing and validating 2D polygons with outer and inner paths, supporting transformations like offsetting, rotation, and scaling. It works with `Path2.t` paths, `V2.t` vectors, and polygon structures to create shapes (circles, squares, stars), measure properties (area, centroid), and ensure geometric validity through intersection checks. Use cases include 2D modeling workflows requiring precise shape manipulation, hierarchical polygon operations with holes, and spatial analysis for design validation.",
      "description_length": 556,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "OCADml.CubicSpline",
      "library": "OCADml",
      "description": "Implements cubic spline interpolation for 2D paths with support for quadratic, not-a-knot, periodic, and natural boundary conditions. Operates on lists of 2D points (`V2.t list`) and represents splines as piecewise cubic functions with coefficients stored in a private structure. Fits splines to input paths and allows evaluation at arbitrary points, generating interpolated paths or extrapolating beyond input ranges.",
      "description_length": 418,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Poly3",
      "library": "OCADml",
      "description": "The module provides operations for constructing planar 3D polygons with outer boundaries and inner holes, converting between 2D and 3D representations using a specified plane, and generating parametric shapes like circles, squares, ellipses, stars, and rings. It supports geometric transformations (translation, rotation, scaling, mirroring) and measurements (area, centroid, bounding box) on these polygons, which are represented as combinations of outer and inner 3D paths. These capabilities are useful for CAD modeling, 3D printing, and computational geometry tasks requiring precise planar polygon manipulations, validation, and offsetting.",
      "description_length": 645,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.V3",
      "library": "OCADml",
      "description": "This module offers mathematical and geometric operations for manipulating 3D vectors, including arithmetic, transformations (rotation, scaling, projection), and spatial analysis (distance, collinearity, angle calculations). It operates on 3D vectors (`OCADml.V3.t`) and composite structures like paths, polygons, and meshes, enabling precise spatial computations. These capabilities are particularly useful in 3D modeling, computer-aided design, and applications requiring spatial transformations or geometric integrity checks.",
      "description_length": 527,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OCADml.Plane",
      "library": "OCADml",
      "description": "The module provides functions to construct and manipulate planes in three-dimensional space using normal vectors and offsets, supporting operations like point projection, coordinate lifting, distance calculations, and line-plane intersections. It includes predefined orthogonal planes (XZ, YZ) for seamless 2D-to-3D coordinate transformations, enabling geometric analysis and spatial operations in CAD workflows.",
      "description_length": 412,
      "index": 18,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 24,
    "meaningful_modules": 19,
    "filtered_empty_modules": 5,
    "retention_rate": 0.7916666666666666
  },
  "statistics": {
    "max_description_length": 645,
    "min_description_length": 346,
    "avg_description_length": 483.57894736842104,
    "embedding_file_size_mb": 0.27571868896484375
  }
}