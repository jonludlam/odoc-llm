{
  "package": "cmdlang-to-base",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:56:13.044950",
  "modules": [
    {
      "module_path": "Cmdlang_to_base.Translate.Private.Arg",
      "library": "cmdlang-to-base",
      "description": "Translates command-line argument AST nodes into internal command representations using a provided configuration. It operates on `Cmdlang_ast.Ast.Arg.t` values and produces `Cmdlang_to_base.Translate.Private.Arg.t` values. This translation is used to convert parsed command-line arguments into a form suitable for execution or further processing within the command framework.",
      "description_length": 374,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cmdlang_to_base.Translate.Config",
      "library": "cmdlang-to-base",
      "description": "Translates cmdlang parser definitions into core.command structures. It manages configuration options like auto_add_one_dash_aliases and full_flags_required to control flag parsing behavior. Useful for converting command-line parser specifications into executable command objects with customizable alias and flag handling.",
      "description_length": 321,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cmdlang_to_base.Translate.Private",
      "library": "cmdlang-to-base",
      "description": "Translates command-line argument AST nodes into internal command representations using a provided configuration. It operates on `Cmdlang_ast.Ast.Arg.t` values and produces `Cmdlang_to_base.Translate.Private.Arg.t` values. Used to convert parsed command-line arguments into a form suitable for execution or further processing within the command framework.",
      "description_length": 354,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cmdlang_to_base.Translate.Utils",
      "library": "cmdlang-to-base",
      "description": "This module provides functions to adapt command parsers for translation to executable commands, specifically handling error propagation and unit conversion. It works with `Cmdlang.Command.t` structures that return `Base.unit` or `Base.Or_error.t` values. Concrete use cases include converting basic command parsers into standardized command forms and wrapping error-handling logic to print errors and exit on failure.",
      "description_length": 417,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cmdlang_to_base.Translate",
      "library": "cmdlang-to-base",
      "description": "Translates command-line parser definitions into executable command structures with configurable flag and alias handling. Converts `Cmdlang.Command.t` specifications into `Command.t` values, supporting argument parsing, error propagation, and unit-based command bodies. Useful for migrating command definitions between backends while customizing parsing behavior like flag requirements and alias generation.",
      "description_length": 406,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cmdlang_to_base",
      "library": "cmdlang-to-base",
      "description": "Translates command-line parser definitions into executable command structures with configurable flag and alias handling. Converts `Cmdlang.Command.t` specifications into `Command.t` values, supporting argument parsing, error propagation, and unit-based command bodies. Useful for migrating command definitions between backends while customizing parsing behavior like flag requirements and alias generation.",
      "description_length": 406,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 417,
    "min_description_length": 321,
    "avg_description_length": 379.6666666666667,
    "embedding_file_size_mb": 0.07306098937988281
  }
}