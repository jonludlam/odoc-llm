{
  "package": "lua_pattern",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:04.994770",
  "modules": [
    {
      "module_path": "Lua_pattern.Capture",
      "description": "Provides functions to retrieve the start and end indices of a matched range and to extract the corresponding substring from the search string. Works with a custom type representing captured ranges. Used to isolate and process specific segments of text after a search operation.",
      "description_length": 277,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lua_pattern.Match",
      "description": "Provides functions to extract the start and end indices of a matched substring, retrieve the matched string, and access a list of captured groups. Works with a type representing a match result from pattern matching operations. Used to analyze and process the outcomes of string pattern matching in parsing or text processing tasks.",
      "description_length": 331,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "lua_pattern",
      "description": "Matches Lua-style pattern strings against input strings, supporting character classes, repetition, and capture groups. It processes strings and returns matched substrings or structured capture data. Used for parsing log lines, extracting data from unstructured text, and implementing custom syntax highlighting.",
      "description_length": 311,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lua_pattern",
      "description": "Encapsulates functionality for analyzing and extracting information from string matches, offering precise control over matched ranges and captured groups. It defines types for representing match results and captured ranges, along with operations to retrieve indices, substrings, and grouped content. Users can isolate specific text segments, extract matched values, and process structured data from pattern matches. For example, it enables parsing log entries by extracting timestamps or parsing CSV fields by capturing delimited values.",
      "description_length": 537,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 537,
    "min_description_length": 277,
    "avg_description_length": 364.0,
    "embedding_file_size_mb": 0.014951705932617188
  }
}