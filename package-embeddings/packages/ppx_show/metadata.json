{
  "package": "ppx_show",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:14.441891",
  "modules": [
    {
      "module_path": "Ppx_show",
      "library": "ppx_show",
      "description": "The module provides functions to generate pretty-printing logic for OCaml data types, creating `pp` and `show` implementations by analyzing AST nodes like `core_type`, `type_declaration`, and `value_binding`. It constructs module signatures and expressions to support syntax extensions, handling records, variants, tuples, and built-in types. This enables automated derivation of value formatting in PPX extensions, simplifying debugging and serialization workflows.",
      "description_length": 466,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_show_runtime",
      "library": "ppx_show.runtime",
      "description": "Formats a list of values using a provided formatter function. Works with any list type `'a list` and a formatter from the `Format` module. Useful for generating human-readable string representations of lists in logging or debugging scenarios.",
      "description_length": 242,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 466,
    "min_description_length": 242,
    "avg_description_length": 354.0,
    "embedding_file_size_mb": 0.007691383361816406
  }
}