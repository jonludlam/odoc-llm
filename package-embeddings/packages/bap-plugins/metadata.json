{
  "package": "bap-plugins",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:49:33.267679",
  "modules": [
    {
      "module_path": "Bap_plugins.Std.Plugins",
      "library": "bap-plugins",
      "description": "This module manages plugin discovery, loading, and event reporting through functions like `run`, `load`, and `list`. It works with plugin data structures and event streams to track operations such as opening, linking, and loading plugins. Concrete use cases include loading plugins from predefined directories, filtering plugins by environment or provided features, and monitoring plugin load progress or errors via event streams.",
      "description_length": 430,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_plugins.Std.Plugin",
      "library": "bap-plugins",
      "description": "This module manages loadable plugins, each represented by a path, name, description, and associated bundle. It supports operations to create plugins from paths, access their metadata, and load them along with their dependencies. Use cases include dynamically loading analysis passes or extending tool functionality at runtime.",
      "description_length": 326,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_plugins.Std",
      "library": "bap-plugins",
      "description": "This module provides operations for managing dynamically loadable plugins, including creating, loading, and inspecting plugins along with their metadata and dependencies. It works with plugin data structures that encapsulate paths, names, descriptions, and bundles, as well as event streams for tracking plugin operations. Concrete use cases include loading analysis passes at runtime, filtering plugins based on features or environment, and monitoring plugin loading progress and errors.",
      "description_length": 488,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_plugins",
      "library": "bap-plugins",
      "description": "Manages dynamically loadable plugins with operations to create, load, and inspect them, including handling metadata, dependencies, and event streams. Works with plugin data structures representing paths, names, descriptions, and bundles. Used for runtime loading of analysis passes, filtering plugins by features or environment, and monitoring loading progress and errors.",
      "description_length": 372,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 488,
    "min_description_length": 326,
    "avg_description_length": 404.0,
    "embedding_file_size_mb": 0.05833911895751953
  }
}