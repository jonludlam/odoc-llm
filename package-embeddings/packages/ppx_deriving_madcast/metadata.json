{
  "package": "ppx_deriving_madcast",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:04:12.337731",
  "modules": [
    {
      "module_path": "Madcast",
      "library": "ppx_deriving_madcast.api",
      "description": "This module generates casting functions for OCaml types, primarily working with arrow types. It provides operations to derive annotated casting functions, find cast functions between specific types, split arrow types into domain and codomain, and annotate expressions with types. Concrete use cases include generating type-safe casts during code transformation and building typed wrappers for untyped expressions.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 1,
    "filtered_empty_modules": 1,
    "retention_rate": 0.5
  },
  "statistics": {
    "max_description_length": 413,
    "min_description_length": 413,
    "avg_description_length": 413.0,
    "embedding_file_size_mb": 0.00406646728515625
  }
}