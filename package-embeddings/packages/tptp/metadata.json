{
  "package": "tptp",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:38.645203",
  "modules": [
    {
      "module_path": "Tptp.File",
      "description": "Opens and manages file resources, reading and processing TPTP input structures while resolving include directives with configurable base directories. Processes each TPTP input individually or collects them into a list for output. Writes TPTP inputs to a file with optional formatting controls.",
      "description_length": 293,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "tptp",
      "description": "Provides functions to parse, validate, and manipulate TPTP (Thousands of Problems for Theorem Provers) format expressions, including handling clauses, formulas, and annotations. Works with abstract syntax trees, strings, and lists representing logical expressions. Used to preprocess input for automated theorem provers and check compliance with TPTP standards.",
      "description_length": 361,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tptp_ast",
      "description": "This module provides parsing operations that convert string representations of TPTP syntax into structured abstract syntax tree (AST) components, including variables, formulas, and annotations, while enforcing type safety and error handling. It works with specialized data structures for first-order logic and clause normal form, distinguishing between system and user-defined elements to represent terms, data, and logical expressions. Use cases include processing TPTP-formatted logical specifications for theorem proving or formal verification tasks.",
      "description_length": 553,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tptp_printer",
      "description": "The module provides functions to serialize Tptp_ast nodes\u2014such as formulas, terms, literals, and atoms\u2014into PPrint documents or TPTP format strings, with additional support for converting enum-like types to textual representations. It focuses on structured conversion of logical formulas from internal abstract syntax trees into standardized TPTP output, enabling applications like theorem proving or logic system interoperability. Use cases include generating human-readable or machine-processable logical expressions for verification tools or formal methods workflows.",
      "description_length": 570,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tptp_lexer",
      "description": "Processes TPTP input by reading tokens from a lexing buffer, skipping comments when inside a formula. Handles boolean flags to control comment skipping during parsing. Works with Lexing.lexbuf and returns Tptp_parser.token values.",
      "description_length": 230,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tptp",
      "description": "Reads and writes FOF and CNF formulas in TPTP format, handling file resources, include directives, and comment structures. Supports operations on formulas such as parsing, collecting, and serializing with formatting options. Processes individual inputs or aggregates them into lists for output. Examples include loading a TPTP file, resolving included files from specified directories, and writing formatted logical expressions to disk.",
      "description_length": 436,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tptp_parser",
      "description": "Parses TPTP input streams into an abstract syntax tree using a lexer function and a lexing buffer. It processes tokens defined by a custom type to construct structured logical formulas and problems. This is used to read and analyze TPTP format files in automated theorem proving workflows.",
      "description_length": 289,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 570,
    "min_description_length": 230,
    "avg_description_length": 390.2857142857143,
    "embedding_file_size_mb": 0.0258636474609375
  }
}