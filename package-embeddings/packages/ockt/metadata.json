{
  "package": "ockt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:56.301577",
  "modules": [
    {
      "module_path": "Ockt.Parse",
      "library": "ockt",
      "description": "This module parses structured configuration data from strings into nested tables and string values. It processes token lists to build hierarchical key-value structures, supporting direct value extraction and table navigation. Use it to load and access nested configuration entries from text input.",
      "description_length": 297,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ockt.Token",
      "library": "ockt",
      "description": "This module defines a set of token types representing structural and content elements of a configuration or input format, including delimiters, comments, keys, and values. It provides functions to convert tokens to strings and to transform character lists or strings into token sequences. It is used for parsing input files or streams into structured tokens for further processing.",
      "description_length": 381,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ockt.Util",
      "library": "ockt",
      "description": "Converts between strings and lists of characters. Works directly with `string` and `char list` types. Useful for parsing or manipulating text at the character level, such as in lexers or custom string processing.",
      "description_length": 212,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ockt",
      "library": "ockt",
      "description": "This module processes structured configuration data by converting text input into hierarchical tables and tokens, enabling navigation and extraction of values. It supports key-value parsing, tokenization of strings, and character-level manipulation for building structured representations. You can load configuration files, extract nested values, tokenize input streams, or convert strings to character lists for custom parsing workflows.",
      "description_length": 438,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 438,
    "min_description_length": 212,
    "avg_description_length": 332.0,
    "embedding_file_size_mb": 0.014936447143554688
  }
}