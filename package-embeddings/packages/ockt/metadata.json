{
  "package": "ockt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:52:52.519400",
  "modules": [
    {
      "module_path": "Ockt.Parse",
      "library": "ockt",
      "description": "This module parses structured configuration data from strings into nested tables and string values. It supports extracting values by key from hash tables, converting values to strings, and building nested structures from tokenized input. It is used to process configuration files where tables represent sections and strings represent key-value entries.",
      "description_length": 352,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ockt.Token",
      "library": "ockt",
      "description": "This module defines a set of token types representing structural and content elements of a configuration or input format, such as `Key`, `Value`, `Comment`, and delimiters like `BraceOpen` and `Separator`. It provides functions to convert tokens to strings and to transform character lists or strings into token lists. It is used to break down input into meaningful components for parsing or processing configuration files or structured text.",
      "description_length": 442,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ockt.Util",
      "library": "ockt",
      "description": "Converts between strings and lists of characters. Works directly with `string` and `char list` types. Useful for parsing or manipulating text at the character level, such as in lexers or custom string transformations.",
      "description_length": 217,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ockt",
      "library": "ockt",
      "description": "The module provides three submodules for parsing and processing structured configuration data. `Parse` builds nested tables from tokenized input and extracts values by key, `Token` defines and transforms structural and content tokens like `Key` and `BraceOpen`, and `Util` converts between strings and character lists. These components handle configuration file parsing, structured text processing, and low-level string manipulation.",
      "description_length": 433,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 442,
    "min_description_length": 217,
    "avg_description_length": 361.0,
    "embedding_file_size_mb": 0.05839729309082031
  }
}