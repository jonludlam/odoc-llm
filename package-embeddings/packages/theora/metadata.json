{
  "package": "theora",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:40.049390",
  "modules": [
    {
      "module_path": "Theora_decoder",
      "library": "theora.decoder",
      "description": "Registers the Theora decoder for use with the Ogg demuxer, enabling decoding of Theora video streams from Ogg containers. Works with raw video frames and Ogg packets. Used to extract and decode video data from Ogg files containing Theora-encoded streams.",
      "description_length": 254,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Theora.Skeleton",
      "library": "theora",
      "description": "Generates Theora fisbone packets for Ogg Skeleton streams, including start granule positioning, header metadata, and stream serialization. Works with Theora encoding parameters and Ogg packet structures. Used to construct Ogg container files with Theora video tracks, ensuring proper stream initialization and metadata embedding.",
      "description_length": 329,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Theora.Decoder",
      "library": "theora",
      "description": "Decodes Theora video streams from Ogg packets by parsing headers, extracting frame data, and converting granule positions to frame indices. It processes `Ogg.Stream.packet` and `Ogg.Stream.stream` inputs to produce `Theora.yuv_buffer` outputs, handling initialization and packet submission for decoding. Used to extract raw YUV video frames from a Theora-encoded Ogg stream.",
      "description_length": 374,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Theora.Encoder",
      "library": "theora",
      "description": "This module initializes and manages the encoding of Theora video streams using provided settings and YUV buffers. It generates header packets, encodes video frames into Ogg pages, and handles end-of-stream signaling. Concrete use cases include creating Theora-encoded Ogg files from raw video data and managing granule position to frame index conversion during encoding.",
      "description_length": 370,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Theora",
      "library": "theora",
      "description": "This module enables Theora video encoding and decoding with support for keyframe detection, color space conversion, and granule position tracking. It works with raw YUV buffers and integrates with Ogg containers through submodules that handle fisbone packet generation, stream decoding, and header management. You can encode video into Ogg pages, extract frame data from Ogg streams, and construct valid Theora tracks with proper initialization metadata. Specific workflows include streaming video encoding, frame-level analysis, and synchronized audio-video container assembly.",
      "description_length": 578,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 578,
    "min_description_length": 254,
    "avg_description_length": 381.0,
    "embedding_file_size_mb": 0.018606185913085938
  }
}