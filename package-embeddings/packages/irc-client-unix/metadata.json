{
  "package": "irc-client-unix",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:56.466264",
  "modules": [
    {
      "module_path": "Irc_client_unix.Io",
      "description": "Provides functions for reading from and writing to file descriptors, including non-blocking I/O and polling. Works with raw data types such as 'a t, inet_addr, and config to manage network and system-level input/output operations. Used to implement custom network protocols and handle asynchronous communication in low-level system applications.",
      "description_length": 345,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "irc-client-unix",
      "description": "Provides asynchronous and synchronous message handling, connection management, and event dispatching for IRC protocols. Works with socket connections, message parsers, and event handlers. Used to build real-time chat clients and bot interactions with customizable event responses.",
      "description_length": 280,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irc_client_unix",
      "description": "Manages low-level I/O operations through file descriptors, supporting non-blocking reads, writes, and polling. It handles raw data types like 'a t, inet_addr, and config to facilitate direct network communication. This enables the implementation of custom protocols and asynchronous data exchange. Examples include reading from a socket without blocking and monitoring multiple file descriptors for activity.",
      "description_length": 408,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 408,
    "min_description_length": 280,
    "avg_description_length": 344.3333333333333,
    "embedding_file_size_mb": 0.011319160461425781
  }
}