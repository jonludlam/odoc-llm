{
  "package": "configurator",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:19.215320",
  "modules": [
    {
      "module_path": "Configurator.C_define.Type",
      "description": "Converts values to and from S-expressions, and provides a total ordering for comparisons. Works with the abstract type `t` defined in the module. Used to serialize and deserialize data structures for logging or configuration parsing.",
      "description_length": 233,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Configurator.C_define.Value",
      "description": "Converts values to and from S-expressions, and provides a comparison function for ordering. Works with an abstract type representing arbitrary values. Used to serialize and deserialize data structures in a structured, human-readable format.",
      "description_length": 240,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Configurator.C_define",
      "description": "Encapsulates serialization and comparison capabilities for abstract data types, enabling structured data exchange and ordered operations. Supports conversion to and from S-expressions, allowing for easy logging, configuration, and data manipulation. Provides total ordering for comparisons, facilitating sorting and equality checks. Can serialize complex structures for storage, deserialize them for processing, and compare values for logical operations.",
      "description_length": 454,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Configurator.Pkg_config",
      "description": "Provides functions to retrieve configuration data from pkg-config, including querying specific packages and checking installation status. Operates on a configuration handle type and package-specific configuration records. Used to dynamically fetch compiler and linker flags for external libraries during build processes.",
      "description_length": 320,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "configurator",
      "description": "Provides functions to parse and merge configuration files from JSON and environment variables, supporting nested structures and type-safe access. Works with associative arrays, records, and primitive types to represent and manipulate configuration data. Used to load application settings, override defaults with environment-specific values, and validate configuration schemas.",
      "description_length": 376,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Configurator",
      "description": "Handles data serialization, comparison, and configuration retrieval, supporting S-expression conversion, ordered operations, and dynamic package querying. Operates on structured data types and configuration handles, enabling data persistence, sorting, and build-time dependency management. Allows conversion of complex objects to and from S-expressions, and fetches compiler/linker flags from pkg-config. Can sort custom types, log structured data, and ensure library dependencies are met during builds.",
      "description_length": 503,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 503,
    "min_description_length": 233,
    "avg_description_length": 354.3333333333333,
    "embedding_file_size_mb": 0.022231101989746094
  }
}