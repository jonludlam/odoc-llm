{
  "package": "bap-api",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:29.993055",
  "modules": [
    {
      "module_path": "Bap_api.S",
      "library": "bap-api",
      "description": "Implements language processors that map high-level API models to low-level program terms. It operates on `Bap_api.api` and `Bap.Std.Term.mapper`, enabling concrete transformations based on parsed API definitions. Used to integrate language-specific abstractions, such as mapping C function signatures to corresponding machine code representations during binary analysis.",
      "description_length": 370,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_api",
      "library": "bap-api",
      "description": "This module manages language-specific processors that apply high-level API models to low-level program representations, working with filenames and API strings to enable binary analysis and translation via architecture-specific plugins. It provides operations to register and run processors during program transformation passes, integrating with `Bap_api.api` and `Bap.Std.Term.mapper` for concrete term-level transformations. Child modules implement the actual language processors, mapping API definitions\u2014like C function signatures\u2014to machine code representations during analysis. Use it to extend binary analysis tools with custom language abstractions or architecture-specific processing logic.",
      "description_length": 697,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 697,
    "min_description_length": 370,
    "avg_description_length": 533.5,
    "embedding_file_size_mb": 0.007686614990234375
  }
}