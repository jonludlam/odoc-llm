{
  "package": "bst",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:16.071923",
  "modules": [
    {
      "module_path": "Bst.Bisec_tree.Make",
      "library": "bst",
      "description": "This module implements a binary space partitioning tree for efficient spatial queries on point sets, supporting operations like nearest neighbor search, range queries, and dynamic point insertion. It operates on points with optional payloads, organizing them in a hierarchical structure that enables metric-based distance comparisons and structural analysis. The simplification functionality generates multi-resolution summaries of point clouds, useful for applications like spatial indexing, clustering, or progressive data loading in visualization systems.",
      "description_length": 558,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bst.Bisec_tree.Point",
      "library": "bst",
      "description": "This module represents points within a bisecting tree structure, primarily supporting distance calculations between points. It defines operations for comparing and measuring separation between elements in a space where a custom distance metric is required. Common use cases include spatial partitioning, nearest neighbor searches, and clustering algorithms where precise distance evaluation is critical.",
      "description_length": 403,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bst.Bisec_tree",
      "library": "bst",
      "description": "This module provides a binary bisection tree for managing intervals with floating-point bounds, enabling precise interval splitting, navigation, and conversion of traversal paths to strings. It supports adaptive numerical integration and root-finding through operations that refine and traverse intervals using one or two bands as heuristics. The first child module extends the structure to handle spatial data, organizing points into a binary space partitioning tree for efficient nearest neighbor searches, range queries, and dynamic insertion, with simplification for multi-resolution summaries. The second child module focuses on point-based distance calculations, enabling custom metric comparisons for clustering and spatial partitioning where accurate separation measurements are essential.",
      "description_length": 797,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bst",
      "library": "bst",
      "description": "This module implements a binary bisection tree for managing intervals with floating-point bounds, supporting precise splitting, traversal, and conversion of paths to strings. It enables adaptive numerical integration and root-finding through heuristic-driven interval refinement, while extensions handle spatial data via binary space partitioning for efficient nearest neighbor searches, range queries, and dynamic insertion with multi-resolution summaries. Additional functionality includes custom metric-based distance calculations for clustering and spatial partitioning. Example uses include refining integration intervals, querying point ranges in 2D space, and computing nearest neighbors under custom distance metrics.",
      "description_length": 725,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 797,
    "min_description_length": 403,
    "avg_description_length": 620.75,
    "embedding_file_size_mb": 0.014929771423339844
  }
}