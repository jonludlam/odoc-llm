{
  "package": "autofonce_misc",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:17.118810",
  "modules": [
    {
      "module_path": "Autofonce_misc.Misc",
      "description": "Provides functions for handling signals, logging errors, executing commands, and managing files, including recursive removal and path-based file lookup. Works with integers, strings, format strings, and unit types. Used for setting up signal handlers, generating error messages, executing shell commands, and locating files in a directory structure.",
      "description_length": 349,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Autofonce_misc.Version",
      "description": "Provides functions to retrieve the version string, optional commit hash, and optional commit date. Works with string and option types to expose build-time metadata. Used to dynamically access build information in logging, diagnostics, and deployment tracking.",
      "description_length": 259,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "autofonce_misc",
      "description": "Provides functions to parse and execute GNU Autoconf test suites, focusing on m4 macro expansion and test execution. Works with structured test data, including test cases, macro definitions, and execution logs. Used to automate and validate configuration scripts during software build processes.",
      "description_length": 295,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Autofonce_misc",
      "description": "handles signal management, error logging, command execution, file operations, and build metadata retrieval. it exposes functions for working with integers, strings, format strings, and option types to manage system interactions and retrieve version details. it enables setting up signal handlers, executing shell commands, locating files, and accessing commit hashes and dates. examples include logging errors, recursively removing files, and embedding build information in output.",
      "description_length": 481,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 4,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 481,
    "min_description_length": 259,
    "avg_description_length": 346.0,
    "embedding_file_size_mb": 0.014946937561035156
  }
}