{
  "package": "prbnmcn-mcts",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T23:03:58.848714",
  "modules": [
    {
      "module_path": "Mcts.Ucb1.Poly_syntax",
      "library": "prbnmcn-mcts",
      "description": "This module provides monadic binding and mapping operations using polymorphic equality and hashing for memoization. It works with values of type `'a t`, supporting chaining computations with `map`, `bind`, and infix operators `>|=` and `>>=`. Use it to build sequences of stateful MCTS exploration steps where intermediate results guide subsequent simulations.",
      "description_length": 360,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mcts.Ucb1.Make_syntax",
      "library": "prbnmcn-mcts",
      "description": "Implements monadic operations for tree traversal and node expansion in a UCB1-based Monte-Carlo tree search. Works with hierarchical data structures representing game states or decision nodes via the `H.t` type. Enables chaining probabilistic simulations and reward updates through `bind` and `map`, using operators like `>>=` and `>|=` to compose search steps over successive playouts.",
      "description_length": 386,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mcts.Ucb1",
      "library": "prbnmcn-mcts",
      "description": "Implements UCB1-based Monte-Carlo tree search with explicit choice points over stateful decision trees. Works with hierarchical data structures representing game states or probabilistic decision nodes, using `bind` and `map` to compose simulations that evaluate outcomes and propagate rewards. Concrete use cases include game AI for turn-based strategy games and sequential decision-making under uncertainty.",
      "description_length": 408,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mcts",
      "library": "prbnmcn-mcts",
      "description": "Implements UCB1-based Monte-Carlo tree search over stateful decision trees with explicit choice points. Works with hierarchical data structures representing game states or probabilistic decision nodes, using `bind` and `map` to compose simulations that evaluate outcomes and propagate rewards. Used for game AI in turn-based strategy games and sequential decision-making under uncertainty.",
      "description_length": 389,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 408,
    "min_description_length": 360,
    "avg_description_length": 385.75,
    "embedding_file_size_mb": 0.058419227600097656
  }
}