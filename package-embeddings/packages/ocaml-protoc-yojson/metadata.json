{
  "package": "ocaml-protoc-yojson",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:19.971753",
  "modules": [
    {
      "module_path": "Pbrt_yojson.E",
      "description": "Provides functions to handle and convert error representations, including converting a custom error type to a string and generating error messages for unexpected JSON types or malformed variants. Works with a custom error type and strings. Used to generate descriptive error messages during JSON parsing and variant validation.",
      "description_length": 327,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "ocaml-protoc-yojson",
      "description": "Provides functions to serialize and deserialize OCaml values to and from JSON using the Yojson library. Works with OCaml's variant types, records, and primitive types, supporting custom type annotations. Enables integration of protocol buffer messages with JSON-based data exchange in applications.",
      "description_length": 298,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pbrt_yojson",
      "description": "Handles error conversion and messaging during JSON processing, transforming custom errors into readable strings and generating appropriate messages for parsing issues. Supports a custom error type and string operations to ensure clear feedback. Can identify invalid JSON structures or incorrect variant formats and produce specific error descriptions. Enables robust error handling by providing detailed diagnostics for malformed input.",
      "description_length": 436,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 436,
    "min_description_length": 298,
    "avg_description_length": 353.6666666666667,
    "embedding_file_size_mb": 0.0113067626953125
  }
}