{
  "package": "ocaml-protoc-yojson",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:46:28.207814",
  "modules": [
    {
      "module_path": "Pbrt_yojson.E",
      "library": "ocaml-protoc-yojson",
      "description": "This module defines error types for handling JSON parsing errors, including unexpected type mismatches and malformed variants. It provides functions to construct these errors and convert them to string representations. Concrete use cases include reporting invalid JSON structures during decoding or handling incorrect variant tags in serialized data.",
      "description_length": 350,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pbrt_yojson",
      "library": "ocaml-protoc-yojson",
      "description": "This module provides functions to decode and encode JSON values with strict type handling, converting JSON nodes to specific OCaml types like int32, float, string, and bool while raising precise errors on mismatches. It operates on polymorphic variant types representing JSON nodes, such as `Int`, `String`, and `Bool, and includes helper functions to construct these variants. Concrete use cases include parsing JSON-encoded configuration data, validating API responses, and decoding serialized records with expected type constraints.",
      "description_length": 535,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 535,
    "min_description_length": 350,
    "avg_description_length": 442.5,
    "embedding_file_size_mb": 0.029397010803222656
  }
}