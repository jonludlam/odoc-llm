{
  "package": "bap-trivial-condition-form",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:49:37.525363",
  "modules": [
    {
      "module_path": "Trivial_condition_form_main.TCF",
      "library": "bap-plugin-trivial_condition_form",
      "description": "Transforms condition expressions in BAP IR blocks by extracting non-trivial conditions into variable assignments, ensuring conditions are only variables or constants. It operates on BAP IR terms including blocks, subroutines, and programs, introducing new variables to store intermediate condition results. This simplifies control flow analysis and supports precise symbolic execution by normalizing conditional expressions.",
      "description_length": 424,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trivial_condition_form_main.Config",
      "library": "bap-plugin-trivial_condition_form",
      "description": "This module handles command-line configuration and parameter parsing with predefined converters for basic types (booleans, integers) and composite structures (lists, tuples, arrays), supporting flags, multi-value arguments, and parameter deprecation. It works with configuration parameters and futures, enabling structured data parsing from strings, files, or directories while allowing customizable separators and formatting. Key use cases include building type-safe CLI interfaces, generating manpage documentation blocks, and managing legacy parameter transitions through deprecation utilities.",
      "description_length": 597,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trivial_condition_form_main",
      "library": "bap-plugin-trivial_condition_form",
      "description": "This module implements a command-line tool for processing BAP IR projects, transforming non-trivial condition expressions into normalized forms suitable for analysis. It provides structured logging functions (debug, info, warning, error) with custom formatters and progress reporting for tasks. The module works directly with BAP IR structures, command-line arguments, and configuration parameters, supporting type-safe parsing and deprecation handling through its submodules.",
      "description_length": 476,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 597,
    "min_description_length": 424,
    "avg_description_length": 499.0,
    "embedding_file_size_mb": 0.04387855529785156
  }
}