{
  "package": "rdf_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:17.647904",
  "modules": [
    {
      "module_path": "Rdf_ppx.Ppx_rdf",
      "library": "rdf_ppx",
      "description": "This module implements a syntax extension for embedding SPARQL queries directly in OCaml code, validating their syntax at compile time. It provides functions to construct and manipulate located values, parse and check SPARQL query strings using a regular expression, and generate corresponding OCaml expressions from the parsed queries. Concrete use cases include safely embedding SPARQL queries within OCaml programs and ensuring query correctness during compilation.",
      "description_length": 468,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_ppx",
      "library": "rdf_ppx",
      "description": "This module enables the safe integration of SPARQL queries into OCaml code by validating query syntax at compile time. It supports the construction and manipulation of located values, parsing and checking SPARQL strings using a regular expression, and generating corresponding OCaml expressions. Users can embed SPARQL queries directly in their code, ensuring correctness during compilation and enabling seamless interaction between OCaml and RDF data. For example, a developer can write a SPARQL query inline and have it automatically parsed and type-checked as part of the build process.",
      "description_length": 589,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 589,
    "min_description_length": 468,
    "avg_description_length": 528.5,
    "embedding_file_size_mb": 0.007693290710449219
  }
}