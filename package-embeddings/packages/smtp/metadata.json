{
  "package": "smtp",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T23:04:33.420063",
  "modules": [
    {
      "module_path": "Smtp.Make.Addr",
      "library": "smtp.unix",
      "description": "This module defines a type `t` for representing email addresses and provides functions to convert between string values and the structured type. It ensures valid email address formatting during conversion. Use cases include parsing email strings from user input or configuration files and serializing email addresses for network transmission or storage.",
      "description_length": 353,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smtp.Make",
      "library": "smtp.unix",
      "description": "This module implements an SMTP client interface for establishing connections, issuing SMTP commands, and sending emails. It works with string-based SMTP requests and responses, structured email addresses via the `Addr` submodule, and handles asynchronous I/O operations through the `IO` parameter. Concrete use cases include programmatically sending emails through an SMTP server, handling SMTP command sequences, and managing connections with customizable host and port settings.",
      "description_length": 480,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtp_unix.Addr",
      "library": "smtp.unix",
      "description": "This module defines a type `t` for representing email addresses and provides functions to convert between strings and this typed representation. It ensures proper handling of email address formatting and parsing. Useful for validating and manipulating email addresses in SMTP-related applications.",
      "description_length": 297,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtp",
      "library": "smtp.unix",
      "description": "This module implements an SMTP client for establishing connections, issuing SMTP commands, and sending emails. It works with string-based SMTP requests and responses, structured email addresses via the `Addr` submodule, and handles asynchronous I/O through the `IO` parameter. Concrete use cases include programmatically sending emails through an SMTP server, managing SMTP command sequences, and configuring connections with custom hosts and ports.",
      "description_length": 449,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smtp_unix",
      "library": "smtp.unix",
      "description": "This module implements SMTP client operations for sending emails over a Unix-based network connection. It provides functions to connect to an SMTP server, send SMTP commands (`HELO`, `MAIL FROM`, `RCPT TO`, `DATA`, `QUIT`), and directly send formatted email messages. The module works with typed email addresses and handles asynchronous I/O using a monadic interface, making it suitable for use in networked applications that require direct SMTP communication.",
      "description_length": 460,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 480,
    "min_description_length": 297,
    "avg_description_length": 407.8,
    "embedding_file_size_mb": 0.07282829284667969
  }
}