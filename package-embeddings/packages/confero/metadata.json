{
  "package": "confero",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:56:24.049384",
  "modules": [
    {
      "module_path": "Confero.Collation_mapping",
      "library": "confero",
      "description": "Maps Unicode characters to collation elements using a custom collation table. It processes sequences of Unicode characters and transforms them into sequences of collation elements, which are used for sorting and comparing strings according to specific linguistic rules. This module is used when implementing custom sorting orders for text processing tasks.",
      "description_length": 356,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Confero.Sort_key",
      "library": "confero",
      "description": "This module implements comparison keys for collation, where each key is a private string encoding collation elements in lexicographic byte order. It provides functions to construct keys from collation elements, Unicode character sequences, or strings using a specified collation mapping, along with equality, comparison, and pretty-printing operations. Concrete use cases include generating sort keys for internationalized text comparison and efficient sorting of strings according to language-specific rules.",
      "description_length": 509,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Confero.Collation_element",
      "library": "confero",
      "description": "This module represents collation elements as vectors of integer weights, derived from strings and a collation mapping. It supports creating collation elements with specified weights, checking if an element is variable, determining ignorable weight levels, and encoding/decoding elements for storage or transmission. Use cases include implementing custom string comparison logic and handling linguistic sorting rules where specific character sequences require tailored collation behavior.",
      "description_length": 487,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Confero",
      "library": "confero",
      "description": "This module processes Unicode strings into collation elements for custom sorting and comparison based on linguistic rules. It includes functions to register and infer collation mappings, generate sort keys, and compare strings with configurable encoding and language settings. It is used for implementing language-specific text sorting and comparison in internationalized applications.",
      "description_length": 385,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Confero_ducet",
      "library": "confero.ducet",
      "description": "Contains a predefined collation mapping used to normalize and compare strings according to specific linguistic rules. Works directly with string values and applies transformations defined in the collation mapping. Useful for implementing consistent string sorting and comparison in multilingual contexts.",
      "description_length": 304,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 509,
    "min_description_length": 304,
    "avg_description_length": 408.2,
    "embedding_file_size_mb": 0.07284355163574219
  }
}