{
  "package": "brotli",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:22.622374",
  "modules": [
    {
      "module_path": "Brotli.Decompress",
      "description": "Decompresses Brotli-compressed byte strings and files, using optional callbacks to signal partial decompression progress. Operates on byte strings and file paths, with the ability to specify output destinations. Handles large data streams by managing the OCaml runtime lock during decompression.",
      "description_length": 295,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Brotli.Compress",
      "description": "Provides compression of byte sequences and files using the Brotli algorithm with configurable parameters such as compression quality, window size, and block size. Operates on byte strings and file paths, supporting asynchronous partial compression notifications. Accepts input files and writes compressed output to specified filenames, using Google's default settings when parameters are unspecified.",
      "description_length": 400,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "brotli",
      "description": "Provides compression and decompression functions for Brotli-encoded data using a byte buffer as input and output. Works with OCaml's bigarray and byte types to handle raw binary data efficiently. Used to reduce payload size in network transmissions or store compressed data in files.",
      "description_length": 283,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Brotli",
      "description": "Encodes and decodes byte sequences and files using the Brotli algorithm, supporting both compression and decompression with customizable parameters. It handles byte strings and file paths, offering asynchronous progress notifications and fine-grained control over output destinations. Compression allows adjustments to quality, window size, and block size, while decompression manages large data streams efficiently. Examples include compressing a string into a Brotli-encoded byte sequence or decompressing a file into a specified output path.",
      "description_length": 544,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 544,
    "min_description_length": 283,
    "avg_description_length": 380.5,
    "embedding_file_size_mb": 0.014949798583984375
  }
}