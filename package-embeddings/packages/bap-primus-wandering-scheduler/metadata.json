{
  "package": "bap-primus-wandering-scheduler",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:33.876849",
  "modules": [
    {
      "module_path": "Primus_wandering_main.Make.Generate",
      "library": "bap-plugin-primus_wandering",
      "description": "Generates pseudo-random integers and machine words using a PRNG state. It provides `next` to produce the next integer in the sequence and `word` to generate a word of a specified bit width. Useful for randomized testing and simulation scenarios where controlled randomness is required.",
      "description_length": 285,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Primus_wandering_main.Make",
      "library": "bap-plugin-primus_wandering",
      "description": "This module orchestrates state scheduling by randomly selecting live states from a pool, using a PRNG to determine selection order and rescheduling failed attempts up to a configured limit. It manages state exploration through a map of integer keys, tracking active and dropped states, and generates new contestants when rescheduling limits are exhausted. The integrated PRNG submodule enables controlled randomness via `next` and `word`, supporting randomized test generation and speculative execution in symbolic analysis. For example, it can prioritize exploration of live states in a symbolic executor, falling back to fresh state generation when rescheduling fails.",
      "description_length": 670,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Primus_wandering_main.Config",
      "library": "bap-plugin-primus_wandering",
      "description": "This module provides functionality for parsing, validating, and documenting configuration values and command-line arguments, supporting data types like primitives (bool, int, float), file paths, collections (list, array), tuples, and enumerated types. It enables structured command-line interface setup, configuration file validation, and automated generation of manpages or parameter documentation, with specialized handling for optional values, deprecation, and complex data structures.",
      "description_length": 488,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Primus_wandering_main",
      "library": "bap-plugin-primus_wandering",
      "description": "This module combines structured logging and progress tracking with state scheduling and configuration management to support program analysis workflows. It provides data types for log levels, progress stages, and state maps, along with operations for emitting structured logs, reporting task progress, and managing analysis state. The scheduling submodule uses a PRNG to select and reschedule live states during exploration, while the configuration submodule handles parsing, validation, and documentation of command-line arguments and config files. Example usage includes logging analysis steps with severity levels, tracking exploration progress with staged tasks, and configuring analysis parameters from command-line inputs.",
      "description_length": 727,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 727,
    "min_description_length": 285,
    "avg_description_length": 542.5,
    "embedding_file_size_mb": 0.014943122863769531
  }
}