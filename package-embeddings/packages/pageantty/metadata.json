{
  "package": "pageantty",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:09.193085",
  "modules": [
    {
      "module_path": "Git_pager.Private",
      "library": "pageantty.git-pager",
      "description": "This module controls whether stdout is treated as a terminal, primarily for testing the pager logic when stdout isn't a TTY. It exports a mutable reference (`force_stdout_isatty_test`) that overrides the default behavior of detecting terminal output. This allows simulating terminal conditions to ensure correct pager activation or bypass, especially in environments like CI where stdout is not interactive.",
      "description_length": 407,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_pager",
      "library": "pageantty.git-pager",
      "description": "This module runs a Git-configured pager to display long outputs like diffs, supporting color settings and output redirection. It provides channels to write content to the pager and utilities to determine color modes based on Git's configuration. A child module allows overriding terminal detection for testing in non-interactive environments, such as CI pipelines. Together, they enable tools to display large outputs while respecting user preferences and simulating different output conditions.",
      "description_length": 495,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 495,
    "min_description_length": 407,
    "avg_description_length": 451.0,
    "embedding_file_size_mb": 0.007694244384765625
  }
}