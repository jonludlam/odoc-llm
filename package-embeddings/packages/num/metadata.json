{
  "package": "num",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:30.998605",
  "modules": [
    {
      "module_path": "Ratio",
      "library": "nums",
      "description": "This module implements arithmetic operations on rational numbers, including addition, multiplication, and reciprocal calculation. It works with the abstract `ratio` type representing fractions in reduced form. A concrete use case includes supporting exact arithmetic in symbolic computations within the `Num` module.",
      "description_length": 316,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Big_int",
      "library": "nums",
      "description": "This module supports arithmetic operations like division, exponentiation, and greatest common divisors on arbitrarily large signed integers, handling both homogeneous and mixed-type computations between arbitrary-precision integers and native machine integers. It provides bitwise manipulations, numeric type conversions (to/from 32/64-bit integers and floats), and precision-preserving string serialization, while explicitly managing overflow risks during narrowing conversions. Typical applications include cryptographic algorithms requiring large prime numbers, financial calculations needing exact precision, and systems interfacing with hardware registers through bitfield extraction.",
      "description_length": 689,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Arith_status",
      "library": "nums",
      "description": "This module manages flags that control the behavior of rational number operations and formatting. It provides functions to toggle error checking for zero denominators, normalization of results, and decimal approximation printing, along with setting precision for approximated output. Use this module to configure how rational numbers are handled during computation and displayed in output.",
      "description_length": 389,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Num",
      "library": "nums",
      "description": "This module provides arithmetic operations on arbitrary-precision rational numbers, including standard binary operations, exponentiation, and Euclidean division, alongside rounding, comparison, and sign determination. It operates on the `num` type, which represents unbounded rational numbers augmented with special values like infinity and undefined, supporting conversions to/from integers, floats, strings, and ratio-based formats with customizable precision. It is particularly useful for financial calculations requiring exact decimal representation, symbolic mathematics, and domains needing robust handling of edge cases like division by zero.",
      "description_length": 650,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nat",
      "library": "nums",
      "description": "This library provides low-level arithmetic, bitwise, and base conversion operations for arbitrary-precision natural numbers represented as arrays of digits. It supports direct digit manipulation, memory management, and precision-sensitive calculations like GCD, square roots, and string-to-number parsing. These capabilities are particularly useful for cryptographic algorithms, numerical analysis requiring extended precision, and system-level tasks involving non-standard integer representations.",
      "description_length": 498,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 689,
    "min_description_length": 316,
    "avg_description_length": 508.4,
    "embedding_file_size_mb": 0.01858234405517578
  }
}