{
  "package": "jsoo_router",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:27:59.236141",
  "modules": [
    {
      "module_path": "Ppx_router.Reg",
      "description": "Provides functions to manipulate and analyze regular expressions, including constructing patterns from strings and extracting type information. Works with strings, integers, and hash tables mapping integers to strings. Used to generate regex patterns and extract metadata during parsing.",
      "description_length": 287,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_router.Util",
      "description": "Provides functions to construct AST nodes with location metadata, including identifiers, expressions, patterns, and unit values. Works with types like `Asttypes.loc`, `Longident.t`, `Parsetree.expression`, and `Parsetree.pattern`. Used to generate boilerplate AST code for macro expansion or code transformation tasks.",
      "description_length": 318,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "jsoo_router",
      "description": "Provides route matching and URL parsing using pattern-based routing, with support for dynamic segments and query parameters. Operates on strings and custom route definitions structured as tuples of patterns and handlers. Used to implement client-side navigation in web applications by mapping URLs to specific application states.",
      "description_length": 329,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_router",
      "description": "Processes and generates regular expressions with string and hash table inputs, while constructing annotated AST nodes with location data for code manipulation. Supports pattern matching, metadata extraction, and AST creation using types like `Asttypes.loc`, `Parsetree.expression`, and integer-to-string mappings. Enables tasks such as parsing input strings into regex patterns and building structured AST fragments for macro expansion. Allows for automated code transformation by combining pattern analysis with AST construction.",
      "description_length": 530,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Router",
      "description": "Provides functions to manipulate and retrieve hash-based routes, including setting, cleaning, and extracting values from the URL hash. Works with strings, options, and primitive types like int, float, bool, and char through coercion functions. Used to handle client-side routing and parameter parsing in web applications.",
      "description_length": 321,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 530,
    "min_description_length": 287,
    "avg_description_length": 357.0,
    "embedding_file_size_mb": 0.01862049102783203
  }
}