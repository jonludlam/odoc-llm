{
  "package": "xapi-backtrace",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:29.145028",
  "modules": [
    {
      "module_path": "Backtrace.Interop",
      "library": "xapi-backtrace",
      "description": "Converts a JSON-formatted backtrace string into a structured backtrace value, using the provided source name to identify the origin. Works with string inputs and the `Backtrace.t` type. Useful for parsing and reconstructing backtraces from serialized logs or error reports.",
      "description_length": 273,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Backtrace",
      "library": "xapi-backtrace",
      "description": "This module captures and manipulates backtraces during exception handling, allowing backtraces to be stashed, retrieved, and merged while preserving context across exceptions and processes. It supports operations on exceptions and a `t` type for backtrace data, enabling transformations that retain debugging information and logging of human-readable traces. The Interop submodule converts JSON-formatted backtraces into structured values, reconstructing them from serialized logs using a source name. Together, they allow merging backtraces from multiple sources, handling exceptions without losing context, and integrating foreign backtrace formats into OCaml.",
      "description_length": 662,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 662,
    "min_description_length": 273,
    "avg_description_length": 467.5,
    "embedding_file_size_mb": 0.007694244384765625
  }
}