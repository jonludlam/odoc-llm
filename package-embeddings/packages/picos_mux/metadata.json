{
  "package": "picos_mux",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:28.536210",
  "modules": [
    {
      "module_path": "picos_mux",
      "description": "Provides functions to schedule and manage task execution timelines, including delaying, repeating, and prioritizing tasks. Works with time intervals, task identifiers, and execution queues. Used to implement custom scheduling logic in real-time systems or event-driven applications.",
      "description_length": 282,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Picos_mux_fifo",
      "description": "Provides functions to run fibers in a single-threaded FIFO schedule, prioritizing canceled fibers. Operates on `Picos.Fiber.t` and I/O effects through `Picos_io_select`. Used to execute main programs within a controlled fiber environment, with quota limits and custom exception handling.",
      "description_length": 287,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Picos_mux_multififo",
      "description": "Provides context creation and fiber scheduling across multiple threads using a per-thread queue system, with support for fiber migration between threads and priority handling for canceled fibers. Operates on thread contexts, fibers, and effect quotas to manage execution flow. Used to run OCaml programs with multi-threaded fiber scheduling, particularly in testing environments or for experimental concurrency models.",
      "description_length": 418,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Picos_mux_random",
      "description": "Creates and manages randomized scheduling contexts for Picos fibers, enabling non-deterministic execution order to test concurrency assumptions. Operates on Picos.Fiber.t and scheduler contexts, supporting multi-threaded execution with explicit domain control. Used to run test scenarios where random scheduling reveals race conditions or incorrect fiber dependencies.",
      "description_length": 368,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Picos_mux_thread",
      "description": "Provides functions to run fibers and manage their execution in a thread-based scheduler, including `run_fiber` for executing a specific fiber and `run` for starting a main function in a new fiber. Operates on `Picos.Fiber.t` and handles exceptions through custom handlers. Used to test Picos-based libraries and manage fiber lifecycles in simple concurrent applications.",
      "description_length": 370,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 418,
    "min_description_length": 282,
    "avg_description_length": 345.0,
    "embedding_file_size_mb": 0.01861858367919922
  }
}