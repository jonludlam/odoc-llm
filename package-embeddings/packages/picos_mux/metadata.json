{
  "package": "picos_mux",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:06:03.324044",
  "modules": [
    {
      "module_path": "Picos_mux_multififo",
      "library": "picos_mux.multififo",
      "description": "This module implements a multi-threaded fiber scheduler with per-thread queues that prioritize FIFO execution and allow fiber migration between threads. It provides functions to create scheduling contexts, run fibers across multiple domains, and manage execution with optional quotas and exception handling. Use this to execute concurrent OCaml 5 fiber-based programs with controlled parallelism and cross-thread work stealing.",
      "description_length": 427,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Picos_mux_random",
      "library": "picos_mux.random",
      "description": "This module implements a randomized multi-threaded scheduler for Picos, where each effect triggers a random selection of the next ready fiber to execute. It works with fibers and domains, providing functions to create scheduling contexts, run fibers on threads, and execute programs with controlled concurrency. Use it to test Picos libraries by exposing race conditions or invalid scheduling dependencies through non-deterministic execution order.",
      "description_length": 448,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Picos_mux_thread",
      "library": "picos_mux.thread",
      "description": "This module provides `run_fiber` and `run` functions to execute Picos fibers in a thread-based scheduler. It works directly with `Picos.Fiber.t` and supports running fibers to completion, handling fatal exceptions, and capturing results from the main function. Use this to test Picos-based libraries or in simple applications where fiber concurrency is needed without the complexity of a thread pool.",
      "description_length": 400,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Picos_mux_fifo",
      "library": "picos_mux.fifo",
      "description": "This module implements a FIFO task scheduler for single-threaded environments, prioritizing canceled fibers for immediate execution. It operates on `Picos.Fiber.t` values and provides `run_fiber` and `run` functions to execute fibers with optional quotas and exception handling. It is suitable for testing and lightweight concurrency scenarios where strict parallel performance is not required.",
      "description_length": 394,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 448,
    "min_description_length": 394,
    "avg_description_length": 417.25,
    "embedding_file_size_mb": 0.014925003051757812
  }
}