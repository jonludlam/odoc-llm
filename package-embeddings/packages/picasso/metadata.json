{
  "package": "picasso",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:04:59.837251",
  "modules": [
    {
      "module_path": "Picasso.Colors",
      "library": "picasso",
      "description": "This module defines basic RGB color representations and predefined color constants. It provides a constructor `rgb` to create colors from red, green, and blue components, and includes standard colors like red, green, blue, white, and black. Use this module to specify colors when creating or styling abstract drawing elements in the Picasso library.",
      "description_length": 349,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Picasso.Drawable",
      "library": "picasso",
      "description": "This module creates drawable representations from abstract elements like boxes, octagons, and polyhedra using constructors such as `of_box`, `of_oct`, and `of_pol`. It supports operations like `union` and `product` to combine drawable elements into composite shapes. Use cases include visualizing abstract domains, convex hulls from point lists, and hypercubes defined by variable ranges.",
      "description_length": 388,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Picasso.Rendering3d",
      "library": "picasso",
      "description": "Handles 3D scene creation and population using abstract drawable elements. It initializes scenes with labeled axes and adds colored drawable components individually or in lists. Useful for visualizing structured 3D abstract models with positional and color attributes.",
      "description_length": 268,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Picasso.Rendering",
      "library": "picasso",
      "description": "Handles 2D scene creation and manipulation with camera controls, projections, and graphical settings. Works with drawable elements, colors, and scene configurations. Use to build and display abstract visualizations with customizable axes, grid, and camera transformations.",
      "description_length": 272,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Picasso",
      "library": "picasso",
      "description": "This module enables rendering of abstract drawable elements across multiple backends, such as GTK, SVG, LaTeX/TikZ, and OBJ, using 2D and 3D rendering contexts. It provides core data types like drawable elements and colors, with operations to construct, combine, and visualize shapes such as boxes, octagons, and polyhedra. Submodules handle scene setup, color definitions, and backend-specific exports, supporting tasks like interactive GTK displays, LaTeX integration, and 3D model generation. Specific workflows include building composite shapes with `union`, styling with predefined colors, and exporting a 3D scene to OBJ or a 2D diagram to SVG.",
      "description_length": 650,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 650,
    "min_description_length": 268,
    "avg_description_length": 385.4,
    "embedding_file_size_mb": 0.01858997344970703
  }
}