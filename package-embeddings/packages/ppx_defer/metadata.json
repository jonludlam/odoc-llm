{
  "package": "ppx_defer",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-06-18T16:26:50.257305",
  "modules": [
    {
      "module_path": "ppx_defer",
      "description": "Provides a syntax extension for deferring expression evaluation, ensuring a deferred expression runs after the main expression, even if it raises an exception. Works with OCaml's expression syntax and integrates with Lwt for asynchronous operations. Enables safe cleanup or finalization steps in imperative-style code.",
      "description_length": 318,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 1,
    "filtered_empty_modules": 1,
    "retention_rate": 0.5
  },
  "statistics": {
    "max_description_length": 318,
    "min_description_length": 318,
    "avg_description_length": 318.0,
    "embedding_file_size_mb": 0.004065513610839844
  }
}