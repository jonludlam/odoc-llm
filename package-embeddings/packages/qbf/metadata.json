{
  "package": "qbf",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 9,
  "creation_timestamp": "2025-06-18T16:31:51.076724",
  "modules": [
    {
      "module_path": "Quantor.Raw",
      "description": "Allocates a new QBF solver and manages its state through quantifier scopes and clause additions. It tracks the solver's status and provides access to literal assignments in the current model. Used to construct and evaluate quantified boolean formulas step-by-step.",
      "description_length": 264,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qbf.Lit",
      "description": "Provides operations to create and manipulate signed integers, including negation, absolute value, sign extraction, and sign swapping. Works with a private type representing strictly positive integers with an associated sign. Used to generate unique literals, compare, hash, and serialize signed integer values.",
      "description_length": 310,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Qbf.CNF",
      "description": "Provides operations to compare, hash, and print logical formulas in conjunctive normal form, where each formula is a list of clauses, and each clause is a list of literals. Supports custom printing of literals within the formula representation. Enables precise equality checks and efficient hashing for clause-based structures.",
      "description_length": 327,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qbf.QCNF",
      "description": "Provides operations to construct and manipulate quantified conjunctive normal forms, including universal and existential quantification over literals, and conversion from propositional CNF. Works with literal lists and a private type representing quantified formulas. Used to encode and compare logical constraints in automated reasoning tasks.",
      "description_length": 344,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qbf.Formula",
      "description": "This module handles logical operations such as conjunction, disjunction, and negation on formulas represented as lists or sequences, along with transformations like CNF conversion and simplification, while enforcing constraints on boolean lists (e.g., exactly one true, all true, or all false). It supports applications in automated reasoning and constraint validation, particularly for prenex-form formulas and boolean expression analysis.",
      "description_length": 440,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qbf.QFormula",
      "description": "Provides operations to construct and manipulate quantified logical formulas, including universal and existential quantification, and conversion to CNF. Works with literals and quantified formula structures, supporting simplification and comparison. Used to generate and process logical expressions in automated reasoning tasks.",
      "description_length": 327,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "qbf",
      "description": "Handles boolean literals, quantified variables, and logical connectives for constructing and manipulating Quantified Boolean Formulas (QBFs). Supports parsing, simplification, and conversion between internal representations and DIMACS formats. Integrates with external solvers like Quantor and Picosat for automated solving of QBF instances.",
      "description_length": 341,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Quantor",
      "description": "Manages the lifecycle of a QBF solver, handling quantifier scopes, clause additions, and solver state. Tracks solver status and provides access to literal assignments in the current model. Supports incremental construction and evaluation of quantified boolean formulas. Allows users to add clauses, navigate quantifier layers, and retrieve variable assignments.",
      "description_length": 361,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Qbf",
      "description": "combines signed integer handling, CNF formula manipulation, and quantified logic operations into a unified system for automated reasoning. It manages signed integers with sign-aware operations, CNF formulas with clause-based comparisons and printing, and quantified formulas with logical transformations and CNF conversion. Users can generate unique literals, compare logical structures, and perform simplifications on boolean constraints. It enables tasks like formula normalization, constraint validation, and quantifier elimination in logical reasoning workflows.",
      "description_length": 566,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 566,
    "min_description_length": 264,
    "avg_description_length": 364.44444444444446,
    "embedding_file_size_mb": 0.033118247985839844
  }
}