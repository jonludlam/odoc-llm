{
  "package": "gendarme-yaml",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:46.952416",
  "modules": [
    {
      "module_path": "Gendarme_yaml.Prelude",
      "library": "gendarme-yaml",
      "description": "This module implements functions for encoding Gendarme values into YAML format, including handling of basic types like strings, integers, and lists. It defines mappings from Gendarme's internal representation to the Yaml module's data structures, ensuring correct serialization. Use cases include generating YAML output for configuration files or data interchange based on Gendarme's schema definitions.",
      "description_length": 403,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gendarme_yaml",
      "library": "gendarme-yaml",
      "description": "This module provides YAML serialization for Gendarme values, converting between internal representations and YAML syntax using `marshal`/`unmarshal` and `encode`/`decode`. It includes `pack`/`unpack` operations to bridge Gendarme types with YAML-specific structures, supporting basic types like strings, integers, and lists. Child modules handle detailed mappings and encoding logic, enabling use cases such as writing configuration files or transmitting structured data over a network. Examples include serializing Gendarme-defined configurations to disk or reconstructing values from YAML input.",
      "description_length": 597,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 597,
    "min_description_length": 403,
    "avg_description_length": 500.0,
    "embedding_file_size_mb": 0.007685661315917969
  }
}