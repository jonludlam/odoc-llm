{
  "package": "comby-semantic",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:37.913144",
  "modules": [
    {
      "module_path": "Comby_semantic.Lsif.Context",
      "library": "comby-semantic",
      "description": "This module defines a context type used to configure LSIF-related operations, including the LSIF endpoint, repository identifier, and formatting settings. It works with string values and a formatting type to structure data for LSIF interactions. Concrete use cases include setting up request contexts for querying LSIF data or formatting responses in a specific output format.",
      "description_length": 376,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Comby_semantic.Lsif.Formatting",
      "library": "comby-semantic",
      "description": "This module defines a type `t` for representing formatted output, specifically supporting Markdown with a title and content pair or plain text. It provides constructors and operations to create and manipulate these formatted values, ensuring structured presentation of data. Concrete use cases include generating documentation snippets or structured output for tools that consume labeled textual content.",
      "description_length": 404,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Comby_semantic.Lsif",
      "library": "comby-semantic",
      "description": "This module enables hover queries over LSIF data by analyzing source positions and retrieving contextual documentation or type details using the LSIF graph. It leverages a context type to manage configuration such as endpoints and formatting, and produces structured output using a type that supports Markdown or plain text. You can use it to build IDE-like tooltips by querying symbol information at specific file locations, or generate formatted documentation snippets for code elements. The combination of context handling and output formatting supports flexible integration with tools requiring labeled or structured textual responses.",
      "description_length": 639,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Comby_semantic",
      "library": "comby-semantic",
      "description": "This module processes hover queries over LSIF data, analyzing source positions to retrieve contextual documentation or type details using the LSIF graph. It uses a context type to manage configuration like endpoints and formatting, producing structured output in Markdown or plain text. You can query symbol information at specific file locations to build IDE tooltips or generate formatted documentation snippets. The design supports flexible integration with tools needing labeled or structured textual responses.",
      "description_length": 515,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 639,
    "min_description_length": 376,
    "avg_description_length": 483.5,
    "embedding_file_size_mb": 0.014941215515136719
  }
}