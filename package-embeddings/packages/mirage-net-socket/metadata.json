{
  "package": "mirage-net-socket",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 10,
  "creation_timestamp": "2025-06-18T16:32:42.725073",
  "modules": [
    {
      "module_path": "Net.Datagram.UDPv4",
      "description": "Handles receiving and sending UDPv4 packets using a manager context. Receives data into a message buffer and delivers it to a callback with destination and source information; sends messages to a specified destination with optional source address. Operates on network manager instances, IPv4 source and destination addresses, and byte buffer structures. Used for implementing network protocols that require low-level UDP communication.",
      "description_length": 435,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Channel.TCPv4",
      "description": "Provides functions for reading and writing data over a TCPv4 connection, including reading characters, lines, and buffers, and writing strings and buffers. Operates on connection handles, source and destination IPv4 addresses, and Cstruct.t buffers. Used for implementing network protocols, handling streaming data, and managing bidirectional communication.",
      "description_length": 357,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Flow.TCPv4",
      "description": "Reads data from a TCP connection into a Cstruct buffer, writes data or multiple buffers to the connection, and closes the connection. Operates on TCP session handles, network addresses, and buffer structures. Used for handling incoming and outgoing TCP traffic in networked applications.",
      "description_length": 287,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Nettypes",
      "description": "Reads and writes characters, strings, and buffers from or to a network connection, supporting line-based and length-limited reads, and stream-based data retrieval. Operates on custom types `t`, `mgr`, `src`, and `dst`, along with `Cstruct.t` for binary data. Used for handling TCP communication, parsing incoming data, and sending structured messages over a network socket.",
      "description_length": 373,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Manager",
      "description": "Provides operations to manage network interfaces, including retrieving and configuring UDPv4 sockets, registering and accessing listeners, and injecting packets. Works with types such as interface, id, config, and callback, along with Lwt-based asynchronous I/O. Used to control packet injection, monitor network activity, and manage interface states in a networked application.",
      "description_length": 378,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Flow",
      "description": "Manages TCP communication by reading from and writing to session handles, using Cstruct buffers for data transfer and supporting address-based connections. Provides operations for sending multiple buffers, closing sessions, and handling network addresses. Enables efficient data exchange in networked applications by abstracting low-level socket interactions. Examples include streaming data over a connection, sending fragmented messages, and terminating sessions cleanly.",
      "description_length": 473,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Datagram",
      "description": "manages UDPv4 packet transmission and reception, binding to network manager instances and handling IPv4 addresses and byte buffers. It enables sending messages with specified destinations and optional sources, and delivers received data to callbacks along with sender and receiver details. Operations include buffer management, address resolution, and event-driven message handling. Examples include implementing custom protocols, relaying packets between networks, and processing real-time data streams.",
      "description_length": 504,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net.Channel",
      "description": "Reads from and writes to TCPv4 connections using handles, IP addresses, and Cstruct.t buffers, supporting character, line, and buffer-based operations. Enables protocol implementation, stream handling, and bidirectional data exchange. Functions include reading and writing strings, buffers, and lines, with support for source and destination address manipulation. Examples include parsing incoming data streams and sending structured messages over a network connection.",
      "description_length": 469,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "mirage-net-socket",
      "description": "Provides socket operations for establishing TCP and UDP connections, sending and receiving raw packets, and managing network interfaces. Works with byte arrays, IP addresses, and port numbers to facilitate low-level network communication. Used to implement custom network protocols and integrate with MirageOS-based systems.",
      "description_length": 324,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Net",
      "description": "handles network communication through TCP and UDPv4 protocols, offering low-level control over data transfer, session management, and packet handling. It provides operations for reading and writing characters, strings, and binary buffers, with support for line-based and stream-based data processing. Key data types include Cstruct.t, t, mgr, src, dst, interface, and callback, enabling tasks like sending fragmented messages, injecting packets, and managing network interfaces. Examples include parsing HTTP requests, relaying UDP packets, and implementing custom protocol layers over TCP.",
      "description_length": 590,
      "index": 9,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 10,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 590,
    "min_description_length": 287,
    "avg_description_length": 419.0,
    "embedding_file_size_mb": 0.036759376525878906
  }
}