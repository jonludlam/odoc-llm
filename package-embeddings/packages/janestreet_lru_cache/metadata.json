{
  "package": "janestreet_lru_cache",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:57.052063",
  "modules": [
    {
      "module_path": "Lru_cache.Make",
      "description": "Compares instances of the type `t` using a custom ordering, converts `t` values to S-expression representations, computes hash values for use in hash tables, and checks internal consistency guarantees. Works with the abstract type `t` that represents structured data. Used to ensure correct behavior in sorted collections, serialization pipelines, and debugging tools.",
      "description_length": 368,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "janestreet_lru_cache",
      "description": "Maintains a fixed-size cache that automatically evicts the least recently used items when capacity is reached. It supports insertion, lookup, and removal operations with time complexity bounded by the cache size. Used to optimize repeated computations in high-throughput systems, such as memoizing API responses or database query results.",
      "description_length": 338,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lru_cache",
      "description": "Provides operations to manage an LRU cache, including inserting, retrieving, and removing key-value pairs while tracking usage order. Works with a key type and a polymorphic data type stored in the cache. Used to efficiently manage limited memory by evicting least recently used entries when exceeding a set size.",
      "description_length": 313,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 368,
    "min_description_length": 313,
    "avg_description_length": 339.6666666666667,
    "embedding_file_size_mb": 0.011316299438476562
  }
}