{
  "package": "kicadsch",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:58.759198",
  "modules": [
    {
      "module_path": "Kicadsch.Sigs",
      "description": "Provides functions to build and manipulate a schematic context by adding libraries, parsing lines, and generating a painter context. Operates on `schContext` and `painterContext` types, transforming schematic data into a visual representation. Used to construct a painter context from schematic input lines and library definitions.",
      "description_length": 331,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Kicadsch.MakeSchPainter",
      "description": "Paints text, lines, circles, rectangles, arcs, and images on a canvas with specified colors, sizes, and positions, and supports setting canvas dimensions. Operates on coordinate systems, text strings, color options, and image buffers to construct visual elements. Used to generate schematic diagrams by placing labeled components, connecting lines, and graphical symbols.",
      "description_length": 371,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "kicadsch",
      "description": "Provides functions to parse and manipulate KiCad schematic files, including reading component attributes, managing netlists, and generating hierarchical structures. Operates on custom data types representing symbols, nets, and sheet entries. Used to extract pin information for circuit simulation and validate connectivity in complex designs.",
      "description_length": 342,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Kicadsch",
      "description": "Constructs visual schematics by transforming schematic data into graphical elements through coordinate-based drawing operations. Accepts `schContext` and `painterContext` to build and render components like text, lines, and images with precise positioning and styling. Enables creation of labeled components, connection lines, and symbolic shapes within defined canvas boundaries. Processes library definitions and input lines to produce detailed, visually structured diagrams.",
      "description_length": 477,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 477,
    "min_description_length": 331,
    "avg_description_length": 380.25,
    "embedding_file_size_mb": 0.014940261840820312
  }
}