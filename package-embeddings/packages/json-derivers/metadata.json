{
  "package": "json-derivers",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:58.041553",
  "modules": [
    {
      "module_path": "Json_derivers.Yojson",
      "description": "Handles JSON parsing and generation with support for converting between JSON values and OCaml types. Works with the `t` type representing JSON data, including numbers, strings, arrays, and objects. Enables serialization and deserialization with S-expressions and provides comparison and hashing for JSON structures.",
      "description_length": 315,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Json_derivers.Jsonm",
      "description": "Converts between JSON values and S-expressions, and provides equality and hashing for JSON data structures. Operates on custom types representing JSON values and parsed JSON objects. Used to serialize and deserialize JSON data for interoperability with S-expression-based systems.",
      "description_length": 280,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "json-derivers",
      "description": "Compares, hashes, and converts JSON values between Yojson.Safe.t and Ezjsonm.t formats. Processes nested structures including arrays, objects, and primitives. Enables consistent serialization and equality checks in applications requiring JSON interoperability.",
      "description_length": 260,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Json_derivers",
      "description": "Converts JSON values to and from OCaml types, supporting numbers, strings, arrays, and objects through the `t` type. Enables serialization and deserialization using S-expressions, with equality checks and hash functions for JSON structures. Allows interoperability by translating between JSON and S-expression representations. Examples include parsing a JSON string into an OCaml value, generating a JSON string from a custom type, and comparing two JSON structures for equality.",
      "description_length": 479,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 479,
    "min_description_length": 260,
    "avg_description_length": 333.5,
    "embedding_file_size_mb": 0.014943122863769531
  }
}