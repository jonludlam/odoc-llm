{
  "package": "packstream",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:33.269185",
  "modules": [
    {
      "module_path": "Packstream.Node",
      "library": "packstream",
      "description": "This module defines a node structure with an integer ID, a list of string labels, and a property map represented as an association list of Packstream messages. It provides functions to format and convert node values to strings for debugging or serialization purposes. Concrete use cases include representing graph nodes in Neo4j-like data models and serializing them for network transmission.",
      "description_length": 392,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Packstream.Path",
      "library": "packstream",
      "description": "Represents paths in a graph as sequences of nodes, relationships, and entity IDs. Provides pretty-printing and string conversion for path values. Useful for visualizing and logging graph traversal results.",
      "description_length": 205,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Packstream.UnboundRelationship",
      "library": "packstream",
      "description": "This module represents relationships in a graph database with an identifier, type, and key-value properties. It provides pretty-printing and string conversion functions for inspecting relationship data. Use this module when handling raw relationship data during serialization or debugging in a graph database client or driver.",
      "description_length": 326,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Packstream.Message",
      "library": "packstream",
      "description": "This module defines a polymorphic type `t` representing various data types such as integers, strings, lists, dictionaries, and complex temporal and spatial types like `Date`, `Time`, `DateTime`, and `Point`. It includes functions to construct, deconstruct, and format these values, enabling precise data manipulation and serialization. Use cases include parsing and generating structured data for network transmission or storage, particularly in contexts requiring strict type handling and format control.",
      "description_length": 505,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Packstream.Relationship",
      "library": "packstream",
      "description": "This module defines a type `t` representing a relationship with identifiers for the relationship itself, its start and end nodes, a type label, and a list of properties encoded as Packstream messages. It provides functions `pp` and `show` for pretty-printing and converting relationship values to strings, primarily used for debugging or logging structured relationship data in a human-readable format.",
      "description_length": 402,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Packstream",
      "library": "packstream",
      "description": "This module handles serialization and parsing of structured data, converting hierarchical types like lists, dictionaries, and graph elements into compact binary formats. It defines core types such as messages, unbound relationships, and field collections, supporting both atomic values (integers, floats) and complex nested structures (nodes, paths, relationships) with dedicated operations for encoding, decoding, and inspection. Submodules provide concrete representations for graph entities\u2014nodes with labels and properties, relationships with typed metadata, and paths tracing graph traversals\u2014along with utilities for string conversion and structured logging. Use this module to serialize graph data for network transmission, store typed binary representations, or debug complex data flows in graph-aware applications.",
      "description_length": 823,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 823,
    "min_description_length": 205,
    "avg_description_length": 442.1666666666667,
    "embedding_file_size_mb": 0.02223491668701172
  }
}