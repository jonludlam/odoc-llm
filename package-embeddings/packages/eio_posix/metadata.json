{
  "package": "eio_posix",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:50:44.169294",
  "modules": [
    {
      "module_path": "Eio_posix.Low_level.Open_flags",
      "library": "eio_posix",
      "description": "This module defines bitflags for configuring file opening modes in POSIX systems, such as read-only, write-only, append, and create. It supports combining flags using bitwise operations to specify detailed file access behaviors. These flags directly correspond to POSIX `open` syscall options, used when opening files with low-level system calls.",
      "description_length": 346,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Eio_posix.Low_level.Process",
      "library": "eio_posix",
      "description": "This module directly maps POSIX process control functions using an effects-based API. It supports spawning child processes with a list of fork actions, sending signals, retrieving process IDs, and awaiting exit statuses. It is used for low-level process management on POSIX systems, such as launching external commands or managing subprocesses with precise control over their lifecycle.",
      "description_length": 386,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Eio_posix.Low_level",
      "library": "eio_posix",
      "description": "This module enables direct invocation of POSIX system calls for I/O operations, file metadata inspection, and process control, using low-level constructs like file descriptors, memory buffers, and path strings. It supports asynchronous I/O waits, socket communication, directory traversal, and symbolic link resolution while exposing granular access to file attributes (e.g., size, timestamps) via `stat` structures. Specific use cases include implementing custom non-blocking I/O patterns, handling raw file descriptors for inter-process communication, and performing precise file system introspection unavailable through higher-level abstractions.",
      "description_length": 649,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Eio_posix",
      "library": "eio_posix",
      "description": "This module provides an event loop runner and low-level POSIX system call bindings for direct I/O, file metadata access, and process control. It operates on raw file descriptors, memory buffers, and path strings, exposing fine-grained system interactions. Concrete use cases include implementing custom asynchronous I/O patterns, handling low-level inter-process communication, and inspecting or manipulating file system attributes with precision beyond standard abstractions.",
      "description_length": 476,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 649,
    "min_description_length": 346,
    "avg_description_length": 464.25,
    "embedding_file_size_mb": 0.058349609375
  }
}