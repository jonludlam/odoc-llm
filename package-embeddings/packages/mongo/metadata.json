{
  "package": "mongo",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:31:35.992297",
  "modules": [
    {
      "module_path": "mongo",
      "description": "Provides functions for querying and updating documents in a MongoDB database, including insert, find, and update operations. Works with BSON-encoded data structures and MongoDB cursor objects. Used to manage user session data and perform real-time analytics on stored records.",
      "description_length": 276,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MongoAdmin",
      "description": "Provides functions to extract database name, collection name, IP, port, and file descriptor from a MongoDB administration handle. Offers creation and destruction of connections, along with querying server statistics, command line options, and database listings. Works with the `t` type to manage and inspect MongoDB server states and configurations.",
      "description_length": 349,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MongoSend",
      "description": "Sends a MongoDB protocol message over a Unix socket without expecting a reply or with a reply, using a file descriptor and a string representation of the message. It handles communication with a MongoDB server by transmitting raw protocol data. The module interacts directly with network sockets and MongoDB's binary message format.",
      "description_length": 332,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MongoMetaOp",
      "description": "Adds query hints, sorting, and execution details to MongoDB operation documents. Modifies Bson.t values to include metadata like query comments, scan limits, and index hints. Used to construct precise database queries with execution profiling and optimization controls.",
      "description_length": 269,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mongo",
      "description": "The module enables configuring MongoDB connections, executing CRUD operations, and managing documents via query-based interactions, leveraging a connection type `t` and Bson.t for data serialization. It supports document retrieval, index management, and collection operations, working with Bson documents, cursor IDs, and connection handles to facilitate database interactions and schema-driven data manipulation. Use cases include dynamic data querying, schema-aware document updates, and efficient cursor-based result handling.",
      "description_length": 529,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MongoUtils",
      "description": "Writes binary representations of 32-bit and 64-bit integers and null-terminated strings to a buffer, and extracts these values from a byte string. Processes timestamps as 32-bit integers for compatibility with specific data formats. Used to construct and parse binary data streams in network protocols or file formats requiring precise byte-level control.",
      "description_length": 355,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MongoQueryOp",
      "description": "The module provides functions for constructing and modifying MongoDB queries and updates, including logical operations, array manipulations, and field modifications, operating on Bson.t and Bson.element types. It supports use cases like creating complex query conditions, updating documents with field-level changes, and sorting BSON data by reordering elements. Specific operations include handling array slicing, element matching, and document sorting.",
      "description_length": 454,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MongoRequest",
      "description": "Generates MongoDB wire protocol messages for insert, update, delete, query, get more, and kill cursors operations. Accepts database and collection names, request IDs, and Bson-encoded data to construct binary-compatible requests. Used to interact directly with MongoDB servers in low-level network implementations.",
      "description_length": 314,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MongoOperation",
      "description": "Handles conversion between a custom type and 32-bit integers, enabling efficient serialization and deserialization. Works with a sealed type representing MongoDB operation codes. Used to encode and decode specific database operations in network protocols.",
      "description_length": 255,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MongoHeader",
      "description": "Creates and manipulates MongoDB wire protocol headers, supporting operations like message length, request ID, and operation type extraction. Works with custom header structures and MongoDB operation types to encode and decode binary messages. Used to construct and parse request headers in network communication with MongoDB databases.",
      "description_length": 335,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MongoReply",
      "description": "Decodes a MongoDB reply from a string and provides access to its header, response flags, cursor ID, starting position, number of returned documents, and a list of BSON documents. Works with BSON data structures and MongoDB-specific headers. Used to parse and extract query results from database responses.",
      "description_length": 305,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 529,
    "min_description_length": 255,
    "avg_description_length": 343.0,
    "embedding_file_size_mb": 0.04036998748779297
  }
}