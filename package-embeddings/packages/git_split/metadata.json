{
  "package": "git_split",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:32:30.877363",
  "modules": [
    {
      "module_path": "Git_split.Diff",
      "description": "This module provides utilities for formatting and comparing diff-related data structures, including file changes, hunks, and line-level modifications, through pretty-printing, string conversion, and equality checks. It handles structured representations of deleted, created, and renamed files, along with contextual and line-based differences. These operations are particularly useful for debugging, generating human-readable output, or analyzing version-control changes.",
      "description_length": 471,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.DiffParser",
      "description": "Parses a string representation of a Git diff into a structured `Diff.diff` type, handling line additions, deletions, and modifications. It processes raw patch data to extract file changes, including hunks and context lines. This is used to analyze code changes in version control systems or automated review tools.",
      "description_length": 314,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.DiffSerializer",
      "description": "Serializes a difference representation into a compact string format. It operates on the `Diff.diff` type, which encodes changes between two data structures. This is used to store or transmit delta information efficiently.",
      "description_length": 221,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.LineZipper",
      "description": "Provides operations to navigate and modify a bidirectional list structure, including moving between elements, replacing the current element, and converting between list formats. Works with a custom zipper type representing a focused position in a list of lines. Used to efficiently manipulate and inspect line-based data in a text editor or similar application.",
      "description_length": 361,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.Tui",
      "description": "Handles terminal-based user interface interactions by processing key events, rendering text hunks and files with line visibility tracking, and managing a model that reflects the state of a diff. Operates on custom types like `TuiTypes.line`, `TuiTypes.hunk`, and `TuiTypes.file`, along with `TuiModel.model` for state management. Used to display and navigate through code diffs, track user selections, and update the interface in real time based on input.",
      "description_length": 455,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.TuiModel",
      "description": "Provides operations to navigate and modify a structured data model, including moving between elements, expanding or collapsing sections, and toggling line inclusion states. Works with a custom `model` type and a `lines_included` type representing selected lines in a file. Used to manage interactive text interface states, such as highlighting or filtering code hunks during a review process.",
      "description_length": 392,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.TuiModelExample",
      "description": "Provides access to a TuiModel instance, enabling interaction with a terminal user interface state. Works with a custom record type representing UI elements and their properties. Used to initialize and update terminal-based application interfaces with dynamic content.",
      "description_length": 267,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.TuiTypes",
      "description": "Provides pretty-printing, string representation, and equality checks for structured data elements like lines, visibility flags, code hunks, file paths, and file objects. Works with custom types representing source code annotations and file metadata. Used to format and compare elements during terminal-based code navigation and inspection.",
      "description_length": 339,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split.Zipper",
      "description": "The module provides traversal, modification, and conversion operations for navigating and editing a zipper data structure, which maintains a focused element within a list-like hierarchy. It works with a generic type 'a, enabling efficient path-based manipulation of nested structures. Use cases include text editing, hierarchical data manipulation, and scenarios requiring localized updates without full structure reconstruction.",
      "description_length": 429,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "git_split",
      "description": "Provides line-by-line selection and grouping of changes within a commit, supporting interactive editing of hunks and lines. Operates on git diff output and structured commit data to enable precise commit splitting. Enables users to refine commit content with a more intuitive interface than git add -p for detailed changes.",
      "description_length": 323,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Git_split",
      "description": "Combines diff parsing, serialization, and pretty-printing with interactive navigation tools for structured data and terminal interfaces. It handles `Diff.diff` types, custom zippers, and TUI-specific models, enabling operations like line tracking, hunk expansion, and state management. Users can parse and render diffs, manipulate focused list elements, and manage interactive code reviews. Examples include formatting change logs, editing text hunks, and updating terminal views in real time.",
      "description_length": 493,
      "index": 10,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 493,
    "min_description_length": 221,
    "avg_description_length": 369.54545454545456,
    "embedding_file_size_mb": 0.040386199951171875
  }
}