{
  "package": "chartjs-datalabels",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:16.928648",
  "modules": [
    {
      "module_path": "Chartjs_datalabels.Align",
      "library": "chartjs-datalabels",
      "description": "This module defines alignment options for positioning labels relative to anchor points in a chart. It provides constants for cardinal directions and angular alignment, allowing labels to be placed precisely around data points. Use this module to control label placement in chart visualizations, such as positioning values above bars, inside pie slices, or at custom angles.",
      "description_length": 373,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Chartjs_datalabels.Anchor",
      "library": "chartjs-datalabels",
      "description": "This module defines anchor positions for data labels in a chart, providing constants to align labels relative to data points. It works with the `t` type, which represents anchor locations such as center, start, or end of an element. Concrete use cases include positioning labels inside or outside bars in a bar chart or next to points in a line chart.",
      "description_length": 351,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels.Visibility",
      "library": "chartjs-datalabels",
      "description": "This module defines visibility settings for data labels in a chart, supporting boolean and automatic hiding behavior. It works with the `t` type, which represents visibility states, and converts them to JavaScript values. Use it to control label display, such as hiding overlapping labels automatically or toggling visibility based on user interaction.",
      "description_length": 352,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels.Text_align",
      "library": "chartjs-datalabels",
      "description": "This module defines text alignment options for chart data labels, providing values to specify left, center, and right alignment. It works with the `t` type, which represents text alignment settings compatible with JavaScript. Use this module to configure label positioning in chart visualizations, such as aligning value annotations to bars or pie slices.",
      "description_length": 355,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels",
      "library": "chartjs-datalabels",
      "description": "This module configures data labels in Chart.js visualizations, enabling precise control over their position, visibility, and appearance. It provides types and functions to set alignment, anchor points, text alignment, and visibility behavior, working directly with chart datasets and options. Use it to display formatted labels on bars, pie slices, or data points, with support for custom placement, automatic hiding, and interactive alignment. Submodules offer specific constants and settings to fine-tune label positioning and styling in a variety of chart types.",
      "description_length": 565,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 5,
    "filtered_empty_modules": 4,
    "retention_rate": 0.5555555555555556
  },
  "statistics": {
    "max_description_length": 565,
    "min_description_length": 351,
    "avg_description_length": 399.2,
    "embedding_file_size_mb": 0.018609046936035156
  }
}