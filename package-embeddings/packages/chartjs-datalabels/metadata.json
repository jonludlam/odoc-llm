{
  "package": "chartjs-datalabels",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:56:31.367781",
  "modules": [
    {
      "module_path": "Chartjs_datalabels.Anchor",
      "library": "chartjs-datalabels",
      "description": "This module defines anchor positions for data labels in a chart, providing constants to specify label alignment relative to chart elements. It works with chart elements' boundary information to determine where labels should be placed. Concrete use cases include positioning labels at the center, start, or end of bars, points, or other visual elements in a dataset visualization.",
      "description_length": 379,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels.Align",
      "library": "chartjs-datalabels",
      "description": "This module defines alignment options for positioning labels relative to anchor points in a chart. It provides specific values for cardinal directions (top, bottom, left, right), positional alignment (start, end, center), and custom angles via a degree function. These alignments are used to precisely control label placement in data visualizations.",
      "description_length": 349,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels.Text_align",
      "library": "chartjs-datalabels",
      "description": "This module defines text alignment options for data labels in Chart.js. It provides values representing left, center, and right alignment, with `start` and `end` corresponding to left and right alignment, respectively. These values are used to configure the visual positioning of text labels in chart datasets.",
      "description_length": 310,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels.Visibility",
      "library": "chartjs-datalabels",
      "description": "This module defines visibility settings for data labels in a chart, supporting boolean and automatic hiding behavior. It works with the `t` type, which represents visibility states, and provides conversions from boolean values and an `auto` option that hides labels when they overlap. Use this module to control label display in chart configurations where overlapping labels should be automatically hidden.",
      "description_length": 406,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Chartjs_datalabels",
      "library": "chartjs-datalabels",
      "description": "This module configures data label appearance and behavior in Chart.js visualizations. It provides functions to set alignment, anchor points, visibility, text alignment, rotation, and event listeners for labels attached to chart elements like bars or points. Use it to customize label positioning, formatting, and interaction in dataset visualizations.",
      "description_length": 351,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 5,
    "filtered_empty_modules": 4,
    "retention_rate": 0.5555555555555556
  },
  "statistics": {
    "max_description_length": 406,
    "min_description_length": 310,
    "avg_description_length": 359.0,
    "embedding_file_size_mb": 0.07287883758544922
  }
}