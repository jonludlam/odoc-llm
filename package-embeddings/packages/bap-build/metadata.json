{
  "package": "bap-build",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:27:18.122826",
  "modules": [
    {
      "module_path": "Bap_build.Std.Plugin_rules",
      "description": "Installs BAP-specific rules required for plugin development. Works with plugin configurations and rule sets. Used to initialize plugin environments before compiling or extending BAP functionality.",
      "description_length": 196,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bap_build.Std.Plugin_options",
      "description": "Sets default options for bapbuild by initializing configuration parameters. Operates on internal state representing plugin-specific settings. Used to prepare the environment before executing plugin-based tasks.",
      "description_length": 210,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_build.Std",
      "description": "Provides functions to configure and extend BAP through plugin rules and settings. Manages internal state for plugin options and installs custom build rules. Enables initialization of plugin environments and execution of BAP-specific tasks. Allows setting default configurations and integrating custom logic into BAP's build process.",
      "description_length": 332,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "bap-build",
      "description": "Provides functions for parsing and manipulating binary analysis plugin (BAP) constructs, including instruction decoding, symbol table traversal, and control flow graph generation. Works with BAP's internal representations such as terms, modules, and plugins. Used to construct custom analysis passes and integrate low-level binary data into higher-level verification tools.",
      "description_length": 373,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bap_build",
      "description": "Configures and extends BAP with plugin rules and settings, managing internal state for options and custom build logic. Supports initialization of plugin environments, execution of BAP tasks, and integration of custom workflows. Key data types include plugin configurations, build rules, and task definitions. Users can set default parameters, define new build steps, and inject custom processing into BAP's execution pipeline.",
      "description_length": 426,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 426,
    "min_description_length": 196,
    "avg_description_length": 307.4,
    "embedding_file_size_mb": 0.018599510192871094
  }
}