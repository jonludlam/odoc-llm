{
  "package": "reason-react-ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:36.480905",
  "modules": [
    {
      "module_path": "Reason_react_ppx.Binding.ReactDOM",
      "library": "reason_react_ppx",
      "description": "Handles transformation of ReasonReact JSX props into React DOM properties. Works with OCaml expressions and location data to generate properly typed DOM attribute bindings. Used internally during JSX compilation to map ReasonReact component props to React DOM elements.",
      "description_length": 269,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Reason_react_ppx.Binding.React",
      "library": "reason_react_ppx",
      "description": "This module handles the transformation of JSX syntax into React-compatible expressions, including fragments and component-like structures. It operates on OCaml abstract syntax trees, specifically expressions and core types, during the PPX rewriting phase. Concrete use cases include compiling JSX literals into `React.createElement` calls and managing fragment syntax in both single and spread attribute forms.",
      "description_length": 410,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Reason_react_ppx.Binding",
      "library": "reason_react_ppx",
      "description": "This module transforms JSX syntax and ReasonReact props into React-compatible DOM properties and expressions, operating on OCaml ASTs during PPX rewriting. It processes JSX literals into `React.createElement` calls and handles fragments, supporting both standard and spread attribute forms. Key data types include OCaml expressions and core types, with operations that map JSX attributes to typed DOM bindings. Example uses include compiling `<div className=\"box\" />` into a properly-typed DOM element and transforming JSX fragments into React fragment syntax.",
      "description_length": 560,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Reason_react_ppx.Builder",
      "library": "reason_react_ppx",
      "description": "This module facilitates the creation of OCaml AST nodes for syntactic constructs such as expressions, patterns, type declarations, and module signatures, leveraging types from `Ppxlib` like `expression`, `pattern`, `core_type`, and `signature_item`. It provides utilities to programmatically build and manipulate language features including control flow, data structures, polymorphic types, class hierarchies, and module functors, with support for location tracking and attribute handling. These operations are tailored for use in PPX rewriters, particularly enabling transformations in the ReasonReact ecosystem such as JSX expansion and syntax-directed code generation.",
      "description_length": 671,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Reason_react_ppx",
      "library": "reason_react_ppx",
      "description": "This module enables the manipulation and transformation of OCaml AST nodes and ReasonReact JSX elements, converting JSX syntax into React-compatible calls and handling attributes, fragments, and labeled arguments. It constructs and processes expressions, patterns, and type declarations using `Ppxlib` types, supporting both direct AST manipulation and high-level JSX transformations. Key operations include converting `<div />` elements into `React.createElement` calls, extracting and filtering JSX attributes into typed object fields, and generating module-level declarations for component APIs. It serves as a bridge between ReasonReact syntax and OCaml's compilation pipeline, enabling precise, syntax-aware code generation and transformation.",
      "description_length": 748,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 748,
    "min_description_length": 269,
    "avg_description_length": 531.6,
    "embedding_file_size_mb": 0.018614768981933594
  }
}