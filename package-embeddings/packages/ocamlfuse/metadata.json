{
  "package": "ocamlfuse",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:52:42.110474",
  "modules": [
    {
      "module_path": "Fuse.Unix_util",
      "library": "ocamlfuse",
      "description": "This module provides direct system call wrappers for Unix file operations, including safe and unsafe variants for reading from and writing to file descriptors, converting between file descriptors and integers, and retrieving or modifying file system metadata. It works with Unix.file_descr, Bigarray.Array1 for buffer management, and a custom statvfs type for file system statistics. Concrete use cases include implementing low-level file I/O in FUSE file systems, handling directory changes via file descriptors, and querying file system capacity and limits.",
      "description_length": 559,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fuse.Fuse_bindings",
      "library": "ocamlfuse",
      "description": "This module defines core types and operations for interacting with the FUSE (Filesystem in Userspace) interface, including handling filesystem commands and context. It works with abstract types like `fuse`, `fuse_operations`, and `fuse_cmd` to manage filesystem events and state. Concrete use cases include initializing a FUSE instance, processing incoming filesystem commands, and setting up operation handlers for custom filesystem behavior.",
      "description_length": 443,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Fuse.Fuse_lib",
      "library": "ocamlfuse",
      "description": "This module handles operations for defining and managing named functions with arity-specific support, working with opaque types and string identifiers. It includes utilities for checking null values, retrieving undefined values, and running a FUSE event loop with specified bindings. Concrete use cases include implementing custom operations with named dispatch and handling dynamic function invocation in FUSE-based filesystems.",
      "description_length": 429,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fuse",
      "library": "ocamlfuse",
      "description": "This module implements a FUSE filesystem by defining operation handlers for file and directory manipulation, attribute management, and extended attributes. It works with file paths, file descriptors, Bigarray buffers, and FUSE-specific context and flag types. Concrete use cases include building custom filesystems that support standard POSIX operations, managing file metadata and permissions, and handling directory traversal and attribute queries.",
      "description_length": 450,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 4,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 559,
    "min_description_length": 429,
    "avg_description_length": 470.25,
    "embedding_file_size_mb": 0.058350563049316406
  }
}