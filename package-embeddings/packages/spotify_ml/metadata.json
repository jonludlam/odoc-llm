{
  "package": "spotify_ml",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:47.414071",
  "modules": [
    {
      "module_path": "Spotify_ml.Client.User",
      "description": "Handles user authentication state by validating tokens and converting between user representations. Works with the `t` type, which encapsulates user session data. Used to check token expiration and serialize/deserialize user data for storage or transmission.",
      "description_length": 258,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spotify_ml.Api",
      "description": "Provides functions to retrieve user-specific data from the Spotify API, including top tracks and artists, while automatically updating the user object. Works with structured types like track, artist, and userTopTracksResponse to represent API responses. Used to fetch and manage user listening history and preferences in real-time.",
      "description_length": 331,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spotify_ml.Client",
      "description": "Manages user authentication and session data through token validation and user representation conversion. It supports operations on the `t` type, including checking token validity and serializing user information. This module enables secure handling of user sessions, such as refreshing tokens or storing user state between requests. It is essential for maintaining authenticated interactions with the Spotify API.",
      "description_length": 414,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "spotify_ml",
      "description": "Provides functions for authenticating with Spotify, fetching artist and track data, and searching music content via the Spotify Web API. Works with JSON-encoded responses, access tokens, and URI structures specific to Spotify's data model. Enables integration of music recommendation logic and metadata retrieval in OCaml applications.",
      "description_length": 335,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Spotify_ml",
      "description": "Retrieves and updates user-specific data from the Spotify API, handling structured types like track, artist, and userTopTracksResponse to represent listening history and preferences. Manages authentication by validating tokens and converting user representations, supporting operations on the `t` type for session control. It enables real-time updates of user data and secure token management during API interactions. For example, it can fetch a user's top tracks and refresh an expired authentication token.",
      "description_length": 508,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 508,
    "min_description_length": 258,
    "avg_description_length": 369.2,
    "embedding_file_size_mb": 0.018589019775390625
  }
}