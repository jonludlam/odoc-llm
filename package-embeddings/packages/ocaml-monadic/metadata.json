{
  "package": "ocaml-monadic",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:46:33.319188",
  "modules": [
    {
      "module_path": "Ocaml_monadic.Ocaml_monadic_ppx",
      "library": "ocaml_monadic",
      "description": "This module implements custom syntax extensions for monadic bind (`>>=`) and failure handling (`<?>`) operations, transforming expressions during compilation. It processes OCaml abstract syntax trees using `Ppxlib` types, enabling the use of `let%bind` and `let%orzero` for asynchronous or option-like computations. Concrete use cases include simplifying error propagation in result types and composing asynchronous operations with custom monadic semantics.",
      "description_length": 457,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocaml_monadic",
      "library": "ocaml_monadic",
      "description": "This module implements custom syntax extensions for monadic bind (`>>=`) and failure handling (`<?>`) operations, transforming OCaml abstract syntax trees during compilation using `Ppxlib` types. It enables the use of `let%bind` and `let%orzero` to simplify asynchronous or option-like computations with custom monadic semantics. Concrete use cases include streamlining error propagation in result types and composing asynchronous operations with tailored effects.",
      "description_length": 464,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 464,
    "min_description_length": 457,
    "avg_description_length": 460.5,
    "embedding_file_size_mb": 0.029390335083007812
  }
}