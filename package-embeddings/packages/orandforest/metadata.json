{
  "package": "orandforest",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:32.361926",
  "modules": [
    {
      "module_path": "Orandforest.ORandForest.IntRandForest",
      "library": "orandforest",
      "description": "This module implements a random forest classifier for integer-based C4.5 decision trees. It provides functions to generate a forest from training data, classify new data points, and persist models to disk. The forest supports parallel construction and returns uncalibrated confidence scores per category during classification.",
      "description_length": 326,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Orandforest.ORandForest.FloatRandForest",
      "library": "orandforest",
      "description": "This module implements a random forest classifier for numerical data, supporting training with `genRandomForest` to build an ensemble of decision trees from labeled training data. It provides `classify` to predict categories for new data vectors and `classify_raw` to retrieve raw vote distributions, which can be used for calibration. Models can be persisted with `save_to_file` and reloaded with `restore_from_file`, enabling deployment and reuse without retraining.",
      "description_length": 468,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Orandforest.ORandForest.Make",
      "library": "orandforest",
      "description": "Implements random forest generation and classification for C4.5 decision trees. Accepts training data to build forests with configurable tree count and parallelization, and supports classification with raw vote percentages. Exposes serialization for persisting trained models to disk.",
      "description_length": 284,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Orandforest.ORandForest.S",
      "library": "orandforest",
      "description": "This module implements a random forest classifier for C4.5-formatted data, providing functions to train forests, classify data, and persist models. It operates on training sets, individual data points, and categories, supporting parallel tree generation and calibrated classification confidence. Concrete use cases include building scalable decision tree ensembles and applying them to categorical prediction tasks in machine learning pipelines.",
      "description_length": 445,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Orandforest.ORandForest",
      "library": "orandforest",
      "description": "This module implements random forest algorithms for classification and regression, building ensembles of decision trees from labeled datasets with integer or float features. It supports training forests, making predictions on new data, and evaluating model accuracy, with concrete applications in tasks like customer churn prediction and housing price estimation. The child modules provide specialized classifiers for C4.5 trees and numerical data, offering operations such as parallel forest generation, calibrated classification, and model serialization to disk. Specific capabilities include `classify` for predictions, `genRandomForest` for training, and `save_to_file` for model persistence.",
      "description_length": 696,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Orandforest",
      "library": "orandforest",
      "description": "This module implements random forest algorithms for classification and regression, building ensembles of decision trees from labeled datasets with integer or float features. It provides core operations such as `classify` for making predictions, `genRandomForest` for training models in parallel, and `save_to_file` for persisting trained models to disk. Specialized classifiers support C4.5 trees and numerical data handling, enabling tasks like customer churn prediction and housing price estimation. The module allows calibrated classification and efficient model evaluation on new datasets.",
      "description_length": 593,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 696,
    "min_description_length": 284,
    "avg_description_length": 468.6666666666667,
    "embedding_file_size_mb": 0.02225494384765625
  }
}