{
  "package": "httpun-ws-async",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:52.814598",
  "modules": [
    {
      "module_path": "Httpun_ws_async.Server",
      "description": "Handles WebSocket connections by defining input handlers, integrating with HTTP configuration and error management. Processes messages through a structured event loop using custom types for socket addresses and Websocket data. Used to manage real-time communication in a server application, such as live updates or chat functionality.",
      "description_length": 334,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_ws_async.Client",
      "description": "Handles WebSocket connections by establishing a secure link to a specified host and port, using a provided resource path and nonce. Processes incoming messages through a dedicated handler and manages errors via a custom error callback. Operates with specific types including HTTP/WS connections, socket addresses, and input handlers for real-time data exchange.",
      "description_length": 361,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "httpun-ws-async",
      "description": "Provides functions for establishing and managing WebSocket connections, handling message framing, and processing binary or text data. Works with socket descriptors, byte buffers, and protocol-specific data structures. Used to build real-time communication layers in networked applications, such as chat systems or live data feeds.",
      "description_length": 330,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_ws_async",
      "description": "manages real-time communication through WebSocket connections, integrating HTTP configuration and error handling. It uses custom types for socket addresses, Websocket data, and input handlers to process messages in an event loop. It supports secure connections to hosts with resource paths and nonce values, enabling live updates or chat features. Examples include establishing a secure WebSocket link, handling incoming messages, and managing errors through callback functions.",
      "description_length": 478,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 478,
    "min_description_length": 330,
    "avg_description_length": 375.75,
    "embedding_file_size_mb": 0.014925956726074219
  }
}