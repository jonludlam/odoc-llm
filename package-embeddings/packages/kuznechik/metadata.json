{
  "package": "kuznechik",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:59.427762",
  "modules": [
    {
      "module_path": "Kuznechik.Cipher",
      "description": "Creates a cipher instance from a 128-bit key array and provides methods to encrypt or decrypt individual 128-bit blocks using that key. Operates on 128-bit integer arrays and the cipher state type. Used for securing data in fixed-size blocks, such as encrypting individual segments of a larger dataset.",
      "description_length": 302,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "kuznechik",
      "description": "Provides encryption and decryption operations using the Kuznechik block cipher algorithm. Works with byte arrays of fixed length and cryptographic keys. Used to secure data transmission in protocols requiring Russian cryptographic standards.",
      "description_length": 241,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Kuznechik",
      "description": "Encapsulates a block cipher algorithm that processes 128-bit data units using a predefined key. It defines a state type and operates on 128-bit integer arrays, enabling encryption and decryption of fixed-size blocks. Users can instantiate the cipher with a key and apply transformations to individual data segments. This supports secure handling of structured data where fixed-length encryption is required.",
      "description_length": 407,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 407,
    "min_description_length": 241,
    "avg_description_length": 316.6666666666667,
    "embedding_file_size_mb": 0.011321067810058594
  }
}