{
  "package": "sihl-token",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:39.248460",
  "modules": [
    {
      "module_path": "Sihl_token.JwtInMemory",
      "library": "sihl-token",
      "description": "This module handles JWT token creation, validation, and lifecycle management with configurable expiration, signing, and activation state. It operates on string-based key-value data and supports reading specific fields or full payloads from tokens. Concrete use cases include issuing time-limited authentication tokens, verifying token integrity, and managing token blacklists for session control.",
      "description_length": 396,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_token.JwtMariaDb",
      "library": "sihl-token",
      "description": "This module handles JWT token creation, validation, and lifecycle management with support for expiration, deactivation, and signature verification. It works with string-based key-value data stored in tokens, using optional secrets and context parameters for customization. Concrete use cases include generating time-limited authentication tokens, verifying token integrity during API requests, and managing token blacklists for session control.",
      "description_length": 444,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_token.PostgreSql",
      "library": "sihl-token",
      "description": "This module implements token management operations using PostgreSQL as the backend. It provides functions to create, read, verify, and manage the lifecycle of tokens, including expiration, activation, and deactivation. These operations work with string-based key-value pairs and are used for scenarios like authentication, session management, and secure data exchange where tokens need to be persisted and validated against a database.",
      "description_length": 435,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_token.MariaDb",
      "library": "sihl-token",
      "description": "This module implements token management operations including creation, validation, and lifecycle control using a MariaDB backend. It handles string-based key-value data stored in tokens, supporting functions to read individual or all values, verify signatures, check expiration, and manage active/inactive states. Concrete use cases include handling authentication tokens, password reset tokens, and session management with configurable expiration and secret signing.",
      "description_length": 467,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_token.JwtPostgreSql",
      "library": "sihl-token",
      "description": "This module handles JWT token creation, validation, and lifecycle management with PostgreSQL storage. It supports operations like signing tokens with custom secrets, reading and verifying claims, checking expiration and activity status, and deactivating tokens to prevent reuse. Concrete use cases include managing authentication tokens with configurable expiration and securely invalidating tokens upon logout.",
      "description_length": 411,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_token",
      "library": "sihl-token",
      "description": "This module provides JWT-based token management with creation, validation, and revocation capabilities, supporting in-memory and database-backed storage. It offers operations to generate signed tokens, extract and verify claims, manage expiration and activation states, and integrate with PostgreSQL or MariaDB for persistent token storage. You can issue time-limited authentication tokens, verify token integrity during API requests, and manage session blacklists across different database backends. Specific functions allow reading individual token fields, checking expiration, deactivating tokens, and using custom secrets or context parameters for enhanced security.",
      "description_length": 670,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 670,
    "min_description_length": 396,
    "avg_description_length": 470.5,
    "embedding_file_size_mb": 0.022223472595214844
  }
}