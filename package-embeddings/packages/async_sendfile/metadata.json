{
  "package": "async_sendfile",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:15.718692",
  "modules": [
    {
      "module_path": "Async_sendfile.Limiter",
      "description": "Creates a token bucket algorithm implementation that tracks and enforces rate limits based on bytes per second. Operates on a custom state type representing the current capacity and replenishment rate. Used to control data transfer speeds in networked applications or file I/O operations.",
      "description_length": 288,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "async_sendfile",
      "description": "Handles asynchronous file transmission with non-blocking I/O operations, supporting direct data transfer between file descriptors. Operates on file descriptors, buffers, and socket connections to optimize data movement. Used to efficiently stream large files over networks without loading entire contents into memory.",
      "description_length": 317,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Async_sendfile",
      "description": "Manages rate-limited data transfer using a token bucket mechanism, tracking available capacity and replenishment rate in a custom state. Provides operations to update the state, check available tokens, and consume tokens while respecting rate constraints. Can be used to throttle file transfers or network streams to prevent bandwidth overuse. Example: limit a file upload to 100KB/s by adjusting the token bucket state as data is sent.",
      "description_length": 436,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 436,
    "min_description_length": 288,
    "avg_description_length": 347.0,
    "embedding_file_size_mb": 0.011340141296386719
  }
}