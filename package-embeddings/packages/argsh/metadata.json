{
  "package": "argsh",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:29:07.285640",
  "modules": [
    {
      "module_path": "Argsh.Bash",
      "description": "Generates command-line argument parsing logic using a formatter, string, and specification list. Processes command-line syntax and metadata to construct argument definitions. Used to dynamically build CLI interfaces with custom formatting and parsing rules.",
      "description_length": 257,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Argsh.Builder",
      "description": "Creates a command-line parser by defining a file with options, each associated with a name, specification, and description. It processes command-line arguments and generates a structured representation for further execution. Used to build custom CLI tools with typed option parsing and help message generation.",
      "description_length": 310,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Argsh.Common",
      "description": "Provides functions to process and manipulate strings, including removing leading characters up to the first space, escaping specific characters, and enhancing command-line option lists with help descriptions. Works with strings and lists of argument specifications. Used to clean input documents, format help messages, and prepare command-line arguments for parsing.",
      "description_length": 366,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Argsh.Fish",
      "description": "Creates a command-line interface by defining options and their parsing logic, using format strings and argument specifications. Operates on formatatters, strings, and lists of option tuples. Used to generate structured input handling for CLI tools with custom option definitions.",
      "description_length": 279,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Argsh.Zsh",
      "description": "Generates command-line argument parsing logic using a formatter, a command name, and a list of argument specifications. It processes format strings and argument types to produce structured parsing rules. Used to dynamically build Zsh completion scripts based on defined command-line interfaces.",
      "description_length": 294,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "argsh",
      "description": "Generates shell autocompletion scripts for bash, zsh, and fish by processing command-line arguments defined with Stdlib.Arg. It accepts a program name and a list of argument specifications to produce completion logic. Output is directed to a Format.formatter, enabling integration into build systems or runtime generation.",
      "description_length": 322,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Argsh",
      "description": "combines argument parsing, string manipulation, and CLI interface generation to create flexible command-line tools. It handles formatted input, processes option definitions, and constructs structured representations for execution and help generation. Functions include cleaning input, escaping characters, and building completion scripts. It enables dynamic CLI creation with custom formatting, typed options, and enhanced help messages.",
      "description_length": 437,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 437,
    "min_description_length": 257,
    "avg_description_length": 323.57142857142856,
    "embedding_file_size_mb": 0.025844573974609375
  }
}