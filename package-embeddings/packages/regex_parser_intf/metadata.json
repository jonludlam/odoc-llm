{
  "package": "regex_parser_intf",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:38.192828",
  "modules": [
    {
      "module_path": "Regex_parser_intf.Applicative_infix",
      "description": "Applies a function wrapped in a context to a value in the same context, and lifts functions into contexts for sequential transformation. Operates on monadic types, enabling chaining and combining effects. Used to sequence operations where the result of one depends on the previous, such as parsing or effectful computations.",
      "description_length": 324,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Regex_parser_intf.Char",
      "description": "Matches any character, including newlines, and provides specific character class patterns like uppercase, lowercase, alphabetic, numeric, and whitespace. Constructs character sets from lists of characters and negates them. Used for defining precise regex patterns in text processing tasks.",
      "description_length": 289,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Regex_parser_intf.Decimal",
      "description": "Provides operations to extract the digit value, sign, and unsigned integer representation from a decimal value. Works with custom decimal types that encapsulate integer components and sign information. Used to process and validate numeric input in financial calculations or data parsing scenarios.",
      "description_length": 297,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "regex_parser_intf",
      "description": "Parses regular expressions into an abstract syntax tree, supporting operations like grouping, quantification, and character class matching. Works with string inputs and produces a structured representation of regex patterns. Used to validate input formats and generate matching logic for text processing pipelines.",
      "description_length": 314,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Regex_parser_intf",
      "description": "Combines monadic operations for sequencing effectful computations, character matching with flexible patterns, and numeric extraction from decimal representations. Supports chaining operations through monadic binds, constructing precise regex patterns with character classes, and parsing numeric values with sign and magnitude. Enables complex text processing pipelines that integrate parsing, pattern matching, and numeric validation. For example, it can parse a string into a decimal number while validating its format and extracting its components.",
      "description_length": 550,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 550,
    "min_description_length": 289,
    "avg_description_length": 354.8,
    "embedding_file_size_mb": 0.018632888793945312
  }
}