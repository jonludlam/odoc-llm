{
  "package": "ffmpeg-avcodec",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-07-15T23:05:50.584459",
  "modules": [
    {
      "module_path": "Avcodec.BitstreamFilter",
      "library": "ffmpeg-avcodec",
      "description": "This module applies bitstream filters to encoded audio/video packets, modifying their content or metadata. It works with filter configurations, encoder/decoder parameters, and packets containing raw bitstream data. Use it to process streams with filters like `h264_mp4toannexb` or `aac_adtstoasc` during muxing/demuxing workflows.",
      "description_length": 330,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Avcodec.Packet",
      "library": "ffmpeg-avcodec",
      "description": "This module provides operations for inspecting and modifying encoded media packets, including timestamp management (PTS/DTS), duration, stream indexing, flag handling, and side data manipulation (e.g., replay gain, metadata), alongside low-level data conversion and packet lifecycle management. It works with `Avcodec.Packet.t` types, which encapsulate encoded audio, video, or subtitle data, enabling precise media packet handling in encoder/decoder workflows, raw media stream processing",
      "description_length": 489,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Avcodec.Subtitle",
      "library": "ffmpeg-avcodec",
      "description": "This module handles subtitle codec operations, providing functions to list and retrieve encoders and decoders by name or ID. It works with subtitle codec identifiers and codec structures to access specific encoding and decoding implementations. Concrete use cases include selecting a subtitle encoder for muxing subtitles into a video file or decoding subtitles from a stream using a specific codec like SRT or WebVTT.",
      "description_length": 418,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Avcodec.Unknown",
      "library": "ffmpeg-avcodec",
      "description": "This module defines a list of codec identifiers for unknown or specialized formats and provides functions to retrieve the string representation of these IDs and extract them from codec parameters. It works with the `id` type, which includes identifiers like `Ttf`, `Scte_35`, `Mpeg2ts`, and others not mapped to standard codec types. Concrete use cases include handling subtitle formats, binary data streams, and metadata containers in multimedia processing pipelines.",
      "description_length": 468,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Avcodec.Video",
      "library": "ffmpeg-avcodec",
      "description": "This module enables querying and configuring video codec capabilities, such as inspecting supported frame rates, pixel formats, and codec parameters like resolution and bit rate. It works with codec descriptors, encoder/decoder instances, and hardware contexts to facilitate video encoding and decoding workflows. Specific applications include selecting appropriate codecs for transcoding tasks and optimizing video processing pipelines based on hardware acceleration support.",
      "description_length": 476,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Avcodec.Audio",
      "library": "ffmpeg-avcodec",
      "description": "This module manages audio codec operations such as querying descriptors, selecting encoders/decoders by name or ID, and configuring parameters like channel layouts, sample formats, and bit rates. It works with codec structures, audio parameter sets, and `Avutil.audio` data to handle workflows including audio stream encoding, decoding, and format conversion. Specific use cases involve inspecting codec capabilities, initializing audio processing pipelines, and adapting audio properties for container formats or hardware constraints.",
      "description_length": 535,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Avcodec",
      "library": "ffmpeg-avcodec",
      "description": "This module provides core tools for encoding and decoding audio, video, and subtitle streams, integrating metadata handling, format conversion, and hardware acceleration support. It works with packets, frames, and codec descriptors to enable tasks like transcoding, real-time streaming, and media file processing. Submodules refine this functionality: one applies bitstream filters like `h264_mp4toannexb` during stream processing, another manipulates packet metadata such as timestamps and side data, and specialized modules handle subtitle and audio codecs, video capabilities, and custom codec identifiers. Examples include selecting an SRT subtitle encoder, adjusting PTS values in video packets, or querying supported pixel formats for hardware-accelerated video encoding.",
      "description_length": 777,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 777,
    "min_description_length": 330,
    "avg_description_length": 499.0,
    "embedding_file_size_mb": 0.02584362030029297
  }
}