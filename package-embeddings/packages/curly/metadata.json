{
  "package": "curly",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 8,
  "creation_timestamp": "2025-06-18T16:29:21.682286",
  "modules": [
    {
      "module_path": "Curly.Meth",
      "description": "Prints values of type t using the Format module, supporting pretty-printing for custom data structures. Works with the variant type t, which represents parsed method signatures. Used to generate human-readable output for debugging or logging purposes.",
      "description_length": 251,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Header",
      "description": "Prints a collection of header key-value pairs in a human-readable format. Accepts a list of string tuples representing HTTP headers. Used to format headers for logging or debugging purposes.",
      "description_length": 190,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Response",
      "description": "Provides pretty-printing for internal representation of HTTP responses using the Format module. Works with a record type containing status code, headers, and body. Used to generate human-readable logs of HTTP interactions during debugging.",
      "description_length": 239,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Request",
      "description": "Constructs a request object with specified URL, method, headers, and body. Processes the request into command-line arguments for external execution and formats the request for human-readable output. Operates on URL strings, HTTP methods, headers, and raw body data.",
      "description_length": 265,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Curly.Process_result",
      "description": "Processes and formats execution outcomes, including success codes and error messages, with a focus on structured logging. Works with a record type containing status, exit code, and message fields. Used to generate human-readable output for system command results in diagnostic tools.",
      "description_length": 283,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Error",
      "description": "Prints error messages in a human-readable format using the Format module. Operates on the abstract type `t` representing error information. Used to format and display error details during logging or user feedback.",
      "description_length": 213,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "curly",
      "description": "Provides functions to construct and execute HTTP requests using the curl command line tool, including GET, POST, and header management. Works with strings, lists, and custom request configurations to build and parse HTTP interactions. Used to integrate simple HTTP communication into applications without external dependencies or complex setup.",
      "description_length": 344,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Curly",
      "description": "provides pretty-printing and formatting capabilities for HTTP-related data, including method signatures, headers, responses, requests, and error messages. It handles custom types such as parsed method signatures, HTTP headers, response records, request objects, and error structures, enabling structured logging and debugging. Operations include formatting headers, printing request details, and displaying error information in a readable format. For example, it can generate human-readable logs of HTTP interactions or format error messages for user feedback.",
      "description_length": 560,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 560,
    "min_description_length": 190,
    "avg_description_length": 293.125,
    "embedding_file_size_mb": 0.02948760986328125
  }
}