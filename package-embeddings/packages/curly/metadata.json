{
  "package": "curly",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-07-15T23:05:19.566988",
  "modules": [
    {
      "module_path": "Curly.Error",
      "library": "curly",
      "description": "This module defines a set of error types that represent specific failure scenarios during HTTP request handling, such as invalid requests, process failures, and exceptions. It includes a pretty-printing function to format these errors for debugging or logging. These types are used to handle and report errors in a structured way when making HTTP requests with the underlying process execution.",
      "description_length": 394,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Request",
      "library": "curly",
      "description": "Handles HTTP request construction and serialization. It provides functions to create structured requests with methods, URLs, headers, and bodies, and convert them into command-line arguments or pretty-printed output. Useful for generating curl-like command strings or logging request details.",
      "description_length": 292,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Meth",
      "library": "curly",
      "description": "This module defines an enumerated type representing HTTP methods, including standard ones like `GET`, `POST`, and `PATCH`, as well as a variant for custom methods. It provides a function to pretty-print these method values using the Format module. Useful for logging or displaying HTTP method values in a human-readable form.",
      "description_length": 325,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Process_result",
      "library": "curly",
      "description": "Represents the result of a process execution with captured output and exit status. Provides a pretty-printing function to display the result in a human-readable format. Useful for debugging and logging outcomes of system commands executed within OCaml programs.",
      "description_length": 261,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Header",
      "library": "curly",
      "description": "This module formats and prints HTTP headers represented as lists of key-value pairs. It provides a pretty-printing function `pp` that outputs headers in a readable format. Use it to display HTTP header lists in logs, debugging tools, or network diagnostic interfaces.",
      "description_length": 267,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly.Response",
      "library": "curly",
      "description": "Handles HTTP response parsing and formatting. It provides a structured representation of responses including status code, headers, and body content. Useful for inspecting or logging the full details of HTTP transactions.",
      "description_length": 220,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Curly",
      "library": "curly",
      "description": "This module executes HTTP requests using typed methods, headers, and error handling, producing structured results that distinguish success from failure. It supports common HTTP verbs and custom methods, enabling precise control over request construction, execution, and response inspection. Concrete use cases include interacting with REST APIs, logging HTTP transactions, and generating curl-like command strings for debugging. The module integrates submodules for error reporting, request/response formatting, method enumeration, and process result handling, providing a comprehensive toolkit for HTTP-based service interaction.",
      "description_length": 630,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 630,
    "min_description_length": 220,
    "avg_description_length": 341.2857142857143,
    "embedding_file_size_mb": 0.02587127685546875
  }
}