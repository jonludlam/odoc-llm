{
  "package": "doc-ock-html",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 15,
  "creation_timestamp": "2025-06-18T16:33:21.722682",
  "modules": [
    {
      "module_path": "DocOckHtml.Html_tree.Relative_link.Id",
      "description": "Generates a URL fragment from an identifier by applying a package getter and optionally truncating the result. It processes values of type ('a, _) DocOck.Paths.Identifier.t, extracting and formatting their string representation. Used to create anchor links in documentation output based on module or value names.",
      "description_length": 312,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Url.Anchor.Polymorphic_variant_decl",
      "description": "Converts a variant element from a package's type expression into a structured representation using a custom identifier and package-to-string mapping. Operates on package types, identifier paths, and variant elements from the DocOck library. Used to process variant type definitions during documentation generation or type analysis.",
      "description_length": 331,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Url.Anchor.Module_listing",
      "description": "Provides a function to convert a module reference into a structured representation. Operates on module references and produces a custom type encapsulating module information. Used to generate module listings from parsed documentation data.",
      "description_length": 239,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "DocOckHtml.Html_tree.Relative_link",
      "description": "Encodes identifiers into URL fragments using package-specific rules and optional truncation, operating on values of type ('a, _) DocOck.Paths.Identifier.t. It supports generating stable, human-readable links for elements in documentation. For example, it can transform a module name into a hash fragment like \"#module-MyModule\" or shorten a long value name to \"#value-short\". The output is tailored for use in HTML documentation to enable direct navigation to specific elements.",
      "description_length": 478,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Url.Error",
      "description": "Converts error values to human-readable strings for logging or display. Works with a custom error type that encapsulates various failure conditions. Used to generate error messages in command-line tools and API responses.",
      "description_length": 221,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Url.Anchor",
      "description": "Transforms variant elements and module references into structured representations using custom identifiers and package mappings. Processes package types, identifier paths, and module references to extract and organize type and module information. Enables detailed type analysis and documentation generation by converting raw data into accessible formats. For example, it can extract variant constructors with their associated types or represent module hierarchies for inclusion in documentation.",
      "description_length": 495,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Markup.Type",
      "description": "Generates HTML span elements with specific content, where one function wraps a list of HTML elements and another inserts a variable as a span. Works with Tyxml's HTML element types and string values. Used to dynamically embed variables and structure inline HTML content in web templates.",
      "description_length": 287,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Documentation",
      "description": "Generates HTML from documentation strings, supporting both full and partial conversions based on paragraph boundaries. Processes documentation records that include inline and block comments, preserving formatting when wrapped. Useful for rendering API documentation in web interfaces or generating help pages.",
      "description_length": 309,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Html_tree",
      "description": "Checks if a node has a parent reference. Operates on tree nodes represented as objects with parent pointers. Used to navigate and validate hierarchical structures in DOM-like representations.",
      "description_length": 191,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.List_targets",
      "description": "Generates a list of target names for a given package and unit, extracting relevant identifiers from documentation annotations. Operates on package names and DocOck's Unit.t structure to produce strings representing build targets. Used to dynamically generate build configurations based on documented unit definitions.",
      "description_length": 317,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "DocOckHtml.Markup",
      "description": "creates dynamic inline HTML content by wrapping lists of elements and inserting variables as spans, leveraging Tyxml's element types and strings. It supports operations like element aggregation and variable substitution within web templates. Functions include wrapping collections and injecting values into spans. For example, it can generate a paragraph with embedded user names or formatted text fragments.",
      "description_length": 408,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.To_html_tree",
      "description": "Generates HTML tree structures from unit and page data using a package identifier function. Operates on DocOck's Unit.t and Page.t types, converting them into structured HTML representations. Used to render documentation units and pages with custom package naming in web outputs.",
      "description_length": 279,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml.Url",
      "description": "Processes error values and variant/module structures into structured, human-readable formats for logging, display, and documentation. It handles custom error types, converts variant constructors with their types, and organizes module references into hierarchical representations. Examples include generating error messages from failure conditions or extracting module paths like [\"lol\"; \"Bar\"; \"Foo\"] for documentation. Supports detailed type analysis by mapping package identifiers and organizing element metadata.",
      "description_length": 515,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "doc-ock-html",
      "description": "Generates HTML documentation from OCaml code using the Doc-ock library. Processes module signatures, type definitions, and function annotations. Produces structured, navigable web pages for API reference and code exploration.",
      "description_length": 225,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DocOckHtml",
      "description": "Generates and manipulates HTML content from documentation data, including full or partial conversions, dynamic inline elements, and structured tree outputs. Processes tree nodes, extracts build targets from unit definitions, and formats errors and module references into readable forms. Supports operations like parent checks, variable substitution, and type-aware documentation rendering. Examples include generating API docs, building dynamic web templates, and extracting module paths for error reporting.",
      "description_length": 508,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 15,
    "meaningful_modules": 15,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 515,
    "min_description_length": 191,
    "avg_description_length": 341.0,
    "embedding_file_size_mb": 0.054923057556152344
  }
}