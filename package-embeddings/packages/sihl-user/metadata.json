{
  "package": "sihl-user",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 10,
  "creation_timestamp": "2025-08-14T23:09:39.752592",
  "modules": [
    {
      "module_path": "Sihl_user.Password_reset.MakeMariaDb",
      "library": "sihl-user",
      "description": "This module handles password reset operations using MariaDB for storage. It creates reset tokens linked to users and resets passwords after validating tokens. Use it to implement secure password recovery in web applications with MariaDB as the database backend.",
      "description_length": 261,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.Password_reset.MakePostgreSql",
      "library": "sihl-user",
      "description": "This module handles password reset operations using PostgreSQL, including creating reset tokens and resetting passwords. It works with user identifiers, tokens, and password data, interfacing directly with a PostgreSQL database. Concrete use cases include initiating a password reset flow and validating tokens to update user passwords securely.",
      "description_length": 345,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.PostgreSql.Web",
      "library": "sihl-user",
      "description": "This module provides functions to authenticate users based on tokens or session cookies in a PostgreSQL-backed web application. It handles extracting and validating user identifiers from HTTP requests using either a token lookup or session data. Concrete use cases include verifying authenticated users in web endpoints by checking session cookies or bearer tokens against stored user data.",
      "description_length": 390,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_user.MariaDb.Web",
      "library": "sihl-user",
      "description": "This module provides functions to authenticate users based on tokens or session cookies in a MariaDB-backed web application. It works with `Rock.Request.t` and `Sihl__Contract_user.t` types, handling user retrieval via session storage or token validation. Concrete use cases include extracting authenticated user data from HTTP requests for middleware or route handlers.",
      "description_length": 370,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.Make.Web",
      "library": "sihl-user",
      "description": "This module provides functions to authenticate users based on tokens or session data extracted from HTTP requests. It works with `Rock.Request.t` and returns optional user data wrapped in Lwt promises. Concrete use cases include extracting a user from a Bearer token or session cookie in web handlers.",
      "description_length": 301,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.Password_reset",
      "library": "sihl-user",
      "description": "This module handles password reset operations for user accounts, providing functions to create and validate reset tokens. It works with user identifiers, tokens, and password data, supporting PostgreSQL and MariaDB as storage backends. Concrete use cases include initiating a password reset flow and securely updating user passwords after token validation.",
      "description_length": 356,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.Make",
      "library": "sihl-user",
      "description": "This module provides functions for managing user data, including creating, updating, authenticating, and searching users. It works with user data structures represented by `Sihl__.Contract_user.t` and supports operations like password validation, email-based lookup, and role assignment. Concrete use cases include handling user registration, authenticating users via email and password, and updating user details or passwords in a web application.",
      "description_length": 448,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.PostgreSql",
      "library": "sihl-user",
      "description": "This module implements user management operations backed by PostgreSQL, including user creation, authentication, password updates, and profile modifications. It works with user data structures defined in `Sihl__Contract_user` and supports querying users by ID, email, or search filters with pagination. Concrete use cases include registering new users with password validation, authenticating users via login credentials, and updating user details or passwords in a web application.",
      "description_length": 482,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_user.MariaDb",
      "library": "sihl-user",
      "description": "This module implements user management operations backed by MariaDB, including user creation, authentication, password updates, and search functionalities. It works with user entities represented by `Sihl__Contract_user.t` and handles database interactions like querying by ID or email, updating fields, and enforcing password policies. Concrete use cases include registering new users with validation, authenticating login requests, and searching users with filters or pagination.",
      "description_length": 481,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_user",
      "library": "sihl-user",
      "description": "This module provides user data serialization to JSON/S-expressions, password policy enforcement, and role-based access control for managing user accounts. It operates on a structured user record with fields like email, password hashes, status enums, and timestamps, supporting operations such as secure user creation, authentication flows, and status transitions across PostgreSQL/MariaDB storage backends. Key use cases include implementing registration workflows with validation rules, handling password reset tokens, and maintaining consistent user state representations in distributed systems.",
      "description_length": 597,
      "index": 9,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 10,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 597,
    "min_description_length": 261,
    "avg_description_length": 403.1,
    "embedding_file_size_mb": 0.14529800415039062
  }
}