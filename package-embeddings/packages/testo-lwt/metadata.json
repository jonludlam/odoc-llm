{
  "package": "testo-lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:35.385041",
  "modules": [
    {
      "module_path": "Testo_lwt.Promise.Operators",
      "description": "Performs monadic binding, chaining operations that return wrapped values. Works with any type equipped with a `t` constructor, enabling sequential computation. Used to handle effectful computations in a composable way, such as parsing or state transformations.",
      "description_length": 260,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Testo_lwt.Promise",
      "description": "Provides a structured way to sequence effectful operations using monadic binding, allowing computations that return wrapped values to be chained seamlessly. It supports any type with a `t` constructor, enabling safe and composable handling of asynchronous or stateful processes. Operations include binding, mapping, and lifting, facilitating tasks like asynchronous I/O or incremental parsing. For example, it can link a network request to a data parser, ensuring each step executes only after the previous one completes.",
      "description_length": 521,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Testo_lwt.Tag",
      "description": "Creates and manages uniquely identified tags for test categorization, ensuring valid format and single registration. Operates on private string-based tag identifiers, supporting comparison, conversion, and lookup. Used to filter tests by specific attributes like \"integration\" or \"performance\" during execution.",
      "description_length": 311,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "testo-lwt",
      "description": "Provides functions to execute test cases that return Lwt promises of type unit Lwt.t, enabling asynchronous test execution. Works with Lwt promises and test case definitions structured as functions. Used to run tests in environments where synchronous execution of Lwt is not feasible.",
      "description_length": 284,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Testo_lwt",
      "description": "Sequences effectful operations through monadic composition, enabling safe chaining of asynchronous or stateful tasks using binding, mapping, and lifting. Manages test tags with unique, string-based identifiers, supporting comparison, conversion, and lookup for test categorization. It allows linking a network request to a parser in a single workflow and filters tests by attributes like \"integration\" or \"performance.\" Key types include wrapped values and tagged identifiers, with operations that ensure correctness and composability.",
      "description_length": 535,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 535,
    "min_description_length": 260,
    "avg_description_length": 382.2,
    "embedding_file_size_mb": 0.018598556518554688
  }
}