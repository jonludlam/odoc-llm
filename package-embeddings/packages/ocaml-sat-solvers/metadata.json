{
  "package": "ocaml-sat-solvers",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:01.228427",
  "modules": [
    {
      "module_path": "ocaml-sat-solvers",
      "description": "Provides functions to parse DIMACS CNF files, solve SAT instances using a backtracking algorithm, and extract satisfying assignments. Operates on boolean formulas represented as lists of clauses, each clause being a list of integers denoting literals. Used to validate logical constraints in theorem proving and automated reasoning tasks.",
      "description_length": 338,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Timing",
      "description": "Provides functions to create and manage a timetable structure, including initializing a new timetable, generating a placeholder version, and recording execution times of named operations. It tracks time in milliseconds and allows retrieval of recorded durations. Used to measure and report the performance of specific code segments during runtime.",
      "description_length": 347,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Satsolutionparser",
      "description": "Parses SAT solution files by processing a lexer and returning a structured solution containing variables and their assignments. It works with a custom token type representing elements from the input stream. The program function is used to parse DIMACS format solutions into a usable data structure.",
      "description_length": 298,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Satsolvers",
      "description": "Registers solver factories, checks for existing solvers, retrieves specific or all solvers, and manages a default solver. Operates on solver factories and lists of solver factories. Used to dynamically configure and access different SAT solving backends within a constraint-solving framework.",
      "description_length": 292,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Satsolutionlexer",
      "description": "Handles lexical analysis for SAT solution formats, processing input streams into tokens such as variables, clauses, and operators. Operates on `Lexing.lexbuf` and returns `Satsolutionparser.token` values. Used to parse DIMACS CNF files and similar structured logical expressions.",
      "description_length": 279,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 5,
    "filtered_empty_modules": 5,
    "retention_rate": 0.5
  },
  "statistics": {
    "max_description_length": 347,
    "min_description_length": 279,
    "avg_description_length": 310.8,
    "embedding_file_size_mb": 0.01862621307373047
  }
}