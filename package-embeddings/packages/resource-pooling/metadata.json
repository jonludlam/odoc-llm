{
  "package": "resource-pooling",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:59:55.058513",
  "modules": [
    {
      "module_path": "Resource_pooling.Server_pool.Make",
      "library": "resource-pooling",
      "description": "This module manages a cluster of resource pools, each representing connections to an individual server. It provides operations to add, remove, and query server pools, as well as use connections from them in a round-robin fashion, with support for handling server failures and suspension. Use cases include load balancing connection requests across a cluster of database or API servers, dynamically scaling connection pools, and isolating faulty servers during runtime.",
      "description_length": 468,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resource_pooling.Resource_pool",
      "library": "resource-pooling",
      "description": "This module manages external resource pools, such as database connections or network handles, by reusing existing resources instead of recreating them. It supports creating, validating, checking, and disposing resources, and allows limiting the maximum number of resources and tracking wait queues. Concrete use cases include efficiently reusing HTTP clients, database connections, or file handles in asynchronous applications.",
      "description_length": 427,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resource_pooling.Server_pool",
      "library": "resource-pooling",
      "description": "This module manages a cluster of resource pools, where each pool represents connections to an individual server. It provides operations to add, remove, and query server pools, and to use connections in a round-robin fashion, with support for handling server failures by suspending dysfunctional ones. Concrete use cases include load balancing connection requests across a cluster of database or API servers and dynamically scaling connection pools based on demand.",
      "description_length": 464,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resource_pooling",
      "library": "resource-pooling",
      "description": "This module provides resource pooling functionality for managing external resources like database connections and network handles. It includes operations for creating, validating, and disposing resources with support for limiting resource counts and tracking wait queues. It is used in scenarios such as reusing HTTP clients and load balancing connections across a cluster of servers.",
      "description_length": 384,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 468,
    "min_description_length": 384,
    "avg_description_length": 435.75,
    "embedding_file_size_mb": 0.05835437774658203
  }
}