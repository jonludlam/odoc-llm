{
  "package": "talaria-bibtex",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 8,
  "creation_timestamp": "2025-08-14T23:09:53.970457",
  "modules": [
    {
      "module_path": "Bibtex.Fields.StrSet",
      "library": "talaria-bibtex",
      "description": "This module offers functional set operations for managing ordered collections of strings, including membership checks, union/intersection/difference calculations, and ordered transformations like `map` and `filter`. It works with a concrete ordered string set type, supporting conversions to lists and sequences, and emphasizes ordered traversal with functions like `find_first`, `find_last`, and bidirectional iteration. These capabilities are particularly useful for handling BibTeX fields that require maintaining sorted string collections, such as normalized author lists or categorized entry tags, where set operations must preserve lexical ordering.",
      "description_length": 655,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bibtex.Fields.Database",
      "library": "talaria-bibtex",
      "description": "This module implements a persistent key-value store with ordered string keys and generic values, supporting modifications through immutable updates and functional combinators. It provides ordered traversal, filtering, and transformation operations alongside structural queries, enabling efficient merging, range iteration, and bidirectional access. Designed for managing structured bibliographic data, it facilitates tasks like merging citation databases, extracting subsets by field criteria, and ordered serialization for output.",
      "description_length": 531,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bibtex.Field_parsers",
      "library": "talaria-bibtex",
      "description": "This module defines parsers for specific BibTeX field formats using a token type that includes words, numbers, and separators. It provides functions to parse tags, file paths, page ranges, and author/editor names from lexing buffers. These parsers are used to extract structured data from BibTeX entries, such as splitting author lists into individual names or interpreting page number ranges.",
      "description_length": 393,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bibtex.Field_lexers",
      "library": "talaria-bibtex",
      "description": "This module provides lexer functions for parsing specific fields in BibTeX entries, such as pages, author names, tags, and file paths. It operates on `Lexing.lexbuf` input and produces tokens consumed by the `Field_parsers` module. Each lexer handles a distinct field type, enabling precise parsing of structured data from BibTeX files.",
      "description_length": 336,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bibtex.Field_types",
      "library": "talaria-bibtex",
      "description": "This module defines core data types and variants for representing bibliographic information, including structured types for names, page ranges, publication kinds, and states. It provides functions to manipulate and deconstruct these types, enabling precise modeling of academic references. Concrete use cases include parsing and validating BibTeX entries, representing author names with first and last name components, and encoding publication metadata with status tracking.",
      "description_length": 474,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bibtex.Lexer",
      "library": "talaria-bibtex",
      "description": "This module processes Bibtex input by tokenizing character streams using a lexbuf. It provides entry points for lexing Bibtex content into structured tokens consumed by a parser. Typical use includes reading and analyzing Bibtex files or strings during bibliography processing.",
      "description_length": 277,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bibtex.Fields",
      "library": "talaria-bibtex",
      "description": "This module provides operations for constructing, transforming, and validating structured bibliographic records through type-safe field manipulations. It works with entry types like `entry` and `raw_entry`, leveraging lenses for precise access to typed fields (strings, integers, custom types) and bijections for reversible conversions between representations. Use cases include parsing raw BibTeX data into validated structured entries, maintaining consistent metadata in databases with ordered string sets, and safely updating fields like author lists or page ranges while preserving data integrity.",
      "description_length": 601,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bibtex",
      "library": "talaria-bibtex",
      "description": "This module implements a BibTeX parser with type-safe field manipulation, structured entry validation, and precise data extraction. It operates on `entry` and `raw_entry` types, using lenses and bijections to access and transform fields like author lists, page ranges, and publication metadata. Concrete use cases include parsing BibTeX files into validated entries, maintaining structured bibliographic databases, and safely updating typed fields during reference processing.",
      "description_length": 476,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 655,
    "min_description_length": 277,
    "avg_description_length": 467.875,
    "embedding_file_size_mb": 0.11633586883544922
  }
}