{
  "package": "cbor",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:34.794968",
  "modules": [
    {
      "module_path": "CBOR.Simple",
      "library": "cbor",
      "description": "Handles encoding and decoding CBOR data according to RFC 7049, supporting core types like integers, floats, strings, arrays, and maps. Provides direct serialization and deserialization of values to and from CBOR format, enabling efficient data interchange. Useful for implementing CBOR-based protocols or processing CBOR-encoded data streams.",
      "description_length": 342,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "CBOR",
      "library": "cbor",
      "description": "This module implements CBOR encoding and decoding per RFC 7049, supporting integers, floats, strings, arrays, and maps. It provides direct serialization and deserialization of values to and from CBOR format for efficient data interchange. Use it to implement CBOR-based protocols or process CBOR-encoded data streams. For example, you can encode a list of integers to CBOR bytes or decode a CBOR map into an OCaml record.",
      "description_length": 421,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 421,
    "min_description_length": 342,
    "avg_description_length": 381.5,
    "embedding_file_size_mb": 0.007701873779296875
  }
}