{
  "package": "ansi-parse",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:06.164171",
  "modules": [
    {
      "module_path": "Ansiparse.Concrete.Private",
      "description": "Extracts text and item lists from input using parsing combinators. Operates on lists of custom type `t` and parses them into structured data. Used to process and validate internal data formats during parsing workflows.",
      "description_length": 218,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ansiparse.Concrete",
      "description": "Converts raw text into structured item lists and vice versa using parsing combinators, handling custom type `t` lists as intermediate representations. Supports extraction, validation, and transformation of internal data formats during parsing workflows. Examples include parsing delimited text into a list of tokens or reconstructing text from a list of formatted elements. Operations focus on bidirectional conversion and data integrity checks.",
      "description_length": 445,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ansiparse.Abstract",
      "description": "Translates lists of concrete items into styled text trees, applying nested styles until a Reset is encountered, then starting new branches from the root. Works with custom style records and weighted text elements. Used to generate structured output from raw input, such as converting terminal commands into styled documentation.",
      "description_length": 328,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ansiparse.Html",
      "description": "Generates HTML elements from style trees using a string-based identifier. It converts abstract tree structures into HTML elements compatible with Tyxml. This is used to render styled content in web interfaces.",
      "description_length": 209,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ansi-parse",
      "description": "Parses terminal output containing ANSI escape codes and converts it into structured HTML elements with styling. Processes strings with escape sequences and generates corresponding HTML tags for colors, bolding, and other terminal effects. Used to display terminal sessions or logs in web interfaces with accurate formatting.",
      "description_length": 324,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ansiparse",
      "description": "parses ANSI escape sequences by converting raw text into structured item lists, then applying styles to generate styled text trees, and finally rendering these as HTML elements. It works with custom types for structured data, style records for nested formatting, and string identifiers for HTML output. Operations include bidirectional text conversion, style application, and HTML generation. For example, it can transform terminal output into styled documentation or render colored logs in a web interface.",
      "description_length": 507,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 507,
    "min_description_length": 209,
    "avg_description_length": 338.5,
    "embedding_file_size_mb": 0.02221393585205078
  }
}