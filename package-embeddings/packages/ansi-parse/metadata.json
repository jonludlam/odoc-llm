{
  "package": "ansi-parse",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:14.063871",
  "modules": [
    {
      "module_path": "Ansiparse.Concrete.Private",
      "library": "ansi-parse",
      "description": "This module defines parsers for converting raw ANSI escape sequences into structured HTML representations. It operates on `Ansiparse.Concrete.t` values, using Angstrom to parse sequences into lists of concrete elements. It is used internally to implement the core parsing logic for ANSI-to-HTML conversion.",
      "description_length": 306,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ansiparse.Abstract",
      "library": "ansi-parse",
      "description": "Translates lists of concrete ANSI items into nested abstract syntax trees representing styled text. Uses a tree structure with styled nodes and string leaves, tracking formatting state across nested levels. Useful for converting raw ANSI sequences into hierarchical HTML elements with consistent styling.",
      "description_length": 304,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ansiparse.Html",
      "library": "ansi-parse",
      "description": "Converts ANSI-styled abstract syntax trees into HTML `<pre>` elements. Works with `Ansiparse.Abstract.t` trees containing styled text nodes. Useful for rendering terminal output with colors and formatting preserved in web interfaces.",
      "description_length": 233,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ansiparse.Concrete",
      "library": "ansi-parse",
      "description": "This module converts raw text with ANSI escape sequences into a structured list of styled text elements, resets, and control codes, using the `t` type to represent formatted output with attributes like bold and colors. It serves as the core for parsing and transforming terminal output into structured formats, enabling further processing or rendering. Its child module implements parsers using Angstrom to convert ANSI sequences into HTML representations, operating directly on `t` values to extract and manipulate styling information. Example uses include stripping ANSI codes, transforming terminal logs into HTML, or analyzing formatted output for display in different contexts.",
      "description_length": 682,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ansiparse",
      "library": "ansi-parse",
      "description": "This module processes ANSI escape sequences by translating them into structured HTML representations, converting terminal-style formatting into styled HTML elements. It parses raw ANSI input into an abstract syntax tree that captures nested styling, then renders that tree into HTML with appropriate tags and styles. Core data types include structured text elements with attributes like colors and formatting, supporting operations such as parsing, transformation, and HTML generation. Example uses include converting terminal logs into color-preserving HTML for web display, stripping ANSI codes, or analyzing styled output for documentation or interface rendering.",
      "description_length": 666,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 682,
    "min_description_length": 233,
    "avg_description_length": 438.2,
    "embedding_file_size_mb": 0.01861095428466797
  }
}