{
  "package": "hweak",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:52.735089",
  "modules": [
    {
      "module_path": "Hweak.Make",
      "description": "Compares keys for equality and generates hash values for key-based data structures. Operates on arbitrary key types, ensuring consistent hashing and equality checks for use in hash tables or similar constructs. Supports custom equality and hashing strategies, including physical equality and safe float handling.",
      "description_length": 312,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "hweak",
      "description": "Provides functions to create, manipulate, and query weak references, including tracking and dereferencing weakly held values. Operates on OCaml's `Weak` module and associated data structures. Used to manage object lifetimes in garbage-collected environments, such as implementing caches that do not prevent collection of their elements.",
      "description_length": 336,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Hweak",
      "description": "Creates and manages a hash table with key-value storage, supporting insertion, replacement, removal, and lookup operations. Operates on a custom key type and a generic value type, providing methods to iterate, fold, and inspect the contents. Used for efficient data association in scenarios requiring dynamic key-value management, such as caching or symbol tables.",
      "description_length": 364,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 3,
    "filtered_empty_modules": 1,
    "retention_rate": 0.75
  },
  "statistics": {
    "max_description_length": 364,
    "min_description_length": 312,
    "avg_description_length": 337.3333333333333,
    "embedding_file_size_mb": 0.011321067810058594
  }
}