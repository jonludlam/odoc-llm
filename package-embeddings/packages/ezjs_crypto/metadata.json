{
  "package": "ezjs_crypto",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1,
  "creation_timestamp": "2025-08-14T22:56:41.030144",
  "modules": [
    {
      "module_path": "Ezjs_crypto",
      "library": "ezjs_crypto",
      "description": "This module provides cryptographic operations including key generation (symmetric/asymmetric), encryption/decryption, signing/verification, digest computation, key derivation, and key wrapping/unwrapping. It works with binary data represented as bigstrings, cryptographic keys, algorithm identifiers (SHA, RSA, EC, AES), and structured parameters for operations, while interfacing with JavaScript's Web Crypto API through Js_of_ocaml. Typical use cases include securing web application data via encryption, implementing digital signatures for integrity checks, and managing cryptographic key material in OCaml programs targeting JavaScript runtimes.",
      "description_length": 649,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 1,
    "filtered_empty_modules": 9,
    "retention_rate": 0.1
  },
  "statistics": {
    "max_description_length": 649,
    "min_description_length": 649,
    "avg_description_length": 649.0,
    "embedding_file_size_mb": 0.014912605285644531
  }
}