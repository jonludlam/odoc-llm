{
  "package": "range",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:47:48.038637",
  "modules": [
    {
      "module_path": "Range.Number",
      "library": "range",
      "description": "This module defines and manipulates integer ranges with specific constraints such as positivity or being greater than zero. It provides functions to create, convert, and extract integer values from range types, ensuring valid numeric boundaries. Use cases include safely handling index ranges and partitioning integer sequences for parallel processing without relying on lists.",
      "description_length": 377,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Range",
      "library": "range",
      "description": "This module provides operations to manipulate integer sequences defined by start and stop bounds, including transformations (`map`), aggregations (`fold`, `fold_right`), set-like operations (`cross`, `join`, `contain`), and splitting for distributed processing. It works directly with a range type representing sequences without materializing them as lists, enabling efficient traversal and partitioning. Specific use cases include parallelizing computations across large integer ranges and performing filtered or mapped iterations with minimal memory overhead.",
      "description_length": 561,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 561,
    "min_description_length": 377,
    "avg_description_length": 469.0,
    "embedding_file_size_mb": 0.02941131591796875
  }
}