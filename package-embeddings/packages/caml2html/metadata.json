{
  "package": "caml2html",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:29:13.995587",
  "modules": [
    {
      "module_path": "Caml2html.Annot",
      "description": "Parses an implementation file and an annotation file to extract a list of tags, each associated with a position and layer information. Identifies and returns the corresponding annotation file name based on a given implementation file. Processes files to retrieve tags, returning an option type to handle missing or invalid data.",
      "description_length": 328,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Caml2html.Plugin",
      "description": "Adds and manages event handlers identified by strings, checks for their existence, and retrieves them. Processes strings to count newlines and expand placeholders using registered handlers. Registers command names for later invocation.",
      "description_length": 235,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Caml2html.Input",
      "description": "Processes input strings, files, and channels into a list of tokens, supporting annotation tags for enhanced parsing. Operates on lexing buffers, strings, and input channels, producing a custom token type. Used to convert source code or configuration text into structured token sequences for further analysis or processing.",
      "description_length": 322,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caml2html.Output",
      "description": "This module handles text formatting and document generation through color configuration, CSS output, and style application, working with color tuples, style classes, token lists, and buffers. It enables tasks like generating styled code outputs, wrapping text in documents, and managing file-based transformations with customizable color schemes. Specific use cases include creating visually annotated code snippets and exporting formatted content to files.",
      "description_length": 457,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caml2html.Output_latex",
      "description": "This module generates LaTeX output by managing color configurations, keyword mappings, and token-based styling, while handling structured data like class definitions and parameters to format code elements. It enables document generation through file operations such as saving buffers and constructing LaTeX documents with customizable parameters. Specific use cases include creating styled code presentations and automating LaTeX document assembly from structured input.",
      "description_length": 470,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "caml2html",
      "description": "Processes OCaml source code to generate HTML with syntax highlighting, supporting pattern matching, type definitions, and function declarations. Operates on abstract syntax trees and source code strings, producing formatted output suitable for web display. Enables developers to visualize code structure and syntax in a browser-friendly format.",
      "description_length": 344,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caml2html",
      "description": "Processes source files and annotations to extract structured data, tokenizes input for analysis, manages event handlers and commands, and generates styled outputs in HTML, CSS, and LaTeX. It handles color configurations, token-based formatting, and file transformations, supporting tasks like code annotation, document generation, and text processing. Operations include tag extraction, newline counting, placeholder expansion, and styled output creation. Examples include generating colored code snippets, exporting LaTeX documents, and managing event-driven parsing workflows.",
      "description_length": 578,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 578,
    "min_description_length": 235,
    "avg_description_length": 390.57142857142856,
    "embedding_file_size_mb": 0.025850296020507812
  }
}