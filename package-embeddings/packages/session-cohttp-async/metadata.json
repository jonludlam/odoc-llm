{
  "package": "session-cohttp-async",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:20.100314",
  "modules": [
    {
      "module_path": "Session_cohttp_async.Make",
      "library": "session-cohttp-async",
      "description": "This module creates an asynchronous session manager that integrates with Cohttp for handling HTTP sessions using cookies. It provides functions to load, create, update, and clear sessions backed by a custom storage system, and generates appropriate HTTP headers for session management. Key operations include session retrieval from headers or backend, conditional creation, and header generation for cookie updates or expiration.",
      "description_length": 429,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Session_cohttp_async",
      "library": "session-cohttp-async",
      "description": "This module implements an asynchronous session manager for Cohttp that handles HTTP sessions through cookies, using a custom storage backend. It supports session creation, retrieval, update, and deletion, along with generating and parsing HTTP headers for cookie management. Operations allow checking for existing sessions, creating new ones conditionally, and setting or expiring cookies in responses. Example usage includes loading a session from an incoming request, creating a session if none exists, and sending a Set-Cookie header to update session state.",
      "description_length": 561,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 561,
    "min_description_length": 429,
    "avg_description_length": 495.0,
    "embedding_file_size_mb": 0.007694244384765625
  }
}