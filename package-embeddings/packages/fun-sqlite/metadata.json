{
  "package": "fun-sqlite",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:44:33.457389",
  "modules": [
    {
      "module_path": "Fun_sqlite.Arg",
      "library": "fun-sqlite",
      "description": "This module converts OCaml values into SQLite query arguments. It supports basic types like strings, booleans, integers, floats, and binary data, with special handling for optional values through the `opt` function. Use it to safely pass parameters to SQL queries, ensuring correct type encoding and null handling.",
      "description_length": 314,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Fun_sqlite",
      "library": "fun-sqlite",
      "description": "This module enables executing parameterized SQL queries, managing transactions, and migrating schemas with type-safe argument passing and result decoding. It works with SQLite database connections, SQL strings, encoded query arguments, and result rows, using a custom result type to handle success or error states. It supports efficient batch data insertion, nullable value handling, and schema evolution in applications requiring safe and structured database operations.",
      "description_length": 471,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 471,
    "min_description_length": 314,
    "avg_description_length": 392.5,
    "embedding_file_size_mb": 0.029376983642578125
  }
}