{
  "package": "indexmap",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:54.964683",
  "modules": [
    {
      "module_path": "IndexMap.Tuple2",
      "description": "Provides operations to retrieve and update elements in a two-dimensional indexable structure, fix one of the indices to a specific value, and swap the order of indices. Works with tuples as keys and supports read/write operations through a type-safe interface. Used to manage data layouts where access patterns require fixed or transposed indexing.",
      "description_length": 348,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "IndexMap.Tuple3",
      "description": "Provides operations to retrieve and update values in a three-dimensional indexable structure, and to create new structures with one or two indices fixed to specific values. Works with tuples of three distinct index types and associated elements and update states. Used to construct specialized views of multi-dimensional data for focused access and modification.",
      "description_length": 362,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "indexmap",
      "description": "Provides efficient lookup, insertion, and deletion operations on a sorted list of key-value pairs using binary search. Works with lists where keys are maintained in ascending order. Useful for maintaining a dynamic index of items that requires frequent access by key while preserving order.",
      "description_length": 290,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "IndexMap",
      "description": "manages multi-dimensional data access by enabling element retrieval and modification through tuple-based keys, with support for fixing indices and transposing dimensions. It handles two- and three-dimensional structures, allowing for specialized views by locking one or more indices to specific values. Operations include updating elements, swapping index order, and creating derived structures with constrained access. For example, it can transpose a 2D grid or isolate a slice from a 3D dataset for targeted manipulation.",
      "description_length": 523,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 523,
    "min_description_length": 290,
    "avg_description_length": 380.75,
    "embedding_file_size_mb": 0.014939308166503906
  }
}