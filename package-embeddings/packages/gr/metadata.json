{
  "package": "gr",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 8,
  "creation_timestamp": "2025-08-14T23:07:25.556233",
  "modules": [
    {
      "module_path": "Gr.Gks",
      "library": "gr",
      "description": "Handles low-level graphics system management with emergency shutdown and state update operations. Works with internal graphics state and display buffers. Used for abruptly terminating rendering processes and synchronizing visual output with application state changes.",
      "description_length": 267,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Lowlevel",
      "library": "gr",
      "description": "This module provides low-level graphics operations for state management, rendering, and numerical computations, including functions for drawing primitives (polylines, markers, text), configuring viewports and coordinate systems, and manipulating colors, images, and 3D surfaces. It operates on data structures such as C-style arrays, floating-point coordinates, graphical contexts, and memory-managed resources like `Bigarray.Genarray`, with manual memory handling and direct C interface patterns. Specific use cases include scientific visualization, interactive plotting, image manipulation, and rendering complex scenes with layered graphics, transparency, and mathematical text annotations.",
      "description_length": 693,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gr.Workstation",
      "library": "gr",
      "description": "This module manages graphical workstations with operations to open, close, activate, and deactivate workstation instances. It supports rendering to various output types such as image formats (PNG, JPEG, GIF), vector formats (SVG, PDF), windowing systems (X11, Windows, Gtk, Qt), and plotting libraries (OpenGL, Quartz). Functions include setting drawing regions, clearing and updating the display, and copying or redrawing graphical segments.",
      "description_length": 442,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.State",
      "library": "gr",
      "description": "Tracks and manages global state changes, allowing state to be saved, restored, or executed within a sandboxed context. Uses imperative variables or mutable structures to capture snapshots of state. Useful for testing stateful operations or implementing undo/redo functionality in interactive systems.",
      "description_length": 300,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Graphics",
      "library": "gr",
      "description": "This module handles low-level graphics output by opening and closing graphic files, drawing content, and importing images. It works with a `t` type representing a graphics context and uses integers to reference imported images. Concrete operations include starting and ending a graphics session, drawing to a file, and embedding external images by filename.",
      "description_length": 357,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Print",
      "library": "gr",
      "description": "This module manages print device activation and configuration, supporting operations to open a device with specified layout attributes such as color mode, paper format, and orientation. It works with strings for file paths and polymorphic variants to define print settings. Concrete use cases include setting up printing with specific paper sizes and orientations, such as printing a document in landscape A4 or in color on Letter-sized paper.",
      "description_length": 443,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Selection",
      "library": "gr",
      "description": "This module handles selection operations in a graphical interface, providing functions to initiate, finalize, and adjust selections. It works with integer indices and floating-point coordinates to represent positions and dimensions. Concrete use cases include dragging to select regions, resizing selections interactively, and managing selection state in a canvas editor.",
      "description_length": 371,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr",
      "library": "gr",
      "description": "This library specializes in low-level 2D/3D graphics rendering and scientific visualization, offering precise control over geometric primitives (polylines, markers, text, surfaces), coordinate transformations, and visual attributes (color, transparency, alignment). It operates on numerical data arrays (`Bigarray.Genarray`), coordinate systems (window/viewport, Z-space), and mutable graphics state objects, with manual memory management patterns for performance-critical applications. Key use cases include interactive plotting with LaTeX-style annotations, surface/contour visualization for numerical data, and device-agnostic rendering workflows with support for interactive selection, grid layout customization, and print-ready output configurations.",
      "description_length": 755,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 755,
    "min_description_length": 267,
    "avg_description_length": 453.5,
    "embedding_file_size_mb": 0.1163482666015625
  }
}