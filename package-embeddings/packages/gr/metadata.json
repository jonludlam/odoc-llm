{
  "package": "gr",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 9,
  "creation_timestamp": "2025-06-18T16:31:18.067731",
  "modules": [
    {
      "module_path": "Gr.Lowlevel",
      "description": "This module provides low-level graphics rendering and configuration, handling numerical arrays, C pointers, and context identifiers to manage 2D/3D plotting, coordinate transformations, and visual properties like colors and fonts. It enables precise control over operations such as drawing axes, rendering images, and generating geometric structures through direct C interface interactions. Specific use cases include efficient data manipulation for mathematical text rendering, mesh generation, and custom visualization workflows requiring direct access to graphics contexts.",
      "description_length": 576,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Workstation",
      "description": "Provides functions to manage graphical workstations, including opening, closing, activating, and deactivating them, as well as setting viewport and window coordinates for rendering. Operates on identifiers and workstation types to control display output and coordinate transformations. Used to configure and manipulate graphical output for applications requiring precise control over rendering areas and device-specific settings.",
      "description_length": 429,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gr.Gks",
      "description": "Provides functions to trigger an immediate shutdown and to apply pending graphical updates. Operates on internal state managed by the graphics system. Used to ensure timely termination of applications and to refresh the display during runtime.",
      "description_length": 243,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.State",
      "description": "Saves the current state of the program's environment and persistent data. Restores the previously saved state, reverting all changes made after the save. Executes a function in a isolated environment, ensuring any modifications do not affect the global state.",
      "description_length": 259,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Graphics",
      "description": "Opens a file for graphics output, writing all subsequent graphics data into an XML file until closed. Works with a custom type `t` representing graphics contexts and returns integer status codes for operations. Imports previously saved graphics data from a file and renders it.",
      "description_length": 277,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Print",
      "description": "Opens and configures a print device with specified output format, mode, and orientation, supporting various file types including PDF, PNG, and video formats. Accepts detailed paper size and layout parameters for precise control over the printed output. Closes the print device after operations are complete.",
      "description_length": 307,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr.Selection",
      "description": "Provides operations to define selection boundaries with start and end points, adjust position and size dynamically, and modify dimensions based on specific resize parameters. Works with integer and floating-point values to represent coordinates and dimensions. Used to track and update user selections in graphical interfaces or interactive applications.",
      "description_length": 354,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "gr",
      "description": "Provides functions for creating and manipulating graphical plots, including line charts, scatter plots, and histograms. Works with arrays of numerical data and configuration parameters for styling and layout. Used to generate visualizations directly from OCaml code for data analysis and scientific reporting.",
      "description_length": 309,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gr",
      "description": "Manages graphics rendering, workstation control, and output management through low-level operations, state manipulation, and file-based persistence. Supports 2D/3D plotting, coordinate systems, and visual elements like lines, shapes, and text with precise styling and positioning. Enables real-time updates, device configuration, and interactive selection handling, allowing for custom visualizations, print outputs, and dynamic user interfaces. Examples include drawing complex shapes with specific patterns, generating logarithmic plots, and saving graphical sessions for later playback.",
      "description_length": 589,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 589,
    "min_description_length": 243,
    "avg_description_length": 371.44444444444446,
    "embedding_file_size_mb": 0.03314399719238281
  }
}