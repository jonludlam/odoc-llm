{
  "package": "prbnmcn-gnuplot",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 14,
  "creation_timestamp": "2025-06-18T16:32:56.277550",
  "modules": [
    {
      "module_path": "Plot.Color",
      "description": "Provides functions to create and retrieve standard color values, including RGB components and predefined colors like red, blue, and green. Works with the abstract type `t` to represent color values. Used to define color literals in graphical applications or when generating color-based visual outputs.",
      "description_length": 301,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Pointtype",
      "description": "Provides geometric operations for vector-like structures, including dot product, squaring, and shape definitions such as box, circle, and disk. Works with the `t` type, representing points or vectors in 2D space. Used for mathematical computations in graphics and physics simulations.",
      "description_length": 284,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Fill",
      "description": "Provides functions to configure fill styles for shapes, including setting solid fills with density and transparency, pattern fills with code and transparency, and color. Works with a custom type `t` representing fill configurations. Used to define visual properties for plotting elements in Gnuplot.",
      "description_length": 299,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Style",
      "description": "Sets the plotting style to points, circles, or color, allowing customization of point type, size, circle fill, and color. Works with types such as Pointtype.t, Fill.t, and Color.t to define visual properties. Used to configure individual data points or shapes in a plot with specific visual attributes.",
      "description_length": 302,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Tics",
      "description": "Provides functions to configure tic mark settings, including border, mirror, outwards, rotation, and position parameters. Operates on a structured type representing tic configuration options. Used to control axis tic placement and appearance in gnuplot-style plotting.",
      "description_length": 268,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Range",
      "description": "Provides functions to create and retrieve default range values, with support for specifying minimum and maximum float boundaries. Operates on a custom type `t` representing a range. Used to define configurable value limits in numerical applications.",
      "description_length": 249,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Data",
      "description": "Imports data from sequences, arrays, and lists into a structured dataset format. Operates on heterogeneous data dimensions represented as 'dim t. Used to convert raw input sources into a unified data handling structure for processing.",
      "description_length": 234,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Plot.Scatter",
      "description": "Generates 2D and 3D scatter plots from structured data points, supporting custom styling and legend labels. It handles 2D and 3D coordinate data, with 2D optionally including vertical error bars defined as pairs of values. Used to visualize datasets with explicit error margins or multi-dimensional relationships.",
      "description_length": 313,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Line",
      "description": "Creates 2D and 3D line plots with customizable styles, legends, and point markers. Accepts 2D and 3D point data, and supports error bars for 2D plots by specifying vertical ranges. Generates plot specifications for visualizing sequences of values or coordinates with optional annotations.",
      "description_length": 288,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Histogram",
      "description": "Creates an histogram from a dataset, allowing customization of color, number of bins, and bin width. Accepts a `Data.t` type as input and generates a visual specification. Used to visualize distributions of numerical data with controlled granularity and styling.",
      "description_length": 262,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Bar",
      "description": "Provides operations to generate labeled column charts from tuples of strings and floats, supporting customization of fill style, column width, and legend text. Works with Data.t, Fill.t, and float types to define chart elements. Used to visualize categorical data with proportional bar heights and optional legends.",
      "description_length": 315,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot.Circle",
      "description": "Plots 2D and 3D circles using coordinate and radius data, with options to customize legends and fill styles. It processes lists of triples (x, y, r) for 2D and quadruples (x, y, z, r) for 3D. Used to visualize circular elements in scatter plots and 3D surface representations.",
      "description_length": 276,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "prbnmcn-gnuplot",
      "description": "Generates self-contained Gnuplot scripts with customizable plots, axes, and data ranges. It handles numeric data and plot configurations, enabling direct output to files or interactive backends. Users can define graph layouts and data visualizations through a structured, declarative interface.",
      "description_length": 294,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Plot",
      "description": "Provides tools for creating and customizing visual plots, including color manipulation, geometric operations, fill styles, and tic configurations. Supports 2D and 3D scatter, line, histogram, and circle plots with customizable styling, error bars, and legends. Operates on types such as color, vector, fill, range, and data structures to define visual elements and coordinate systems. Enables precise control over plot appearance, from defining individual points to generating complex multi-layered visualizations.",
      "description_length": 514,
      "index": 13,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 14,
    "meaningful_modules": 14,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 514,
    "min_description_length": 234,
    "avg_description_length": 299.92857142857144,
    "embedding_file_size_mb": 0.05130577087402344
  }
}