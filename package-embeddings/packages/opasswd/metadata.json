{
  "package": "opasswd",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:53:05.351056",
  "modules": [
    {
      "module_path": "OPasswd.Shadow.Mem",
      "library": "opasswd",
      "description": "This module provides functions to convert between `OPasswd.Shadow.t` and an in-memory representation (`mem`). It facilitates working with shadow password entries by enabling serialization and deserialization to a format suitable for storage or transmission. Use cases include caching shadow password data in memory or preparing it for writing to a file or network stream.",
      "description_length": 371,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OPasswd.Common",
      "library": "opasswd",
      "description": "This module handles password retrieval, storage, and unshadowing operations. It works with strings to represent account identifiers and passwords. Use it to securely manage password entries in a system, such as storing user credentials or retrieving them for authentication purposes.",
      "description_length": 283,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OPasswd.Passwd",
      "library": "opasswd",
      "description": "This module provides functions to read and manipulate user account information from the system password database. It works with a structured type representing user entries, including fields like username, UID, GID, and shell, and supports operations such as lookup by name or UID, iterating over entries, and writing updates to disk. Concrete use cases include user authentication, account management, and generating reports on system users.",
      "description_length": 441,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "OPasswd.Shadow",
      "library": "opasswd",
      "description": "This module manages shadow password entries using a structured type with fields for account aging and password expiration. It provides direct access to the shadow password database through functions like `getspnam`, `setspent`, and `putspent`, and supports full database operations such as loading, updating, and writing to disk. Use cases include enforcing password policies, checking account status, and modifying user password settings programmatically.",
      "description_length": 456,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OPasswd",
      "library": "opasswd",
      "description": "This module provides password handling functionality, including secure storage, retrieval, and unshadowing operations using string-based identifiers. It supports structured manipulation of user account data such as usernames, UIDs, and password expiration settings. Use it to implement user authentication, enforce password policies, and manage system account information directly.",
      "description_length": 381,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 456,
    "min_description_length": 283,
    "avg_description_length": 386.4,
    "embedding_file_size_mb": 0.07281017303466797
  }
}