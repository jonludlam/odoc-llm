{
  "package": "prbnmcn-dagger-stats",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:35.653416",
  "modules": [
    {
      "module_path": "Stats_dist.Gen.Rational",
      "library": "prbnmcn-dagger-stats",
      "description": "Creates a generator for categorical distributions from an array of values and their associated rational number probabilities. It works with any type `'a` paired with a `Q.t` probability, where `Q.t` represents rational numbers. Use this to sample values according to custom, weighted discrete distributions, such as simulating biased dice rolls or selecting items with specific frequencies.",
      "description_length": 390,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Stats_dist.Gen.Infix",
      "library": "prbnmcn-dagger-stats",
      "description": "This module provides monadic bind and map operations for composing probabilistic programs using the `Stats_dist.Gen.t` type. It enables chaining distributions and transforming values within a probabilistic context using familiar OCaml infix syntax. Concrete use cases include building complex generative models by sequencing random variables and applying deterministic transformations.",
      "description_length": 385,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stats_dist.Gen",
      "library": "prbnmcn-dagger-stats",
      "description": "This library generates random values across statistical distributions like gaussian, poisson, and categorical, and supports composing these using monadic operations such as `bind` and `map`. It handles data structures including tuples, sequences, and exact rational numbers within a `Gen.t` context, enabling mixture distributions, deterministic shuffling, and synthetic data generation. The categorical module samples custom-weighted discrete distributions, useful for biased dice rolls or frequency-based selection, while the monadic module allows chaining and transforming probabilistic computations with infix syntax. Together, they support building complex generative models by combining distributions and applying transformations in a probabilistic workflow.",
      "description_length": 764,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Stats_dist",
      "library": "prbnmcn-dagger-stats",
      "description": "This module defines probability distributions and sampling operations over floats, integers, booleans, and arrays, supporting statistical distributions such as gaussian, exponential, geometric, and categorical. It enables concrete tasks like generating synthetic datasets, simulating Brownian motion, and defining custom probabilistic models with mixtures and sampling without replacement. Submodules extend this with monadic operations for composing distributions using `bind` and `map`, handling tuples, sequences, and rational numbers, while the categorical module supports frequency-based sampling for use cases like biased dice rolls. Together, the module and its submodules provide a flexible framework for stochastic simulation and probabilistic modeling.",
      "description_length": 762,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 4,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 764,
    "min_description_length": 385,
    "avg_description_length": 575.25,
    "embedding_file_size_mb": 0.014948844909667969
  }
}