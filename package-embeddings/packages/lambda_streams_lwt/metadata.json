{
  "package": "lambda_streams_lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:53.845000",
  "modules": [
    {
      "module_path": "Lambda_streams_lwt.Async",
      "library": "lambda_streams_lwt",
      "description": "This module converts between lambda streams and Lwt values or streams. It provides functions to extract the first or last value from a stream as a promise, collect all values into a list promise, and convert bidirectionally between lambda streams and Lwt streams. Concrete use cases include integrating event streams with Lwt-based asynchronous workflows and processing finite sequences of asynchronous values.",
      "description_length": 410,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lambda_streams_lwt",
      "library": "lambda_streams_lwt",
      "description": "This module bridges lambda streams with Lwt by offering conversions and utilities for asynchronous stream handling. It supports extracting first or last values from streams as promises, collecting all values into a list promise, and bidirectional conversion between lambda and Lwt streams. These capabilities enable integration of event-driven sequences into Lwt-based workflows, such as processing asynchronous HTTP events or handling finite streams of database results. Example uses include awaiting the first event in a stream or converting a lambda stream of log entries into an Lwt stream for further async processing.",
      "description_length": 623,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 623,
    "min_description_length": 410,
    "avg_description_length": 516.5,
    "embedding_file_size_mb": 0.0076885223388671875
  }
}