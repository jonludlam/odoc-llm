{
  "package": "cmon",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-06-18T16:25:46.603186",
  "modules": [
    {
      "module_path": "cmon",
      "description": "Produces human-readable representations of OCaml values with explicit sharing via let-bindings, ensuring output is valid OCaml code. Works with tuples, records, and variant types, capturing shared subexpressions to avoid redundancy. Useful for debugging symbolic computation tools by generating copy-pastable, structured output.",
      "description_length": 328,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cmon",
      "description": "The module provides functions for generating human-readable, structured representations of OCaml values, focusing on consistent formatting of primitives, tuples, records, lists, arrays, and custom data constructors while managing sharing explicitly. It leverages PPrint and Format modules to control output syntax, such as quotes and separators, enabling precise control over serialization and debugging scenarios. Use cases include generating debug logs, pretty-printing complex data structures, or ensuring reproducible output in tools requiring explicit sharing annotations.",
      "description_length": 577,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 577,
    "min_description_length": 328,
    "avg_description_length": 452.5,
    "embedding_file_size_mb": 0.007695198059082031
  }
}