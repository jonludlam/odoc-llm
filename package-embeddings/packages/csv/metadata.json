{
  "package": "csv",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:38.472709",
  "modules": [
    {
      "module_path": "Csv.Rows",
      "library": "csv",
      "description": "This module processes CSV data row by row using a declared header for field access. It supports reading rows as structured values, mapping field names to their corresponding values, and allows dynamic header updates during parsing. Use cases include parsing CSV files with named columns, transforming row data into typed records, and processing large CSV streams without loading the entire file into memory.",
      "description_length": 407,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Csv.Row",
      "library": "csv",
      "description": "This module handles rows of CSV data that include headers, providing direct access to columns by index or header name. It supports converting rows to lists or associative lists for easier manipulation and ensures consistent handling of missing or duplicate headers. Use cases include parsing structured CSV files, mapping header-based data to records, and transforming rows while preserving header associations.",
      "description_length": 411,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Csv",
      "library": "csv",
      "description": "This module reads and writes CSV data with support for structured row processing and header management. It provides types for representing CSV rows as indexed or named fields, along with operations to parse, transform, and serialize data while preserving header associations. The module enables efficient processing of large CSV streams, dynamic header updates, and mapping rows to typed records using either positional or named access. Examples include parsing a CSV file into a sequence of structured rows, converting rows to associative lists, and transforming data while maintaining header alignment.",
      "description_length": 604,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 3,
    "filtered_empty_modules": 2,
    "retention_rate": 0.6
  },
  "statistics": {
    "max_description_length": 604,
    "min_description_length": 407,
    "avg_description_length": 474.0,
    "embedding_file_size_mb": 0.011317253112792969
  }
}