{
  "package": "jsonschema2atd",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:48.171204",
  "modules": [
    {
      "module_path": "Jsonschema2atd_runtime.Adapter.One_of",
      "library": "jsonschema2atd.runtime",
      "description": "Handles conversion between JSON schema one-of representations and ATD-compatible types. Normalizes input data to a consistent format and restores complex structures like lists or strings during decoding. Useful when parsing JSON schemas that use one-of constructs into ATD-generated types with variant fields.",
      "description_length": 309,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Jsonschema2atd_runtime.Adapter",
      "library": "jsonschema2atd.runtime",
      "description": "This module bridges JSON schema one-of constructs with ATD-compatible variant types, enabling seamless encoding and decoding of complex JSON data. It normalizes input into a uniform structure and reconstructs nested types like lists and strings during decoding. Key operations include converting JSON objects to variant types and preserving structural integrity through round-trip transformations. For example, it can decode a JSON schema representing a polymorphic field into a corresponding OCaml variant with multiple constructors.",
      "description_length": 534,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Jsonschema2atd_runtime",
      "library": "jsonschema2atd.runtime",
      "description": "This module translates JSON schema one-of constructs into ATD-compatible variant types, supporting the encoding and decoding of complex, nested JSON data. It normalizes input structures and reconstructs types like lists and strings during decoding. Operations include mapping JSON objects to variant types and maintaining structural fidelity through round-trip conversions. For instance, it can transform a polymorphic JSON schema field into an OCaml variant with multiple constructors.",
      "description_length": 486,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 534,
    "min_description_length": 309,
    "avg_description_length": 443.0,
    "embedding_file_size_mb": 0.011313438415527344
  }
}