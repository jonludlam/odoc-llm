{
  "package": "pbrt_services",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:53:22.597632",
  "modules": [
    {
      "module_path": "Pbrt_services.Server",
      "library": "pbrt_services",
      "description": "This module defines and constructs RPC handlers for implementing Protobuf services, supporting both JSON and Protobuf encoding/decoding. It works with request and response types parameterized by their modes (e.g., unary, streaming), and uses `Yojson.Basic.t` and `Pbrt.Decoder.t`/`Pbrt.Encoder.t` for serialization. Concrete use cases include defining service endpoints that handle incoming requests and produce responses in a server application.",
      "description_length": 446,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pbrt_services.Client",
      "library": "pbrt_services",
      "description": "This module constructs RPC client stubs for Protobuf services, supporting unary and streaming request/response modes. It works with request and response types encoded as Protocol Buffers or JSON, using encoders and decoders provided at runtime. Concrete use cases include defining typed RPC endpoints for clients that communicate with remote Protobuf-based services over various transports.",
      "description_length": 390,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pbrt_services.Value_mode",
      "library": "pbrt_services",
      "description": "Handles values that may be either a single result or a sequence of results. Defines types for unary (single) and stream (multiple) value modes, primarily used in RPC method responses to distinguish between one-time and streaming outputs. Supports operations like value extraction and iteration depending on the mode.",
      "description_length": 316,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pbrt_services",
      "library": "pbrt_services",
      "description": "Handles RPC method responses with unary or streaming semantics, using `Value_mode` to distinguish between single and sequence results. Provides `Client` for building typed RPC stubs that communicate with Protobuf services over various transports, supporting both unary and streaming interactions. Includes `Server` for defining service endpoints that process incoming requests and generate responses, using Protobuf or JSON encoding.",
      "description_length": 433,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 446,
    "min_description_length": 316,
    "avg_description_length": 396.25,
    "embedding_file_size_mb": 0.058373451232910156
  }
}