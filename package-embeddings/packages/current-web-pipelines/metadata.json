{
  "package": "current-web-pipelines",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:14:58.591344",
  "modules": [
    {
      "module_path": "Current_web_pipelines.Web.Make",
      "library": "current-web-pipelines",
      "description": "This module implements a web interface for managing and visualizing pipeline states, providing functions to create and update pipeline instances, set active sources, and generate URLs for pipeline pages and stages. It works with pipeline state data structures involving outputs, nodes, stages, and sources, all parameterized over the `R` module's types. Concrete use cases include rendering pipeline views in a web UI, tracking source activity, and routing HTTP requests to pipeline resources.",
      "description_length": 493,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Current_web_pipelines.Run_time",
      "library": "current-web-pipelines",
      "description": "This module tracks and visualizes the runtime of jobs and stages in a pipeline. It provides functions to construct and merge runtime data, render it as HTML, and map it over job trees. It works with durations, timestamps, and tree structures representing pipeline stages and leaves.",
      "description_length": 282,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Current_web_pipelines.Task",
      "library": "current-web-pipelines",
      "description": "This module composes and manipulates tasks in a pipeline, handling separate current and state values. It supports operations like mapping over task outputs, sequencing and parallelizing tasks, and building job trees with metadata. Concrete use cases include orchestrating CI/CD workflows, tracking build outputs with metadata, and managing dependencies between pipeline stages.",
      "description_length": 377,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web_pipelines.State",
      "library": "current-web-pipelines",
      "description": "This module manages hierarchical job states with typed metadata, supporting construction of job trees, stages, and pipelines. It provides functions to aggregate status across job trees, stages, and pipelines, and to transform or serialize metadata at each level. Use cases include rendering complex CI/CD workflows in a web interface, tracking build statuses across nested stages, and persisting pipeline state to storage.",
      "description_length": 422,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web_pipelines.Web",
      "library": "current-web-pipelines",
      "description": "Implements a web interface for managing and visualizing pipeline states with functions to create, update, and track pipeline instances, sources, and stages. Works with pipeline state data structures parameterized over a `Renderer` module, including outputs, nodes, and stages. Used to render pipeline views in a web UI, generate URLs for pipeline resources, and handle HTTP routing for pipeline management.",
      "description_length": 406,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web_pipelines.Jobs",
      "library": "current-web-pipelines",
      "description": "This module processes job trees and stage lists to extract job identifiers and determine job statuses. It provides functions to collect job IDs from a job tree, check if a job result is a failure, and identify rebuildable jobs from a list of stages. These operations are used to analyze and manage job execution states in a pipeline.",
      "description_length": 333,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web_pipelines",
      "library": "current-web-pipelines",
      "description": "This module implements web interfaces for managing pipeline states, providing functions to create, update, and visualize pipeline instances, sources, and stages. It works with pipeline state structures parameterized over a `Renderer` module, including outputs, nodes, and stages. Concrete use cases include rendering pipeline views in a web UI, generating URLs for pipeline resources, and handling HTTP routing for pipeline management.",
      "description_length": 435,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 493,
    "min_description_length": 282,
    "avg_description_length": 392.57142857142856,
    "embedding_file_size_mb": 0.10178089141845703
  }
}