{
  "package": "yocaml_mustache",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:30.339935",
  "modules": [
    {
      "module_path": "Yocaml_mustache.Pipeline",
      "library": "yocaml_mustache",
      "description": "Processes Mustache templates by reading files and injecting structured data. Works with `Yocaml.Path.t` paths and data types implementing `DATA_INJECTABLE`. Used to generate text output like HTML or config files from templates and OCaml values.",
      "description_length": 244,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_mustache",
      "library": "yocaml_mustache",
      "description": "This module implements a Mustache-based templating engine that transforms structured data into rendered text by substituting placeholders in templates with corresponding values. It provides functions to normalize data into injectable key-value pairs and render output such as HTML pages, configuration files, or emails. The child module processes templates from file paths and injects data from OCaml values, supporting dynamic content generation using `Yocaml.Path.t` and `DATA_INJECTABLE` types. Together, they enable template loading, data binding, and text rendering in a unified workflow.",
      "description_length": 593,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 593,
    "min_description_length": 244,
    "avg_description_length": 418.5,
    "embedding_file_size_mb": 0.007699012756347656
  }
}