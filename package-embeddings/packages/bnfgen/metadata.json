{
  "package": "bnfgen",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:20.620229",
  "modules": [
    {
      "module_path": "Bnfgen.Grammar",
      "description": "Handles reduction of symbol lists according to grammar rules, supporting debug output and custom separators. Operates on symbols, rules, and grammars structured as labeled alternatives. Used to parse and simplify input sequences by applying defined syntactic transformations.",
      "description_length": 275,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "bnfgen",
      "description": "Generates valid strings from BNF-style grammar definitions using recursive expansion and probabilistic selection. Processes abstract syntax trees built from grammar rules, including terminals, nonterminals, and production alternatives. Used to create randomized test inputs, synthetic data, or generate code snippets adhering to specific syntactic structures.",
      "description_length": 359,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bnfgen",
      "description": "Processes symbol lists through grammar-based reductions, applying labeled rule alternatives to simplify input sequences. Supports debug tracing and custom separators, working with symbols, rules, and grammars. Can transform input like \"A B C\" into \"X Y\" based on defined rules. Enables precise control over syntactic rewriting during parsing.",
      "description_length": 342,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 359,
    "min_description_length": 275,
    "avg_description_length": 325.3333333333333,
    "embedding_file_size_mb": 0.011320114135742188
  }
}