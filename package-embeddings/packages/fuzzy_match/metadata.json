{
  "package": "fuzzy_match",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:43.943127",
  "modules": [
    {
      "module_path": "Fuzzy_search.For_testing",
      "library": "fuzzy_match.search",
      "description": "Performs substring matching to locate the start and end indices of a query within a given string. Works with string inputs and returns optional index pairs indicating the match range. Useful for highlighting or extracting matched portions in text processing tasks.",
      "description_length": 264,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Fuzzy_search.Query",
      "library": "fuzzy_match.search",
      "description": "Represents a search query for fuzzy matching, storing the input string and processed metadata. Provides the `create` function to build a query object from a string, optimizing it for pattern matching operations. Used internally to support efficient fuzzy search against collections of strings.",
      "description_length": 293,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Fuzzy_search",
      "library": "fuzzy_match.search",
      "description": "This module enables fuzzy search by combining query creation with substring matching to identify and rank relevant results. It processes input strings into optimized query objects that support efficient pattern matching against target strings, returning match indices and scores. Submodules handle low-level substring detection and query construction, enabling features like interactive search, result filtering, and relevance ranking. Example uses include command suggestion menus and file path search interfaces with highlighted matches.",
      "description_length": 539,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fuzzy_match",
      "library": "fuzzy_match.match",
      "description": "Performs fuzzy matching of a pattern against a string using a customizable character equality function. Accepts a pattern and a target string, returning true if the pattern matches the string under the specified matching rules. Useful for implementing search features where partial or approximate matches are acceptable, such as auto-complete suggestions or case-insensitive file name matching.",
      "description_length": 394,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 539,
    "min_description_length": 264,
    "avg_description_length": 372.5,
    "embedding_file_size_mb": 0.014945030212402344
  }
}