{
  "package": "bap-demangle",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:49:16.343928",
  "modules": [
    {
      "module_path": "Bap_demangle.Std.Demanglers",
      "library": "bap-demangle",
      "description": "This module manages a registry of name demanglers used to decode mangled symbol names according to ABI-specific rules. It provides operations to install, register, look up, and select demanglers based on target platforms or package-qualified names. Use cases include restoring readable C++ function names during binary analysis and configuring demangling behavior for specific architectures.",
      "description_length": 391,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_demangle.Std.Demangler",
      "library": "bap-demangle",
      "description": "This module provides operations to create, register, and apply named string transformations for demangling symbol names according to specific ABIs. It works with string inputs representing mangled names and transforms them using functions like stripping leading underscores or custom decoding logic. Concrete use cases include restoring readable C++ function names from compiler-generated mangled symbols or normalizing symbol names during binary analysis.",
      "description_length": 456,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_demangle.Std",
      "library": "bap-demangle",
      "description": "This module provides functions to demangle symbol names by applying ABI-specific transformations, such as stripping underscores or decoding C++ mangled names. It operates on string inputs representing mangled symbols and uses registered demanglers to produce human-readable names. Concrete use cases include analyzing compiled binaries to recover original function names and processing symbol tables during reverse engineering tasks.",
      "description_length": 433,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bap_demangle",
      "library": "bap-demangle",
      "description": "This module handles ABI-specific name demangling, such as decoding C++ mangled names or stripping underscores, by applying registered demanglers to string inputs. It is used to recover original function names from compiled binaries and process symbol tables during reverse engineering.",
      "description_length": 285,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 456,
    "min_description_length": 285,
    "avg_description_length": 391.25,
    "embedding_file_size_mb": 0.058380126953125
  }
}