{
  "package": "caqti-eio",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T23:01:33.355615",
  "modules": [
    {
      "module_path": "Caqti_eio_unix",
      "library": "caqti-eio.unix",
      "description": "This module establishes database connections using Eio and provides functions to manage connection lifecycles. It works with `Uri.t` to locate drivers and returns first-class modules implementing `Caqti_connection_sig.S`, supporting operations like `connect`, `with_connection`, and `connect_pool`. Concrete use cases include setting up per-request database access in network servers or managing connection pools for concurrent queries.",
      "description_length": 436,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caqti_eio.Stream",
      "library": "caqti-eio",
      "description": "This module provides functions to process and transform streams of database query results using Eio for concurrency. It supports operations like folding, iterating, and converting streams to lists, while handling errors from both the stream source and user-provided callbacks. Concrete use cases include consuming paginated database query results, applying per-row transformations with error handling, and accumulating query results into collections.",
      "description_length": 450,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Caqti_eio.Pool",
      "library": "caqti-eio",
      "description": "This module manages a pool of database connections for use with Eio, providing functions to retrieve the current pool size, execute operations on a connection, and drain all connections. It works with a custom pool type that abstracts over connection resources and result types. Concrete use cases include efficiently handling concurrent PostgreSQL queries via the `pgx` driver while ensuring proper resource cleanup and limiting connection usage.",
      "description_length": 447,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Caqti_eio",
      "library": "caqti-eio",
      "description": "This module implements Eio-compatible database connection handling for the `pgx` driver, offering `connect`, `with_connection`, and `connect_pool` to establish and manage PostgreSQL connections without Unix dependencies. It works with `stdenv` records containing network and time capabilities, and returns first-class connection modules. Concrete use cases include setting up PostgreSQL-backed services in non-Unix environments, executing queries with automatic connection cleanup, and managing connection pools for concurrent database access.",
      "description_length": 543,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 543,
    "min_description_length": 436,
    "avg_description_length": 469.0,
    "embedding_file_size_mb": 0.058376312255859375
  }
}