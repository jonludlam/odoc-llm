{
  "package": "nbd-unix",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:52:27.937771",
  "modules": [
    {
      "module_path": "Nbd_unix.Server",
      "library": "nbd-unix",
      "description": "This module handles the initial handshake and export negotiation for a Network Block Device server, allowing remote clients to connect and access block devices. It works with cleartext channels and provides functions to serve block devices in read-only or read-write mode once a valid export name is selected. Concrete use cases include exposing disk images or physical devices to remote NBD clients for virtualization or distributed storage systems.",
      "description_length": 450,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nbd_unix.Client",
      "library": "nbd-unix",
      "description": "This module implements client-side operations for accessing remote block devices over the Network Block Device (NBD) protocol. It supports connecting to a remote disk, reading and writing data in sector-aligned buffers, querying device metadata, and listing available exports on a server. The module works with `Cstruct.t` buffers for data transfer, `int64` for sector offsets and sizes, and `Nbd.Channel.channel` for communication, returning structured errors for failed operations.",
      "description_length": 483,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Nbd_unix",
      "library": "nbd-unix",
      "description": "This module implements the Network Block Device protocol for Unix, providing functions to establish cleartext and TLS-secured connections, manage file descriptor-based channels, and handle block device operations. It works with `Lwt_unix.file_descr`, `Nbd.Channel.cleartext_channel`, `Ssl.context`, and `Cstruct.t` for asynchronous, sector-aligned data transfers. Concrete use cases include remotely mounting disk images, securely exposing physical storage devices over TLS, and implementing virtualization infrastructure with client-server block device access.",
      "description_length": 561,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 561,
    "min_description_length": 450,
    "avg_description_length": 498.0,
    "embedding_file_size_mb": 0.043892860412597656
  }
}