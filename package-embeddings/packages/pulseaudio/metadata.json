{
  "package": "pulseaudio",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:47:49.271539",
  "modules": [
    {
      "module_path": "Pulseaudio.Simple",
      "library": "pulseaudio",
      "description": "This module provides functions to establish a connection to a PulseAudio server, read from or write to audio streams, and manage playback state. It operates on audio data using interleaved float arrays or bigarrays, with support for specifying sample format, buffer attributes, and device selection. Concrete use cases include capturing audio input from a microphone, streaming synthesized audio to a speaker, or implementing low-latency audio processing pipelines.",
      "description_length": 465,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pulseaudio",
      "library": "pulseaudio",
      "description": "This module defines core data types like `sample_format`, `sample`, and `buffer_attr` for specifying audio parameters, and includes operations for error handling, stream direction management, and buffer configuration. It works directly with integers, custom algebraic types, and bigarrays for efficient audio data processing. Concrete use cases include setting up playback or recording streams with precise buffer settings, converting error codes to messages, and defining audio sample properties for input or output.",
      "description_length": 517,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 517,
    "min_description_length": 465,
    "avg_description_length": 491.0,
    "embedding_file_size_mb": 0.029404640197753906
  }
}