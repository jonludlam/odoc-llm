{
  "package": "pulseaudio",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:16.050821",
  "modules": [
    {
      "module_path": "Pulseaudio.Simple",
      "library": "pulseaudio",
      "description": "This module provides functions to establish and manage a direct connection to a PulseAudio server for audio streaming. It supports reading from and writing to audio streams using both standard OCaml arrays and Bigarrays, with operations for synchronization and buffer control. Concrete use cases include real-time audio playback, recording, and processing applications requiring low-latency interaction with PulseAudio.",
      "description_length": 419,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pulseaudio",
      "library": "pulseaudio",
      "description": "This module provides core functionality for configuring audio streams and handling errors when interacting with PulseAudio. It defines key data types such as sample formats, stream directions, and buffer attributes, enabling precise control over playback and recording. The module supports setting up streams with specific sample rates, managing buffer sizes for low-latency performance, and handling PulseAudio-specific errors. Additionally, it includes a submodule for establishing direct connections to a PulseAudio server, allowing real-time audio streaming with support for both OCaml arrays and Bigarrays.",
      "description_length": 611,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 611,
    "min_description_length": 419,
    "avg_description_length": 515.0,
    "embedding_file_size_mb": 0.0077037811279296875
  }
}