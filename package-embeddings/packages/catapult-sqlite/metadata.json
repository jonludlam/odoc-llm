{
  "package": "catapult-sqlite",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:56:09.713096",
  "modules": [
    {
      "module_path": "Catapult_sqlite.Backend.Make",
      "library": "catapult-sqlite",
      "description": "This module implements a SQLite backend for recording trace events with structured metadata. It provides operations to emit timed events with categories, process and thread identifiers, and optional arguments or stacks, along with lifecycle management via teardown. Concrete use cases include logging performance traces for analysis in tools like Chrome Tracing and persisting trace data for post-processing.",
      "description_length": 408,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Catapult_sqlite.Writer",
      "library": "catapult-sqlite",
      "description": "Handles writing trace events to a SQLite database file, supporting direct file path configuration or dynamic file naming via trace ID. Provides thread-safe writing of JSON-encoded events, along with manual control over statement cycles and writer closure. Designed for logging structured trace data during program execution, enabling efficient post-processing and analysis.",
      "description_length": 373,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Catapult_sqlite.Ev_to_json",
      "library": "catapult-sqlite",
      "description": "Converts trace events into JSON format using a buffer for efficient string manipulation. Works with `P.Ser.Event.t` types, which represent structured trace data. Useful for exporting trace events to JSON for logging, analysis, or external processing.",
      "description_length": 250,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Catapult_sqlite.Backend",
      "library": "catapult-sqlite",
      "description": "This module implements a SQLite backend for recording trace events with structured metadata. It provides operations to emit timed events with categories, process and thread identifiers, and optional arguments or stacks, along with lifecycle management via teardown. Concrete use cases include logging performance traces for analysis in tools like Chrome Tracing and persisting trace data for post-processing.",
      "description_length": 408,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Catapult_sqlite",
      "library": "catapult-sqlite",
      "description": "This module writes trace events directly to a SQLite database, supporting configurable output paths via environment variables or programmatic settings. It handles structured trace data with operations to control logging state, trace ID assignment, and crash safety levels. Concrete use cases include capturing performance traces for tools like Chrome Tracing and persisting structured event data for later analysis.",
      "description_length": 415,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 415,
    "min_description_length": 250,
    "avg_description_length": 370.8,
    "embedding_file_size_mb": 0.07288551330566406
  }
}