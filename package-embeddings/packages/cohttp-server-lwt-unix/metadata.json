{
  "package": "cohttp-server-lwt-unix",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:56:14.406459",
  "modules": [
    {
      "module_path": "Cohttp_server_lwt_unix.Body.Encoding",
      "library": "cohttp-server-lwt-unix",
      "description": "This module defines encodings for HTTP message bodies, specifically supporting fixed-length and chunked transfer encodings. It works with 64-bit integers for fixed lengths and provides a singleton value for chunked encoding. Concrete use cases include specifying the transfer encoding when constructing HTTP responses in the Lwt-based server.",
      "description_length": 342,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_server_lwt_unix.Body.Substring",
      "library": "cohttp-server-lwt-unix",
      "description": "This module provides functions for manipulating and accessing HTTP message bodies using substring-based data structures. It works directly with substrings represented by a base string, position, and length, enabling efficient slicing and traversal without copying data. Concrete use cases include parsing and streaming large HTTP payloads with minimal memory overhead.",
      "description_length": 368,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_server_lwt_unix.Body",
      "library": "cohttp-server-lwt-unix",
      "description": "This module constructs HTTP response bodies for the Lwt-based server using either static strings or streaming data. It supports fixed-length and chunked transfer encodings through the `Encoding` module and enables efficient handling of large payloads via the `Substring` module. Concrete use cases include sending static content with `string` or streaming dynamic content with `stream` in high-performance HTTP services.",
      "description_length": 420,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cohttp_server_lwt_unix.Context",
      "library": "cohttp-server-lwt-unix",
      "description": "This module provides direct access to HTTP request and response handling in a high-performance Lwt-based server. It supports operations to retrieve the HTTP request, read or discard the request body, and send a response with a custom body. It is used for building lightweight, custom HTTP servers where fine-grained control over the request-response cycle is required.",
      "description_length": 368,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cohttp_server_lwt_unix",
      "library": "cohttp-server-lwt-unix",
      "description": "This module implements a high-performance HTTP server using Lwt for asynchronous I/O, offering direct control over request handling and response generation. It works with Lwt-based input/output channels and provides functions to create and manage HTTP servers that process requests through custom logic. Concrete use cases include building lightweight, scalable HTTP services where low-level control over the network layer and efficient handling of large or streaming responses is required.",
      "description_length": 490,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 490,
    "min_description_length": 342,
    "avg_description_length": 397.6,
    "embedding_file_size_mb": 0.07287216186523438
  }
}