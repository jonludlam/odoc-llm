{
  "package": "ojs_base_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:56.916461",
  "modules": [
    {
      "module_path": "Ojs_base_ppx.Ppx_ojs.SMap",
      "library": "ojs_base_ppx",
      "description": "The module provides operations for manipulating string-keyed maps with arbitrary value types, including insertion, deletion, lookup, merging, and traversal. It supports transformations like mapping, filtering, and folding, as well as conversions between maps, lists, and sequences of key-value pairs. This is particularly useful for handling structured data like HTTP headers, JSON objects, or configuration settings where string keys map to single values or lists of values.",
      "description_length": 475,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ojs_base_ppx.Ppx_ojs",
      "library": "ojs_base_ppx",
      "description": "This module enables the construction and transformation of OCaml AST nodes that model HTML form elements and attributes, bridging string-based HTML representations with typed OCaml values for code generation targeting JavaScript. It directly supports operations on AST structures, XML trees, and attribute maps, allowing tasks like generating form templates with typed inputs or converting XML attributes into OCaml expressions. The included submodule enhances handling of string-keyed data structures, enabling efficient manipulation of mappings between keys and arbitrary values, such as HTTP headers or JSON objects. Together, they facilitate compile-time validation, structured data transformation, and generation of location-aware OCaml code from HTML-like structures.",
      "description_length": 773,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ojs_base_ppx",
      "library": "ojs_base_ppx",
      "description": "This module provides tools for constructing and transforming OCaml AST nodes that represent HTML form elements and attributes, enabling typed code generation for JavaScript from HTML-like structures. It includes operations for manipulating ASTs, XML trees, and attribute maps, supporting tasks like generating form templates with typed inputs or converting XML attributes into OCaml expressions. A submodule enhances handling of string-keyed data structures, allowing efficient manipulation of mappings such as HTTP headers or JSON objects. Example uses include compile-time validation of form structures and generating location-aware OCaml code from XML or HTML input.",
      "description_length": 669,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 773,
    "min_description_length": 475,
    "avg_description_length": 639.0,
    "embedding_file_size_mb": 0.011300086975097656
  }
}