{
  "package": "phantom-algebra",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T23:26:11.446000",
  "modules": [
    {
      "module_path": "Phantom_algebra.Core.Rank",
      "library": "phantom-algebra",
      "description": "This module defines rank types for algebraic structures, including scalar, vector, and matrix ranks. It provides a conversion function to map rank types to integer values. Concrete use cases include enforcing dimensional correctness in tensor operations and distinguishing between scalar, vector, and matrix computations.",
      "description_length": 321,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Phantom_algebra.Math",
      "library": "phantom-algebra",
      "description": "This module implements mathematical operations on tensor values, supporting element-wise computation of trigonometric, hyperbolic, exponential, logarithmic, and comparison functions. It operates on typed tensors with fixed dimensions and ranks, represented by the Phantom_algebra.Core.t type. Specific use cases include scientific computations, neural network activations, and numerical transformations requiring precise tensor manipulation.",
      "description_length": 441,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Phantom_algebra.Interface",
      "library": "phantom-algebra",
      "description": "This module defines a collection of module types that specify type-level algebraic operations and indexing behaviors for numerical data structures. It works primarily with type-level representations of dimensions, ranks, and indices, alongside runtime values like floats. Concrete use cases include building and manipulating multi-dimensional arrays with precise type-level control, enabling safe indexing, slicing, and transformations across arbitrary dimensions.",
      "description_length": 464,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Phantom_algebra.Flat_array",
      "library": "phantom-algebra",
      "description": "This module implements a flat, heap-allocated array structure for storing floating-point numbers with constant-time access and mutation. It provides operations to create arrays of a specified length, retrieve and update elements by index, and query the length of the array. This structure is ideal for numerical computations requiring efficient memory layout and direct element manipulation, such as vector math or signal processing.",
      "description_length": 433,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Phantom_algebra.Type_functions",
      "library": "phantom-algebra",
      "description": "This module defines type-level functions for manipulating small integer types in a way that enforces correctness at compile time. It operates on phantom types representing integers, enabling operations like type-level addition, subtraction, and comparisons. Concrete use cases include building type-safe arithmetic operations and ensuring dimensional consistency in embedded domain-specific languages.",
      "description_length": 401,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Phantom_algebra",
      "library": "phantom-algebra",
      "description": "This module provides precise numerical abstractions for tensor and array manipulation with strong type-level guarantees. It includes flat arrays for efficient floating-point storage, algebraic type functions for compile-time arithmetic, and typed tensor math for scientific computation. Concrete applications include safe multi-dimensional indexing, neural network layer implementations, and dimensional analysis in numerical code.",
      "description_length": 431,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 464,
    "min_description_length": 321,
    "avg_description_length": 415.1666666666667,
    "embedding_file_size_mb": 0.087432861328125
  }
}