{
  "package": "podge",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-07-15T23:06:04.463493",
  "modules": [
    {
      "module_path": "Podge.Html5",
      "library": "podge",
      "description": "This module provides functions to convert HTML elements to strings and display them directly. It operates on typed HTML elements from the Html5.M.elt type. Use it to render or debug HTML structures in applications like web servers or static site generators.",
      "description_length": 257,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.Cohttp",
      "library": "podge",
      "description": "Handles HTTP responses by checking success status and displaying headers. Works with Cohttp.Response.t and Cohttp.Header.t types. Use to verify HTTP request outcomes and inspect header details directly.",
      "description_length": 202,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.Printf",
      "library": "podge",
      "description": "Handles formatted output with type-safe string formatting, supporting safe and concise printing of values. Works directly with OCaml's format types and standard output. Useful for logging, debugging, and generating structured output without runtime format errors.",
      "description_length": 263,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.Yojson",
      "library": "podge",
      "description": "This module provides functions to manipulate and display JSON data using the `Yojson.Basic.t` type. It supports updating and removing key-value pairs in JSON objects, returning whether a change occurred along with the modified JSON. Use cases include modifying configuration files, in-memory JSON data structures, and pretty-printing JSON from strings, files, or values.",
      "description_length": 370,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.List",
      "library": "podge",
      "description": "Performs list filtering and transformation with functions like `all`, `any`, `unique`, and `group_by`. Handles standard list types, enabling operations such as deduplication, grouping by key, and partitioning into equal segments. Useful for data aggregation, validation checks, and list slicing without manual recursion.",
      "description_length": 320,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.Web",
      "library": "podge",
      "description": "Handles HTTP requests and JSON parsing for web APIs. Provides `get` to fetch JSON from a URL, raising exceptions for invalid URIs or non-OK HTTP responses. Works with strings as URLs and `Y.json` values for structured data. Useful for retrieving and processing JSON data from web services.",
      "description_length": 289,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.Debugging",
      "library": "podge",
      "description": "Prints a formatted callstack of the current execution context, capturing up to the specified number of frames. Uses internal system hooks to retrieve and display function names and positions. Useful for diagnosing unexpected control flow or tracing errors during development.",
      "description_length": 275,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Podge.Math",
      "library": "podge",
      "description": "This module implements mathematical operations on numerical data, including statistical calculations, entropy, and distance functions. It operates on basic types like integers, floats, and lists or arrays of these types, with utilities for random array generation, linear regression, and bit-level representations. Concrete use cases include calculating probabilities, performing numerical differentiation, and encoding data in binary.",
      "description_length": 435,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge.Unix",
      "library": "podge",
      "description": "This module extends the Podge library with Unix-specific functionality, including reading process output, capturing single character inputs, getting the current time, and daemonizing processes. It works with basic types like strings, lists, and units, focusing on system interaction and terminal handling. Use it to build command-line tools that require non-blocking input, background execution, or time-stamped logs.",
      "description_length": 417,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Podge.Analyze",
      "library": "podge",
      "description": "Analyzes performance metrics by calculating time ratios and logarithmic ratios between two floating-point values. Works directly with float inputs to produce structured ratio outputs. Useful for benchmarking and comparing execution times of different code implementations.",
      "description_length": 272,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Podge",
      "library": "podge",
      "description": "This module simplifies common development tasks by integrating HTML rendering, HTTP handling, JSON manipulation, list operations, system interaction, and performance analysis into a unified interface. It supports structured data types like Html5.M.elt, Cohttp.Response.t, Yojson.Basic.t, and standard lists, offering operations such as HTTP requests, JSON updates, list grouping, and system time retrieval. You can use it to fetch and process JSON from web APIs, debug HTML structures, log formatted output, measure performance ratios, or manipulate HTTP headers and system processes directly. Specific workflows include building command-line tools with terminal handling, validating HTTP responses, and transforming in-memory JSON configurations.",
      "description_length": 747,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 747,
    "min_description_length": 202,
    "avg_description_length": 349.72727272727275,
    "embedding_file_size_mb": 0.04039287567138672
  }
}