{
  "package": "mparser-pcre",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:15.859545",
  "modules": [
    {
      "module_path": "MParser_PCRE.Regexp",
      "description": "Compiles a pattern into a matchable structure and extracts captured substrings from byte buffers. Operates on byte sequences and returns matched groups as arrays or optional values. Used to parse structured text data, such as extracting fields from log entries or parsing protocol messages.",
      "description_length": 290,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MParser_PCRE.Tokens",
      "description": "The module provides parsing operations for lexical elements such as symbols, whitespace, punctuation, and numeric values across multiple bases (decimal, hexadecimal, octal, binary) and floating-point numbers, operating on input streams. It supports structured parsing through sequencing, repetition, and separation using delimiters like semicolons or commas, enabling tasks like tokenizing programming language constructs or processing formatted data. Specific use cases include extracting numeric literals from source code or parsing delimited lists in configuration files.",
      "description_length": 574,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "mparser-pcre",
      "description": "Provides regular expression parsing and matching operations using PCRE, supporting pattern compilation, capture group extraction, and substitution. Works with strings, compiled patterns, and match results. Used to validate input formats, extract structured data from text, and perform complex string transformations.",
      "description_length": 316,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MParser_PCRE",
      "description": "Processes byte sequences and input streams with PCRE-based pattern matching and lexical parsing. Supports extraction of captured groups from binary data and parsing of numeric values, symbols, and delimited structures from text. Enables structured data extraction, such as parsing log entries or tokenizing programming language elements. Provides operations for sequencing, repetition, and delimiter-based parsing with support for multiple numeric bases and floating-point formats.",
      "description_length": 481,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 574,
    "min_description_length": 290,
    "avg_description_length": 415.25,
    "embedding_file_size_mb": 0.014940261840820312
  }
}