{
  "package": "mparser-pcre",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:52:15.324787",
  "modules": [
    {
      "module_path": "MParser_PCRE.Regexp",
      "library": "mparser-pcre",
      "description": "This module compiles and executes PCRE regular expressions against byte buffers, enabling pattern matching with support for capture groups. It provides functions to extract specific or all matched substrings from a successful match. Use it to parse structured text formats, validate input patterns, or extract data from binary buffers.",
      "description_length": 335,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "MParser_PCRE.Tokens",
      "library": "mparser-pcre",
      "description": "This module provides token parsing operations for structured text processing, focusing on delimiter-aware symbol matching, punctuation recognition (commas, semicolons, brackets), and list parsing combinators for separated sequences. It handles numeric literals across bases (hex, octal, binary) and floating-point formats, operating on input streams to build lexers or data format parsers requiring precise tokenization and numeric value extraction. Use cases include language interpreters, configuration file parsers, and structured data validators needing robust token-level analysis.",
      "description_length": 586,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "MParser_PCRE",
      "library": "mparser-pcre",
      "description": "This module implements PCRE-based text parsing with functions to compile and execute regular expressions against input streams, supporting capture groups and substring extraction. It works with byte buffers and strings to enable structured text parsing, including tokenization of numeric literals, punctuation, and delimited sequences. Concrete use cases include building lexers, validating configuration formats, and extracting structured data from log files or network protocols.",
      "description_length": 481,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 586,
    "min_description_length": 335,
    "avg_description_length": 467.3333333333333,
    "embedding_file_size_mb": 0.04389381408691406
  }
}