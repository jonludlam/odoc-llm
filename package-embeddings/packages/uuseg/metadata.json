{
  "package": "uuseg",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:28:56.364482",
  "modules": [
    {
      "module_path": "uuseg",
      "description": "Segments Unicode text into grapheme clusters, words, and sentences using precise Unicode rules. Processes strings and byte sequences with support for various Unicode normalization forms. Enables accurate text processing in applications requiring language-aware segmentation, such as text editors and natural language processing tools.",
      "description_length": 334,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Uuseg",
      "description": "Segments Unicode text to identify grapheme clusters, words, sentences, and line breaks. Processes characters incrementally using `Uchar.t` and handles asynchronous input with `add` and `Await` states. Supports custom segmentation logic through `custom` with user-defined boundary detection and state management.",
      "description_length": 311,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Uuseg_string",
      "description": "Provides functions to fold over UTF-8, UTF-16BE, and UTF-16LE encoded strings by Unicode boundaries, and pretty-printers that format UTF-8 strings with grapheme cluster awareness and line break handling. Operates on OCaml strings encoded in various UTF formats and uses a folder type to accumulate results during traversal. Used for processing text with precise control over segmentation and formatting, such as implementing text wrapping or analyzing character boundaries.",
      "description_length": 473,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 473,
    "min_description_length": 311,
    "avg_description_length": 372.6666666666667,
    "embedding_file_size_mb": 0.011323928833007812
  }
}