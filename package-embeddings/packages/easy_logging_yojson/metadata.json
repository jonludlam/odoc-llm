{
  "package": "easy_logging_yojson",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:31:09.769993",
  "modules": [
    {
      "module_path": "Easy_logging_yojson.Logging_internals.Logging_types",
      "description": "Provides functions to convert log levels between string, JSON, and a custom `level` type, along with pretty-printing and serialization utilities. Works with the `level` type representing log severity and `log_item` structures containing log messages and metadata. Used to parse and serialize log levels in JSON for configuration files and to format levels for human-readable output.",
      "description_length": 382,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Easy_logging_yojson.Handlers.FileHandlers",
      "description": "Provides functions to generate filenames with date prefixes, create output channels, and manage log file rotation based on size. Works with configuration records that specify file paths, permissions, and rotation policies. Used to set up logging handlers that write to files, with options for appending, truncating, and rotating log files.",
      "description_length": 339,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Easy_logging_yojson.Handlers",
      "description": "Provides functions for generating date-prefixed filenames, creating output channels, and managing log file rotation based on size. Operates on configuration records that define file paths, permissions, and rotation policies, enabling controlled log output to files. Supports appending, truncating, and rotating log files as needed. Can be used to set up persistent logging handlers with automated file management.",
      "description_length": 413,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Easy_logging_yojson.Logging",
      "description": "Provides functions to log messages with optional tags and lazy strings, filtering by log level and forwarding to registered handlers. Operates on log levels, handlers, and tag-generating functions to manage message output. Used to record structured event data with contextual metadata in real-time applications.",
      "description_length": 311,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Easy_logging_yojson.Logging_internals",
      "description": "Converts and serializes log levels between string, JSON, and a custom `level` type, while formatting `log_item` structures for output. Supports parsing log configurations and generating human-readable logs. Provides utilities for encoding and decoding log severity levels. Examples include converting \"error\" to the `level` type, serializing a log entry to JSON, and printing a formatted log message.",
      "description_length": 400,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "easy_logging_yojson",
      "description": "Provides functions to load and apply logging configurations from JSON data, including parsing from a JSON value, a string, or a file. Works with Yojson.Safe.json type and string representations of configuration data. Enables dynamic adjustment of log levels and output settings during runtime without restarting the application.",
      "description_length": 328,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Easy_logging_yojson",
      "description": "Generates date-prefixed log files with size-based rotation, manages output channels, and handles log message formatting and serialization. Supports logging with levels, tags, and lazy strings, while enabling real-time message filtering and forwarding. Converts log levels between string, JSON, and custom types, and formats log entries for structured output. Examples include rotating large log files, logging tagged events with dynamic metadata, and serializing log data for external processing.",
      "description_length": 496,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 12,
    "meaningful_modules": 7,
    "filtered_empty_modules": 5,
    "retention_rate": 0.5833333333333334
  },
  "statistics": {
    "max_description_length": 496,
    "min_description_length": 311,
    "avg_description_length": 381.2857142857143,
    "embedding_file_size_mb": 0.02586650848388672
  }
}