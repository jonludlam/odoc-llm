{
  "package": "osnap",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:53:13.635775",
  "modules": [
    {
      "module_path": "Osnap.Spec.Result",
      "library": "osnap",
      "description": "This module defines typed result specifications for values of various base types like `unit`, `bool`, `int`, `float`, `char`, and `string`, along with combinators to construct result types for structured values such as `option`, `list`, and `array`. It supports building custom result types using a printer and optional encoding. These specifications are used to define how test results are interpreted and rendered in testing workflows.",
      "description_length": 437,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap.Runner",
      "library": "osnap",
      "description": "Handles running test suites with configurable output formats and interaction modes. Works with lists of test cases, supporting interactive approval, automatic promotion, or failure on mismatch. Encodes snapshots using Marshal or Data_encoding for storage and comparison.",
      "description_length": 270,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap.Test",
      "library": "osnap",
      "description": "This module creates and manages test cases for snapshot testing. It takes a function, a specification, and optional parameters like file path and random state to generate and validate test outputs. It works with functions of any type, as well as custom specification and test data structures. Use it to define individual tests that capture and compare expected versus actual results in a structured way.",
      "description_length": 403,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap.Spec",
      "library": "osnap",
      "description": "This module provides functions to construct and manipulate typed result specifications for base and structured types like `unit`, `bool`, `int`, `float`, `char`, `string`, `option`, `list`, and `array`. It includes combinators for building function specifications and utilities for defining custom printers and encodings. Concrete use cases include defining how test results are rendered and interpreted in testing workflows, such as specifying the expected output format of test cases or encoding structured data for comparison.",
      "description_length": 529,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap",
      "library": "osnap",
      "description": "This module implements snapshot testing with random input generation and diff-based validation. It works with functions of arbitrary types, using QCheck generators and custom printers to capture and compare test outputs. Use it to verify behavioral consistency across code changes by storing and checking against previously recorded execution snapshots.",
      "description_length": 353,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 529,
    "min_description_length": 270,
    "avg_description_length": 398.4,
    "embedding_file_size_mb": 0.0729055404663086
  }
}