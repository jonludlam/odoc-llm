{
  "package": "osnap",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:32.716520",
  "modules": [
    {
      "module_path": "Osnap.Spec.Result",
      "library": "osnap",
      "description": "This module defines result type specifications for various primitive and container types, including unit, bool, float, int, char, string, option, array, and list. Each value constructs a typed result specification that can be used to encode and print values of that type. It supports building custom result specifications with explicit encodings and printers for structured data representation.",
      "description_length": 394,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap.Spec",
      "library": "osnap",
      "description": "This module constructs and combines specifications for encoding and printing values across a range of types, including primitives and containers like unit, bool, float, int, char, string, option, array, and list. It provides core operations to build, compose, and validate specs, enabling serialization and pretty-printing of structured data for use in testing or logging. Child modules extend this functionality by defining typed result specifications and supporting custom encodings and printers for structured data representation. For example, you can define a spec for a list of integers with a custom printer or combine specs to handle complex nested data structures.",
      "description_length": 672,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap.Test",
      "library": "osnap",
      "description": "This module defines a test structure and a function to create tests with parameters like count, random state, and file path. It works with specifications and functions that implement test cases, capturing their behavior in a test value. It is used to build individual tests for property-based testing scenarios, where functions are validated against expected outcomes.",
      "description_length": 368,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Osnap.Runner",
      "library": "osnap",
      "description": "Handles running snapshot tests with configurable output encoding and interaction modes. Works with test suites defined as lists of `Osnap.Test.t` values, supporting binary or JSON encoding for snapshots. Useful for executing test cases with specific CLI options and output formatting, directly tied to test file execution workflows.",
      "description_length": 332,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osnap",
      "library": "osnap",
      "description": "This module builds and combines specifications for encoding and printing structured data, supporting primitives and containers like int, string, option, and list. It enables the creation and validation of typed result specifications, allowing custom encoders and printers for complex data representations. You can define a spec for a list of integers with a custom display format or compose nested specs for structured logging and serialization. It integrates with test definitions to capture and validate function behavior against expected outputs.",
      "description_length": 549,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 672,
    "min_description_length": 332,
    "avg_description_length": 463.0,
    "embedding_file_size_mb": 0.018601417541503906
  }
}