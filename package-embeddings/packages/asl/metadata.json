{
  "package": "asl",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:27:17.503870",
  "modules": [
    {
      "module_path": "Asl.Client",
      "description": "Provides functions to create a client handle and associate file descriptors for logging. Operates with string identifiers, facilities, file descriptors, and log levels to direct output. Used to immediately connect to a server and route logs to specific files with custom formatting.",
      "description_length": 282,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Asl.Message",
      "description": "Constructs a log message with optional fields such as type, time, host, sender, facility, process ID, user ID, group ID, level, message content, and extra key-value pairs. Operates on strings, lists of tuples, and a custom type representing message categories. Used to generate structured log entries for system monitoring and debugging.",
      "description_length": 337,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "asl",
      "description": "Logs messages to the Apple System Log using native OS facilities. Accepts strings and formatted messages with variable arguments. Used to integrate OCaml applications with macOS logging infrastructure for debugging and monitoring.",
      "description_length": 230,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Log_asl",
      "description": "Provides a function to create a log reporter that integrates with Apple System Log using an Asl.Client.t instance. It works with the Logs.reporter type and Asl.Client.t data structure. Used to route application logs to the system logging facility on Apple platforms.",
      "description_length": 266,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Asl",
      "description": "Provides a mechanism for logging messages to the Apple System Log by creating client handles with identifiers, facilities, and options, and constructing structured messages with metadata like sender, time, and level. Supports immediate logging with custom formatting and routing, and enables detailed message creation with optional fields and key-value pairs. Allows sending log entries with specific severity levels, such as `Notice`, and includes metadata for system monitoring. Example includes setting up a client with an identifier and logging a formatted message.",
      "description_length": 569,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 569,
    "min_description_length": 230,
    "avg_description_length": 336.8,
    "embedding_file_size_mb": 0.018613815307617188
  }
}