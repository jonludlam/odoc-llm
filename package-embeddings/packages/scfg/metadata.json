{
  "package": "scfg",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-15T00:47:46.117515",
  "modules": [
    {
      "module_path": "Scfg.Pp",
      "library": "scfg",
      "description": "This module includes functions for pretty-printing configuration elements such as parameters, lists of parameters, directives, and entire configs to a formatter. It works with strings, lists of strings, and the config and directive types defined in Scfg.Types. Use this module to generate human-readable representations of configuration data structures during logging, debugging, or configuration file generation.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scfg.Parse",
      "library": "scfg",
      "description": "This module parses configuration data from various input sources, including strings, files, channels, and lexing buffers. It produces a structured representation of the configuration, handling lexical analysis and error reporting. Use it to load and validate configuration files in formats like JSON or custom DSLs.",
      "description_length": 315,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scfg.Types",
      "library": "scfg",
      "description": "This module defines the core data structures for representing configuration files as a list of directives. Each directive has a name, a list of parameters, and nested child directives, enabling hierarchical configuration representations. It is used to model structured configuration data, such as server settings or application-specific config files, in a type-safe manner.",
      "description_length": 373,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scfg.Query",
      "library": "scfg",
      "description": "This module offers precise search and extraction capabilities for configuration directives and their parameters. It supports operations to retrieve directives by name, extract parameters by index, and convert them to specific types like integers, floats, or booleans, with both safe and unsafe variants. It is useful for parsing and validating structured configuration data where specific values must be accessed and converted reliably.",
      "description_length": 436,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scfg",
      "library": "scfg",
      "description": "This module provides configuration parsing, querying, and pretty-printing functionality. It handles structured configuration data through lexing, parsing, and type-safe manipulation of directives and parameters. Use it to read, validate, and output hierarchical configuration files such as server settings or application-specific DSLs.",
      "description_length": 335,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 436,
    "min_description_length": 315,
    "avg_description_length": 374.4,
    "embedding_file_size_mb": 0.07280254364013672
  }
}