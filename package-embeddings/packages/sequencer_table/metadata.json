{
  "package": "sequencer_table",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:54:22.629663",
  "modules": [
    {
      "module_path": "Sequencer_table.For_testing",
      "library": "sequencer_table",
      "description": "Sequencer_table.For_testing exposes operations to manipulate and inspect the internal state of a sequencer table, including functions to set and retrieve state for specific keys, and to trigger debug alerts during state lookups. It works with sequencer tables that map keys to optional state and manage concurrent job execution per key. This module is used primarily in test scenarios to verify correct state handling and sequencer behavior under various conditions.",
      "description_length": 466,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sequencer_table.Make",
      "library": "sequencer_table",
      "description": "This module manages concurrent jobs indexed by a key, ensuring that only one job per key runs at a time while allowing jobs for different keys to run concurrently. It maintains optional per-key state that is passed to each job and provides operations to enqueue jobs, inspect and update state, and track job counts. Use cases include coordinating asynchronous tasks like network requests or file operations per user or resource ID, where concurrency per key must be controlled and state must persist across jobs.",
      "description_length": 512,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sequencer_table",
      "library": "sequencer_table",
      "description": "Sequencer_table manages concurrent jobs indexed by key, ensuring one job per key runs at a time while allowing parallel execution across keys. It maintains optional per-key state, passed to each job, and supports enqueuing jobs, updating state, and tracking active jobs. Use it to coordinate tasks like per-user network requests or per-resource file operations where per-key concurrency control and state persistence are required.",
      "description_length": 430,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 512,
    "min_description_length": 430,
    "avg_description_length": 469.3333333333333,
    "embedding_file_size_mb": 0.043877601623535156
  }
}