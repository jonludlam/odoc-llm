{
  "package": "sequencer_table",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:04.800904",
  "modules": [
    {
      "module_path": "Sequencer_table.For_testing",
      "library": "sequencer_table",
      "description": "Sequencer_table.For_testing exposes direct access to internal state for validation during tests. It allows retrieving and inspecting sequencer entries by key, including pending and running jobs. This module is used to verify correctness of sequencer table operations in test cases.",
      "description_length": 281,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sequencer_table.Make",
      "library": "sequencer_table",
      "description": "This module manages a collection of sequenced jobs indexed by a key, ensuring that for each key, only one job runs at a time. It supports enqueuing asynchronous jobs that depend on per-key state, tracking unfinished jobs, and inspecting or modifying key states directly. Use cases include coordinating access to shared resources per key, batching or sequencing I/O operations, and managing stateful background tasks with async dependencies.",
      "description_length": 440,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sequencer_table",
      "library": "sequencer_table",
      "description": "This module coordinates asynchronous jobs indexed by key, ensuring only one job runs per key at a time while supporting enqueuing, tracking, and inspection of pending and running tasks. It provides a table-like structure where each key maps to a sequencer managing stateful, async-dependent jobs, with operations to enqueue tasks, inspect internal state, and coordinate resource access. For example, it can sequence disk writes per user ID, batch network requests per endpoint, or manage background tasks that mutate shared per-key state. The testing module enables direct inspection of queued and active jobs for validation during tests.",
      "description_length": 638,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 638,
    "min_description_length": 281,
    "avg_description_length": 453.0,
    "embedding_file_size_mb": 0.011321067810058594
  }
}