{
  "package": "tls-mirage",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:08.837993",
  "modules": [
    {
      "module_path": "Tls_mirage.X509",
      "library": "tls-mirage",
      "description": "This module validates X.509 certificates and builds certificate chains using a key-value store for certificate authorities and private keys. It provides an authenticator function that enforces hash algorithm restrictions and revocation checks via CRL, and a certificate loader that retrieves TLS certificate chains from storage. Concrete use cases include configuring TLS servers with trusted CA certificates and enforcing certificate revocation policies during secure communication setup.",
      "description_length": 489,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tls_mirage.Make",
      "library": "tls-mirage",
      "description": "This module implements TLS protocol operations over a flow, including establishing secure connections as a client or server, reading and writing encrypted data, renegotiating sessions, and managing connection lifecycle with shutdown and close. It handles errors specific to TLS and flow operations, providing detailed error types and pretty-printers. Use cases include securing network communication over TCP or other transports, mutual authentication, and TLS session management in MirageOS applications.",
      "description_length": 505,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tls_mirage",
      "library": "tls-mirage",
      "description": "This module enables secure network communication by combining certificate validation and TLS protocol handling. It supports loading and authenticating X.509 certificates with revocation checks, and implements TLS session establishment and data transfer over a flow. Key operations include certificate chain building, secure client/server connections, and error-resilient session management. Example uses include configuring TLS servers with trusted CAs and enforcing secure communication with mutual authentication.",
      "description_length": 515,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 515,
    "min_description_length": 489,
    "avg_description_length": 503.0,
    "embedding_file_size_mb": 0.011307716369628906
  }
}