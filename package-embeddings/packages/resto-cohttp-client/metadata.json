{
  "package": "resto-cohttp-client",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:59:59.454806",
  "modules": [
    {
      "module_path": "Resto_cohttp_client.Client.Make.Service",
      "library": "resto-cohttp-client",
      "description": "This module constructs and manipulates type-safe HTTP services with precise encodings for parameters, queries, inputs, outputs, and errors. It supports defining services for common HTTP methods (`GET`, `POST`, `DELETE`, `PATCH`, `PUT`) with customizable request and response formats, and allows service composition through path prefixing and parameter substitution. Concrete use cases include building RESTful APIs with typed endpoints, where each service enforces correct data serialization and client-server communication structure.",
      "description_length": 534,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_client.Client.Make",
      "library": "resto-cohttp-client",
      "description": "This module implements type-safe HTTP client calls to REST services, using the provided `Encoding` and `Call` modules. It works with HTTP methods, URIs, headers, and typed request/response bodies, supporting both regular and streamed data transfer. Concrete use cases include calling versioned API endpoints with automatic parameter encoding and response decoding, handling redirects, and logging HTTP interactions with custom timing or full detail.",
      "description_length": 449,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_client.Client.OfCohttp",
      "library": "resto-cohttp-client",
      "description": "Implements HTTP client calls to remote services using Cohttp, handling requests with custom headers, methods, and URIs. Works with Cohttp types including headers, responses, and bodies, along with Lwt for asynchronous execution. Used to send RESTful requests and receive structured HTTP responses with optional request bodies.",
      "description_length": 326,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_client.Client",
      "library": "resto-cohttp-client",
      "description": "Implements HTTP client calls to remote RESTful services, supporting custom methods, headers, and URIs. Works with Cohttp's request and response types, handling asynchronous execution via Lwt, with optional redirect following behavior. Used to send structured requests and receive parsed HTTP responses, including body content.",
      "description_length": 326,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_cohttp_client",
      "library": "resto-cohttp-client",
      "description": "Implements HTTP client operations for interacting with RESTful APIs, supporting custom methods, headers, and URIs. Works with Cohttp's request and response types, executing asynchronously using Lwt, with configurable redirect handling. Used to send structured HTTP requests and process full responses, including status codes, headers, and body content.",
      "description_length": 352,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 534,
    "min_description_length": 326,
    "avg_description_length": 397.4,
    "embedding_file_size_mb": 0.07287120819091797
  }
}