{
  "package": "yocaml_yaml",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:12.778079",
  "modules": [
    {
      "module_path": "Yocaml_yaml.Pipeline",
      "library": "yocaml_yaml",
      "description": "This module provides functions for reading files and parsing their metadata using a YAML-based pipeline. It works with file paths and data types that implement the `DATA_READABLE` interface, extracting metadata either alongside file content or as standalone data. Concrete use cases include processing configuration files or document headers that contain structured metadata in YAML format.",
      "description_length": 390,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_yaml.Eff",
      "library": "yocaml_yaml",
      "description": "This module provides low-level functions for reading files and parsing their metadata using a specified data type. It works with `Yocaml.Path.t` paths and handles metadata extraction strategies, returning parsed data along with file content. Concrete use cases include loading configuration files or structured metadata directly from source or target paths during static site generation.",
      "description_length": 387,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_yaml",
      "library": "yocaml_yaml",
      "description": "This module parses YAML metadata from strings into structured data, offering `from_string` to produce `Yaml.value` and `normalize` to convert values into `Yocaml.Data.t`. It integrates with pipelines and effectful contexts for processing metadata in file workflows. The first child module reads files and extracts YAML metadata using a pipeline, supporting data types that implement `DATA_READABLE` for use cases like parsing document headers or configuration files. The second child module provides lower-level file parsing with explicit path handling and metadata extraction strategies, suitable for loading structured data during static site generation.",
      "description_length": 656,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 656,
    "min_description_length": 387,
    "avg_description_length": 477.6666666666667,
    "embedding_file_size_mb": 0.011326789855957031
  }
}