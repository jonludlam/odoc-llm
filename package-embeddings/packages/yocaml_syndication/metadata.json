{
  "package": "yocaml_syndication",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 15,
  "creation_timestamp": "2025-08-14T23:23:58.477633",
  "modules": [
    {
      "module_path": "Yocaml_syndication.Xml.Attr",
      "library": "yocaml_syndication",
      "description": "This module represents XML attributes with support for various value types and optional namespace scoping. It provides functions to construct attributes from strings, integers, floats, booleans, characters, and custom values via a conversion function. These attributes are used to build XML nodes when generating RSS or Atom syndication feeds.",
      "description_length": 343,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Rss2",
      "library": "yocaml_syndication",
      "description": "This module implements the RSS 2 specification for generating syndication feeds. It provides functions to construct feed elements such as items, enclosures, images, and GUIDs, along with utilities to build complete feeds or integrate with article data sources. Concrete use cases include generating blog feeds from article collections or building custom feeds from arbitrary data structures with full control over metadata and formatting.",
      "description_length": 438,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_syndication.Lang",
      "library": "yocaml_syndication",
      "description": "This module defines a comprehensive set of language codes following the ISO-639-2 standard, with support for custom languages via the `Other` constructor. It provides `to_string` to convert language values to their string representations and `other` to create custom language tags. These features are used to specify the language of content in syndication feeds like RSS or Atom, ensuring compatibility with feed consumers that rely on standardized language codes.",
      "description_length": 464,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_syndication.Tz",
      "library": "yocaml_syndication",
      "description": "This module defines a set of timezone values conforming to RFC822, including common abbreviations like `Utc`, `Est`, and `Pdt`, as well as custom offsets via `Plus` and `Minus`. It provides functions to construct and convert these timezone values into string representations, specifically formatted for RFC822 and RFC3339. These capabilities are useful when generating correctly formatted timestamps for RSS or Atom syndication feeds.",
      "description_length": 434,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Text_input",
      "library": "yocaml_syndication",
      "description": "This module builds and converts `<textInput>` elements for RSS feeds, working with string-based fields like title, description, name, and link. It provides direct serialization to RSS 1.0 and RSS 2.0 XML node formats, both as standalone elements and as part of a channel. Use it to include search or feedback forms in RSS feeds when targeting aggregators that support `<textInput>`.",
      "description_length": 382,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_syndication.Datetime",
      "library": "yocaml_syndication",
      "description": "This module extends a datetime type with timezone support, offering functions to create datetime values with optional timezone specification, compare datetimes ignoring timezone differences, and format datetimes into strings. It works with `Yocaml.Datetime.t` and `Yocaml_syndication.Tz.t` to produce correctly localized timestamps for syndication feeds. Concrete use cases include generating RFC 3339 compliant date strings for Atom or RSS feed entries.",
      "description_length": 454,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Xml",
      "library": "yocaml_syndication",
      "description": "This module structures XML documents for syndication feeds using nodes and attributes. It supports constructing elements with optional namespaces, CDATA sections, and escaping, while handling conditional node inclusion. Concrete use cases include generating RSS or Atom feeds with properly formatted XML trees and attributes.",
      "description_length": 325,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Rss1",
      "library": "yocaml_syndication",
      "description": "Implements RSS1 feed generation with functions to construct feed elements like `image` and `item`, and build complete feeds from custom data or article collections. Works with basic data types and YOCaml's article and path structures. Useful for generating historical RSS1 feeds compatible with existing subscribers, or manually crafting feeds from site content.",
      "description_length": 362,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Category",
      "library": "yocaml_syndication",
      "description": "This module represents categories in syndication feeds, providing functions to create category values with optional scheme and label metadata. It supports converting categories to Atom and RSS2 XML nodes for inclusion in feed documents. Use this module to define and serialize category metadata for blog posts or feeds in Atom or RSS2 formats.",
      "description_length": 343,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_syndication.Atom",
      "library": "yocaml_syndication",
      "description": "This module enables constructing and serializing Atom syndication feeds through functions for creating text constructs, link types, content elements, and metadata-rich source entries. It operates on XML nodes, string-based content, and specialized types like datetime, media formats, and structured person/category data to model feeds and entries. Typical use cases include generating Atom feeds from article collections, embedding external content via MIME types, and managing feed update timelines using customizable timestamp strategies.",
      "description_length": 540,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Media_type",
      "library": "yocaml_syndication",
      "description": "This module defines a comprehensive set of standard media (MIME) types as enumerated values, primarily used to represent file formats for enclosures in syndication feeds. It includes common types such as `Image_jpeg`, `Audio_mpeg`, and `Application_pdf`, enabling precise and standardized identification of content types. The `to_string` function converts these types into their canonical string representations, suitable for use in RSS or Atom feed generation.",
      "description_length": 461,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Generator",
      "library": "yocaml_syndication",
      "description": "This module creates and manipulates feed generator metadata for syndication formats. It provides functions to construct generator values with optional URI and version fields, and to serialize them into Atom or RSS2 XML nodes. Use it when building custom RSS or Atom feeds to identify the generating software in the output.",
      "description_length": 322,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Person",
      "library": "yocaml_syndication",
      "description": "This module implements the Person construct for syndication feeds, providing functions to create and serialize person entities with optional URI and email fields. It supports generating OPML owner nodes (`ownerName`, `ownerEmail`, `ownerId`), Atom feed nodes, and RSS 2.0 string representations. Use this module to represent content authors or owners when building RSS or Atom feeds manually or for OPML outlines.",
      "description_length": 413,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_syndication.Opml",
      "library": "yocaml_syndication",
      "description": "This module implements the OPML 1 and 2 specifications, providing functions to construct and serialize hierarchical outline structures commonly used for organizing RSS/Atom feed subscriptions. It supports creating `outline` elements with attributes like `text`, `title`, `xml_url`, and nested outlines, along with specialized variants for subscriptions and inclusions. Concrete use cases include generating OPML files for blogroll exports, feed aggregators, or portable subscription lists compatible with OPML readers.",
      "description_length": 518,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Yocaml_syndication",
      "library": "yocaml_syndication",
      "description": "This module implements syndication feed generation for RSS 1, RSS 2, Atom, and OPML formats with direct support for constructing feeds from articles, custom data, or structured outlines. It provides concrete functions to build feed elements like items, enclosures, categories, and metadata using typed representations of dates, timezones, languages, and MIME types. Use it to generate fully customized syndication feeds with precise control over content structure and formatting, suitable for blog exports, feed aggregators, or portable subscription lists.",
      "description_length": 556,
      "index": 14,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 15,
    "meaningful_modules": 15,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 556,
    "min_description_length": 322,
    "avg_description_length": 423.6666666666667,
    "embedding_file_size_mb": 0.21784114837646484
  }
}