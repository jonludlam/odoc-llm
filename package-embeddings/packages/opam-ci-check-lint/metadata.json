{
  "package": "opam-ci-check-lint",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:57.322611",
  "modules": [
    {
      "module_path": "Opam_ci_check_lint.Opam_helpers",
      "library": "opam-ci-check-lint",
      "description": "Converts an OPAM package into a file path relative to a given repository directory. Works with `OpamPackage.t` and string paths. Useful for locating package files within an OPAM repository structure.",
      "description_length": 199,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Opam_ci_check_lint.Checks",
      "library": "opam-ci-check-lint",
      "description": "This module defines linting check categories for OPAM files and provides functions to determine source inspection requirements and detect package name collisions. It operates on OPAM file kinds, including general files, public repositories, and archive repositories, using string-based package names for comparison. Concrete use cases include validating package naming uniqueness and deciding whether source code analysis is needed based on the active linting category.",
      "description_length": 469,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Opam_ci_check_lint",
      "library": "opam-ci-check-lint",
      "description": "This module enforces quality standards for OPAM packages by analyzing metadata and file structure, checking for naming consistency, version validity, dependency completeness, and repository alignment. It operates on `OpamPackage.t` and `OpamFile.OPAM.t`, identifying issues such as incorrect file paths, invalid dune configurations, and permission missteps during CI validation. One submodule translates package values into repository-relative paths for precise file access, while another categorizes linting rules and determines source inspection needs based on package kind and naming conflicts. Example uses include verifying that a package's name and version match its file path, ensuring dependencies are declared, and confirming that source checks are applied only when required.",
      "description_length": 785,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 785,
    "min_description_length": 199,
    "avg_description_length": 484.3333333333333,
    "embedding_file_size_mb": 0.011321067810058594
  }
}