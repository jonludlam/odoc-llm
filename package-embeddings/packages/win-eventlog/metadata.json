{
  "package": "win-eventlog",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T23:00:53.586201",
  "modules": [
    {
      "module_path": "Win_eventlog.Eventlog",
      "library": "win-eventlog",
      "description": "This module provides functions to register event sources and report structured events to the Windows event log, including support for event types, categories, and insertion strings. It operates on event log handles and works directly with Windows-specific logging concepts like event IDs, categories, and resource-linked message templates. Concrete use cases include logging application-specific events with structured data for viewing in the Windows Event Viewer, such as recording service start/stop events or error conditions with descriptive strings.",
      "description_length": 554,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Win_eventlog.Log_eventlog",
      "library": "win-eventlog",
      "description": "This module creates a log reporter that sends log messages directly to the Windows event log. It works with `Win_eventlog.Eventlog.t` handles and allows optional specification of event category and ID for structured logging. Use this to integrate OCaml application logging with Windows system logs for monitoring or diagnostics.",
      "description_length": 328,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Log_eventlog",
      "library": "win-eventlog",
      "description": "Constructs a Logs reporter that sends log messages to the Windows event log, using optional category and event identifiers. Works with `Win_eventlog.Eventlog.t` handles for event log configuration. Useful for integrating OCaml applications with Windows event logging infrastructure for diagnostics and monitoring.",
      "description_length": 313,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Win_eventlog",
      "library": "win-eventlog",
      "description": "This module provides functions to register event sources and report structured events to the Windows event log, supporting event types, categories, and insertion strings. It operates on event log handles and works directly with Windows-specific logging concepts like event IDs and resource-linked message templates. Use it to log application-specific events such as service start/stop or error conditions for viewing in the Windows Event Viewer.",
      "description_length": 445,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Eventlog",
      "library": "win-eventlog",
      "description": "This module provides functions to register event sources and report structured events to Windows event logs. It works with event types like `Success`, `Error`, and `Warning`, along with source handles and insertion strings for event message templating. Concrete use cases include logging application errors with structured data, auditing security events, and reporting status updates to the Windows Event Viewer.",
      "description_length": 412,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 554,
    "min_description_length": 313,
    "avg_description_length": 410.4,
    "embedding_file_size_mb": 0.07282066345214844
  }
}