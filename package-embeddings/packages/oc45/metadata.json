{
  "package": "oc45",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:30.880435",
  "modules": [
    {
      "module_path": "Oc45.FloatOc45",
      "library": "oc45",
      "description": "This module enables decision tree construction and classification for datasets combining continuous and discrete features, using the C4.5 algorithm. It supports operations to define training data with mixed-type features, compute optimal splits, and generate trees that can be visualized via Dot file export with customizable formatting for continuous values. Typical applications include machine learning classification tasks where numerical and categorical data must be jointly analyzed, such as predictive modeling with heterogeneous attributes.",
      "description_length": 548,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Oc45.S",
      "library": "oc45",
      "description": "This module provides operations for constructing and manipulating decision trees from heterogeneous datasets, handling both discrete and continuous feature types. It supports creating training sets with specified feature bounds, building classification trees via C4.5, and converting trees into DOT graph representations for visualization. Typical use cases include training predictive models on numerical or categorical data, analyzing feature importance, and generating interpretable tree diagrams for debugging or documentation.",
      "description_length": 531,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oc45.Make",
      "library": "oc45",
      "description": "This module enables constructing decision trees via the C4.5 algorithm, managing training data with mixed discrete and continuous features, and visualizing tree structures. It operates on `trainSet` and `decisionTree` data structures, requiring a comparable type for continuous values (e.g., integers or floats) to handle numerical thresholds during tree splitting. Typical use cases include training classifiers from labeled datasets, exporting trees for analysis in graph visualization tools, and tuning feature bounds to optimize model accuracy.",
      "description_length": 548,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Oc45.IntOc45",
      "library": "oc45",
      "description": "This module provides operations for constructing decision trees from integer-based data, handling tasks like training set creation, feature bound configuration, and tree generation for classification. It works with integer values as continuous data, discrete categories, and decision trees, supporting use cases such as analyzing count-based sensor data or visualizing tree structures via Dot format export.",
      "description_length": 407,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Oc45.Comparable",
      "library": "oc45",
      "description": "This module defines the operations needed to compare and average elements of a continuous data type used in decision tree construction. It includes `compare` for ordering values and `avg` for computing their midpoint, both essential for splitting data during tree generation. It is designed for use with numeric types like integers or floats, enabling efficient partitioning of continuous features in classification tasks.",
      "description_length": 422,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Oc45",
      "library": "oc45",
      "description": "This module implements the C4.5 algorithm for building decision trees from labeled datasets containing both discrete and continuous features. It provides core operations for training models, classifying instances, and handling missing values, with support for custom continuous data types through functors like `Make` or predefined modules such as `IntOc45` and `FloatOc45`. Submodules enable defining training sets with mixed feature types, constructing classification trees with optimal splits, and exporting trees to DOT format for visualization. Specific applications include predictive modeling in domains like finance, healthcare, and customer analytics, where heterogeneous data must be analyzed and interpreted through clear decision paths.",
      "description_length": 748,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 748,
    "min_description_length": 407,
    "avg_description_length": 534.0,
    "embedding_file_size_mb": 0.022205352783203125
  }
}