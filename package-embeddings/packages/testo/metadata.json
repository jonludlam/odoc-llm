{
  "package": "testo",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:54:52.373011",
  "modules": [
    {
      "module_path": "Testo.Promise.Operators",
      "library": "testo",
      "description": "This module provides infix operators for chaining and composing asynchronous test operations, specifically designed for working with the `Testo.Promise.t` type. It enables concise sequencing of asynchronous test steps and handling of results within test cases. Use cases include writing fluent asynchronous test logic where each step depends on the result of the previous, such as making successive HTTP requests or asserting intermediate outcomes in async workflows.",
      "description_length": 467,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Testo.Tag",
      "library": "testo",
      "description": "This module manages tags for categorizing and selecting tests. It provides operations to declare, compare, and convert tags to and from strings, ensuring precise test grouping and command-line selection. Use cases include organizing tests by features like \"network\" or \"database\" and filtering execution based on these tags.",
      "description_length": 324,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Testo.Promise",
      "library": "testo",
      "description": "This module provides primitives for composing and handling asynchronous test operations, specifically for the `Testo.Promise.t` type. It supports key operations like binding asynchronous results, catching exceptions with backtrace handling, and ensuring cleanup steps execute regardless of outcome. Concrete use cases include sequencing HTTP API tests with dependent setup and teardown steps, and validating error propagation in async workflows.",
      "description_length": 445,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Testo",
      "library": "testo",
      "description": "This module enables test suite development through configurable test definitions, output validation, and asynchronous execution management. It employs a structured type for test metadata, categorization, and execution controls, alongside tagging and promise-based utilities for organizing and filtering tests. Applications include command-line-driven test execution with concurrency, expectation handling, and integration with Alcotest frameworks via export capabilities.",
      "description_length": 471,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 471,
    "min_description_length": 324,
    "avg_description_length": 426.75,
    "embedding_file_size_mb": 0.058371543884277344
  }
}