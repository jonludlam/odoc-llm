{
  "package": "leaflet",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:31:26.758721",
  "modules": [
    {
      "module_path": "Leaflet.Event",
      "description": "Provides methods to extract event details such as type, target, original event, and coordinates from keyboard and mouse events, and error codes and messages from error events. Works with event types like `Keyboard`, `Mouse`, and `Error`, and associated data structures including `Point.t`, `Latlng.t`, and `Jv.t`. Used to process user interactions and error reporting in web applications.",
      "description_length": 388,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Global",
      "description": "Provides a function to retrieve a leaflet object from a JSON value. Works with JSON values and leaflet data structures. Used to extract and manipulate map-related data in web applications.",
      "description_length": 188,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Icon",
      "description": "Provides functions to convert between icon representations and a custom type, create icon instances with specific options, and define div-based icons with HTML and positioning. Works with string, point, and custom option types to configure icon behavior. Used to generate icons for mapping interfaces, customize icon appearance with HTML content, and manage default image paths.",
      "description_length": 378,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Latlng",
      "description": "Provides functions to create, extract, and compare geographical coordinates, and convert between internal representation and JSON values. Operates on float-based latitude and longitude values encapsulated in a type `t`. Used to parse and serialize location data from JSON and check positional equality with tolerance.",
      "description_length": 317,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Layer",
      "description": "Provides operations to manage layers on a map, including adding, removing, and binding popups. Works with geographic data, tile layers, and vector elements like polylines and circle markers. Supports creating GeoJSON layers, OSM tile layers, and event listeners for interactive map elements.",
      "description_length": 291,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Map",
      "description": "Creates and manages interactive maps using a DOM container, allowing view adjustments, size validation, and event handling. Operates on map instances, geographical coordinates, and HTML elements. Used to center the map on specific locations, adjust zoom levels, and manage popups tied to map events.",
      "description_length": 299,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Leaflet.Marker",
      "description": "Provides methods to create and manipulate a marker with geographic coordinates, including updating its position, icon, opacity, and z-index offset. Operates on `Latlng.t` for location data and `Icon.t` for visual representation. Used to dynamically adjust marker properties in a map-based application.",
      "description_length": 301,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Point",
      "description": "Converts between a custom type and a JSON value, enabling serialization and deserialization. Works with a record type containing fields for x and y coordinates. Used to exchange point data with JavaScript environments via the Jv module.",
      "description_length": 236,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Popup",
      "description": "Sets the position and content of a popup, including from a DOM element, and converts between internal and JSON representations. Works with latitude/longitude points, strings, DOM elements, and custom options. Used to initialize popups with specific content and positioning in a mapping or UI context.",
      "description_length": 300,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "leaflet",
      "description": "Manages map creation, layer manipulation, and event handling for interactive web maps. Operates with geographic coordinates, tiles, and markers represented as records. Enables dynamic map updates and user interaction tracking in web applications.",
      "description_length": 246,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Leaflet",
      "description": "Extracts and processes event data, converts JSON to map objects, manages icons, handles geographic coordinates, manipulates map layers, creates interactive maps, places and updates markers, serializes points, and controls popups with customizable content and positioning. Key types include `Point.t`, `Latlng.t`, `Icon.t`, `Jv.t`, and custom record types for coordinates and popups. Functions enable event handling, map data manipulation, icon customization, coordinate conversion, layer management, map interaction, marker updates, JSON serialization, and popup configuration. Examples include parsing mouse events, generating HTML-based icons, serializing location data, adding popups to markers, and adjusting map views dynamically.",
      "description_length": 735,
      "index": 10,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 735,
    "min_description_length": 188,
    "avg_description_length": 334.45454545454544,
    "embedding_file_size_mb": 0.04038047790527344
  }
}