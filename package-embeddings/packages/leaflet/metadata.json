{
  "package": "leaflet",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 9,
  "creation_timestamp": "2025-07-15T23:06:36.648090",
  "modules": [
    {
      "module_path": "Leaflet.Marker",
      "library": "leaflet",
      "description": "This module defines markers on a map with configurable visual and behavioral properties such as icon, opacity, and z-index. It supports operations to create, reposition, and update marker attributes dynamically. Concrete use cases include displaying points of interest, user locations, or interactive map annotations with custom styling and behavior.",
      "description_length": 350,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Event",
      "library": "leaflet",
      "description": "This module handles event types and operations for interacting with Leaflet.js events in OCaml. It provides constructors for different event kinds like mouse, keyboard, and error events, along with accessors to retrieve event properties such as coordinates, error codes, and event sources. Concrete use cases include handling map click events, retrieving mouse positions in layer or container coordinates, and processing error events with specific codes and messages.",
      "description_length": 467,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Icon",
      "library": "leaflet",
      "description": "This module defines and manipulates icon configurations for map markers, supporting both image-based and HTML-based icons. It provides functions to create icon instances with options like size, anchor points, and URLs for images or shadows, and allows setting the default image path. Concrete use cases include customizing marker appearance with specific icon URLs, adjusting icon alignment relative to map coordinates, and embedding HTML content within div icons.",
      "description_length": 464,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Point",
      "library": "leaflet",
      "description": "This module defines a point with integer x and y coordinates. It provides conversions to and from JavaScript values, enabling interoperability with JavaScript code that uses objects with x and y properties. Use this module when passing coordinates between OCaml and JavaScript, such as handling mouse events or positioning elements on a map.",
      "description_length": 341,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Leaflet.Latlng",
      "library": "leaflet",
      "description": "This module defines a data type `t` for representing geographic coordinates with latitude and longitude values. It provides functions to create, access, and compare coordinate points, ensuring accurate positional checks within a small margin of error. It supports conversion to and from JavaScript values, making it suitable for use in web applications that handle geographic data, such as mapping tools or location-based services.",
      "description_length": 431,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Leaflet.Layer",
      "library": "leaflet",
      "description": "This module defines operations for creating and managing different types of map layers such as markers, tile layers, GeoJSON layers, and vector layers. It supports adding, removing, and modifying layers on a map, binding popups, and handling events specific to each layer type. Concrete use cases include displaying geographic data with GeoJSON, adding interactive markers, and overlaying custom tile services on a map.",
      "description_length": 419,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Popup",
      "library": "leaflet",
      "description": "This module defines popup configurations and operations for positioning and rendering interactive overlays on a map. It supports creating popups with text or DOM elements, setting geographic positions, and customizing display behavior through options like size constraints, auto-panning, and close controls. Concrete use cases include displaying location-specific information at map coordinates, such as showing details about a point of interest when a user clicks a marker.",
      "description_length": 474,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet.Map",
      "library": "leaflet",
      "description": "This module manages interactive maps, providing operations to create maps on DOM elements, set geographical views, handle events, and control map state. It works with latitude-longitude coordinates, zoom levels, and DOM elements to render and manipulate maps dynamically. Concrete use cases include initializing maps within web pages, adjusting map views based on user input, and synchronizing map display with changing container sizes.",
      "description_length": 436,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Leaflet",
      "library": "leaflet",
      "description": "This module provides a comprehensive interface for building and interacting with interactive maps through a variety of components including markers, layers, popups, and icons. It supports precise geographic data handling with latitude-longitude and pixel-based coordinates, event handling for user interactions, and customizable visual elements like styled markers and HTML-based icons. Users can create dynamic maps with interactive markers that respond to events, display GeoJSON data, show popups with custom content, and manage layers such as tile overlays and vector graphics. Specific examples include displaying user locations with custom icons, handling map clicks to retrieve coordinates, and overlaying geographic data with interactive popups.",
      "description_length": 753,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 753,
    "min_description_length": 341,
    "avg_description_length": 459.44444444444446,
    "embedding_file_size_mb": 0.0331573486328125
  }
}