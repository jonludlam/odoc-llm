{
  "package": "irrlicht",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:29:42.416880",
  "modules": [
    {
      "module_path": "Irr_video.Vertex",
      "description": "type t = { id : int; position : float * float; neighbors : int list } Provides functions to create vertices, update neighbor lists, and retrieve position data. Operates on structured records containing unique identifiers, coordinate positions, and adjacency information. Used to build and manipulate graph nodes in network simulation and pathfinding algorithms.",
      "description_length": 361,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irr_video.Light",
      "description": "Creates a light source with customizable properties such as position, direction, color, intensity, and shadow casting. Operates on types like color, vector3df, and light_type to define lighting characteristics. Used to configure point, directional, or spotlights in a 3D scene with precise control over illumination effects.",
      "description_length": 324,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "irrlicht",
      "description": "Provides operations for creating and manipulating 3D meshes, including vertex transformation and face indexing. Works with custom data structures representing geometric shapes and graphical primitives. Used to preprocess model data for real-time rendering in game engines.",
      "description_length": 272,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irr_enums",
      "description": "This module defines enumerated types for graphics and rendering configurations, including constants like material flags, texture settings, color formats, and device types, alongside UI-related categories such as vertex types and event types. It provides structured data representations to control low-level rendering parameters and categorize graphical elements within application frameworks. Specific use cases include configuring shader behaviors, managing texture pipelines, and handling user interface interactions through typed event systems.",
      "description_length": 547,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irr_core",
      "description": "Constructs color values from red, green, and blue components, with optional alpha, supporting both integer and floating-point representations. Handles 2D positions, 3D vectors, lines, triangles, and bounding boxes using tuple-based structures. Generates identity matrices for 4x4 transformations.",
      "description_length": 296,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 5,
    "filtered_empty_modules": 6,
    "retention_rate": 0.45454545454545453
  },
  "statistics": {
    "max_description_length": 547,
    "min_description_length": 272,
    "avg_description_length": 360.0,
    "embedding_file_size_mb": 0.01860809326171875
  }
}