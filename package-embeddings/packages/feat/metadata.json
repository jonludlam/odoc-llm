{
  "package": "feat",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:50:47.529320",
  "modules": [
    {
      "module_path": "Feat.Enum",
      "library": "feat",
      "description": "This module implements enumerations where each element has an implicit size, supporting operations like union (`sum`), Cartesian product (`product`), and size adjustment (`pay`). It provides constructors for basic enumerations such as `bool` and `finite`, and allows building complex structures like lists (`list`) and dependent lists (`dlist`) with size-based generation. Concrete use cases include generating test inputs of varying sizes for property-based testing and systematically exploring finite data structures with controlled complexity.",
      "description_length": 546,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Feat.IFSeq",
      "library": "feat",
      "description": "This module implements implicit finite sequences with operations for concatenation, Cartesian product, mapping, and element access. It supports data types like integers, pairs, and polymorphic elements, with functions to construct sequences from ranges, reverse them, or sample elements. Concrete use cases include generating combinatorial structures, efficiently handling large sequences without full in-memory representation, and sampling elements from large domains.",
      "description_length": 469,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Feat.Num",
      "library": "feat",
      "description": "This module provides arithmetic operations, comparisons, and bitwise manipulations for big integers using the `Z.t` type. It supports addition, subtraction, multiplication, division with remainder, equality checks, and shifting operations. Concrete use cases include precise numerical calculations requiring arbitrary-precision integers, such as cryptographic computations or large-scale financial arithmetic.",
      "description_length": 409,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Feat",
      "library": "feat",
      "description": "This module combines enumerations with size-based generation, implicit finite sequences, and arbitrary-precision arithmetic. It supports building and manipulating structured test data with controlled complexity, handling large combinatorial domains efficiently, and performing precise numerical computations. Use it for property-based testing, combinatorial exploration, and calculations requiring exact integer operations beyond machine precision.",
      "description_length": 448,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 546,
    "min_description_length": 409,
    "avg_description_length": 468.0,
    "embedding_file_size_mb": 0.05842304229736328
  }
}