{
  "package": "sexp_select",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:38.616866",
  "modules": [
    {
      "module_path": "Sexp_select.For_testing.Program.Action",
      "library": "sexp_select",
      "description": "This module defines data types and functions for working with S-expressions in the context of selection and deselection operations. It provides types `ident` and `t` to represent identifiers and actions like `descendants` or `children`, along with serialization and deserialization functions for those types. The `matches` function checks whether a given string matches an identifier pattern, supporting exact strings, sets of strings, or wildcards.",
      "description_length": 449,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sexp_select.For_testing.Parse",
      "library": "sexp_select",
      "description": "Parses a string representation of a sexp-select program into a list of traversal operations that specify either descendant or child relationships, using atoms, sets of atoms, or wildcards. It processes syntax like `foo > bar` into structured directives for navigating s-expressions. This enables precise querying of nested s-expressions based on path-like specifications.",
      "description_length": 371,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sexp_select.For_testing.Program",
      "library": "sexp_select",
      "description": "This module orchestrates sequences of selection and deselection operations on S-expressions, using lists of `Action.t` to encode step-by-step programs. It supports inversion tests and correctness checks by converting programs to and from S-expressions. The child module models the core action types\u2014like `descendants` and `children`\u2014along with identifier patterns that support exact matches, sets, and wildcards. Together, they enable precise manipulation and verification of S-expression traversal logic through concrete operations such as encoding a selection program, applying it, and validating its inverse.",
      "description_length": 611,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sexp_select.For_testing",
      "library": "sexp_select",
      "description": "This module provides reference implementations of `select` and `deselect` operations for S-expressions, ensuring they are exact inverses for testing purposes. It works with `Base.Sexp.t` and string paths, offering `ref_select` and `ref_deselect` to navigate and manipulate structured data, though with higher memory allocation than optimized versions. One child module parses string-based sexp-select programs into traversal directives, supporting path-like queries with atoms, sets, and wildcards. Another executes sequences of selection and deselection actions, modeling traversal logic with invertible operations for correctness verification.",
      "description_length": 645,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sexp_select",
      "library": "sexp_select",
      "description": "This module provides query and transformation operations on S-expressions using string-based selection expressions, enabling precise extraction, filtering, and formatting of structured data. It supports path-like traversal with operations like `select`, `deselect`, and `format`, working directly on `Base.Sexp.t` values. Child modules handle parsing selection programs into traversal directives and executing them with invertible actions, supporting atoms, sets, and wildcards for flexible querying. Example uses include extracting specific fields from nested S-expressions, removing subtrees based on paths, and formatting output for command-line tools.",
      "description_length": 655,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 655,
    "min_description_length": 371,
    "avg_description_length": 546.2,
    "embedding_file_size_mb": 0.018579483032226562
  }
}