{
  "package": "sturgeon",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:06:12.514985",
  "modules": [
    {
      "module_path": "Sturgeon_recipes_command",
      "library": "sturgeon.recipes_command",
      "description": "This module defines entry points for handling session-based commands, primarily through the `command` and `text_command` functions. It works with `Sturgeon.Session.t` sessions and optionally interacts with `Sturgeon.Stui.shell` for text-based command execution. Concrete use cases include setting up command handlers that respond to user input within an interactive session, such as processing shell commands or managing session state transitions.",
      "description_length": 447,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sturgeon_recipes_server",
      "library": "sturgeon.recipes_server",
      "description": "This module implements session-based network servers that handle client connections using custom logic for session initialization and text-based interaction. It provides functions to create servers that either manage sessions with a generic handler or process text input/output through a shell interface. Concrete use cases include building interactive command-line tools over network sockets or managing persistent client sessions in a REPL-like environment.",
      "description_length": 459,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sturgeon_sexp",
      "library": "sturgeon",
      "description": "This module implements a subset of Emacs s-expressions with support for constructing, transforming, and serializing s-exps. It provides functions for recursive traversal and transformation of s-expressions, conversion between strings and s-exps, and low-level input/output operations. Concrete use cases include parsing and generating s-expressions for configuration files, data serialization, and inter-process communication with Emacs-compatible formats.",
      "description_length": 456,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sturgeon",
      "library": "sturgeon",
      "description": "This module implements a bidirectional communication protocol between OCaml programs and Emacs, using s-expressions over a file descriptor. It provides functions to send and receive messages, handle asynchronous events, and evaluate Emacs Lisp expressions from OCaml. Concrete use cases include embedding OCaml logic within Emacs extensions, synchronizing editor state with external tools, and building interactive development environments.",
      "description_length": 440,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sturgeon_stui",
      "library": "sturgeon",
      "description": "This module connects Sturgeon and Inuit, enabling interaction between them through sessions and UI elements. It provides functions to create and manage buffers, cursors, and menus, with support for user input and dynamic content display. Key operations include sending greetings to an Emacs instance, opening and splitting buffers, prompting for file names, and displaying popup menus with custom actions.",
      "description_length": 405,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sturgeon_session",
      "library": "sturgeon",
      "description": "This module implements bidirectional communication sessions using enriched s-expressions that support remote function invocation. It manages remote code references through linear and multi-shot continuations, enabling use cases like distributed computation and streaming. Functions handle session lifecycle, message sending, cancellation, and continuation tracking.",
      "description_length": 365,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 459,
    "min_description_length": 365,
    "avg_description_length": 428.6666666666667,
    "embedding_file_size_mb": 0.022225379943847656
  }
}