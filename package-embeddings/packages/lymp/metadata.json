{
  "package": "lymp",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-06-18T16:28:05.812634",
  "modules": [
    {
      "module_path": "lymp",
      "description": "Provides functions for parsing and validating LYMP (Lisp-like YAML Message Protocol) data, including decoding binary streams into structured records and encoding records into byte sequences. Operates on custom types such as `message`, `field`, and `variant`, with support for nested and repeated fields. Used to serialize and deserialize network communication packets in a custom messaging system.",
      "description_length": 397,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lymp",
      "description": "The module enables interaction with Python objects by allowing function calls, attribute access, and type conversions between Python and OCaml, working with custom types like `pycallable`, `pyobj`, and `pycommunication`. It supports operations such as dereferencing objects, managing communication sessions, and handling data transformations for primitives (strings, integers, floats) and complex structures (tuples). This facilitates seamless integration of Python functionality into OCaml workflows, particularly in scenarios requiring real-time data exchange or hybrid scripting environments.",
      "description_length": 595,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 595,
    "min_description_length": 397,
    "avg_description_length": 496.0,
    "embedding_file_size_mb": 0.0076847076416015625
  }
}