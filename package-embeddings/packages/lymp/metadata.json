{
  "package": "lymp",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1,
  "creation_timestamp": "2025-08-14T22:45:18.640908",
  "modules": [
    {
      "module_path": "Lymp",
      "library": "lymp",
      "description": "This module bridges OCaml and Python runtimes by enabling type-safe manipulation of Python objects through operations like attribute access, method invocation, and data conversion. It handles Python values via dedicated types such as `pyobj` for strings, numbers, collections, and callables, while managing cross-language communication through a context object that supports initialization, cleanup, and error handling. Typical applications include embedding Python scripts in OCaml programs, exchanging structured data between the two languages, and leveraging Python libraries for tasks like numerical computation or machine learning within OCaml workflows.",
      "description_length": 659,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 659,
    "min_description_length": 659,
    "avg_description_length": 659.0,
    "embedding_file_size_mb": 0.014895439147949219
  }
}