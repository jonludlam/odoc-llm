{
  "package": "lymp",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:03:56.613573",
  "modules": [
    {
      "module_path": "Lymp",
      "library": "lymp",
      "description": "This module enables seamless interoperability between OCaml and Python by providing mechanisms to invoke Python functions, access and modify object attributes, and convert Python data types to OCaml primitives. It operates on Python object abstractions (`pyobj`, `pycallable`) and communication handles (`pycommunication`), supporting use cases like embedding Python scripts in OCaml applications, exchanging structured data between runtimes, and dynamically interacting with Python APIs. Key operations include method invocation, attribute manipulation, and controlled lifecycle management of cross-language calls.",
      "description_length": 615,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 615,
    "min_description_length": 615,
    "avg_description_length": 615.0,
    "embedding_file_size_mb": 0.004080772399902344
  }
}