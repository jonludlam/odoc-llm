{
  "package": "sexp_decode",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1,
  "creation_timestamp": "2025-08-14T22:54:17.578312",
  "modules": [
    {
      "module_path": "Sexp_decode.Make",
      "library": "sexp_decode",
      "description": "This module provides monadic parsing combinators for converting S-expressions into structured OCaml data types like records, tuples, lists, and variants. It operates on streams of S-expressions (atoms and nested lists) using a decoder type that sequences parsing steps with error handling, recursion, and support for optional/repeated fields. Typical use cases include deserializing configuration files, translating between incompatible S-expression representations across libraries, and building robust parsers for domain-specific languages encoded in s-expressions.",
      "description_length": 567,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 1,
    "filtered_empty_modules": 1,
    "retention_rate": 0.5
  },
  "statistics": {
    "max_description_length": 567,
    "min_description_length": 567,
    "avg_description_length": 567.0,
    "embedding_file_size_mb": 0.014917373657226562
  }
}