{
  "package": "search",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 11,
  "creation_timestamp": "2025-08-14T23:18:07.275656",
  "modules": [
    {
      "module_path": "Search.Tfidf.Generic.Witness",
      "library": "search",
      "description": "This module implements term frequency-inverse document frequency (TF-IDF) scoring for search queries over a collection of documents. It provides functions to compute document relevance scores based on term frequencies and inverse document frequencies, using a customizable document identifier type. Concrete use cases include ranking text documents by relevance to a search term or query in a full-text search system.",
      "description_length": 417,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Search.Tfidf.Generic.Uid",
      "library": "search",
      "description": "This module manages unique identifiers for documents in a Tfidf search index, ensuring type-safe association between documents and their representations. It provides operations to create and manipulate typed witnesses, convert them to opaque Uid.t values, and compare or check equality of Uid.t values. Concrete use cases include tracking document identities across different stages of indexing and search without exposing their underlying types.",
      "description_length": 446,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Tfidf.Generic",
      "library": "search",
      "description": "This module implements a Tfidf search index with operations to index documents using type-safe unique identifiers, compute relevance scores for search terms, and retrieve ranked results. It works with documents of arbitrary types, string tokens, and opaque document identifiers from the Uid module. Concrete use cases include building full-text search systems where documents are indexed by fields like titles or content, and queries return relevant documents ranked by TF-IDF scores.",
      "description_length": 484,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Search.Tfidf.Mono",
      "library": "search",
      "description": "This module builds and maintains a TF-IDF search index for a single document type. It supports indexing documents with unique identifiers, adding new indexes or documents, and performing text-based searches. Typical use cases include full-text search over a collection of documents like articles or logs, where relevance is determined by term frequency and inverse document frequency.",
      "description_length": 384,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Private.Witness",
      "library": "search",
      "description": "This module implements type-safe dynamic type witnesses with support for generating fresh type identifiers and comparing witnesses for equality. It works with abstract type witnesses and equality proofs between them. Concrete use cases include managing and comparing dynamically generated types in a type-safe manner during program execution.",
      "description_length": 342,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Uids.String",
      "library": "search",
      "description": "Implements comparison and string conversion for string-based unique identifiers. Provides `compare` for lexicographical ordering and `to_string` for direct value extraction. Used to manage and process string keys in search structures.",
      "description_length": 234,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Uids.Int",
      "library": "search",
      "description": "This module defines operations for comparing and converting integer keys. It provides a total ordering function for integers and converts integers to strings. It is used when integer keys need to be compared or displayed, such as in data structures requiring ordered keys or logging key values.",
      "description_length": 294,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Tfidf",
      "library": "search",
      "description": "This module implements a Tfidf search index that supports indexing documents with type-safe unique identifiers, computing relevance scores for search terms, and retrieving ranked results. It operates on documents of arbitrary types, string tokens, and opaque document identifiers. It is suitable for building full-text search systems where documents are indexed by fields such as titles or content, and queries return relevant documents ranked by TF-IDF scores.",
      "description_length": 461,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Uids",
      "library": "search",
      "description": "This module provides comparison and string conversion functions for string and integer keys. It supports lexicographical ordering for strings and total ordering for integers, along with direct value extraction. Used in search structures and ordered data processing where key comparison and representation are required.",
      "description_length": 318,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search.Private",
      "library": "search",
      "description": "Implements type-safe dynamic type witnesses with operations to generate fresh type identifiers and compare witnesses for equality. Works with abstract type witnesses and equality proofs. Used to manage and compare dynamically generated types during program execution.",
      "description_length": 267,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Search",
      "library": "search",
      "description": "This module implements a TF-IDF search index that supports indexing documents with type-safe unique identifiers, computing relevance scores for search terms, and retrieving ranked results. It operates on documents of arbitrary types, string tokens, and opaque document identifiers. Suitable for building full-text search systems where documents are indexed by fields such as titles or content, and queries return relevant documents ranked by TF-IDF scores.",
      "description_length": 456,
      "index": 10,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 484,
    "min_description_length": 234,
    "avg_description_length": 373.0,
    "embedding_file_size_mb": 0.15978717803955078
  }
}