{
  "package": "vcardgen",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-07-15T23:05:41.824377",
  "modules": [
    {
      "module_path": "Vcardgen.Parameter",
      "library": "vcardgen",
      "description": "This module defines a data structure for representing parameters in a vCard, consisting of a name and a list of values. It provides functions to create parameter instances from a name and a single value or multiple values. These parameters are used to store additional details like types or identifiers in vCard properties.",
      "description_length": 323,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vcardgen.Group",
      "library": "vcardgen",
      "description": "This module represents and manipulates groups within a vCard. It provides a type `t` for group data, functions to create a named group, retrieve its string representation, and access an empty group instance. Concrete use cases include organizing vCard entries into logical categories such as \"home\" or \"work\".",
      "description_length": 309,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Vcardgen.Value",
      "library": "vcardgen",
      "description": "This module represents and manipulates values used in vCard data. It provides a way to convert between string values and the abstract type `t`, ensuring proper handling of vCard content. Use this module to construct and serialize individual vCard property values, such as names, email addresses, or phone numbers.",
      "description_length": 313,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vcardgen.Content_line",
      "library": "vcardgen",
      "description": "This module constructs and represents content lines in a vCard, handling groups, property names, parameters, and values. It works with structured data types like records and lists to model vCard components. Concrete use cases include generating formatted vCard properties such as addresses, phone numbers, and email entries with optional grouping and parameters.",
      "description_length": 362,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vcardgen.Vcard",
      "library": "vcardgen",
      "description": "This module constructs and manipulates vCard data structures by appending content lines, structured fields, and binary data such as photos. It supports operations to build vCards incrementally with typed components including names, parameters, values, and optional groups. Concrete use cases include generating vCard files for contact information with embedded photos and structured metadata.",
      "description_length": 392,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vcardgen.Name",
      "library": "vcardgen",
      "description": "This module defines an enumerated type representing standard vCard property names, including both core and extended fields. It provides a conversion function to map these property names to their string representations. This module is used to construct and manipulate vCard data structures by associating properties with their standardized identifiers.",
      "description_length": 351,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Vcardgen",
      "library": "vcardgen",
      "description": "This module assembles vCard data structures by combining groups, parameters, values, and content lines into fully formed vCards. It supports structured field construction, property grouping, and binary data embedding, enabling the creation of rich contact records. Key data types include groups for categorization, parameters for metadata, Values for typed content, and Content_lines for structured properties. Examples include building a work email entry with type parameters or embedding a photo in a vCard with a structured name and address.",
      "description_length": 544,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 544,
    "min_description_length": 309,
    "avg_description_length": 370.57142857142856,
    "embedding_file_size_mb": 0.025856971740722656
  }
}