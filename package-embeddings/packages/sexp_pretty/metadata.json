{
  "package": "sexp_pretty",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T23:00:04.481733",
  "modules": [
    {
      "module_path": "Sexp_pretty.Normalize",
      "library": "sexp_pretty",
      "description": "This module converts s-expressions and comments into a normalized intermediate representation for pretty-printing. It processes `Sexp` and `Comment` variants, handling layout transformations based on configuration. Use it to prepare structured data for formatting with consistent indentation and spacing.",
      "description_length": 304,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sexp_pretty.Sexp_with_layout",
      "library": "sexp_pretty",
      "description": "This module provides functions to pretty-print S-expressions with layout information to various output targets, including formatters, buffers, and output channels. It works with `Sexplib.Sexp.With_layout.t_or_comment` values, which represent S-expressions annotated with formatting hints. Concrete use cases include generating human-readable output for configuration files, source code printers, and structured data serialization with preserved formatting.",
      "description_length": 456,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sexp_pretty.Config",
      "library": "sexp_pretty",
      "description": "This module configures pretty-printing parameters for S-expressions, supporting customization of visual formatting through options like color schemes, indentation rules, and separators. It operates on configuration types that define thresholds for atom/depth limits, alignment strategies, and comment-handling behaviors, with utilities to convert these settings to/from S-expressions. Typical use cases include adjusting output readability with colors, enforcing formatting consistency via alignment rules, or tuning thresholds to control the compactness of deeply nested data.",
      "description_length": 577,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sexp_pretty",
      "library": "sexp_pretty",
      "description": "This module pretty-prints S-expressions to various outputs such as formatters, buffers, and channels, supporting configurable formatting through color, indentation, and layout rules. It operates on S-expressions and annotated layout-aware variants, enabling use cases like readable configuration file generation and structured data serialization. Key functions include `pp_formatter`, `pp_buffer`, and `pretty_string`, with configuration options to control formatting behavior.",
      "description_length": 477,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 577,
    "min_description_length": 304,
    "avg_description_length": 453.5,
    "embedding_file_size_mb": 0.05841064453125
  }
}