{
  "package": "aws-elasticache",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 396,
  "creation_timestamp": "2025-08-18T19:30:23.045511",
  "modules": [
    {
      "module_path": "Aws_elasticache.Types.EC2SecurityGroupList",
      "library": "aws-elasticache",
      "description": "This module handles lists of EC2 security group data structures, providing direct conversions to and from XML, JSON, and AWS query formats. It includes parsing from XML nodes, JSON serialization and deserialization, and query parameter construction for API interactions. Concrete use cases include processing AWS ElastiCache API responses and preparing security group data for requests.",
      "description_length": 386,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateAction",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an update action in a caching service, with fields for tracking update metadata like severity, status, timestamps, and affected nodes. It provides functions to construct, parse, and serialize these update records for API interactions. Use cases include managing service updates, monitoring update progress, and integrating with configuration management systems.",
      "description_length": 411,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroupList",
      "library": "aws-elasticache",
      "description": "This module handles serialization and deserialization of a list of global node groups. It provides functions to convert between XML, JSON, and query string representations of this list. Use this when working with AWS ElastiCache API operations that require transmitting or parsing global node group configurations in different formats.",
      "description_length": 335,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeServiceUpdatesMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying service updates in a caching system, supporting filtering by update name, status, and pagination. It provides functions to construct, serialize, and parse these queries in JSON and XML formats. Use this module to retrieve and process service update information from a caching service API.",
      "description_length": 338,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition when the quota for cache parameter groups is exceeded. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module to handle and propagate quota exceeded errors in API responses related to cache parameter group limits.",
      "description_length": 348,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupMembership",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a security group membership with optional security group ID and status fields. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. It is used to manage security group associations for ElastiCache clusters by serializing and deserializing membership data during API interactions.",
      "description_length": 381,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupNameMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling cache parameter group names in ElastiCache API operations. It provides functions to create, parse, and serialize the structure to query parameters or JSON, specifically for use when managing cache parameter group configurations. The module works with XML input for parsing and outputs structured data for API requests or JSON serialization.",
      "description_length": 390,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PendingModifiedValues",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing pending configuration changes for an ElastiCache cluster, including fields like node count, node IDs to remove, engine version, node type, and auth token status. It provides functions to construct, parse, and serialize these values to and from XML, JSON, and query parameters. It is used to manage and apply pending modifications to ElastiCache resources programmatically.",
      "description_length": 419,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of global node group IDs in AWS ElastiCache. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML. It works directly with string lists and is used when managing replication groups across multiple regions.",
      "description_length": 286,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling update actions in ElastiCache, specifically storing an optional marker and a list of update actions. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when retrieving or processing batches of update actions from ElastiCache, particularly for pagination and response handling.",
      "description_length": 404,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FailoverGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of a failover operation for a global replication group in Amazon ElastiCache. It provides functions to create, parse, and serialize the result, which includes an optional global replication group object. Use this module when managing cross-region replication failovers and processing their responses in JSON or XML formats.",
      "description_length": 354,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebalanceSlotsInGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for initiating a rebalance operation on a global replication group in ElastiCache. It includes functions to construct, serialize, and parse messages containing the group ID and an immediate application flag. It is used to send rebalance commands to AWS ElastiCache via the API, specifically to redistribute slots across clusters in a global setup.",
      "description_length": 384,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a node group in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, or back from JSON. Concrete use cases include signaling errors when a requested node group does not exist in AWS ElastiCache operations.",
      "description_length": 355,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserList",
      "library": "aws-elasticache",
      "description": "This module handles lists of user data in AWS ElastiCache operations. It provides functions to parse, convert, and serialize user lists to and from XML, JSON, and query formats. Use this module when managing user configurations or retrieving user lists from ElastiCache service responses.",
      "description_length": 288,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheSubnetGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing cache subnet group requests, including optional fields for the group name, maximum record count, and pagination marker. It provides functions to construct, serialize, and parse these requests in various formats, including JSON and XML. Concrete use cases include configuring and querying cache subnet groups in AWS ElastiCache.",
      "description_length": 379,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceLinkedRoleNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a service-linked role in AWS ElastiCache operations. It provides functions to construct, parse, and serialize unit values to query parameters or JSON, primarily used for error signaling in API interactions. Concrete use cases include error handling when a required IAM role is missing during cache cluster management.",
      "description_length": 402,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseNodeGroupsInGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying a global replication group by increasing the number of node groups in an ElastiCache setup. It includes functions to construct, serialize, and parse messages containing the target group ID, node group count, optional regional configurations, and an apply flag. It is used specifically when adjusting the topology of a global Redis replication group across regions.",
      "description_length": 415,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NoOperationFault",
      "library": "aws-elasticache",
      "description": "This module defines a simple type `t` representing an empty value, along with basic conversion and parsing functions. It is used to handle cases where an operation should have no effect or return, such as signaling successful completion without data. The module works with unit values and supports serialization to JSON and query formats, commonly used in API response handling.",
      "description_length": 378,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FilterList",
      "library": "aws-elasticache",
      "description": "This module handles lists of filters for Elasticache operations, providing functions to convert filter lists to and from JSON and query formats. It supports parsing XML responses into filter lists and constructing filter-based queries. Concrete use cases include processing AWS API responses and building requests that require filtering Elasticache resources by criteria like cluster ID or node type.",
      "description_length": 400,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type and operations for constructing, serializing, and parsing messages used to modify an ElastiCache cluster configuration. It supports fields such as cache node count, security groups, maintenance windows, and version settings, enabling precise control over cluster updates. Use cases include programmatically resizing a cache cluster, updating security configurations, or changing maintenance settings via AWS API interactions.",
      "description_length": 459,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNode",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a reserved cache node in Amazon ElastiCache, including attributes like node type, duration, pricing, and state. It provides functions to construct, parse, and serialize these records to and from XML, JSON, and AWS query formats. Concrete use cases include managing ElastiCache reservations, tracking recurring charges, and handling billing information programmatically.",
      "description_length": 419,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionList",
      "library": "aws-elasticache",
      "description": "This module handles lists of `UpdateAction` values, providing direct conversions to and from XML, JSON, and query formats. It includes parsing from XML nodes, JSON serialization and deserialization, and query parameter construction. Useful when managing cache cluster updates through API requests or response handling.",
      "description_length": 318,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AddTagsToResourceMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for adding tags to an ElastiCache resource, consisting of a resource name and a list of tags. It provides functions to construct, parse, and serialize the structure to query parameters or JSON. Use this module when interacting with AWS ElastiCache APIs to manage resource tags programmatically.",
      "description_length": 331,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.StartMigrationMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a request to start a migration in ElastiCache, specifically containing a replication group ID and a list of customer node endpoints. It provides functions to construct the request, convert it to query parameters or JSON, and parse it from XML or JSON input. This module is used when initiating a migration process by providing the necessary endpoint information for data transfer.",
      "description_length": 430,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling cache subnet quota exceeded faults in AWS ElastiCache. It provides operations to create, parse, and serialize the error in various formats including JSON and query strings. Use this module when interacting with ElastiCache APIs to detect and handle quota limit errors during cache subnet group creation or modification.",
      "description_length": 374,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PurchaseReservedCacheNodesOfferingResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of purchasing a reserved cache node offering, primarily by encapsulating an optional `ReservedCacheNode` value. It provides functions to construct, serialize, and parse this result using XML, JSON, and AWS query formats. Use this module when processing responses from AWS ElastiCache after attempting to reserve cache nodes.",
      "description_length": 355,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.OutpostArnsList",
      "library": "aws-elasticache",
      "description": "This module handles lists of outpost ARNs in AWS ElastiCache operations. It provides functions to convert, parse, and serialize string lists to and from XML, JSON, and query formats. Use this module when working with ElastiCache API requests and responses that require handling multiple outpost ARNs.",
      "description_length": 300,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EventList",
      "library": "aws-elasticache",
      "description": "This module defines a list of Event.t values and provides functions to convert between XML, JSON, and query string formats. It supports parsing event data from XML nodes, serializing to AWS query format, and converting to and from JSON structures. It is used to handle event records returned by ElastiCache API operations like describing events.",
      "description_length": 345,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidGlobalReplicationGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling invalid global replication group states in ElastiCache. It includes operations to create, parse, and convert the error to query, JSON formats. It is used when interacting with ElastiCache's global replication group APIs to ensure correct state transitions and validations.",
      "description_length": 327,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteUserMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for deleting a user in ElastiCache by user ID. It provides functions to create, parse, and convert the structure to query parameters or JSON format. Use this module when interacting with ElastiCache's user deletion API, particularly for constructing or processing delete user requests.",
      "description_length": 322,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersionList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache engine versions, providing functions to parse XML input into version lists, convert version lists to query parameters or JSON format, and construct version lists from JSON data. It works directly with lists of `CacheEngineVersion.t` records, which represent specific database engine versions available in Amazon ElastiCache. Use this module when retrieving or processing supported cache engine versions from AWS ElastiCache API responses.",
      "description_length": 473,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheParameterGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid cache parameter group state errors. It provides operations to construct, parse, and convert error data to query parameters or JSON format. Use this module when interacting with AWS ElastiCache APIs to manage and respond to parameter group validation failures.",
      "description_length": 337,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module represents a message containing a list of cache parameter groups and an optional marker for pagination. It provides functions to construct, parse, and serialize the message to query parameters or JSON, as well as conversion from JSON. It is used when retrieving or managing cache parameter group configurations in ElastiCache.",
      "description_length": 338,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `UserGroupAlreadyExistsFault` error in AWS ElastiCache. It provides operations to create, parse, and convert the error type to query parameters, JSON, and back, all centered around a unit type representing the presence of this specific error. It is used when interacting with ElastiCache APIs to manage user groups, ensuring correct error signaling when a user group already exists.",
      "description_length": 451,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeQuotaForClusterExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"NodeQuotaForClusterExceededFault\" error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. Use this module when interacting with AWS ElastiCache APIs to manage and respond to node quota exceeded error conditions programmatically.",
      "description_length": 369,
      "index": 34,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeSnapshotsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to describe ElastiCache snapshots, including optional filters like replication group ID, cache cluster ID, and snapshot name. It provides functions to construct, serialize, and parse these parameters for use in API requests. Concrete use cases include querying AWS ElastiCache for snapshots based on specific identifiers or configuration options.",
      "description_length": 409,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateType",
      "library": "aws-elasticache",
      "description": "This module defines a single enumerated type `t` with one variant `Security_update` and provides bidirectional conversions between strings and this type. It includes functions for parsing, serialization to JSON and query formats, and XML parsing, ensuring consistent handling of service update types in API interactions. It is used specifically for representing and converting service update types in ElastiCache service integrations.",
      "description_length": 434,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the status of node updates in a distributed system, with specific values like `In_progress`, `Complete`, and `Stopped`. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These capabilities support integration with APIs and configuration systems that require status reporting or state synchronization.",
      "description_length": 451,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSubnetGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache subnet group in Amazon ElastiCache. It includes operations to construct, parse, and serialize the result, which contains an optional cache subnet group object. Use this module when managing ElastiCache subnet configurations programmatically.",
      "description_length": 292,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ParametersList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache parameters, providing operations to convert between XML, JSON, and query formats. It works with lists of `Parameter.t` values, supporting serialization and deserialization for use in API requests and responses. Concrete use cases include processing parameter lists when modifying cache clusters or retrieving configuration details from AWS.",
      "description_length": 381,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cases where a requested ElastiCache snapshot does not exist. It includes operations for creating a unit value, parsing input into a unit, and converting unit values to query or JSON formats. It is used to represent and serialize the absence of a snapshot in API responses and requests.",
      "description_length": 355,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeQuotaForCustomerExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `NodeQuotaForCustomerExceededFault` error in AWS ElastiCache. It includes operations for creating, parsing, and converting the error to query or JSON formats. It is used when handling API responses that indicate a node quota has been exceeded.",
      "description_length": 312,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cache security group not found errors. It provides operations to convert values to query parameters, JSON, and back from JSON, always resulting in a unit value. It is used to represent and serialize errors related to missing cache security groups in API responses.",
      "description_length": 334,
      "index": 42,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ListAllowedNodeTypeModificationsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to list allowed node type modifications in ElastiCache. It includes operations to create, parse, and serialize the structure to query or JSON formats. It is used when querying AWS ElastiCache for valid node type changes for a specific cache cluster or replication group.",
      "description_length": 333,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidUserStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid user state errors. It provides operations to construct, parse, and convert error data to query parameters, JSON, and back. Use this module when interacting with AWS ElastiCache APIs to manage error responses related to user state validation.",
      "description_length": 319,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebootCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to reboot specific nodes in a cache cluster, including the cluster ID and a list of node IDs. It provides functions to construct, serialize, and parse this structure in various formats such as JSON, query strings, and XML. It is used when issuing a reboot command to selected nodes in an ElastiCache cluster.",
      "description_length": 371,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RegionalConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring regional settings in a distributed caching environment. It includes fields for replication group ID, region, and resharding configuration, along with functions to construct, serialize, and convert the structure to and from JSON and XML formats. It is used when managing cross-region replication and scaling operations in a caching cluster.",
      "description_length": 392,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CustomerNodeEndpoint",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a customer node endpoint with optional address and port fields. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used when handling endpoint information for nodes in ElastiCache configurations, particularly during API request and response processing.",
      "description_length": 368,
      "index": 47,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMembership",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache security group membership with optional fields for the security group name and status. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used when managing cache clusters that are associated with security groups in Amazon ElastiCache.",
      "description_length": 359,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUserGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing user group queries in Amazon ElastiCache, including optional fields for user group ID, maximum records, and pagination marker. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and XML. It is used to interact with ElastiCache's API for managing user groups, particularly in scenarios involving pagination and filtering of results.",
      "description_length": 428,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EngineDefaults",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for holding engine defaults in ElastiCache, including cache parameter group family, marker, parameters, and cache node type-specific parameters. It provides functions to construct, parse, and serialize these defaults to and from JSON and query formats. It is used to retrieve and manage default configuration settings for ElastiCache clusters and parameter groups.",
      "description_length": 401,
      "index": 50,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RemoveReplicasList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string values representing replica IDs to be removed from an ElastiCache replication group. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when modifying replication groups by removing specific replicas, ensuring the correct formatting for AWS API requests.",
      "description_length": 364,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ListTagsForResourceMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying an ElastiCache resource when listing tags. It includes functions to create, serialize, and parse the resource name in various formats like JSON, XML, and query parameters. It is used specifically to retrieve tags associated with an ElastiCache resource by providing the resource's ARN or name.",
      "description_length": 345,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateSeverity",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` representing severity levels of service updates, with variants Critical, Important, Medium, and Low. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. Use cases include handling service update severity values when interacting with AWS ElastiCache APIs, particularly for parsing responses or constructing requests.",
      "description_length": 443,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CustomerNodeEndpointList",
      "library": "aws-elasticache",
      "description": "This module handles lists of customer node endpoints in ElastiCache, providing functions to parse XML input into endpoint lists, convert endpoint lists to query parameters or JSON format, and construct endpoint lists from JSON data. It works directly with `CustomerNodeEndpoint.t` records and standard AWS XML, JSON, and query types. Use this module when managing ElastiCache replication groups or clusters that require custom endpoint configurations in API requests or responses.",
      "description_length": 480,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache node group members, providing direct conversions to and from XML, JSON, and query formats. It supports parsing node group member data from XML nodes and serializing them into structured JSON or AWS query parameters. Concrete use cases include processing ElastiCache API responses and constructing requests for node group configuration updates.",
      "description_length": 384,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsToRetainList",
      "library": "aws-elasticache",
      "description": "This module handles lists of node group identifiers for ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when managing node groups during ElastiCache cluster modifications or backups.",
      "description_length": 283,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type for configuring a new ElastiCache cluster, including required identifiers, availability settings, node configuration, security groups, and backup options. It provides functions to construct, serialize, and parse cluster configuration data for use with AWS ElastiCache APIs. Use this module when creating cache clusters programmatically, especially for setting up replication, specifying subnets, or restoring from snapshots.",
      "description_length": 458,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CompleteMigrationResponse",
      "library": "aws-elasticache",
      "description": "This module handles responses from completing a migration in a Redis replication group. It provides constructors, JSON and XML parsers, and query builders for working with replication group data. Use it to process and serialize migration completion results from AWS ElastiCache APIs.",
      "description_length": 283,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DisassociateGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of disassociating a global replication group in Amazon ElastiCache. It includes a single optional field representing the updated global replication group. Use this module to parse, construct, and serialize responses when managing replication group disassociations in ElastiCache.",
      "description_length": 310,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebalanceSlotsInGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of rebalancing slots in a global replication group, primarily by providing a data structure that optionally contains a `GlobalReplicationGroup`. It includes functions to construct, parse, and serialize the result for use in API responses or further processing. Use cases include managing Redis cluster slot rebalancing operations and integrating with AWS ElastiCache's global replication APIs.",
      "description_length": 424,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheClusterStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid cache cluster state errors. It provides operations to convert values to query parameters, JSON, and back, ensuring proper serialization and deserialization. It is used when interacting with ElastiCache services to manage error states related to cache cluster operations.",
      "description_length": 348,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ParameterNameValueList",
      "library": "aws-elasticache",
      "description": "This module handles lists of parameter name-value pairs for ElastiCache operations. It provides functions to parse XML nodes into parameter lists, convert them to query parameters or JSON format, and construct parameter lists from JSON. It is used when configuring or modifying ElastiCache clusters where parameter settings need to be specified or retrieved.",
      "description_length": 358,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.BatchApplyUpdateActionMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying which replication groups and cache clusters to apply a service update to, along with the update name. It includes functions to construct, parse, and serialize the structure in various formats such as JSON and query parameters. It is used when applying batch service updates in ElastiCache to target specific groups and clusters.",
      "description_length": 380,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupInfo",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing global replication group information with optional fields for the group ID and member role. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. This module is used to handle configuration and metadata for global replication groups in ElastiCache operations.",
      "description_length": 366,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing cache security group responses in AWS ElastiCache. It provides operations to construct, parse, and serialize messages containing an optional marker and a list of cache security groups. Use this module when processing API responses to list cache security groups or when building requests that require message formatting in JSON, query, or XML.",
      "description_length": 391,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the `UserGroupNotFoundFault` error in AWS ElastiCache. It provides operations for creating, parsing, and converting the error to query parameters or JSON format. Use this module when interacting with AWS ElastiCache APIs to handle cases where a user group does not exist.",
      "description_length": 341,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SlotMigration",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the progress of a slot migration operation, primarily used in ElastiCache management. It includes functions to create, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include tracking and serializing migration progress data during cache cluster operations.",
      "description_length": 352,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, serialization, and conversion of lists of ElastiCache update action statuses. It provides operations to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when working with ElastiCache update status responses in different data formats.",
      "description_length": 313,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache node group, including its ID, status, endpoints, slot configuration, and member nodes. It provides functions to construct, parse, and serialize node group data for use in API requests and responses. Concrete use cases include managing cluster topology and handling cache node group information during deployment or monitoring workflows.",
      "description_length": 401,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.KeyList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string-based keys used in ElastiCache operations, providing functions to convert these lists to and from JSON and query formats. It supports parsing key lists from XML nodes and serializing them into AWS query parameters or JSON arrays. Use this module when working with ElastiCache API requests that require key-value tag lists or filtering by keys.",
      "description_length": 379,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReservedCacheNodesOfferingsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying reserved cache node offerings in Amazon ElastiCache. It includes fields to filter results by offering ID, cache node type, duration, product description, and offering type, along with pagination controls. The module supports converting the structure to and from JSON and query parameters, enabling integration with AWS API requests and responses.",
      "description_length": 396,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition where a cache cluster already exists. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module when handling API responses that indicate duplicate cache cluster creation attempts.",
      "description_length": 312,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOffering",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a reserved cache node offering in AWS ElastiCache, including properties like offering ID, cache node type, duration, pricing, and recurring charges. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include retrieving and configuring reserved cache node offerings via AWS API calls.",
      "description_length": 412,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEventsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring event description requests in Amazon ElastiCache. It includes fields for filtering events by source, time range, and record limits, along with functions to construct, serialize, and parse these configurations. It is used to query ElastiCache event data with precise constraints.",
      "description_length": 331,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.MultiAZStatus",
      "library": "aws-elasticache",
      "description": "This module defines a polymorphic variant type `t` with two states, `Enabled` and `Disabled`, representing Multi-AZ configuration status. It provides bidirectional conversions between strings and the `t` type, along with serialization and deserialization functions for JSON, XML, and query parameters. It is used to interpret and format Multi-AZ settings when interacting with ElastiCache APIs, particularly during resource creation or status retrieval.",
      "description_length": 453,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the status of update actions in a system, with specific values like `Complete`, `In_progress`, and `Scheduled`. It provides functions to convert between string representations and the enumerated type, along with serialization and deserialization to JSON and query formats. This module is used to track and manage the lifecycle of update operations in deployment or configuration management workflows.",
      "description_length": 452,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing cache subnet groups, including optional pagination markers. It provides operations to construct, serialize, and deserialize these messages to and from JSON, query parameters, and XML. Use this module when interacting with AWS ElastiCache API responses that include lists of cache subnet groups with optional pagination.",
      "description_length": 389,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheParameterGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing cache parameter groups in Amazon ElastiCache, with fields for filtering by group name, limiting results, and pagination. It provides functions to construct, serialize, and parse this structure to and from JSON, query parameters, and XML. Use this when configuring or retrieving ElastiCache parameter group details programmatically.",
      "description_length": 383,
      "index": 78,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteSnapshotMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a request to delete a snapshot by name. It provides functions to construct, parse, and serialize the request in various formats, including JSON and query parameters. It works with XML input for parsing and outputs AWS-specific query and JSON types. A concrete use case is forming a deletion request for an ElastiCache snapshot when interacting with AWS APIs.",
      "description_length": 408,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsToRemoveList",
      "library": "aws-elasticache",
      "description": "This module handles lists of node group identifiers for removal in ElastiCache operations. It provides functions to convert, parse, and serialize these lists to and from JSON, query parameters, and XML. Use this module when configuring or modifying ElastiCache clusters that require specifying node groups to remove.",
      "description_length": 316,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ClusterQuotaForCustomerExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a customer exceeds their cluster quota in a service. It includes operations to create, parse, and convert the error to query parameters or JSON format. Use this module to manage and respond to cluster quota exceeded errors in API requests.",
      "description_length": 329,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Parameter",
      "library": "aws-elasticache",
      "description": "This module defines a parameter type with optional fields like name, value, description, and data type, representing configuration settings for ElastiCache. It provides functions to construct, parse, and convert parameters to and from JSON and query formats. It is used to manage ElastiCache cluster configuration parameters programmatically.",
      "description_length": 342,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersion",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing cache engine versions, with fields for engine name, version, parameter group family, and associated descriptions. It provides constructors, JSON and XML parsers, and query generators for working with AWS ElastiCache API operations. Concrete use cases include retrieving and configuring cache engine version details when managing ElastiCache clusters or parameter groups.",
      "description_length": 424,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache cluster IDs for Amazon ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. It is used when managing multiple cache clusters, such as in batch operations or responses listing associated clusters.",
      "description_length": 319,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetList",
      "library": "aws-elasticache",
      "description": "This module handles the serialization and deserialization of a list of subnet configurations. It provides functions to convert subnet lists to and from XML, JSON, and query parameters. It is used when managing subnet groups in ElastiCache, such as when creating or updating a cache subnet group with a list of subnets.",
      "description_length": 318,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotFeatureNotSupportedFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cases where a snapshot feature is not supported. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. Use this when interacting with APIs that require feature capability checks, specifically for serializing and deserializing unsupported snapshot responses.",
      "description_length": 387,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheSecurityGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing cache security groups in Amazon ElastiCache, with fields for filtering by group name, limiting result count, and pagination. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and back from JSON. Concrete use cases include building API requests to list cache security groups and handling paginated responses.",
      "description_length": 405,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cache cluster not found errors. It provides operations to convert values to query parameters, JSON, and back from JSON, while parsing always returns `unit`. It is used to represent and serialize error conditions when a cache cluster does not exist.",
      "description_length": 318,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a global replication group with fields for identifiers, status, configuration settings, and member lists. It provides functions to construct, parse, and convert the structure to and from JSON, query formats, and XML nodes. Use this module to manage global replication group configurations in AWS ElastiCache, including retrieving and serializing group metadata and member nodes.",
      "description_length": 428,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing an ElastiCache replication group, with fields for metadata like status, configuration endpoint, and encryption settings, and functions to construct, parse, and serialize these records. It works with structured data types such as strings, integers, booleans, lists, and nested records for related components like node groups and cluster IDs. Concrete use cases include modeling replication group configurations for AWS ElastiCache, enabling creation from and conversion to JSON or XML for API interactions.",
      "description_length": 552,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateList",
      "library": "aws-elasticache",
      "description": "This module handles lists of service updates in Amazon ElastiCache, providing functions to convert, parse, and serialize service update data. It works with XML nodes, JSON values, and query parameters, enabling interaction with ElastiCache's API for managing service updates. Use cases include retrieving service update metadata from API responses and preparing service update data for API requests.",
      "description_length": 399,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the status of a service update, with values for available, cancelled, and expired states. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON and query formats. This module is used to handle service update status values when interacting with ElastiCache service update APIs, such as parsing responses or constructing requests.",
      "description_length": 447,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SlaMet",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration type `t` with values `Yes`, `No`, and `N_a`, representing SLA compliance states. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These operations support handling SLA compliance status in API requests and responses, particularly when interacting with AWS ElastiCache services.",
      "description_length": 412,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupList",
      "library": "aws-elasticache",
      "description": "This module defines a list of NodeGroup values with operations to convert to and from XML, JSON, and query parameters. It supports parsing AWS ElastiCache node group lists from XML, serializing them to JSON or query format, and constructing from JSON. Concrete use cases include handling ElastiCache API responses and preparing node group data for API requests.",
      "description_length": 361,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling messages containing a list of cache clusters, including an optional marker for pagination. It provides functions to construct, parse, and serialize these messages to and from XML, JSON, and query parameters. It is used when retrieving paginated lists of cache clusters from the ElastiCache API, where the marker supports iterating through large result sets.",
      "description_length": 407,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheEngineVersionsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to describe cache engine versions, including optional fields like engine name, version, parameter group family, and pagination controls. It provides functions to construct, serialize, and parse these parameters for use in API requests. Typical use cases include querying specific engine versions or listing available versions with optional filtering and pagination.",
      "description_length": 428,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupAlreadyUnderMigrationFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error case where a replication group is already undergoing migration. It provides operations to construct, parse, and serialize this error state into query parameters or JSON format. Use this when managing replication group migrations to detect and handle overlapping migration attempts.",
      "description_length": 356,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of deleting a replication group in Amazon ElastiCache. It provides functions to construct, parse, and serialize the result, which includes an optional replication group object. Use this module when managing ElastiCache replication groups programmatically, particularly when handling deletion responses in XML or JSON format.",
      "description_length": 355,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeIdsList",
      "library": "aws-elasticache",
      "description": "This module defines a list of cache node IDs as a list of strings. It provides functions to convert the list into query parameters, parse it from XML nodes, and serialize or deserialize it to and from JSON. It is used when managing clusters or replication groups in ElastiCache, where specific cache node identifiers need to be referenced.",
      "description_length": 339,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a replication group already exists. It works with unit type values and provides operations to create, parse, and convert the error to query parameters or JSON format. Concrete use cases include error handling during replication group creation in ElastiCache service interactions.",
      "description_length": 369,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUserGroupsResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing user groups in ElastiCache, providing access to the list of user groups and an optional marker for pagination. It includes functions to construct, parse, and convert the result to and from JSON and query formats. Use this module when retrieving user group information from ElastiCache to process or pass the data between API calls and client logic.",
      "description_length": 393,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReplicationGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing replication groups in Amazon ElastiCache, with optional fields for filtering by group ID, limiting results, and pagination. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and back, enabling precise API requests and responses. It is used when querying ElastiCache replication groups with specific filters and pagination controls.",
      "description_length": 429,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidParameterCombinationException",
      "library": "aws-elasticache",
      "description": "This module defines a single data type representing an exception for invalid parameter combinations in API requests. It includes operations to construct, parse, and serialize the exception message using XML, JSON, and query formats. Concrete use cases include handling and transmitting error responses from Elasticache API calls due to conflicting or unsupported input parameters.",
      "description_length": 380,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionResultsMessage",
      "library": "aws-elasticache",
      "description": "This module represents the results of update actions in ElastiCache, containing lists of both processed and unprocessed update actions. It provides functions to construct, parse, and serialize these results into query parameters, JSON, or XML formats. It is used to handle responses from ElastiCache API operations that manage cache cluster updates.",
      "description_length": 349,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUpdateActionsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for filtering and describing update actions in ElastiCache, including fields like service update name, replication group IDs, cache cluster IDs, engine, and status. It provides functions to construct, parse, and serialize the structure for use in API requests, specifically for querying and filtering update actions based on time, status, and target resources. Use cases include retrieving pending or completed update actions for specific clusters or replication groups, and filtering by service update status or scheduled time range.",
      "description_length": 571,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupIdsList",
      "library": "aws-elasticache",
      "description": "Handles lists of security group IDs for ElastiCache configurations. It provides parsing from XML nodes, conversion to query parameters and JSON, and extraction from JSON values. Used when managing cache clusters or replication groups that require security group associations.",
      "description_length": 275,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizationNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling cases where authorization is not found in API responses. It provides functions to construct, parse, and serialize this error state, primarily used when interacting with ElastiCache service APIs. The operations support converting the error to query parameters or JSON format, and validating against expected response structures.",
      "description_length": 382,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupIdListInput",
      "library": "aws-elasticache",
      "description": "This module defines a list of string-based user group IDs and provides functions to convert the list to and from JSON and query formats, parse it from XML nodes, and construct it from arbitrary data. It works directly with AWS-specific string types and standard list structures. It is used when handling user group ID inputs in API requests to AWS ElastiCache, particularly for batch operations requiring multiple user group identifiers.",
      "description_length": 437,
      "index": 108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DefaultUserAssociatedToUserGroupFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition where a default user is associated with a user group. It provides functions to construct, parse, and convert the error to query parameters, JSON, and back from JSON. Use this module to handle and propagate errors related to user group associations in ElastiCache configurations.",
      "description_length": 351,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheParameterGroupResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for creating a cache parameter group, containing an optional `CacheParameterGroup` record. It provides functions to construct, parse, and serialize the result to query parameters or JSON, and includes JSON deserialization. It is used to handle responses from the ElastiCache API when creating parameter groups, extracting and formatting the resulting group data.",
      "description_length": 396,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebootCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of rebooting a cache cluster, containing an optional `CacheCluster` record. It provides functions to construct, parse, and serialize the result in various formats including JSON, XML, and query parameters. It is used to handle responses from the ElastiCache service after initiating a cache cluster reboot operation.",
      "description_length": 377,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `UserAlreadyExistsFault` error in AWS ElastiCache. It provides operations to create, parse, and convert the error type to query parameters, JSON, and back from JSON. Use this module when interacting with ElastiCache APIs to manage user-related errors.",
      "description_length": 320,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotArnsList",
      "library": "aws-elasticache",
      "description": "This module handles lists of snapshot ARNs in AWS ElastiCache operations. It provides functions to convert ARN lists to and from JSON and query formats, and includes parsing from XML nodes. It is used when managing snapshots, such as listing or referencing multiple snapshots by their ARNs in API requests or responses.",
      "description_length": 319,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupMemberList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of global replication group members in AWS ElastiCache. It provides operations to convert between XML, JSON, and internal data representations, specifically working with lists of `GlobalReplicationGroupMember.t` values. It is used when managing cross-region replication configurations in ElastiCache.",
      "description_length": 361,
      "index": 114,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error case where a reserved cache node already exists. It provides operations to create, parse, and convert the error to query parameters or JSON format. Use this module when managing cache node reservations to detect and handle duplicate reservation attempts.",
      "description_length": 329,
      "index": 115,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingList",
      "library": "aws-elasticache",
      "description": "This module handles lists of reserved cache node offerings in AWS ElastiCache. It provides operations to convert, parse, and serialize these lists to and from XML, JSON, and query formats. Use this module when retrieving or processing available reserved cache node offerings from the AWS API.",
      "description_length": 292,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeList",
      "library": "aws-elasticache",
      "description": "This module defines a list of cache nodes with operations to parse, convert to query format, serialize to JSON, and deserialize from JSON. It works with XML nodes, JSON values, and AWS query parameters to handle cache node data. Concrete use cases include processing AWS ElastiCache API responses, building requests for cache node management, and converting node data for storage or transmission.",
      "description_length": 396,
      "index": 117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ConfigureShard",
      "library": "aws-elasticache",
      "description": "This module defines a record type for configuring Redis shards in AWS ElastiCache, including node group ID, replica count, and optional availability zones or outpost ARNs. It provides functions to construct, serialize, and parse shard configurations, supporting operations needed to modify cluster topology. Use cases include updating replica counts and specifying placement for sharded Redis clusters.",
      "description_length": 402,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupNotUnderMigrationFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling errors related to replication groups not being under migration. It provides operations for constructing, parsing, and converting error values to query parameters or JSON format. Use this module when interacting with AWS ElastiCache APIs to manage error states in replication group migration workflows.",
      "description_length": 371,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `SnapshotAlreadyExistsFault` error in AWS ElastiCache. It provides operations to create, parse, and convert the error type to query parameters, JSON, and back from JSON. Use this module when managing ElastiCache snapshots to detect and handle cases where a snapshot with the same name already exists.",
      "description_length": 369,
      "index": 120,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Subnet",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a subnet with optional identifier, availability zone, and outpost fields. It provides functions to construct, parse, and convert subnet data to and from XML, JSON, and query formats. It is used when managing ElastiCache subnet groups and their configuration in AWS deployments.",
      "description_length": 327,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverNotAvailableFault",
      "library": "aws-elasticache",
      "description": "This module defines a simple type `t` representing the absence of a value, along with functions to construct, parse, and convert values to query parameters, JSON, and back. It is used to handle cases where a specific operation or response has no associated data, such as signaling an error condition that carries no additional information. The module supports serialization and deserialization for use in API interactions where empty responses or markers are needed.",
      "description_length": 466,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeSnapshotList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache node snapshots, providing direct conversions to and from XML, JSON, and query formats. It supports parsing snapshot lists from XML nodes and serializing them for API requests or JSON responses. Use this module when working with ElastiCache snapshot data in different wire formats, such as handling API input/output or processing batch snapshot information.",
      "description_length": 397,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupOutpostArnList",
      "library": "aws-elasticache",
      "description": "This module handles lists of AWS ElastiCache replication group outpost ARNs, represented as string lists. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. It is used when managing replication group configurations that span multiple AWS Outposts.",
      "description_length": 312,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetNotAllowedFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling subnet not allowed errors in API responses. It provides operations to convert error data to query parameters, JSON format, and back from JSON. It is used when interacting with AWS ElastiCache services to manage subnet group configurations.",
      "description_length": 309,
      "index": 125,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateUserMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a user in ElastiCache, including fields like user ID, name, engine, passwords, and access permissions. It provides functions to construct, parse, and serialize the structure to and from JSON, query parameters, and XML. Concrete use cases include configuring user authentication and access control when setting up or modifying ElastiCache clusters.",
      "description_length": 397,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheSecurityGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a message to delete a cache security group, containing a single field for the security group name. It provides functions to construct the message, convert it to query parameters or JSON format, and parse it from XML or JSON input. This module is used when issuing a request to remove a security group in an Amazon ElastiCache environment.",
      "description_length": 388,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserIdListInput",
      "library": "aws-elasticache",
      "description": "Handles input for user ID lists in ElastiCache operations, converting between XML, JSON, and query formats. Works with lists of base string types to represent user identifiers. Used when specifying multiple user IDs in requests like modifying or deleting users.",
      "description_length": 261,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeUpdateInitiatedBy",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` with two constructors, `System` and `Customer`, representing the initiator of a node update. It provides functions to convert between strings and the `t` type, along with serialization and deserialization functions for JSON, XML, and query parameters. It is used to determine and transmit the source of cache node update actions within AWS ElastiCache APIs.",
      "description_length": 388,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateSnapshotResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a snapshot creation operation in Amazon ElastiCache, containing an optional snapshot object. It provides functions to construct, parse, and serialize this result for use in API requests and responses. Use this module when handling the output of creating cache snapshots, particularly for interacting with ElastiCache's API directly or in testing response handling logic.",
      "description_length": 434,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeGlobalReplicationGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring requests to describe global replication groups in Amazon ElastiCache. It includes fields for filtering by group ID, limiting result size, pagination, and including member information. Operations allow constructing, parsing, and converting the structure to query or JSON formats for API interaction.",
      "description_length": 351,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheParametersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters used in a cache parameter group description request. It includes fields for the group name, source filter, maximum number of records, and a marker for pagination. The module provides functions to construct, parse, and serialize this data structure for use in querying and processing cache parameter configurations.",
      "description_length": 377,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UnprocessedUpdateAction",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an unprocessed update action in ElastiCache, with optional fields for replication group ID, cache cluster ID, service update name, error type, and error message. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used to handle failed or pending service updates when managing ElastiCache clusters and replication groups.",
      "description_length": 436,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, converting, and manipulating lists of NodeGroupUpdateStatus values. It provides operations to convert these lists to and from JSON and query formats, and includes a function to parse XML nodes into an optional list of NodeGroupUpdateStatus values. It is used when working with ElastiCache node group updates, particularly during API interactions that require status tracking across multiple node groups.",
      "description_length": 432,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UGReplicationGroupIdList",
      "library": "aws-elasticache",
      "description": "Handles lists of replication group IDs for ElastiCache operations. Provides functions to convert, parse, and serialize string lists to and from XML, JSON, and query formats. Useful when managing replication groups in ElastiCache API requests and responses.",
      "description_length": 256,
      "index": 135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.EC2SecurityGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an EC2 security group with optional status, name, and owner ID fields. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include handling security group information when interacting with AWS ElastiCache APIs, particularly for serialization and deserialization during API requests and responses.",
      "description_length": 424,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizeCacheSecurityGroupIngressResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of authorizing ingress to a cache security group, primarily working with the `CacheSecurityGroup` type. It provides operations to construct, parse, and serialize the result for use in API responses and queries. Concrete use cases include processing the output of an authorization request to update or inspect the associated cache security group.",
      "description_length": 376,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DefaultUserRequired",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` representing the absence of data, with operations to construct, parse, and convert values to query parameters, JSON, or from JSON. It works with unit values and is used in scenarios requiring empty or placeholder data handling, such as API requests with optional parameters or responses that do not return content. Concrete use cases include signaling successful operations with no return value or acting as a placeholder in data structures expecting a value.",
      "description_length": 490,
      "index": 138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DuplicateUserNameFault",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` representing an error case where a user name is duplicated in ElastiCache operations. It provides functions to construct, parse, and convert the error to query or JSON formats, typically used when handling API requests and responses. The module works with unit type values and is used in error handling scenarios during user management in ElastiCache.",
      "description_length": 382,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing replication group information, including an optional marker for pagination. It provides operations to construct, parse, and serialize the data to query parameters, JSON, or XML formats. Concrete use cases include processing responses from AWS ElastiCache API calls that list replication groups with optional pagination.",
      "description_length": 389,
      "index": 140,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"CacheSecurityGroupQuotaExceededFault\" error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. Use this module when interacting with AWS ElastiCache APIs to manage cache security group quota exceeded error responses.",
      "description_length": 356,
      "index": 141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `CacheSubnetGroupQuotaExceededFault` error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. The module works with unit type values, representing the presence of a quota exceeded fault.",
      "description_length": 325,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type with fields for cache parameter group name, family, and description, along with functions to construct, parse, and convert the record to query, JSON, and XML formats. It works with string values wrapped in AWS-specific type constructors and supports serialization for API requests. Concrete use cases include creating and transmitting cache parameter group configurations to AWS ElastiCache services.",
      "description_length": 434,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a replication group in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, or back from JSON. This is used specifically to represent and handle error cases where a requested replication group does not exist.",
      "description_length": 358,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the update status of a node group member in ElastiCache, including fields like cache cluster ID, node ID, update status, timestamps, and initiation details. It provides functions to construct, parse, and convert the structure to and from JSON, query format, and XML. Concrete use cases include tracking node updates, managing deletion schedules, and monitoring update progress in ElastiCache clusters.",
      "description_length": 451,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthenticationType",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration for authentication types with two variants: `Password` and `No_password`. It includes functions to convert between strings and the enumerated type, as well as serialization and deserialization routines for JSON, query parameters, and XML. It is used to specify and process authentication method configurations in ElastiCache service requests and responses.",
      "description_length": 391,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AZMode",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with two variants, `Single_az` and `Cross_az`, representing availability zone configurations. It provides bidirectional conversion between these variants and strings, along with serialization to and from JSON, query parameters, and XML. These operations support handling AZ mode values in API requests and responses, particularly when interacting with ElastiCache services.",
      "description_length": 408,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ParameterNameValue",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling parameter name-value pairs in ElastiCache configurations. It provides functions to create, parse, and convert these pairs to and from XML, JSON, and query formats. Concrete use cases include managing cache parameter settings when interacting with AWS ElastiCache APIs, particularly for operations like modifying cache clusters or parameter groups.",
      "description_length": 397,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseReplicaCountResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of decreasing the replica count in a replication group. It provides a data structure that may contain an updated replication group configuration. Use this module to process and manipulate the response from a replica count decrease operation, such as extracting the modified replication group or serializing the result for further processing.",
      "description_length": 372,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing reserved cache nodes, including optional pagination markers. It provides operations to construct, serialize, and deserialize instances for use in API interactions, specifically for managing ElastiCache reservations. Use cases include processing responses from AWS ElastiCache service calls to list or query reserved cache nodes.",
      "description_length": 398,
      "index": 150,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeSnapshotsListMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data for ElastiCache snapshot listings, including optional pagination markers. It provides operations to construct, serialize, and parse snapshot list messages for API interactions. Use it when processing responses from ElastiCache's `DescribeSnapshots` operation to manage snapshot data and pagination.",
      "description_length": 334,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupShardConfigurationMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying the shard configuration of a replication group in Amazon ElastiCache. It includes fields for specifying the replication group ID, node group count, resharding strategy, and node groups to add or remove, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when adjusting the sharding of a Redis replication group to scale horizontally.",
      "description_length": 440,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache parameter groups, providing functions to parse XML input into parameter group lists, convert them to query parameters or JSON format, and construct them from JSON data. It works directly with `CacheParameterGroup.t` lists and JSON or XML data structures. Use this module when managing ElastiCache configurations, such as retrieving or modifying parameter groups via AWS API calls.",
      "description_length": 421,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache user groups, providing direct conversions to and from XML, JSON, and query formats. It supports operations for parsing user group data from XML nodes, serializing to JSON or query parameters, and constructing or extracting user group lists. Concrete use cases include processing AWS ElastiCache API responses and preparing user group data for API requests.",
      "description_length": 397,
      "index": 154,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.FilterValueList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string values used for filtering in API requests. It provides functions to convert these lists to and from JSON and query parameters, as well as parsing from XML nodes. It is used when working with AWS ElastiCache operations that require filtering resources by tags or other string-based criteria.",
      "description_length": 326,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a replication group in Amazon ElastiCache. It includes operations to construct, serialize, and deserialize the result, which contains an optional replication group object. Use this module when managing ElastiCache replication groups programmatically, particularly for parsing responses from the AWS API or preparing data for further processing.",
      "description_length": 387,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidSubnet",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` representing an invalid subnet in API responses, with operations to construct, parse, and serialize the type. It includes functions to convert values to AWS query format, JSON, and back from JSON, ensuring compatibility with AWS ElastiCache service interactions. Use this module when handling subnet validation errors in ElastiCache configuration and networking operations.",
      "description_length": 404,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthTokenUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with two values, `SETTING` and `ROTATING`, representing the possible states of an authentication token update in ElastiCache. It provides functions to convert between string representations and the enumerated type, along with serialization and deserialization functions for JSON, XML, and query parameters. These operations are used when interacting with ElastiCache APIs to manage cache clusters with authentication tokens.",
      "description_length": 459,
      "index": 158,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificParameter",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing cache node type-specific parameters, including their metadata and allowed values. It provides constructors, parsers, and serializers for working with these parameters in XML, JSON, and AWS query formats. It is used to configure and retrieve parameter settings specific to different ElastiCache node types.",
      "description_length": 352,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache security group with fields for identifiers, descriptions, and associated EC2 security groups. It provides functions to construct, parse, and serialize these structures to and from XML, JSON, and AWS query formats. Concrete use cases include managing security configurations for ElastiCache instances and synchronizing group settings with AWS APIs.",
      "description_length": 405,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RevokeCacheSecurityGroupIngressMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a request to revoke ingress permissions for an ElastiCache security group. It includes fields for the cache security group name, EC2 security group name, and EC2 security group owner ID, and provides functions to construct, parse, and serialize the structure in various formats. It is used when modifying access rules for ElastiCache clusters by removing specific EC2 security group permissions.",
      "description_length": 445,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagListMessage",
      "library": "aws-elasticache",
      "description": "This module handles the serialization and deserialization of tag lists in Elasticache API responses. It works with XML, JSON, and query parameter formats, providing functions to convert between these representations and the internal `TagList.t` structure. Use it when processing Elasticache resource tags during API calls or response handling.",
      "description_length": 343,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.OutpostMode",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration type `t` with two variants, `Single_outpost` and `Cross_outpost`, representing deployment modes for AWS ElastiCache. It provides functions to convert between string representations and the enumerated type, as well as serialization and deserialization to JSON, query parameters, and XML parsing. These operations are used when configuring or interpreting ElastiCache cluster deployments across AWS outposts.",
      "description_length": 441,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache parameter group with optional fields for name, family, description, global status, and ARN. It provides functions to construct instances, parse XML input, and convert to and from JSON and query formats. It is used to manage configuration parameters for ElastiCache clusters, enabling operations like retrieval, serialization, and API interaction.",
      "description_length": 404,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseReplicaCountMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring replica count increases in a replication group. It includes fields for the replication group ID, optional new replica count, replica configuration list, and whether changes should apply immediately. Operations include creating instances, parsing XML input, and converting to query parameters or JSON for API requests.",
      "description_length": 370,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PurchaseReservedCacheNodesOfferingMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for purchasing reserved cache nodes in Amazon ElastiCache, including identifiers for the offering and node, and a count of nodes to purchase. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include submitting purchase requests and handling API responses for reserved cache node offerings.",
      "description_length": 407,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupMembershipList",
      "library": "aws-elasticache",
      "description": "This module handles lists of security group membership records for ElastiCache resources. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when managing cache clusters that require security group configurations, such as associating or retrieving access control policies.",
      "description_length": 346,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a global replication group in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back. Use this module when interacting with AWS ElastiCache APIs to represent and process errors related to missing global replication groups.",
      "description_length": 379,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PreferredOutpostArnList",
      "library": "aws-elasticache",
      "description": "This module handles lists of AWS Outpost ARNs as strings. It provides functions to convert these lists to and from JSON and query parameters, and includes parsing from XML nodes. Use this when working with ElastiCache configurations that require specifying preferred outposts.",
      "description_length": 276,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RevokeCacheSecurityGroupIngressResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for revoking ingress rules from a cache security group, containing an optional updated cache security group. It provides functions to construct, parse, and serialize the result to query parameters or JSON. Use this module when handling responses from revoking access rules in Amazon ElastiCache security groups.",
      "description_length": 345,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Snapshot",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache snapshot, containing metadata such as snapshot name, status, cache node count, engine version, and associated replication group or cache cluster details. It provides functions to construct, parse, and convert snapshot data to and from JSON, query format, and XML input. Concrete use cases include managing snapshot creation, retention policies, and inspecting snapshot properties for backup or restore operations.",
      "description_length": 478,
      "index": 171,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.PasswordListInput",
      "library": "aws-elasticache",
      "description": "This module handles a list of password strings for Elasticache operations. It provides functions to convert password lists to query parameters or JSON, and to parse them from XML or JSON. Use this when configuring or retrieving authentication credentials for ElastiCache clusters.",
      "description_length": 280,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AllowedNodeTypeModificationsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the allowed node type modifications for scaling up and down in an ElastiCache cluster. It includes functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used to determine compatible node types when modifying the size of a cache cluster.",
      "description_length": 337,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMember",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a member of a node group in a distributed caching system. It includes fields for identifying the cache cluster and node, specifying endpoints, availability zones, outposts, and roles, along with functions to construct, serialize, and convert instances to and from JSON and XML. It is used to manage and configure individual cache nodes within a replication group, enabling precise control over node placement and routing.",
      "description_length": 471,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagList",
      "library": "aws-elasticache",
      "description": "This module handles lists of AWS ElastiCache tag objects, providing conversions to and from XML, JSON, and query formats. It supports operations for parsing tag lists from XML nodes, serializing them into query parameters or JSON arrays, and constructing empty tag lists. Concrete use cases include managing metadata for ElastiCache resources during API interactions, such as attaching or retrieving tags for cache clusters or snapshots.",
      "description_length": 437,
      "index": 175,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMembershipList",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and manipulation of lists of cache security group membership records. It provides functions to convert between XML, JSON, and query formats and a list-based structure of `CacheSecurityGroupMembership` records. It is used when managing ElastiCache security configurations, such as retrieving or updating associated security groups for cache clusters.",
      "description_length": 405,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetInUse",
      "library": "aws-elasticache",
      "description": "This module defines a minimal type `t` representing a subnet that is already in use, with operations to construct, parse, and serialize the value. It includes functions to convert the value into query parameters or JSON format, and to parse JSON into the unit type. Concrete use cases include handling API responses where a subnet cannot be modified due to active usage.",
      "description_length": 370,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PreferredAvailabilityZoneList",
      "library": "aws-elasticache",
      "description": "This module handles lists of availability zones for ElastiCache configurations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this when managing cache clusters that require specifying preferred availability zones in AWS ElastiCache APIs.",
      "description_length": 313,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a global replication group in Amazon ElastiCache. It includes fields for the replication group's suffix, description, and primary group ID, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when configuring cross-region replication for Redis clusters.",
      "description_length": 358,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsPerReplicationGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"NodeGroupsPerReplicationGroupQuotaExceededFault\" error in AWS ElastiCache. It includes operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all acting on a unit type representing the presence of this specific error condition. It is used when interacting with AWS ElastiCache APIs to manage replication groups and handle quota-related error responses.",
      "description_length": 469,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupPendingChanges",
      "library": "aws-elasticache",
      "description": "This module handles pending changes to user groups in an ElastiCache configuration, specifically tracking user IDs to add or remove. It provides constructors, JSON and XML parsers, and query conversion functions for managing these changes. It works directly with user ID lists to represent modifications in a structured format suitable for API requests.",
      "description_length": 353,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersionMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing cache engine version responses, including optional pagination markers and lists of cache engine versions. It provides functions to construct, parse, and serialize these responses to and from XML, JSON, and AWS query formats. Concrete use cases include processing results from AWS ElastiCache API calls that list available cache engine versions and handling paginated responses.",
      "description_length": 426,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InsufficientCacheClusterCapacityFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `InsufficientCacheClusterCapacityFault` error in AWS ElastiCache operations. It includes functions to construct, parse, and convert the error to query or JSON formats, primarily working with unit type to signify the presence of the error. Concrete use cases include error handling when creating or modifying cache clusters that fail due to capacity constraints.",
      "description_length": 430,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.APICallRateForCustomerExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `APICallRateForCustomerExceededFault` error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. It is used when handling rate limiting errors from the ElastiCache API, specifically to manage and respond to excessive API call rates.",
      "description_length": 369,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for deleting an ElastiCache replication group, including the replication group ID, an optional flag to retain the primary cluster, and an optional identifier for a final snapshot. It provides functions to construct, parse, and serialize the structure to query parameters or JSON for API requests. Concrete use cases include preparing deletion requests for ElastiCache clusters with specific cleanup configurations.",
      "description_length": 451,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, converting, and serializing lists of NodeGroupMemberUpdateStatus values. It provides operations to transform XML input into typed lists, convert those lists to query parameters or JSON, and reconstruct them from JSON. It is used when managing cache cluster updates to track the status of individual nodes within a node group.",
      "description_length": 354,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of deleting a global replication group in Amazon ElastiCache. It includes a single optional field representing the deleted global replication group. It provides functions to construct, parse, and serialize the result for use in API responses and queries.",
      "description_length": 285,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for cache cluster deletion operations, containing an optional `CacheCluster` record. It provides functions to construct, parse, and serialize the result to query parameters or JSON, primarily used when handling responses from cache cluster deletion requests. The module supports workflows where cluster deletion results need to be processed or logged programmatically.",
      "description_length": 402,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling tag-related errors in API responses. It provides operations to create, parse, and convert unit values to query parameters, JSON, and back from JSON. It is used specifically for signaling that a requested tag does not exist in the context of interacting with ElastiCache services.",
      "description_length": 349,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RecurringCharge",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing recurring charges, including amount and frequency, with operations to create, parse, and serialize instances. It works with XML, JSON, and AWS query formats for integration with AWS ElastiCache APIs. Concrete use cases include handling billing information responses and constructing charge data for API requests.",
      "description_length": 366,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNode",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache node in Amazon ElastiCache, containing metadata such as node ID, status, creation time, and endpoint information. It provides functions to construct, serialize, and deserialize cache node instances using JSON and XML formats. Use this module when managing ElastiCache clusters, particularly for retrieving node details, tracking node status changes, or configuring replication groups.",
      "description_length": 442,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.StartMigrationResponse",
      "library": "aws-elasticache",
      "description": "This module defines a response type for a migration start operation, containing an optional replication group. It provides functions to construct, parse, and serialize the response to query parameters or JSON, specifically handling XML input for deserialization. It is used to manage the result of initiating a migration in a caching service, allowing interaction with replication group data.",
      "description_length": 392,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the update status of a cache node, including fields like node ID, update status, timestamps, and initiation details. It provides functions to construct, parse, and convert the structure to and from JSON, query parameters, and XML. Concrete use cases include tracking node updates, managing deletion schedules, and monitoring update progress in an ElastiCache environment.",
      "description_length": 421,
      "index": 193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheClustersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring requests to describe ElastiCache clusters, including optional parameters like cluster ID, record limit, and marker for pagination. It provides functions to construct, serialize, and parse these requests in JSON and XML formats. Concrete use cases include querying AWS ElastiCache for cluster details with specific filters and handling paginated responses.",
      "description_length": 408,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateSnapshotMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating snapshots in Amazon ElastiCache, including fields for replication group ID, cache cluster ID, snapshot name, and KMS key ID. It provides functions to construct, parse, and serialize snapshot creation requests in various formats such as JSON and query strings. It is used when initiating a snapshot operation for backup or replication purposes in ElastiCache.",
      "description_length": 408,
      "index": 195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroups",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and manipulation of cache security group data as lists. It provides functions to convert between XML, JSON, and query formats, specifically working with `CacheSecurityGroup.t` lists. Use this module when interacting with AWS ElastiCache APIs to manage cache security group configurations in different data formats.",
      "description_length": 370,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteSnapshotResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a snapshot deletion operation in Amazon ElastiCache. It includes functions to construct, parse, and serialize the result, which contains an optional snapshot object. Use this module when handling responses from ElastiCache snapshot deletion requests, particularly for inspecting or transmitting the resulting snapshot data.",
      "description_length": 387,
      "index": 197,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring resharding in a Redis cluster, including the node group ID and preferred availability zones. It provides functions to create, parse, and serialize resharding configurations for use in API requests or responses. Use this module when setting up or modifying Redis cluster resharding parameters in AWS ElastiCache.",
      "description_length": 364,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ProcessedUpdateActionList",
      "library": "aws-elasticache",
      "description": "This module handles lists of processed update actions in Elasticache, providing operations to convert, parse, and serialize these lists to and from XML, JSON, and query formats. It works primarily with lists of `ProcessedUpdateAction.t` values. Use this module when interacting with Elasticache APIs that require processing or returning multiple update actions, such as retrieving or submitting batches of updates.",
      "description_length": 414,
      "index": 199,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a cache subnet group, including the group's name, description, and associated subnet IDs. It provides functions to construct the structure, convert it to query parameters or JSON, and parse it from XML or JSON input. Use this when configuring subnet groups for ElastiCache clusters, particularly for managing network isolation and VPC integration.",
      "description_length": 397,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizeCacheSecurityGroupIngressMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type with fields for cache security group name, EC2 security group name, and EC2 security group owner ID, along with functions to construct, parse, and serialize the record. It supports operations for converting the data to query parameters, JSON, and parsing from XML and JSON formats. It is used to structure and transmit authorization requests for cache security group ingress in AWS ElastiCache.",
      "description_length": 428,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidReplicationGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type representing an invalid replication group state error in ElastiCache. It provides functions to construct, parse, and serialize the error for use in API requests and responses. The module works with unit values and integrates with AWS query and JSON formats for error handling in ElastiCache operations.",
      "description_length": 339,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEngineDefaultParametersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing engine default parameters in Amazon ElastiCache, including fields for the parameter group family, maximum records to return, and a marker for pagination. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. It is used when retrieving default parameter settings for caching engines.",
      "description_length": 385,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ClusterIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cluster IDs for ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this when working with ElastiCache APIs that require multiple cluster identifiers in requests or responses.",
      "description_length": 298,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RegionalConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles lists of regional configuration data for ElastiCache, providing functions to parse XML input into regional configuration objects, convert them to query parameters or JSON format, and construct regional configuration lists from JSON. It works with lists of `RegionalConfiguration.t` records, which represent region-specific settings for ElastiCache resources. Use this module when configuring or retrieving region-based replication or deployment settings for ElastiCache clusters or snapshots.",
      "description_length": 512,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheSubnetGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a cache subnet group in AWS ElastiCache. It provides functions to create, parse, and convert the result to and from JSON and query formats. It works with the `CacheSubnetGroup` type, representing the updated subnet group configuration.",
      "description_length": 279,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RemoveTagsFromResourceMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for removing tags from an ElastiCache resource, consisting of the resource name and a list of tag keys. It provides functions to construct, parse, and serialize the structure to different formats including JSON, query parameters, and XML. Use this module when interacting with AWS ElastiCache APIs to manage resource tags programmatically.",
      "description_length": 376,
      "index": 207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for a test failover operation, containing an optional replication group. It provides functions to construct, parse, and serialize the result to query parameters or JSON format. Use this module to handle responses from initiating a test failover in a Redis replication setup.",
      "description_length": 308,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupMember",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a member of a global replication group in Amazon ElastiCache, with fields for replication group ID, region, role, automatic failover status, and status. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. It is used to manage and track individual replication group members within a global setup, particularly during operations like failover or configuration updates.",
      "description_length": 469,
      "index": 209,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyUserGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying user groups in ElastiCache, supporting operations to add or remove user IDs from a specified user group. It works with string identifiers for user groups and lists of user IDs, providing functions to construct, serialize, and parse modification requests. Concrete use cases include updating user permissions in an ElastiCache cluster by adjusting associated user groups.",
      "description_length": 421,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling user group quota exceeded faults in AWS ElastiCache. It includes operations to construct, parse, and convert the error to query or JSON formats. Use this module when interacting with ElastiCache APIs to handle quota-related error responses.",
      "description_length": 295,
      "index": 211,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"ReservedCacheNodeNotFoundFault\" error in AWS ElastiCache. It includes operations for creating, parsing, and converting the error to query or JSON formats. It is used when a requested reserved cache node does not exist, primarily for error signaling and serialization in API interactions.",
      "description_length": 357,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupShardConfigurationResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a replication group's shard configuration in AWS ElastiCache. It provides constructors, parsers, and serializers for a structure that may contain an updated replication group. Use this module to process and manipulate ElastiCache API responses when adjusting shard configurations programmatically.",
      "description_length": 341,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEngineDefaultParametersResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing engine default parameters by providing functions to construct, parse, and serialize the response data. It works with XML, JSON, and query formats, specifically wrapping the `EngineDefaults.t` type. Use this module to retrieve and manipulate default parameter settings for ElastiCache engines in AWS.",
      "description_length": 344,
      "index": 214,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupInUse",
      "library": "aws-elasticache",
      "description": "This module defines a placeholder type `t` representing an in-use cache subnet group in AWS ElastiCache. It provides operations to construct, parse, and serialize the type to query parameters or JSON, primarily used for handling API responses and requests related to cache subnet group states. Concrete use cases include managing cache subnet group lifecycle operations where in-use status is acknowledged or validated during API interactions.",
      "description_length": 443,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidKMSKeyFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid KMS key errors in API responses. It provides operations to create, parse, and convert error data to query parameters, JSON, and back. Use this when interacting with AWS ElastiCache APIs to manage encryption key validation errors.",
      "description_length": 302,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for deleting a cache parameter group in Amazon ElastiCache, containing a single required field: the name of the parameter group. It provides functions to construct, serialize to JSON or query format, and parse from XML or JSON representations. This module is used when issuing a delete request to remove a specific cache parameter group by name.",
      "description_length": 382,
      "index": 217,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUsersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying user information in an ElastiCache system, supporting optional filters, pagination, and engine-specific parameters. It includes functions to construct, serialize, and parse user query messages in JSON and XML formats. Concrete use cases include retrieving user lists with custom filters and handling paginated responses from ElastiCache API calls.",
      "description_length": 397,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidParameterValueException",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid parameter value exceptions. It works with XML, JSON, and query string data formats to serialize and deserialize exception data. It is used when handling errors from the ElastiCache service where a parameter value is invalid.",
      "description_length": 297,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UnprocessedUpdateActionList",
      "library": "aws-elasticache",
      "description": "This module handles lists of unprocessed update actions in AWS ElastiCache. It provides functions to parse XML input into a list of unprocessed update actions, convert the list to query parameters or JSON format, and construct the list from JSON data. The module is used to manage update actions that were not processed during ElastiCache cluster modifications.",
      "description_length": 361,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Tag",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling tags in AWS ElastiCache, consisting of optional key-value pairs. It provides functions to create, parse, and convert tags to and from JSON and query formats. Use this module when managing metadata for ElastiCache resources like cache clusters or snapshots.",
      "description_length": 306,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying an ElastiCache replication group, including fields for configuration changes like description, cluster assignments, failover settings, security groups, maintenance windows, and node properties. It provides functions to construct, parse, and serialize this structure for use in API requests, specifically handling conversions to and from JSON and query formats. Concrete use cases include updating replication group settings programmatically, such as changing the primary cluster, adjusting cache node types, or modifying security configurations.",
      "description_length": 596,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for initiating a test failover in an ElastiCache replication group. It includes operations to create, parse, and serialize the message for sending requests in JSON or query string format. The module works with string-typed identifiers for replication groups and node groups, and is used when triggering and handling test failover operations in ElastiCache.",
      "description_length": 393,
      "index": 223,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingStatus",
      "library": "aws-elasticache",
      "description": "This module handles resharding status information for ElastiCache clusters, primarily working with the `t` record type that includes optional slot migration details. It provides functions to construct, parse, and convert resharding status data to and from XML, JSON, and query formats. Use this module when managing cache cluster resharding operations, particularly to track or update slot migration progress.",
      "description_length": 409,
      "index": 224,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a global node group in ElastiCache, with optional fields for the node group ID and slot range. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and XML. Use this module when managing replication across regions in multi-AZ ElastiCache setups.",
      "description_length": 338,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AvailabilityZonesList",
      "library": "aws-elasticache",
      "description": "This module handles list operations for availability zones in Amazon ElastiCache. It provides functions to convert, parse, and serialize string lists to and from XML, JSON, and query formats. Use this module when working with ElastiCache API requests and responses that require availability zone lists.",
      "description_length": 302,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReservedCacheNodesMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying reserved cache nodes in Amazon ElastiCache, supporting optional filters like node ID, offering ID, node type, and duration. It provides functions to construct, serialize, and parse these queries in JSON and XML formats. Use this module to build and process API requests for listing reserved cache nodes with specific criteria.",
      "description_length": 376,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a global replication group already exists. It works with unit type values and provides operations to parse, convert to query format, serialize to JSON, and deserialize from JSON. Concrete use cases include error handling during AWS ElastiCache API operations when attempting to create duplicate global replication groups.",
      "description_length": 411,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeTypeList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string-based node types in AWS ElastiCache configurations. It provides functions to convert node type lists to and from JSON and query parameters, and to parse them from XML. Use this module when working with ElastiCache API operations that require specifying node types, such as cluster creation or node management.",
      "description_length": 345,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a cache parameter group already exists. It works with unit type values and provides operations to convert to query parameters, JSON, and back from JSON. It is used in error handling scenarios when creating or managing cache parameter groups in AWS ElastiCache.",
      "description_length": 350,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying an ElastiCache cluster by providing a data structure that may include the updated cluster configuration. It includes functions to construct, serialize, and deserialize the result using XML, JSON, and AWS query formats. Concrete use cases include processing responses from ElastiCache modification requests and integrating with AWS SDK workflows for cache management.",
      "description_length": 410,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles a list of node group configurations for ElastiCache, providing functions to convert, parse, and serialize the data. It works with XML nodes, JSON values, and query parameters, enabling direct interaction with AWS ElastiCache APIs. Use this module when creating, modifying, or retrieving node group settings in ElastiCache clusters.",
      "description_length": 351,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthTokenUpdateStrategyType",
      "library": "aws-elasticache",
      "description": "This module defines a polymorphic variant type `t` representing strategies for updating authentication tokens in ElastiCache, with three specific operations: `SET`, `ROTATE`, and `DELETE`. It provides functions to convert between string representations and the `t` type, along with serialization and deserialization for query parameters, JSON, and XML. These operations are used when configuring or modifying authentication settings for ElastiCache clusters through AWS API calls.",
      "description_length": 480,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of user group IDs in string format, providing direct conversions to and from JSON and query parameters. It includes parsing from XML nodes and constructing empty lists. Useful for managing user group references in API requests and responses.",
      "description_length": 267,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of user IDs in string format, providing direct conversions to and from JSON and query parameters. It includes parsing from XML nodes and constructing empty lists. Useful for managing user identifiers in API requests and responses.",
      "description_length": 256,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to delete a global replication group in ElastiCache, including the group ID and whether to retain the primary replication group. It provides functions to construct, parse, and serialize the structure to query or JSON formats. Use this module when configuring deletion operations for global replication groups in AWS ElastiCache.",
      "description_length": 391,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.BatchStopUpdateActionMessage",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for constructing and serializing a batch stop update action message. It works with replication group IDs, cache cluster IDs, and a service update name to specify which resources to stop updating. It is used to send a request to stop a specific update across multiple ElastiCache clusters or replication groups.",
      "description_length": 362,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupList",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and transformation of lists of global replication group data structures. It provides functions to convert between XML, JSON, and internal data representations, specifically working with `GlobalReplicationGroup.t` lists. It is used when managing cross-region replication configurations in ElastiCache, such as parsing API responses or building requests for global replication groups.",
      "description_length": 438,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupsUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying user group updates, with operations to create, parse, and serialize the structure. It works with user group ID lists to add or remove, using XML, JSON, and query parameter formats. It is used when modifying ElastiCache replication groups to update associated user groups.",
      "description_length": 323,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing reserved cache node offerings, including optional pagination markers. It provides operations to construct, parse, and serialize the message to query parameters, JSON, or XML formats. Concrete use cases include processing responses from AWS ElastiCache API calls to list reserved cache node offerings.",
      "description_length": 370,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DisassociateGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for disassociating a replication group from a global replication group in Amazon ElastiCache. It provides functions to create, parse, and serialize the message using XML, JSON, and query formats. Use this module when managing cross-region replication configurations in ElastiCache.",
      "description_length": 318,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.TagQuotaPerResourceExceeded",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `TagQuotaPerResourceExceeded` error in AWS ElastiCache. It provides operations to construct, parse, and convert the error to query parameters or JSON format. Use this module when interacting with ElastiCache APIs to manage resource tagging limits and handle quota-related error responses.",
      "description_length": 357,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a replication group in Amazon ElastiCache. It provides functions to create, parse, and convert the result to and from XML, JSON, and query formats. It works with the `ReplicationGroup` type to represent the modified group's configuration.",
      "description_length": 282,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cache subnet group not found errors. It provides operations to convert values to AWS query format, JSON, and parse from JSON or an option type. Use this when interacting with AWS ElastiCache APIs to handle missing cache subnet group responses consistently.",
      "description_length": 326,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles lists of service update statuses, providing functions to convert them to and from JSON and query formats, and to parse them from XML. It works with the `ServiceUpdateStatus.t` type, representing individual service update statuses. Use this module when interacting with ElastiCache service update APIs, particularly for handling batch responses or multi-item payloads in JSON, XML, or query string formats.",
      "description_length": 425,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a global replication group in Amazon ElastiCache. It provides constructors, JSON serialization/deserialization, and query conversion for a structure that optionally contains a `GlobalReplicationGroup`. Use this module when processing responses from ElastiCache API calls that modify global replication groups, particularly to extract, serialize, or construct result data for further use or inspection.",
      "description_length": 445,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a record type for configuring Redis node groups in AWS ElastiCache, including node group ID, slots, replica count, and availability zones or outpost ARNs. It provides functions to construct, serialize, and parse these configurations, supporting operations like converting to and from JSON and query parameters. It is used when creating or modifying replication groups with specific node group settings in ElastiCache.",
      "description_length": 437,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying cache parameter groups in Amazon ElastiCache by specifying a parameter group name and a list of parameter-value pairs. It includes functions to construct, serialize, and parse this structure in various formats, including JSON and XML. It is used to configure and update ElastiCache parameter settings programmatically.",
      "description_length": 369,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of resharding configurations for ElastiCache. It provides operations to convert between XML, JSON, and internal data representations of resharding configurations. Use this module when managing cluster resharding settings via AWS API requests or responses.",
      "description_length": 316,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, converting, and manipulating lists of reserved cache node data. It provides operations to convert such lists to and from JSON and query formats, and includes a function to parse XML input into a list of reserved cache nodes. It works directly with lists of `ReservedCacheNode.t` values, targeting use cases like processing AWS ElastiCache API responses or preparing input for API requests.",
      "description_length": 418,
      "index": 250,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseReplicaCountMessage",
      "library": "aws-elasticache",
      "description": "This module defines a message structure for decreasing the number of replicas in an ElastiCache replication group. It includes operations to construct, serialize, and deserialize the message using JSON, query parameters, or XML. The module works with string, integer, boolean, and custom list types to configure replica removal and scaling behavior.",
      "description_length": 349,
      "index": 251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of ElastiCache replication groups. It provides operations to convert replication group lists to and from XML, JSON, and AWS query formats. Use this module when working with AWS ElastiCache API responses or requests involving multiple replication groups.",
      "description_length": 314,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CompleteMigrationMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a message to complete a migration in a replication group, with fields for the replication group ID and an optional force flag. It provides functions to construct the message, parse it from XML, convert it to query parameters or JSON, and create it from JSON input. This module is used to signal the completion of a migration operation in ElastiCache, particularly when managing replication group state transitions.",
      "description_length": 464,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ResetCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for resetting cache parameter groups in Amazon ElastiCache. It includes fields for the parameter group name, a flag to reset all parameters, and a list of specific parameter name-value pairs. Operations include creating instances, parsing XML input, and converting to and from JSON and query formats for API interactions.",
      "description_length": 358,
      "index": 254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ProcessedUpdateAction",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the outcome of an update action in a distributed caching service, including identifiers for replication groups, cache clusters, and the status of the update. It provides functions to construct, serialize, and deserialize this structure to and from JSON, query parameters, and XML. Use this module to process and transmit update action results in service integrations or monitoring tools.",
      "description_length": 437,
      "index": 255,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a cache security group already exists. It works with unit type values and provides operations for creating, parsing, and converting the error to query or JSON formats. Concrete use cases include error handling during cache security group creation in AWS ElastiCache API interactions.",
      "description_length": 373,
      "index": 256,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a cache subnet group already exists. It works with unit type values and provides operations to create, parse, and convert the error to query or JSON formats. Concrete use cases include error handling during cache subnet group creation in AWS ElastiCache API interactions.",
      "description_length": 361,
      "index": 257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeSnapshot",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a snapshot of a cache node, including metadata like identifiers, configuration, and timestamps. It provides functions to construct, serialize, and deserialize these snapshots for use in managing ElastiCache cluster backups and restores. Concrete use cases include persisting node state during cluster modifications and retrieving historical node configurations from snapshots.",
      "description_length": 426,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Filter",
      "library": "aws-elasticache",
      "description": "This module defines a filter structure with a name and list of values, used to represent and manipulate filtering criteria in API requests. It provides functions to construct, parse, and serialize filters to query parameters or JSON, supporting integration with AWS ElastiCache operations. Concrete use cases include filtering cache clusters or snapshots by attributes like tags or status during API calls.",
      "description_length": 406,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a simple type `t` representing the absence of data, with operations to construct, parse, and convert values to query, JSON, and associative list formats. It is used to handle cases where a user is not found in ElastiCache service responses. The module works with unit values and integrates with AWS query and JSON handling, providing direct mappings for API interactions.",
      "description_length": 391,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PendingAutomaticFailoverStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with values `Enabled` and `Disabled` to represent the status of automatic failover in a caching system. It includes functions to convert between string representations and the enumerated type, as well as serialization and deserialization to and from JSON, query parameters, and XML. These operations support configuration management and status reporting in cloud infrastructure automation workflows.",
      "description_length": 434,
      "index": 261,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for deleting an ElastiCache subnet group, containing a single required field: the name of the subnet group. It provides functions to construct the structure, parse it from XML, convert it to a query format, and serialize it to and from JSON. This module is used when issuing a request to delete a specific cache subnet group in AWS ElastiCache.",
      "description_length": 381,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AutomaticFailoverStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the automatic failover status of an ElastiCache cluster, with values for enabled, disabled, enabling, and disabling states. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These functions support handling ElastiCache API responses and requests where failover status must be parsed or formatted.",
      "description_length": 446,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for managing user groups in an ElastiCache environment, including fields like user group ID, status, associated users, and replication groups. It provides functions to construct, serialize, and deserialize user group records, supporting operations like converting to and from JSON and query parameters. It is used to configure and retrieve user group settings when interacting with ElastiCache APIs.",
      "description_length": 436,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteUserGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying a user group deletion request in AWS ElastiCache. It includes operations to create, parse, and serialize the request as a query or JSON object, specifically targeting user group management tasks. The primary data type is a record containing a `user_group_id`, used when issuing deletion commands to the ElastiCache service.",
      "description_length": 375,
      "index": 265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to delete an ElastiCache cluster, including the cluster ID and an optional final snapshot identifier. It provides functions to construct, parse, and serialize the structure to different formats like JSON and query strings. It is used when issuing a deletion request to AWS ElastiCache, ensuring proper formatting of the input for API consumption.",
      "description_length": 409,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RecurringChargeList",
      "library": "aws-elasticache",
      "description": "This module handles lists of recurring charge data in AWS ElastiCache operations. It provides functions to parse XML input into recurring charge records, convert them to query parameters or JSON format, and construct recurring charge lists from JSON. It is used when managing billing and recurring charges for ElastiCache resources programmatically.",
      "description_length": 349,
      "index": 267,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidVPCNetworkStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the `InvalidVPCNetworkStateFault` error in AWS ElastiCache. It provides operations to construct, parse, and convert the error to query parameters or JSON format. Use this module when interacting with AWS ElastiCache APIs to handle invalid VPC network state error responses.",
      "description_length": 343,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a global replication group in Amazon ElastiCache. It includes a single optional field containing a `GlobalReplicationGroup` record, along with functions to construct, serialize, and parse this result using JSON, query parameters, or XML. It is used to process and return the output of the `CreateGlobalReplicationGroup` API call.",
      "description_length": 372,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CopySnapshotResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a snapshot copy operation, containing an optional snapshot. It provides functions to construct, parse, and serialize the result to query parameters or JSON, specifically handling the output from copying a snapshot in ElastiCache. The module is used to process and transmit the response data when a snapshot copy completes, including details about the resulting snapshot object.",
      "description_length": 441,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Authentication",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for authentication settings in ElastiCache, including the authentication type and password count. It provides functions to create, parse, and serialize authentication configurations to and from XML, JSON, and query formats. Use this module when configuring or retrieving authentication details for ElastiCache clusters or replication groups.",
      "description_length": 378,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SourceType",
      "library": "aws-elasticache",
      "description": "This module defines a sum type representing various source types for AWS ElastiCache events or configurations, such as cache clusters, parameter groups, and replication groups. It provides bidirectional conversions between the type and strings, JSON, and query representations, ensuring compatibility with AWS APIs. Use this module when handling ElastiCache resource types in event notifications, API requests, or configuration management.",
      "description_length": 439,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateUserGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a user group in Amazon ElastiCache, including the user group ID, engine type, and optional list of user IDs. It provides functions to construct, serialize, and parse this structure for use in API requests. Concrete use cases include configuring access control for ElastiCache clusters by defining user groups with specific permissions.",
      "description_length": 385,
      "index": 273,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `SnapshotQuotaExceededFault` error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. It is used when a snapshot quota has been exceeded, typically during ElastiCache snapshot creation or management operations.",
      "description_length": 349,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition for exceeding reserved cache node quotas. It includes operations to construct, parse, and convert the error to query parameters or JSON format. Use this module to handle quota exceeded errors in API responses from cache management systems.",
      "description_length": 312,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetOutpost",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a subnet outpost with an optional ARN string. It includes functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used when managing ElastiCache subnet configurations that reference outposts.",
      "description_length": 290,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyUserMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying user attributes in an ElastiCache service. It includes fields for user ID, access string adjustments, password updates, and authentication requirements, supporting operations to construct, serialize, and deserialize user modification messages. It is used to configure user permissions and authentication settings when interacting with ElastiCache clusters via AWS API calls.",
      "description_length": 425,
      "index": 277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseReplicaCountResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of increasing the replica count in a replication group. It provides functions to create, parse, and serialize the result, which includes an optional replication group. Use this module to manage responses from replica count increase operations, convert results to query parameters or JSON, and extract replication group details.",
      "description_length": 358,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheSecurityGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling invalid cache security group states in ElastiCache operations. It provides functions to parse, convert to query format, serialize to JSON, and deserialize from JSON, all centered around a unit type representing the fault. Concrete use cases include error handling and request/response processing when interacting with ElastiCache's security group APIs.",
      "description_length": 407,
      "index": 279,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cache parameter group not found errors. It provides operations to convert values to query parameters, JSON, and back, primarily used in error response serialization and parsing. It is typically used in AWS ElastiCache API clients to manage error states related to missing cache parameter groups.",
      "description_length": 365,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NotificationConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring SNS topic notifications in ElastiCache, with optional fields for the topic ARN and its status. It provides functions to construct, serialize, and convert notification configurations to and from JSON, query parameters, and XML. Use this module when setting up or modifying event notifications for ElastiCache clusters using AWS SNS topics.",
      "description_length": 391,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseNodeGroupsInGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying a global replication group by reducing the number of node groups in Amazon ElastiCache. It includes operations to create, parse, and serialize the message payload using XML, JSON, and query string formats. The structure is used when adjusting global replication topology by specifying which node groups to remove or retain and whether changes take effect immediately.",
      "description_length": 418,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroups",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and manipulation of cache subnet group data from AWS ElastiCache. It provides functions to convert between XML, JSON, and internal data representations, specifically working with lists of `CacheSubnetGroup.t` records. It is used when managing cache subnet group configurations, such as retrieving or submitting group definitions to the AWS API.",
      "description_length": 400,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling service update not found errors. It provides operations to create, parse, and convert unit values to query parameters, JSON, and back from JSON. Useful for managing error responses in API interactions where absence of data is explicitly represented.",
      "description_length": 319,
      "index": 284,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the status of a cache parameter group, including its name, apply status, and associated cache node IDs that require rebooting. It provides functions to construct, serialize, and deserialize this structure using JSON, query parameters, or XML input. Use this module when managing ElastiCache parameter group updates and tracking affected cache nodes.",
      "description_length": 399,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificValueList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache node type-specific values, providing functions to parse, convert to query format, and serialize to and from JSON. It works with XML nodes for parsing and AWS-specific JSON and query types for API interactions. Use this module when managing ElastiCache node configurations that require type-specific parameter handling.",
      "description_length": 353,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificValue",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling cache node type-specific values in ElastiCache configurations. It provides functions to create, parse, and convert these values to and from JSON and query formats. Concrete use cases include specifying cache parameter values that vary by node type when configuring or retrieving ElastiCache cluster settings.",
      "description_length": 358,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseNodeGroupsInGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of decreasing node groups in a global replication group by providing a structured type to hold an optional global replication group. It includes functions to construct, parse, and convert the result to and from XML, JSON, and query formats. Concrete use cases include processing and serializing API responses when modifying global replication group configurations in AWS ElastiCache.",
      "description_length": 414,
      "index": 288,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying global replication group settings in Amazon ElastiCache, including fields like replication group ID, cache node type, and failover configuration. It provides functions to construct, parse, and serialize these modification requests, supporting operations like updating node types or enabling automatic failover. Use this module when configuring or updating ElastiCache global replication groups via the AWS API.",
      "description_length": 461,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AvailabilityZone",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an availability zone with an optional name field. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include handling availability zone information when interacting with ElastiCache APIs, such as describing or modifying cache clusters.",
      "description_length": 364,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSecurityGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache security group in Amazon ElastiCache. It provides functions to construct, serialize, and parse the result, which includes an optional cache security group object. Use this module when managing ElastiCache security group creation responses in API calls or configuration workflows.",
      "description_length": 330,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidSnapshotStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid snapshot state errors in AWS ElastiCache. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all specifically for representing an invalid snapshot state condition. Use this module when interacting with ElastiCache APIs to handle or propagate snapshot state validation errors.",
      "description_length": 416,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling user quota exceeded errors in AWS ElastiCache. It provides operations to create, parse, and convert error data to query parameters or JSON format. Use this module when interacting with AWS ElastiCache APIs to manage and respond to quota-related error conditions programmatically.",
      "description_length": 344,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type and operations for constructing, serializing, and parsing messages used to create an ElastiCache replication group. It handles fields for configuration such as replication group ID, description, cluster settings, encryption, and network security. Concrete use cases include building API requests to provision Redis replication groups with specific node configurations, failover settings, and backup policies.",
      "description_length": 442,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TimeRangeFilter",
      "library": "aws-elasticache",
      "description": "This module defines a time range filter with optional start and end times, using AWS DateTime values. It provides functions to construct, parse, and convert the filter to query parameters or JSON format. It is used to specify time intervals for filtering data in API requests to AWS ElastiCache.",
      "description_length": 295,
      "index": 295,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Event",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing events in Amazon ElastiCache, including optional fields for source identifier, source type, message, and timestamp. It provides functions to construct, parse, and convert event data to and from XML, JSON, and query formats. It is used to handle event records returned by ElastiCache API operations such as describing events or receiving notifications.",
      "description_length": 405,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizationAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `AuthorizationAlreadyExistsFault` error in AWS ElastiCache operations. It provides functions to create, parse, and convert the error type to query parameters, JSON, and back from JSON. It is used specifically for signaling that an authorization rule already exists when attempting to add a duplicate in ElastiCache API calls.",
      "description_length": 394,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheCluster",
      "library": "aws-elasticache",
      "description": "This module defines a `CacheCluster` record type representing metadata and configuration details of an ElastiCache cluster, including fields like cluster ID, status, node count, security settings, and associated resources. It provides functions to construct, parse, and serialize cluster data for use in API requests and responses, primarily working with XML and JSON formats. Concrete use cases include retrieving cluster information from AWS, constructing requests to create or modify clusters, and handling responses in automation or monitoring tools.",
      "description_length": 554,
      "index": 298,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of cache node update statuses. It works with XML nodes, JSON values, and query parameters, converting them to and from a list of `CacheNodeUpdateStatus.t` values. It is used when managing updates across multiple cache nodes in ElastiCache, particularly for batch operations and status reporting.",
      "description_length": 356,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdatesMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling service update messages in AWS ElastiCache, including optional pagination markers and lists of service updates. It provides functions to construct, serialize, and parse these messages to and from JSON, query parameters, and XML. It is used to manage responses from ElastiCache service update operations, enabling retrieval and processing of available updates.",
      "description_length": 409,
      "index": 300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.User",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache user, with fields for user metadata like ID, name, status, and authentication details. It provides constructors to create user instances, and functions to convert user data to and from JSON, query parameters, and XML. Use this module when managing ElastiCache user configurations, such as when creating or updating users in a Redis cluster.",
      "description_length": 405,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidARNFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid Amazon Resource Name (ARN) errors. It includes operations to create, parse, and convert error data to query parameters or JSON format. It is used specifically for validating and managing ARN-related faults in API requests.",
      "description_length": 295,
      "index": 302,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidUserGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid user group state errors. It provides operations to convert values to query parameters, JSON, and back, ensuring correct serialization and deserialization. It is used when interacting with AWS ElastiCache APIs to manage user group state faults.",
      "description_length": 321,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache subnet group, including its name, description, VPC ID, subnets, and ARN. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used when managing ElastiCache subnet configurations, such as creating or describing cache clusters within a VPC.",
      "description_length": 361,
      "index": 304,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.EventsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling event messages in Amazon ElastiCache, specifically for retrieving and managing lists of events with optional pagination via a marker. It provides functions to construct, parse, and serialize event messages to and from XML, JSON, and query formats. Concrete use cases include processing responses from ElastiCache's `DescribeEvents` API calls and integrating event data into logging or monitoring workflows.",
      "description_length": 456,
      "index": 305,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Endpoint",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing endpoint information with optional address and port fields. It provides functions to construct, parse, and convert endpoint values to and from JSON and query formats. Concrete use cases include handling endpoint data in API requests and responses for AWS ElastiCache operations.",
      "description_length": 332,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdate",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing service updates in a caching system, including metadata like severity, status, release and end dates, and recommended apply-by dates. It provides functions to construct, parse, and serialize these service update records to and from JSON, query parameters, and XML. Concrete use cases include managing service update notifications, tracking recommended actions, and integrating with monitoring systems.",
      "description_length": 455,
      "index": 307,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotList",
      "library": "aws-elasticache",
      "description": "This module represents a list of ElastiCache snapshots, providing operations to convert between XML, JSON, and query string formats. It supports parsing XML nodes into a list of snapshot records and serializing snapshot lists into query parameters or JSON arrays. Concrete use cases include handling AWS ElastiCache API responses and preparing snapshot data for API requests.",
      "description_length": 375,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupNameList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache security group names in string format. It provides operations to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this when working with ElastiCache APIs that require or return collections of security group names.",
      "description_length": 296,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CopySnapshotMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for copying an ElastiCache snapshot, including source and target names, an optional target bucket, and an optional KMS key ID. It provides functions to construct, parse, and serialize the structure to query parameters or JSON for API requests. Concrete use cases include initiating a snapshot copy operation with custom storage and encryption settings.",
      "description_length": 389,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSecurityGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating cache security groups with a name and description. It provides functions to construct, serialize, and parse instances of this structure using JSON, XML, and query parameters. Concrete use cases include configuring new cache security groups in AWS ElastiCache via API requests.",
      "description_length": 326,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificParametersList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, converting, and constructing lists of cache node type-specific parameters. It provides operations to convert such lists to JSON or query format, and to parse them from XML or JSON input. It is used when retrieving or configuring parameter settings specific to different cache node types in ElastiCache.",
      "description_length": 331,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicaConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles lists of replica configurations for ElastiCache clusters, providing functions to convert, parse, and serialize these configurations to and from JSON, XML, and AWS query formats. It works directly with lists of `ConfigureShard.t` values, supporting operations needed to interface with AWS ElastiCache APIs. Concrete use cases include preparing replica group data for API requests and processing responses containing shard configuration details.",
      "description_length": 463,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the update status of a node group in an ElastiCache cluster, including the node group ID and the update status of its members. It provides functions to construct, parse, and serialize this structure for use in API requests and responses. Concrete use cases include tracking the progress of node group updates and handling status information during ElastiCache cluster management operations.",
      "description_length": 440,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache cluster in Amazon ElastiCache. It provides functions to construct, parse, and serialize the result, which includes an optional cache cluster object. Use this module when managing ElastiCache cluster creation responses, particularly for integration with AWS APIs or processing cluster metadata.",
      "description_length": 344,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUsersResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing ElastiCache users, including a list of users and an optional marker for pagination. It provides functions to construct, parse, and convert the result to and from query parameters, JSON, and XML. Use this module when managing user data retrieval from AWS ElastiCache, particularly for handling paginated responses.",
      "description_length": 358,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetIdentifierList",
      "library": "aws-elasticache",
      "description": "This module handles lists of subnet identifiers for Amazon ElastiCache configurations. It provides functions to convert subnet lists to and from JSON and query formats, and includes parsing from XML nodes. Use this module when managing cache subnet groups or configuring ElastiCache instances with specific subnets.",
      "description_length": 315,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ChangeType",
      "library": "aws-elasticache",
      "description": "This module defines and manipulates a type representing the possible change types in a system, with values `Immediate` and `Requires_reboot`. It provides conversions to and from strings, JSON, and query formats, along with parsing from XML. It is used to handle configuration change type values in API requests and responses.",
      "description_length": 325,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseNodeGroupsInGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of increasing node groups in a global replication group by providing a data structure to hold the updated global replication group information. It includes functions to construct, parse, and serialize the result for use in API requests and responses. The module works with XML, JSON, and query parameter formats to facilitate integration with AWS ElastiCache service operations.",
      "description_length": 409,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of replication group IDs for ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use cases include preparing replication group IDs for API requests and processing responses.",
      "description_length": 289,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeGlobalReplicationGroupsResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing global replication groups in ElastiCache. It provides functions to construct, parse, and serialize results containing an optional marker for pagination and a list of global replication groups. It is used to process responses from AWS ElastiCache API calls that list global replication group configurations.",
      "description_length": 351,
      "index": 321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying cache subnet group configurations in Amazon ElastiCache. It includes fields for the subnet group name, an optional description, and a list of subnet IDs, with operations to construct, parse, and serialize the structure to query or JSON formats. It is used when updating the network configuration of an existing cache subnet group in ElastiCache.",
      "description_length": 396,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupDetails",
      "library": "aws-elasticache",
      "description": "This module handles cache parameter group details by providing constructors, parsers, and serializers for retrieving and manipulating parameter configurations specific to ElastiCache nodes. It works with structured data types like `ParametersList` and `CacheNodeTypeSpecificParametersList`, enabling operations such as XML parsing, JSON serialization, and query construction. Concrete use cases include processing responses from AWS ElastiCache API calls related to parameter group descriptions and preparing configuration data for API requests.",
      "description_length": 545,
      "index": 323,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache cluster records, providing direct conversions to and from XML, JSON, and query formats. It supports operations for parsing cluster data from AWS responses and constructing requests. Use this when managing batch operations on cache clusters, such as listing or serializing multiple clusters for API interactions.",
      "description_length": 352,
      "index": 324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FailoverGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a failover request for a global replication group in ElastiCache. It includes operations to construct, serialize, and parse the request using JSON, query parameters, or XML. Concrete use cases include initiating cross-region failovers and managing replication group failover events programmatically.",
      "description_length": 349,
      "index": 325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module represents an error type for when a reserved cache node offering is not found. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module to handle missing reserved cache node offering errors in API responses.",
      "description_length": 279,
      "index": 326,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupPendingModifiedValues",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing pending modifications to an ElastiCache replication group, including optional fields for primary cluster ID, automatic failover status, resharding status, auth token status, and user groups update status. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query parameters. It is used to track and manage configuration changes before they are applied to a replication group.",
      "description_length": 472,
      "index": 327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteUserGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a user group in Amazon ElastiCache by sending a DeleteUserGroup action. It handles the conversion of input data to an HTTP request and parsing of HTTP responses into either a user group result or a specific error. It works directly with ElastiCache user groups using input and output types defined in the Aws_elasticache.Types module.",
      "description_length": 354,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteSnapshot",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of ElastiCache snapshots by providing functions to construct and process HTTP requests and responses according to the AWS API. It works with input and output types specific to the DeleteSnapshot operation, along with error handling tailored to the AWS ElastiCache service. Use this module when interacting with ElastiCache to programmatically remove cached data snapshots and manage related responses or errors.",
      "description_length": 444,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateSnapshot",
      "library": "aws-elasticache",
      "description": "This module handles creating snapshots of ElastiCache clusters by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works directly with ElastiCache's CreateSnapshotMessage and CreateSnapshotResult types, encoding them into HTTP requests and decoding HTTP responses into structured results or errors. It is used to initiate snapshot creation for backup or replication purposes in ElastiCache clusters.",
      "description_length": 478,
      "index": 330,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateUserGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache user groups by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with `CreateUserGroupMessage.t` as input and returns a `UserGroup.t` on success, while managing errors via `Errors_internal.t`. It is used when configuring access control for ElastiCache clusters by defining user groups with specific permissions.",
      "description_length": 460,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache clusters by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with `CreateCacheClusterMessage` for request configuration and `CreateCacheClusterResult` for response data, using AWS-specific error types for failure handling. Concrete use cases include initiating a new Redis or Memcached cluster deployment with specified parameters like node type, count, and subnet group.",
      "description_length": 521,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module modifies cache parameter group settings in Amazon ElastiCache by sending a query-formatted HTTP request with the desired parameter changes. It works with `ModifyCacheParameterGroupMessage` as input and returns a `CacheParameterGroupNameMessage` on success, handling errors defined in `Errors_internal`. A concrete use case is updating memory limits or eviction policies for a Redis cache cluster through a parameter group update.",
      "description_length": 441,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyReplicationGroupShardConfiguration",
      "library": "aws-elasticache",
      "description": "This module handles modifying the shard configuration of a replication group in Amazon ElastiCache. It works with input and output types defined in the `Aws_elasticache.Types` module, specifically `ModifyReplicationGroupShardConfigurationMessage` and `ModifyReplicationGroupShardConfigurationResult`. It is used to construct and send HTTP requests to the ElastiCache service, parse responses, and handle errors specific to this operation.",
      "description_length": 438,
      "index": 334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module handles creating cache subnet groups in Amazon ElastiCache by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with ElastiCache-specific data structures, including `CreateCacheSubnetGroupMessage` for request parameters and `CreateCacheSubnetGroupResult` for responses. It is used when setting up VPC subnets for cache clusters, ensuring proper network configuration for ElastiCache instances.",
      "description_length": 506,
      "index": 335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a cache subnet group by sending an HTTP request with the specified name. It encodes input data into a query-formatted HTTP request and decodes responses into a unit output or an error. The module works directly with cache subnet group names and handles responses from the AWS ElastiCache service.",
      "description_length": 316,
      "index": 336,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeGlobalReplicationGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing global replication groups in Amazon ElastiCache by converting input parameters into signed HTTP requests and parsing responses into structured results or errors. It works with ElastiCache-specific input and output types, such as `DescribeGlobalReplicationGroupsMessage` and `DescribeGlobalReplicationGroupsResult`. Use this module to query information about global replication groups, such as their status, member clusters, and configuration details.",
      "description_length": 481,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.IncreaseReplicaCount",
      "library": "aws-elasticache",
      "description": "This module handles increasing the number of replicas in an ElastiCache replication group. It provides functions to convert input data into an HTTP request and parse the corresponding response or error. The module works with ElastiCache replication group configurations, specifically managing replica count adjustments for scaling purposes.",
      "description_length": 340,
      "index": 338,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.RemoveTagsFromResource",
      "library": "aws-elasticache",
      "description": "This module handles removing tags from an ElastiCache resource by defining the input and output data structures, error types, and serialization logic specific to the operation. It works with ElastiCache tag data structures, converting native types to HTTP requests and parsing responses into typed results or errors. Concrete use cases include untagging cache clusters or replication groups for cost tracking or resource management.",
      "description_length": 432,
      "index": 339,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheParameterGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing cache parameter groups in Amazon ElastiCache by converting input data into signed HTTP requests and parsing the responses. It works with input and output types specific to the `DescribeCacheParameterGroups` operation, along with error types defined in the ElastiCache API. It is used to retrieve detailed information about ElastiCache parameter groups, including their configuration and metadata.",
      "description_length": 427,
      "index": 340,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache parameter groups by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works directly with AWS ElastiCache's `CreateCacheParameterGroupMessage` and `CreateCacheParameterGroupResult` types, encoding them into HTTP requests and decoding responses into structured results or errors. It is used when setting up custom parameter groups for ElastiCache clusters, ensuring correct request formatting and error handling during creation.",
      "description_length": 553,
      "index": 341,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeUserGroups",
      "library": "aws-elasticache",
      "description": "This module handles the `DescribeUserGroups` operation for Amazon ElastiCache, converting input parameters into properly signed HTTP requests and parsing responses or errors from the service. It works with ElastiCache user group descriptions, using input and output types specific to the ElastiCache API. Use this module to retrieve detailed information about ElastiCache user groups, including their status, engine, and associated permissions.",
      "description_length": 444,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.StartMigration",
      "library": "aws-elasticache",
      "description": "This module handles initiating a migration process in Amazon ElastiCache by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works directly with ElastiCache migration messages and responses, including error handling specific to migration start operations. Concrete use cases include encoding migration start requests into HTTP queries and decoding the service's XML responses into structured results or typed errors.",
      "description_length": 495,
      "index": 343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ListTagsForResource",
      "library": "aws-elasticache",
      "description": "This module handles listing tags for an ElastiCache resource by converting input data into a properly signed HTTP request and parsing the response. It works with ElastiCache tag data through input and output types that encode and decode tags in query format. Concrete use cases include retrieving metadata tags for cost allocation, resource management, or audit tracking directly from ElastiCache instances or clusters.",
      "description_length": 419,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Errors_internal",
      "library": "aws-elasticache",
      "description": "This module defines a comprehensive set of error types specific to ElastiCache API operations, including states like `CacheClusterNotFound`, `InvalidParameterValue`, and `Throttling`. It provides functions to convert errors to HTTP status codes, strings, and back from strings, enabling precise error handling and response parsing. These operations are used internally to manage and respond to service-specific error conditions during API interactions.",
      "description_length": 452,
      "index": 345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types",
      "library": "aws-elasticache",
      "description": "This module provides serialization, deserialization, and structured manipulation of AWS ElastiCache configuration and status data, focusing on cluster components, replication groups, security settings, and resource metadata. It operates on data structures like endpoints, availability zones, cache node lists, parameter groups, and enums for update statuses or fault conditions, with consistent conversion between XML, JSON, and query formats. Specific use cases include API request/response modeling for cluster management, error signaling during resource operations, and format transformations for replication configurations, snapshots, and service update tracking.",
      "description_length": 667,
      "index": 346,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeServiceUpdates",
      "library": "aws-elasticache",
      "description": "This module handles the conversion of service update descriptions between native OCaml types and HTTP requests/responses for AWS ElastiCache. It works with input and output types specific to service update queries, including encoded query parameters and XML error responses. It is used to send requests to AWS ElastiCache to describe service updates and to parse the corresponding responses or errors.",
      "description_length": 401,
      "index": 347,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeEvents",
      "library": "aws-elasticache",
      "description": "This module handles describing events for Amazon ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with `DescribeEventsMessage.t` as input and `EventsMessage.t` as output, along with internal error types for failure handling. It is used to query and retrieve system event records for ElastiCache clusters or replication groups, such as maintenance or failure events, with specific filtering and pagination capabilities.",
      "description_length": 497,
      "index": 348,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module handles modifying an existing cache subnet group in Amazon ElastiCache by converting input data into a properly signed HTTP request and parsing the response. It works directly with `ModifyCacheSubnetGroupMessage` as input and returns a `ModifyCacheSubnetGroupResult`, while handling specific AWS errors related to subnet group modifications. It is used when updating the description or subnet list of a cache subnet group in an ElastiCache deployment.",
      "description_length": 463,
      "index": 349,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.BatchStopUpdateAction",
      "library": "aws-elasticache",
      "description": "This module handles stopping batch update actions for ElastiCache clusters by converting input parameters into signed HTTP requests and parsing responses into structured results or errors. It works with ElastiCache update action messages, specifically `BatchStopUpdateActionMessage` as input and `UpdateActionResultsMessage` as output, along with internal error types. Concrete use cases include halting ongoing software updates across multiple cache clusters in response to operational issues.",
      "description_length": 494,
      "index": 350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.IncreaseNodeGroupsInGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles increasing the number of node groups in a Global Replication Group on AWS ElastiCache. It works with ElastiCache-specific input and output types, such as `IncreaseNodeGroupsInGlobalReplicationGroupMessage` and `IncreaseNodeGroupsInGlobalReplicationGroupResult`. It provides functions to construct HTTP requests, parse responses, and handle errors specific to this operation, enabling direct interaction with the AWS ElastiCache API.",
      "description_length": 452,
      "index": 351,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeUpdateActions",
      "library": "aws-elasticache",
      "description": "This module handles describing update actions for ElastiCache clusters by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache update action messages, using structured types for input, output, and error handling. Use this module to query pending or completed system updates affecting ElastiCache resources, such as node modifications or version upgrades.",
      "description_length": 397,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles modifying a global replication group in Amazon ElastiCache by converting input data into signed HTTP requests and parsing the responses or errors returned by the service. It works directly with ElastiCache's `ModifyGlobalReplicationGroupMessage` as input and produces `ModifyGlobalReplicationGroupResult`, while encoding and decoding to HTTP format using AWS-specific error handling. It is used when updating configuration settings such as node types or engine versions across replicated Redis clusters.",
      "description_length": 523,
      "index": 353,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeSnapshots",
      "library": "aws-elasticache",
      "description": "This module handles describing snapshots in Amazon ElastiCache by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache snapshot messages as input and outputs lists of snapshot details or errors. Use this module to query existing ElastiCache snapshots for information such as status, creation time, and associated cache clusters.",
      "description_length": 371,
      "index": 354,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ListAllowedNodeTypeModifications",
      "library": "aws-elasticache",
      "description": "This module handles listing allowed node type modifications for ElastiCache clusters. It works with ElastiCache-specific input and output types, including messages for node type modifications and error responses. It is used to send and receive HTTP requests to the ElastiCache API, encoding inputs into query parameters and decoding responses into structured data.",
      "description_length": 364,
      "index": 355,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeUsers",
      "library": "aws-elasticache",
      "description": "This module handles describing ElastiCache user configurations by converting input parameters into signed HTTP requests and parsing responses. It works with ElastiCache user data types, specifically encoding `DescribeUsersMessage` into query parameters and decoding XML responses into `DescribeUsersResult`. Use this module to retrieve detailed information about existing ElastiCache users within an AWS environment.",
      "description_length": 416,
      "index": 356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheSecurityGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache security groups by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize HTTP responses. It works directly with AWS ElastiCache security group data, including structured input parameters and result payloads. Use this module when programmatically setting up cache security groups with specific metadata and rules in AWS environments.",
      "description_length": 448,
      "index": 357,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheParameters",
      "library": "aws-elasticache",
      "description": "This module handles describing cache parameters for an ElastiCache parameter group by converting input queries into HTTP requests and parsing responses into structured data. It works with ElastiCache parameter group details, encoding and decoding them to and from HTTP query format. Concrete use cases include retrieving and inspecting parameter configurations for Redis or Memcached clusters in AWS ElastiCache.",
      "description_length": 412,
      "index": 358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RebalanceSlotsInGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles rebalancing slots in a Global Replication Group for Amazon ElastiCache. It works with input and output structures defined in the `Aws_elasticache.Types` module, specifically `RebalanceSlotsInGlobalReplicationGroupMessage` and `RebalanceSlotsInGlobalReplicationGroupResult`. It is used to initiate and manage slot rebalancing operations in multi-region Redis replication setups.",
      "description_length": 397,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.TestFailover",
      "library": "aws-elasticache",
      "description": "This module handles test failover operations for ElastiCache replication groups by defining input and output types, request signing, and HTTP serialization. It works with ElastiCache-specific types to encode and decode API requests and responses, including error handling tied to the service's specifications. Concrete use cases include initiating a failover test on a replication group and processing the result or errors from the AWS API.",
      "description_length": 440,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheEngineVersions",
      "library": "aws-elasticache",
      "description": "This module handles describing available cache engine versions for Amazon ElastiCache by converting input parameters into signed HTTP requests and parsing responses into structured data. It works with input type `DescribeCacheEngineVersionsMessage.t` and outputs `CacheEngineVersionMessage.t`, handling errors via `Errors_internal.t`. It is used to retrieve version details like supported engine types, patch versions, and feature sets for ElastiCache clusters.",
      "description_length": 461,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.PurchaseReservedCacheNodesOffering",
      "library": "aws-elasticache",
      "description": "This module handles purchasing reserved cache nodes offerings in AWS ElastiCache. It works with input and output types defined in the `Aws_elasticache.Types` module, specifically `PurchaseReservedCacheNodesOfferingMessage.t` and `PurchaseReservedCacheNodesOfferingResult.t`. It is used to make API calls to reserve cache nodes by converting input data into HTTP requests and parsing the responses.",
      "description_length": 397,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of ElastiCache replication groups by converting input parameters into properly signed HTTP requests and parsing responses. It works with ElastiCache-specific input and output types, including error structures defined in the service's specification. Concrete use cases include issuing deletion commands for replication groups and handling the resulting success or error responses from the AWS API.",
      "description_length": 429,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DecreaseReplicaCount",
      "library": "aws-elasticache",
      "description": "This module handles decreasing the number of replicas in an ElastiCache replication group. It provides functions to convert input data into an HTTP request and parse the corresponding response or error. The module works with ElastiCache-specific input and output types, including error responses tied to the service.",
      "description_length": 316,
      "index": 364,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles creating a Redis replication group in AWS ElastiCache by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with `CreateReplicationGroupMessage` and `CreateReplicationGroupResult` structures, encoding requests into query format with proper action and version parameters. It is used to programmatically set up replication groups with specific configurations such as node count, engine version, and subnet groups.",
      "description_length": 531,
      "index": 365,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeReservedCacheNodes",
      "library": "aws-elasticache",
      "description": "This module handles describing reserved cache nodes in Amazon ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to the ElastiCache API, including messages for reserved cache nodes and internal error types. Concrete use cases include querying details of reserved cache nodes, handling API-specific error responses, and signing requests for AWS service communication.",
      "description_length": 480,
      "index": 366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheSubnetGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing ElastiCache subnet groups by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache-specific types for input, output, and errors, such as `DescribeCacheSubnetGroupsMessage` and `CacheSubnetGroupMessage`. Use this module to retrieve detailed configuration information about ElastiCache subnet groups from AWS, handling both successful responses and API-specific errors.",
      "description_length": 440,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of a global replication group in Amazon ElastiCache by defining the input and output types, error parsing, and HTTP serialization for the API call. It works with ElastiCache-specific types such as `CreateGlobalReplicationGroupMessage` and `CreateGlobalReplicationGroupResult`, along with internal error structures. Use this module when programmatically setting up cross-region replication for Redis clusters in AWS ElastiCache.",
      "description_length": 460,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles modifying an existing ElastiCache cluster by defining the input and output types for the operation, along with functions to convert between HTTP requests/responses and native OCaml types. It works directly with ElastiCache cluster configuration data, including parameters like cache node count, engine version, and maintenance window. It is used to programmatically update cluster settings in AWS ElastiCache through properly signed HTTP requests.",
      "description_length": 467,
      "index": 369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.AddTagsToResource",
      "library": "aws-elasticache",
      "description": "This module adds tags to an ElastiCache resource by sending an HTTP request with the specified tags. It works with ElastiCache tag data structures, handling input encoding and response decoding. Use this module to associate metadata with cache clusters or snapshots for cost allocation or resource management.",
      "description_length": 309,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheSecurityGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing cache security groups in AWS ElastiCache by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the ElastiCache API, including encoded query parameters and XML error responses. Concrete use cases include querying existing cache security group configurations and handling API-specific errors during request execution.",
      "description_length": 414,
      "index": 371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.BatchApplyUpdateAction",
      "library": "aws-elasticache",
      "description": "This module handles the execution of batch update actions for ElastiCache clusters by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache update action messages, specifically applying updates across multiple clusters in a single call. Use this module when automating version upgrades or parameter group updates across multiple ElastiCache instances.",
      "description_length": 393,
      "index": 372,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CompleteMigration",
      "library": "aws-elasticache",
      "description": "This module handles the completion of a migration in AWS ElastiCache by defining the input and output types specific to the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with ElastiCache migration messages and responses, ensuring correct encoding and decoding of data during the migration finalization process. Concrete use cases include finalizing a migration workflow and handling the associated success or error responses from the service.",
      "description_length": 503,
      "index": 373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RevokeCacheSecurityGroupIngress",
      "library": "aws-elasticache",
      "description": "This module handles revoking ingress rules for ElastiCache security groups by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache security group ingress data types, specifically `RevokeCacheSecurityGroupIngressMessage` for input and `RevokeCacheSecurityGroupIngressResult` for output. Concrete use cases include updating security group permissions to remove access from specific CIDR ranges or EC2 security groups.",
      "description_length": 458,
      "index": 374,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_elasticache.DisassociateGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the disassociation of a global replication group in Amazon ElastiCache. It works with ElastiCache-specific types for input messages and results, along with internal error definitions. Concrete use cases include sending HTTP requests to disassociate replication groups and parsing the corresponding responses or errors from the AWS API.",
      "description_length": 355,
      "index": 375,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheClusters",
      "library": "aws-elasticache",
      "description": "This module handles describing cache clusters in AWS ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with `DescribeCacheClustersMessage.t` as input and returns `CacheClusterMessage.t` as output, along with handling specific ElastiCache errors. It is used to query detailed information about existing cache clusters, including their configuration and status, directly from AWS.",
      "description_length": 456,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a specified cache parameter group using the AWS ElastiCache service. It handles the conversion of input data into an HTTP request and processes the response, returning no output on success or an error if the deletion fails. The primary data types involved are the input message specifying the parameter group name and the error type for handling AWS service responses.",
      "description_length": 388,
      "index": 377,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeEngineDefaultParameters",
      "library": "aws-elasticache",
      "description": "This module handles describing the default parameters for an ElastiCache engine. It works with input and output types specific to the ElastiCache service, including messages and error responses. It is used to send HTTP requests to retrieve engine default parameters and parse the corresponding responses or errors.",
      "description_length": 314,
      "index": 378,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles modifying Redis replication groups in AWS ElastiCache by providing functions to construct and interpret HTTP requests and responses for the `ModifyReplicationGroup` API call. It works with input and output types specific to replication group modifications, including encoded query parameters and XML error parsing. Concrete use cases include updating replication group configurations, enabling or disabling Multi-AZ, and managing snapshot settings.",
      "description_length": 468,
      "index": 379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RebootCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles the reboot operation for ElastiCache clusters by defining the input and output types for the request, along with functions to convert between HTTP requests and native OCaml types. It works directly with ElastiCache-specific data structures, including `RebootCacheClusterMessage` for input and `RebootCacheClusterResult` for output. Use this module to programmatically restart a cache cluster, ensuring the request is correctly signed and formatted for AWS.",
      "description_length": 476,
      "index": 380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyUserGroup",
      "library": "aws-elasticache",
      "description": "This module modifies an existing ElastiCache user group by updating its properties such as user IDs and engine. It operates on ElastiCache user group data types, handling input messages and output responses specific to user group modifications. Concrete use cases include updating access permissions for Redis users or synchronizing user group configurations with external identity systems.",
      "description_length": 390,
      "index": 381,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeReservedCacheNodesOfferings",
      "library": "aws-elasticache",
      "description": "This module handles the conversion of inputs and outputs for an AWS ElastiCache API call that retrieves available reserved cache node offerings. It encodes input data into a properly formatted HTTP request and decodes HTTP responses into either a result or an error specific to this operation. It works directly with ElastiCache-specific types for both input and output, including handling error responses from the service.",
      "description_length": 423,
      "index": 382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheSecurityGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a cache security group by sending a properly signed HTTP request to the AWS ElastiCache service. It works with `DeleteCacheSecurityGroupMessage.t` as input and produces no output on success, handling errors through a structured error type. A concrete use case is removing an unused security group to manage access control for cache clusters.",
      "description_length": 361,
      "index": 383,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DecreaseNodeGroupsInGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the operation to decrease the number of node groups in a global replication group for Amazon ElastiCache. It works with input and output types defined in the `Aws_elasticache.Types` module, along with error handling specific to ElastiCache operations. Concrete use cases include modifying global replication group configurations by reducing node groups, typically in response to scaling down requirements or cost optimization strategies.",
      "description_length": 457,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CopySnapshot",
      "library": "aws-elasticache",
      "description": "This module handles copying Redis snapshots in Amazon ElastiCache by providing functions to construct and interpret HTTP requests and responses for the `CopySnapshot` API. It works with ElastiCache-specific input and output types, including `CopySnapshotMessage.t` for request parameters and `CopySnapshotResult.t` for responses, along with internal error types for failure handling. Concrete use cases include initiating cross-region snapshot replication and managing backup transfers between clusters.",
      "description_length": 503,
      "index": 385,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateUser",
      "library": "aws-elasticache",
      "description": "This module handles creating a new user in ElastiCache by defining the input and output data structures, along with functions to serialize requests and deserialize responses. It works directly with HTTP requests and responses, using ElastiCache-specific types for user configuration and error handling. Concrete use cases include sending a properly signed HTTP request to create a user and processing the resulting response or error from the AWS ElastiCache API.",
      "description_length": 462,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ResetCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module handles resetting cache parameter groups in AWS ElastiCache by providing functions to construct HTTP requests and parse responses. It works with input and output types defined in the `Aws_elasticache.Types` module, specifically `ResetCacheParameterGroupMessage.t` for input and `CacheParameterGroupNameMessage.t` for output. Use this module to programmatically reset parameters of a cache parameter group, typically during configuration management or automated recovery workflows.",
      "description_length": 492,
      "index": 387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeReplicationGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing replication groups in ElastiCache by sending HTTP requests and processing responses. It works with input and output types specific to replication group descriptions, including error handling for failed requests. It is used to retrieve detailed information about existing replication groups, such as their configuration and status, by interacting with the ElastiCache API.",
      "description_length": 402,
      "index": 388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheCluster",
      "library": "aws-elasticache",
      "description": "This module deletes a specified ElastiCache cluster by converting a deletion request into an HTTP query, sending it to the appropriate AWS endpoint, and parsing the response or any associated errors. It operates on `DeleteCacheClusterMessage.t` input and returns either a `DeleteCacheClusterResult.t` or an error type specific to AWS ElastiCache. Use this module when programmatically removing cache clusters, handling success responses, or capturing and interpreting deletion failures such as invalid cluster states or permissions issues.",
      "description_length": 539,
      "index": 389,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of a Global Replication Group in AWS ElastiCache by providing functions to construct and deconstruct HTTP requests and responses. It works with input and output types specific to the deletion operation, including encoded query parameters and error responses. Concrete use cases include sending a properly formatted delete request, parsing the result, and handling service-specific errors with correct status codes.",
      "description_length": 447,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.FailoverGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the failover operation for global replication groups in Amazon ElastiCache. It works with input and output types defined in the ElastiCache service, specifically `FailoverGlobalReplicationGroupMessage` and `FailoverGlobalReplicationGroupResult`, along with internal error types. It provides functions to construct and send HTTP requests, parse responses, and decode errors, enabling precise control over global replication failover workflows.",
      "description_length": 462,
      "index": 391,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.AuthorizeCacheSecurityGroupIngress",
      "library": "aws-elasticache",
      "description": "This module handles the authorization of cache security group ingress in AWS ElastiCache. It provides functions to convert between native types and HTTP requests/responses, specifically for the `AuthorizeCacheSecurityGroupIngress` API operation, which allows network access to a cache security group by granting ingress permissions. The module works with input and output types defined in the `Aws_elasticache.Types` module and handles errors defined in `Aws_elasticache.Errors_internal`.",
      "description_length": 488,
      "index": 392,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteUser",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of ElastiCache users by converting input parameters into signed HTTP requests and processing responses. It works with ElastiCache user data types, specifically encoding `DeleteUserMessage.t` into HTTP requests and decoding responses into user data or error types. It is used to securely issue DeleteUser API calls to AWS ElastiCache, handling request signing, endpoint routing, and error parsing according to the service's specifications.",
      "description_length": 471,
      "index": 393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyUser",
      "library": "aws-elasticache",
      "description": "This module handles modifying user configurations in ElastiCache by providing functions to construct and process API requests. It works with input and output types specific to user modification, including encoded query parameters and HTTP responses. Concrete use cases include updating user permissions and authentication details for ElastiCache clusters.",
      "description_length": 355,
      "index": 394,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache",
      "library": "aws-elasticache",
      "description": "This module supports operations for managing ElastiCache clusters, replication groups, snapshots, and user configurations through HTTP API interactions, working with AWS-specific data structures like cache parameters, security groups, and migration workflows. It enables use cases such as scaling node groups, rebalancing clusters, handling global replication failovers, and testing fault scenarios by translating typed OCaml inputs into API requests and parsing structured responses or errors.",
      "description_length": 494,
      "index": 395,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 396,
    "meaningful_modules": 396,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 667,
    "min_description_length": 256,
    "avg_description_length": 389.3611111111111,
    "embedding_file_size_mb": 5.737628936767578
  }
}