{
  "package": "aws-elasticache",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 397,
  "creation_timestamp": "2025-06-18T17:07:13.342718",
  "modules": [
    {
      "module_path": "Aws_elasticache.Types.NodeUpdateInitiatedBy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to encode and decode node update initiation metadata in AWS-related data exchanges.",
      "description_length": 305,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeUpdateStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to transform and encode status information for API interactions and data serialization.",
      "description_length": 313,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Endpoint",
      "description": "Provides operations to construct, parse, and serialize endpoint configurations, including converting between XML nodes, query parameters, and JSON representations. Works with structured data types representing network endpoints, including optional address and port fields. Used to generate query strings for API requests and to deserialize endpoint information from JSON responses.",
      "description_length": 381,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AvailabilityZonesList",
      "description": "Provides functions to create, parse, and serialize lists of availability zone names. Operates on lists of strings representing AWS availability zones. Parses XML nodes into zone lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 271,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.OutpostArnsList",
      "description": "Provides operations to construct, parse, and serialize lists of strings as AWS ARN identifiers. Works with lists of string-type values representing Amazon Resource Names. Parses XML nodes into ARN lists, converts them to query parameters, and serializes/deserializes them in JSON format.",
      "description_length": 287,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberUpdateStatus",
      "description": "Provides operations to construct, parse, and serialize objects representing the status of a node within a group, including cache cluster and node identifiers, update timestamps, and initiation details. Works with string, date-time, and custom status types to track node update lifecycle events. Used to generate HTTP query parameters, JSON representations, and parse XML responses in AWS-related workflows.",
      "description_length": 406,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMember",
      "description": "Provides operations to construct, parse, and serialize objects representing members of a cache node group, including methods to convert between XML, query parameters, and JSON formats. Works with string identifiers, endpoints, and availability zone information. Used to process and transmit node group member data in AWS-related applications.",
      "description_length": 342,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AvailabilityZone",
      "description": "Provides operations to construct, parse, and serialize availability zone data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional name information. Used to process and encode availability zone details from AWS API responses.",
      "description_length": 306,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetOutpost",
      "description": "Provides operations to construct, parse, and serialize a subnet outpost structure from XML and JSON. Works with AWS ARN strings and structured data representations. Used to convert XML responses from AWS API calls into native OCaml types and generate query parameters for API requests.",
      "description_length": 285,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificValue",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structured value associated with a specific cache node type. Works with a record type containing optional string fields for the cache node type and corresponding value. Used to encode and decode configuration data in API requests and responses.",
      "description_length": 314,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupConfiguration",
      "description": "Provides operations to construct, parse, and serialize configuration data for node groups, including node group ID, slots, replica count, availability zones, and outpost ARNs. Works with custom types such as string, integer, and lists of availability zones and outpost ARNs. Used to generate AWS API requests and process XML or JSON responses from service configurations.",
      "description_length": 371,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AutomaticFailoverStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle status information in a structured way during AWS API interactions.",
      "description_length": 303,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberUpdateStatusList",
      "description": "Constructs a list of node group member update status objects from a raw XML structure, serializes the list into AWS query parameters, and converts it to and from JSON format. Operates on lists of `NodeGroupMemberUpdateStatus.t` values, representing the status of individual nodes in a group. Used to process and transmit update status information in AWS API interactions.",
      "description_length": 371,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of node group members. Operates on lists of `NodeGroupMember.t` values and XML nodes. Parses XML input into member lists, converts them to AWS query parameters, and handles JSON serialization and deserialization for network communication.",
      "description_length": 308,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SlotMigration",
      "description": "Provides operations to create a migration state with an optional progress percentage, parse XML nodes into a migration structure, and convert between query, JSON, and internal representations. Works with XML nodes, query parameters, and JSON values to manage migration data. Used to initialize migration states, process XML input, and serialize/deserialize migration information for API interactions.",
      "description_length": 400,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupIdList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of strings as user group identifiers. Works with lists of string values representing user group IDs. Parses XML nodes into a list of IDs, converts lists to query parameters, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 317,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Subnet",
      "description": "Provides functions to construct, parse, and serialize subnet data, including methods to convert between XML, query parameters, and JSON formats. Works with types such as subnet identifiers, availability zones, and outposts. Used to process and represent subnet information in AWS API interactions.",
      "description_length": 297,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificValueList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of cache node type specific values. Operates on lists of `CacheNodeTypeSpecificValue.t` and XML nodes, generating AWS query parameters and JSON structures. Used to handle configuration data for cache node types in AWS interactions.",
      "description_length": 304,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ChangeType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and serialization functions. Works with a polymorphic type `t` and specific conversion tables for string representation. Used to parse XML data into structured values and generate query parameters or JSON payloads for API interactions.",
      "description_length": 339,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingConfiguration",
      "description": "Provides operations to construct, parse, serialize, and deserialize configuration data for resharding processes. Works with structured data including strings, availability zone lists, and JSON-encoded representations. Used to initialize resharding parameters from XML input or convert configurations into query parameters for API requests.",
      "description_length": 339,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EC2SecurityGroup",
      "description": "Provides functions to construct, parse, and serialize EC2 security group data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing status, security group name, and owner ID. Used to process and transmit EC2 security group information in API requests and responses.",
      "description_length": 334,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RecurringCharge",
      "description": "Provides functions to construct, parse, and serialize recurring charge data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional fields for charge amount and frequency. Used to process and transmit billing information in AWS-related workflows.",
      "description_length": 332,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeSnapshot",
      "description": "Provides methods to construct, parse, and serialize objects representing AWS ElastiCache node snapshots, including creating with specific cluster, node group, and cache node identifiers, along with configuration and timestamp data. Works with custom types such as string, datetime, and nested configurations for cache nodes. Used to generate API requests and process XML or JSON responses from ElastiCache services.",
      "description_length": 415,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroup",
      "description": "Provides operations to construct, parse, and serialize a structure representing a global node group, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based identifiers and slot configurations. Used to handle AWS API responses and requests involving distributed node group configurations.",
      "description_length": 348,
      "index": 23,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupMember",
      "description": "Provides constructors and parsers for handling AWS ElastiCache replication group member data, including methods to convert instances to query parameters, JSON, and from JSON. Works with structured data containing replication group identifiers, regions, roles, and status information. Used to process and serialize AWS API responses related to replication group members.",
      "description_length": 369,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AuthenticationType",
      "description": "Provides conversion between a type `t` and strings, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` representing authentication credentials or methods. Used to transform authentication data for API requests and configuration files.",
      "description_length": 288,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNode",
      "description": "Provides operations to construct, parse, serialize, and deserialize cache node data, including creating instances with specific attributes like status, creation time, and endpoint information. Works with structured data types such as timestamps, strings, and custom endpoint records. Used to process and exchange cache node details in AWS-related workflows, such as configuring or monitoring distributed caching systems.",
      "description_length": 420,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeIdsList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of string identifiers. Works with lists of strings as the primary data structure. Parses XML nodes into string lists, converts them to query parameters, and handles JSON serialization and deserialization for list structures.",
      "description_length": 295,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMembership",
      "description": "Provides operations to construct, parse, and serialize data structures representing security group membership cache entries, including converting between XML nodes, query parameters, and JSON. Works with string-based identifiers and status values encapsulated in a structured record type. Used to manage and transmit security group membership information in AWS-related workflows.",
      "description_length": 380,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthTokenUpdateStatus",
      "description": "Converts between a custom token type and string, XML, and JSON representations. Handles parsing from XML nodes and serializes to AWS query parameters. Supports creating and transforming token instances for API interactions.",
      "description_length": 223,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupMembership",
      "description": "Provides operations to construct, parse, and serialize objects representing security group membership data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional fields for security group IDs and status. Used to process and transmit security group association details in AWS API interactions.",
      "description_length": 379,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string-based user identifiers. Operates on lists of `Aws.BaseTypes.String.t` values, converting them to query parameters, JSON structures, and XML nodes. Used to handle user ID data in AWS API interactions, such as processing request inputs and generating response outputs.",
      "description_length": 346,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeUpdateStatus",
      "description": "Provides operations to construct, parse, and serialize a node update status object, including timestamps and update initiator details. Works with custom types such as `NodeUpdateStatus.t`, `NodeUpdateInitiatedBy.t`, and date-time values. Used to encode and decode node status information in API requests and responses.",
      "description_length": 318,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupUpdateStatus",
      "description": "Provides operations to construct, parse, and serialize data structures representing the status of node group updates, including methods to convert between XML, query parameters, and JSON formats. Works with types such as string identifiers, lists of member update statuses, and structured JSON data. Used to process and transmit update status information in AWS API interactions.",
      "description_length": 379,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroup",
      "description": "Provides operations to construct, parse, serialize, and deserialize node group data, including methods to generate query parameters and JSON representations. Works with structured data types such as endpoints, string identifiers, and lists of node group members. Used to process and transmit node group configurations in AWS API interactions.",
      "description_length": 342,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PendingAutomaticFailoverStatus",
      "description": "Converts between string representations and an internal state type, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a custom type representing the status of an automatic failover process. Used to handle HTTP request parameters and JSON payloads in AWS service interactions.",
      "description_length": 311,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingStatus",
      "description": "Provides operations to construct, parse, serialize, and deserialize resharding status data. Works with a record type containing slot migration information and other internal state. Used to generate AWS query parameters and JSON representations for resharding workflows.",
      "description_length": 269,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupsUpdateStatus",
      "description": "Provides operations to construct and serialize user group status updates, including adding and removing group IDs, parsing XML input, and converting to query and JSON formats. Works with user group ID lists and AWS query and JSON structures. Used to generate API requests for updating user group memberships in a system.",
      "description_length": 320,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of subnet objects. Operates on lists of `Subnet.t` and XML nodes, converting them into query parameters and JSON structures. Used to process subnet data from XML responses and prepare it for API requests or storage.",
      "description_length": 285,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificParameter",
      "description": "Provides operations to construct, parse, and serialize objects representing cache node type-specific parameters, including setting names, descriptions, data types, allowed values, and modification flags. Works with structured data types such as strings, booleans, lists of values, and custom enumerations. Used to generate API requests and process XML or JSON responses in AWS-related workflows.",
      "description_length": 395,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Parameter",
      "description": "Represents a configuration parameter with methods to construct, parse, and serialize parameter data. Works with string, boolean, and custom types like ChangeType to model parameter attributes. Used to generate AWS API requests and process XML or JSON responses containing parameter definitions.",
      "description_length": 294,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingConfigurationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of resharding configurations. Operates on lists of `ReshardingConfiguration.t` values and XML or JSON representations. Used to generate AWS query parameters from configuration lists and to parse XML responses into structured data.",
      "description_length": 300,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.EC2SecurityGroupList",
      "description": "Provides functions to create, parse, and serialize lists of EC2 security group objects. Operates on lists of `EC2SecurityGroup.t` and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS EC2 security group responses in API interactions.",
      "description_length": 270,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FilterValueList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of string values, converting them to and from XML nodes, query strings, and JSON representations. Used to handle AWS API request parameters that expect repeated string values in various formats.",
      "description_length": 321,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RecurringChargeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of recurring charge objects. Operates on lists of `RecurringCharge.t` values and XML or JSON representations. Parses XML input into a list of charges, converts to AWS query parameters, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 327,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeSnapshotList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of node snapshots. Works with XML nodes, AWS query structures, and JSON representations. Used to convert XML data from AWS responses into typed lists and back, supporting data processing pipelines.",
      "description_length": 271,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of global node groups. Operates on lists of `GlobalNodeGroup.t` values and XML nodes, converting them to AWS query parameters, JSON structures, and vice versa. Used to handle structured data in API requests and responses involving distributed node configurations.",
      "description_length": 333,
      "index": 46,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupMemberList",
      "description": "Handles creation and conversion of lists of replication group members. Parses XML nodes into member lists, serializes to AWS query parameters, and encodes/decodes between JSON and member lists. Used to process and transmit replication group member data in AWS API interactions.",
      "description_length": 277,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateSeverity",
      "description": "Converts between string representations and a custom type `t` using bidirectional mappings, and supports serialization to and from JSON and query formats. Parses XML nodes into instances of `t` and provides a generic construction function. Used to handle severity levels in service updates with consistent encoding and decoding across different data formats.",
      "description_length": 358,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to transform status data for API requests and XML/JSON parsing.",
      "description_length": 263,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic construction function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize service update data for API interactions and XML/JSON parsing.",
      "description_length": 289,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Authentication",
      "description": "Provides functions to construct, parse, and serialize authentication data, including creating instances with specified types and password counts, parsing XML nodes into authentication structures, and converting between query, JSON, and internal representations. Works with custom types such as authentication type identifiers, integer counts, and JSON-encoded data. Used to generate AWS-compatible authentication parameters from XML responses and prepare them for API requests.",
      "description_length": 477,
      "index": 51,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.PreferredAvailabilityZoneList",
      "description": "Provides functions to create, parse, and serialize a list of preferred availability zones. Operates on a list of strings representing zone names. Parses XML nodes into zone lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 266,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PreferredOutpostArnList",
      "description": "Provides functions to create, parse, and serialize a list of strings as AWS query parameters or JSON. Operates on lists of string values, typically used for representing ARN lists in AWS API interactions. Parses XML nodes into string lists, converts them to query structures, and handles JSON serialization and deserialization.",
      "description_length": 327,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeList",
      "description": "Provides operations to create a list of cache nodes, parse XML nodes into a list of cache nodes, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of `CacheNode.t` and JSON/AWS query representations. Used to process and transmit cache node configurations in API requests and responses.",
      "description_length": 349,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupStatus",
      "description": "Provides operations to construct, parse, and serialize data structures representing the status of a cache parameter group, including parameter apply status and nodes to reboot. Works with string types, lists of cache node IDs, and JSON or query format representations. Used to generate API requests and process responses in AWS ElastiCache interactions.",
      "description_length": 353,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMembershipList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of security group membership data. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and transmit security group membership information in cloud infrastructure workflows.",
      "description_length": 277,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NotificationConfiguration",
      "description": "Provides operations to construct, parse, and serialize notification configuration data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing optional topic ARN and status fields. Used to process and encode AWS SNS notification settings from XML input or JSON payloads.",
      "description_length": 337,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PendingModifiedValues",
      "description": "Provides operations to construct, parse, and serialize objects representing pending modifications to cache configurations, including cache node removals, engine versions, and authentication settings. Works with types such as integers, strings, lists of cache node IDs, and custom status enums. Used to generate AWS API requests and handle JSON/XML responses for cache cluster updates.",
      "description_length": 384,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupMembershipList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of security group membership records. Operates on lists of `SecurityGroupMembership.t` values and XML or JSON representations. Used to process and transmit security group membership data in AWS API interactions.",
      "description_length": 284,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UGReplicationGroupIdList",
      "description": "Provides functions to create, parse, and serialize a list of string-based replication group IDs. Operates on a type representing a list of strings, supporting XML parsing, query string generation, and JSON encoding/decoding. Used to handle AWS replication group identifiers in request and response data structures.",
      "description_length": 314,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupPendingChanges",
      "description": "Provides operations to construct, parse, and serialize user group pending changes, including adding or removing user IDs. Works with user ID lists and AWS query/json structures. Used to generate API requests and handle XML or JSON input for user group modifications.",
      "description_length": 266,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeUpdateStatusList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of cache node update status records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit update status information from XML responses into structured data for further handling.",
      "description_length": 289,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupUpdateStatusList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of node group update status objects. Operates on XML nodes and JSON structures, converting them to and from a list of `NodeGroupUpdateStatus.t` values. Used to process and transmit update status information in AWS API interactions.",
      "description_length": 301,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SlaMet",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse XML data into structured objects and generate JSON or query parameters for API interactions.",
      "description_length": 301,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated serialization formats. Used to transform and serialize status representations for API interactions and data exchange.",
      "description_length": 282,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SourceType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and parsing capabilities. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize data for XML and JSON formats in API interactions.",
      "description_length": 287,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ClusterIdList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing cluster identifiers. Used to handle AWS cluster ID data in XML and JSON formats during API interactions.",
      "description_length": 324,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupInfo",
      "description": "Provides operations to construct, parse, and serialize data structures representing global replication group information, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based identifiers and roles specific to global replication group members. Used to process and transmit configuration details in AWS-related data exchange scenarios.",
      "description_length": 396,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.MultiAZStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that is instantiated with a specific value. Used to handle status information across multiple Amazon Availability Zones in AWS API interactions.",
      "description_length": 324,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupList",
      "description": "Provides operations to create a list of NodeGroup.t values, parse XML nodes into such a list, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with XML node sequences, AWS query parameters, and JSON values. Used to process and represent groups of nodes in AWS API interactions and data serialization workflows.",
      "description_length": 364,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupOutpostArnList",
      "description": "Provides functions to create, parse, and serialize lists of ARN strings for replication group outposts. Operates on lists of strings representing AWS resource ARNs. Used to handle XML input, generate query parameters, and convert between JSON and list structures.",
      "description_length": 263,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupPendingModifiedValues",
      "description": "Provides operations to construct, parse, and serialize objects representing pending modifications in a replication group, including primary cluster ID, automatic failover status, resharding progress, authentication token updates, and user group changes. Works with custom types such as PendingAutomaticFailoverStatus, ReshardingStatus, and AuthTokenUpdateStatus. Used to generate API requests and handle JSON or XML representations during cluster configuration updates.",
      "description_length": 469,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroup",
      "description": "Provides operations to construct, parse, and serialize cache parameter group data, including converting between XML, query, and JSON formats. Works with structured data representing AWS cache parameter groups, including names, families, descriptions, and ARNs. Used to generate API requests and process responses in AWS-related workflows.",
      "description_length": 338,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroup",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS ElastiCache subnet groups. Works with types such as subnet lists, strings, and JSON structures. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 258,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Tag",
      "description": "Creates a structured tag with optional key and value, supporting XML parsing, query string generation, and JSON serialization/deserialization. Operates on string-based key-value pairs and JSON data structures. Used to construct and process AWS tag metadata in API requests and responses.",
      "description_length": 287,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificParametersList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of cache node type specific parameters. Operates on lists of `CacheNodeTypeSpecificParameter.t` and XML or JSON representations. Used to process configuration data from XML responses and convert it into structured JSON for API interactions.",
      "description_length": 310,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ParametersList",
      "description": "Provides functions to create a parameter list from a value, parse XML nodes into a list of parameters, convert parameter lists to AWS query structures, serialize to JSON format, and deserialize from JSON. Works with XML node sequences, AWS query structures, and JSON values. Used to process and transform configuration parameters from XML input into structured AWS requests and JSON representations.",
      "description_length": 399,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RegionalConfiguration",
      "description": "Provides operations to construct, parse, and serialize regional configuration data, including replication group identifiers, regions, and resharding details. Works with string-based identifiers, lists of resharding configurations, and JSON/XML data formats. Used to generate AWS API requests and process response structures for database replication settings.",
      "description_length": 358,
      "index": 78,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroup",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS cache security groups, including handling owner ID, group name, description, EC2 security groups, and ARN. Works with string types, lists of EC2 security groups, and JSON or query parameter formats. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 361,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Filter",
      "description": "Provides functions to construct, parse, and serialize filter objects with a name and list of values. Works with AWS-specific types such as `FilterValueList.t` and `Aws.Query.t` for query parameter encoding. Used to build and process filters in API requests, such as filtering EC2 instances by tag or state.",
      "description_length": 306,
      "index": 80,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CustomerNodeEndpoint",
      "description": "Represents a customer node endpoint with methods to construct, parse XML, and serialize to query parameters, JSON, and deserialize from JSON. Works with string addresses, integer ports, and XML nodes. Used to process and encode endpoint information from AWS responses or configuration data.",
      "description_length": 290,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOffering",
      "description": "Provides operations to construct, parse, and serialize objects representing reserved cache nodes offerings, including setting attributes like offering ID, cache node type, duration, pricing, and recurring charges. Works with structured data types such as strings, integers, doubles, and lists of recurring charges. Used to generate API requests and handle JSON/XML responses in AWS-related workflows.",
      "description_length": 400,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Snapshot",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS ElastiCache snapshots, including detailed attributes like replication group IDs, snapshot statuses, and node configurations. Works with structured data types such as timestamps, lists of node snapshots, and status enums. Used to generate API requests, process XML responses, and convert between JSON and internal representations for snapshot management.",
      "description_length": 432,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroup",
      "description": "Constructs a structured representation of a global replication group with attributes such as ID, description, status, cache node type, engine, and member nodes. Processes XML input into this structure and serializes it to query parameters, JSON, or deserializes from JSON. Used to manage and exchange global replication group configurations in AWS services.",
      "description_length": 357,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdate",
      "description": "Provides functions to construct, parse, and serialize service update data, including setting attributes like name, release date, severity, and status. Works with structured data types such as dates, strings, booleans, and custom enums for service update properties. Used to generate API requests and process XML or JSON responses in AWS service update workflows.",
      "description_length": 362,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.User",
      "description": "Provides operations to construct, parse, and serialize user data structures with fields like user ID, name, status, and authentication details. Works with custom types such as user group lists and authentication objects, along with standard string and JSON representations. Used to generate query parameters from user records and convert XML input into structured user data.",
      "description_length": 374,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ConfigureShard",
      "description": "Provides operations to construct, parse, and serialize configuration data for shard settings, including node group ID, replica count, and preferred availability zones or outpost ARNs. Works with custom types such as string, integer, and list structures for availability zones and outpost ARNs. Used to generate AWS API requests and process XML or JSON responses related to shard configuration.",
      "description_length": 393,
      "index": 87,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ParameterNameValue",
      "description": "Provides operations to construct, parse, and serialize parameter name-value pairs. Works with string-based parameter names and values, and supports XML, query, and JSON serialization. Used to encode and decode AWS API parameters in request and response structures.",
      "description_length": 264,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheCluster",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS ElastiCache clusters, including methods to convert between XML, query parameters, and JSON formats. Works with structured data types such as cluster configurations, node lists, security groups, and time-stamped attributes. Used to process and transmit cluster details in API interactions, such as creating a cluster or retrieving its status.",
      "description_length": 421,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroup",
      "description": "Provides operations to construct, parse, and serialize user group data structures, including methods to convert between XML, query parameters, and JSON formats. Works with specific types such as user IDs, replication group IDs, and status strings. Used to generate API requests and process responses in AWS-related workflows.",
      "description_length": 325,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateAction",
      "description": "Provides operations to construct, parse, and serialize objects representing specific actions taken during service updates, including setting identifiers, statuses, dates, and node-specific details. Works with structured data types such as strings, dates, lists, and custom enums related to update actions and their attributes. Used to generate API requests, process XML responses, and convert data to and from JSON format for interaction with AWS services.",
      "description_length": 456,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Event",
      "description": "Provides operations to construct, parse, and serialize event data including source identifiers, types, messages, and dates. Works with structured data types containing string, date, and custom source type fields. Used to convert event information into query parameters or JSON formats for API interactions.",
      "description_length": 306,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ProcessedUpdateAction",
      "description": "Provides methods to construct, parse, and serialize objects representing processed update actions, including setting replication group and cache cluster identifiers, update names, and statuses. Works with structured data types containing string and status fields. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 344,
      "index": 93,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UnprocessedUpdateAction",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing unprocessed update actions, including setting identifiers, update names, and error details. Works with string-based identifiers and error information, and supports XML and JSON serialization. Used to handle failed update operations in AWS service interactions, such as caching or replication group updates.",
      "description_length": 395,
      "index": 94,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroup",
      "description": "Provides constructors and parsers for handling replication group data, including methods to create instances with detailed attributes like cluster IDs, node groups, and encryption settings. Works with specific types such as cluster ID lists, node group lists, and endpoint structures. Used to generate API requests, parse XML responses, and serialize/deserialize data for AWS interactions.",
      "description_length": 389,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersion",
      "description": "Encapsulates details about a specific cache engine and its version, including engine name, version string, parameter group family, and descriptive texts. Parses XML nodes into structured data and serializes to query parameters, JSON, and deserializes from JSON. Used to manage and exchange cache engine version information in AWS-related workflows.",
      "description_length": 348,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNode",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing AWS reserved cache nodes, including methods to handle date-time, integers, doubles, and lists of recurring charges. Works with structured data types such as strings, dates, and custom lists, and supports conversion to and from XML and JSON formats. Used to process and exchange reserved cache node details in AWS API interactions, such as retrieving reservation information or generating query parameters for API requests.",
      "description_length": 511,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of cache parameter groups. Operates on lists of `CacheParameterGroup.t` values and XML or JSON representations. Used to generate AWS API queries and process responses containing parameter group lists.",
      "description_length": 270,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PasswordListInput",
      "description": "Provides functions to create, parse, and convert password lists between XML, query parameters, and JSON formats. Operates on lists of strings representing passwords. Parses XML input into a list, converts lists to AWS query structures, and serializes/deserializes lists to and from JSON.",
      "description_length": 287,
      "index": 99,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroups",
      "description": "Creates and manipulates lists of cache subnet group data structures. Parses XML nodes into structured lists, converts them to AWS query parameters, and serializes/deserializes them to and from JSON. Used to handle subnet group configurations in AWS API interactions.",
      "description_length": 266,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of tags. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML tag data and AWS-compatible query or JSON representations.",
      "description_length": 231,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserIdListInput",
      "description": "Provides functions to create, parse, and serialize lists of string-based user IDs. Operates on lists of `Aws.BaseTypes.String.t` values and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into user ID lists and constructs JSON lists from string lists.",
      "description_length": 288,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetIdentifierList",
      "description": "Provides operations to create, parse, and serialize lists of strings as AWS subnet identifiers. Works with lists of string-type values representing subnet IDs. Parses XML nodes into subnet ID lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 285,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroupIdList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing node group identifiers. Used to handle AWS API responses and requests involving multiple node group IDs.",
      "description_length": 324,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupNameList",
      "description": "Provides functions to create, parse, and serialize lists of security group names. Operates on lists of string values representing security group names. Used to convert XML data into structured lists, generate query parameters, and handle JSON serialization and deserialization for network security configurations.",
      "description_length": 313,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupConfigurationList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of node group configurations. Operates on lists of `NodeGroupConfiguration.t` values, converting them to query parameters, JSON structures, and from JSON. Used to handle AWS node group configurations in API requests and responses.",
      "description_length": 303,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupIdsList",
      "description": "Provides operations to create, parse, and serialize lists of security group IDs. Works with lists of string-type identifiers representing AWS security groups. Used to convert between XML node structures, query parameters, and JSON representations in AWS API interactions.",
      "description_length": 271,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotArnsList",
      "description": "Provides functions to create, parse, and serialize a list of ARN strings. Works with lists of strings representing AWS resource identifiers. Parses XML nodes into ARN lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 260,
      "index": 108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupIdListInput",
      "description": "Provides functions to create, parse, and serialize lists of user group IDs, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of strings formatted as AWS base types. Used to process and encode user group identifiers in API requests and responses.",
      "description_length": 298,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EngineDefaults",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS engine default configurations, including cache parameter groups, markers, and node-specific parameters. Works with custom types such as string, list of parameters, and JSON structures. Used to generate query parameters for API requests and to convert between XML and JSON representations during AWS service interactions.",
      "description_length": 400,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterIdList",
      "description": "Provides operations to create, parse, and serialize a list of string-based cluster IDs. Works with lists of strings and AWS-specific types for query and JSON formatting. Used to handle cluster ID data in API requests and responses, such as converting XML input to a structured list or generating JSON payloads.",
      "description_length": 310,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupIdList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing replication group IDs. Used to handle AWS replication group identifiers in request parameters and response parsing.",
      "description_length": 335,
      "index": 112,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RegionalConfigurationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of regional configuration objects. Operates on lists of `RegionalConfiguration.t` and XML nodes, generating AWS query parameters and JSON representations. Used to process and transmit regional settings data in API requests and responses.",
      "description_length": 307,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeTypeList",
      "description": "Provides functions to create, parse, and convert lists of strings into query parameters, JSON structures, and vice versa. Operates on lists of string values, extracting and formatting them according to specific encoding rules. Used to process XML node data into structured query formats and serialize/deserialize data in JSON.",
      "description_length": 326,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthTokenUpdateStrategyType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and encode authentication token update strategies in XML and JSON formats for AWS interactions.",
      "description_length": 308,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroups",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of cache security group configurations. Operates on XML nodes, AWS query structures, and JSON values. Used to process and transmit security group data in cloud infrastructure workflows.",
      "description_length": 255,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FilterList",
      "description": "Provides functions to create, parse, serialize, and deserialize filter lists. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML filter definitions and AWS API-compatible query or JSON representations.",
      "description_length": 244,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AZMode",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with bidirectional mappings for string representations. Works with a polymorphic type `t` and XML node structures. Used to serialize and deserialize data for API interactions and configuration parsing.",
      "description_length": 283,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CustomerNodeEndpointList",
      "description": "Creates and manipulates lists of customer node endpoints, supporting parsing from XML nodes, conversion to AWS query parameters, and serialization/deserialization to JSON. Operates on lists of `CustomerNodeEndpoint.t` values, enabling structured data handling in API interactions. Used to process endpoint configurations from XML responses and prepare them for JSON transmission or query string encoding.",
      "description_length": 404,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of reserved cache nodes offerings. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and exchange reserved cache node offering data in API interactions.",
      "description_length": 257,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotList",
      "description": "Provides functions to create a snapshot list, parse XML nodes into a list of snapshots, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query parameters, and JSON values. Used to process and transmit snapshot data in cloud infrastructure workflows.",
      "description_length": 323,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateStatusList",
      "description": "Handles creation, parsing, and serialization of service update status lists. Operates on lists of `ServiceUpdateStatus.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to process and transmit service status updates in API interactions.",
      "description_length": 284,
      "index": 122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of GlobalReplicationGroup objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to handle replication group data in AWS API interactions.",
      "description_length": 233,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of service update records. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data and structured service update lists for API interactions.",
      "description_length": 257,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of user data. Operates on lists of `User.t` and XML or JSON representations. Parses XML nodes into user lists, converts to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 266,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RemoveReplicasList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values, typically used for handling AWS request parameters. Used to process and format duplicate-safe string lists in API interactions.",
      "description_length": 335,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicaConfigurationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of shard configurations. Operates on lists of `ConfigureShard.t` values and XML nodes. Parses XML input into shard lists, generates AWS query parameters, and converts between JSON and shard lists.",
      "description_length": 266,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ParameterNameValueList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of parameter name-value pairs. Operates on lists of `ParameterNameValue.t` and XML nodes, converting between them and JSON or query formats. Used to process configuration parameters from XML responses and encode them into AWS query or JSON structures.",
      "description_length": 321,
      "index": 128,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of CacheCluster objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML responses from API calls and structured data for further processing.",
      "description_length": 257,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of user groups. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert user group data between different representations in API interactions.",
      "description_length": 238,
      "index": 130,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsToRemoveList",
      "description": "Provides operations to create, parse, serialize, and deserialize a list of string-based node group identifiers. Works with lists of strings representing AWS node group names. Used to generate query parameters from node group lists and to convert between XML node structures and JSON representations.",
      "description_length": 299,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsToRetainList",
      "description": "Provides functions to create, parse, and serialize a list of strings representing node groups. Operates on a type alias for a list of strings, converting between XML nodes, query parameters, and JSON structures. Used to handle AWS EC2 Auto Scaling group retention lists in API requests and responses.",
      "description_length": 300,
      "index": 132,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.TimeRangeFilter",
      "description": "Provides operations to create, parse, and serialize time range filters using AWS date-time values. Works with a structured type containing optional start and end times. Used to filter data based on specific temporal boundaries in API requests and responses.",
      "description_length": 257,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionStatusList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of update action status objects. Operates on lists of `UpdateActionStatus.t` and XML or JSON representations. Used to process XML responses from AWS APIs and convert them into structured data for further handling.",
      "description_length": 283,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of update actions. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and structured data for API requests.",
      "description_length": 226,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EventList",
      "description": "Provides functions to create event lists, parse XML nodes into event lists, convert event lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of Event.t values and AWS-specific data types like Query.t and Json.t. Used to process and transmit event data in web service interactions.",
      "description_length": 330,
      "index": 136,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.OutpostMode",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic initialization function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize data structures for XML and JSON formats in AWS-related contexts.",
      "description_length": 294,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ProcessedUpdateActionList",
      "description": "Creates a list of processed update actions from XML nodes, converts them to AWS query parameters, and serializes/deserializes them to and from JSON. Operates on lists of `ProcessedUpdateAction.t` values and XML node structures. Used to handle structured data transformations in AWS API interactions.",
      "description_length": 299,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UnprocessedUpdateActionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of unprocessed update actions. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between raw XML input and structured AWS API data formats.",
      "description_length": 246,
      "index": 139,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.KeyList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values, typically used for representing key-value pairs in AWS requests. Used to transform XML input from API responses into structured data and prepare data for JSON or query-based API calls.",
      "description_length": 392,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupList",
      "description": "Creates a list of replication groups from XML nodes, serializes and deserializes the list to and from JSON, and constructs an AWS query from the list. Operates on lists of `ReplicationGroup.t` values. Used to process and transmit replication group data in AWS API interactions.",
      "description_length": 277,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of cache engine versions. Operates on lists of `CacheEngineVersion.t` values and XML nodes. Used to generate AWS query parameters and JSON representations for cache version data.",
      "description_length": 248,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of reserved cache nodes. Operates on lists of `ReservedCacheNode.t` and XML nodes, converting between these representations and AWS query or JSON formats. Used to handle AWS ElastiCache reserved node data in API requests and responses.",
      "description_length": 305,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidUserGroupStateFault",
      "description": "Provides operations to create, parse, and serialize error states related to invalid user group configurations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 239,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ListAllowedNodeTypeModificationsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for modifying node types in AWS ElastiCache, including creating instances with optional cluster or replication group identifiers. Works with string-based identifiers and JSON/XML data structures. Used to generate API requests and handle responses for cluster configuration updates.",
      "description_length": 345,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages containing cache parameter groups, including setting a marker and list of groups. Works with types such as strings, lists of cache parameter groups, and JSON or query structures. Used to generate HTTP request payloads and process XML responses in AWS API interactions.",
      "description_length": 332,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheClustersMessage",
      "description": "Provides functions to construct, parse, and serialize requests for describing cache clusters, including parameters like cluster ID, record limits, pagination markers, and detailed node information. Works with string, integer, boolean, and JSON data types. Used to generate HTTP query parameters for API calls and to process XML responses from cloud service endpoints.",
      "description_length": 367,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateReplicationGroupResult",
      "description": "Provides functions to construct, parse, and serialize a replication group result, including converting between XML nodes, query parameters, and JSON representations. Works with the `ReplicationGroup.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API responses from AWS ElastiCache when creating a replication group.",
      "description_length": 361,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateUserMessage",
      "description": "Creates a structured user message with user ID, name, engine, optional passwords, access string, and password requirement flag. Processes XML nodes into this structure, converts it to query parameters, and serializes/deserializes between JSON and the internal representation. Used to generate and parse user configuration data for system integration.",
      "description_length": 350,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheSubnetGroupResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of modifying a cache subnet group. Works with the `CacheSubnetGroup.t` type and AWS query and JSON formats. Used to generate HTTP requests and process API responses in AWS SDK interactions.",
      "description_length": 280,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a duplicate cache parameter group. Works with the unit type to signal the existence of a conflicting resource. Used in AWS API interactions to handle and encode errors when a parameter group already exists.",
      "description_length": 286,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheClusterResult",
      "description": "Provides operations to construct, parse, and serialize a cache cluster deletion result, including converting between XML, JSON, and query formats. Works with the `CacheCluster.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from AWS ElastiCache API when deleting a cache cluster.",
      "description_length": 351,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteUserMessage",
      "description": "Provides operations to construct, parse, and serialize a user deletion message using a structured record type containing a user ID. Works with XML nodes, query parameters, and JSON representations for message handling. Used to generate and process messages for user account removal in API interactions.",
      "description_length": 302,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeGlobalReplicationGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for describing global replication groups, including setting identifiers, record limits, pagination markers, and member information flags. Works with string, integer, boolean, and JSON data structures. Used to generate HTTP query parameters and JSON payloads for API requests related to global replication group metadata.",
      "description_length": 384,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizationNotFoundFault",
      "description": "Provides operations to create, parse, and serialize an authorization not found error, converting between internal and external representations. Works with unit type and AWS query or JSON structures. Used to handle API responses where an authorization failure occurs without additional data.",
      "description_length": 290,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DefaultUserAssociatedToUserGroupFault",
      "description": "Provides operations to create, parse, and serialize error representations related to user-group associations, working with unit types and AWS query structures. Converts error states into JSON format and reconstructs them from JSON data. Used to handle specific validation failures in user management systems.",
      "description_length": 308,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupAlreadyUnderMigrationFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a replication group under migration, working with unit type and AWS query/json structures. Includes a constructor for the fault and methods to convert between internal and external representations. Used to handle error conditions in AWS RDS replication group operations.",
      "description_length": 342,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to cache subnet groups, including setting a marker and list of subnet groups. Works with types such as strings, lists of subnet groups, and JSON or query parameters. Used to generate HTTP requests and process XML responses in AWS API interactions.",
      "description_length": 319,
      "index": 158,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a security group not found, working with unit type and AWS query/json structures. Converts between internal representations and AWS-compatible formats. Used to handle and transmit errors in AWS API interactions where security group lookup fails.",
      "description_length": 318,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DuplicateUserNameFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing a duplicate user name, working with unit type and AWS query/json structures. Includes conversion to and from JSON and AWS query formats. Used to handle user name conflicts in API responses.",
      "description_length": 266,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CompleteMigrationMessage",
      "description": "Provides operations to construct, parse, and serialize migration messages with a replication group ID and an optional force flag. Works with XML nodes, query parameters, and JSON structures for message handling. Used to generate and process migration commands in distributed database systems.",
      "description_length": 292,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a cache parameter group deletion request, including converting between XML nodes, query parameters, and JSON representations. Works with string-based cache parameter group names and structured data types for AWS API interactions. Used to generate and process deletion messages for specific cache parameter groups in AWS ElastiCache.",
      "description_length": 387,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseReplicaCountResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the outcome of decreasing a replication group's replica count. Works with `ReplicationGroup.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate HTTP query parameters and JSON representations for API responses.",
      "description_length": 346,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeQuotaForCustomerExceededFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing exceeded node quota for a customer. Works with the unit type and AWS query or JSON structures. Used to handle error responses in API interactions where customer resource limits are breached.",
      "description_length": 267,
      "index": 164,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a user group existence check, working with unit types and AWS query/json formats. Includes a constructor for the error, a parser that returns an optional unit, and conversions to and from JSON and AWS query structures. Used to handle and encode errors when a user group already exists in a system.",
      "description_length": 374,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsPerReplicationGroupQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a unit type representing a quota exceeded fault related to node groups and replication groups. Works with AWS query parameters and JSON structures. Used to handle error responses in AWS SDK interactions where node group limits are exceeded.",
      "description_length": 292,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagListMessage",
      "description": "Provides operations to construct, parse, and serialize a structured data container using a tag list. Works with XML nodes, AWS query parameters, and JSON structures containing nested associations and lists. Used to convert between XML representations of tags and AWS-compatible query or JSON formats.",
      "description_length": 300,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PurchaseReservedCacheNodesOfferingMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing reserved cache node offerings, including setting offering and node IDs, and count. Works with string and integer types for identifiers and counts, and integrates with XML and JSON formats. Used to handle AWS ElastiCache reserved node offerings in API requests and responses.",
      "description_length": 358,
      "index": 168,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseReplicaCountResult",
      "description": "Provides operations to construct, parse, and serialize a response for increasing a replication group's replica count. Works with `ReplicationGroup.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate HTTP query parameters and JSON payloads for AWS API interactions.",
      "description_length": 319,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizationAlreadyExistsFault",
      "description": "Handles error cases where an authorization already exists in a system. Provides creation, parsing, and serialization functions for error representations. Works with unit type and AWS query/json formats for interoperability.",
      "description_length": 223,
      "index": 170,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize a unit type representing a user quota exceeded error. Works with AWS query parameters and JSON structures for API interactions. Used to handle and encode quota-related exceptions in request processing.",
      "description_length": 252,
      "index": 171,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to test failover events. Works with structured data including replication group IDs and node group IDs. Used to generate query parameters for API requests and to convert between XML and JSON representations in distributed system testing.",
      "description_length": 309,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheSecurityGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for describing cache security groups, including setting group names, record limits, and pagination markers. Works with string, integer, and JSON data types. Used to generate HTTP query parameters and JSON payloads for API requests related to cache security group information.",
      "description_length": 339,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations related to missing subnet groups. Works with unit type and AWS query/json structures. Used to handle and encode 'CacheSubnetGroupNotFound' errors in API responses.",
      "description_length": 237,
      "index": 174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing an existing security group in a caching system. Works with the unit type to signal the presence of a duplicate security group. Used to handle error responses in AWS API interactions where a security group already exists.",
      "description_length": 297,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateUserGroupMessage",
      "description": "Creates a message with a user group ID and engine, optionally including user IDs. Operates on AWS string types, JSON, and XML data structures. Used to generate and parse messages for user group notifications in AWS services.",
      "description_length": 224,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RevokeCacheSecurityGroupIngressResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the revocation of a security group ingress rule for a cache. Works with `CacheSecurityGroup.t` and AWS-specific query and JSON formats. Used to generate HTTP requests and process API responses in AWS ElastiCache interactions.",
      "description_length": 312,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheSubnetGroupMessage",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS ElastiCache subnet group configurations. Works with string-based identifiers, subnet lists, and JSON/Query data formats. Used to generate API requests for modifying subnet groups in cloud infrastructure setups.",
      "description_length": 290,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a missing reserved cache node. Works with unit type and AWS query or JSON structures. Used to handle errors when a reserved cache node is not found in a request.",
      "description_length": 234,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseNodeGroupsInGlobalReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a message for reducing node groups in a global replication group, including specifying which groups to remove or retain and whether changes should take effect immediately. Works with types such as string, integer, boolean, and custom lists for global node group identifiers. Used to dynamically adjust replication configurations in AWS ElastiCache for Redis.",
      "description_length": 413,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidReplicationGroupStateFault",
      "description": "Handles error state validation for replication groups, providing creation, parsing, and serialization functions. Works with unit type and AWS query/json structures. Used to manage and convert invalid replication group state errors in AWS API interactions.",
      "description_length": 255,
      "index": 181,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateReplicationGroupMessage",
      "description": "Constructs and serializes messages for creating a replication group, including configuration for clusters, availability zones, node groups, and encryption settings. Operates on types such as strings, integers, lists, and custom records for replication group parameters. Used to generate API requests for setting up distributed caching systems with specific scaling and security configurations.",
      "description_length": 393,
      "index": 182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for a replication group not found scenario. Works with unit type and AWS query or JSON structures. Used to handle and encode specific AWS ElastiCache error responses.",
      "description_length": 240,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a unit type representing a quota exceeded fault. Works with AWS query parameters and JSON structures. Used to handle cache parameter group quota limits in API responses.",
      "description_length": 221,
      "index": 184,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSubnetGroupMessage",
      "description": "Creates a structured message for defining a cache subnet group, including a name, description, and list of subnet identifiers. Operates on string types, a list of subnet identifiers, and JSON or query format data. Used to generate API requests for configuring database subnet groups in cloud environments.",
      "description_length": 305,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEngineDefaultParametersResult",
      "description": "Provides functions to construct, parse, and serialize engine default parameters, including conversion to and from JSON and query formats. Works with the EngineDefaults.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to handle AWS DescribeEngineDefaultParameters responses and their structured representation.",
      "description_length": 338,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidParameterValueException",
      "description": "Provides constructors and parsers for handling invalid parameter value errors, including conversion to and from JSON and query formats. Works with custom exception type containing optional message information. Used to serialize and deserialize error responses in AWS API interactions.",
      "description_length": 284,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagQuotaPerResourceExceeded",
      "description": "Provides functions to create, parse, and serialize error data related to resource quota limits being exceeded. Works with unit type and AWS query/json structures. Used to handle and encode quota-related errors in API responses.",
      "description_length": 227,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the outcome of a snapshot deletion. Works with the `Snapshot.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and format responses from AWS API calls related to snapshot management.",
      "description_length": 330,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidKMSKeyFault",
      "description": "Provides operations to create, parse, and serialize error representations related to invalid KMS keys. Works with unit type and AWS query/json structures. Used to handle and convert KMS key validation failures in API interactions.",
      "description_length": 230,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InsufficientCacheClusterCapacityFault",
      "description": "Provides functions to create, parse, and serialize error instances related to insufficient cache cluster capacity. Works with unit type and AWS query or JSON structures. Used to handle and convert AWS ElastiCache error responses in networked applications.",
      "description_length": 255,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidSubnet",
      "description": "Provides functions to create, parse, and serialize invalid subnet data, converting between internal representations and query or JSON formats. Works with unit type and generic input types for interoperability. Used to handle invalid subnet scenarios in AWS request construction and data exchange.",
      "description_length": 296,
      "index": 192,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a user existence check failure. Works with unit type and AWS query/json structures. Used to handle and encode user duplication errors in API responses.",
      "description_length": 228,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSecurityGroupMessage",
      "description": "Creates a structured message for defining a cache security group with a specified name and description. Processes XML nodes into the message format, converts the message to query parameters, and serializes/deserializes it to and from JSON. Used to generate and parse AWS-compatible requests for cache security group configurations.",
      "description_length": 331,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AddTagsToResourceMessage",
      "description": "Provides operations to construct, parse, and serialize a resource tags message, including creating an instance from a resource name and tag list, parsing XML nodes into the structure, and converting to query parameters or JSON. Works with AWS resource names and tag lists represented as lists of key-value pairs. Used to prepare and process requests for associating tags with AWS resources in API interactions.",
      "description_length": 410,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a unit type representing a subnet quota exceeded fault. Works with AWS query parameters and JSON structures. Used to handle and encode error responses in API interactions.",
      "description_length": 223,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.BatchStopUpdateActionMessage",
      "description": "Provides operations to construct, parse, and serialize messages for batch stop update actions, handling replication group and cache cluster identifiers. Works with custom types for group and cluster IDs, and AWS-specific string and JSON representations. Used to generate structured requests for stopping updates across multiple clusters in a single operation.",
      "description_length": 359,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetInUse",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON format. Works with the unit type and arbitrary input types for parsing. Used to handle subnet presence checks in AWS API interactions.",
      "description_length": 228,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidVPCNetworkStateFault",
      "description": "Handles error state representation for invalid VPC network configurations. Accepts unit values and converts them to query parameters, JSON structures, and back, facilitating error serialization and deserialization in AWS-related workflows. Used to standardize error handling in network validation processes.",
      "description_length": 307,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizeCacheSecurityGroupIngressResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the outcome of authorizing a security group for a Redis cache. Works with `CacheSecurityGroup.t` and AWS-specific query and JSON formats. Used to handle API responses from AWS ElastiCache when updating security group permissions.",
      "description_length": 316,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidParameterCombinationException",
      "description": "Provides a constructor for exception values with optional messages, parsing from XML nodes, and serialization to query parameters, JSON objects, and deserialization from JSON. Works with string messages, XML node structures, and JSON representations. Used to handle and communicate invalid parameter combinations in AWS API interactions.",
      "description_length": 337,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyUserMessage",
      "description": "Provides functions to construct, parse, and serialize user modification requests, including setting user IDs, access strings, password lists, and flags. Works with types such as strings, boolean flags, and custom password lists. Used to generate API-compatible query parameters and JSON payloads for user attribute updates.",
      "description_length": 323,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for a cache cluster not found scenario. Works with unit type and AWS query or JSON structures. Used to handle and convert error states in AWS-related operations.",
      "description_length": 235,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUserGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for user group management, including setting user group IDs, record limits, and pagination markers. Works with string and integer types for identifiers and configuration parameters. Used to generate API requests and handle XML or JSON formatted input from AWS services.",
      "description_length": 333,
      "index": 204,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a missing cache parameter group. Works with unit type and AWS query or JSON structures. Used to handle and format \"CacheParameterGroupNotFound\" errors in API responses.",
      "description_length": 248,
      "index": 205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidARNFault",
      "description": "Provides operations to create, parse, and serialize error data related to invalid Amazon Resource Names. Works with the unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 237,
      "index": 206,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheParameterGroupStateFault",
      "description": "Handles error state transitions for cache parameters, providing creation, parsing, and serialization functions. Operates on unit type and AWS query/json structures. Used to manage invalid state transitions in cache configuration workflows.",
      "description_length": 239,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeSnapshotsMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing snapshots, including parameters like replication group ID, cache cluster ID, snapshot name, and pagination controls. Works with string, integer, and boolean types, as well as AWS-specific type wrappers. Used to generate HTTP query parameters and JSON payloads for API interactions, and to parse XML responses into structured data.",
      "description_length": 410,
      "index": 208,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyGlobalReplicationGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a message for modifying a global replication group, including setting identifiers, configuration flags, and optional parameters like node type and engine version. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate API requests for updating global replication group settings in AWS ElastiCache.",
      "description_length": 391,
      "index": 209,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidGlobalReplicationGroupStateFault",
      "description": "Handles error states related to invalid global replication group configurations. Accepts unit values and converts them to query parameters, JSON representations, and back from JSON. Used in AWS API error handling for replication group validation failures.",
      "description_length": 255,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseNodeGroupsInGlobalReplicationGroupMessage",
      "description": "Provides functions to construct, parse, and serialize messages for increasing node groups in a global replication group, including parsing XML input, generating query parameters, and converting to and from JSON. Works with types such as strings, integers, boolean values, and lists of regional configurations. Used to update global replication group settings in AWS ElastiCache through API requests.",
      "description_length": 399,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AllowedNodeTypeModificationsMessage",
      "description": "Provides operations to construct, parse, and serialize messages containing node type modifications for scaling actions. Works with `NodeTypeList.t` for specifying scale up and down changes, and integrates with AWS query and JSON formats. Used to generate structured requests for cloud infrastructure adjustments.",
      "description_length": 312,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a replication group existence check. Operates on unit type and AWS query or JSON structures. Used to handle and convert error states in distributed database operations.",
      "description_length": 245,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetNotAllowedFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing a disallowed subnet. Works with unit type and converts between various representations including query parameters and JSON. Used to handle errors when a subnet is not permitted in API requests.",
      "description_length": 270,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeQuotaForClusterExceededFault",
      "description": "Provides functions to create, parse, and serialize error data related to cluster node quota exceedance. Works with unit type and AWS query/json structures. Used to handle and represent specific cluster resource limit violations in API responses.",
      "description_length": 245,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheClusterResult",
      "description": "Provides operations to construct, parse, and serialize a cache cluster modification result, including converting between XML, JSON, and query formats. Works with the `CacheCluster.t` type and AWS-specific data structures for query and JSON representation. Used to handle responses from cache cluster update operations in AWS SDK interactions.",
      "description_length": 342,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupInUse",
      "description": "Provides operations to create, parse, and serialize a unit type representing the in-use status of a subnet group. Works with the unit type and AWS query structures. Used to generate AWS API queries and handle JSON responses for subnet group validation.",
      "description_length": 252,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupDetails",
      "description": "Provides operations to construct, parse, and serialize objects containing cache parameter group details, including marker, parameters, and node-type-specific parameters. Works with types such as strings, lists of parameters, and JSON structures. Used to generate AWS API requests and process XML responses related to cache configurations.",
      "description_length": 338,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupMessage",
      "description": "Provides functions to construct, parse, and serialize messages for modifying a replication group, including setting identifiers, descriptions, security configurations, and operational parameters. Works with string, boolean, integer, and list types, as well as custom types like cache security group names and user group IDs. Used to generate API requests for updating replication group settings in a distributed caching system.",
      "description_length": 427,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebalanceSlotsInGlobalReplicationGroupResult",
      "description": "Provides operations to construct, parse, and serialize a response structure for rebalancing slots in a global replication group. Works with the `GlobalReplicationGroup.t` type and AWS query and JSON formats. Used to generate HTTP requests and process XML responses in distributed database management workflows.",
      "description_length": 310,
      "index": 220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize error instances representing user group quota exceeded conditions. Works with unit type to signal error states without additional data. Used in AWS API error handling to generate query parameters and JSON responses for quota-related failures.",
      "description_length": 293,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteGlobalReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a message for deleting a global replication group, including converting between XML, JSON, and query formats. Works with string and boolean types for the global replication group ID and a flag to retain the primary group. Used to generate API requests for AWS ElastiCache operations.",
      "description_length": 338,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize test failover result data. Works with XML nodes, AWS query parameters, and JSON structures. Used to process and generate test failover outcomes from XML responses and convert them into JSON for API interactions.",
      "description_length": 279,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheSecurityGroupStateFault",
      "description": "Handles error state related to invalid security group configurations. Accepts unit type and provides parsing, query construction, and JSON serialization/deserialization for error representations. Used in AWS API interactions to manage and convert invalid security group state exceptions.",
      "description_length": 287,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for a specific fault condition. Works with unit type and AWS query or JSON structures. Used to handle and encode \"GlobalReplicationGroup not found\" error responses in API interactions.",
      "description_length": 258,
      "index": 225,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupResult",
      "description": "Provides functions to construct, parse, and serialize a replication group result structure, including converting between XML, query parameters, and JSON formats. Works with the `ReplicationGroup.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and transmit replication group modification responses in AWS API interactions.",
      "description_length": 367,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMessage",
      "description": "Provides operations to construct, parse, and serialize objects representing cache security group messages, including setting a marker and security groups. Works with types such as strings, custom cache security groups collections, and JSON or query parameters. Used to generate API requests and handle responses in AWS-related workflows.",
      "description_length": 337,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUsersMessage",
      "description": "Provides methods to construct, parse, and serialize user query parameters with optional engine, user ID, filters, max records, and pagination marker. Works with custom types including a record structure for query state and XML or JSON representations. Used to generate AWS-compliant requests for user data retrieval and to process incoming XML responses.",
      "description_length": 354,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheSubnetGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a message for deleting a Redis cache subnet group, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and structured data types for AWS API interactions. Used to generate API requests and handle responses in network communication with AWS services.",
      "description_length": 358,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebootCacheClusterResult",
      "description": "Provides operations to construct, parse, and serialize a cache cluster reboot result, including converting between XML, JSON, and query formats. Works with the `CacheCluster.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle responses from AWS ElastiCache API calls related to cluster reboots.",
      "description_length": 335,
      "index": 230,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteSnapshotMessage",
      "description": "Creates a message structure for deleting a snapshot, supporting construction from a snapshot name, parsing XML nodes, and converting to query parameters, JSON, or from JSON. Operates on string-based snapshot identifiers and structured data types. Used to generate and process delete requests in AWS API interactions.",
      "description_length": 316,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSubnetGroupResult",
      "description": "Provides operations to construct, parse, and serialize a cache subnet group result, including converting between XML, JSON, and query formats. Works with the `CacheSubnetGroup.t` type and AWS-specific data structures. Used to handle responses from AWS ElastiCache API when creating a subnet group.",
      "description_length": 297,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheClusterMessage",
      "description": "Provides operations to construct, parse, and serialize messages for modifying a cache cluster, including setting cache node counts, removing nodes, updating security groups, and managing maintenance windows. Works with types such as cache cluster IDs, availability zones, security group lists, and boolean flags. Used to generate API requests for cloud infrastructure updates, ensuring precise configuration changes.",
      "description_length": 416,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupNameMessage",
      "description": "Provides operations to construct, parse, and serialize a structure representing a cache parameter group name, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers and structured data types for AWS-related interactions. Used to handle parameter group names in API requests and responses, ensuring consistent formatting and parsing.",
      "description_length": 397,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheParameterGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing cache parameter groups, including setting a specific group name, limiting results, and specifying a pagination marker. Works with string and integer types for configuration and pagination, and handles XML and JSON data formats. Used to generate HTTP query parameters and JSON payloads for API interactions with caching services.",
      "description_length": 407,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.StartMigrationMessage",
      "description": "Provides operations to construct, parse, and serialize migration start messages, including converting between XML nodes, query parameters, and JSON representations. Works with types such as replication group IDs, customer node endpoints, and structured message data. Used to generate and process migration initiation payloads in distributed database systems.",
      "description_length": 358,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSecurityGroupResult",
      "description": "Provides operations to construct, parse, and serialize a cache security group result, including converting between XML, JSON, and query formats. Works with the `CacheSecurityGroup.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate and process responses from AWS ElastiCache API calls involving security groups.",
      "description_length": 371,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateGlobalReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages for creating a global replication group, including setting the group ID suffix, description, and primary group ID. Works with string-based identifiers and structured data formats like XML, query parameters, and JSON. Used to generate API requests for distributed database configurations.",
      "description_length": 351,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS reserved cache nodes offerings, including methods to convert between XML, query parameters, and JSON formats. Works with types such as strings, lists of reserved cache nodes offerings, and JSON associations. Used to handle API responses and requests in AWS SDK interactions involving cache node configurations.",
      "description_length": 397,
      "index": 239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheClusterMessage",
      "description": "Provides operations to construct, parse, and serialize messages for deleting a cache cluster, including converting between XML, JSON, and query parameters. Works with string-based identifiers and structured data types representing cache cluster configurations. Used to generate API requests for cluster deletion with optional final snapshot retention.",
      "description_length": 351,
      "index": 240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteReplicationGroupResult",
      "description": "Provides operations to construct, parse, and serialize a replication group result, including converting between XML, JSON, and query formats. Works with the `ReplicationGroup.t` type and AWS-specific data structures. Used to handle responses from AWS ElastiCache API when deleting a replication group.",
      "description_length": 301,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representation for service update not found errors, working with unit type and AWS query/json formats. Includes a constructor for the fault, a parser that returns an option, and methods to convert between data structures and AWS query or JSON. Used to handle and transmit specific error conditions in AWS service interactions.",
      "description_length": 385,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeSnapshotsListMessage",
      "description": "Provides operations to construct, parse, and serialize a message containing a list of snapshots, including converting between XML, query parameters, and JSON formats. Works with AWS string types, snapshot lists, and JSON structures. Used to handle API responses for listing snapshots in AWS EC2.",
      "description_length": 295,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeServiceUpdatesMessage",
      "description": "Provides operations to construct, parse, and serialize service update requests, including setting service name, status, pagination parameters, and converting between XML, query, and JSON formats. Works with custom types such as service update status lists, strings, and integers. Used to generate API-compatible requests for querying service update information from AWS.",
      "description_length": 370,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FailoverGlobalReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to global replication group failover, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers for global replication groups and regions. Used to generate and process failover requests in distributed database systems.",
      "description_length": 352,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a missing snapshot, working with unit types and AWS query structures. Converts between internal representations and JSON for API interactions. Used to handle scenarios where a requested snapshot does not exist in the system.",
      "description_length": 296,
      "index": 246,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReplicationGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for describing replication groups, including setting replication group ID, limiting results, and pagination. Works with string and integer types for configuration and handles XML and JSON data formats. Used to generate HTTP query parameters and JSON payloads for API requests related to replication group information.",
      "description_length": 381,
      "index": 247,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for reserved cache node offerings not found. Works with unit type and AWS query structures. Used to handle specific API error responses in AWS-related workflows.",
      "description_length": 235,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeGlobalReplicationGroupsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing global replication group information, including methods to convert between XML, JSON, and query formats. Works with types such as strings, lists of global replication groups, and JSON associations. Used to process API responses from services managing distributed database clusters.",
      "description_length": 364,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseNodeGroupsInGlobalReplicationGroupResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for decreasing node groups in a global replication group. Works with the `GlobalReplicationGroup.t` type and AWS query and JSON formats. Used to generate HTTP requests and process XML responses in AWS API interactions.",
      "description_length": 293,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdatesMessage",
      "description": "Provides constructors and parsers for handling service update messages, including creating instances with optional marker and service update lists, parsing XML nodes into message structures, and converting between query, JSON, and internal representations. Works with AWS string types, service update lists, and JSON structures. Used to process and serialize notifications about changes in AWS services.",
      "description_length": 403,
      "index": 251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeAlreadyExistsFault",
      "description": "Provides operations to create, parse, and serialize error representations for a reserved cache node existence fault. Works with unit type and AWS query or JSON structures. Used to handle and convert error states in AWS API interactions.",
      "description_length": 236,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing a missing node group, working with unit types and AWS query structures. Converts between internal representations and JSON formats for API interactions. Used to handle errors when a node group is not found in distributed systems.",
      "description_length": 306,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebalanceSlotsInGlobalReplicationGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a message for rebalancing slots in a global replication group, including converting between XML nodes, query parameters, and JSON representations. Works with string and boolean types for configuration parameters and a structured record type for message data. Used to generate and process requests in AWS SDK interactions involving replication group adjustments.",
      "description_length": 415,
      "index": 254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizeCacheSecurityGroupIngressMessage",
      "description": "Provides operations to construct, parse, and serialize a message representing a request to authorize ingress for a security group in an Amazon ElastiCache cluster. Works with string-based identifiers for security groups and their owners, and supports XML and JSON serialization formats. Used to generate API requests for configuring network access rules in ElastiCache environments.",
      "description_length": 382,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CompleteMigrationResponse",
      "description": "Provides operations to construct, parse, serialize, and deserialize migration response data. Works with a structured record type containing migration status and replication group information. Used to generate AWS API query parameters and JSON representations from parsed XML responses.",
      "description_length": 285,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReservedCacheNodesOfferingsMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing reserved cache nodes offerings, including methods to convert between XML, query parameters, and JSON formats. Works with string, integer, and associative list data types to represent offering details like ID, node type, duration, and product description. Used to generate API requests and process responses in AWS ElastiCache interactions.",
      "description_length": 423,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a unit type representing a specific error condition related to security group quota limits. Works with AWS query parameters and JSON structures. Used to handle and encode quota exceeded faults in API interactions.",
      "description_length": 265,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUsersResult",
      "description": "Provides operations to construct, parse, and serialize user result data, including creating instances with optional user lists and pagination markers, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with user lists, strings, and AWS-specific data types for query and JSON formatting. Used to process and transmit user data from API responses in a structured, serializable format.",
      "description_length": 443,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages for deleting a replication group, including setting the replication group ID, retention of the primary cluster, and final snapshot identifier. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate API requests for terminating replication groups while controlling snapshot retention.",
      "description_length": 387,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ClusterQuotaForCustomerExceededFault",
      "description": "Provides operations to create, parse, and serialize a fault type representing exceeded cluster quotas for a customer. Works with the unit type and AWS query and JSON structures. Used to handle and encode quota-related error responses in API interactions.",
      "description_length": 254,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a missing tag, working with unit types and AWS query/json structures. Includes parsing from arbitrary inputs, conversion to AWS query parameters, and JSON serialization. Used to handle tag absence in AWS API interactions.",
      "description_length": 293,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CopySnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a result structure associated with copying a snapshot. Works with the `Snapshot.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate HTTP query parameters and JSON representations from a snapshot copy operation result.",
      "description_length": 332,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteUserGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a user group message structure using XML and JSON formats. Works with string-based user group identifiers and structured data types for query parameters. Used to generate API requests and handle incoming XML or JSON payloads related to user group management.",
      "description_length": 313,
      "index": 264,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.FailoverGlobalReplicationGroupResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of a global replication group failover, including converting between XML, JSON, and query parameters. Works with the `GlobalReplicationGroup.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit failover outcomes in AWS SDK interactions.",
      "description_length": 398,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverNotAvailableFault",
      "description": "Provides operations to create, parse, and serialize a fault condition representing a failed failover. Works with unit type and AWS query/json structures. Used to generate and handle specific error representations in distributed system testing.",
      "description_length": 243,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseReplicaCountMessage",
      "description": "Provides operations to construct, parse, and serialize messages for decreasing replica counts in a replication group, including setting the new replica count, specifying replicas to remove, and controlling immediate application. Works with types such as string, integer, boolean, and custom lists for replication configurations and replica removals. Used to generate API requests for modifying database cluster configurations in AWS services.",
      "description_length": 442,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ResetCacheParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a request to reset a cache parameter group, including setting a parameter group name, resetting all parameters, or specifying individual parameter changes. Works with string, boolean, and list data types, as well as AWS-specific types for query and JSON formatting. Used to generate API requests for modifying cache configurations in AWS ElastiCache.",
      "description_length": 405,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateGlobalReplicationGroupResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing a global replication group, including conversion to query parameters, JSON, and parsing from XML nodes. Works with the `GlobalReplicationGroup.t` type and AWS-specific data structures. Used to handle responses from AWS ElastiCache API when creating a global replication group.",
      "description_length": 356,
      "index": 269,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEventsMessage",
      "description": "Encodes and decodes event data with timestamps, record limits, and pagination markers. Accepts XML nodes for parsing and generates query parameters or JSON representations. Used to construct and serialize requests for retrieving event logs from a service.",
      "description_length": 255,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RevokeCacheSecurityGroupIngressMessage",
      "description": "Provides operations to construct, parse, and serialize a message for revoking security group ingress in a cache, working with string-based identifiers for security groups and their owners. Supports converting the message to query parameters, JSON format, and reconstructing it from JSON. Used to interact with AWS API endpoints that manage security group rules for ElastiCache.",
      "description_length": 377,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceLinkedRoleNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a service-linked role not found. Works with the unit type to encapsulate error states. Used in AWS API interactions to handle and transmit specific error conditions.",
      "description_length": 245,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing an existing snapshot. Works with unit type and AWS query or JSON structures. Used to handle error responses when a snapshot already exists in a system.",
      "description_length": 228,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheClusterStateFault",
      "description": "Handles error state validation for cache clusters, providing creation, parsing, and serialization functions. Works with unit type to represent specific fault conditions. Used to generate query parameters and JSON representations for invalid cache cluster state errors.",
      "description_length": 268,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to cache clusters, including converting between XML, query parameters, and JSON formats. Works with types such as strings, lists of cache clusters, and XML nodes. Used to generate HTTP requests and process responses in AWS API interactions.",
      "description_length": 312,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations related to duplicate subnet group configurations. Operates on unit type and AWS query or JSON structures. Used to handle and encode specific AWS API error responses when a subnet group already exists.",
      "description_length": 273,
      "index": 276,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RebootCacheClusterMessage",
      "description": "Provides operations to construct, parse, and serialize messages for rebooting a cache cluster, including converting between XML, JSON, and query parameters. Works with string identifiers for cache clusters and lists of cache node IDs. Used to generate API requests for initiating a cache cluster reboot in AWS ElastiCache.",
      "description_length": 322,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error representations for a quota exceeded condition. Works with unit type and AWS query or JSON structures. Used to handle and encode specific service limit violations in API responses.",
      "description_length": 238,
      "index": 278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUserGroupsResult",
      "description": "Provides operations to construct, parse, and serialize user group data structures, including creating instances with optional user groups and markers, parsing XML nodes into structured data, and converting between JSON and query formats. Works with `UserGroupList.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process and transmit user group information from AWS API responses.",
      "description_length": 402,
      "index": 279,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a missing user. Works with the unit type and AWS query and JSON structures. Used to handle user not found scenarios in API responses and data serialization.",
      "description_length": 229,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a fault type representing a snapshot quota exceeded error. Works with the unit type and AWS query and JSON structures. Used to handle and encode error responses in AWS API interactions.",
      "description_length": 237,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupShardConfigurationMessage",
      "description": "Provides functions to construct, parse, and serialize a message for modifying a replication group's shard configuration, including setting the replication group ID, node group count, and apply immediately flag. Works with specific types such as string, integer, boolean, and custom lists for resharding and node group configurations. Used to generate API requests for updating cluster topology in a distributed database system.",
      "description_length": 427,
      "index": 282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.BatchApplyUpdateActionMessage",
      "description": "Provides operations to construct, parse, and serialize messages for batch updating AWS resources, including creating instances with optional replication group and cache cluster identifiers, and converting between XML, query, and JSON formats. Works with AWS-specific data types such as string, list, and query structures. Used to generate structured update requests for cloud infrastructure management tasks.",
      "description_length": 408,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheParameterGroupResult",
      "description": "Provides a constructor for creating a result object from a cache parameter group, a parser for XML nodes, and conversions to query parameters, JSON format, and from JSON. Works with the `CacheParameterGroup.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to generate and process responses in AWS API interactions involving cache parameter groups.",
      "description_length": 381,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseNodeGroupsInGlobalReplicationGroupResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of increasing node groups in a global replication group. Works with the GlobalReplicationGroup.t type and AWS query and JSON formats. Used to handle API responses for scaling operations in distributed database systems.",
      "description_length": 308,
      "index": 285,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupNotUnderMigrationFault",
      "description": "Provides operations to create, parse, and serialize fault data related to replication groups not under migration, working with unit type and AWS query structures. Includes parsing from various input types, conversion to AWS query format, and JSON serialization. Used to handle specific error conditions in distributed database systems.",
      "description_length": 335,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.APICallRateForCustomerExceededFault",
      "description": "Provides functions to create, parse, and serialize a unit type representing an API call rate exceeded fault. Works with AWS query parameters and JSON structures. Used to handle and encode error states in API interactions.",
      "description_length": 221,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyGlobalReplicationGroupResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying a global replication group, including converting between XML, JSON, and query parameters. Works with the `GlobalReplicationGroup.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API responses in AWS SDK interactions, enabling structured data manipulation and serialization.",
      "description_length": 420,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReservedCacheNodesMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing reserved cache nodes, including setting identifiers, node types, duration, and pagination parameters. Works with string, integer, and JSON data types to represent and exchange request parameters. Used to generate API queries and process XML or JSON responses from AWS ElastiCache services.",
      "description_length": 369,
      "index": 289,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidUserStateFault",
      "description": "Provides operations to create, parse, and serialize error states, including converting to and from query parameters and JSON. Works with unit type and generic input types for error handling. Used to manage invalid user state exceptions in AWS API interactions.",
      "description_length": 260,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a missing user group, working with unit types and AWS query structures. Converts between internal representations and JSON for API interactions. Used to handle errors in user group management by generating standardized fault responses.",
      "description_length": 308,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DefaultUserRequired",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and associated JSON structures. Used to handle default user requirements in API requests and responses.",
      "description_length": 224,
      "index": 292,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheClusterResult",
      "description": "Provides operations to construct, parse, and serialize a cache cluster result, including converting between XML, JSON, and query formats. Works with the `CacheCluster.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and encode responses from cache cluster creation operations in AWS SDK interactions.",
      "description_length": 362,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotFeatureNotSupportedFault",
      "description": "Provides operations to create, parse, and serialize a fault indicating unsupported features, working with unit types and AWS query structures. Converts the fault into a JSON format suitable for API responses. Used to signal feature incompatibility in AWS service interactions.",
      "description_length": 276,
      "index": 294,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateSnapshotMessage",
      "description": "Creates and manipulates messages for generating snapshots, supporting operations to construct, parse, and serialize data between XML, query, and JSON formats. Works with string-based identifiers and structured data types representing snapshot configurations. Used to prepare API requests for snapshot creation in AWS services like ElastiCache.",
      "description_length": 343,
      "index": 295,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupShardConfigurationResult",
      "description": "Provides functions to construct, parse, and serialize a replication group shard configuration result, including converting between XML, JSON, and query parameters. Works with the ReplicationGroup.t type and AWS-specific data structures for query and JSON formatting. Used to handle responses from AWS ElastiCache API when modifying shard configurations.",
      "description_length": 353,
      "index": 296,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUpdateActionsMessage",
      "description": "Provides functions to construct, parse, and serialize a structured request for describing update actions, including filtering by service name, replication groups, cache clusters, engine, status, time range, and node-level status. Works with custom types such as string lists, time ranges, and boolean flags to represent update parameters. Used to generate HTTP query parameters and JSON payloads for API interactions related to service updates.",
      "description_length": 444,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheSubnetGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing cache subnet groups, including setting the subnet group name, pagination parameters, and converting between XML, query, and JSON formats. Works with string and integer types for configuration and pagination, and a structured record type for request representation. Used to generate HTTP requests for AWS ElastiCache API interactions and to process server responses.",
      "description_length": 444,
      "index": 298,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DisassociateGlobalReplicationGroupResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of disassociating a global replication group. Works with the `GlobalReplicationGroup.t` type and AWS query and JSON formats. Used to generate HTTP requests and process API responses in AWS SDK interactions.",
      "description_length": 297,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionsMessage",
      "description": "Provides functions to construct, parse, and serialize a structured representation of update actions, including creating instances with optional marker and action lists, converting to query parameters, and encoding/decoding from JSON. Works with string markers, lists of update actions, and JSON-compatible data structures. Used to generate and process messages for updating resources in a service-specific format.",
      "description_length": 413,
      "index": 300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheSecurityGroupMessage",
      "description": "Creates a message to delete a cache security group, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on string-based identifiers and structured data types for AWS interactions. Used to generate and process deletion requests in AWS ElastiCache operations.",
      "description_length": 302,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EventsMessage",
      "description": "Provides operations to construct, parse, and serialize message structures containing event lists and markers. Works with custom types including event lists and JSON/Query representations. Used to generate and process structured event data in AWS-related workflows.",
      "description_length": 264,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CopySnapshotMessage",
      "description": "Provides functions to construct, parse, and serialize a snapshot copy request with specific parameters like source and target snapshot names, optional target bucket, and KMS key ID. Works with string types for identifiers and structured data for query and JSON representation. Used to generate AWS API requests for copying snapshots in a controlled, typed manner.",
      "description_length": 363,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateSnapshotResult",
      "description": "Creates and manipulates objects representing the outcome of a snapshot creation, supporting parsing from XML, conversion to AWS query parameters, and serialization to JSON. Works with the `Snapshot.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process API responses and prepare data for HTTP requests in cloud infrastructure interactions.",
      "description_length": 395,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheClusterMessage",
      "description": "Creates a message for initializing a cache cluster with specific configuration parameters. It handles building the message from individual fields, parsing XML input, and converting between query, JSON, and internal representations. Works with types like cache cluster IDs, availability zones, security groups, and tags to construct structured API requests.",
      "description_length": 356,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheEngineVersionsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for querying cache engine versions, including filtering by engine, version, parameter group family, and pagination parameters. Works with string, integer, boolean, and JSON data types. Used to generate API requests for AWS services that require version-specific cache configurations.",
      "description_length": 347,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionResultsMessage",
      "description": "Provides methods to construct, parse, and serialize data structures representing the results of update actions, including processing status and error details. Works with custom types for tracked and untracked update actions, and JSON or query format representations. Used to generate HTTP request payloads and interpret XML responses in API interactions.",
      "description_length": 354,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RemoveTagsFromResourceMessage",
      "description": "Removes specified tags from a resource by taking a resource name and a list of tag keys. It supports parsing XML nodes, converting to query parameters, and serializing/deserializing to JSON. Used to construct and process requests for tag removal in AWS resource management.",
      "description_length": 273,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to replication groups, including converting between XML nodes, query parameters, and JSON representations. Works with types such as strings, lists of replication groups, and JSON structures. Used to handle AWS API request and response formatting for replication group operations.",
      "description_length": 351,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheParametersMessage",
      "description": "Encodes and decodes request parameters for cache configuration queries, supporting string, integer, and JSON representations. Accepts group names, sources, record limits, and pagination markers. Used to construct and serialize requests for retrieving cache parameter details from a service.",
      "description_length": 290,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a unit type representing a quota exceeded fault in subnet group management. Works with AWS query parameters and JSON structures for API interactions. Used to handle and encode errors when subnet group limits are exceeded in cloud infrastructure workflows.",
      "description_length": 307,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterAlreadyExistsFault",
      "description": "Provides operations to create, parse, and serialize error instances related to duplicate cache clusters. Works with unit type and AWS query/json structures. Used to handle and represent AWS ElastiCache cluster existence errors in API responses.",
      "description_length": 244,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheParameterGroupMessage",
      "description": "Creates a structured request for defining a cache parameter group, including a name, family, and description. It supports parsing XML nodes into the structure, converting to query parameters, and serializing/deserializing to JSON. Used to generate and process configuration messages for cache parameter groups in AWS services.",
      "description_length": 326,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersionMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing cache engine version messages, including handling markers and version lists. Works with types such as strings, lists of cache engine versions, and JSON or query parameters. Used to generate HTTP requests and process XML responses in AWS API interactions.",
      "description_length": 338,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PurchaseReservedCacheNodesOfferingResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing a reserved cache node offering, including conversion to and from JSON and query parameters. Works with the `ReservedCacheNode.t` type and AWS-specific data structures like `Ezxmlm.nodes` and `Aws.Query.t`. Used to process and transmit reserved cache node offerings in AWS API interactions.",
      "description_length": 368,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidSnapshotStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid snapshot operations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 232,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ListTagsForResourceMessage",
      "description": "Provides operations to construct, parse, and serialize a message containing tags for a specific resource. Works with a structured type representing a resource name and associated tags. Used to generate HTTP query parameters, JSON payloads, and parse XML responses in AWS API interactions.",
      "description_length": 288,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyUserGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages for modifying user groups, including adding and removing user IDs. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `UserIdListInput.t`. Used to generate API requests for user group updates in AWS services.",
      "description_length": 288,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEngineDefaultParametersMessage",
      "description": "Provides operations to construct, parse, and serialize objects representing default parameters for a cache parameter group family, including setting max records and pagination markers. Works with string and integer types for configuration and pagination, and supports XML and JSON serialization. Used to generate API requests and process responses in AWS ElastiCache interactions.",
      "description_length": 380,
      "index": 319,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.StartMigrationResponse",
      "description": "Provides functions to construct, parse, and serialize migration start responses, including converting between XML nodes, query parameters, and JSON structures. Works with replication group data and AWS-specific query and JSON types. Used to handle AWS migration response data in API interactions.",
      "description_length": 296,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteGlobalReplicationGroupResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deleting a global replication group. Works with the `GlobalReplicationGroup.t` type and AWS query and JSON formats. Used to generate HTTP requests and process API responses in AWS SDK interactions.",
      "description_length": 291,
      "index": 321,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseReplicaCountMessage",
      "description": "Provides functions to construct, parse, and serialize messages for increasing replica counts in a replication group, including parsing XML input, generating query parameters, and converting to and from JSON. Works with types such as string, integer, boolean, and custom lists for replica configurations. Used to prepare and process requests in AWS RDS operations involving replication group adjustments.",
      "description_length": 403,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a cache parameter group modification request, including converting between XML, JSON, and query string formats. Works with string-based cache parameter group names and lists of parameter name-value pairs. Used to prepare and process requests for updating specific parameters in a Redis or Memcached parameter group.",
      "description_length": 370,
      "index": 323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a pre-existing global replication group, working with unit types and AWS query structures. Converts error states to JSON format and reconstructs them from JSON data. Used in handling AWS DynamoDB exceptions where a global replication group already exists.",
      "description_length": 332,
      "index": 324,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS reserved cache node messages. Works with string markers and lists of reserved cache nodes. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 259,
      "index": 325,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NoOperationFault",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and arbitrary input types for parsing. Used to handle no-operation faults in AWS request serialization and deserialization.",
      "description_length": 243,
      "index": 326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DisassociateGlobalReplicationGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a message containing a global replication group identifier, a replication group identifier, and a replication group region. Works with string-based identifiers and structured data types for AWS-related messaging. Used to format and decode messages for disassociating replication groups in distributed database systems.",
      "description_length": 373,
      "index": 327,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.AddTagsToResource",
      "description": "Handles AWS request signing and HTTP conversion for adding tags to resources. Processes input in the form of a tag addition message and returns a tag list response or specific error details. Converts between HTTP requests and native types, ensuring proper encoding and error parsing for AWS API interactions.",
      "description_length": 308,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.AuthorizeCacheSecurityGroupIngress",
      "description": "Converts input parameters into an HTTP request for authorizing a security group ingress rule in an AWS ElastiCache cluster, setting necessary query parameters and encoding the request. Processes HTTP responses to extract results or specific error types based on AWS XML structure and HTTP status codes. Operates on structured input and output types representing the security group ingress message and result, along with internal error representations.",
      "description_length": 451,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.BatchApplyUpdateAction",
      "description": "Converts AWS service inputs into HTTP requests and handles response decoding, including error parsing based on HTTP status codes and XML content. Operates on structured input and output types specific to AWS batch update actions. Used to prepare and process requests for services like EC2, ensuring proper encoding and error handling.",
      "description_length": 334,
      "index": 330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.BatchStopUpdateAction",
      "description": "Handles conversion between native input and HTTP requests for AWS batch stop update actions, encoding parameters into query format and setting required Action and Version fields. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 412,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CompleteMigration",
      "description": "Handles conversion between native input and HTTP requests for AWS migration operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 393,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CopySnapshot",
      "description": "Handles conversion of snapshot copy requests into HTTP format and processes HTTP responses back into structured output. Operates on input containing snapshot details and output representing the copied snapshot's metadata. Parses AWS error responses into specific error types based on HTTP status and XML content.",
      "description_length": 312,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheCluster",
      "description": "Handles AWS ElastiCache cluster creation by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific service and signature version settings, and maps AWS error responses to internal error types. Used to interact with the ElastiCache API for programmatic cluster provisioning.",
      "description_length": 365,
      "index": 334,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateCacheParameterGroup",
      "description": "Handles AWS request signing and HTTP conversion for creating a cache parameter group. Converts input data into HTTP requests with proper encoding and parses HTTP responses into structured outputs or errors. Processes AWS error responses into native error types based on specified conditions.",
      "description_length": 291,
      "index": 335,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateCacheSecurityGroup",
      "description": "Handles request signing and HTTP conversion for AWS cache security group operations. Processes input of type CreateCacheSecurityGroupMessage and outputs CreateCacheSecurityGroupResult, with error parsing for AWS-specific responses. Converts between native types and HTTP requests, including query encoding and XML error decoding.",
      "description_length": 329,
      "index": 336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheSubnetGroup",
      "description": "Handles conversion between native input and HTTP requests for creating a Redis cache subnet group, encoding parameters into query format and setting action and version. Processes HTTP responses to extract results or specific AWS error structures. Works with input containing subnet group details, output representing the created group, and error types specific to AWS ElastiCache API interactions.",
      "description_length": 397,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateGlobalReplicationGroup",
      "description": "Handles the conversion of input data into an HTTP request for creating a global replication group, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Operates with structured input and output types defined in the API specification.",
      "description_length": 332,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateReplicationGroup",
      "description": "Handles conversion between native input and HTTP requests for creating a replication group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 374,
      "index": 339,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateSnapshot",
      "description": "Handles conversion of snapshot creation requests into HTTP format and parses responses, using specific input and output types derived from AWS service definitions. Processes AWS error responses by matching HTTP status codes with expected error structures from the service's API. Utilizes defined signature versions and service names to ensure correct request signing and endpoint resolution.",
      "description_length": 391,
      "index": 340,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateUser",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters and setting action/version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 350,
      "index": 341,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateUserGroup",
      "description": "Handles AWS IAM user group creation by converting input data into signed HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with IAM-specific message and user group data structures.",
      "description_length": 305,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DecreaseNodeGroupsInGlobalReplicationGroup",
      "description": "Handles the conversion of input parameters into HTTP requests for modifying global replication groups by reducing node groups. Processes AWS-specific error responses and maps them to internal error types, ensuring accurate representation of API outcomes. Operates on structured input and output types defined within the AWS API specification.",
      "description_length": 342,
      "index": 343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DecreaseReplicaCount",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Designed for use with AWS services requiring replica count adjustments, such as database or cluster management.",
      "description_length": 382,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheCluster",
      "description": "Handles AWS cache cluster deletion by converting input to HTTP requests and parsing responses. Operates on structured input and output types representing deletion messages and results, along with AWS-specific error representations. Processes HTTP requests and responses for the Amazon ElastiCache service, ensuring proper encoding and error handling.",
      "description_length": 350,
      "index": 345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheParameterGroup",
      "description": "Handles AWS cache parameter group deletion by converting input to HTTP requests and parsing responses. Operates on structured input representing the deletion message and returns no output upon success. Parses AWS error responses into native error types based on HTTP status and XML content.",
      "description_length": 290,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheSecurityGroup",
      "description": "Handles AWS EC2 cache security group deletion by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with structured input messages and returns no output upon success.",
      "description_length": 310,
      "index": 347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheSubnetGroup",
      "description": "Handles AWS EC2 operations for deleting a cache subnet group by converting input to HTTP requests and parsing responses. Processes input of type `Types.DeleteCacheSubnetGroupMessage.t` and returns no output. Decodes error responses from AWS API and maps them to internal error types based on HTTP status and XML content.",
      "description_length": 320,
      "index": 348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteGlobalReplicationGroup",
      "description": "Handles the conversion of input parameters into an HTTP request for deleting a global replication group, including encoding and setting action/version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with native input and output types representing the deletion message and result, and internal error representations.",
      "description_length": 381,
      "index": 349,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteReplicationGroup",
      "description": "Handles the conversion of input parameters into an HTTP request for deleting a replication group, encoding necessary parameters and setting the appropriate action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS conventions. Works with input and output types defined in the AWS API for replication group deletion, and parses error responses into native error representations.",
      "description_length": 439,
      "index": 350,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteSnapshot",
      "description": "Handles conversion of delete snapshot requests into HTTP format and parses responses, using AWS signing methods and service-specific endpoints. Operates on structured input and output types representing snapshot deletion messages and results. Processes HTTP responses to extract success or error states, including AWS-specific error decoding.",
      "description_length": 342,
      "index": 351,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteUser",
      "description": "Handles AWS IAM user deletion by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with user message inputs and user output structures specific to the IAM API.",
      "description_length": 304,
      "index": 352,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteUserGroup",
      "description": "Handles AWS IAM user group deletion by converting input to HTTP requests and parsing responses. Operates on structured input containing user group identifiers and produces user group output or specific error types. Processes AWS error responses to map them to internal error representations based on HTTP status and XML content.",
      "description_length": 328,
      "index": 353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheClusters",
      "description": "Handles conversion between native input and HTTP requests for AWS cache cluster operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes error responses by matching status codes and parsing XML into API-specific error representations.",
      "description_length": 364,
      "index": 354,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheEngineVersions",
      "description": "Handles conversion between native input and HTTP requests for AWS cache engine version queries, encoding parameters and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into service-specific errors, validating status codes and error types.",
      "description_length": 348,
      "index": 355,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheParameterGroups",
      "description": "Handles AWS API requests for describing cache parameter groups by converting between native input and HTTP formats, and parsing responses and errors. Operates on specific types including request messages and error responses tailored to the AWS API. Used to generate signed HTTP requests for querying cache parameter group information and process the resulting HTTP responses.",
      "description_length": 375,
      "index": 356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheParameters",
      "description": "Handles AWS request signing and endpoint selection for cache parameter operations. Converts between native input and HTTP requests, and decodes HTTP responses into structured output or specific error types. Processes AWS error responses to map them to internal error representations based on HTTP status and XML content.",
      "description_length": 320,
      "index": 357,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheSecurityGroups",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 security group descriptions, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes against expected values.",
      "description_length": 383,
      "index": 358,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheSubnetGroups",
      "description": "Handles conversion between native input and HTTP requests for describing cache subnet groups, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS API definitions. Works with input containing subnet group descriptions and output representing subnet group data, including error parsing for AWS-specific responses.",
      "description_length": 412,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeEngineDefaultParameters",
      "description": "Handles AWS request signing and HTTP conversion for engine default parameters operations. Processes input structures representing parameter descriptions and outputs results or service-specific errors. Converts between HTTP requests and native types, including parsing AWS error responses into structured error representations.",
      "description_length": 326,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeEvents",
      "description": "Handles conversion between native input and HTTP requests for AWS event-based APIs, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types, ensuring alignment with API specifications. Works with input and output types representing event messages and error responses from AWS services.",
      "description_length": 350,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeGlobalReplicationGroups",
      "description": "Handles conversion between native input and HTTP requests for describing global replication groups, encoding parameters into query format and setting action and version. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Works with input containing group identifiers and output returning detailed group configurations.",
      "description_length": 376,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeReplicationGroups",
      "description": "Handles conversion between native input and HTTP requests for AWS replication group operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes error responses by mapping them to API-defined error types using HTTP status codes and error codes.",
      "description_length": 370,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeReservedCacheNodes",
      "description": "Handles conversion between native input and HTTP requests for AWS cache node queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS EC2 or similar services to retrieve reserved cache node information.",
      "description_length": 371,
      "index": 364,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeReservedCacheNodesOfferings",
      "description": "Handles conversion between native input and HTTP requests for querying AWS Reserved Cache Nodes offerings, including setting action and version parameters. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations matching the API specification.",
      "description_length": 352,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeServiceUpdates",
      "description": "Handles conversion between native input and HTTP requests for AWS service update queries, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into service-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 369,
      "index": 366,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeSnapshots",
      "description": "Handles conversion between native input and HTTP requests for AWS snapshot queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against API specifications.",
      "description_length": 379,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeUpdateActions",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters and setting action/version. Decodes HTTP responses into structured outputs or error representations based on AWS XML format. Parses AWS error responses into service-specific error types, validating status codes and error codes against defined specifications.",
      "description_length": 368,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeUserGroups",
      "description": "Handles conversion between native input and HTTP requests for AWS user group operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 369,
      "index": 369,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeUsers",
      "description": "Handles conversion between native input and HTTP requests for AWS user description operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 340,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DisassociateGlobalReplicationGroup",
      "description": "Handles the conversion of input parameters into an HTTP request for disassociating a global replication group, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Operates with native types representing the disassociation message, result, and internal error representations.",
      "description_length": 367,
      "index": 371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and back from strings. Works with an opaque error type representing various error conditions. Used to standardize error handling in API responses and logging.",
      "description_length": 247,
      "index": 372,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.FailoverGlobalReplicationGroup",
      "description": "Handles AWS API requests for failing over a global replication group by converting input data into HTTP requests and parsing HTTP responses into structured outputs or errors. Operates on specific input and output types representing the failover command and its result, along with error types for AWS-specific failure conditions. Processes HTTP encoding and decoding for the 'FailoverGlobalReplicationGroup' action within the Amazon ElastiCache service.",
      "description_length": 452,
      "index": 373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.IncreaseNodeGroupsInGlobalReplicationGroup",
      "description": "Handles the conversion of input parameters into HTTP requests for increasing node groups in an AWS global replication group, using specified signing versions and service identifiers. Processes HTTP responses to extract structured results or decode error information based on predefined AWS error formats. Operates on custom input and output types representing the specific API message and response for this operation.",
      "description_length": 417,
      "index": 374,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.IncreaseReplicaCount",
      "description": "Converts input data into an HTTP request for AWS operations, setting action and version parameters, and encoding the request in query format. Processes HTTP responses, decoding them into structured output or specific error types based on AWS standards. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 360,
      "index": 375,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ListAllowedNodeTypeModifications",
      "description": "Handles conversion between native input and HTTP requests for AWS service operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Designed for use with AWS API calls requiring validation and parsing of node type modification responses.",
      "description_length": 368,
      "index": 376,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ListTagsForResource",
      "description": "Handles AWS resource tag listing by converting input to HTTP requests and parsing responses. Processes input of type `Types.ListTagsForResourceMessage.t` and returns output of type `Types.TagListMessage.t`. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 301,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheCluster",
      "description": "Handles conversion between native input and HTTP requests for AWS cache cluster modifications, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types.",
      "description_length": 369,
      "index": 378,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheParameterGroup",
      "description": "Handles AWS parameter group modifications by converting input to HTTP requests and parsing responses. Processes structured input and output types specific to AWS ElastiCache operations. Parses error responses based on HTTP status codes and XML content to provide actionable error information.",
      "description_length": 292,
      "index": 379,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheSubnetGroup",
      "description": "Handles conversion between native input and HTTP requests for modifying a cache subnet group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Works with input containing subnet group details and output reflecting the modified group's configuration.",
      "description_length": 382,
      "index": 380,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyGlobalReplicationGroup",
      "description": "Handles conversion between native input and HTTP requests for modifying a global replication group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 405,
      "index": 381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyReplicationGroup",
      "description": "Handles conversion between native input and HTTP requests for modifying a replication group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Works with input and output types representing replication group modification messages and results, and error types from AWS error responses.",
      "description_length": 415,
      "index": 382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyReplicationGroupShardConfiguration",
      "description": "Converts input parameters into an HTTP request for modifying a replication group's shard configuration, including setting action and version parameters. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 366,
      "index": 383,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyUser",
      "description": "Handles AWS request signing and HTTP conversion for user modification operations. Processes input of type `Types.ModifyUserMessage.t` and produces HTTP requests with specified signing versions and services. Decodes HTTP responses into `Types.User.t` or native error types from XML error responses.",
      "description_length": 297,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyUserGroup",
      "description": "Handles conversion between native input and HTTP requests for AWS user group modifications, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS services like EC2, using defined input messages and output objects.",
      "description_length": 377,
      "index": 385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.PurchaseReservedCacheNodesOffering",
      "description": "Converts input parameters into an HTTP request for purchasing reserved cache nodes, encoding necessary parameters and setting the action and version. Processes HTTP responses into structured output or specific error types based on AWS service conventions. Handles error parsing by matching HTTP status codes with expected error formats from the service's API.",
      "description_length": 359,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RebalanceSlotsInGlobalReplicationGroup",
      "description": "Converts input data into an HTTP request for rebalancing slots in a global replication group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS conventions. Handles error parsing by matching HTTP status codes with predefined error structures from the API specification.",
      "description_length": 389,
      "index": 387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RebootCacheCluster",
      "description": "Handles the conversion of input parameters into an HTTP request for rebooting an AWS ElastiCache cluster, including setting action and version parameters. Processes HTTP responses to extract results or specific error details based on AWS XML formatting. Works with structured input and output types representing the reboot request and its outcome.",
      "description_length": 347,
      "index": 388,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.RemoveTagsFromResource",
      "description": "Handles conversion between native input and HTTP requests for removing tags from AWS resources, encoding parameters and setting action-specific fields. Processes HTTP responses to extract tag lists or decode specific AWS error messages based on status codes. Operates on structured input and output types representing tag removal operations and error responses.",
      "description_length": 361,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ResetCacheParameterGroup",
      "description": "Handles AWS cache parameter group reset operations by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `Types.ResetCacheParameterGroupMessage.t` and produces output of type `Types.CacheParameterGroupNameMessage.t`, with error handling for AWS-specific error responses. Parses error codes and messages from HTTP bodies to identify failed operations.",
      "description_length": 423,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RevokeCacheSecurityGroupIngress",
      "description": "Handles AWS ElastiCache security group egress revocation by converting input parameters into signed HTTP requests and parsing response data. Operates on structured input containing security group details and produces output with revocation results. Processes HTTP responses and maps AWS error codes to internal error representations for precise handling.",
      "description_length": 354,
      "index": 391,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.StartMigration",
      "description": "Handles conversion between native input and HTTP requests for AWS migration operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured outputs or specific error types based on AWS XML format. Processes AWS error responses to map them to internal error representations matching the API specification.",
      "description_length": 361,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.TestFailover",
      "description": "Handles conversion between native input and HTTP requests for AWS service calls, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into service-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 390,
      "index": 393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types",
      "description": "The module provides a comprehensive set of utilities for converting, serializing, and deserializing various AWS-related data types across XML, query, and JSON formats. It supports polymorphic and structured types, including node statuses, endpoint configurations, availability zones, ARNs, user groups, and cache parameters. Operations include parsing XML nodes, generating query strings, and serializing/deserializing to JSON, enabling seamless data exchange in AWS API interactions. For example, it can convert a list of availability zones into query parameters, serialize a node group's status into JSON, or parse XML responses into structured endpoint data.",
      "description_length": 661,
      "index": 394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "aws-elasticache",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as HTTP methods, request headers, JSON values, and AWS credentials. Used to interact with specific services like S3 for object storage or DynamoDB for database operations.",
      "description_length": 336,
      "index": 395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache",
      "description": "The module provides a unified interface for converting AWS ElastiCache operations between native data types and HTTP requests, handling request signing, encoding, and response decoding. It supports structured input and output types for actions like creating, modifying, and deleting clusters, security groups, snapshots, and parameter groups, along with error parsing based on HTTP status codes and XML content. Operations include generating signed requests for cluster creation, parsing XML responses for replication group details, and mapping AWS errors to internal representations. For example, it can convert a cache parameter group modification message into an HTTP request or decode an XML error response into a specific error type.",
      "description_length": 738,
      "index": 396,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 397,
    "meaningful_modules": 397,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 738,
    "min_description_length": 221,
    "avg_description_length": 328.43324937027705,
    "embedding_file_size_mb": 1.4426631927490234
  }
}