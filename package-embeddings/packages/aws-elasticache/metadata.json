{
  "package": "aws-elasticache",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 396,
  "creation_timestamp": "2025-07-16T00:30:20.671447",
  "modules": [
    {
      "module_path": "Aws_elasticache.Types.DescribeReservedCacheNodesMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying reserved cache nodes in Amazon ElastiCache, supporting optional filters like node ID, offering ID, node type, and duration. It provides functions to construct, parse, and convert the structure to query parameters or JSON for API requests. Use this module when retrieving information about ElastiCache reserved nodes with custom filtering and pagination.",
      "description_length": 403,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"CacheSecurityGroupQuotaExceededFault\" error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. It is used when managing cache security groups to signal that the account's quota has been exceeded.",
      "description_length": 335,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of ElastiCache replication groups. It provides operations to convert replication group lists to and from XML, JSON, and AWS query formats. Use this module when working with AWS ElastiCache API responses or requests involving multiple replication groups.",
      "description_length": 314,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheSecurityGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a single type `t` representing a message to delete a cache security group, containing the security group name. It provides functions to construct, parse, and serialize the message to query parameters or JSON, ensuring compatibility with AWS API requests. Use this module when interacting with ElastiCache to remove a specific cache security group by name.",
      "description_length": 375,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating an ElastiCache cluster with fields like cache node count, instance type, availability zones, and security settings. It provides functions to construct, serialize, and parse cluster creation messages for interacting with the AWS ElastiCache API. Use this module when configuring and provisioning new cache clusters with specific networking, version, and backup options.",
      "description_length": 418,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache node group members, providing functions to convert them to and from JSON and query formats. It supports parsing from XML nodes and constructing empty lists. Use it when working with AWS ElastiCache API responses that include node group member data.",
      "description_length": 289,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling service update not found errors. It provides operations to create, parse, and convert unit values to query parameters, JSON, and back. Used specifically for signaling the absence of a service update in API responses.",
      "description_length": 286,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseNodeGroupsInGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure and associated operations for configuring an increase in node groups within a global replication group. It includes functions to construct, serialize, and parse messages containing the replication group ID, node group count, optional regional configurations, and an apply-immediately flag. It is used to prepare and interpret API requests when scaling distributed Redis clusters across regions.",
      "description_length": 431,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotFeatureNotSupportedFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cases where a snapshot feature is not supported. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this to signal unsupported snapshot features in API responses without carrying additional data.",
      "description_length": 333,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotArnsList",
      "library": "aws-elasticache",
      "description": "This module handles lists of snapshot ARNs in AWS ElastiCache operations. It provides functions to convert ARN lists to and from JSON and query formats, and includes parsing from XML nodes. Use this module when working with ElastiCache API actions that require or return collections of snapshot ARNs, such as retrieving backup snapshots or managing replication groups.",
      "description_length": 368,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheSecurityGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid cache security group state errors in API responses. It includes operations for parsing, converting to query format, and serializing to and from JSON. The module works with unit values and is used when reporting or handling invalid security group states in cache configuration workflows.",
      "description_length": 359,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `SnapshotQuotaExceededFault` error in AWS ElastiCache. It includes operations for creating, parsing, and converting the error to query or JSON formats. It is used when a snapshot quota has been exceeded, typically during snapshot creation or management operations.",
      "description_length": 333,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing replication group information, including an optional marker for pagination and a list of replication groups. It provides functions to construct, parse, and convert the data to and from XML, JSON, and query formats. This is used when interacting with ElastiCache APIs to list or retrieve details about replication groups.",
      "description_length": 390,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionList",
      "library": "aws-elasticache",
      "description": "This module defines a list of update actions for managing ElastiCache resources, providing functions to convert between XML, JSON, and query formats. It supports parsing update action data from XML nodes and serializing it into query parameters or JSON structures. Concrete use cases include handling batch update responses from ElastiCache APIs and preparing update action lists for API requests.",
      "description_length": 397,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupOutpostArnList",
      "library": "aws-elasticache",
      "description": "This module handles lists of AWS ElastiCache replication group outpost ARNs, represented as base string lists. It provides operations to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. Use this module when working with ElastiCache replication group configurations that involve outpost ARNs, particularly during API request/response handling.",
      "description_length": 384,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing reserved cache node information. It provides operations to construct, parse, and serialize the data to query parameters, JSON, or XML formats. Concrete use cases include processing API responses from AWS ElastiCache to retrieve and manage reserved cache node details.",
      "description_length": 337,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizationAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `AuthorizationAlreadyExistsFault` error in AWS ElastiCache operations. It provides functions to create, parse, and convert the error type to query parameters, JSON, and back, specifically for signaling that an authorization rule already exists. The module works with the `unit` type and is used when managing cache cluster authorizations to detect and handle duplicate authorization attempts.",
      "description_length": 461,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseNodeGroupsInGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of decreasing node groups in a global replication group by providing a structured data type that includes an optional global replication group. It offers functions to create, parse, and convert the result to query parameters or JSON format. Use this module when managing Redis replication across regions, specifically when adjusting the number of node groups in a global setup.",
      "description_length": 408,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeGlobalReplicationGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying global replication group details in ElastiCache, supporting optional filters like group ID, result limits, pagination markers, and member info visibility. It provides functions to construct, serialize, and parse these query messages in JSON, query string, and XML formats. Concrete use cases include building API requests to retrieve global replication group configurations and handling responses in ElastiCache management workflows.",
      "description_length": 483,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMembershipList",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and manipulation of lists of cache security group membership records. It provides functions to convert between XML, JSON, and query string formats, specifically for working with AWS ElastiCache security group membership data. Use this module when interacting with ElastiCache APIs that require or return lists of cache security group memberships.",
      "description_length": 402,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a message to delete a cache subnet group, containing a single required field for the subnet group name. It provides functions to construct the message, parse it from XML, convert it to a query format, and serialize it to or from JSON. This module is used when interacting with AWS ElastiCache APIs to manage cache subnet groups programmatically.",
      "description_length": 395,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeGlobalReplicationGroupsResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing global replication groups in Amazon ElastiCache. It provides functions to construct, parse, and serialize a response containing an optional marker for pagination and a list of global replication groups. It is used when interacting with ElastiCache's API to retrieve and process global replication group data in formats like JSON or XML.",
      "description_length": 381,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateUserGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a user group in ElastiCache, including the group ID, engine type, and optional list of user IDs. It provides functions to construct, serialize, and parse this data structure for use in API requests. The module is used when configuring user group settings in ElastiCache through JSON or query string formats.",
      "description_length": 357,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cache subnet group not found errors. It provides operations to convert values to AWS query format, JSON, and back, ensuring compatibility with AWS API interactions. Use this module when managing cache subnet group error responses in AWS ElastiCache integrations.",
      "description_length": 332,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, formatting, and conversion operations for lists of reserved cache node offerings. It works with XML nodes, JSON values, and query parameters, converting them to and from a list of `ReservedCacheNodesOffering.t` structures. It is used when retrieving and processing available reserved cache node offerings from AWS ElastiCache, particularly in API response handling.",
      "description_length": 394,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.PendingAutomaticFailoverStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with two states, `Enabled` and `Disabled`, representing the status of automatic failover in a caching system. It includes functions to convert between string representations and the enumerated type, supporting serialization and deserialization for use in configuration or API interactions. The module also provides JSON and query parameter encoding/decoding functions, making it suitable for integrating with web services or storage backends.",
      "description_length": 477,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to delete an ElastiCache replication group, including the replication group ID, whether to retain the primary cluster, and an optional final snapshot identifier. It provides functions to construct, parse, and serialize this structure to query parameters or JSON for use in API requests. Concrete use cases include preparing deletion requests for ElastiCache clusters with specific cleanup configurations.",
      "description_length": 467,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupIdListInput",
      "library": "aws-elasticache",
      "description": "This module handles lists of user group IDs for ElastiCache operations. It provides functions to convert, parse, and serialize string lists to query parameters or JSON, and includes validation logic for JSON input. It is used when managing user group associations in ElastiCache clusters or replication groups.",
      "description_length": 310,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingMessage",
      "library": "aws-elasticache",
      "description": "This module handles messages containing lists of reserved cache node offerings, including optional pagination markers. It provides functions to construct, parse, and serialize these messages to and from XML, JSON, and query parameters. Use this module when retrieving or processing available reserved cache node offerings from ElastiCache, particularly when handling paginated responses.",
      "description_length": 387,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUsersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying user information in an ElastiCache system, supporting optional filters, pagination, and engine-specific constraints. It includes functions to construct, serialize, and convert the structure to and from JSON and query formats. Concrete use cases include retrieving user lists with custom filters and paginated responses in an AWS ElastiCache environment.",
      "description_length": 403,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidUserGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid user group state errors. It provides operations to construct, parse, and convert the unit value to query parameters, JSON, and back from JSON. It is used to represent and manage error conditions related to user group states in API interactions.",
      "description_length": 322,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AutomaticFailoverStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the automatic failover status of an ElastiCache cluster, with values for enabled, disabled, enabling, and disabling states. It provides bidirectional conversion between these states and strings, JSON, and XML, enabling seamless serialization and deserialization. It is used to interpret and transmit failover status information when interacting with ElastiCache APIs, particularly during cluster configuration and monitoring.",
      "description_length": 477,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache snapshot records. It provides functions to convert snapshot lists to and from XML, JSON, and query formats, enabling integration with AWS API requests and responses. Use it when managing ElastiCache snapshots programmatically, such as listing or serializing snapshots for storage or transmission.",
      "description_length": 337,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to delete a global replication group in ElastiCache, including the group's ID and whether to retain the primary replication group. It provides functions to construct, parse, and serialize the structure to JSON, query format, or XML, enabling direct interaction with AWS ElastiCache APIs. Concrete use cases include preparing deletion requests and handling API input/output during replication group management.",
      "description_length": 472,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheParameterGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing cache parameter groups in Amazon ElastiCache, with fields for specifying a group name, maximum number of records, and a marker for pagination. It provides functions to construct, parse, and serialize this structure to JSON, query parameters, or XML. Concrete use cases include configuring and retrieving parameter group settings when managing ElastiCache instances via the AWS API.",
      "description_length": 433,
      "index": 34,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupList",
      "library": "aws-elasticache",
      "description": "This module defines a list of NodeGroup values with functions to convert to and from XML, JSON, and query string formats. It supports parsing AWS ElastiCache node group lists from XML, serializing them to AWS query format, and converting to and from JSON structures. Concrete use cases include handling ElastiCache API responses and constructing requests for node group management.",
      "description_length": 381,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetList",
      "library": "aws-elasticache",
      "description": "This module defines a list of subnet types used in ElastiCache configurations. It provides functions to convert subnet lists to and from XML, JSON, and query formats. Use this module when managing cache subnet groups or handling network configurations in ElastiCache operations.",
      "description_length": 278,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEventsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to describe ElastiCache events, including optional filters like source identifier, source type, time range, and pagination. It provides functions to construct, serialize, and parse these parameters, enabling interaction with the ElastiCache API using query strings or JSON. Concrete use cases include querying event logs for specific cache clusters or time windows, and handling paginated results.",
      "description_length": 460,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheClustersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring requests to describe ElastiCache clusters, supporting optional parameters like cluster ID, result limits, pagination markers, and flags to control response details. It provides functions to construct, serialize, and parse these request messages, enabling precise interactions with the ElastiCache API. Use cases include querying cluster information with customizable filters and handling paginated results.",
      "description_length": 459,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating an ElastiCache replication group with specific configuration parameters, including identifiers, cluster settings, encryption options, and network configurations. It provides functions to construct, serialize, and parse this structure for use in API requests, supporting operations like query string generation, JSON conversion, and XML parsing. Concrete use cases include setting up multi-AZ replication groups, configuring automatic failover, and specifying cache node properties for AWS ElastiCache deployments.",
      "description_length": 563,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetOutpost",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a subnet outpost with an optional ARN. It provides functions to create, parse, and convert the structure to and from XML, JSON, and query formats. It is used when configuring ElastiCache subnets that are associated with AWS Outposts.",
      "description_length": 283,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NoOperationFault",
      "library": "aws-elasticache",
      "description": "This module defines a simple type `t` representing an empty value, along with basic conversion and parsing functions. It works with unit values and supports serialization to JSON and AWS query format, as well as deserialization from JSON. It is typically used to handle cases where an operation expects or returns no meaningful data.",
      "description_length": 333,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthTokenUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with two values, `SETTING` and `ROTATING`, representing states of authentication token updates. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These operations support handling token state transitions in API requests and responses, particularly during authentication token management in ElastiCache.",
      "description_length": 435,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles lists of NodeGroupMemberUpdateStatus values, providing conversions to and from JSON, query parameters, and XML. It supports parsing and serializing these lists for use in API requests and responses. Common use cases include processing batch updates of cache node group members and formatting status lists for AWS ElastiCache operations.",
      "description_length": 356,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of replication group IDs for ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this when managing replication groups in ElastiCache, such as listing or referencing multiple groups in API requests.",
      "description_length": 318,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the case where a reserved cache node is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. This is used specifically for error handling in API interactions when a requested reserved cache node does not exist.",
      "description_length": 353,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeSnapshotsListMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data for ElastiCache snapshot listings, providing operations to create, parse, and convert snapshot data to query parameters or JSON. It works with XML nodes, JSON values, and AWS query format to facilitate snapshot metadata retrieval. Concrete use cases include processing responses from ElastiCache API calls to describe snapshots and preparing data for subsequent API requests.",
      "description_length": 411,
      "index": 46,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceLinkedRoleNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a service-linked role in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back from JSON. This is used specifically for error handling in AWS ElastiCache service interactions where a service-linked role is expected but not found.",
      "description_length": 387,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.User",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache user, with fields for user metadata, authentication details, and associated groups. It provides constructors, JSON and XML parsers, and query generators for interacting with AWS ElastiCache APIs. Use this module to create, serialize, and deserialize user configurations when managing Redis or Memcached user access in AWS.",
      "description_length": 387,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseReplicaCountResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of increasing the replica count in a replication group. It provides functions to create, parse, and convert the result to various formats like JSON and query parameters. The main data type is a structure containing an optional replication group, used specifically after modifying replica counts in ElastiCache.",
      "description_length": 341,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.MultiAZStatus",
      "library": "aws-elasticache",
      "description": "This module defines a polymorphic variant type with two values, `Enabled` and `Disabled`, representing the Multi-AZ status configuration. It includes functions to convert between strings and the type, serialize to query parameters or JSON, and parse from XML nodes or JSON. It is used to handle Multi-AZ status values in API requests and responses for AWS ElastiCache operations.",
      "description_length": 379,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteUserGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for deleting a user group in ElastiCache, containing a single required field: the user group ID. It provides functions to construct the structure, convert it to query parameters or JSON, and parse it from XML or JSON input. This module is used when issuing delete operations for user groups in ElastiCache, particularly when interfacing with the AWS API via JSON or query string formats.",
      "description_length": 424,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebalanceSlotsInGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for initiating a slot rebalance operation in a global replication group. It includes functions to construct the request with a global replication group ID and an immediate application flag, along with serialization and deserialization routines for JSON, query parameters, and XML. It is used to trigger slot rebalancing in ElastiCache clusters via the AWS SDK.",
      "description_length": 397,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AvailabilityZone",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an availability zone with an optional name field. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used when managing cache clusters and replication groups in Amazon ElastiCache to specify zone placement.",
      "description_length": 322,
      "index": 53,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ClusterIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cluster IDs for ElastiCache operations. It provides functions to convert cluster ID lists to and from JSON and query formats, and includes parsing from XML nodes. Use this when working with batch operations that require multiple cluster identifiers in API requests or responses.",
      "description_length": 307,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebootCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to reboot specific nodes in a cache cluster. It includes operations to construct, parse, and serialize the structure to query or JSON formats. It is used when initiating a reboot of designated cache nodes in an ElastiCache cluster.",
      "description_length": 294,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupNotUnderMigrationFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `ReplicationGroupNotUnderMigrationFault` error condition. It provides operations to construct, parse, and convert the error to query or JSON formats, typically used in API interactions. The module works with the unit type and is used to represent a specific error state in ElastiCache replication group operations.",
      "description_length": 383,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNode",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache node in Amazon ElastiCache, containing metadata such as node ID, status, creation time, and network endpoint. It provides functions to construct, serialize, and deserialize cache node instances using JSON and XML formats. Concrete use cases include retrieving cache node details from AWS API responses and building custom management tools for monitoring and provisioning cache nodes.",
      "description_length": 441,
      "index": 57,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AuthenticationType",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration for authentication types with two variants: `Password` and `No_password`. It includes functions to convert between strings and the enumerated type, as well as serialization and deserialization routines for JSON, query parameters, and XML. It is used to specify and handle authentication methods when configuring or interacting with ElastiCache resources.",
      "description_length": 389,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseReplicaCountResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of decreasing the replica count in a replication group. It provides constructors, parsers, and serializers for the result type, which includes an optional replication group. It is used to process and manipulate the response from an ElastiCache API call that modifies replica configuration.",
      "description_length": 320,
      "index": 59,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition where a cache cluster already exists. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module when handling API responses that indicate duplicate cache cluster creation attempts.",
      "description_length": 312,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RebalanceSlotsInGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of rebalancing slots in a global replication group, primarily by providing a data structure that optionally contains a `GlobalReplicationGroup`. It includes functions to construct, parse, and serialize the result for use in queries or JSON responses. Concrete use cases include managing the output of slot rebalancing operations in ElastiCache replication groups and integrating with AWS API request/response handling.",
      "description_length": 449,
      "index": 61,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache parameter groups, providing functions to parse XML input into parameter group lists, convert them to query parameters, and serialize to and from JSON. It works directly with lists of `CacheParameterGroup.t` values. Use this module when managing ElastiCache configuration data, such as retrieving or modifying parameter group settings across different data formats.",
      "description_length": 405,
      "index": 62,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RecurringCharge",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing recurring charges in Elasticache, with optional amount and frequency fields. It provides functions to construct, parse, and convert recurring charge data to and from XML, JSON, and query formats. Use this module when handling billing or cost management features in Elasticache, particularly for processing recurring charge information from AWS API responses.",
      "description_length": 412,
      "index": 63,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a cache subnet group, including the group name, description, and associated subnet IDs. It provides functions to construct, serialize, and parse this structure in various formats such as JSON and query parameters. It is used when configuring subnet groups for ElastiCache clusters, particularly during API interactions with AWS.",
      "description_length": 378,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a global replication group in Amazon ElastiCache. It provides functions to create, parse, and serialize a result object that contains an optional global replication group. Use this module when processing responses from ElastiCache API calls to modify global replication groups, particularly for interacting with XML or JSON formatted data.",
      "description_length": 383,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsToRemoveList",
      "library": "aws-elasticache",
      "description": "This module handles lists of node group identifiers for removal in ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and parses them from XML input. Use this when configuring or modifying ElastiCache clusters by specifying node groups to remove.",
      "description_length": 300,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsPerReplicationGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"NodeGroupsPerReplicationGroupQuotaExceededFault\" error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats. It works with unit type values, representing the presence of this specific error condition.",
      "description_length": 337,
      "index": 67,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionResultsMessage",
      "library": "aws-elasticache",
      "description": "This module represents the result of update actions in a structured format, containing lists of both processed and unprocessed update actions. It provides functions to construct, parse, and serialize the result data into query parameters, JSON, or XML. It is used to handle responses from Elasticache update operations, allowing clear distinction between successfully processed and failed update actions.",
      "description_length": 404,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the status of service updates, with values for available, cancelled, and expired states. It includes functions to convert between string representations and the enumerated type, as well as serialization and deserialization routines for JSON, XML, and query parameters. It is used to handle service update status values when interacting with AWS ElastiCache service update APIs, such as processing event notifications or managing service update deployments.",
      "description_length": 508,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.BatchStopUpdateActionMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying resources to stop during a batch update action in ElastiCache. It includes functions to construct, serialize, and parse the structure, supporting interaction with AWS ElastiCache's API for managing replication groups and cache clusters. The module works directly with replication group IDs, cache cluster IDs, and service update names to enable targeted update management.",
      "description_length": 424,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a global node group with optional string fields for group ID and slots. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and back from JSON. It is used to manage global node group configurations in ElastiCache replication setups.",
      "description_length": 326,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateUserMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a user in ElastiCache, including fields like user ID, name, engine, passwords, and access permissions. It provides functions to construct, parse, and serialize user data for API requests. Use this module when configuring user authentication and access control for ElastiCache clusters.",
      "description_length": 335,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UnprocessedUpdateActionList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, converting, and serializing lists of unprocessed update actions from AWS ElastiCache. It provides operations to convert such lists to JSON or query parameters, and to parse them from XML or JSON input. It works directly with lists of `UnprocessedUpdateAction.t` values, supporting interaction with AWS ElastiCache's API for managing cache clusters.",
      "description_length": 377,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupMembershipList",
      "library": "aws-elasticache",
      "description": "This module handles lists of security group membership records for ElastiCache resources. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when managing cache clusters that require security group configurations.",
      "description_length": 287,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UnprocessedUpdateAction",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an unprocessed update action in ElastiCache, with optional fields for replication group ID, cache cluster ID, service update name, error type, and error message. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used to handle failed or pending service updates when managing ElastiCache clusters and replication groups.",
      "description_length": 436,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUserGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying user group information, supporting optional fields like user group ID, maximum record count, and pagination marker. It provides functions to construct, serialize, and convert the structure to and from JSON and XML formats. Concrete use cases include configuring and retrieving user group details from an ElastiCache service.",
      "description_length": 374,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserIdListInput",
      "library": "aws-elasticache",
      "description": "Handles input for operations requiring a list of user IDs in string format. Provides functions to convert, parse, and serialize user ID lists to query parameters or JSON. Useful when specifying multiple user identifiers in API requests to services that accept such lists.",
      "description_length": 271,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Parameter",
      "library": "aws-elasticache",
      "description": "This module defines a parameter type with optional fields for name, value, description, source, data type, allowed values, modifiability, engine version, and change type. It provides functions to construct, parse, and convert parameter data to query format, JSON, and back from JSON. It is used to manage ElastiCache configuration parameters and their metadata.",
      "description_length": 361,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EC2SecurityGroupList",
      "library": "aws-elasticache",
      "description": "This module handles lists of EC2 security group data structures, providing functions to convert, parse, and serialize them for use in API requests and responses. It supports operations like transforming a list into a query format, parsing XML input into a list of security groups, and converting to and from JSON representations. Concrete use cases include processing security group information when managing ElastiCache clusters or handling AWS API responses.",
      "description_length": 460,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RevokeCacheSecurityGroupIngressMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for revoking ingress permissions from a cache security group using EC2 security group details. It provides functions to construct, serialize, and parse the structure, including conversions to JSON and query formats. Concrete use cases include managing access control for ElastiCache resources by integrating with EC2 security groups.",
      "description_length": 370,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeSnapshotsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to describe ElastiCache snapshots, including optional filters like replication group ID, cache cluster ID, and snapshot name. It provides functions to construct, serialize, and parse these parameters for use in API requests. Concrete use cases include querying AWS ElastiCache for snapshot details with custom filtering and pagination.",
      "description_length": 398,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a message to delete a cache parameter group, containing a single required field for the parameter group name. It provides functions to construct the message, convert it to query parameters or JSON format, and parse it from XML or JSON input. This module is used when interacting with AWS ElastiCache to delete a specific cache parameter group configuration.",
      "description_length": 407,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DefaultUserRequired",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` representing the absence of data, with operations to construct, parse, and convert values to query parameters, JSON, and back. It works with unit values and is used to handle cases where no additional data is required, such as signaling the presence of a default user without associated attributes. Concrete use cases include encoding and decoding empty responses or parameters in API interactions where a value is acknowledged but carries no further information.",
      "description_length": 494,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module represents a message containing a list of cache parameter groups and an optional marker for pagination. It provides functions to construct, parse, and serialize the message to query or JSON formats, as well as to convert from JSON. It is used when retrieving or managing cache parameter group configurations in ElastiCache, particularly in paginated API responses.",
      "description_length": 376,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of user group IDs for ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when managing user group associations in ElastiCache clusters or replication groups.",
      "description_length": 281,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificParameter",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing cache node type-specific parameters, including fields like parameter name, data type, allowed values, and modifiability. It provides functions to construct, parse, and serialize these parameters to and from XML, JSON, and AWS query formats. It is used when managing ElastiCache parameter groups that vary by cache node type.",
      "description_length": 371,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupMemberList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of global replication group members. It works with XML nodes, JSON values, and AWS query parameters to convert between a list of `GlobalReplicationGroupMember.t` values and external representations. Use this module when interacting with AWS ElastiCache's global replication APIs to process responses or build requests.",
      "description_length": 379,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMember",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a member of a node group in a caching service, with fields for identifiers, endpoints, and roles. It provides functions to construct, parse, and serialize instances for use in API requests and responses. Use cases include managing cluster node configurations and retrieving node-specific details like availability zones or read endpoints.",
      "description_length": 388,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DisassociateGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of disassociating a global replication group in Amazon ElastiCache. It includes a single optional field representing the updated global replication group. Use this module to parse, construct, and serialize responses when managing replication group disassociations in ElastiCache.",
      "description_length": 310,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ProcessedUpdateActionList",
      "library": "aws-elasticache",
      "description": "This module handles lists of processed update actions in AWS ElastiCache. It provides functions to parse XML input into a list of update actions, convert the list to query parameters or JSON, and reconstruct the list from JSON. Use this module when managing ElastiCache cluster updates, particularly for processing and serializing update action results during API interactions.",
      "description_length": 377,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteSnapshotResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a snapshot deletion operation, containing an optional snapshot object. It provides functions to construct, parse, and convert the result to and from XML, JSON, and query formats. Concrete use cases include handling responses from AWS ElastiCache API calls that return snapshot deletion details, such as confirming the deletion of a specific cache snapshot.",
      "description_length": 420,
      "index": 91,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a global replication group with fields for identifiers, status, configuration, and member nodes. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when managing cross-region Redis replication groups in AWS ElastiCache, particularly for operations involving member node lists and encryption settings.",
      "description_length": 426,
      "index": 92,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheEngineVersionsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to describe cache engine versions, including optional fields like engine name, version, parameter group family, and pagination controls. It provides functions to construct, serialize, and parse these parameters for use in API requests. Concrete use cases include filtering cache engine versions by engine type or retrieving default versions for provisioning.",
      "description_length": 421,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RemoveReplicasList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string values representing replica IDs to be removed from an ElastiCache replication group. It provides functions to convert these lists to and from JSON and query string formats, and includes parsing from XML nodes. It is used when modifying a replication group by removing specific replicas.",
      "description_length": 322,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a test failover operation, primarily containing an optional replication group. It provides functions to construct, parse, and convert the result to various formats like JSON and query parameters. It is used to handle responses from initiating a test failover in a caching service, allowing inspection and serialization of the resulting replication group state.",
      "description_length": 424,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a replication group in Amazon ElastiCache. It provides functions to construct, serialize, and parse the result, which includes an optional replication group object. Use this module when managing ElastiCache replication groups programmatically, particularly for processing API responses or building requests with the AWS SDK for OCaml.",
      "description_length": 377,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateSnapshotResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a snapshot creation operation in Amazon ElastiCache, containing an optional snapshot object. It provides functions to construct, parse, and serialize the result for use in API responses and queries. Concrete use cases include handling the output of creating cache snapshots and integrating with JSON and XML processing libraries for service communication.",
      "description_length": 419,
      "index": 97,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `UserAlreadyExistsFault` error in AWS ElastiCache operations. It provides functions to create, parse, and convert the error type to query parameters, JSON, and back from JSON. It is used specifically for signaling that a user already exists when attempting to create a new user in ElastiCache.",
      "description_length": 362,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizationNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling authorization not found errors in API responses. It provides operations to create, parse, and convert error data to query parameters, JSON, and back. Use this module when interacting with AWS ElastiCache APIs to manage error responses related to missing authorizations.",
      "description_length": 334,
      "index": 99,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_elasticache.Types.AvailabilityZonesList",
      "library": "aws-elasticache",
      "description": "This module handles list operations for availability zones in AWS ElastiCache, providing functions to parse, convert to query format, and serialize to and from JSON. It works specifically with lists of base string types. It is used when managing availability zone configurations for ElastiCache clusters or replication groups.",
      "description_length": 326,
      "index": 100,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidKMSKeyFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid KMS key errors in ElastiCache operations. It provides functions to construct, parse, and serialize error data to query parameters or JSON, primarily working with unit type values. It is used specifically for propagating and handling KMS key validation failures in API responses.",
      "description_length": 351,
      "index": 101,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing ElastiCache parameter groups, including fields like name, family, description, and ARN. It provides functions to construct, parse, and serialize these structures to and from XML, JSON, and query formats. Concrete use cases include configuring and managing cache parameter groups in AWS ElastiCache through API interactions.",
      "description_length": 377,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUsersResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing ElastiCache users, including a list of users and an optional marker for pagination. It provides functions to construct, parse, and convert the result to and from XML, JSON, and query formats. Use this module when managing user data retrieval from AWS ElastiCache, particularly for handling paginated responses.",
      "description_length": 355,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache cluster in Amazon ElastiCache. It provides functions to construct, parse, and serialize the result, which includes an optional cache cluster object. Use this module when managing ElastiCache cluster creation responses, particularly for interacting with AWS APIs or processing JSON and XML responses.",
      "description_length": 350,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the update status of a node group in a caching service. It includes fields for the node group ID and the update status of its members, along with functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. It is used to track and communicate the progress of updates across nodes in a distributed caching environment.",
      "description_length": 407,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificValueList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache node type-specific values in AWS ElastiCache. It provides functions to parse XML input into a list of these values, convert them to query parameters, and serialize or deserialize them to and from JSON. It is used when managing parameter values that vary by cache node type.",
      "description_length": 308,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing an ElastiCache replication group, with fields for metadata like status, configuration endpoint, and encryption settings. It provides functions to construct, parse, and serialize replication group data for use in AWS API requests and responses. Concrete use cases include creating replication group configurations, parsing API responses, and converting replication group data to JSON or query parameters for API calls.",
      "description_length": 464,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupNameList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache security group names in string format. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this when working with ElastiCache security group configurations that require serialization or deserialization across different data formats.",
      "description_length": 337,
      "index": 108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyUserGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying user groups in ElastiCache, supporting operations to add or remove user IDs from a specified user group. It works with string identifiers for user groups and lists of user IDs, providing functions to construct, serialize, and parse modification requests. Concrete use cases include updating user access permissions in an ElastiCache cluster by adjusting the users associated with a specific user group.",
      "description_length": 453,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FilterValueList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string values used for filtering in API requests. It provides functions to convert these lists to and from JSON and query parameters, as well as parsing from XML nodes. It is used when working with AWS ElastiCache operations that require filtering based on string tags or identifiers.",
      "description_length": 313,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type with fields for cache parameter group name, family, and description, along with functions to construct, parse, and convert the record to query or JSON formats. It works directly with string values wrapped in AWS base types and supports serialization for API requests. It is used when creating a new cache parameter group in ElastiCache, particularly for interacting with the service's HTTP API.",
      "description_length": 428,
      "index": 111,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeQuotaForClusterExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the \"NodeQuotaForClusterExceededFault\" error in AWS ElastiCache. It includes operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all acting on a unit type. This is used specifically to represent and manage quota exceeded error conditions related to node counts in ElastiCache clusters.",
      "description_length": 400,
      "index": 112,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SlaMet",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type with values `Yes`, `No`, and `N_a`, representing SLA compliance states. It includes functions to convert between strings and the enumerated type, as well as serialization to and from JSON, query parameters, and XML. These operations support handling SLA compliance status in API requests and responses, particularly when interacting with AWS ElastiCache services.",
      "description_length": 402,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ListTagsForResourceMessage",
      "library": "aws-elasticache",
      "description": "This module handles the creation, parsing, and serialization of a message for listing tags on an ElastiCache resource. It works with a single data type `t` that contains a `resource_name` string. Concrete use cases include preparing requests to retrieve tags from an ElastiCache cluster or snapshot by constructing the message, converting it to a query or JSON format, or parsing responses from XML input.",
      "description_length": 405,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Event",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing events in Amazon ElastiCache, including optional fields for source identifier, source type, message, and timestamp. It provides functions to construct, parse, and convert event data to and from XML, JSON, and query formats. It is used to handle event records returned by ElastiCache API operations, such as describing events or processing event notifications.",
      "description_length": 413,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupsToRetainList",
      "library": "aws-elasticache",
      "description": "This module handles lists of node group identifiers for ElastiCache operations. It provides functions to convert these lists to and from JSON and query string formats, and includes parsing from XML. Use this module when configuring or modifying ElastiCache replication groups with specific node groups to retain.",
      "description_length": 312,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEngineDefaultParametersResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing engine default parameters by providing functions to construct, parse, and serialize the result data. It works with XML nodes, JSON values, and AWS query parameters to facilitate interaction with the ElastiCache API. Use this module to retrieve and manipulate default parameter settings for ElastiCache engines in AWS.",
      "description_length": 362,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UGReplicationGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string-based replication group IDs for ElastiCache operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this module when managing replication group associations in ElastiCache API requests or responses.",
      "description_length": 312,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for managing cache subnet groups in Amazon ElastiCache, including fields such as the group name, description, VPC ID, list of subnets, and ARN. It provides functions to construct, serialize, and parse these structures to and from XML, JSON, and AWS query formats. Concrete use cases include configuring ElastiCache clusters within specific VPC subnets and retrieving subnet group details from AWS API responses.",
      "description_length": 448,
      "index": 119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupInUse",
      "library": "aws-elasticache",
      "description": "This module defines a placeholder type `t` representing an in-use cache subnet group in AWS ElastiCache. It provides functions to construct, parse, and serialize the state for API interactions. Use this module when handling responses or requests involving cache subnet groups that are currently in use.",
      "description_length": 302,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CompleteMigrationResponse",
      "library": "aws-elasticache",
      "description": "This module defines a response type for a completed migration operation, containing an optional replication group. It provides functions to construct, parse, and serialize the response to query parameters, JSON, or XML. Use this module when handling the result of a migration completion in an ElastiCache API client.",
      "description_length": 316,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a replication group in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back from JSON. This is used specifically to represent and handle cases where a requested replication group does not exist in the system.",
      "description_length": 367,
      "index": 122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupList",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and manipulation of a list of user group records. It provides functions to convert between XML, JSON, and query string formats, specifically for working with lists of user groups in ElastiCache. Use this module when processing API responses or preparing requests involving multiple user groups.",
      "description_length": 350,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetIdentifierList",
      "library": "aws-elasticache",
      "description": "This module handles lists of subnet identifiers as strings, providing direct conversions to and from JSON, query parameters, and XML. It supports parsing from XML nodes and constructing empty lists. Useful when configuring or retrieving subnet groups in ElastiCache, where subnet IDs are passed as a list of strings.",
      "description_length": 316,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheClusterStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and conversion functions for handling the invalid cache cluster state fault in AWS ElastiCache. It works with unit type values and provides operations to parse, serialize to query format, and convert to and from JSON. It is used when interacting with AWS ElastiCache APIs to manage cache cluster state errors.",
      "description_length": 336,
      "index": 125,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupShardConfigurationMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying the shard configuration of a replication group in Amazon ElastiCache. It includes fields for specifying the replication group ID, node group count, resharding strategy, and node groups to add or remove, along with functions to construct, serialize, and parse these configurations. It is used to send modification requests to ElastiCache via the AWS SDK, particularly when scaling or rebalancing cluster shards.",
      "description_length": 461,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeSnapshotList",
      "library": "aws-elasticache",
      "description": "This module defines a list of node snapshots and provides functions to convert between XML, JSON, and query formats. It works with lists of `NodeSnapshot.t` values, enabling serialization and deserialization for API interactions. Use this module when handling ElastiCache node snapshot data in different formats, such as when processing API responses or constructing requests.",
      "description_length": 376,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a global replication group already exists. It works with unit type values and provides operations to construct, parse, and convert the error to query or JSON formats. It is used in error handling workflows when interacting with ElastiCache's global replication group APIs.",
      "description_length": 362,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a replication group already exists. It works with unit type values and provides operations to create, parse, and convert the error to query or JSON formats. It is used in error handling workflows when attempting to create duplicate replication groups in ElastiCache services.",
      "description_length": 365,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ParametersList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache parameters, providing operations to convert between XML, JSON, and query formats. It supports parsing parameter lists from XML nodes and serializing them into query or JSON representations. Use this module when configuring or retrieving ElastiCache cluster parameters through AWS API interactions.",
      "description_length": 338,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.APICallRateForCustomerExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `APICallRateForCustomerExceededFault` error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query parameters or JSON format. The module works with unit type values, representing the presence of a rate limit exceeded condition. A concrete use case is signaling when an API client has exceeded its allowed request rate, preventing further requests until the rate limit resets.",
      "description_length": 493,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetInUse",
      "library": "aws-elasticache",
      "description": "This module defines a placeholder type `t` representing a subnet that is in use, along with functions to construct, parse, and convert the type to query parameters, JSON, and back. It works with unit values and is used when handling subnet-related responses that indicate in-use status. Concrete use cases include processing API responses where a subnet cannot be modified or deleted because it is currently in use.",
      "description_length": 415,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RecurringChargeList",
      "library": "aws-elasticache",
      "description": "This module handles lists of recurring charge data in AWS ElastiCache operations. It provides functions to convert, parse, and serialize recurring charge lists to and from XML, JSON, and query formats. Use this module when managing billing or cost data associated with ElastiCache resources in AWS.",
      "description_length": 298,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidSubnet",
      "library": "aws-elasticache",
      "description": "This module defines a minimal type `t` representing an invalid subnet in API responses, with operations to construct, parse, and serialize it. It includes functions to convert values to AWS query format, JSON, and back, ensuring compatibility with AWS ElastiCache service interactions. Use this module when handling subnet validation errors from ElastiCache API calls.",
      "description_length": 368,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.OutpostMode",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration type `t` with two variants, `Single_outpost` and `Cross_outpost`, representing deployment modes for AWS ElastiCache outposts. It provides functions to convert between string representations and the enumerated type, including `to_string`, `of_string`, `str_to_t`, and `t_to_str`. Additional functions support JSON and XML serialization, making it suitable for use in API requests and responses involving ElastiCache outpost configurations.",
      "description_length": 473,
      "index": 135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseNodeGroupsInGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for operations that increase node groups in a global replication group. It includes a single optional field for the updated global replication group and provides functions to construct, parse, and serialize the result in various formats. It is used to handle responses from AWS ElastiCache API calls that modify global replication group configurations.",
      "description_length": 386,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles lists of NodeGroupUpdateStatus values, providing direct conversions to and from JSON and query formats. It supports parsing from XML nodes into typed lists and constructing empty lists. Useful for processing batched ElastiCache node group update status responses in API interactions.",
      "description_length": 303,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.IncreaseReplicaCountMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring replica count increases in a replication group. It includes fields for the replication group ID, optional new replica count, replica configuration list, and an apply-immediately flag. Operations include creating instances, parsing from XML, converting to query format, and serializing to and from JSON.",
      "description_length": 355,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.KeyList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string-based keys used in ElastiCache operations, providing functions to convert between XML, JSON, and query string formats. It works with lists of `Aws.BaseTypes.String.t` values, primarily for serializing and deserializing key collections in API requests and responses. Use this module when interacting with ElastiCache APIs that require lists of string keys, such as tag-based filtering or resource identifier batches.",
      "description_length": 451,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a node group in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back. Use this to represent and manage empty responses or error states in interactions with ElastiCache services.",
      "description_length": 336,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of user IDs in string format, providing functions to convert these lists to and from JSON and query parameters. It supports parsing user ID lists from XML nodes and converting them into AWS-specific JSON and query structures. Use this module when working with AWS ElastiCache operations that require handling multiple user identifiers in different data formats.",
      "description_length": 387,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cache parameter group not found errors. It provides operations to convert values to query parameters, JSON, and back, specifically for error responses. Use this module when interacting with AWS ElastiCache APIs to manage and respond to missing cache parameter group scenarios.",
      "description_length": 346,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ParameterNameValue",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling parameter name-value pairs in ElastiCache configurations. It provides functions to create, parse, and convert these pairs to and from XML, JSON, and query formats. Use this module when managing ElastiCache parameters, such as configuring cache clusters or modifying parameter groups.",
      "description_length": 333,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUpdateActionsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for filtering and describing update actions in ElastiCache, with fields like service update name, replication group IDs, cache cluster IDs, and status filters. It provides functions to construct, parse, and serialize the structure for use in API requests. Use this module when querying ElastiCache for specific update actions based on resource identifiers or time ranges.",
      "description_length": 408,
      "index": 144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheParameterGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache parameter group in AWS ElastiCache. It provides functions to construct, parse, and serialize the result, which includes an optional cache parameter group. Use this module when managing ElastiCache parameter groups programmatically, such as after calling the AWS API to create a new group and needing to process the returned data.",
      "description_length": 380,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverNotAvailableFault",
      "library": "aws-elasticache",
      "description": "This module defines a minimal type and associated conversion functions for handling test failover unavailability errors. It works with unit values and supports serialization to JSON and query formats, along with parsing from JSON. Concrete use cases include error handling and API response processing in systems interacting with AWS ElastiCache.",
      "description_length": 345,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Filter",
      "library": "aws-elasticache",
      "description": "This module defines a filter structure with a name and list of values, used to represent and manipulate filtering criteria in API requests. It provides functions to construct, parse, and serialize filters to query parameters or JSON, supporting integration with AWS ElastiCache operations. Common use cases include filtering cache clusters or snapshots by attributes like tags or statuses during API calls.",
      "description_length": 406,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling update actions in ElastiCache, including optional pagination markers. It provides functions to construct, parse, and serialize messages containing lists of update actions. Use this module when retrieving or processing batches of update actions from ElastiCache, especially when handling paginated responses.",
      "description_length": 357,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeSnapshot",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a snapshot of a cache node, including identifiers for the cluster, node group, and node, along with configuration and timestamps. It provides functions to construct, serialize, and convert the structure to and from JSON and XML formats. It is used to manage and persist individual cache node snapshots within an ElastiCache environment.",
      "description_length": 386,
      "index": 149,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.Endpoint",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing endpoint information with optional address and port fields. It provides functions to construct, parse, and convert endpoint values to and from JSON and query formats. Concrete use cases include handling endpoint data when interacting with AWS ElastiCache API operations like describing cache clusters or replication groups.",
      "description_length": 377,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CompleteMigrationMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a message to complete a migration in ElastiCache, containing a replication group ID and an optional force flag. It provides functions to construct, parse, and serialize the message to different formats including JSON and query parameters. Use this module when initiating the completion of a migration operation for a replication group in ElastiCache.",
      "description_length": 400,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMembership",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache security group membership, with optional fields for the security group name and status. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include managing associations between cache clusters and security groups in AWS ElastiCache configurations.",
      "description_length": 383,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the status of update actions in a caching service, including states like `In_progress`, `Complete`, and `Scheduled`. It provides bidirectional conversion between string representations and the enumerated values, along with serialization to and from JSON and query formats. This module is used to interpret and communicate the current state of configuration or software update actions applied to cache clusters.",
      "description_length": 462,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a replication group in Amazon ElastiCache. It provides functions to create, parse, and convert the result data to and from XML, JSON, and query formats. It works with the `ReplicationGroup` type to represent the modified group's configuration.",
      "description_length": 287,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ConfigureShard",
      "library": "aws-elasticache",
      "description": "This module defines a record type for configuring Redis shards in AWS ElastiCache, including node group ID, replica count, and placement preferences. It provides functions to construct, parse, and serialize shard configurations to JSON, query parameters, or XML. Use this module when modifying shard settings in ElastiCache replication groups, particularly for specifying replica distribution across availability zones or outposts.",
      "description_length": 431,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SubnetNotAllowedFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `SubnetNotAllowedFault` error in AWS ElastiCache. It provides operations to create, parse, and convert the error to query parameters or JSON format. It is used when interacting with AWS ElastiCache APIs to manage subnet-related error responses.",
      "description_length": 313,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CustomerNodeEndpoint",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing customer node endpoints in ElastiCache, with fields for IP address and port. It provides functions to construct, parse, and convert endpoint data to query parameters or JSON format. Use this module when managing cache node connections or configuring endpoint settings in ElastiCache operations.",
      "description_length": 348,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificParametersList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of cache node type-specific parameters. It works with XML nodes, JSON values, and AWS query structures to convert between these formats and an internal list of parameter records. It is used when retrieving or configuring parameter settings specific to different cache node types in ElastiCache.",
      "description_length": 355,
      "index": 158,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSubnetGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache subnet group in Amazon ElastiCache, primarily working with the `t` record type that may contain a `CacheSubnetGroup.t` value. It provides functions to construct, parse, and convert the result to and from XML, JSON, and query formats. Use this module when managing ElastiCache subnet groups programmatically, especially during creation workflows that require serialization or API response handling.",
      "description_length": 448,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition for exceeding cache subnet group quotas. It provides functions to construct, parse, and serialize the error to query parameters or JSON, and to convert from JSON. It is used specifically for handling quota exceeded faults in cache subnet group operations.",
      "description_length": 328,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupIdsList",
      "library": "aws-elasticache",
      "description": "Handles parsing, serialization, and manipulation of lists of security group IDs for ElastiCache configurations. Works with string lists and integrates with XML, JSON, and query parameter formats. Used when configuring or retrieving ElastiCache cluster security settings.",
      "description_length": 270,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Tag",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling key-value tags, typically used in AWS ElastiCache resource management. It provides functions to create, serialize, and convert tag data to and from XML, JSON, and query formats. Use cases include tagging ElastiCache clusters or snapshots for metadata organization and cost tracking.",
      "description_length": 332,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PasswordListInput",
      "library": "aws-elasticache",
      "description": "This module handles a list of password strings for API input, providing functions to convert the list to query parameters, JSON, and parse from XML or JSON. It works with AWS base string types and standard list structures. Use this module when interacting with ElastiCache operations that require password lists, such as modifying replication groups or managing user groups.",
      "description_length": 374,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseNodeGroupsInGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying a global replication group by reducing the number of node groups in Amazon ElastiCache. It includes operations to create, parse, and serialize the message payload used when adjusting node group configurations, supporting both XML and JSON formats. The structure is used specifically when reconfiguring multi-region replication setups by specifying which node groups to remove or retain.",
      "description_length": 437,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AZMode",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with two values, `Single_az` and `Cross_az`, representing availability zone configurations. It provides functions to convert between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These operations support handling AZ mode settings in API requests and responses, particularly when interacting with AWS ElastiCache services.",
      "description_length": 413,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a simple type `t` representing the absence of a user in ElastiCache operations. It includes functions to construct, parse, and convert the type to query parameters or JSON format. It is used specifically for handling user-not-found errors in ElastiCache API interactions.",
      "description_length": 291,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DuplicateUserNameFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition where a user name is duplicated. It provides functions to construct, parse, and convert the error to query parameters, JSON, and back from JSON. Use this module to handle duplicate user name errors in API requests and responses.",
      "description_length": 301,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagList",
      "library": "aws-elasticache",
      "description": "This module handles tag lists for ElastiCache resources, providing operations to convert between XML, JSON, and query formats. It works with lists of tag objects, each representing a key-value pair. Use it to serialize and deserialize resource tags when interacting with ElastiCache APIs.",
      "description_length": 288,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, converting, and constructing lists of cache node update status entries. It provides operations to convert such lists to JSON or query format, and to parse them from XML or JSON input. It is used when managing update statuses for individual cache nodes in an ElastiCache cluster.",
      "description_length": 307,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOfferingNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module represents an error type for when a reserved cache node offering is not found. It provides functions to construct, parse, and convert the error to query or JSON formats. It is used in handling API responses where such errors need to be serialized or deserialized.",
      "description_length": 275,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FilterList",
      "library": "aws-elasticache",
      "description": "This module handles the serialization and deserialization of filter lists used in ElastiCache API requests. It works with lists of `Filter.t` values, converting them to and from XML, JSON, and query parameters. Use this module when interacting with ElastiCache operations that require filtering resources like cache clusters or snapshots.",
      "description_length": 338,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroupIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of global node group IDs in AWS ElastiCache. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML. It works directly with string lists and is used when managing replication groups across multiple regions.",
      "description_length": 286,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateAction",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an update action in a caching service, with fields tracking metadata like identifiers, timestamps, severities, statuses, and associated nodes or groups. It provides operations to construct, serialize, and deserialize instances using JSON, query parameters, or XML input. Concrete use cases include managing service updates for cache clusters or replication groups, tracking SLA compliance, and scheduling maintenance actions.",
      "description_length": 475,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `SnapshotAlreadyExistsFault` error in AWS ElastiCache operations. It provides functions to create, parse, and convert the error type to query parameters, JSON, and back from JSON. It is used specifically to manage error responses when attempting to create a snapshot that already exists.",
      "description_length": 356,
      "index": 174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying cache subnet groups in Amazon ElastiCache. It includes fields for the subnet group name, an optional description, and a list of subnet IDs, along with functions to construct, serialize, and parse this structure. It is used to send modification requests to ElastiCache via the AWS SDK, enabling updates to existing cache subnet configurations.",
      "description_length": 393,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyUserMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying user attributes in an ElastiCache service. It includes fields for user ID, access string adjustments, password updates, and authentication requirements, supporting precise configuration changes. Operations include creating, parsing, and serializing the structure for API interactions.",
      "description_length": 335,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeList",
      "library": "aws-elasticache",
      "description": "This module represents a list of cache nodes in Amazon ElastiCache, providing functions to convert the list to and from XML, JSON, and query formats. It works with `CacheNode.t` records, handling serialization and deserialization for API interactions. Use this module when managing cache node data during ElastiCache configuration or status retrieval.",
      "description_length": 351,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing a message containing cache subnet groups, including optional pagination markers. It provides operations to construct, serialize, and deserialize these messages to and from JSON, query parameters, and XML. Use this module when interacting with ElastiCache API responses that list cache subnet groups, particularly when handling paginated results.",
      "description_length": 394,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache user group, including fields like user group ID, status, engine, and associated user IDs. It provides functions to construct, parse, and serialize user group data for use with AWS ElastiCache operations. Use cases include managing user group configurations and handling API responses in ElastiCache workflows.",
      "description_length": 374,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PreferredAvailabilityZoneList",
      "library": "aws-elasticache",
      "description": "This module handles lists of availability zones for ElastiCache configurations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use cases include serializing availability zone preferences for API requests or deserializing responses.",
      "description_length": 302,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersionMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing cache engine versions in Amazon ElastiCache. It provides operations to construct, serialize, and parse messages containing a list of cache engine versions and an optional marker for pagination. Use this module when retrieving or processing lists of supported cache engine versions from the ElastiCache API, particularly for handling paginated responses.",
      "description_length": 402,
      "index": 181,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling user quota exceeded errors in AWS ElastiCache. It includes operations for creating, parsing, and converting error data to query parameters or JSON format. The module works with unit type values, representing the presence of a quota exceeded condition.",
      "description_length": 316,
      "index": 182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.SlotMigration",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the progress of a slot migration in a caching service, containing an optional percentage value. It provides functions to create, parse, and convert the structure to and from XML, JSON, and query formats. This module is used to track and serialize the status of data slot migrations in a Redis cluster.",
      "description_length": 351,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PreferredOutpostArnList",
      "library": "aws-elasticache",
      "description": "This module handles lists of Amazon Resource Names (ARNs) for preferred outposts in ElastiCache. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. Use this module when configuring or retrieving ElastiCache replication groups that specify preferred outposts.",
      "description_length": 323,
      "index": 184,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a global replication group in Amazon ElastiCache. It includes a data structure that may contain a `GlobalReplicationGroup` object, along with functions to create, parse, and convert the result to and from JSON and query formats. It is used to process and manage the output from ElastiCache API calls that create global replication groups.",
      "description_length": 381,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating a global replication group in Amazon ElastiCache, consisting of a suffix, optional description, and primary replication group ID. It provides functions to construct, serialize, and parse this structure for use with AWS API requests. The module is used to configure and manage cross-region replication for Redis clusters.",
      "description_length": 370,
      "index": 186,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.StartMigrationMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a request to start a migration in ElastiCache, specifically containing a replication group ID and a list of customer node endpoints. It provides functions to construct the structure, parse it from XML, convert it to query parameters or JSON, and create it from JSON input. Concrete use cases include initiating a migration process by sending endpoint information to AWS ElastiCache service.",
      "description_length": 440,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeTypeList",
      "library": "aws-elasticache",
      "description": "This module handles lists of string-based node types in AWS ElastiCache configurations. It provides functions to convert node type lists to and from JSON and query formats, and includes parsing from XML nodes. Use this module when working with ElastiCache API operations that require specifying or retrieving node type lists, such as describing available node types or configuring cache clusters.",
      "description_length": 396,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupMember",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a member of a global replication group in Amazon ElastiCache, with fields for replication group ID, region, role, automatic failover status, and current status. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. It is used to manage and track individual replication group members within a global replication setup.",
      "description_length": 418,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module represents a paginated response containing a list of cache clusters and an optional marker for subsequent requests. It provides functions to construct, parse, and serialize cache cluster messages in various formats, including JSON and AWS query format. It is used when retrieving or managing cache clusters in ElastiCache, particularly for handling large result sets that require pagination.",
      "description_length": 403,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheSecurityGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing cache security groups in Amazon ElastiCache, with fields for filtering by group name, limiting results, and pagination. It provides functions to construct, parse, and serialize the structure to query parameters or JSON, enabling interaction with ElastiCache's API using precise request configurations. Use this module to build and process API requests when managing cache security group listings in AWS.",
      "description_length": 455,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DecreaseReplicaCountMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying an ElastiCache replication group by reducing the number of replicas. It includes fields to specify the replication group, set a new replica count, configure replicas, list replicas to remove, and control when changes take effect. Operations include creating, parsing, and serializing the structure for API requests.",
      "description_length": 366,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidParameterCombinationException",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid parameter combination exceptions. It works with XML, JSON, and query data formats to serialize and deserialize exception data. It is used when an API call includes conflicting or invalid parameter values.",
      "description_length": 277,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Subnet",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a subnet with optional fields for identifier, availability zone, and outpost. It provides functions to construct, parse, and serialize subnet data for use in AWS ElastiCache operations. The module supports JSON and XML data interchange formats, commonly used in API requests and responses.",
      "description_length": 339,
      "index": 194,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, serialization, and conversion of service update status lists. It works with lists of `ServiceUpdateStatus.t` values, providing operations to convert these lists to and from XML, JSON, and query parameters. Use this module when interacting with AWS ElastiCache service update APIs to process or construct service update status data in different formats.",
      "description_length": 381,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing the status of a cache node update, including fields like node ID, update status, timestamps, and initiation details. It provides functions to construct, parse, and convert the record to and from JSON, query parameters, and XML. Use this module when managing ElastiCache node updates, tracking update progress, or integrating with AWS APIs that require structured node status data.",
      "description_length": 427,
      "index": 196,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the `CacheClusterNotFoundFault` error in AWS ElastiCache. It provides operations for creating, parsing, and converting the error to query parameters, JSON, and back from JSON. Use this module when interacting with ElastiCache APIs to manage cache cluster existence checks and error responses.",
      "description_length": 362,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CopySnapshotResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a snapshot copy operation, containing an optional snapshot object. It provides functions to construct, parse, and serialize the result in various formats, including JSON and query parameters. Use this module when handling responses from copying Redis snapshots in ElastiCache, particularly to extract and manipulate the resulting snapshot metadata.",
      "description_length": 412,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a resharding configuration for managing node groups in a distributed cache system. It includes operations to create, serialize, and parse configurations using XML, JSON, and query parameters. The structure holds an optional node group ID and a list of preferred availability zones, supporting precise control over cache node placement during resharding.",
      "description_length": 373,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheCluster",
      "library": "aws-elasticache",
      "description": "This module defines a `CacheCluster` record with fields representing metadata and configuration details of an ElastiCache cluster, such as status, node count, endpoints, and encryption settings. It provides functions to construct, serialize, and deserialize cluster data for use in API interactions. Concrete use cases include retrieving cluster state, modifying configurations, and parsing AWS API responses for ElastiCache management.",
      "description_length": 436,
      "index": 200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `UserGroupAlreadyExistsFault` error in AWS ElastiCache. It provides operations to create, parse, and convert the error type to query parameters, JSON, and back from JSON. Use this module when interacting with ElastiCache APIs to manage user group creation and handle duplicate user group errors.",
      "description_length": 364,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheSubnetGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing cache subnet groups in Amazon ElastiCache, with optional fields for filtering by group name, limiting results, and pagination. It provides functions to construct, serialize, and convert the structure to and from JSON and query formats. It is used when making API requests to retrieve information about ElastiCache subnet configurations.",
      "description_length": 388,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidCacheParameterGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid cache parameter group state errors. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON. Use this module when interacting with AWS ElastiCache APIs to manage error responses related to cache parameter group states.",
      "description_length": 353,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a record type and operations for constructing, serializing, and parsing messages used to modify an ElastiCache cluster configuration. It supports fields such as cache node count, security groups, maintenance windows, and version updates, enabling precise control over cluster adjustments. Use cases include updating cluster settings programmatically, integrating with configuration management tools, or automating scaling and maintenance workflows.",
      "description_length": 468,
      "index": 204,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.PurchaseReservedCacheNodesOfferingMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for purchasing reserved cache nodes in Amazon ElastiCache, with fields for the offering ID, optional node ID, and node count. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and XML. It is used to interface directly with ElastiCache's API when reserving cache nodes programmatically.",
      "description_length": 368,
      "index": 205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UpdateActionStatusList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, serialization, and conversion of lists of ElastiCache update action statuses. It provides functions to convert these lists to and from XML, JSON, and query string formats. Use this module when interacting with AWS ElastiCache APIs that require or return update action status lists in different data formats.",
      "description_length": 336,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SnapshotNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling cases where a snapshot is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. This is used specifically to represent and manage missing snapshots in API responses.",
      "description_length": 307,
      "index": 207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeServiceUpdatesMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying service updates in a caching system, supporting filtering by update name, status, and pagination. It provides functions to construct, serialize, and parse these queries in JSON, XML, and HTTP query formats. Concrete use cases include retrieving pending service updates for cache clusters and managing update responses in an API client.",
      "description_length": 385,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FailoverGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of a failover operation for a global replication group in Amazon ElastiCache. It provides functions to construct, serialize, and parse the result, which includes an optional global replication group object. Use this module when managing cross-region Redis replication failovers and processing their responses in AWS.",
      "description_length": 347,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `UserGroupQuotaExceededFault` error in AWS ElastiCache. It includes operations for constructing, parsing, and converting the error to query or JSON formats, primarily working with unit type and JSON-like structures. It is used to manage error responses when user group quotas are exceeded in ElastiCache service interactions.",
      "description_length": 394,
      "index": 210,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeUserGroupsResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of describing user groups in ElastiCache, providing structured access to a list of user groups and an optional pagination marker. It includes functions to construct, parse, and convert the result to and from JSON and query formats. It is used when managing user group configurations and navigating paginated responses from the ElastiCache API.",
      "description_length": 374,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InsufficientCacheClusterCapacityFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition where there is not enough cache cluster capacity. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module when handling or propagating capacity-related errors from cache cluster operations.",
      "description_length": 323,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSecurityGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a cache security group creation request with required name and description fields. It provides functions to construct, serialize, and parse the request in various formats including JSON, query parameters, and XML. It is used when setting up new cache security groups in Amazon ElastiCache.",
      "description_length": 309,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupDetails",
      "library": "aws-elasticache",
      "description": "This module handles the structure and conversion of cache parameter group details, including optional pagination markers, parameter lists, and cache node type-specific parameters. It provides operations to create, parse XML input, and serialize to query or JSON formats. It is used when retrieving or modifying parameter groups in ElastiCache, particularly for handling responses from API calls like `DescribeCacheParameterGroups`.",
      "description_length": 431,
      "index": 214,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.OutpostArnsList",
      "library": "aws-elasticache",
      "description": "This module handles lists of outpost ARNs in AWS ElastiCache operations. It provides functions to parse, convert to query format, and serialize to and from JSON. It works specifically with lists of string ARNs, used when specifying outposts in ElastiCache configurations.",
      "description_length": 271,
      "index": 215,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RemoveTagsFromResourceMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for removing tags from an ElastiCache resource, consisting of the resource name and a list of tag keys. It provides functions to construct, parse, and convert the structure to query parameters or JSON format. Use this module when interacting with AWS ElastiCache APIs to manage resource tags programmatically.",
      "description_length": 346,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error case where a reserved cache node already exists. It works with unit type values and provides operations to construct, parse, and convert the error to query parameters or JSON format. Concrete use cases include error handling during AWS ElastiCache node reservation operations.",
      "description_length": 351,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeList",
      "library": "aws-elasticache",
      "description": "This module handles lists of reserved cache nodes in AWS ElastiCache. It provides functions to parse XML input into a list of reserved cache node objects, convert the list to query parameters or JSON format, and construct the list from JSON data. It is used when managing reserved cache node resources, such as listing or provisioning reserved nodes in an AWS account.",
      "description_length": 368,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Snapshot",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache snapshot, containing metadata such as snapshot name, status, cache node count, and configuration details. It provides functions to construct, parse, and convert snapshot data to and from XML, JSON, and query formats. Concrete use cases include managing snapshot creation, inspecting snapshot properties, and integrating with AWS ElastiCache APIs for backup and restore operations.",
      "description_length": 445,
      "index": 219,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupPendingChanges",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing pending changes to a user group, specifically tracking user IDs to add or remove. It provides functions to construct, serialize, and parse these changes in formats like JSON, query strings, and XML. It is used when managing user group membership modifications in ElastiCache, particularly during updates where changes are staged before application.",
      "description_length": 398,
      "index": 220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.EventsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for handling messages containing lists of ElastiCache events, including an optional marker for pagination. It provides functions to construct, serialize, and deserialize these messages to and from JSON and query formats. It is used to process responses from ElastiCache API operations that list events, such as retrieving event records for monitoring and auditing purposes.",
      "description_length": 410,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagListMessage",
      "library": "aws-elasticache",
      "description": "This module handles the serialization and deserialization of tag lists in Elasticache API requests and responses. It works with XML, JSON, and query string formats, specifically processing tag data structured as lists of key-value pairs. Use this module when interacting with Elasticache operations that require or return resource tags, such as listing or applying tags to cache clusters.",
      "description_length": 388,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupPendingModifiedValues",
      "library": "aws-elasticache",
      "description": "This module represents pending modifications for a replication group in Amazon ElastiCache, capturing changes like primary cluster updates, automatic failover status, resharding, auth token updates, and user group changes. It provides constructors, parsers, and serializers for working with this data in XML, JSON, and AWS query formats. It is used to inspect or apply pending configuration changes to an ElastiCache replication group.",
      "description_length": 435,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing cache security group responses in AWS ElastiCache. It provides operations to construct, parse, and serialize messages containing an optional marker and a collection of cache security groups. Use this module when processing API responses or building requests that involve listing or managing cache security groups.",
      "description_length": 362,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReplicationGroupsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing replication groups in Amazon ElastiCache, with optional fields for filtering by group ID, limiting results, and pagination. It provides functions to construct, parse, and convert the structure to query parameters, JSON, and back, enabling precise API requests and responses. Concrete use cases include querying ElastiCache replication group details with custom filters and handling paginated results.",
      "description_length": 452,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the case when a user group is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. This is used in error handling scenarios where the absence of a user group needs to be represented uniformly across different data interchange formats.",
      "description_length": 377,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingStatus",
      "library": "aws-elasticache",
      "description": "This module handles resharding status information for ElastiCache clusters, specifically tracking slot migration details during scaling operations. It provides functions to construct, serialize, and deserialize resharding status data, enabling interaction with AWS ElastiCache APIs. Use cases include monitoring cluster scaling progress and retrieving migration state from API responses.",
      "description_length": 387,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ClusterQuotaForCustomerExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the condition where a customer exceeds their cluster quota in a caching service. It works with unit type values to represent this specific error state. Use this module to parse, serialize, and manage quota exceeded errors in API responses.",
      "description_length": 304,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DefaultUserAssociatedToUserGroupFault",
      "library": "aws-elasticache",
      "description": "This module defines a minimal type `t` representing a fault condition where a default user is associated with a user group. It provides functions to construct, parse, and serialize the fault into query parameters or JSON format. Use this when handling API errors related to user group associations in ElastiCache configurations.",
      "description_length": 328,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheClusterMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters to delete an ElastiCache cluster, including the cluster ID and an optional final snapshot identifier. It provides functions to construct, parse, and serialize the structure to JSON, query parameters, or XML. Use this module when configuring deletion requests for ElastiCache clusters, particularly when specifying whether to create a final snapshot.",
      "description_length": 412,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNode",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a reserved cache node, including attributes like node type, duration, pricing, and state. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Concrete use cases include managing reserved cache node configurations and processing billing or reservation data from AWS ElastiCache.",
      "description_length": 388,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupList",
      "library": "aws-elasticache",
      "description": "This module handles lists of Global Replication Group objects from AWS ElastiCache. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. Use this module when working with AWS ElastiCache global replication group data in different serialization formats.",
      "description_length": 315,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EC2SecurityGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an EC2 security group with optional fields for status, name, and owner ID. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include managing security group associations in ElastiCache configurations and handling AWS API requests and responses involving EC2 security group data.",
      "description_length": 408,
      "index": 233,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a cache parameter group already exists. It works with unit type values and provides operations to parse, convert to query format, serialize to JSON, and deserialize from JSON. Concrete use cases include error handling during cache parameter group creation in AWS ElastiCache service interactions.",
      "description_length": 386,
      "index": 234,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling cache subnet quota exceeded faults in AWS ElastiCache. It includes operations to create, parse, and convert the error to query parameters or JSON format. Use this module when interacting with ElastiCache APIs to handle quota-related error conditions during cache subnet group management.",
      "description_length": 342,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition when a cache parameter group quota is exceeded. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module to handle and propagate quota exceeded errors in API responses or client requests.",
      "description_length": 320,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodeQuotaExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an error condition where the quota for reserved cache nodes is exceeded. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module to handle and propagate quota exceeded errors in API responses or validation logic.",
      "description_length": 327,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersionList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache engine versions, providing functions to parse XML input into version lists, convert version lists to query parameters or JSON format, and construct version lists from JSON data. It works directly with lists of `CacheEngineVersion.t` records, which represent metadata about supported cache engine versions. Use this module when interacting with AWS ElastiCache APIs to list available engine versions or process responses containing engine version data.",
      "description_length": 486,
      "index": 238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying cache parameter groups in Amazon ElastiCache. It includes operations to create, parse, and serialize messages containing a parameter group name and a list of parameter name-value pairs. It is used to send configuration updates to ElastiCache, such as adjusting memory limits or timeout settings for a specific parameter group.",
      "description_length": 377,
      "index": 239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteSnapshotMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying a snapshot deletion request in the ElastiCache service. It includes operations to create, parse, and serialize a snapshot deletion message using XML, JSON, and query formats. It is used when issuing a delete snapshot command to AWS ElastiCache, ensuring the correct format for API requests.",
      "description_length": 342,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TestFailoverMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for initiating a test failover in an ElastiCache replication group. It includes operations to create, parse, and serialize the structure to query parameters or JSON, primarily working with string-typed fields. It is used to simulate failovers for testing high availability configurations in ElastiCache node groups.",
      "description_length": 352,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupMemberUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the update status of a node group member in a caching service. It includes fields for node identifiers, update timestamps, and status details, along with functions to construct, parse, and serialize the structure for API interactions. It is used to track and manage node updates and deletions in a distributed caching environment.",
      "description_length": 380,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the status of a cache parameter group, including its name, apply status, and associated cache node IDs that require rebooting. It provides functions to construct, serialize, and deserialize this structure using JSON, query parameters, or XML input. Use this module when managing ElastiCache parameter group updates and tracking which nodes need restarts after configuration changes.",
      "description_length": 432,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SecurityGroupMembership",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a security group membership with optional security group ID and status fields. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used when managing cache clusters that are associated with Amazon EC2 security groups.",
      "description_length": 332,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidSnapshotStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a singleton type `t` representing an invalid snapshot state error in ElastiCache. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module when handling API responses that indicate an invalid snapshot state, ensuring proper error signaling and serialization.",
      "description_length": 338,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.BatchApplyUpdateActionMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying which replication groups and cache clusters to apply a service update to, along with the update name. It includes functions to construct, serialize, and deserialize this structure for use in API requests. The module is used when applying batched service updates in ElastiCache, allowing precise targeting of affected resources.",
      "description_length": 379,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a cache security group with fields for owner ID, group name, description, associated EC2 security groups, and ARN. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include managing ElastiCache security configurations and integrating with AWS API requests that require cache security group details.",
      "description_length": 428,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.Authentication",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for authentication settings in ElastiCache, including the authentication type and password count. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when configuring or retrieving authentication details for ElastiCache clusters or replication groups.",
      "description_length": 363,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheSubnetGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a cache subnet group in AWS ElastiCache. It provides operations to create, parse, and serialize a result object that contains an optional updated cache subnet group. Use this module when processing responses from ElastiCache API calls that modify subnet group configurations.",
      "description_length": 319,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterIdList",
      "library": "aws-elasticache",
      "description": "This module handles lists of cache cluster IDs in string format. It provides functions to convert these lists to and from JSON and query parameters, as well as to parse them from XML. It is used when working with AWS ElastiCache operations that require multiple cache cluster identifiers, such as batch deletion or status retrieval.",
      "description_length": 332,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.StartMigrationResponse",
      "library": "aws-elasticache",
      "description": "This module handles responses from initiating a migration in a distributed caching service. It includes a `t` type with an optional replication group and functions to create, parse, and convert the response to query parameters or JSON. It is used to manage the state of a replication group after starting a migration.",
      "description_length": 317,
      "index": 251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroups",
      "library": "aws-elasticache",
      "description": "This module handles the serialization, deserialization, and manipulation of cache subnet group data as lists. It provides functions to convert between XML, JSON, and query formats and a list-based structure of cache subnet groups. It is used when interacting with ElastiCache APIs to manage or retrieve cache subnet group configurations.",
      "description_length": 337,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.EngineDefaults",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for holding engine defaults in ElastiCache, including fields for parameter group family, marker, parameters list, and cache node type-specific parameters. It provides functions to construct, parse, and serialize these defaults to and from JSON and query formats. It is used to retrieve and manage default configuration settings for ElastiCache engine types.",
      "description_length": 394,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.FailoverGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a failover request for a global replication group in Amazon ElastiCache. It includes operations to construct, parse, and serialize the structure to query parameters or JSON, using string values for identifiers and region names. It is used to initiate a manual failover of a replication group from one region to another.",
      "description_length": 369,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the `CacheSecurityGroupNotFoundFault` error in AWS ElastiCache operations. It provides functions to construct, parse, and convert the error to query or JSON formats, typically used when interacting with AWS APIs or processing API responses. Use cases include error handling and response serialization in ElastiCache client implementations.",
      "description_length": 409,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateSeverity",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` representing severity levels for service updates, with variants Critical, Important, Medium, and Low. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These operations support handling service update severity values in API requests and responses, particularly when interacting with AWS ElastiCache services.",
      "description_length": 438,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroups",
      "library": "aws-elasticache",
      "description": "Handles parsing, querying, and JSON serialization of cache security group data from AWS ElastiCache. Works with lists of `CacheSecurityGroup.t` records, converting between XML, JSON, and query formats. Useful for interacting with ElastiCache APIs to manage or retrieve security group configurations.",
      "description_length": 299,
      "index": 257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.EventList",
      "library": "aws-elasticache",
      "description": "This module handles lists of Event.t values, providing functions to convert them to and from XML, JSON, and query parameters. It supports parsing event data from AWS ElastiCache responses and serializing event lists for API requests. Use this module when working with ElastiCache event logs, such as retrieving or sending batches of events.",
      "description_length": 340,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CustomerNodeEndpointList",
      "library": "aws-elasticache",
      "description": "This module handles lists of customer node endpoints in Amazon ElastiCache. It provides functions to parse XML input into endpoint lists, convert endpoint lists to query parameters or JSON format, and construct endpoint lists from JSON data. It is used when managing ElastiCache cluster configurations that involve multiple endpoints for customer access.",
      "description_length": 354,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ChangeType",
      "library": "aws-elasticache",
      "description": "This module defines and manipulates a type representing whether a configuration change requires a reboot. It includes conversions to and from strings, JSON, and XML, along with utilities for querying and serialization. Use this module when handling configuration updates in AWS ElastiCache that require tracking change persistence.",
      "description_length": 331,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidVPCNetworkStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `InvalidVPCNetworkStateFault` error in AWS ElastiCache. It provides operations to construct, parse, and convert the error type to query parameters, JSON, and back, all acting on a unit type. It is used specifically for error reporting and handling invalid VPC network states in ElastiCache service interactions.",
      "description_length": 380,
      "index": 261,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.RegionalConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for configuring regional settings in a Redis replication group, including the replication group ID, region, and resharding configuration. It provides functions to construct, serialize, and parse this configuration from XML, JSON, and query parameters. Concrete use cases include setting up cross-region replication and managing resharding operations in AWS ElastiCache.",
      "description_length": 406,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.SourceType",
      "library": "aws-elasticache",
      "description": "This module defines a polymorphic variant type representing different source types in ElastiCache, such as cache clusters, parameter groups, and replication groups. It includes functions to convert between string representations and the enumerated type, along with serialization and deserialization routines for JSON, XML, and query parameters. It is used to specify and process event sources in ElastiCache API operations like retrieving logs or configuring notifications.",
      "description_length": 473,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.UserGroupsUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying user group updates, with operations to create, parse, and serialize the structure. It works with lists of user group IDs to add or remove. It is used to manage user group membership changes in ElastiCache service configurations.",
      "description_length": 280,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.PendingModifiedValues",
      "library": "aws-elasticache",
      "description": "This module defines a record type representing pending configuration changes for an ElastiCache cluster, including fields like node count, node IDs to remove, engine version, node type, and auth token status. It provides constructors, JSON and XML parsers, and query builders to facilitate handling and serializing these configuration updates. It is used to manage and apply modifications to ElastiCache instances programmatically.",
      "description_length": 431,
      "index": 265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeReservedCacheNodesOfferingsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for querying reserved cache node offerings in Amazon ElastiCache. It includes fields to filter results by offering ID, cache node type, duration, product description, and offering type, along with options for pagination. The module supports converting the structure to and from JSON and query parameters, enabling integration with AWS API requests and responses.",
      "description_length": 399,
      "index": 266,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.TagQuotaPerResourceExceeded",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `TagQuotaPerResourceExceeded` error in AWS ElastiCache. It provides operations to create, parse, and convert the error type into query or JSON formats, typically used when the tag limit per resource is exceeded. The module works with unit type values and is used in error handling during API interactions.",
      "description_length": 374,
      "index": 267,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.UserList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache user records, providing direct conversions between user lists and query parameters, JSON, and XML formats. It supports parsing user data from XML nodes and constructing user lists from JSON input. Concrete use cases include processing batch user data for API requests and responses in ElastiCache management workflows.",
      "description_length": 359,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheParameterGroupNameMessage",
      "library": "aws-elasticache",
      "description": "This module handles messages containing cache parameter group names in AWS ElastiCache operations. It provides functions to construct, parse, and serialize these messages to and from JSON, query strings, and XML. Use this module when managing cache parameter group configurations or responses in ElastiCache API interactions.",
      "description_length": 325,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupConfiguration",
      "library": "aws-elasticache",
      "description": "This module defines a record type for configuring node groups in a distributed caching service, including node group ID, slot distribution, replica count, and availability zone or outpost ARN settings. It provides functions to construct, serialize, and parse these configurations, supporting operations like converting to and from JSON or query parameters. It is used to specify node group settings when creating or modifying replication groups in a caching cluster.",
      "description_length": 466,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdatesMessage",
      "library": "aws-elasticache",
      "description": "This module handles structured data representing service update messages in an AWS ElastiCache context. It provides operations to construct, serialize, and parse service update messages using JSON and XML formats. Concrete use cases include processing responses from AWS ElastiCache service update APIs and building requests for service update operations.",
      "description_length": 355,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeQuotaForCustomerExceededFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the `NodeQuotaForCustomerExceededFault` error in AWS ElastiCache. It provides operations to create, parse, and convert the error type to query parameters, JSON, and back from JSON. It is used specifically to represent and manage the error condition when a customer exceeds their node quota in ElastiCache operations.",
      "description_length": 381,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSecurityGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a cache security group already exists. It works with unit type values and provides operations to parse, convert to query format, serialize to JSON, and deserialize from JSON. Concrete use cases include error handling during cache security group creation in AWS ElastiCache API interactions.",
      "description_length": 380,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdate",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing service updates in a caching system, including metadata such as name, severity, status, and timing details. It provides functions to construct, serialize, and parse service update records, enabling integration with XML, JSON, and query string formats. Concrete use cases include processing service update notifications from AWS ElastiCache and preparing update configurations for deployment.",
      "description_length": 445,
      "index": 274,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalNodeGroupList",
      "library": "aws-elasticache",
      "description": "This module defines a list of global node groups and provides functions to convert between XML, JSON, and query formats. It works with lists of `GlobalNodeGroup.t` records, enabling serialization and deserialization for API interactions. Use this module when handling AWS ElastiCache global replication group configurations in different data formats.",
      "description_length": 350,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AddTagsToResourceMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for adding tags to an ElastiCache resource, consisting of a resource name and a list of tags. It provides functions to construct, parse, and serialize the structure to different formats like JSON and query parameters. Use this module when interacting with AWS ElastiCache APIs to manage resource tags programmatically.",
      "description_length": 355,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RebootCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of a cache cluster reboot operation, containing an optional `CacheCluster` record. It provides functions to construct, parse, and convert the result to various formats including JSON, query parameters, and XML. It is used to handle responses from rebooting an ElastiCache cluster, enabling integration with AWS API requests and responses.",
      "description_length": 399,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidUserStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling invalid user state errors. It provides operations to construct, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this module when managing error responses related to invalid user states in API calls.",
      "description_length": 305,
      "index": 278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AllowedNodeTypeModificationsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the allowed node type modifications for scaling up and down in an ElastiCache context. It provides functions to create, parse, and convert the structure to and from XML, JSON, and query formats. It is used to handle responses that indicate which node types are supported when modifying a cache cluster's size.",
      "description_length": 359,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TagNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of tags in ElastiCache operations. It includes functions for creating, parsing, and converting tag-related data to query parameters or JSON format. Use this module when managing tag validation or error handling in ElastiCache API interactions.",
      "description_length": 325,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteUserMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for deleting a user in ElastiCache by user ID. It provides functions to construct, parse, and serialize the structure to query or JSON formats. Use this module when interacting with ElastiCache's user deletion API, particularly for formatting requests or handling user identifiers in JSON or XML.",
      "description_length": 333,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteGlobalReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of deleting a global replication group in Amazon ElastiCache. It includes a single optional field for the deleted global replication group and provides functions to construct, parse, and convert the result to and from JSON and query formats. It is used to process responses from the ElastiCache API after a global replication group deletion operation.",
      "description_length": 382,
      "index": 282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for cache cluster deletion operations, containing an optional `CacheCluster` record. It provides functions to construct, parse, and serialize the result to query parameters or JSON, with support for XML input parsing. It is used to handle responses from AWS ElastiCache API calls that delete cache clusters, allowing inspection of the deleted cluster's details.",
      "description_length": 395,
      "index": 283,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ListAllowedNodeTypeModificationsMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a request to list allowed node type modifications for an ElastiCache cluster or replication group. It includes functions to construct, serialize, and parse the request data, supporting both JSON and XML formats. It is used when querying AWS ElastiCache to determine which node type changes are available for a specific cluster or replication group.",
      "description_length": 398,
      "index": 284,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupShardConfigurationResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of modifying a replication group's shard configuration in AWS ElastiCache. It provides constructors, JSON serialization/deserialization, and query conversion for a structure containing an optional replication group. It is used to process and transmit ElastiCache replication group updates in API requests and responses.",
      "description_length": 350,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicaConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles lists of replica configurations for ElastiCache clusters. It provides functions to convert, parse, and serialize these configurations to and from XML, JSON, and AWS query formats. It is used when managing replication groups where multiple shards need to be configured with specific settings.",
      "description_length": 311,
      "index": 286,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying an ElastiCache replication group, supporting operations to update configuration parameters such as description, cluster settings, security groups, maintenance windows, and node properties. It works with string, boolean, integer, and list types, including specialized types for security group names, user group IDs, and authentication tokens. Concrete use cases include programmatically updating replication group settings in AWS ElastiCache with precise control over failover, version upgrades, and access configurations.",
      "description_length": 572,
      "index": 287,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheSubnetGroupAlreadyExistsFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the error condition when a cache subnet group already exists. It works with unit type values and provides operations to create, parse, and convert the error to query or JSON formats. It is used in error handling workflows when managing cache subnet groups in AWS ElastiCache.",
      "description_length": 340,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ParameterNameValueList",
      "library": "aws-elasticache",
      "description": "This module handles lists of parameter name-value pairs for ElastiCache operations. It provides functions to parse XML input into parameter lists, convert them to query parameters or JSON format, and construct parameter lists from JSON. It is used to manage configuration parameters when interacting with ElastiCache clusters, such as modifying or retrieving settings.",
      "description_length": 368,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheEngineVersion",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for representing cache engine versions, with fields for engine name, version, parameter group family, and descriptive metadata. It provides constructors, serialization to JSON and query formats, and parsing from XML and JSON. It is used to manage version-specific configurations and metadata for ElastiCache engines.",
      "description_length": 353,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CopySnapshotMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for copying ElastiCache snapshots, including source and target names, optional target bucket, and KMS key ID. It provides functions to construct, parse, and serialize snapshot copy messages for use in API requests. The module is used to configure and transmit snapshot duplication parameters in ElastiCache management workflows.",
      "description_length": 365,
      "index": 291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupInfo",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for holding information about a global replication group in Amazon ElastiCache, including its ID and the role of the replication group member. It provides functions to create, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when managing cross-region replication configurations in ElastiCache.",
      "description_length": 373,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroup",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing an ElastiCache node group, including its ID, status, endpoints, slot distribution, and member nodes. It provides functions to construct, serialize, and deserialize node group data for use in API requests and responses. Concrete use cases include managing cache cluster configurations and retrieving node group details from AWS ElastiCache.",
      "description_length": 389,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReplicationGroupAlreadyUnderMigrationFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling the condition where a replication group is already undergoing migration. It works with unit type values to represent the presence or absence of this specific error state. Use this module when interacting with ElastiCache APIs to detect and handle conflicts arising from concurrent migration attempts.",
      "description_length": 365,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.TimeRangeFilter",
      "library": "aws-elasticache",
      "description": "This module defines a time range filter with optional start and end times, using AWS DateTime values. It provides functions to construct, parse, and convert the filter to query parameters or JSON format. Use this module when specifying time intervals for filtering ElastiCache events or snapshots in API requests.",
      "description_length": 313,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RegionalConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles lists of regional configuration data for ElastiCache, providing functions to parse XML input into regional configuration records, convert them to query parameters or JSON format, and construct regional configuration lists from JSON. It works specifically with lists of `RegionalConfiguration.t` records. Use this module when managing replication group configurations across regions or handling ElastiCache API requests and responses involving regional settings.",
      "description_length": 481,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidReplicationGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for handling invalid replication group states in a service. It includes operations to create, parse, and convert the error to query parameters or JSON format. It is used when interacting with APIs that require error serialization or validation checks.",
      "description_length": 293,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.RevokeCacheSecurityGroupIngressResult",
      "library": "aws-elasticache",
      "description": "This module defines a result type for revoking ingress to a cache security group, containing an optional cache security group. It provides functions to construct, parse, and serialize the result to query parameters or JSON, specifically handling responses from AWS ElastiCache API calls. The module is used to process the output of a security group ingress revocation operation, allowing integration with AWS API request handling.",
      "description_length": 430,
      "index": 298,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeIdsList",
      "library": "aws-elasticache",
      "description": "This module represents a list of cache node IDs as a list of strings. It provides functions to convert the list to and from JSON and query formats, parse it from XML nodes, and construct it from an arbitrary value. It is used when managing ElastiCache clusters that require specifying multiple node IDs, such as modifying or deleting specific cache nodes.",
      "description_length": 355,
      "index": 299,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for modifying global replication group settings in Amazon ElastiCache, including fields like replication group ID, cache node type, and failover configuration. It provides functions to construct, parse, and serialize these modification requests, supporting operations like API query formatting and JSON conversion. Use this module when updating global replication group configurations programmatically, such as changing the cache node type or enabling automatic failover.",
      "description_length": 508,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeUpdateInitiatedBy",
      "library": "aws-elasticache",
      "description": "This module defines a type `t` with two constructors, `System` and `Customer`, representing the entity that initiated a node update. It provides functions to convert between strings and the enumerated type, along with serialization and deserialization routines for JSON, XML, and query parameters. It is used to track the initiator of cache node updates in AWS ElastiCache operations.",
      "description_length": 384,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateList",
      "library": "aws-elasticache",
      "description": "This module handles lists of service update records from Amazon ElastiCache. It provides functions to convert service update lists to and from JSON and query formats, and to parse them from XML. Use this module when managing service updates for ElastiCache clusters, such as applying updates or checking available patches.",
      "description_length": 322,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CreateSnapshotMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for creating snapshots in Amazon ElastiCache, supporting fields such as replication group ID, cache cluster ID, snapshot name, and KMS key ID. It provides functions to construct, serialize, and parse snapshot creation requests in multiple formats including JSON and XML. Concrete use cases include initiating manual snapshots and configuring encrypted backups using KMS keys.",
      "description_length": 412,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidParameterValueException",
      "library": "aws-elasticache",
      "description": "This module defines a single exception type `t` with an optional message field, used to represent invalid parameter errors in API requests. It provides functions to construct, parse, and serialize the exception to various formats like JSON and query parameters. Concrete use cases include handling and propagating errors when invalid input is provided to ElastiCache service operations.",
      "description_length": 386,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeGroupConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, querying, and serializing lists of node group configurations. It works with XML nodes, JSON values, and AWS query parameters to convert between these formats and OCaml structures. Use it when managing ElastiCache cluster configurations through API interactions.",
      "description_length": 290,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizeCacheSecurityGroupIngressMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for authorizing EC2 security group ingress to a cache security group. It includes functions to construct, parse, and serialize the structure to query parameters or JSON, primarily used when configuring access permissions for ElastiCache resources. The structure contains fields for cache security group name, EC2 security group name, and EC2 security group owner ID.",
      "description_length": 403,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheClusterList",
      "library": "aws-elasticache",
      "description": "This module handles lists of ElastiCache cluster records, providing direct conversions between XML, JSON, and query representations. It supports parsing cluster lists from XML nodes and converting them to AWS query format or structured JSON. Use this when working with AWS ElastiCache API responses that return multiple clusters, such as describing or listing existing clusters.",
      "description_length": 378,
      "index": 307,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ServiceUpdateType",
      "library": "aws-elasticache",
      "description": "This module defines a single enumerated type `t` with one variant `Security_update` and provides bidirectional conversions between strings and this type. It includes functions for parsing, serializing, and converting values to and from JSON and query formats. Concrete use cases include handling service update types in API requests and responses, particularly for security-related updates in ElastiCache configurations.",
      "description_length": 420,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ReshardingConfigurationList",
      "library": "aws-elasticache",
      "description": "This module handles parsing, formatting, and conversion of resharding configuration lists for ElastiCache operations. It works with XML nodes, JSON values, and query parameters, specifically processing lists of resharding configuration records. Use this module when interacting with ElastiCache APIs that require resharding configurations to be serialized or deserialized in different formats.",
      "description_length": 393,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidARNFault",
      "library": "aws-elasticache",
      "description": "This module defines a type and associated functions for handling invalid Amazon Resource Name (ARN) faults in API responses. It includes operations for constructing, parsing, and converting ARN fault data to query parameters, JSON, and back. Use this module when processing errors related to malformed or invalid ARNs in ElastiCache service interactions.",
      "description_length": 354,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ResetCacheParameterGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for resetting cache parameter groups in Amazon ElastiCache, including fields for the parameter group name, a flag to reset all parameters, and a list of specific parameter name-value pairs. It provides functions to construct, serialize, and parse this structure to and from JSON, query strings, and XML. Use this module when configuring or resetting ElastiCache parameter settings programmatically.",
      "description_length": 435,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.AuthorizeCacheSecurityGroupIngressResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of authorizing ingress to a cache security group, primarily by encapsulating an optional `CacheSecurityGroup` value. It provides functions to construct, serialize, and convert the result to and from JSON and XML formats. Use this module when managing ElastiCache security group permissions, particularly after invoking an authorization operation to add ingress rules.",
      "description_length": 398,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DisassociateGlobalReplicationGroupMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for disassociating a replication group from a global replication group in Amazon ElastiCache. It provides functions to construct, serialize, and parse messages containing the identifiers for the global replication group, the replication group, and its region. It is used when sending disassociation requests to the ElastiCache API and handling corresponding JSON or XML responses.",
      "description_length": 417,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeEngineDefaultParametersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for describing engine default parameters in Amazon ElastiCache, including fields for the parameter group family, maximum number of records, and a marker for pagination. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. Use this module when interacting with ElastiCache's API to retrieve default parameter settings for cache engines.",
      "description_length": 424,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.DeleteReplicationGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of deleting a replication group in Amazon ElastiCache. It provides constructors, JSON serialization/deserialization, and query conversion for a structure that may contain a `ReplicationGroup` object. It is used to interpret and format responses from the ElastiCache API after a replication group deletion operation.",
      "description_length": 346,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NotificationConfiguration",
      "library": "aws-elasticache",
      "description": "This module handles the configuration of SNS notifications for ElastiCache clusters. It provides functions to create, parse, and convert notification settings to and from JSON and query formats. The module works with a record type containing optional SNS topic ARN and status fields, used to specify where and whether notifications should be sent.",
      "description_length": 347,
      "index": 316,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ModifyCacheClusterResult",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing the result of modifying a cache cluster, containing an optional updated cache cluster configuration. It provides functions to construct, serialize, and deserialize this result using XML, JSON, and AWS query format. Use this module when handling responses from cache cluster modification operations in AWS ElastiCache.",
      "description_length": 367,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.NodeUpdateStatus",
      "library": "aws-elasticache",
      "description": "This module defines an enumerated type representing the status of node updates in a distributed system, including states like `In_progress`, `Complete`, and `Stopped`. It provides functions to convert between string representations and the enumerated values, along with serialization and deserialization to JSON and query formats. This module is used to track and manage the lifecycle of node-level updates, such as software patches or configuration changes, in systems like Redis clusters.",
      "description_length": 490,
      "index": 318,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.InvalidGlobalReplicationGroupStateFault",
      "library": "aws-elasticache",
      "description": "This module defines a specific error type for invalid global replication group states in ElastiCache. It includes operations to create, parse, and convert the error to query parameters or JSON format. It is used when handling API responses that indicate invalid replication group states.",
      "description_length": 287,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.GlobalReplicationGroupNotFoundFault",
      "library": "aws-elasticache",
      "description": "This module defines a unit type and associated functions for handling the absence of a global replication group in API responses. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, or from JSON. Use this module when interacting with ElastiCache APIs to represent and process missing global replication group errors.",
      "description_length": 367,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.ProcessedUpdateAction",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for tracking processed update actions in ElastiCache, with fields for replication group ID, cache cluster ID, service update name, and update action status. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used to handle service update responses from AWS ElastiCache, particularly when managing cluster and replication group updates.",
      "description_length": 438,
      "index": 321,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.DescribeCacheParametersMessage",
      "library": "aws-elasticache",
      "description": "This module defines a data structure for specifying parameters when describing an ElastiCache parameter group. It includes fields for the parameter group name, source filter, maximum number of records, and a marker for pagination. The module provides functions to construct, parse, and serialize this structure for use in API requests and JSON processing.",
      "description_length": 355,
      "index": 322,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.CreateCacheSecurityGroupResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of creating a cache security group in Amazon ElastiCache. It includes a single data type `t` that wraps an optional `CacheSecurityGroup.t` record, along with functions to construct, serialize, and convert the result to and from XML and JSON formats. It is used to process and manipulate the response data returned by the AWS ElastiCache API after a cache security group creation request.",
      "description_length": 418,
      "index": 323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.Types.CacheNodeTypeSpecificValue",
      "library": "aws-elasticache",
      "description": "This module defines a type representing a cache node type-specific value, with fields for the node type and its corresponding value. It provides functions to construct, parse, and convert the type to and from XML, JSON, and query formats. It is used to specify configuration values that vary by cache node type in ElastiCache operations.",
      "description_length": 337,
      "index": 324,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.PurchaseReservedCacheNodesOfferingResult",
      "library": "aws-elasticache",
      "description": "This module handles the result of purchasing a reserved cache node offering, primarily by encapsulating an optional `ReservedCacheNode` value. It provides functions to construct, serialize, and parse this result in various formats including JSON, query parameters, and XML. Use this module when processing responses from AWS ElastiCache after attempting to reserve cache nodes.",
      "description_length": 377,
      "index": 325,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.ReservedCacheNodesOffering",
      "library": "aws-elasticache",
      "description": "This module defines a data structure representing a reserved cache node offering in AWS ElastiCache, including fields such as offering ID, cache node type, duration, pricing details, and recurring charges. It provides functions to construct, parse, and serialize these offerings to and from JSON, query parameters, and XML. Concrete use cases include retrieving available reserved node offerings from AWS, processing their pricing information, and preparing requests for purchasing reserved nodes.",
      "description_length": 497,
      "index": 326,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types.AuthTokenUpdateStrategyType",
      "library": "aws-elasticache",
      "description": "This module defines an enumeration with values `SET`, `ROTATE`, and `DELETE` to represent strategies for updating authentication tokens in ElastiCache. It provides functions to convert between string representations and the enumerated type, along with serialization and deserialization routines for query parameters, JSON, and XML. These operations are used when configuring or modifying authentication settings for ElastiCache clusters through AWS API calls.",
      "description_length": 459,
      "index": 327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeReservedCacheNodesOfferings",
      "library": "aws-elasticache",
      "description": "This module handles the conversion of input and output types for the `DescribeReservedCacheNodesOfferings` API call in AWS ElastiCache. It provides functions to serialize input data into HTTP requests and deserialize HTTP responses into result types, specifically working with `DescribeReservedCacheNodesOfferingsMessage` and `ReservedCacheNodesOfferingMessage`. It is used to interact directly with the ElastiCache service to retrieve available reserved cache node offerings.",
      "description_length": 476,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeGlobalReplicationGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing global replication groups in AWS ElastiCache by converting input parameters into signed HTTP requests and parsing the responses into structured results or errors. It works with ElastiCache's internal types for input messages, output results, and error responses. It is used to query information about global replication groups, such as their configuration and status, from AWS using the ElastiCache API.",
      "description_length": 434,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteUser",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of ElastiCache users by converting input parameters into signed HTTP requests and processing responses. It works with ElastiCache user data types, specifically encoding `DeleteUserMessage.t` into HTTP requests and decoding responses into user data or error types. It is used to securely issue DeleteUser API calls to AWS ElastiCache, handling request signing, endpoint routing, and error parsing according to the service's specifications.",
      "description_length": 471,
      "index": 330,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheSecurityGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing cache security groups in Amazon ElastiCache by converting input parameters into signed HTTP requests and parsing the responses. It works with ElastiCache-specific types for input, output, and errors, including query string encoding and response decoding. It is used to retrieve information about existing cache security group configurations, such as their rules and metadata, directly from the AWS API.",
      "description_length": 433,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateUser",
      "library": "aws-elasticache",
      "description": "This module handles creating a new user in ElastiCache by defining the input and output types for the operation, along with functions to serialize the request to HTTP and deserialize the response. It works directly with ElastiCache user data structures, specifically `CreateUserMessage` for input and `User` for output, alongside internal error types for handling failures. Concrete use cases include sending a properly signed HTTP request to create a user and parsing the resulting response or error from the AWS service.",
      "description_length": 522,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheParameterGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing cache parameter groups in AWS ElastiCache by converting input data into HTTP requests and parsing responses into structured outputs or errors. It works with ElastiCache-specific types for parameter group descriptions, including input messages, output responses, and error formats. Use this module to retrieve detailed configurations of ElastiCache parameter groups, such as their names, descriptions, and associated metadata, directly from AWS API responses.",
      "description_length": 489,
      "index": 333,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a cache parameter group by sending a properly signed HTTP request to the Elasticache service. It encodes input data into a query string format and handles response parsing, including error decoding from XML. Concrete use cases include removing outdated or unused parameter configurations in an AWS Elasticache environment.",
      "description_length": 342,
      "index": 334,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CompleteMigration",
      "library": "aws-elasticache",
      "description": "This module handles completing a migration in Amazon ElastiCache by providing functions to construct and interpret HTTP requests and responses specific to the CompleteMigration API. It works with input and output types defined in the ElastiCache service, including migration messages and responses, along with internal error types. Use this module when finalizing a migration operation programmatically, such as confirming a successful cache cluster migration.",
      "description_length": 460,
      "index": 335,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateUserGroup",
      "library": "aws-elasticache",
      "description": "This module handles creating user groups in Amazon ElastiCache by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with `CreateUserGroupMessage.t` as input and `UserGroup.t` as output, using `Errors_internal.t` for error handling. Use this module when managing user group configurations programmatically, such as during deployment or access control setup in ElastiCache clusters.",
      "description_length": 481,
      "index": 336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RemoveTagsFromResource",
      "library": "aws-elasticache",
      "description": "This module handles removing tags from an ElastiCache resource by defining the input and output types for the operation, along with functions to convert between HTTP requests/responses and native OCaml types. It works with ElastiCache's `RemoveTagsFromResourceMessage` as input and `TagListMessage` as output, alongside internal error types for failure handling. Concrete use cases include stripping metadata tags from cache clusters or snapshots in AWS ElastiCache via direct API calls.",
      "description_length": 487,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteUserGroup",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of user groups in Amazon ElastiCache by converting input data into an HTTP request and parsing the response into a user group object or error. It works with `DeleteUserGroupMessage.t` as input and returns a `UserGroup.t` on success, using HTTP for communication. Concrete use cases include removing a user group configuration and handling the response or specific AWS errors like invalid user group IDs.",
      "description_length": 436,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeUserGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing user groups in ElastiCache by converting input parameters into signed HTTP requests and parsing responses into structured results or errors. It works with ElastiCache user group descriptions, using input and output types specific to the service along with internal error types. It is used to query details about configured user groups within an ElastiCache cluster.",
      "description_length": 396,
      "index": 339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.BatchApplyUpdateAction",
      "library": "aws-elasticache",
      "description": "This module handles the execution of batch update actions for ElastiCache resources by converting input parameters into properly signed HTTP requests and parsing responses into structured results or errors. It operates on ElastiCache update action messages, working with AWS-specific input and output types defined in the `Types` module. It is used to apply pending updates across multiple cache clusters in a single operation, directly interfacing with the AWS ElastiCache API.",
      "description_length": 478,
      "index": 340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RebalanceSlotsInGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles rebalancing slots in a Global Replication Group within Amazon ElastiCache. It works with input and output types defined in the ElastiCache service, specifically `RebalanceSlotsInGlobalReplicationGroupMessage` and `RebalanceSlotsInGlobalReplicationGroupResult`, along with internal error types. It provides functions to construct HTTP requests, parse responses, and handle errors specific to the rebalance operation, ensuring proper encoding and decoding of API calls.",
      "description_length": 487,
      "index": 341,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ListAllowedNodeTypeModifications",
      "library": "aws-elasticache",
      "description": "This module handles listing allowed node type modifications for ElastiCache clusters. It works with ElastiCache-specific input and output types, including messages for node type modifications and internal error types. It is used to send and receive HTTP requests and responses, specifically for querying valid node type changes applicable to a cluster.",
      "description_length": 352,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.BatchStopUpdateAction",
      "library": "aws-elasticache",
      "description": "This module handles stopping batch update actions for ElastiCache clusters by converting input parameters into signed HTTP requests and parsing responses into structured outputs or errors. It works with ElastiCache update action messages and error types, specifically targeting batch operations across multiple clusters. Concrete use cases include halting ongoing software updates across multiple cache clusters in a single call, with proper request signing and response decoding.",
      "description_length": 480,
      "index": 343,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles modifying an existing ElastiCache cluster by providing functions to construct and send HTTP requests with the necessary query parameters and payload encoding. It works with structured input and output types specific to ElastiCache cluster modifications, including error handling tailored to the API's expected responses. Concrete use cases include updating cluster configuration, adjusting node groups, and changing cache node types in deployed ElastiCache clusters.",
      "description_length": 486,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache subnet groups by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with ElastiCache-specific types such as `CreateCacheSubnetGroupMessage` for input and `CreateCacheSubnetGroupResult` for output, while managing error handling through internal AWS error types. Concrete use cases include configuring network isolation for cache clusters by specifying subnet group details and handling the resulting API responses or errors during provisioning.",
      "description_length": 591,
      "index": 345,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeUsers",
      "library": "aws-elasticache",
      "description": "This module handles the DescribeUsers operation for ElastiCache, converting input parameters into signed HTTP requests and parsing responses into structured results or errors. It works with ElastiCache user data types, specifically encoding DescribeUsersMessage and decoding DescribeUsersResult. Use this module to retrieve detailed information about ElastiCache user configurations, including user IDs, access rules, and authentication details.",
      "description_length": 445,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.TestFailover",
      "library": "aws-elasticache",
      "description": "This module handles test failover operations for ElastiCache replication groups by defining input/output types and HTTP serialization. It works with ElastiCache-specific types to send test failover requests and parse their responses, including error handling. Concrete use cases include triggering a manual failover for a replication group to validate Multi-AZ configurations or disaster recovery setups.",
      "description_length": 404,
      "index": 347,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of ElastiCache replication groups by providing functions to construct and interpret HTTP requests and responses according to the AWS API. It works with input and output types specific to the deletion operation, including encoded query parameters and parsed XML responses. Concrete use cases include issuing a deletion request for a replication group and handling success or error responses from the AWS service.",
      "description_length": 444,
      "index": 348,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeEvents",
      "library": "aws-elasticache",
      "description": "This module handles describing events for Amazon ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with ElastiCache event data through input and output types that map to the service's query API, including encoded query parameters and XML responses. It is used to retrieve and process event records for monitoring and auditing ElastiCache resources.",
      "description_length": 426,
      "index": 349,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.CreateCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache parameter groups by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with ElastiCache-specific types such as `CreateCacheParameterGroupMessage` for input and `CreateCacheParameterGroupResult` for output, alongside standard AWS error handling structures. Concrete use cases include configuring cache parameter groups with specific settings and handling the resulting API responses or errors during creation.",
      "description_length": 556,
      "index": 350,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheSubnetGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing ElastiCache subnet groups by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the ElastiCache API, including query string encoding and decoding. Use this module to retrieve detailed information about existing cache subnet groups in AWS ElastiCache deployments.",
      "description_length": 361,
      "index": 351,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheClusters",
      "library": "aws-elasticache",
      "description": "This module handles describing cache clusters in AWS ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with input type `DescribeCacheClustersMessage.t`, output type `CacheClusterMessage.t`, and error type `Errors_internal.t`. Concrete use cases include querying cluster details for monitoring, managing cluster configurations, or integrating with deployment systems.",
      "description_length": 444,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyUser",
      "library": "aws-elasticache",
      "description": "This module handles modifying user configurations in Amazon ElastiCache by providing functions to construct and interpret HTTP requests and responses for the `ModifyUser` API call. It works with input data structured as `ModifyUserMessage.t`, produces updated user details of type `User.t`, and handles internal ElastiCache errors. It is used when changing user permissions or authentication details directly through ElastiCache's API.",
      "description_length": 435,
      "index": 353,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DescribeSnapshots",
      "library": "aws-elasticache",
      "description": "This module handles describing snapshots in Amazon ElastiCache by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache snapshot messages as input and outputs lists of snapshot details, handling errors specific to the service. It is used to query existing snapshots for cache clusters, including filtering by cluster ID or snapshot name during management or backup workflows.",
      "description_length": 417,
      "index": 354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyReplicationGroupShardConfiguration",
      "library": "aws-elasticache",
      "description": "This module handles modifying the shard configuration of a replication group in Amazon ElastiCache. It works with input and output types defined in the `Aws_elasticache.Types` module, specifically `ModifyReplicationGroupShardConfigurationMessage` and `ModifyReplicationGroupShardConfigurationResult`. It is used to construct and send HTTP requests to the ElastiCache service, parse responses, and handle errors specific to this operation.",
      "description_length": 438,
      "index": 355,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CopySnapshot",
      "library": "aws-elasticache",
      "description": "This module handles copying Redis snapshots in Amazon ElastiCache by providing functions to construct and process API requests. It works with ElastiCache-specific types for input messages and output results, along with internal error definitions. Use this module to duplicate a snapshot within the same region or across regions, handling the necessary request signing and response decoding.",
      "description_length": 390,
      "index": 356,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of a global replication group in AWS ElastiCache by providing functions to construct and interpret HTTP requests and responses. It works with input and output types specific to the deletion operation, along with error handling tailored to the AWS ElastiCache API. Use this module when managing global replication groups, particularly for sending deletion requests and processing their responses or errors.",
      "description_length": 438,
      "index": 357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles modifying ElastiCache replication groups by providing functions to construct HTTP requests and parse responses for the `ModifyReplicationGroup` API call. It works with input and output types defined in the `Aws_elasticache.Types` module, along with internal error types. It is used to update configuration settings of an existing replication group, such as node type, parameter group, or encryption settings.",
      "description_length": 428,
      "index": 358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeUpdateActions",
      "library": "aws-elasticache",
      "description": "This module handles describing pending or completed update actions in Amazon ElastiCache. It processes input parameters to construct HTTP requests for querying update actions related to cache clusters or replication groups, and decodes responses into structured output or error types. It is used to retrieve details such as the status, type, and target of update actions affecting ElastiCache resources.",
      "description_length": 403,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheSecurityGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of cache security groups in Amazon ElastiCache by defining the input and output types for the operation, along with functions to serialize requests to HTTP and deserialize responses. It works directly with ElastiCache-specific message and result types, as well as AWS error structures. Use this module when programmatically setting up network access controls for cache clusters, particularly when integrating with AWS infrastructure-as-code workflows or automated deployment systems.",
      "description_length": 516,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeServiceUpdates",
      "library": "aws-elasticache",
      "description": "This module handles describing service updates for AWS ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to ElastiCache service updates, including messages and error responses. Concrete use cases include querying available service updates and handling the resulting data or errors from the AWS API.",
      "description_length": 413,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles creating a Redis replication group in AWS ElastiCache by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with ElastiCache's `CreateReplicationGroupMessage` and `CreateReplicationGroupResult` types, encoding requests into query format and decoding responses. Use this module when programmatically setting up Redis clusters with specific configurations like node count, engine version, and subnet groups.",
      "description_length": 525,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteSnapshot",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of ElastiCache snapshots by providing functions to construct and interpret HTTP requests and responses for the `DeleteSnapshot` API. It works with ElastiCache-specific input and output types, including encoded query parameters and XML-parsed errors. Concrete use cases include initiating a snapshot deletion, handling response decoding, and mapping HTTP errors to specific ElastiCache deletion failure conditions.",
      "description_length": 446,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RevokeCacheSecurityGroupIngress",
      "library": "aws-elasticache",
      "description": "This module handles the revocation of ingress rules for ElastiCache security groups by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache security group ingress configurations, using input and output types specific to the AWS ElastiCache API. Concrete use cases include updating security group permissions to remove access from a specific EC2 security group or IP range.",
      "description_length": 415,
      "index": 364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeEngineDefaultParameters",
      "library": "aws-elasticache",
      "description": "This module handles describing the default parameters for an ElastiCache engine by converting input data into HTTP requests and parsing responses. It works with ElastiCache-specific input and output types, such as `DescribeEngineDefaultParametersMessage` and `DescribeEngineDefaultParametersResult`. Concrete use cases include querying default parameter values for Redis or Memcached engines when configuring cache clusters.",
      "description_length": 424,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles the creation of ElastiCache clusters by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works directly with AWS ElastiCache's `CreateCacheClusterMessage` and `CreateCacheClusterResult` types, along with internal error types for handling failures. Concrete use cases include initiating a new cache cluster with specified parameters and processing the resulting HTTP response or error.",
      "description_length": 483,
      "index": 366,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.RebootCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles rebooting an ElastiCache cluster by defining the input and output types for the operation, along with functions to convert between HTTP requests/responses and native OCaml types. It works directly with ElastiCache cluster messages and error responses, ensuring correct encoding and decoding of API calls. Concrete use cases include initiating a cache cluster reboot and handling the resulting API response or error.",
      "description_length": 435,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module handles modifying an existing ElastiCache subnet group by updating its description and associated subnets. It works with `ModifyCacheSubnetGroupMessage` as input and returns a `ModifyCacheSubnetGroupResult` indicating success or failure. Concrete use cases include adjusting subnet configurations for cache clusters or updating metadata for network management.",
      "description_length": 372,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.StartMigration",
      "library": "aws-elasticache",
      "description": "This module handles initiating a migration process in Amazon ElastiCache by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works with ElastiCache-specific types for migration start messages and responses, along with internal error types for handling failure cases. Concrete use cases include encoding migration start requests into properly formatted HTTP queries and decoding ElastiCache's XML-based error responses into structured error values.",
      "description_length": 526,
      "index": 369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateSnapshot",
      "library": "aws-elasticache",
      "description": "This module handles creating snapshots of ElastiCache clusters by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works directly with ElastiCache's CreateSnapshotMessage and CreateSnapshotResult types, encoding them into HTTP requests and decoding HTTP responses into structured results or errors. It is used to initiate snapshot creation and handle the service's responses, including parsing specific error conditions tied to snapshot creation.",
      "description_length": 525,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.CreateGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the creation of a global replication group in Amazon ElastiCache by defining the input and output types specific to the operation, along with functions to serialize requests into HTTP format and deserialize HTTP responses into results or errors. It works directly with ElastiCache's CreateGlobalReplicationGroupMessage and CreateGlobalReplicationGroupResult types, and processes AWS-specific errors into structured responses. It is used when setting up cross-region replication for Redis clusters to ensure low-latency data access and disaster recovery.",
      "description_length": 573,
      "index": 371,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_elasticache.DecreaseNodeGroupsInGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the operation to decrease the number of node groups in a global replication group for ElastiCache. It works with input and output types defined in the ElastiCache types module, along with error handling specific to ElastiCache operations. It is used when modifying the scaling configuration of a global replication group by reducing its node groups.",
      "description_length": 369,
      "index": 372,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.PurchaseReservedCacheNodesOffering",
      "library": "aws-elasticache",
      "description": "This module handles purchasing reserved cache nodes offerings in AWS ElastiCache by converting input data into signed HTTP requests and parsing the responses into results or errors. It works with input and output types defined in the `Aws_elasticache.Types` module, along with internal error types for handling failures. Concrete use cases include making API calls to reserve cache nodes and processing the success or error responses from AWS.",
      "description_length": 443,
      "index": 373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeReplicationGroups",
      "library": "aws-elasticache",
      "description": "This module handles describing replication groups in Amazon ElastiCache by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with `DescribeReplicationGroupsMessage.t` as input and returns `ReplicationGroupMessage.t` as output, while handling internal ElastiCache errors. It is used to retrieve detailed configuration and status information about ElastiCache replication groups via the AWS API.",
      "description_length": 456,
      "index": 374,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ResetCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module handles resetting cache parameter groups in AWS ElastiCache by converting input data into signed HTTP requests and parsing responses into structured outputs or errors. It works directly with ElastiCache parameter group messages and internal error types, encoding requests using query parameters and decoding XML error responses. Use this module to reset specific cache parameter group settings programmatically, such as when reconfiguring cache clusters.",
      "description_length": 466,
      "index": 375,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.FailoverGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the failover operation for global replication groups in Amazon ElastiCache. It provides functions to construct HTTP requests from input data and parse responses or errors from the service, specifically working with ElastiCache's internal error types and replication group message structures. It is used to trigger and manage cross-region failover events programmatically.",
      "description_length": 391,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyCacheParameterGroup",
      "library": "aws-elasticache",
      "description": "This module modifies cache parameter groups in Amazon ElastiCache by sending HTTP requests to update specific parameters. It handles input encoding into query format and decodes HTTP responses into output or error types, specifically working with cache parameter group names and ElastiCache API errors. It is used to programmatically adjust configuration settings for ElastiCache clusters, such as adjusting timeouts or memory limits.",
      "description_length": 434,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.ModifyGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles modifying a global replication group in AWS ElastiCache by converting input data into an HTTP request and parsing the response or errors. It works with ElastiCache-specific types for modification messages and results, along with standard AWS error responses. Use this module to programmatically update settings of a global replication group, such as node types or engine versions, via the AWS API.",
      "description_length": 417,
      "index": 378,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheSubnetGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a cache subnet group by sending an HTTP request with the specified group name. It processes the response, returning a unit on success or parsing and returning specific AWS errors on failure. It works with cache subnet group names as input and interacts with AWS Elasticache's API to manage subnet configurations.",
      "description_length": 332,
      "index": 379,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Errors_internal",
      "library": "aws-elasticache",
      "description": "This module defines a comprehensive set of error types specific to ElastiCache API operations, including errors related to resource state, configuration, permissions, and quotas. It provides functions to convert error values to HTTP status codes, strings, and back, enabling precise error handling and reporting. Use cases include validating API responses, implementing retry logic based on specific error conditions, and mapping service errors to application-level handling.",
      "description_length": 475,
      "index": 380,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.Types",
      "library": "aws-elasticache",
      "description": "This module provides core types and operations for managing AWS ElastiCache resources, including cache clusters, replication groups, and their associated network and security settings. It defines key data structures such as endpoints, node groups, cache parameters, subnet groups, and status enums, along with error models for handling faults during scaling, failover, and migration. These types enable operations like modifying cluster configurations, managing security group memberships, and tracking update statuses across distributed nodes. Child modules extend this functionality with specialized data structures and operations. For example, modules handle cache security group quotas, replication group lists, cache cluster creation, node group members, and service update statuses. Each child module provides functions to construct, parse, and serialize its data type to and from JSON, XML, or AWS query formats, enabling seamless integration with API requests and responses. Specific use cases include querying reserved cache nodes, managing subnet groups, handling error conditions like quota overflows, and serializing lists of replication groups or snapshots. Together, the parent module and its children form a comprehensive toolkit for interacting with ElastiCache services programmatically.",
      "description_length": 1304,
      "index": 381,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.AddTagsToResource",
      "library": "aws-elasticache",
      "description": "This module adds tags to an ElastiCache resource by sending an HTTP request with the specified tags. It works with ElastiCache's `AddTagsToResourceMessage` as input and returns a `TagListMessage` on success. It handles request signing, HTTP conversion, and error parsing specific to the ElastiCache tagging operation.",
      "description_length": 317,
      "index": 382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.AuthorizeCacheSecurityGroupIngress",
      "library": "aws-elasticache",
      "description": "This module handles the authorization of ingress rules for cache security groups in AWS ElastiCache. It works with input and output types defined in the `Aws_elasticache.Types` module, along with internal error types for handling failures. Use this module to allow network access to a cache cluster by modifying a cache security group's inbound rules.",
      "description_length": 351,
      "index": 383,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ModifyUserGroup",
      "library": "aws-elasticache",
      "description": "This module modifies an existing ElastiCache user group by updating its properties such as user IDs and engine. It operates on input and output types defined in the `Aws_elasticache.Types` module, specifically `ModifyUserGroupMessage.t` for input and `UserGroup.t` for output. Use this module when adjusting user group configurations in ElastiCache, such as adding or removing users from a group.",
      "description_length": 396,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeReservedCacheNodes",
      "library": "aws-elasticache",
      "description": "This module handles describing reserved cache nodes in AWS ElastiCache by converting input parameters into HTTP requests and parsing responses. It works with ElastiCache-specific types for input, output, and errors, such as `DescribeReservedCacheNodesMessage` and `ReservedCacheNodeMessage`. It is used to query details about reserved cache nodes, including filtering by properties like node type or duration.",
      "description_length": 409,
      "index": 385,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheCluster",
      "library": "aws-elasticache",
      "description": "This module handles the deletion of an ElastiCache cluster by defining the input and output types for the operation, along with functions to serialize requests and deserialize responses. It works directly with ElastiCache cluster identifiers and HTTP request/response types for AWS API communication. Concrete use cases include issuing a delete request for a specific cache cluster and handling the resulting success or error responses from the AWS service.",
      "description_length": 457,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheEngineVersions",
      "library": "aws-elasticache",
      "description": "This module handles describing available cache engine versions for ElastiCache by converting input parameters into signed HTTP requests and parsing responses into structured data. It works with input messages, output version lists, and error responses specific to the ElastiCache API. It is used to query details like supported Redis or Memcached versions, including their features and compatibility.",
      "description_length": 400,
      "index": 387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.IncreaseReplicaCount",
      "library": "aws-elasticache",
      "description": "This module handles increasing the number of read replicas in an ElastiCache replication group. It works with ElastiCache replication configurations, specifically modifying replica counts for Redis clusters. Use this module to programmatically scale read capacity in response to traffic demands by adjusting the number of replicas in a replication group.",
      "description_length": 354,
      "index": 388,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.ListTagsForResource",
      "library": "aws-elasticache",
      "description": "This module handles listing tags for an ElastiCache resource by converting input data into a properly signed HTTP request and parsing the response into structured output or error types. It works with ElastiCache's `ListTagsForResourceMessage` as input and `TagListMessage` as output, along with internal error types for failure handling. It is used when retrieving tags from an ElastiCache cluster or snapshot to support resource management and cost tracking workflows.",
      "description_length": 469,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DisassociateGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles the disassociation of a global replication group in Amazon ElastiCache. It works with ElastiCache-specific input and output types, including `DisassociateGlobalReplicationGroupMessage` and `DisassociateGlobalReplicationGroupResult`. It is used to construct and send HTTP requests to the ElastiCache service, parse responses, and handle errors specific to this operation.",
      "description_length": 390,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DeleteCacheSecurityGroup",
      "library": "aws-elasticache",
      "description": "This module deletes a cache security group by sending a properly signed HTTP request to the Elasticache service. It handles the conversion of input parameters to an HTTP request and decodes responses or errors from the server. It works directly with `DeleteCacheSecurityGroupMessage.t` as input and returns no output on success, using internal Elasticache error types for failure cases.",
      "description_length": 386,
      "index": 391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DecreaseReplicaCount",
      "library": "aws-elasticache",
      "description": "This module handles decreasing the number of replicas in an ElastiCache replication group. It works with ElastiCache replication configurations, specifically modifying replica counts either by removing specific replicas or reducing the count by a given number. Use this module when adjusting replication group scaling, such as during resource optimization or cost management workflows.",
      "description_length": 385,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_elasticache.DescribeCacheParameters",
      "library": "aws-elasticache",
      "description": "This module handles describing cache parameters for an ElastiCache parameter group by converting input queries into HTTP requests and parsing responses into structured data. It works with `DescribeCacheParametersMessage` as input and returns `CacheParameterGroupDetails`, while handling specific AWS errors. It is used to retrieve and analyze configuration settings for ElastiCache clusters, such as memory limits or eviction policies.",
      "description_length": 435,
      "index": 393,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache.IncreaseNodeGroupsInGlobalReplicationGroup",
      "library": "aws-elasticache",
      "description": "This module handles increasing the number of node groups in a Global Replication Group on AWS ElastiCache. It works with ElastiCache-specific input and output types, including `IncreaseNodeGroupsInGlobalReplicationGroupMessage` and `IncreaseNodeGroupsInGlobalReplicationGroupResult`. Use this module to modify the topology of a global replication group by adding node groups, typically during scaling operations or cluster reconfiguration.",
      "description_length": 439,
      "index": 394,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_elasticache",
      "library": "aws-elasticache",
      "description": "This module provides low-level access to AWS ElastiCache APIs, enabling direct interaction with the service through precise serialization and deserialization of HTTP requests and responses. It supports a wide range of operations including managing cache clusters, replication groups, parameter groups, subnet groups, and user configurations, with specific data types such as `DescribeCacheClustersMessage`, `CreateReplicationGroupMessage`, `ModifyUserMessage`, and `DeleteSnapshotMessage`. Developers can use this module to describe, create, modify, and delete ElastiCache resources, handle migration and failover workflows, manage tags and security rules, and query system events or service updates programmatically.",
      "description_length": 717,
      "index": 395,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 396,
    "meaningful_modules": 396,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 1304,
    "min_description_length": 270,
    "avg_description_length": 389.26262626262627,
    "embedding_file_size_mb": 1.4389104843139648
  }
}