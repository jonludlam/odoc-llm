{
  "package": "memo",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:03:57.821073",
  "modules": [
    {
      "module_path": "Memo",
      "library": "memo",
      "description": "This module implements memoization for functions with a single argument, using a customizable cache. It supports operations to create, find, and add entries to the cache, enabling efficient reuse of computed results. Concrete use cases include optimizing recursive functions like Fibonacci or dynamic programming algorithms where repeated calculations are expensive.",
      "description_length": 366,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 366,
    "min_description_length": 366,
    "avg_description_length": 366.0,
    "embedding_file_size_mb": 0.004073143005371094
  }
}