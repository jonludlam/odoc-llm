{
  "package": "async_rpc_websocket",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:14.711745",
  "modules": [
    {
      "module_path": "Rpc_websocket.Rpc.Connection_source",
      "library": "async_rpc_websocket",
      "description": "Converts a connection source value to an S-expression using a provided function to serialize its contents. Works with `Rpc_websocket.Rpc.Connection_source.t`, a type representing sources of RPC connections. Useful for logging or debugging connection state by converting it into a structured, readable format.",
      "description_length": 308,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpc_websocket.Rpc.Connection_initiated_from",
      "library": "async_rpc_websocket",
      "description": "This module defines a type `t` that represents the origin of a connection, either via a WebSocket request or a TCP connection. It includes a function `sexp_of_t` to convert values of type `t` into S-expressions for serialization or debugging. This is useful when tracking how a server connection was established, particularly in logging or monitoring scenarios.",
      "description_length": 361,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpc_websocket.Rpc.Transport",
      "library": "async_rpc_websocket",
      "description": "This module provides low-level transport handling for RPC over WebSockets, including functions to create custom connection handlers and start WebSocket servers. It works directly with `Rpc.Connection.t`, `Async_rpc_kernel.Transport.t`, and `Cohttp.Request.t` to manage transport-level interactions. Concrete use cases include implementing custom authentication or routing logic during WebSocket handshake, or integrating with existing network infrastructure for RPC communication.",
      "description_length": 480,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpc_websocket.Rpc",
      "library": "async_rpc_websocket",
      "description": "This module enables WebSocket-based RPC communication by handling HTTP upgrades, managing connection states, and integrating with TCP servers using Cohttp and Async RPC types. It supports custom connection state handlers, WebSocket transport configurations, and direct interaction with TCP and HTTP request/response structures for building real-time communication servers or clients. The module includes utilities for serializing connection sources and origins into S-expressions, aiding in logging and debugging connection establishment details. Submodules provide transport-level control for implementing custom authentication, routing during WebSocket handshakes, and integration with existing network infrastructure using `Rpc.Connection.t` and `Transport.t` types.",
      "description_length": 769,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rpc_websocket",
      "library": "async_rpc_websocket",
      "description": "This module enables WebSocket-based RPC communication by handling HTTP upgrades, managing connection states, and integrating with TCP servers using Cohttp and Async RPC types. It supports custom connection state handlers, WebSocket transport configurations, and direct interaction with TCP and HTTP request/response structures for building real-time communication servers or clients. The module includes utilities for serializing connection sources and origins into S-expressions, aiding in logging and debugging connection establishment details. Submodules provide transport-level control for implementing custom authentication, routing during WebSocket handshakes, and integration with existing network infrastructure using `Rpc.Connection.t` and `Transport.t` types.",
      "description_length": 769,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 769,
    "min_description_length": 308,
    "avg_description_length": 537.4,
    "embedding_file_size_mb": 0.01499176025390625
  }
}