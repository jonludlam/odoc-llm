{
  "package": "sortedseq_intersect",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:54:34.137913",
  "modules": [
    {
      "module_path": "Sortedseq_intersect.Sorted_seq_intersect",
      "library": "sortedseq_intersect",
      "description": "This module implements efficient algorithms for computing intersections of sorted sequences using three distinct strategies: linear merge, binary search-based, and adaptive methods. It operates on sorted sequences represented by abstract types `'t` with elements of type `'a`, supporting range-restricted operations through index parameters. These functions are particularly useful for high-performance data processing tasks such as information retrieval, database query optimization, and set operations where input sizes vary significantly.",
      "description_length": 541,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sortedseq_intersect",
      "library": "sortedseq_intersect",
      "description": "This module computes intersections of sorted sequences using linear merge, binary search, and adaptive strategies. It operates on abstract sorted sequence types with indexed range operations, enabling efficient set processing for large or variable-sized inputs. Concrete use cases include optimizing database joins, merging search result rankings, and performing fast set intersections in information retrieval systems.",
      "description_length": 419,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 541,
    "min_description_length": 419,
    "avg_description_length": 480.0,
    "embedding_file_size_mb": 0.029436111450195312
  }
}