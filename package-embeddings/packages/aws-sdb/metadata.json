{
  "package": "aws-sdb",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 57,
  "creation_timestamp": "2025-07-15T23:14:44.843137",
  "modules": [
    {
      "module_path": "Aws_sdb.Types.ItemList",
      "library": "aws-sdb",
      "description": "This module handles lists of items in Amazon SimpleDB, providing functions to convert item lists to and from XML, JSON, and query formats. It supports operations for parsing XML nodes into item lists, serializing item lists to JSON or query parameters, and extracting item lists from JSON values. Concrete use cases include processing batch item responses from SimpleDB and preparing item data for storage or retrieval requests.",
      "description_length": 428,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberSubmittedAttributesExceeded",
      "library": "aws-sdb",
      "description": "This module handles error responses when the number of submitted attributes exceeds AWS SimpleDB limits. It provides functions to construct, parse, and serialize error data containing an optional `box_usage` float value. Use this module to process and respond to AWS SDB attribute submission errors in API requests.",
      "description_length": 315,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ListDomainsResult",
      "library": "aws-sdb",
      "description": "This module handles the result of listing domains in Amazon SimpleDB, providing functions to create, parse, and convert domain name lists with optional pagination tokens. It works with domain names as a list structure and supports XML, JSON, and query parameter serialization formats. Concrete use cases include processing responses from domain listing operations and preparing them for further API interactions or client consumption.",
      "description_length": 434,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.NumberSubmittedItemsExceeded",
      "library": "aws-sdb",
      "description": "This module handles the AWS SimpleDB error response when the number of submitted items exceeds the service limit. It provides functions to construct, parse, and serialize the error data, which includes an optional `box_usage` float indicating AWS resource consumption. Use this module to manage and interpret item submission limits in AWS SDB operations.",
      "description_length": 354,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.InvalidNextToken",
      "library": "aws-sdb",
      "description": "This module defines a type `t` with an optional `box_usage` float field and provides functions to create, parse, and convert instances to and from query parameters, JSON, and XML. It handles error responses related to invalid pagination tokens in AWS SimpleDB operations. Use cases include processing API errors and constructing error responses for invalid next tokens in paginated requests.",
      "description_length": 391,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.AttributeDoesNotExist",
      "library": "aws-sdb",
      "description": "This module defines a type `t` representing an error response when an attribute does not exist in Amazon SimpleDB, containing an optional `box_usage` field for tracking request throughput. It provides functions to construct, parse, and convert the type to and from XML, JSON, and query formats. This module is used to handle and propagate specific error information during interactions with SimpleDB when querying or manipulating attributes that are not present.",
      "description_length": 462,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.NumberDomainsExceeded",
      "library": "aws-sdb",
      "description": "This module defines a type `t` representing an error response indicating that the number of domains has exceeded a limit, containing an optional `box_usage` field for usage metrics. It provides functions to construct, parse, and serialize this error type to and from XML, JSON, and query parameters. Concrete use cases include handling and transmitting domain limit exceeded errors in AWS SimpleDB operations.",
      "description_length": 409,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.DeletableItemList",
      "library": "aws-sdb",
      "description": "This module represents a list of deletable items in Amazon SimpleDB, primarily used to manage batch delete operations. It provides functions to convert item lists to query parameters or JSON, and to parse them from XML responses. Typical use cases include preparing item deletions for API requests and processing deletion results from SDB responses.",
      "description_length": 349,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.BatchPutAttributesRequest",
      "library": "aws-sdb",
      "description": "This module defines a data structure for batch putting attributes into a domain, with operations to create, parse, and serialize requests. It works with domain names and lists of replaceable items, handling XML, JSON, and query string formats. Concrete use cases include preparing bulk attribute updates for Amazon SimpleDB domains and converting between wire formats and internal representations.",
      "description_length": 397,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.RequestTimeout",
      "library": "aws-sdb",
      "description": "This module defines a type `t` representing a request timeout response from Amazon SimpleDB, containing an optional `box_usage` field for server-side processing time. It provides functions to construct, parse, and serialize timeout data to query parameters, JSON, and XML. Use this module when handling timeout responses in SimpleDB operations like query or get requests.",
      "description_length": 371,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.TooManyRequestedAttributes",
      "library": "aws-sdb",
      "description": "This module defines a type and associated functions for handling the `TooManyRequestedAttributes` error response from Amazon SimpleDB. It includes operations to construct, parse, and serialize the error, which contains an optional `box_usage` float indicating resource consumption. Use this module when processing errors related to exceeding the maximum number of attributes requested in a single operation.",
      "description_length": 407,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.BatchDeleteAttributesRequest",
      "library": "aws-sdb",
      "description": "This module defines a type and conversion functions for a batch delete attributes request in a domain. It works with domain names and lists of deletable items, enabling structured data removal. Use it to construct, parse, and serialize batch deletion requests for storage or API transmission.",
      "description_length": 292,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.InvalidParameterValue",
      "library": "aws-sdb",
      "description": "This module defines a type `t` with an optional `box_usage` float field and provides functions to construct, parse, and convert the type to and from XML, JSON, and query formats. It handles error responses related to invalid parameter values in AWS SimpleDB operations. Concrete use cases include processing API errors, serializing error data for logging, and generating structured responses for client requests.",
      "description_length": 412,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.InvalidQueryExpression",
      "library": "aws-sdb",
      "description": "This module defines a type `t` representing an invalid query expression error response from Amazon SimpleDB, containing an optional `box_usage` field for metering data. It provides functions to construct, parse, and convert the type to and from query parameters, JSON, and XML formats. Use this module when handling or responding to invalid query expression errors in AWS SDB operations, particularly for error logging, debugging, or client-side validation feedback.",
      "description_length": 466,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableAttribute",
      "library": "aws-sdb",
      "description": "This module defines a data structure for representing attributes in Amazon SimpleDB that can be replaced. It includes operations to construct, serialize, and parse these attributes, specifically handling their name, value, and replacement flag. Use this module when managing item attributes in SimpleDB, especially when specifying whether an existing attribute should be overwritten.",
      "description_length": 383,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.CreateDomainRequest",
      "library": "aws-sdb",
      "description": "This module defines a single type `t` representing a request to create a domain in Amazon SimpleDB, containing a `domain_name` field. It provides functions to construct, parse, and serialize this request type to and from XML, JSON, and query string formats. It is used when interacting with the SimpleDB API to send domain creation requests and handle corresponding data transformations.",
      "description_length": 387,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.NumberDomainBytesExceeded",
      "library": "aws-sdb",
      "description": "This module defines a type and associated functions for handling the `NumberDomainBytesExceeded` error in AWS SimpleDB operations. It includes serialization and deserialization functions for converting between XML, JSON, and internal OCaml representations. The primary use case is to manage error responses when domain byte limits are exceeded during data operations in AWS SDB.",
      "description_length": 378,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableItem",
      "library": "aws-sdb",
      "description": "This module defines a data structure for representing items that can be replaced in a database, consisting of a name and a list of replaceable attributes. It provides functions to construct, parse, and convert these items to query parameters or JSON format. It is used when updating or synchronizing records in a database where each item's attributes need to be explicitly replaced.",
      "description_length": 382,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DomainMetadataResult",
      "library": "aws-sdb",
      "description": "This module defines a data structure representing the result of a domain metadata query in Amazon SimpleDB. It includes fields for item counts, size metrics, and timestamps, all with optional values. Operations include creating instances with optional parameters, parsing XML responses, converting to query or JSON formats, and constructing from JSON input. Use cases involve retrieving and processing domain metadata statistics in AWS integrations.",
      "description_length": 449,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DomainNameList",
      "library": "aws-sdb",
      "description": "Handles lists of domain names for Amazon SimpleDB operations. Provides functions to convert domain name lists to and from XML, JSON, and query parameters. Used when managing domain name collections in AWS SimpleDB API interactions.",
      "description_length": 231,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DeletableItem",
      "library": "aws-sdb",
      "description": "This module defines a deletable item structure with a name and optional attribute list, providing operations to create, parse, and serialize items to query parameters or JSON. It supports interactions with Amazon SimpleDB by handling data representation for deletion operations. Use cases include constructing items for batch deletion and parsing responses from SDB delete requests.",
      "description_length": 382,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DeleteDomainRequest",
      "library": "aws-sdb",
      "description": "This module defines a single type `t` representing a request to delete a domain, containing a `domain_name` field. It provides functions to construct, parse, and convert the request to various formats including JSON and query parameters. It is used when interacting with AWS SimpleDB to delete a domain by name.",
      "description_length": 311,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.UpdateCondition",
      "library": "aws-sdb",
      "description": "This module defines a data structure for representing update conditions in a database operation, specifically for handling conditional updates based on the existence and value of a field. It includes functions to construct, parse, and serialize these conditions to JSON or query parameters. Use cases include enforcing optimistic concurrency control or conditional data modifications in a distributed database system.",
      "description_length": 417,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.GetAttributesRequest",
      "library": "aws-sdb",
      "description": "This module defines the structure and operations for constructing and serializing requests to retrieve item attributes from a domain. It works with string and boolean types, along with a list of attribute names, to form requests that can be sent to the service. It is used to build, parse, and convert attribute retrieval requests into query or JSON formats for API interaction.",
      "description_length": 378,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.DomainMetadataRequest",
      "library": "aws-sdb",
      "description": "This module defines a request structure for retrieving domain metadata, containing a single domain name field. It provides functions to construct, parse, and convert the request to query or JSON formats, specifically for interacting with domain metadata in a database service. Use this to prepare and handle domain metadata queries in API requests.",
      "description_length": 348,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.PutAttributesRequest",
      "library": "aws-sdb",
      "description": "This module defines a request structure for updating item attributes in a domain, including fields for the domain name, item name, attributes to set, and an optional condition. It provides functions to construct, parse, and serialize these requests in various formats, including JSON and query parameters. It is used when interacting with Amazon SimpleDB to update or replace item attributes under specific conditions.",
      "description_length": 418,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberItemAttributesExceeded",
      "library": "aws-sdb",
      "description": "This module handles the `NumberItemAttributesExceeded` error type from AWS SimpleDB, primarily used for parsing and serializing error responses related to item attribute limits. It works with a record type containing an optional float for `box_usage`, representing AWS service metadata. Concrete use cases include decoding XML or JSON error responses from AWS SDB and constructing error objects for testing or logging.",
      "description_length": 418,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.MissingParameter",
      "library": "aws-sdb",
      "description": "This module defines a type `t` with an optional `box_usage` float field and provides functions to create, parse, and convert instances to and from query parameters, JSON, and XML. It works with AWS SDB missing parameter responses, handling data types like floats in the context of AWS API interactions. Use cases include processing error responses from Amazon SimpleDB operations that indicate missing parameters, particularly when calculating usage metrics like box usage.",
      "description_length": 473,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.InvalidNumberPredicates",
      "library": "aws-sdb",
      "description": "This module defines a data structure representing an error response related to invalid number predicates in a database query. It includes operations to create, parse, and serialize the structure to and from XML, JSON, and query parameters. Concrete use cases include handling and transmitting error details when numeric conditions in a query are malformed.",
      "description_length": 356,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.AttributeNameList",
      "library": "aws-sdb",
      "description": "Handles lists of attribute names in Amazon SimpleDB operations. Provides functions to convert between XML, JSON, and query string representations of these lists. Useful when working with domain attributes in SimpleDB, such as listing or selecting specific attributes for query results.",
      "description_length": 285,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.Attribute",
      "library": "aws-sdb",
      "description": "This module defines a data structure for representing attributes in Amazon SimpleDB, including their name, value, and optional alternate encodings. It provides functions to construct, parse, and convert attributes to and from XML, JSON, and query formats. Concrete use cases include handling domain attribute data during item operations and encoding/decoding attribute values for API requests and responses.",
      "description_length": 407,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.Item",
      "library": "aws-sdb",
      "description": "This module defines a data structure for representing items in a database, including their name, optional alternate encoding, and associated attributes. It provides functions to construct items, parse them from XML, convert them to query parameters or JSON, and construct them from JSON. This module is used to manage item data when interacting with a database service, such as serializing and deserializing items for API requests and responses.",
      "description_length": 445,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableItemList",
      "library": "aws-sdb",
      "description": "This module handles lists of replaceable items for AWS SimpleDB operations. It provides functions to convert item lists to and from XML, JSON, and query formats, enabling direct interaction with AWS SDB APIs. Use this module when constructing or processing batches of item updates in SimpleDB domains.",
      "description_length": 301,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.AttributeList",
      "library": "aws-sdb",
      "description": "This module handles lists of AWS SimpleDB attributes, providing direct conversions to and from XML, JSON, and query formats. It supports parsing attribute lists from XML nodes and serializing them for requests or JSON responses. Use this module when working with batch attribute operations in SimpleDB, such as domain queries or item updates.",
      "description_length": 342,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ListDomainsRequest",
      "library": "aws-sdb",
      "description": "This module defines a data structure for specifying parameters when listing domains in a SimpleDB service. It includes fields for limiting the number of domains returned and for pagination via a next token. Operations allow creating, parsing, converting to query format, and serializing to and from JSON the request parameters.",
      "description_length": 327,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.GetAttributesResult",
      "library": "aws-sdb",
      "description": "This module handles the result of retrieving attributes from a SimpleDB item. It provides functions to create, parse, and convert attribute results to query or JSON formats. It works with attribute lists, which represent key-value pairs stored in SimpleDB.",
      "description_length": 256,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.SelectResult",
      "library": "aws-sdb",
      "description": "This module represents the result of a Select operation in Amazon SimpleDB, containing a list of items and an optional token for pagination. It provides functions to construct, parse, and convert results to and from XML, JSON, and query formats. Use this module when handling responses from database queries that require processing returned records and managing pagination tokens.",
      "description_length": 380,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DuplicateItemName",
      "library": "aws-sdb",
      "description": "This module defines a type `t` with an optional `box_usage` float field and provides functions to create, parse, and convert the type to and from query parameters, JSON, and XML. It is used to handle duplicate item names in Amazon SimpleDB operations, specifically for managing metadata related to request pricing and usage. The module supports direct integration with AWS query and JSON formats for API communication.",
      "description_length": 418,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.SelectRequest",
      "library": "aws-sdb",
      "description": "This module defines a data structure for constructing and handling Select requests in a database query system. It includes operations to create, parse, and convert query requests to different formats like JSON and query parameters. The module works with string and boolean types, and supports pagination and consistency settings in queries.",
      "description_length": 340,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.InvalidNumberValueTests",
      "library": "aws-sdb",
      "description": "This module defines a data structure with an optional floating-point field `box_usage` and provides functions to create, parse, and convert the structure to and from XML, JSON, and query formats. It works with custom types like `Aws.BaseTypes.Float.t`, `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. It is used to handle invalid number value test cases in AWS SimpleDB by serializing and deserializing related data across different formats.",
      "description_length": 442,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberDomainAttributesExceeded",
      "library": "aws-sdb",
      "description": "This module handles error responses related to exceeding domain attribute limits in a database service. It provides functions to construct, parse, and serialize error data using XML, JSON, and query formats. The primary data type is a record containing an optional float representing resource usage metrics.",
      "description_length": 307,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableAttributeList",
      "library": "aws-sdb",
      "description": "This module handles lists of replaceable attributes in AWS SimpleDB operations. It provides functions to convert attribute lists to and from XML, JSON, and query formats, enabling seamless data interchange during domain item updates. Use cases include serializing attribute changes for API requests or parsing responses containing item attributes.",
      "description_length": 347,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DeleteAttributesRequest",
      "library": "aws-sdb",
      "description": "This module defines a request structure for deleting attributes from an item in a domain. It includes operations to create, parse, and serialize the request as JSON or query parameters. It works with domain names, item names, attribute lists, and update conditions, used when specifying which attributes to delete and under what conditions.",
      "description_length": 340,
      "index": 42,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.NoSuchDomain",
      "library": "aws-sdb",
      "description": "This module defines a type `t` representing an error response for a non-existent domain in Amazon SimpleDB, containing an optional `box_usage` field for tracking request throughput. It provides functions to construct, parse, and convert the error type to and from XML, JSON, and query formats. This module is used when handling API errors related to domain operations in AWS SDB, specifically to identify and process \"NoSuchDomain\" exceptions.",
      "description_length": 443,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Errors_internal",
      "library": "aws-sdb",
      "description": "This module defines a comprehensive set of error types specific to Amazon SimpleDB operations, including validation, authentication, and service-level errors. It provides functions to convert errors to HTTP status codes, strings, and back from strings, enabling precise error handling and reporting. Concrete use cases include mapping API response errors to structured types and generating appropriate error messages or responses based on the error type.",
      "description_length": 454,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.ListDomains",
      "library": "aws-sdb",
      "description": "This module handles listing domains in Amazon SimpleDB by converting requests to HTTP format and parsing responses. It works with ListDomainsRequest and ListDomainsResult types, along with internal error types for handling failures. It is used to interact directly with the AWS SDB service, enabling domain enumeration and error handling specific to that operation.",
      "description_length": 365,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.CreateDomain",
      "library": "aws-sdb",
      "description": "This module handles the creation of a domain in Amazon SimpleDB by defining the input and output types for the operation, along with functions to serialize requests into HTTP format and deserialize responses. It works directly with the `CreateDomainRequest` type for inputs and produces no output on success, using a specialized error type for failure cases. Concrete use cases include initiating domain creation requests and processing their responses, including error handling specific to domain creation.",
      "description_length": 507,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.DomainMetadata",
      "library": "aws-sdb",
      "description": "This module handles metadata operations for a domain in a database service, providing functions to send and parse HTTP requests and responses. It works with domain metadata requests and results, along with internal error types. Concrete use cases include retrieving domain metadata, handling request signing, and converting between native types and HTTP representations.",
      "description_length": 370,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.DeleteAttributes",
      "library": "aws-sdb",
      "description": "This module handles the deletion of attributes in Amazon SimpleDB by providing functions to construct and interpret HTTP requests and responses for the `DeleteAttributes` operation. It works with the `DeleteAttributesRequest` type as input and returns no output on success, using internal error types to handle failures. Concrete use cases include removing specific item attributes from a domain or handling errors when attribute deletion fails due to constraints like conditional checks.",
      "description_length": 488,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.GetAttributes",
      "library": "aws-sdb",
      "description": "This module handles retrieving attributes from a domain, working with `GetAttributesRequest` and `GetAttributesResult` types. It translates requests to HTTP and parses responses, handling errors specific to attribute retrieval. Use it to fetch item attributes from an AWS domain, ensuring correct encoding and error decoding.",
      "description_length": 325,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.BatchDeleteAttributes",
      "library": "aws-sdb",
      "description": "This module handles the deletion of multiple attributes for items in a domain, working with `BatchDeleteAttributesRequest` to send requests and process responses. It encodes input data into HTTP queries and decodes HTTP responses, managing errors specific to batch attribute deletion. Use it to efficiently remove multiple item attributes in a single call, particularly when dealing with large-scale data cleanup in a domain.",
      "description_length": 425,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.PutAttributes",
      "library": "aws-sdb",
      "description": "This module handles sending requests to update attributes of an item in an Amazon SimpleDB domain. It encodes input data into a properly formatted HTTP request with the correct query parameters and decodes responses, handling both successful outcomes and error states. The primary data types are the `PutAttributesRequest.t` for input and internal error types for failure cases.",
      "description_length": 378,
      "index": 51,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_sdb.BatchPutAttributes",
      "library": "aws-sdb",
      "description": "This module handles batch updates of attributes for items in Amazon SimpleDB. It accepts a list of item attribute updates and sends them in a single HTTP request, encoding the input into a query string format suitable for the AWS API. The module processes the response, converting it into a unit result or an error based on the server's reply.",
      "description_length": 343,
      "index": 52,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types",
      "library": "aws-sdb",
      "description": "This module provides structured data manipulation for Amazon SimpleDB, centered around items, attributes, and domains, with operations supporting batch updates, conditional writes, domain lifecycle management, and error handling for constraint violations. It includes core types like `Item`, `Attribute`, and `ReplaceableAttribute`, and supports operations such as bulk deletions, domain metadata queries, and conditional updates, with integrated serialization to XML, JSON, and query formats. Submodules handle specific use cases like error responses for attribute or item limits, domain existence checks, and batch operations, enabling precise control over data ingestion, query handling, and domain management. Examples include constructing domain creation or deletion requests, parsing paginated domain listings, handling attribute replacement with conditions, and managing error responses for invalid queries or exceeded service limits.",
      "description_length": 941,
      "index": 53,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_sdb.Select",
      "library": "aws-sdb",
      "description": "This module handles the execution of Amazon SimpleDB `Select` operations by converting input requests into properly signed HTTP queries and parsing the responses. It works with `SelectRequest.t` for input, `SelectResult.t` for output, and `Errors_internal.t` for errors, ensuring correct encoding and decoding of data. Use this module to query structured data stored in SimpleDB domains, such as retrieving item attributes based on SQL-like select expressions.",
      "description_length": 460,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.DeleteDomain",
      "library": "aws-sdb",
      "description": "This module handles the deletion of a domain in Amazon SimpleDB. It provides functions to construct HTTP requests for deleting domains and parse responses, working with the `DeleteDomainRequest` type as input and returning no output on success. It is used when managing domain lifecycle operations in AWS SDB, specifically for removing existing domains.",
      "description_length": 353,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb",
      "library": "aws-sdb",
      "description": "This module provides structured data management for Amazon SimpleDB, enabling domain lifecycle operations, attribute manipulation, and query execution. It centers around core types like `Item`, `Attribute`, and request types for operations such as `PutAttributes`, `DeleteAttributes`, `GetAttributes`, and `Select`, with integrated serialization and error handling. You can create, delete, and query domains; retrieve and update item attributes with conditions; perform batch operations; and handle service-specific errors including validation and constraint violations. Examples include sending a batch of attribute updates in a single HTTP request, fetching item metadata, or deleting a domain after confirming its existence.",
      "description_length": 727,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 57,
    "meaningful_modules": 57,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 941,
    "min_description_length": 231,
    "avg_description_length": 398.49122807017545,
    "embedding_file_size_mb": 0.20752620697021484
  }
}