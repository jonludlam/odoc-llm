{
  "package": "aws-sdb",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 58,
  "creation_timestamp": "2025-06-18T16:42:51.777759",
  "modules": [
    {
      "module_path": "Aws_sdb.Types.ReplaceableAttribute",
      "description": "Provides operations to create, parse, and serialize attribute data with a name, value, and replace flag. Works with structured data containing string-based attributes and JSON representations. Used to construct and process AWS attribute configurations in query and JSON formats.",
      "description_length": 278,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.Attribute",
      "description": "Creates and manipulates attributes with a name, value, and optional alternate encodings. Processes XML nodes to construct attributes and converts between attribute representations and query or JSON formats. Used to handle AWS attribute data in structured and serialized forms.",
      "description_length": 276,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableAttributeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of replaceable attributes. Operates on lists of `ReplaceableAttribute.t` and XML nodes, converting them to AWS query parameters, JSON structures, and back. Used to handle dynamic attribute data in AWS API requests and responses.",
      "description_length": 298,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.AttributeList",
      "description": "Provides functions to create an empty attribute list, parse XML nodes into a list of attributes, convert attribute lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of attribute records and AWS-specific data types. Used to process and format XML-based configuration data for API requests and data exchange.",
      "description_length": 357,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableItem",
      "description": "Creates and manipulates items with a name and a list of replaceable attributes. Processes XML nodes into structured data, converts to query parameters, and serializes/deserializes to JSON. Used for handling AWS resource configurations that require dynamic attribute replacement.",
      "description_length": 278,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DeletableItem",
      "description": "Provides operations to create, parse, serialize, and deserialize items with a name and optional attributes. Works with AWS string types, XML nodes, query parameters, and JSON structures. Used to handle AWS resource representations in request and response parsing workflows.",
      "description_length": 273,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.Item",
      "description": "Provides operations to construct, parse, serialize, and deserialize items with names, alternate name encodings, and attribute lists. Works with structured data including strings, attribute lists, and JSON or query format representations. Used to convert XML node structures into item objects and generate query parameters for API interactions.",
      "description_length": 343,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.UpdateCondition",
      "description": "Provides methods to construct, parse, and serialize conditions for AWS updates, including creating with name, value, or existence flags, parsing from XML nodes, and converting to query parameters or JSON. Works with string, boolean, and structured data types representing update criteria. Used to build dynamic AWS condition expressions for database or resource updates.",
      "description_length": 370,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ReplaceableItemList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of replaceable items. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and AWS API-compatible data formats.",
      "description_length": 228,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.AttributeNameList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of string values, converting them between XML nodes, query formats, and JSON representations. Used to handle AWS attribute name lists in request serialization and response parsing.",
      "description_length": 307,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.DeletableItemList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of deletable items. Operates on XML nodes, AWS query parameters, and JSON structures, converting between them and a list of item records. Used to handle item deletion requests in AWS-compatible formats and XML-based data sources.",
      "description_length": 299,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ItemList",
      "description": "Provides functions to create empty lists, parse XML nodes into lists of items, convert item lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of Item.t and AWS-specific data types like Query.t and Json.t. Used to process and exchange item data in web service requests and responses.",
      "description_length": 333,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DomainNameList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing domain names. Used to process and format domain name data for AWS API interactions.",
      "description_length": 310,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.DeleteAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting attributes from a specific item in a domain, including handling conditional updates. Works with string-based domain and item names, attribute lists, and update conditions. Used to generate HTTP query parameters and JSON representations for API interactions with AWS DynamoDB.",
      "description_length": 352,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.NumberDomainBytesExceeded",
      "description": "Provides operations to create, parse, and serialize a structure representing exceeded byte limits, including converting to query parameters, JSON, and parsing from XML nodes. Works with a record type containing optional floating-point values for box usage. Used to handle AWS API responses related to storage limits in a structured, serializable format.",
      "description_length": 353,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.BatchPutAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for batch attribute updates, including creating a request from a domain and item list, parsing XML nodes into a request, and converting between query, JSON, and internal representations. Works with AWS domain names, replaceable item lists, and JSON/Query data structures. Used to prepare and process bulk attribute modifications in AWS DynamoDB.",
      "description_length": 409,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.GetAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving item attributes, including setting domain and item names, optional attribute lists, and consistent read flags. Works with string-based identifiers, attribute name lists, and boolean flags. Used to generate query parameters and JSON payloads for AWS DynamoDB get attribute operations.",
      "description_length": 362,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.GetAttributesResult",
      "description": "Provides a constructor for building results with optional attributes, a parser for XML nodes into result structures, and conversions to AWS query parameters and JSON format. Works with attribute lists and AWS-specific data structures like `Query.t` and `Json.t`. Used to process and serialize response data from AWS service calls.",
      "description_length": 330,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.PutAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for updating item attributes in a domain, including creating with specific domain and item names, attributes, and optional conditions. Works with string identifiers, attribute lists, and JSON or query format representations. Used to generate structured API calls for database updates in distributed systems.",
      "description_length": 371,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.InvalidParameterValue",
      "description": "Provides functions to create, parse, and serialize a value representing invalid parameters, including converting between XML nodes, query strings, and JSON. Works with a structured type containing optional floating-point usage data. Used to handle error responses in AWS API interactions where parameter validation fails.",
      "description_length": 321,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.MissingParameter",
      "description": "Provides operations to create, parse, serialize, and deserialize a structure representing missing parameters, including converting between XML nodes, query strings, and JSON. Works with a record type containing optional floating-point values. Used to handle missing parameter data in AWS API interactions, such as when validating request inputs or generating error responses.",
      "description_length": 375,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.DuplicateItemName",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structured data type representing item name duplication settings, including box usage configuration. Works with a record type containing a float value for box usage and no other fields. Used to generate AWS query parameters and JSON representations for API interactions involving item name validation.",
      "description_length": 371,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberSubmittedAttributesExceeded",
      "description": "Provides operations to create, parse, and serialize a structure representing exceeded attributes in a number submission, including converting between XML nodes, query parameters, and JSON. Works with a record type containing optional box usage information. Used to handle error responses from AWS services when attribute limits are exceeded.",
      "description_length": 341,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.BatchDeleteAttributesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for batch deleting attributes, working with domain names and lists of deletable items. Supports conversion to query parameters, JSON format, and parsing from XML nodes. Used to prepare and process AWS DynamoDB batch delete operations.",
      "description_length": 297,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberDomainsExceeded",
      "description": "Provides operations to create, parse, and serialize a domain usage limit structure, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing optional floating-point values representing box usage. Used to handle AWS domain limit data in API requests and responses.",
      "description_length": 326,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NoSuchDomain",
      "description": "Creates a domain-specific object with optional box usage tracking, parses XML nodes into this structure, and converts it to query parameters, JSON associations, and from JSON. Works with floating-point values and XML node lists. Used to handle domain configuration data in AWS-related workflows.",
      "description_length": 295,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.DomainMetadataRequest",
      "description": "Constructs a request object from a domain name, parses XML nodes into the request structure, converts the request to a query string, serializes to JSON, and deserializes from JSON. Works with string-based domain names and AWS query and JSON representations. Used to generate and process metadata requests for domain-specific data in AWS services.",
      "description_length": 346,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.SelectResult",
      "description": "Provides operations to construct, parse, and serialize results from AWS select queries, including creating instances from item lists and tokens, parsing XML nodes into result structures, and converting between query parameters, JSON, and internal representations. Works with item lists, AWS query parameters, JSON values, and XML nodes. Used to process and format AWS Athena query results for API responses and data transmission.",
      "description_length": 429,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.ListDomainsRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for listing domains, including setting a maximum number of domains and a pagination token. Works with integer and string types for configuration and a structured record type for request state. Used to generate HTTP query parameters and JSON payloads for API calls to list domains in a service.",
      "description_length": 364,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.SelectRequest",
      "description": "Encapsulates a DynamoDB select request with methods to construct, parse, and serialize the request in various formats. It works with strings for expressions and tokens, and boolean flags for consistency. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 284,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DomainMetadataResult",
      "description": "Provides methods to construct, parse, serialize, and deserialize metadata results containing counts and sizes of items, attributes, and timestamps. Works with numeric types and JSON/XML data structures. Used to process and encode response data from domain metadata operations in AWS DynamoDB.",
      "description_length": 292,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.RequestTimeout",
      "description": "Provides operations to create, parse, and serialize timeout values for API requests, including converting between XML, query, and JSON formats. Works with floating-point values and structured data types like XML nodes and JSON associations. Used to handle timeout configurations in AWS service interactions, such as setting or extracting timeout durations from request parameters.",
      "description_length": 380,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.InvalidNextToken",
      "description": "Provides operations to construct, parse, serialize, and deserialize a token used in pagination, supporting AWS query and JSON formats. Works with a record type containing optional box usage information. Used to handle invalid next token responses in API interactions.",
      "description_length": 267,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.CreateDomainRequest",
      "description": "Creates a structured request for domain creation, handling parsing from XML, conversion to query parameters, and serialization to JSON. It operates with a custom record type containing a domain name and supports direct construction from a string. Used to generate standardized API inputs for domain registration services.",
      "description_length": 321,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.AttributeDoesNotExist",
      "description": "Creates a structure representing an attribute that is not present, supporting initialization with optional box usage. Processes XML nodes into this structure and converts it to query parameters, JSON associations, and from JSON. Used in AWS request handling to explicitly denote missing attributes.",
      "description_length": 298,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.InvalidNumberValueTests",
      "description": "Provides operations to construct, parse, serialize, and deserialize a numeric value representation, including converting to and from XML nodes, query parameters, and JSON. Works with a custom type encapsulating a floating-point value and optional box usage metadata. Used to validate and transform numerical input in AWS-related data processing workflows.",
      "description_length": 355,
      "index": 35,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.InvalidNumberPredicates",
      "description": "Provides functions to create, parse, serialize, and deserialize a numeric value with optional box usage, working with float values and XML or JSON data structures. Parses XML nodes into a typed representation, converts the type to query parameters, and handles JSON serialization and deserialization. Used to process and encode numeric inputs in AWS API interactions.",
      "description_length": 367,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.ListDomainsResult",
      "description": "Provides operations to construct, parse, and serialize domain information results, including creating instances with domain names and pagination tokens, parsing XML nodes into structured data, and converting between JSON and query formats. Works with domain name lists and AWS-specific string and query types. Used to process API responses containing domain listings and pagination metadata.",
      "description_length": 391,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.InvalidQueryExpression",
      "description": "Constructs and manipulates query expressions with optional box usage, parses XML nodes into structured query data, converts between query and JSON representations, and reconstructs instances from JSON. Works with floating-point values and XML node structures. Used to validate and serialize query parameters in AWS API interactions.",
      "description_length": 332,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.TooManyRequestedAttributes",
      "description": "Provides operations to create, parse, and serialize a structure representing excessive attribute requests, including converting between XML nodes, query parameters, and JSON. Works with a record type containing an optional float value for box usage. Used to handle error responses in AWS API interactions where too many attributes are requested.",
      "description_length": 345,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.NumberItemAttributesExceeded",
      "description": "Provides operations to construct, parse, and serialize a structure representing exceeded number item attributes, including box usage. Works with float values and JSON or query string formats. Used to handle AWS API responses indicating attribute limits have been exceeded.",
      "description_length": 272,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.Types.DeleteDomainRequest",
      "description": "Creates a request structure for deleting a domain, accepting a domain name and producing query or JSON representations. Works with string-based domain names and AWS query/json formats. Used to generate API requests for domain removal in AWS services.",
      "description_length": 250,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberSubmittedItemsExceeded",
      "description": "Provides operations to create, parse, and serialize a structure representing a limit exceeded error related to submitted items, using a float for box usage. Works with XML nodes, query parameters, and JSON data formats. Used to handle AWS API responses where the number of submitted items exceeds allowed limits.",
      "description_length": 312,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types.NumberDomainAttributesExceeded",
      "description": "Provides operations to create, parse, and serialize a structure representing exceeded number domain attributes, including box usage. Works with float values and JSON or query string representations. Used to handle AWS API responses indicating resource limits have been exceeded.",
      "description_length": 278,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.BatchDeleteAttributes",
      "description": "Handles AWS request signing and HTTP conversion for batch attribute deletion operations. Processes input in the form of a structured request and returns unit output, with error parsing tailored to AWS-specific responses. Converts between HTTP requests and native types for services like EC2, ensuring proper encoding and error handling.",
      "description_length": 336,
      "index": 44,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.BatchPutAttributes",
      "description": "Converts AWS BatchPutAttributes requests into HTTP format, handling encoding, signing, and parameter setting. Processes HTTP responses, decoding them into native output or specific error types. Parses AWS error responses to validate and map them to API-specific error representations.",
      "description_length": 284,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.CreateDomain",
      "description": "Handles AWS request signing and HTTP conversion for domain creation, including encoding parameters into query format and setting action/version. Processes HTTP responses and maps AWS error XML to domain-specific error types. Works with AWS request structures and custom error representations for domain operations.",
      "description_length": 314,
      "index": 46,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb.DeleteAttributes",
      "description": "Handles AWS request signing and HTTP conversion for attribute deletion, using service-specific parameters and signature versions. Converts between native input structures and HTTP requests, and decodes HTTP responses into success or error states. Parses AWS error responses into domain-specific error types based on HTTP status and XML content.",
      "description_length": 344,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.DeleteDomain",
      "description": "Handles AWS domain deletion by converting input to signed HTTP requests and parsing responses. Processes query-encoded API calls for services like EC2, using specific request and response formats. Parses AWS error messages into domain-specific error types based on HTTP status and XML content.",
      "description_length": 293,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.DomainMetadata",
      "description": "Handles conversion between domain metadata requests and HTTP formats, including encoding query parameters and setting action/version. Processes AWS service-specific data structures for input, output, and error responses. Parses HTTP error bodies into structured error types based on service-specific definitions.",
      "description_length": 312,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and from strings, along with a list of common errors. Works with the abstract type `t` representing error states. Used to handle error serialization and mapping in HTTP response generation.",
      "description_length": 278,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.GetAttributes",
      "description": "Handles conversion between native input and HTTP requests for AWS operations, including query parameter encoding and signing configuration. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS request signatures, service identifiers, and custom input/output types for attribute retrieval.",
      "description_length": 357,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.ListDomains",
      "description": "Handles AWS request signing and HTTP conversion for domain listing operations. Accepts input structured as `ListDomainsRequest.t` and produces `ListDomainsResult.t` or `Errors_internal.t` from HTTP responses. Converts between native types and query-encoded HTTP requests, and parses AWS error responses into domain-specific error types.",
      "description_length": 336,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.PutAttributes",
      "description": "Handles AWS request signing and serialization by specifying the signing version and service, converting input data to HTTP requests with proper query encoding, and parsing HTTP responses into native output or error types. Operates on AWS request structures, HTTP strings, and custom error representations. Used to construct and process PutAttributes API calls in AWS services like DynamoDB.",
      "description_length": 390,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Select",
      "description": "Handles AWS request signing and serialization for specific services, including setting the signing version and service name. Converts between native input types and HTTP requests, and parses HTTP responses into structured outputs or errors. Processes AWS error responses into domain-specific error types based on HTTP status and XML content.",
      "description_length": 341,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_sdb.Types",
      "description": "Provides operations to create, parse, and serialize structured attribute and item data, including lists, replacements, and deletions, with support for XML, query, and JSON formats. Main data types include `ReplaceableAttribute.t`, `Item.t`, and structured records with string, float, and boolean fields. Examples include constructing AWS DynamoDB update requests, parsing XML configuration data, and serializing attribute lists for API interactions.",
      "description_length": 449,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "aws-sdb",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as HTTP methods, headers, query parameters, and JSON-encoded data structures. Used to interact with specific AWS services like S3 for object storage or DynamoDB for database operations.",
      "description_length": 350,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_sdb",
      "description": "Handles AWS request signing, HTTP conversion, and response parsing for a range of operations including domain management, attribute manipulation, and error handling. Main data types include request and result structures like `ListDomainsRequest.t`, `ListDomainsResult.t`, and `ReplaceableAttribute.t`, along with error types mapped from AWS XML responses. It supports constructing PutAttributes requests, parsing domain metadata, and converting between native and HTTP formats for services like EC2 and DynamoDB. Examples include deleting batch attributes, creating domains, and serializing structured item data for API interactions.",
      "description_length": 633,
      "index": 57,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 58,
    "meaningful_modules": 58,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 633,
    "min_description_length": 228,
    "avg_description_length": 333.67241379310343,
    "embedding_file_size_mb": 0.21122360229492188
  }
}