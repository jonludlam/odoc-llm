{
  "package": "ppx_integer",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:31.481225",
  "modules": [
    {
      "module_path": "Ppx_integer.Integer",
      "description": "Provides functions to create and manage variable declarations and structure items, including mapping and extending AST transformations. Works with OCaml AST structures, hashtables, and error strings. Used to inject declarations into parsed code and reset state during processing.",
      "description_length": 279,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_integer.Ppx",
      "description": "Registers a custom syntax extension and initializes legacy command-line processing for compiler plugins. Operates with compiler-specific internal representations and command-line arguments. Used to enable custom parsing rules and maintain compatibility with older build systems.",
      "description_length": 278,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ppx_integer",
      "description": "Provides functions to parse and manipulate integer literals with custom suffixes, converting them into typed values. Works with string representations of numbers and custom suffixes to generate corresponding integer types. Enables direct use of literals like 1234u in code, which are expanded to Uint32 or Uint64 values during compilation.",
      "description_length": 339,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_integer",
      "description": "Transforms and extends OCaml ASTs by managing variable declarations, injecting code, and resetting state during processing. Handles custom syntax extensions and integrates with compiler internals for legacy command-line support. Supports operations like AST mapping, declaration injection, and argument parsing. Enables custom parsing rules and code injection in compiler plugins.",
      "description_length": 380,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 380,
    "min_description_length": 278,
    "avg_description_length": 319.0,
    "embedding_file_size_mb": 0.014932632446289062
  }
}