{
  "package": "stk_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:48:27.972077",
  "modules": [
    {
      "module_path": "Stk_ppx.Ppx_debug",
      "library": "stk_ppx",
      "description": "This module provides functions for constructing and manipulating located values, primarily working with OCaml's `Location.t` and related types. It includes utilities for creating located identifiers, raising location-tagged errors, and checking if a pattern match case is a catchall. Concrete use cases include error reporting in PPX rewriters and AST manipulation during code transformation passes.",
      "description_length": 399,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Stk_ppx",
      "library": "stk_ppx",
      "description": "This module provides functions for creating and manipulating located values using `Location.t`, including utilities for generating located identifiers, raising location-aware errors, and determining if a pattern match is exhaustive. It works directly with OCaml's abstract syntax tree (AST) components, particularly patterns and expressions, to support precise error reporting and transformation logic. Use cases include implementing custom PPX rewriters and performing AST analysis during compilation.",
      "description_length": 502,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 2,
    "filtered_empty_modules": 1,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 502,
    "min_description_length": 399,
    "avg_description_length": 450.5,
    "embedding_file_size_mb": 0.02940082550048828
  }
}