{
  "package": "stk_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:22.730401",
  "modules": [
    {
      "module_path": "Stk_ppx.Ppx_debug",
      "library": "stk_ppx",
      "description": "This module provides functions for creating and manipulating located values, such as attaching locations to identifiers or values. It includes utilities for constructing long identifiers with locations, raising located errors, and checking if a case is a catchall. Concrete use cases include error reporting during syntax tree transformations and constructing properly located AST nodes.",
      "description_length": 387,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stk_ppx",
      "library": "stk_ppx",
      "description": "This module enables precise tracking and manipulation of source code locations within abstract syntax trees. It centers around located values, supporting operations like attaching positions to identifiers, building long identifiers with location metadata, and identifying catchall cases in pattern matching. Users can construct well-located AST nodes, report errors with exact source positions, and ensure consistent location handling during syntax transformations. Example uses include enhancing compiler error messages and preserving location information during code rewriting passes.",
      "description_length": 586,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 2,
    "filtered_empty_modules": 1,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 586,
    "min_description_length": 387,
    "avg_description_length": 486.5,
    "embedding_file_size_mb": 0.007699012756347656
  }
}