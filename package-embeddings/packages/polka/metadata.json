{
  "package": "polka",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:59:24.545728",
  "modules": [
    {
      "module_path": "Polka",
      "library": "polka",
      "description": "This module manages polyhedral computations with operations for setting up and tearing down a context, configuring garbage collection and widening strategies, and converting between various constraint and expression representations. It works with dimensions, constraints, generators, and big integers, supporting precise arithmetic and formatting. Concrete use cases include analyzing program invariants, performing polyhedral transformations, and printing structured output for debugging or external tools.",
      "description_length": 507,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "PolkaIO",
      "library": "polka",
      "description": "This module handles the creation and manipulation of vectors, matrices, and polyhedra from constraints, frames, and expressions, primarily for numerical abstract domain operations. It provides functions to convert string-based representations into structured data types like `Vector.t`, `Matrix.t`, and `Poly.t`, and includes printing functions for these structures. Use cases include parsing and printing linear constraints and frames for static analysis tasks.",
      "description_length": 462,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Matrix",
      "library": "polka",
      "description": "The module provides functions to construct, modify, and manipulate matrices through element-wise updates, row transformations using vector operations, structural adjustments like merging or sorting rows",
      "description_length": 202,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Polka_parser",
      "library": "polka",
      "description": "Parses lexical tokens representing geometric and arithmetic constructs into constraints, frames, or linear expressions. It processes lexbuf input using tokenizer functions, producing structured data with coefficients, bounds, and variable names. Used to interpret input files defining polyhedral geometries or constraint systems.",
      "description_length": 329,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Poly",
      "library": "polka",
      "description": "This module provides operations to construct, transform, and analyze convex polyhedra through constraint and frame representations, supporting dimension manipulation, set-theoretic combinations (union, intersection), and geometric operations like projection and embedding. It works with polyhedral structures (`Poly.t`), matrices (`Matrix.t`), vectors (`Vector.t`), and dimension mappings to model linear inequalities, compute closures, or perform symbolic transformations. These capabilities are used in program analysis, optimization, and formal verification to represent and reason about geometric regions defined by linear constraints.",
      "description_length": 639,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Polka_lexer",
      "library": "polka",
      "description": "This module provides a `lex` function that processes a `lexbuf` input buffer to produce tokens for a parser. It operates on lexical input streams and converts raw character sequences into structured token values. Use this module to tokenize source code or structured text input according to a defined grammar.",
      "description_length": 309,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 639,
    "min_description_length": 202,
    "avg_description_length": 408.0,
    "embedding_file_size_mb": 0.08739662170410156
  }
}