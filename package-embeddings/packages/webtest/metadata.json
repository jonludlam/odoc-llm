{
  "package": "webtest",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:42.530678",
  "modules": [
    {
      "module_path": "Webtest.Suite.Async",
      "library": "webtest",
      "description": "This module defines test execution primitives for asynchronous testing, including functions to run tests with setup and teardown phases, handle test lifecycle state, and bridge synchronous tests into asynchronous contexts. It operates on callback functions, test wrappers, and test functions that encapsulate asynchronous behavior. Concrete use cases include writing tests that perform I/O, manage resources like temporary files, or verify behavior across multiple execution stages.",
      "description_length": 482,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Webtest.Suite.Sync",
      "library": "webtest",
      "description": "Contains functions for defining synchronous test suites with setup and teardown logic. Works with test functions that take no arguments and perform assertions. Use bracket to create tests that require initializing and cleaning up resources like temporary files or network connections.",
      "description_length": 284,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Webtest.Zipper",
      "library": "webtest",
      "description": "This module implements a tree navigation structure that tracks the current position within a test suite hierarchy and the path taken to reach it. It supports movement operations like moving up to a parent, down to the first child, right to the next sibling, and advancing to the next test location in traversal order. The module is used internally for traversing and reporting on test suites, enabling precise navigation and context tracking during test execution.",
      "description_length": 464,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Webtest.Utils",
      "library": "webtest",
      "description": "Handles test execution and result aggregation for unit testing. It runs test suites and generates structured output including logs, outcomes, and summaries. Key operations include executing tests, producing raw and formatted summaries, and reporting pass/fail status with counts of test results.",
      "description_length": 295,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Webtest.Suite",
      "library": "webtest",
      "description": "This module organizes tests into hierarchical structures and provides functions to create and execute both synchronous and asynchronous test cases. It supports labeled test cases, grouping tests into lists, and performing assertions for equality, truth, and exception handling, with detailed results tracking pass/fail status, error messages, and execution time. The child modules extend this functionality by adding support for asynchronous testing with setup and teardown phases, and for defining synchronous test suites that manage resource lifecycles using bracket patterns. Examples include writing I/O-heavy tests in asynchronous contexts, and structuring tests that create and clean up temporary files or network connections.",
      "description_length": 732,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Webtest",
      "library": "webtest",
      "description": "This module provides a comprehensive testing framework for organizing, navigating, and executing hierarchical test suites with support for both synchronous and asynchronous test cases. It features a tree-based navigation system for tracking test suite structure, along with execution and reporting mechanisms that capture detailed results including pass/fail status, logs, and summaries. Key data types include test suites, test cases with labels, and execution contexts that support setup and teardown phases. Example uses include writing structured unit tests with assertions for equality and exceptions, running asynchronous I/O tests, and managing temporary resources like files or network connections during test execution.",
      "description_length": 728,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 732,
    "min_description_length": 284,
    "avg_description_length": 497.5,
    "embedding_file_size_mb": 0.022231101989746094
  }
}