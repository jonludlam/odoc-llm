{
  "package": "mmseg",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:15.404640",
  "modules": [
    {
      "module_path": "Mmseg.Dict.Tree",
      "description": "Provides functions to construct, traverse, and transform labeled trees using the 'a node type, which represents nodes with a value and a list of children. Includes operations for depth-first search, node insertion, and subtree extraction. Used to model hierarchical data such as file systems, XML structures, and organizational charts.",
      "description_length": 335,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mmseg.Dict",
      "description": "Constructs and manipulates labeled trees using a node type that holds a value and child list, supporting depth-first traversal, node insertion, and subtree extraction. Operations enable hierarchical data modeling, such as navigating file systems or parsing XML. Users can build complex tree structures, modify them dynamically, and extract specific branches for processing. Examples include generating organizational charts or transforming XML node hierarchies.",
      "description_length": 461,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "mmseg",
      "description": "Provides functions for segmenting strings into tokens using predefined dictionaries and rules. Operates on strings and returns lists of segmented words. Used to process Chinese text for natural language processing tasks like keyword extraction and text analysis.",
      "description_length": 262,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Mmseg",
      "description": "Provides tree-based data manipulation through nodes containing values and child lists, enabling hierarchical modeling and traversal. Key operations include depth-first iteration, node insertion, and subtree extraction, supporting tasks like file system navigation or XML processing. Users can construct and modify complex tree structures, such as building organizational charts or isolating XML fragments. The module facilitates dynamic tree management with precise control over node relationships and data flow.",
      "description_length": 512,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 512,
    "min_description_length": 262,
    "avg_description_length": 392.5,
    "embedding_file_size_mb": 0.014924049377441406
  }
}