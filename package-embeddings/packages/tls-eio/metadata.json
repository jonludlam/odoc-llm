{
  "package": "tls-eio",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:54:51.986546",
  "modules": [
    {
      "module_path": "X509_eio",
      "library": "tls-eio",
      "description": "This module reads and processes X.509 certificates and private keys from PEM-encoded files or directories, producing TLS certificate chains and certificate lists. It supports loading trusted CA certificates, certificate revocation lists, and configuring certificate validation through fingerprint-based authentication. Concrete use cases include setting up TLS server configurations with certificate chains and validating client certificates against trusted authorities.",
      "description_length": 470,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Tls_eio",
      "library": "tls-eio",
      "description": "This module implements TLS handshakes and secure communication over Eio flows, handling server and client-side operations with configuration support for certificates, authentication, and session renegotiation. It works with Eio's two-way flows and TLS configuration types, enabling concrete use cases like securing network connections for web servers or clients using TLS 1.3, including runtime key updates and session state inspection. Functions such as `server_of_flow` and `client_of_flow` establish encrypted channels, while `reneg` and `key_update` manage session lifecycle and security parameters dynamically.",
      "description_length": 615,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 615,
    "min_description_length": 470,
    "avg_description_length": 542.5,
    "embedding_file_size_mb": 0.029397964477539062
  }
}