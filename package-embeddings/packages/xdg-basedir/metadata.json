{
  "package": "xdg-basedir",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:12.005226",
  "modules": [
    {
      "module_path": "XDGBaseDir.Config",
      "library": "xdg-basedir",
      "description": "This module determines standard configuration file and directory paths according to the XDG base directory specification. It provides functions to retrieve user-specific and system-wide configuration directories and files, with optional environment overrides and existence checks. Use it to locate configuration resources such as user settings or system-wide defaults in a standardized way.",
      "description_length": 390,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "XDGBaseDir.Data",
      "library": "xdg-basedir",
      "description": "This module determines data file and directory locations according to the XDG base directory specification. It provides functions to retrieve user-specific and system-wide data directories and files, with optional existence checks and environment overrides. Use it to locate configuration files, application data, or system-wide resources in a standardized way.",
      "description_length": 361,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "XDGBaseDir.Cache",
      "library": "xdg-basedir",
      "description": "Implements functions to locate user-specific cache directories and files according to the XDG base directory specification. Works with strings representing file paths, using optional environment overrides and existence checks. Useful for applications needing to store or access cache files in standardized locations, such as web browsers or package managers.",
      "description_length": 358,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "XDGBaseDir",
      "library": "xdg-basedir",
      "description": "This module implements the XDG Base Directory specification to standardize the locations of application-specific data, configuration, and cache files. It provides structured access to user-specific and system-wide directories through environment variables and predefined paths, supporting cross-platform consistency. The main operations retrieve base directories for data, configuration, and cache purposes, with variants that check for file existence or apply custom overrides. For example, it can locate a user's config directory for an application, find system-wide data files, or determine where to store cached resources like downloaded packages or temporary build artifacts.",
      "description_length": 680,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 680,
    "min_description_length": 358,
    "avg_description_length": 447.25,
    "embedding_file_size_mb": 0.014922142028808594
  }
}