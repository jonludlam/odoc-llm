{
  "package": "smaws-clients",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 1688,
  "creation_timestamp": "2025-06-18T18:02:11.586312",
  "modules": [
    {
      "module_path": "Smaws_Client_Proton.UpdateTemplateSyncConfig",
      "description": "Handles AWS IoT Greengrass update template sync configuration requests, processing input parameters and returning structured outputs. Operates with context objects and specific exception types derived from AWS error responses. Used to modify synchronization settings for IoT device templates in real-time deployment scenarios.",
      "description_length": 326,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceTemplateVersion",
      "description": "Handles the request to update a service template version by validating input, checking resource existence, and applying changes. Operates on context data, input structures, and output responses specific to service template management. Used to manage version upgrades in a controlled, error-checked manner during deployment workflows.",
      "description_length": 333,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceTemplate",
      "description": "Handles AWS service template updates by processing input parameters and returning structured outputs. Operates on context objects and custom exception types derived from AWS JSON protocols. Used to manage template modifications in cloud infrastructure workflows with detailed error reporting.",
      "description_length": 292,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceSyncConfig",
      "description": "Handles configuration updates for a service by sending a request with context and input parameters. Operates on context objects and structured input/output types specific to service synchronization. Used to modify service settings under conditions like access control, resource existence, and system load.",
      "description_length": 305,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceSyncBlocker",
      "description": "Handles synchronization blocking for update services by requesting a lock, validating input against specific exception types, and returning a result with detailed error handling. Operates on context objects and structured input/output records related to service updates. Used to prevent concurrent modifications during critical update operations in distributed systems.",
      "description_length": 369,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServicePipeline",
      "description": "Handles the submission and processing of update service pipeline requests, including error handling for specific AWS exceptions. Operates on context objects and structured input/output types related to service pipeline updates. Used to manage pipeline modifications in a controlled, exception-aware manner during system updates.",
      "description_length": 328,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceInstance",
      "description": "Handles AWS service instance updates by sending requests with context and input parameters, returning results or specific exception types. Operates on context objects, input records, and output records structured for AWS API interactions. Used to manage instance configuration changes while handling AWS-specific error conditions during deployment or maintenance workflows.",
      "description_length": 373,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateService",
      "description": "Handles AWS JSON-based update requests by validating input, processing business logic, and returning structured outputs. Operates on context objects and custom exception types derived from AWS protocol specifications. Used to manage resource modifications in distributed systems with strict error handling for service-specific exceptions.",
      "description_length": 338,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironmentTemplateVersion",
      "description": "Handles the request to update an environment template version by accepting context and input parameters, returning a result that includes either the output or specific AWS-related error types. Operates with custom types such as `access_denied_exception`, `conflict_exception`, and others derived from AWS protocol definitions. Used to manage version updates in environment configurations within a cloud infrastructure system.",
      "description_length": 425,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironmentTemplate",
      "description": "Handles AWS CloudFormation environment template updates by processing context and input data, returning results or specific exception types. Operates with context objects and structured input/output records tied to CloudFormation operations. Used to manage template modifications in infrastructure-as-code workflows with precise error handling.",
      "description_length": 344,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironmentAccountConnection",
      "description": "Handles the initiation of a connection between an environment and an account, processing input parameters and returning a structured output. Operates with context objects, input records, and a variety of error types specific to AWS service interactions. Used to establish or update linkage in cloud infrastructure management workflows.",
      "description_length": 335,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironment",
      "description": "Handles environment updates by sending a request with context and input data, returning a result that includes either the output or specific error types. Operates on `Smaws_Lib.Context.t` and custom input/output records tied to environment configuration. Used to modify deployment settings in a controlled, error-aware manner during infrastructure updates.",
      "description_length": 356,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateComponent",
      "description": "Handles requests to modify component configurations by accepting context and input data, returning results with detailed error handling for AWS-specific exceptions. Operates on custom types representing component inputs and outputs, along with AWS protocol error types. Used to update resource configurations in a controlled, validated manner within cloud infrastructure workflows.",
      "description_length": 381,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateAccountSettings",
      "description": "Handles account setting updates by sending a request with context and input parameters, returning a result that includes either the output or specific error types. Operates on `Smaws_Lib.Context.t` and custom input/output types for account configuration changes. Used to modify user account properties in a controlled, error-aware manner during system administration tasks.",
      "description_length": 373,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects, input structures containing resource ARNs and tag keys, and produces output with operation results or specific AWS exception types. Used to remove tags from resources in controlled environments where access policies and resource existence must be validated.",
      "description_length": 390,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.TagResource",
      "description": "Handles AWS resource tagging by sending a structured request with context and input parameters, returning a result that includes either a success response or specific exception types. Operates on custom types such as `tag_resource_input` and `tag_resource_output, along with AWS-specific error variants. Used to apply or update tags on AWS resources like EC2 instances or S3 buckets within a controlled execution context.",
      "description_length": 421,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.RejectEnvironmentAccountConnection",
      "description": "Handles the rejection of an account connection within an environment by validating input, enforcing access controls, and interacting with AWS services to update resource states. Operates on context objects, input records containing connection identifiers, and output structures reflecting operation results. Used to prevent unauthorized or conflicting account integrations in cloud infrastructure workflows.",
      "description_length": 407,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.NotifyResourceDeploymentStatusChange",
      "description": "Handles the submission of resource deployment status change requests, processing input containing deployment details and returning structured output. Operates with context objects and specific error types derived from AWS JSON protocols. Used to update deployment states in cloud infrastructure systems, ensuring proper error handling for service-specific exceptions.",
      "description_length": 367,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListTagsForResource",
      "description": "Handles AWS service requests to retrieve tags associated with a specific resource. Operates on structured input and output types representing resource identifiers and tag collections. Used to fetch metadata tags for resources in AWS environments, such as EC2 instances or S3 buckets.",
      "description_length": 283,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServices",
      "description": "Provides functions to interact with AWS service listing APIs, handling context and input parameters to retrieve service information. Operates with custom types such as `list_services_input` and `list_services_output, along with error variants for AWS-specific exceptions. Used to fetch available AWS services in a structured format, supporting error handling for access, validation, and service issues.",
      "description_length": 402,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceTemplates",
      "description": "Provides functions to request service templates from an AWS-based system, handling specific input and output types along with error variants. Operates with context objects, input records, and output records structured for AWS API interactions. Used to retrieve and manage service template configurations in cloud infrastructure workflows.",
      "description_length": 338,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceTemplateVersions",
      "description": "Handles AWS service template version listing by sending a request with context and input parameters, returning a result that includes either the output or specific exception types. Operates on AWS context objects and structured input/output records for service template version queries. Used to retrieve version histories for AWS service templates in controlled, error-aware workflows.",
      "description_length": 385,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServicePipelineProvisionedResources",
      "description": "Handles AWS service pipeline provisioned resources requests by processing input parameters and returning structured outputs. Operates with context objects, input records, and error-typed results. Used to retrieve and manage resource listings under specific pipeline configurations.",
      "description_length": 281,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServicePipelineOutputs",
      "description": "Processes AWS ListServicePipelineOutputs requests by validating input, executing the operation, and returning structured outputs or specific error types. It handles context and input records, producing a result type that includes both success responses and AWS-specific exceptions. Used to retrieve pipeline output configurations from AWS services with precise error handling.",
      "description_length": 376,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceInstances",
      "description": "Handles AWS service instance listing by sending a request with a context and input parameters, returning structured output or specific error types. Operates with AWS context objects and custom input/output records for service instance queries. Used to retrieve and manage service instance data in cloud infrastructure workflows.",
      "description_length": 328,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceInstanceProvisionedResources",
      "description": "Handles AWS API requests to retrieve provisioned resources for a service instance, processing input parameters and returning structured outputs. Operates on context objects, input records, and error-specific types derived from AWS JSON protocols. Used to fetch resource lists in cloud infrastructure management workflows.",
      "description_length": 321,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceInstanceOutputs",
      "description": "Handles AWS API requests to retrieve service instance outputs, processing input parameters and returning structured results or specific error types. Operates with context objects and custom input/output records defined in the Smaws_Lib framework. Used to fetch detailed operational data from cloud infrastructure services during programmatic interactions.",
      "description_length": 355,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListRepositorySyncDefinitions",
      "description": "Handles AWS JSON-based requests to retrieve repository sync definitions, processing context and input parameters to produce structured outputs. Operates with custom exception types and AWS-specific context data. Used to fetch configuration details for repository synchronization in distributed systems.",
      "description_length": 302,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListRepositories",
      "description": "Handles AWS CodeCommit repository listing by sending a request with context and input parameters, returning structured output or specific error types. Operates with AWS context objects and custom input/output records for repository queries. Used to fetch a list of repositories in a CodeCommit domain, supporting error handling for AWS service exceptions.",
      "description_length": 355,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironments",
      "description": "Handles environment listing requests by validating input, querying context, and returning structured outputs. Operates with context objects and custom exception types to manage AWS API responses. Used to retrieve environment data in a controlled, error-aware manner during system diagnostics or deployment workflows.",
      "description_length": 316,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentTemplates",
      "description": "Provides functions to retrieve environment templates from a system, handling specific input parameters and returning structured outputs. Operates with context objects and custom exception types for error handling. Used to fetch and manage template configurations in a controlled, validated manner.",
      "description_length": 297,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentTemplateVersions",
      "description": "Handles AWS API requests to retrieve versions of environment templates, processing input parameters and returning structured outputs. Operates with context objects, input records, and custom exception types specific to AWS service responses. Used to fetch versioned configurations in cloud management workflows.",
      "description_length": 311,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentProvisionedResources",
      "description": "Handles AWS resource provisioning requests by fetching a list of provisioned resources based on context and input parameters. Operates on AWS context objects and custom exception types to manage various error scenarios. Used to retrieve and validate resource states in cloud infrastructure workflows.",
      "description_length": 300,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentOutputs",
      "description": "Handles AWS environment output retrieval by sending a request with context and input parameters. Operates on `Smaws_Lib.Context.t` and a custom input type to fetch environment-related data. Returns structured outputs or specific AWS exception types based on the response.",
      "description_length": 271,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentAccountConnections",
      "description": "Handles AWS environment account connection requests by processing context and input parameters, returning structured outputs or specific error types. Operates with AWS context objects and custom exception types derived from JSON responses. Used to retrieve and validate account connection details within a defined environment.",
      "description_length": 326,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListDeployments",
      "description": "Handles AWS deployment listing by sending a request with context and input parameters, returning structured output or specific exception types. Operates with AWS context objects and deployment input records. Used to retrieve deployment histories for monitoring or auditing purposes.",
      "description_length": 282,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListComponents",
      "description": "Handles AWS service requests to retrieve component lists, processing input parameters and returning structured outputs. Operates with context objects, input records, and custom error types specific to AWS API interactions. Used to fetch and manage component metadata in distributed system configurations.",
      "description_length": 304,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListComponentProvisionedResources",
      "description": "Requests provisioned resources for a component, handling AWS JSON protocols and specific exception types. It operates on context and input records, producing output records or detailed error variants. Used to retrieve resource lists in cloud infrastructure management workflows.",
      "description_length": 278,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListComponentOutputs",
      "description": "Handles AWS service requests to retrieve component outputs, processing context and input parameters to return structured results. Operates with AWS context objects, input records, and custom exception types. Used to fetch configuration data from cloud resources in distributed systems.",
      "description_length": 285,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetTemplateSyncStatus",
      "description": "Handles AWS CloudFormation template synchronization status requests by sending a structured input and returning a result with detailed error types. Operates on context objects and specific input/output records tied to AWS API interactions. Used to monitor the progress of template imports in cloud infrastructure workflows.",
      "description_length": 323,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetTemplateSyncConfig",
      "description": "Handles AWS CloudFormation template synchronization configuration requests by processing context and input parameters, returning structured outputs or specific exception types. Operates with AWS context objects and custom input/output records tied to template sync operations. Used to retrieve or validate sync settings for CloudFormation templates in controlled environments.",
      "description_length": 376,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceTemplateVersion",
      "description": "Handles AWS API requests to retrieve service template versions, processing inputs and returning structured outputs. Operates with context objects, input records, and custom error types specific to AWS service interactions. Used to fetch version details for service templates in cloud infrastructure management workflows.",
      "description_length": 320,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceTemplate",
      "description": "Handles AWS service template retrieval by sending a structured request and returning a result that includes either the template data or specific error types. Operates with context information and input parameters defined in the Smaws_Lib module. Used to fetch service-specific configuration details in AWS integration workflows.",
      "description_length": 328,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceSyncConfig",
      "description": "Handles AWS service sync configuration requests by sending a structured input and returning a result with specific error types. Operates with context objects and custom input/output records tied to AWS API specifications. Used to retrieve synchronization settings for services in controlled environments.",
      "description_length": 304,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceSyncBlockerSummary",
      "description": "Handles AWS API requests to retrieve synchronization blocker summaries, processing input parameters and returning structured output. Operates with context objects, custom exception types, and JSON-based data structures. Used to monitor and manage service synchronization states in distributed systems.",
      "description_length": 301,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceInstanceSyncStatus",
      "description": "Requests the synchronization status of a service instance, handling specific AWS error types. It operates on context and input records, producing an output record or one of several defined exceptions. Used to monitor the state of service instance updates in distributed systems.",
      "description_length": 278,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceInstance",
      "description": "Handles AWS service instance retrieval by sending a structured request with context and input parameters. Operates on custom types including context, input, and output records, along with specific exception types for error handling. Used to fetch detailed information about a service instance in a cloud infrastructure setup.",
      "description_length": 325,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetService",
      "description": "Handles HTTP GET requests for service resources, processing context and input parameters to retrieve structured outputs. Operates with custom exception types and AWS JSON protocol errors, ensuring precise error handling. Used to fetch specific service configurations or metadata from a remote endpoint.",
      "description_length": 302,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetResourcesSummary",
      "description": "Handles AWS resource summary requests by sending structured JSON payloads and parsing specific error responses. Operates with context objects, input records, and output records containing resource metadata. Used to retrieve and validate resource counts and types from AWS services under constrained error conditions.",
      "description_length": 316,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetRepositorySyncStatus",
      "description": "Handles AWS API requests to retrieve the synchronization status of a repository, processing input parameters and returning structured output. Operates with context objects, input records, and custom exception types specific to AWS service responses. Used to monitor repository sync states in cloud infrastructure management workflows.",
      "description_length": 334,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetRepository",
      "description": "Handles AWS S3 repository retrieval by sending a structured request and returning detailed responses or specific exception types. Operates with context objects and input records tailored for S3 repository operations. Used to fetch repository metadata under controlled error conditions such as access denial or resource not found.",
      "description_length": 329,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironmentTemplateVersion",
      "description": "Handles AWS API requests to retrieve environment template versions, processing inputs and returning structured outputs. Operates with context objects, input records, and custom error types specific to AWS service responses. Used to fetch version details for environment templates in cloud infrastructure management workflows.",
      "description_length": 325,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironmentTemplate",
      "description": "Handles AWS environment template retrieval by sending a structured request with context and input parameters. Operates on `Smaws_Lib.Context.t` and custom input/output types specific to environment templates. Used to fetch detailed configuration data for cloud environments in deployment workflows.",
      "description_length": 298,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironmentAccountConnection",
      "description": "Handles AWS environment account connection requests by validating context and input, then returning structured output or specific error types. Operates with context objects, input records, and output records tailored to AWS environment configurations. Used to establish or retrieve account connection details within a defined environment.",
      "description_length": 338,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironment",
      "description": "Handles environment configuration retrieval by sending a structured request to an external service, processing input parameters, and returning a result with specific error types. Operates on context objects and custom input/output records defined in the Smaws_Lib module. Used to fetch runtime environment details in AWS Lambda execution contexts.",
      "description_length": 347,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetDeployment",
      "description": "Handles deployment retrieval by sending a request to the AWS service, processing input parameters, and returning structured output or specific error types. Operates with context objects, deployment input records, and deployment output records. Used to fetch detailed deployment information in scenarios requiring precise error handling and validation.",
      "description_length": 351,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetComponent",
      "description": "Handles AWS service requests to retrieve component details using a context and input parameters. Operates with custom types such as `get_component_input` and `get_component_output`, along with specific error variants for AWS exceptions. Used to fetch structured component data from an AWS backend in a controlled, error-aware manner.",
      "description_length": 333,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetAccountSettings",
      "description": "Handles AWS request for account settings, returning structured output or specific exception types. Operates with context and input records defined by the Smaws_Lib framework. Used to retrieve and validate user account configurations in AWS services.",
      "description_length": 249,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteTemplateSyncConfig",
      "description": "Handles the deletion of a template synchronization configuration by sending a request to the AWS service. Operates on context objects and input/output records specific to the delete operation. Used to remove outdated or incorrect template sync settings in a controlled, error-aware manner.",
      "description_length": 289,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteServiceTemplateVersion",
      "description": "Handles the deletion of a specific service template version by validating input, checking permissions, and interacting with the underlying system. Operates on context data, input structures containing template identifiers, and output structures reflecting deletion results. Used to remove outdated or invalid service templates from a managed environment.",
      "description_length": 354,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteServiceTemplate",
      "description": "Handles deletion requests for service templates by validating input, checking resource existence, and enforcing access controls. Operates on structured input and output types specific to service template management. Processes exceptions such as access denial, resource not found, and validation errors during deletion.",
      "description_length": 318,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteServiceSyncConfig",
      "description": "Handles deletion of service synchronization configurations by sending a request with context and input parameters. Operates on custom types representing input and output data, along with specific exception types for error handling. Used to remove configured sync settings in AWS environments where resource conflicts or access issues may occur.",
      "description_length": 344,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteService",
      "description": "Handles deletion requests by validating input, checking resource existence, and enforcing access controls. Operates on structured input containing resource identifiers and context metadata. Used to safely remove resources while reporting specific exceptions for access issues, conflicts, and invalid inputs.",
      "description_length": 307,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteRepository",
      "description": "Handles AWS ECR repository deletion requests by validating input, checking permissions, and executing the deletion process. Operates on context objects and structured input/output types specific to AWS ECR. Used to remove repositories while managing exceptions such as access denial, resource not found, and conflict errors.",
      "description_length": 324,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironmentTemplateVersion",
      "description": "Handles the deletion of a specific environment template version by validating input, checking permissions, and interacting with the underlying system. Operates on structured input and output types related to environment templates and AWS error responses. Used to safely remove outdated or invalid template versions from a managed environment system.",
      "description_length": 349,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironmentTemplate",
      "description": "Handles deletion requests for environment templates by validating input, checking permissions, and interacting with the underlying system. Operates on context objects and structured input containing template identifiers. Used to safely remove outdated or unused environment configurations from a managed system.",
      "description_length": 311,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironmentAccountConnection",
      "description": "Handles the deletion of an account connection within an environment by sending a structured request. Operates on custom input and output types specific to environment management and AWS error responses. Used to remove unauthorized or obsolete account links in cloud infrastructure workflows.",
      "description_length": 291,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironment",
      "description": "Handles environment deletion requests by validating input, checking permissions, and executing deletion logic. Operates on context objects and structured input/output records specific to environment management. Used to safely remove environments while handling exceptions like access denial, resource not found, and validation errors.",
      "description_length": 334,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteDeployment",
      "description": "Handles deletion requests for specific deployments by validating input, checking permissions, and invoking the underlying service. Operates on context objects, deployment input structures, and various error types specific to AWS API interactions. Used to safely remove deployments while managing exceptions such as access denial, resource not found, and throttling.",
      "description_length": 365,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteComponent",
      "description": "Handles deletion requests for components by validating input, checking resource existence, and enforcing access controls. Operates on context objects and structured input/output types specific to component management. Processes scenarios such as unauthorized access, resource conflicts, and service errors during deletion.",
      "description_length": 322,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateTemplateSyncConfig",
      "description": "Handles the creation of a template synchronization configuration by sending a request to an AWS service, processing input parameters, and returning a result or specific error types. Operates with context information and structured input and output records related to template synchronization. Used to set up automated template updates in a controlled, error-aware manner.",
      "description_length": 371,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceTemplateVersion",
      "description": "Handles the creation of a new version of a service template by sending a request with specific input parameters. Operates on types such as `create_service_template_version_input` and `create_service_template_version_output`, along with AWS-specific error types. Used to version control service templates in a managed environment, ensuring changes are tracked and deployed systematically.",
      "description_length": 387,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceTemplate",
      "description": "Handles AWS service template creation requests by validating input, enforcing quotas, and managing access controls. Processes structured input containing service parameters and returns detailed outputs or specific exception types. Used to provision templates in cloud infrastructure workflows with strict error handling for denied access, conflicts, and service limits.",
      "description_length": 369,
      "index": 72,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceSyncConfig",
      "description": "Handles the creation of service sync configurations by sending a request with context and input parameters, returning a result that includes either the output or specific error types. Operates with context objects, input records, and output records structured for AWS service synchronization. Used to configure service synchronization in scenarios requiring precise error handling and context-aware execution.",
      "description_length": 409,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceInstance",
      "description": "Handles service instance creation requests by validating input, checking resource availability, and interacting with underlying infrastructure. Operates on context objects and structured input data to produce output or specific error types. Used to provision new service instances in cloud environments while enforcing access controls and conflict checks.",
      "description_length": 355,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateService",
      "description": "Handles service creation requests by validating input, checking resource constraints, and interacting with underlying systems. Operates on context objects and structured input data to produce outputs or specific error types. Used to enforce access controls, detect conflicts, and manage service provisioning workflows.",
      "description_length": 318,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateRepository",
      "description": "Handles AWS CodeCommit repository creation requests by validating input, checking for conflicts, and interacting with the service. Operates on context data, input structures, and error-specific types derived from AWS JSON protocols. Used to programmatically enforce repository naming rules and manage resource creation within CI/CD pipelines.",
      "description_length": 342,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironmentTemplateVersion",
      "description": "Handles the creation of a new version of an environment template by accepting context and input parameters, returning a result that includes either the output or specific AWS-related error types. Operates with custom types such as `create_environment_template_version_input` and `create_environment_template_version_output`. Used to manage template versioning in AWS-based deployment workflows, ensuring proper error handling for service-specific exceptions.",
      "description_length": 458,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironmentTemplate",
      "description": "Handles environment template creation by sending a request to the AWS service, processing input parameters, and returning structured output or specific error types. Operates with context objects, input records, and output records defined in the Smaws_Lib module. Used to provision environment templates with validation and error handling for AWS service interactions.",
      "description_length": 367,
      "index": 78,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironmentAccountConnection",
      "description": "Handles the creation of an account connection within an environment by sending a structured request. It operates on context data and input parameters specific to environment account configurations. Used to establish controlled access between environments and accounts in AWS-based systems.",
      "description_length": 289,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironment",
      "description": "Handles environment creation requests by validating input and interacting with underlying systems, returning detailed outcomes or specific AWS-related exceptions. Operates on context objects and structured input data representing environment configuration. Used to provision new environments in cloud infrastructure with error handling for common deployment issues.",
      "description_length": 365,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateComponent",
      "description": "Handles component creation requests by validating input and interacting with underlying systems, returning detailed outcomes or specific error conditions. Operates on context objects and structured input data to produce output containing component identifiers and metadata. Used to enforce business rules and system constraints during the setup of new components in a controlled environment.",
      "description_length": 391,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CancelServicePipelineDeployment",
      "description": "Handles the initiation of service pipeline cancellation by accepting a context and input parameters, returning a result that includes either a success response or specific AWS-related error types. Operates with custom record types for input and output, along with error variants defined in the Smaws_Lib.Protocols.AwsJson module. Used to manage deployment rollbacks in cloud infrastructure workflows where access control and resource validation are critical.",
      "description_length": 458,
      "index": 82,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.CancelServiceInstanceDeployment",
      "description": "Handles the cancellation of a service instance deployment by sending a request to the underlying system, processing input parameters, and returning a result with specific error types. Operates on context objects and structured input/output records related to deployment operations. Used to terminate ongoing deployment processes in cloud infrastructure workflows.",
      "description_length": 363,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CancelEnvironmentDeployment",
      "description": "Handles the cancellation of an environment deployment by sending a request to the underlying system, processing input parameters, and returning a result with specific error types. Operates on context data, input structures, and output responses tied to environment deployment workflows. Used to gracefully terminate ongoing deployment processes in cloud infrastructure management.",
      "description_length": 380,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CancelComponentDeployment",
      "description": "Handles cancellation of component deployments by sending a request to the underlying system, validating input, and returning structured output or specific error types. Operates on context objects, input records, and output records tied to deployment management. Used to abort ongoing deployment processes in response to user actions or system conditions.",
      "description_length": 354,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.AcceptEnvironmentAccountConnection",
      "description": "Handles the acceptance of an environment-account connection by sending a request to the appropriate service, incorporating context and input parameters. Operates with `Smaws_Lib.Context.t` and custom input/output types specific to environment-account interactions. Used to establish controlled access between environments and accounts in a managed infrastructure setup.",
      "description_length": 369,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.UpdateRoutingControlStates",
      "description": "Handles the submission of a request to update routing control states, returning a result that includes either a response or specific error conditions. Operates with context and custom request/response types tied to AWS JSON protocols. Used in scenarios requiring controlled state updates for routing configurations, such as managing traffic flow in distributed systems.",
      "description_length": 369,
      "index": 87,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.UpdateRoutingControlState",
      "description": "Handles the submission of a request to update routing control states, processing inputs such as context and specific control state configurations. Works with custom types like `update_routing_control_state_request` and `update_routing_control_state_response`, along with error variants for AWS-specific exceptions. Used to manage real-time adjustments in network routing configurations within a distributed system.",
      "description_length": 414,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.ListRoutingControls",
      "description": "Handles AWS API requests for retrieving routing control configurations, processing various error conditions specific to the service. Operates on context objects and request/response records defined in the Smaws_Lib framework. Used to fetch and validate routing control data in cloud infrastructure management workflows.",
      "description_length": 319,
      "index": 89,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.GetRoutingControlState",
      "description": "Handles AWS API requests to retrieve the current routing control state, including error handling for specific exception types. Operates with context objects and structured request/response types defined in the Smaws_Lib library. Used to monitor and validate the status of routing configurations in cloud infrastructure setups.",
      "description_length": 326,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateTimeToLive",
      "description": "Handles AWS DynamoDB update time-to-live requests by applying a specified TTL configuration to a table. Operates on context objects and input structures representing TTL settings, returning results or specific AWS-defined errors. Used to dynamically adjust data expiration policies in DynamoDB tables during runtime.",
      "description_length": 316,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateTableReplicaAutoScaling",
      "description": "Handles the configuration of auto-scaling for a DynamoDB table's global secondary index by sending a request with specified parameters. Operates on input and output records structured for DynamoDB's API, including error types specific to AWS operations. Used to dynamically adjust read/write capacity based on workload demands.",
      "description_length": 327,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateTable",
      "description": "Handles AWS DynamoDB update operations by sending requests with specified parameters and returning structured results. Operates on context objects and input records tailored for table updates. Processes scenarios like resource conflicts, invalid endpoints, and service errors with precise error handling.",
      "description_length": 304,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateKinesisStreamingDestination",
      "description": "Handles AWS Kinesis streaming destination updates by sending a request with context and input parameters, returning a result that includes either the output or specific error types. Operates on AWS context objects and structured input/output records related to Kinesis stream configurations. Used to modify streaming destinations in real-time data pipelines, ensuring alignment with updated processing requirements.",
      "description_length": 415,
      "index": 94,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateItem",
      "description": "Handles AWS DynamoDB update item requests by applying specified attribute updates, condition checks, and return values. Operates on context data, update input structures, and produces output with updated item data or specific error variants. Used to modify records in a DynamoDB table while enforcing conditional logic and handling service-specific exceptions.",
      "description_length": 360,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateGlobalTableSettings",
      "description": "Handles AWS DynamoDB global table settings updates by sending a request with context and input parameters. Operates on context objects, input records, and output structures specific to DynamoDB global table configurations. Processes exceptions related to table, index, and replica availability, as well as system errors and limits.",
      "description_length": 331,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateGlobalTable",
      "description": "Handles AWS DynamoDB global table updates by sending requests with context and input parameters, returning results or specific error types. Operates on context objects, update inputs, and structured outputs related to DynamoDB global tables. Used to manage table replication across regions, handle exceptions like missing tables or invalid endpoints, and ensure consistent updates.",
      "description_length": 381,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateContributorInsights",
      "description": "Handles AWS SageMaker UpdateContributorInsights requests by sending a structured input containing configuration details for updating model interpretability insights. Operates on custom record types representing input and output configurations for machine learning models. Used to dynamically adjust which features are analyzed for contribution to model predictions in real-time monitoring scenarios.",
      "description_length": 399,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateContinuousBackups",
      "description": "Handles AWS DynamoDB update continuous backups requests by sending a structured input and returning a result with specific error types. Operates on context objects and custom input/output records related to table backup configurations. Used to enable or disable continuous backups for a DynamoDB table in response to system events or user actions.",
      "description_length": 347,
      "index": 99,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context data and untag_resource_input structures to manage AWS resource tags. Processes specific error types such as invalid endpoints, resource not found, and internal server errors.",
      "description_length": 299,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.TransactWriteItems",
      "description": "Handles AWS DynamoDB transactional write operations by constructing and sending requests with specific input structures. Operates on typed inputs and outputs for DynamoDB transactions, including condition checks and item modifications. Used to perform batched, atomic writes across multiple tables within a single transaction.",
      "description_length": 326,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.TransactGetItems",
      "description": "Handles AWS DynamoDB `TransactGetItems` requests by serializing input and deserializing output, managing error responses specific to DynamoDB transactions. Operates with context, input records, and structured output containing item data or transaction-specific errors. Used to retrieve multiple items across tables in a single, atomic transaction with precise error handling for DynamoDB constraints.",
      "description_length": 400,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.TagResource",
      "description": "Handles AWS resource tagging by sending a request to associate tags with a specified resource. Operates on context and tag resource input structures, returning results or specific AWS-defined errors. Used to manage resource metadata in cloud environments where tag-based access control or resource organization is required.",
      "description_length": 323,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.Scan",
      "description": "Handles AWS DynamoDB scan requests with detailed error handling, including specific exception types like invalid endpoints and throughput limits. Operates on context objects and structured input/output records tailored for DynamoDB operations. Used to retrieve large datasets from DynamoDB tables while managing potential service-specific errors.",
      "description_length": 346,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.RestoreTableToPointInTime",
      "description": "Provides functions to initiate a table restoration to a specific point in time, handling various error conditions such as invalid restore times, table conflicts, and service unavailability. Operates with context objects and structured input/output types related to database restoration. Used to recover databases to a previous state following data corruption or accidental deletion.",
      "description_length": 382,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.RestoreTableFromBackup",
      "description": "Handles the initiation of restoring a database table from a backup, accepting context and input parameters to execute the restore process. Operates with custom exception types and response structures specific to AWS backup and table management. Used to recover tables in scenarios like data corruption or accidental deletion.",
      "description_length": 325,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.Query",
      "description": "Handles HTTP requests with detailed error handling for AWS services, including specific exceptions like endpoint and throughput errors. Operates on context objects and structured input/output types tailored for AWS API interactions. Used to send queries to AWS endpoints while managing various error conditions explicitly.",
      "description_length": 322,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.PutResourcePolicy",
      "description": "Handles AWS resource policy placement by accepting context and input parameters, returning outcomes tied to specific AWS service responses. Operates with custom types representing policy data, endpoints, and error conditions. Used to enforce access controls and manage policy assignments in distributed systems.",
      "description_length": 311,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.PutItem",
      "description": "Handles AWS DynamoDB `PutItem` requests by sending structured input and returning results with detailed error handling. Operates on `put_item_input` and `put_item_output` types, including specific exception types for DynamoDB operations. Used to insert or replace items in a DynamoDB table with conditional constraints and error reporting.",
      "description_length": 339,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListTagsOfResource",
      "description": "Provides functions to retrieve tags associated with a specific AWS resource, using a context and input parameters. Operates with AWS-specific types such as `list_tags_of_resource_input` and `list_tags_of_resource_output`, along with error types for service-specific exceptions. Used to fetch metadata tags for resources like EC2 instances or S3 buckets during infrastructure management tasks.",
      "description_length": 392,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListTables",
      "description": "Handles AWS DynamoDB list tables requests by accepting a context and input parameters, returning a structured output or specific error types. Operates with AWS context objects and custom input/output records for DynamoDB interactions. Used to retrieve table names from a DynamoDB instance in a controlled, error-aware manner.",
      "description_length": 325,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListImports",
      "description": "Handles AWS API requests for listing imports, processing input parameters, and returning structured output. Operates with context objects, input records, and error-specific types from the AWS JSON protocol. Used to retrieve import summaries from AWS services under specific account or region constraints.",
      "description_length": 304,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListGlobalTables",
      "description": "Handles AWS DynamoDB global table listing by sending a request with context and input parameters, returning a result containing output or specific error types. Operates with AWS context, input records, and output structures defined by the Smaws_Lib library. Used to retrieve a list of global tables in a DynamoDB environment, supporting error handling for service-specific exceptions.",
      "description_length": 384,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListExports",
      "description": "Handles AWS API requests to list exports, processing input parameters and returning structured output. Operates with context objects, input records, and error types specific to AWS services. Used to retrieve export metadata and manage service-specific exceptions during API calls.",
      "description_length": 280,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListContributorInsights",
      "description": "Provides operations to fetch contributor insights from a system, accepting a context and input parameters. Works with types such as `Smaws_Lib.Context.t`, `list_contributor_insights_input`, and `list_contributor_insights_output`. Used to retrieve detailed analytics about user or system contributions in a specific session or dataset.",
      "description_length": 334,
      "index": 115,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListBackups",
      "description": "Handles AWS S3 backup listing by sending a request with context and input parameters, returning a result containing backup metadata or specific error types. Operates on AWS context objects and structured input/output records for backup operations. Used to retrieve a list of backups from a specified endpoint, handling errors like invalid endpoints or server issues.",
      "description_length": 366,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ImportTable",
      "description": "Handles AWS import table requests with context, processing input to generate output. Operates on custom types representing import configurations and error responses. Used to manage table imports while handling specific AWS exceptions like conflicts, limits, and resource usage.",
      "description_length": 277,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.GetResourcePolicy",
      "description": "Handles AWS service policy retrieval by sending a structured request with context and input parameters, returning a result that includes policy data or specific error conditions. Operates with context objects, input records containing resource identifiers, and output records encapsulating policy details. Used to fetch IAM or service-linked policy information during infrastructure validation or access control checks.",
      "description_length": 419,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.GetItem",
      "description": "Requests a specific item from a data store using a provided context and input parameters. It operates on context objects and structured input and output records specific to the service's API. It handles various error conditions such as invalid endpoints, throughput limits, and resource not found scenarios.",
      "description_length": 307,
      "index": 119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ExportTableToPointInTime",
      "description": "Handles the creation of a point-in-time recovery export for a database table, accepting context and input parameters to initiate the process. Operates on database table identifiers and timestamp-based recovery points. Used to generate a snapshot of a table's state at a specific moment for backup or auditing purposes.",
      "description_length": 318,
      "index": 120,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ExecuteTransaction",
      "description": "Handles transaction execution by sending a request with context and input, returning a result that includes either the output or specific error types related to AWS DynamoDB transactions. Operates on context objects, transaction input records, and structured error variants. Used to manage distributed transactions with precise error handling for conditions like resource not found, transaction in progress, or throughput limits.",
      "description_length": 429,
      "index": 121,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ExecuteStatement",
      "description": "Handles AWS DynamoDB `ExecuteStatement` requests by sending a query to a database and returning the result or specific error types. Operates on context data and input structures representing database queries. Used to execute SQL-like statements in a DynamoDB table with precise error handling for database-specific exceptions.",
      "description_length": 326,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.EnableKinesisStreamingDestination",
      "description": "Handles AWS Kinesis streaming destination requests by sending configured input parameters and returning structured output or specific error types. Operates on custom types representing AWS context, input configurations, and output responses. Used to dynamically enable streaming destinations for data sources in distributed systems.",
      "description_length": 332,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DisableKinesisStreamingDestination",
      "description": "Handles AWS Kinesis streaming destination disable requests by processing input configurations and returning structured outputs. Operates on custom types representing AWS JSON protocols, error responses, and service-specific exceptions. Used to manage Kinesis stream disconnections in real-time data processing pipelines.",
      "description_length": 320,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeTimeToLive",
      "description": "Handles AWS DynamoDB `DescribeTimeToLive` requests by accepting a context and input parameters, returning structured output or specific error variants. Operates with AWS context objects, input records, and output structures tailored to DynamoDB's TTL configuration. Used to retrieve time-to-live settings for a specific DynamoDB table in an AWS environment.",
      "description_length": 357,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeTableReplicaAutoScaling",
      "description": "Provides operations to request and retrieve details about the auto-scaling configuration of a DynamoDB table replica, using a context and input parameters. Works with AWS JSON protocol types and error variants specific to DynamoDB. Used to monitor and manage replica auto-scaling settings in distributed database systems.",
      "description_length": 321,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeTable",
      "description": "Handles AWS DynamoDB `DescribeTable` requests by accepting a context and input parameters, returning detailed table metadata or specific error types. Operates with AWS context objects and structured input/output records aligned with DynamoDB's API. Used to retrieve configuration and status information for a specified database table during system diagnostics or configuration validation.",
      "description_length": 388,
      "index": 127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeLimits",
      "description": "Handles AWS EC2 describe-limits requests by processing context and input parameters, returning structured outputs or specific error types. Operates with AWS context objects and custom input/output records for EC2 limit data. Used to retrieve account-specific service limits and handle AWS-specific error responses during API calls.",
      "description_length": 331,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeKinesisStreamingDestination",
      "description": "Handles AWS Kinesis streaming destination description requests by accepting a context and input parameters, returning structured output or specific error variants. Operates with AWS context objects, input records, and custom error types related to Kinesis resources. Used to retrieve detailed configuration information for Kinesis streaming destinations in distributed data pipelines.",
      "description_length": 384,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeImport",
      "description": "Handles AWS EC2 import requests by validating context and input, returning structured outputs or specific errors like import not found. Operates with context objects and custom input/output types tied to EC2 import workflows. Used to initiate and manage virtual machine image imports within cloud infrastructure pipelines.",
      "description_length": 322,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeGlobalTableSettings",
      "description": "Handles AWS DynamoDB global table settings retrieval by sending a describe request with context and input parameters. Operates on context objects, input records, and output records specific to DynamoDB global tables. Used to fetch configuration details for a global table when dealing with cross-region replication setups.",
      "description_length": 322,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeGlobalTable",
      "description": "Handles AWS DynamoDB global table description by sending a request with context and input parameters, returning structured output or specific error variants. Operates with context objects, input records, and output records tailored to DynamoDB's global table API. Used to retrieve detailed configuration and status information for a specified global table in a distributed database setup.",
      "description_length": 388,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeExport",
      "description": "Handles AWS EC2 export requests by validating context and input, then returning structured outputs or specific error types. Operates with context objects, export input records, and custom error variants. Used to manage EC2 instance export workflows and error reporting in cloud infrastructure pipelines.",
      "description_length": 303,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeEndpoints",
      "description": "Handles AWS EC2 describe-endpoints requests by sending structured JSON payloads and parsing corresponding responses. Operates with context objects, request records, and response records specific to EC2 endpoint metadata. Used to retrieve detailed information about available EC2 service endpoints in a given region.",
      "description_length": 315,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeContributorInsights",
      "description": "Handles AWS Chime SDK messaging requests to retrieve contributor insights, accepting context and input parameters. Operates with AWS JSON protocol types and error structures specific to the service. Used to analyze participant interactions in real-time messaging sessions.",
      "description_length": 272,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeContinuousBackups",
      "description": "Handles AWS DynamoDB continuous backups description by sending a request with context and input parameters, returning detailed backup information or specific error types. Operates with AWS context, input records, and output structures related to table backups. Used to check backup status and configuration for a given DynamoDB table.",
      "description_length": 334,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeBackup",
      "description": "Handles AWS DescribeBackup requests by validating context, parsing input, and returning structured output or specific error variants such as backup not found, internal server error, or invalid endpoint. Operates on AWS context objects and custom input/output records for EC2 backups. Used to retrieve detailed backup information from AWS services with precise error handling.",
      "description_length": 375,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteTable",
      "description": "Handles AWS DynamoDB table deletion requests by validating context and input parameters, then executing the deletion operation. Operates on context objects, input records, and output structures specific to DynamoDB's API. Used to safely remove tables while managing AWS-specific error conditions like resource not found or in use.",
      "description_length": 330,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteResourcePolicy",
      "description": "Handles AWS resource policy deletion by processing context and input parameters, returning outcomes or specific error types related to policy and resource states. Operates with AWS JSON protocol errors and custom exception types for invalid operations. Used to safely remove policies from resources while handling known AWS service exceptions.",
      "description_length": 343,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteItem",
      "description": "Handles deletion of items from a data store by sending a request with specified parameters. Operates on context objects and structured input containing item identifiers and conditions. Used to remove specific records while enforcing constraints and handling AWS-specific error conditions during the process.",
      "description_length": 307,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteBackup",
      "description": "Handles deletion requests for backups by interacting with AWS services, processing input parameters, and returning structured outputs or specific error conditions. Operates on custom record types representing backup inputs and outputs, along with AWS-specific error types. Used to safely remove backups while handling exceptions such as invalid endpoints, server errors, or missing backups.",
      "description_length": 390,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.CreateTable",
      "description": "Handles AWS DynamoDB table creation requests by validating input parameters, sending JSON-based API calls, and parsing responses. Operates on context objects, table creation inputs, and structured error types specific to DynamoDB. Used to initialize database tables with defined key schemas and provisioned throughput in distributed applications.",
      "description_length": 346,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.CreateGlobalTable",
      "description": "Handles the creation of a global DynamoDB table by sending a request with specified input parameters. Operates on context objects and custom input/output types specific to the DynamoDB global table API. Manages error cases such as existing tables, server errors, and invalid endpoints.",
      "description_length": 285,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.CreateBackup",
      "description": "Handles backup creation requests by interacting with a database context, validating input, and returning structured outputs or specific error conditions. Operates on context objects and input records related to database tables and backups. Used to initiate backups while managing exceptions such as table in use, backup in use, or service unavailability.",
      "description_length": 354,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.BatchWriteItem",
      "description": "Handles AWS DynamoDB batch write operations by constructing and sending requests with detailed error handling. Operates on input structures representing items to insert or delete and returns output containing operation results. Used to efficiently update multiple items across tables in a single API call, ensuring atomicity and error tracking for specific DynamoDB exceptions.",
      "description_length": 377,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.BatchGetItem",
      "description": "Handles AWS DynamoDB BatchGetItem requests by constructing and sending HTTP queries with specified input parameters. Operates on context objects, input records, and error types defined by the AWS JSON protocol. Used to retrieve multiple items from a DynamoDB table in a single API call, handling specific error conditions during execution.",
      "description_length": 339,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.BatchExecuteStatement",
      "description": "Handles AWS Athena batch execution requests by sending structured SQL statements and returning results or specific error types. Operates with context objects and custom input/output records tailored for Athena's API. Processes large-scale query batches, supporting error handling for service limits and internal server issues.",
      "description_length": 326,
      "index": 147,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.VerifyTrust",
      "description": "Handles trust verification requests by validating entities and their relationships against defined policies. Operates on context objects and structured request data to produce verification outcomes. Used to enforce access control and ensure compliance with trust boundaries in distributed systems.",
      "description_length": 297,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateTrust",
      "description": "Handles AWS JSON-based trust updates by sending a request and returning structured results or specific error types. Operates with context objects and custom exception types derived from AWS protocols. Used to manage trust relationships in cloud infrastructure with precise error handling.",
      "description_length": 288,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateSettings",
      "description": "Handles the request to update settings in a directory service, returning a result or specific error types related to directory configuration. Operates with context and custom exception types derived from AWS JSON protocol. Used to modify directory attributes with validation and error handling for incompatible or unsupported settings.",
      "description_length": 335,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateRadius",
      "description": "Handles RADIUS server configuration updates by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types related to RADIUS settings. Used to modify network access parameters in a controlled, error-aware manner.",
      "description_length": 293,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateNumberOfDomainControllers",
      "description": "Handles the adjustment of domain controller counts in a directory service by processing a structured request and returning a result or specific error conditions. Operates on context objects and custom request/response types tied to directory management. Used to dynamically scale domain controller resources in response to operational demands.",
      "description_length": 343,
      "index": 152,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateDirectorySetup",
      "description": "Handles the request to update a directory's setup by validating parameters, checking directory state, and applying configuration changes. Operates on context objects and structured request data to produce a result or specific error types. Used to modify directory attributes in a managed service, ensuring compliance with system constraints and operational policies.",
      "description_length": 366,
      "index": 153,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateConditionalForwarder",
      "description": "Handles AWS directory service updates by sending conditional forwarder requests. Operates on context objects and specific request/response types related to directory configurations. Used to modify DNS forwarder settings under defined conditions in a directory service environment.",
      "description_length": 280,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UnshareDirectory",
      "description": "Handles the request to unshare a directory with specific targets, validating permissions and ensuring the directory is currently shared. Operates on context objects, request structures, and various exception types related to directory sharing. Used to revoke access for defined targets in a controlled, error-checked manner.",
      "description_length": 324,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.StartSchemaExtension",
      "description": "Handles the initiation of schema extensions in a directory service, accepting a context and a request structure to return a result or specific error types. Operates with custom exception types and a structured request format tied to directory operations. Used to extend directory schemas while managing detailed error conditions during the process.",
      "description_length": 348,
      "index": 156,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ShareDirectory",
      "description": "Handles sharing of directories by sending a request with context and a specific request structure, returning a result or a variety of custom exceptions. Operates with `Smaws_Lib.Context.t` and a structured request type for directory sharing. Used to manage cross-account directory sharing in AWS environments, ensuring proper error handling for access and configuration issues.",
      "description_length": 377,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RestoreFromSnapshot",
      "description": "Handles the initiation of restoring a system state from a saved snapshot, accepting a context and a request structure to execute the operation. It operates on custom request and result types specific to the restore process. Used to recover data integrity after system failures or data corruption.",
      "description_length": 296,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ResetUserPassword",
      "description": "Handles password reset initiation by validating user identity and generating a reset token. Operates on user authentication data and system-specific exceptions. Used to process password reset requests in user management workflows.",
      "description_length": 230,
      "index": 159,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RemoveTagsFromResource",
      "description": "Removes specified tags from a resource using an AWS-compatible request structure. It processes requests containing resource identifiers and tag keys, returning results or specific error types related to tag operations. This function is used in scenarios where resource metadata needs to be cleaned or updated in a controlled manner.",
      "description_length": 332,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RemoveRegion",
      "description": "Handles removal of specified regions from a directory structure, processing requests and returning results or specific error conditions. Operates on context objects and custom request/response types tied to directory management. Used to enforce policy by eliminating regions in cloud infrastructure setups.",
      "description_length": 306,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RemoveIpRoutes",
      "description": "Handles AWS API requests to remove IP routes from a directory service. Operates on context objects and structured request data, returning results or specific exception types based on API responses. Used to manage network configurations in distributed systems requiring precise route control.",
      "description_length": 291,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RejectSharedDirectory",
      "description": "Handles AWS directory rejection requests by validating context, checking directory status, and returning specific error or success outcomes. Operates on AWS context objects and structured request/response types related to directory sharing. Used to prevent unauthorized or duplicate directory sharing attempts in cloud infrastructure workflows.",
      "description_length": 344,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RegisterEventTopic",
      "description": "Handles AWS SNS register event topic requests by validating input, interacting with the SNS service, and returning structured results or specific error types. Operates on context objects, request records, and custom exception types derived from AWS protocol standards. Used to dynamically register event sources to topics in distributed messaging systems.",
      "description_length": 355,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RegisterCertificate",
      "description": "Handles certificate registration by sending a request to a service, returning detailed results or specific error conditions such as existing certificates, parameter issues, or service failures. Operates with context data and structured request/response types related to certificate management. Used to validate and submit certificate information within a directory service workflow.",
      "description_length": 382,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListTagsForResource",
      "description": "Handles AWS service requests to retrieve tags associated with a specific resource. Operates on structured request and response types, including error variants specific to AWS operations. Used to fetch metadata tags for resources like EC2 instances or S3 buckets during infrastructure management workflows.",
      "description_length": 305,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListSchemaExtensions",
      "description": "Handles retrieval of schema extensions from a service, accepting a context and request parameters. Operates on custom exception types and result structures specific to the AWS JSON protocol. Used to fetch paginated schema extension data in a distributed system.",
      "description_length": 261,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListLogSubscriptions",
      "description": "Handles AWS CloudWatch Logs list log subscriptions requests, processing context and returning results or specific error types. Operates with AWS context objects and subscription request parameters. Used to retrieve paginated lists of log subscriptions in a CloudWatch Logs environment.",
      "description_length": 285,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListIpRoutes",
      "description": "Handles AWS API requests to retrieve IP route information, processing raw JSON responses into structured results. Operates on context objects and custom request/response types specific to the AWS API. Used to fetch and parse route table data from cloud infrastructure services.",
      "description_length": 277,
      "index": 169,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListCertificates",
      "description": "Handles AWS Certificate Manager (ACM) list certificate operations by sending requests and returning results along with specific error variants. Operates on context objects and request structures tailored for ACM interactions. Used to retrieve certificate summaries from AWS, supporting pagination and error handling for directory and parameter validation.",
      "description_length": 355,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.GetSnapshotLimits",
      "description": "Handles AWS EC2 snapshot limit requests by validating context and processing specific input structures. Operates on AWS context objects and custom request/response types for snapshot limits. Used to retrieve account-specific snapshot constraints before creating new snapshots.",
      "description_length": 276,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.GetDirectoryLimits",
      "description": "Provides functions to request and handle responses for directory limits in a cloud service, using context and specific request types. Works with custom types such as `get_directory_limits_request` and `get_directory_limits_result`, along with error variants for client, service, and entity-related issues. Used to retrieve and manage resource constraints for directory operations in distributed systems.",
      "description_length": 403,
      "index": 172,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableSso",
      "description": "Handles SSO enablement requests by validating context and processing specific input structures, returning results or detailed error types. Operates with context objects and structured request data to manage authentication and permissions. Used to initiate SSO configuration flows with explicit error handling for common AWS-related failures.",
      "description_length": 341,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableRadius",
      "description": "Handles AWS RADIUS enablement requests by validating context and parameters, then executing the operation with specific error handling for AWS service responses. Operates on `Smaws_Lib.Context.t` and custom request/response types derived from AWS JSON protocols. Used to activate RADIUS authentication for user pools, ensuring proper error reporting for existing or invalid configurations.",
      "description_length": 389,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableLDAPS",
      "description": "Handles LDAP over SSL configuration requests for directories, returning results or specific error conditions. Operates on context objects and request structures related to directory services. Used to validate and apply LDAP over SSL settings in cloud directory management systems.",
      "description_length": 280,
      "index": 175,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableClientAuthentication",
      "description": "Handles authentication requests for client devices by validating credentials and checking directory status. Operates on context objects and custom request/response types specific to AWS authentication workflows. Used to enforce access policies and manage client authentication states in distributed systems.",
      "description_length": 307,
      "index": 176,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableSso",
      "description": "Handles SSO disablement requests by validating context and processing specific input structures, returning results or detailed error types. Operates with context objects and structured request/response types tied to SSO management. Used to enforce policy changes by rejecting SSO access for configured identities.",
      "description_length": 313,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableRadius",
      "description": "Handles AWS RADIUS disable requests by validating context and parameters, then executing the operation with specific error handling for client, service, and entity-related issues. Operates on AWS context objects and custom request/response types tied to RADIUS configuration. Used to programmatically disable RADIUS authentication for AWS accounts within a controlled, error-aware workflow.",
      "description_length": 390,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableLDAPS",
      "description": "Handles LDAP secure connection status updates for directories, processing requests and returning results or specific error conditions. Operates on context objects and custom request/response types related to directory services. Used to enforce or disable LDAPS in managed directory environments, validating inputs and reporting operational constraints.",
      "description_length": 352,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableClientAuthentication",
      "description": "Handles AWS requests to disable client authentication in a directory, processing specific request types and returning results or detailed error variants. Operates with context objects and custom exception types derived from AWS protocol definitions. Used to enforce access control policies in directory services by modifying authentication settings.",
      "description_length": 349,
      "index": 180,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeUpdateDirectory",
      "description": "Handles AWS DescribeUpdateDirectory requests by validating context, parsing input, and returning structured results. Operates on AWS context objects and specific request/response types defined in the Smaws_Lib framework. Used to retrieve detailed information about directory updates in AWS environments.",
      "description_length": 303,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeTrusts",
      "description": "Handles AWS STS \"DescribeTrustedAccounts\" requests by validating input, processing pagination tokens, and returning detailed trust information. Operates on context objects, request records, and custom exception types specific to AWS STS interactions. Used to retrieve and filter trust relationships in federated environments.",
      "description_length": 325,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeSnapshots",
      "description": "Provides functions to request and handle responses for describing AWS EC2 snapshots, including error handling for specific exception types. Operates with context objects and structured request/response types related to snapshot metadata. Used to retrieve detailed information about snapshots in a controlled, error-aware manner.",
      "description_length": 328,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeSharedDirectories",
      "description": "Handles AWS EC2 describe-shared-directories API requests, processing context and parameters to retrieve directory information. Operates with context objects, request records, and result types specific to AWS EC2. Used to fetch details of shared directories in an AWS account, validating tokens and parameters against service constraints.",
      "description_length": 337,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeSettings",
      "description": "Handles AWS DescribeSettings requests by validating context, parsing input, and returning structured results. Operates on custom exception types and AWS JSON error formats. Used to retrieve and process configuration details from a directory service.",
      "description_length": 249,
      "index": 185,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeRegions",
      "description": "Handles AWS EC2 describe-regions API requests, processing context and parameters to retrieve region information. Operates with custom exception types and result structures specific to AWS JSON responses. Used to fetch and validate region data in cloud management workflows.",
      "description_length": 273,
      "index": 186,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeLDAPSSettings",
      "description": "Handles AWS Directory Service requests to retrieve LDAP settings for a directory, returning detailed configuration data or specific error conditions. Operates on context objects and request structures specific to AWS API interactions. Used to diagnose directory connectivity issues or verify LDAP configuration compliance.",
      "description_length": 322,
      "index": 187,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeEventTopics",
      "description": "Handles AWS EventBridge event topic description requests, processing context and parameters to retrieve detailed topic information. Operates with AWS JSON protocol structures and custom exception types for error handling. Used to fetch metadata about specific event topics in an AWS environment.",
      "description_length": 295,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeDomainControllers",
      "description": "Handles AWS EC2 DescribeDomainControllers API requests, processing context and request parameters to retrieve domain controller information. Operates on custom request and result types specific to AWS EC2 domain controller queries. Manages error cases such as invalid tokens, missing entities, and service exceptions during domain controller enumeration.",
      "description_length": 354,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeDirectories",
      "description": "Provides functions to request and handle responses for describing directories, working with context and custom exception types. Processes structured data including directory identifiers and pagination tokens. Used to retrieve detailed directory information from a service, handling specific error conditions during the request.",
      "description_length": 327,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeConditionalForwarders",
      "description": "Handles AWS Directory Service requests to describe conditional forwarders, processing context and request parameters to return detailed results or specific error conditions. Operates with context objects, request records, and custom exception types related to directory services. Used to retrieve configuration details about DNS forwarders in managed Microsoft Active Directory environments.",
      "description_length": 391,
      "index": 191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeClientAuthenticationSettings",
      "description": "Handles AWS Directory Service requests to retrieve client authentication settings, including error handling for specific exceptions. Operates on context objects and request structures specific to AWS JSON protocols. Used to configure and validate client authentication parameters in directory services.",
      "description_length": 302,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeCertificate",
      "description": "Handles AWS certificate description requests by sending a structured query and returning detailed certificate information or specific error conditions. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to retrieve certificate metadata in AWS directory services interactions.",
      "description_length": 337,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeregisterEventTopic",
      "description": "Handles AWS SNS event deregistration by sending a request to remove a topic subscription. Operates on context objects and specific request/response types tied to SNS operations. Processes errors such as invalid parameters, missing entities, and service exceptions during the deregistration process.",
      "description_length": 298,
      "index": 194,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeregisterCertificate",
      "description": "Handles the removal of an SSL certificate from a managed service, accepting a context and request structure to execute the operation. Works with specific AWS protocol types and error variants related to certificate management. Used to cleanly decommission certificates that are no longer needed or have expired.",
      "description_length": 311,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteTrust",
      "description": "Handles deletion requests for trust relationships by validating input, checking existence, and executing removal. Operates on context objects and structured request data, returning detailed results or specific exception types. Used to manage trust configurations in AWS services with precise error handling.",
      "description_length": 307,
      "index": 196,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteSnapshot",
      "description": "Handles deletion requests for snapshots by validating parameters, checking existence, and interacting with the underlying service. Operates on context objects, delete snapshot requests, and returns results or specific exception types. Used to safely remove snapshots while managing errors like invalid parameters or non-existent entities.",
      "description_length": 338,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteLogSubscription",
      "description": "Handles AWS CloudWatch Logs subscription deletion requests by validating context, processing the request, and returning results or specific error types. Operates with AWS context objects and structured request/response types related to log subscriptions. Used to safely remove log subscriptions in cloud monitoring workflows, ensuring proper error handling for service-specific exceptions.",
      "description_length": 389,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteDirectory",
      "description": "Handles directory deletion requests by interacting with a context object, processing specific request structures, and returning results or detailed error types. Operates with custom request and result types, along with AWS-specific error representations. Used to remove directories in a system where validation and error reporting are critical.",
      "description_length": 344,
      "index": 199,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteConditionalForwarder",
      "description": "Handles AWS DeleteConditionalForwarder requests by validating and processing domain deletion based on specific conditions. Operates on context objects and structured request data to enforce domain ownership and configuration checks. Used to safely remove DNS forwarders in managed directory services while preventing unauthorized or malformed deletions.",
      "description_length": 353,
      "index": 200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateTrust",
      "description": "Handles trust creation requests by validating input, checking existing entities, and interacting with AWS services. Operates on context objects and custom exception types to manage errors and results. Used to establish trust relationships in a secure, controlled manner within a distributed system.",
      "description_length": 298,
      "index": 201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateSnapshot",
      "description": "Handles snapshot creation requests by validating input parameters and interacting with the underlying system. Operates on context objects and structured request data to generate snapshot results. Used to initiate snapshot processes in cloud storage systems with explicit error handling for specific failure scenarios.",
      "description_length": 317,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateMicrosoftAD",
      "description": "Handles the creation of a Microsoft Active Directory in AWS, accepting a context and a request structure, and returning a result or specific error types. Operates with AWS context data and custom request/response types for directory setup. Used to programmatically provision directories within AWS Managed Microsoft AD services.",
      "description_length": 328,
      "index": 203,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateLogSubscription",
      "description": "Handles AWS CloudWatch Logs subscription creation by sending a request and returning a result or specific error types. Operates with context and structured request data to manage log stream subscriptions. Used to set up real-time log data forwarding with precise error handling for AWS service interactions.",
      "description_length": 307,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateDirectory",
      "description": "Handles directory creation requests by validating input parameters, checking resource limits, and interacting with AWS services. Operates on context objects and structured request data to produce results or specific error types. Used to enforce AWS directory constraints and manage client-side validation before initiating directory setup.",
      "description_length": 339,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateConditionalForwarder",
      "description": "Handles AWS request for creating a conditional forwarder by validating input and interacting with directory services. Operates on context objects and structured request data to produce results or specific exception types. Used to manage DNS domain forwarding configurations in directory services with precise error handling.",
      "description_length": 324,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateComputer",
      "description": "Handles the creation of computer entities by validating input parameters, authenticating requests, and interacting with underlying systems. Operates on context objects and structured request data to produce results or specific error types. Used to manage user-initiated computer provisioning with detailed error reporting for operational failures.",
      "description_length": 347,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateAlias",
      "description": "Handles alias creation requests by validating input, checking existing entities, and returning specific results or detailed error conditions. Operates on context objects, request records, and custom exception types related to AWS services. Used to manage unique identifier mappings in distributed systems with strict error reporting.",
      "description_length": 333,
      "index": 208,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ConnectDirectory",
      "description": "Handles AWS Directory Service connection requests, processing parameters like directory ID and region to establish or manage directory connections. Operates with context objects, request records, and custom exception types specific to AWS directory operations. Used to validate and execute directory connection setups in cloud infrastructure workflows.",
      "description_length": 352,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CancelSchemaExtension",
      "description": "Handles cancellation of schema extensions by sending a request to the service, processing the response, and returning specific error types. Operates with context objects, request records, and custom exception types. Used to abort ongoing schema modifications in a controlled manner.",
      "description_length": 282,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AddTagsToResource",
      "description": "Handles AWS API requests to add tags to resources, processing structured input and returning results or specific error types. Operates with context objects, tag data, and resource identifiers. Used to manage resource metadata in cloud infrastructure workflows.",
      "description_length": 260,
      "index": 211,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AddRegion",
      "description": "Handles the creation of a new region association for a directory, accepting a context and a request structure. Processes various error conditions specific to directory and region management, including access issues, invalid parameters, and service limitations. Used in scenarios where a directory must be linked to a new geographic region within a managed service.",
      "description_length": 364,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AddIpRoutes",
      "description": "Handles the creation of IP routes by sending a structured request to a network management system. Operates on custom request and result types specific to IP route configuration. Used to programmatically add routes to a virtual private cloud, ensuring network connectivity between subnets.",
      "description_length": 288,
      "index": 213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AcceptSharedDirectory",
      "description": "Handles the request to accept a shared directory by validating parameters, checking directory existence, and managing shared state. Operates with context objects, request records, and custom exception types. Used to process incoming accept shared directory actions in a distributed system.",
      "description_length": 289,
      "index": 214,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdateService",
      "description": "Handles AWS JSON-based update requests by validating input, checking for duplicates, and interacting with specific services. Operates on context objects, update requests, and error types specific to service updates. Used to process and respond to service modification attempts with precise error handling.",
      "description_length": 305,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdatePublicDnsNamespace",
      "description": "Handles DNS namespace updates by sending requests to AWS Route 53, processing responses, and managing specific error conditions. Operates with context objects, request records, and custom error types derived from AWS JSON protocols. Used to modify public DNS namespaces in cloud infrastructure deployments.",
      "description_length": 306,
      "index": 216,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdatePrivateDnsNamespace",
      "description": "Handles the submission of a request to update a private DNS namespace in AWS Route 53, processing input parameters and returning a structured response. Operates with specific AWS request and response types, including error variants for duplicate requests, invalid inputs, and resource states. Used to modify DNS namespace configurations in cloud infrastructure management workflows.",
      "description_length": 382,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdateInstanceCustomHealthStatus",
      "description": "Handles the request to update the custom health status of an EC2 instance, validating input and interacting with AWS services. Operates on specific request records and error types related to instance and service existence, input validity, and custom health configuration. Used to dynamically adjust health states for instance monitoring and load balancing decisions.",
      "description_length": 366,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdateHttpNamespace",
      "description": "Handles HTTP namespace updates by sending requests and returning structured responses. Operates with context objects, request records, and custom error types specific to namespace management. Used to validate and apply namespace changes in distributed systems.",
      "description_length": 260,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UntagResource",
      "description": "Handles AWS resource untagging by accepting a context and an untag request, returning a response or specific error types. Operates with AWS JSON protocol structures and custom exception types for invalid inputs and missing resources. Used to remove tags from AWS resources like EC2 instances or S3 buckets through direct API interaction.",
      "description_length": 337,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.TagResource",
      "description": "Handles AWS resource tagging requests by validating input, checking resource existence, and managing tag limits. Operates on context objects, tag resource requests, and various error types specific to AWS tagging operations. Used to associate tags with AWS resources while enforcing service constraints and error handling.",
      "description_length": 322,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.RegisterInstance",
      "description": "Handles AWS EC2 register-instance requests by validating input, checking resource availability, and managing duplicate submissions. Operates on context objects, request payloads, and structured error types specific to AWS JSON protocols. Used to register on-premises instances with AWS EC2, ensuring proper error handling for invalid or conflicting registrations.",
      "description_length": 363,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on structured request and response types defined for the ListTagsForResource operation. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 255,
      "index": 223,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListServices",
      "description": "Handles AWS service listing requests by processing context and input parameters, returning structured responses or specific error types. Operates with AWS context objects and custom request/response types derived from protocol definitions. Used to retrieve available AWS service information in a controlled, error-aware manner.",
      "description_length": 327,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListOperations",
      "description": "Handles HTTP request parsing and validation for list operations, processing structured input and returning typed responses. Operates on context objects and custom request/response types specific to the service. Used to manage resource listings with error handling for invalid inputs and protocol errors.",
      "description_length": 303,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListNamespaces",
      "description": "Handles AWS S3 namespace listing by sending a request with context and a specific request structure, returning a response or error. Operates on `Smaws_Lib.Context.t` and custom request/response types for S3 operations. Used to retrieve available namespaces in an S3-compatible storage system.",
      "description_length": 292,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListInstances",
      "description": "Handles AWS EC2 instance listing by sending a structured request and returning a typed response. Processes context and specific request parameters to retrieve instance data. Returns detailed results or specific error types including invalid input and service not found.",
      "description_length": 269,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetService",
      "description": "Handles HTTP GET requests for service information, processing context and request parameters to return structured responses or specific error types. Operates with custom request and response records, along with error variants for invalid input and missing services. Used to retrieve service metadata in distributed system interactions.",
      "description_length": 335,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetOperation",
      "description": "Handles HTTP GET requests by parsing input parameters, validating operation identifiers, and returning structured responses. Operates on context objects, request records, and custom error types derived from AWS JSON protocols. Used to retrieve specific resource states or configurations from a service endpoint.",
      "description_length": 311,
      "index": 229,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetNamespace",
      "description": "Handles AWS service requests to retrieve namespace information, processing input parameters and returning structured responses or specific error types. Operates with context objects, custom request records, and response types defined in the Smaws_Lib framework. Used to fetch namespace details from an API, validating inputs and handling known error conditions like invalid input or missing namespaces.",
      "description_length": 402,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetInstancesHealthStatus",
      "description": "Handles AWS Elastic Load Balancing instance health status requests, processing input parameters and returning detailed health responses. Operates with context objects, request records, and specific error types related to instances and services. Used to monitor and validate the health of EC2 instances within a load-balanced environment.",
      "description_length": 337,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetInstance",
      "description": "Requests an instance from a service, handling specific error conditions such as missing instances, invalid input, or unavailable services. Operates on context objects and custom request/response types derived from AWS JSON protocols. Used to retrieve configured instance details in distributed system interactions.",
      "description_length": 314,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DiscoverInstancesRevision",
      "description": "Handles AWS EC2 instance discovery with revision-based querying. Processes context and request parameters to retrieve instance data, supporting error handling for invalid inputs, missing namespaces, and service issues. Utilizes specific AWS JSON protocols and custom error types for precise response management.",
      "description_length": 311,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DiscoverInstances",
      "description": "Handles AWS EC2 instance discovery by sending a structured request and returning detailed responses. Processes context and specific request types, returning results with custom error variants. Used to retrieve instance information from a service namespace within a defined AWS environment.",
      "description_length": 289,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DeregisterInstance",
      "description": "Handles the deregistration of an EC2 instance by sending a request to an AWS service, validating input, and managing error responses such as duplicate requests, missing instances, or invalid inputs. Operates on structured request and response types specific to the AWS EC2 API. Used to cleanly remove instances from a load balancer or service registry during shutdown or maintenance.",
      "description_length": 383,
      "index": 235,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DeleteService",
      "description": "Handles deletion requests for services by validating input, checking resource availability, and returning structured responses. Operates on context objects, delete service requests, and error-specific types like invalid input and resource conflicts. Used to safely remove services while ensuring system consistency and proper error reporting.",
      "description_length": 342,
      "index": 236,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DeleteNamespace",
      "description": "Handles deletion requests for namespaces by validating input, checking existence, and ensuring no dependent resources are in use. Operates on context objects, delete namespace requests, and error-specific types derived from AWS JSON protocols. Used to safely remove namespaces while preventing duplicates, invalid inputs, and accidental deletions of in-use resources.",
      "description_length": 367,
      "index": 237,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreateService",
      "description": "Handles service creation requests by validating input, checking for existing services, and enforcing resource limits. Operates on context objects, service request records, and various error types specific to AWS service provisioning. Processes inputs such as service names, namespaces, and tags, returning detailed success or error responses.",
      "description_length": 342,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreatePublicDnsNamespace",
      "description": "Handles the creation of a public DNS namespace in AWS Route 53 by sending a structured request and returning a typed result. Operates with context objects, request records, and response structures specific to the AWS API. Used to programmatically manage DNS namespace resources in cloud infrastructure setups.",
      "description_length": 309,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreatePrivateDnsNamespace",
      "description": "Handles the creation of a private DNS namespace by sending a structured request and returning a typed result. Operates with context, request, and response records specific to AWS Route 53. Used to register a new private DNS namespace in a controlled environment, ensuring validation and error handling for namespace conflicts and resource limits.",
      "description_length": 346,
      "index": 240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreateHttpNamespace",
      "description": "Handles HTTP namespace creation requests by validating input, checking for existing namespaces, and enforcing resource limits. Operates on context objects and structured request/response types specific to AWS service interactions. Processes errors such as duplicate requests, invalid inputs, and tag limits during namespace setup.",
      "description_length": 330,
      "index": 241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.UpdateStreamMode",
      "description": "Handles AWS update stream mode requests by sending configured input parameters and returning specific error outcomes. Operates with context objects and structured input data related to stream configuration. Used to modify stream settings in AWS services with explicit error handling for common API exceptions.",
      "description_length": 309,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.UpdateShardCount",
      "description": "Handles AWS DynamoDB shard count updates by processing input configurations and returning structured outputs. Operates on context objects and specific request/response types defined in the Smaws_Lib framework. Manages exceptions related to access, limits, and resource states during shard count adjustments.",
      "description_length": 307,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.SubscribeToShard",
      "description": "Handles subscription requests to a specific shard, processing input parameters and returning structured output. Operates with context objects, subscription input records, and custom error types derived from AWS JSON protocols. Used to manage real-time data streams in distributed systems where resource availability and permissions must be strictly enforced.",
      "description_length": 358,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.StopStreamEncryption",
      "description": "Handles encryption requests for stop stream operations, accepting context and input parameters to initiate the process. Works with custom exception types and AWS JSON protocol errors. Used to manage encryption state during stream termination in secure data transfer scenarios.",
      "description_length": 276,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.StartStreamEncryption",
      "description": "Handles the initiation of stream encryption by sending a request with a context and input parameters, returning a result that includes potential AWS-specific errors or success. Operates with `Smaws_Lib.Context.t` and a custom input type for stream encryption setup. Used to securely start encrypted data streams in AWS environments, ensuring proper key management and access controls.",
      "description_length": 384,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.SplitShard",
      "description": "Handles AWS DynamoDB `SplitShard` requests by validating input, checking resource states, and enforcing service limits. Operates on context objects and structured input containing shard details and parameters. Directly manages error conditions such as access denial, invalid inputs, and resource conflicts during shard splitting.",
      "description_length": 329,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.RemoveTagsFromStream",
      "description": "Removes specified tags from a stream resource using a context and input parameters. It processes AWS JSON protocol errors and specific exception types related to access, validation, and resource states. The function is used in scenarios where tag management is required for stream resources within an AWS environment.",
      "description_length": 317,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.RegisterStreamConsumer",
      "description": "Handles the initiation of a stream consumer by sending a registration request with context and input parameters. Operates on context objects, input records, and output records specific to stream consumer setup. Used to establish a connection to a streaming service with validation and error handling for resource constraints and invalid configurations.",
      "description_length": 352,
      "index": 249,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.PutResourcePolicy",
      "description": "Handles AWS IAM resource policy placement by accepting a context and policy input, returning success or specific error variants. Operates with AWS JSON protocol errors and custom exception types derived from AWS service responses. Used to enforce policy constraints on IAM resources during deployment or configuration updates.",
      "description_length": 326,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.PutRecords",
      "description": "Handles AWS Kinesis PutRecords API requests by sending a batch of data records to a stream. Operates on input structures containing record data and stream details, returning outputs with response metadata and possible error variants. Used to ingest large volumes of data into Kinesis streams with precise error handling for AWS-specific exceptions.",
      "description_length": 348,
      "index": 251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.PutRecord",
      "description": "Handles AWS Kinesis PutRecord API requests by sending data records to a stream. Operates on context objects and structured input containing record data, stream name, and partition key. Returns results with either the output or specific error types including access denied, invalid arguments, and KMS-related exceptions.",
      "description_length": 319,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.MergeShards",
      "description": "Handles AWS DynamoDB merge shard requests by validating input, checking resource states, and coordinating shard operations. Works with context objects, input records, and error types specific to DynamoDB's shard management. Used to consolidate shards in a table while enforcing access controls and operational limits.",
      "description_length": 317,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListTagsForStream",
      "description": "Provides operations to retrieve tags associated with a specific stream, accepting a context and input parameters. Works with AWS JSON protocol types and custom exception types for error handling. Used to fetch metadata tags for stream resources in AWS services.",
      "description_length": 261,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListStreams",
      "description": "Handles AWS list streams requests by accepting context and input parameters, returning structured output or specific error variants. Operates with AWS context objects and custom exception types derived from JSON responses. Used to retrieve and manage stream listings from AWS services with explicit error handling for token expiration and input validation.",
      "description_length": 356,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListStreamConsumers",
      "description": "Provides functions to request and process stream consumer information from a list, handling specific error cases such as expired tokens, invalid arguments, and resource not found. Operates on context objects and input/output records structured for AWS JSON protocols. Used to manage and validate consumer states in streaming data pipelines.",
      "description_length": 340,
      "index": 256,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListShards",
      "description": "Handles AWS DynamoDB list shards operation, accepting context and input parameters to retrieve shard information. Processes structured data including shard IDs, parent shard IDs, and sequence numbers. Used to paginate through large datasets in DynamoDB streams for monitoring or data processing pipelines.",
      "description_length": 305,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.IncreaseStreamRetentionPeriod",
      "description": "Handles AWS Kinesis stream retention period adjustments by sending a request with specified parameters. Operates on context objects and input records containing stream names and new retention values. Used to extend data retention for active streams within service limits.",
      "description_length": 271,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.GetShardIterator",
      "description": "Handles AWS Kinesis shard iterator requests by accepting context and input parameters, returning a structured output or specific error types. Operates with AWS context objects and custom input/output records for shard iteration. Used to retrieve a shard iterator for reading data from a Kinesis stream.",
      "description_length": 302,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.GetResourcePolicy",
      "description": "Handles AWS IAM get resource policy requests by accepting a context and input parameters, returning policy details or specific exception types. Operates with AWS context objects and structured input/output records. Used to retrieve and validate policy configurations for AWS resources in controlled access scenarios.",
      "description_length": 316,
      "index": 260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.GetRecords",
      "description": "Handles AWS Kinesis `GetRecords` API requests, processing input parameters and returning parsed data along with specific error types. Operates with context objects, input records, and structured output data. Used to retrieve data from Kinesis streams in real-time applications.",
      "description_length": 277,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.EnableEnhancedMonitoring",
      "description": "Handles AWS EC2 enhanced monitoring requests by accepting context and input parameters, returning structured outputs or specific error types. Operates with AWS context objects and custom input/output records tied to EC2 configurations. Used to programmatically enable detailed monitoring on EC2 instances within controlled error-handling workflows.",
      "description_length": 348,
      "index": 262,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DisableEnhancedMonitoring",
      "description": "Handles AWS EC2 instance enhanced monitoring disable requests, processing input parameters and returning structured output. Operates with context objects, input records, and custom exception types specific to AWS API responses. Used to programmatically disable monitoring on EC2 instances within controlled error-handling workflows.",
      "description_length": 332,
      "index": 263,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeStreamSummary",
      "description": "Handles AWS Kinesis `DescribeStreamSummary` requests by accepting a context and input parameters, returning detailed stream metadata or specific error types. Operates with AWS context objects and structured input/output records tailored to stream descriptions. Used to retrieve real-time stream information for monitoring or debugging purposes.",
      "description_length": 344,
      "index": 264,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeStreamConsumer",
      "description": "Handles AWS Kinesis stream consumer requests by fetching detailed information about a specified consumer. Operates on context and input types specific to AWS Kinesis, returning structured output or specific error variants. Used to retrieve consumer metadata, such as ARN and status, during stream management tasks.",
      "description_length": 314,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeStream",
      "description": "Handles AWS DescribeStream API requests, processing input parameters and returning structured output along with specific error variants. Operates with context objects and custom exception types derived from AWS JSON protocol responses. Used to retrieve detailed information about a stream resource in a controlled, error-aware manner.",
      "description_length": 334,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeLimits",
      "description": "Handles AWS EC2 describe-limits requests, processing input parameters and returning structured output along with specific error variants. Operates with context objects, input records, and output records tailored to EC2 limit queries. Used to retrieve account-specific service limits and manage rate-limiting exceptions during API interactions.",
      "description_length": 343,
      "index": 267,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DeregisterStreamConsumer",
      "description": "Handles the cancellation of stream consumers by sending a targeted request to the service, using context and input parameters. Operates with specific AWS JSON protocol types and exception types for error handling. Used to terminate active stream consumer processes in real-time data processing workflows.",
      "description_length": 304,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DeleteStream",
      "description": "Handles deletion requests for streams by validating context and input, returning specific error types based on AWS service responses. Operates with context objects and structured input records related to stream resources. Used to safely remove streams while handling access control and resource state checks.",
      "description_length": 308,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DeleteResourcePolicy",
      "description": "Handles AWS resource policy deletion requests by validating context and input, then executing the deletion with specific error handling for common AWS exceptions. Operates on AWS context objects and structured policy input data. Used to safely remove policies from resources like S3 buckets or IAM roles within AWS infrastructure.",
      "description_length": 330,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DecreaseStreamRetentionPeriod",
      "description": "Handles AWS Kinesis stream retention period reduction by sending a structured request with context. Operates on custom input types and error variants specific to AWS Kinesis API responses. Used to adjust stream data retention settings in compliance with operational policies.",
      "description_length": 275,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.CreateStream",
      "description": "Handles stream creation requests by validating input and interacting with AWS services, returning specific error types based on validation outcomes. Operates on context objects and custom input records for stream configuration. Used to manage real-time data ingestion pipelines with error handling for common AWS exceptions.",
      "description_length": 324,
      "index": 272,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.AddTagsToStream",
      "description": "Provides functions to send a request to add tags to a stream, handling specific AWS error types. Operates with context and input structures specific to the Smaws_Lib framework. Used to associate metadata with streams in AWS Kinesis upon explicit tag addition.",
      "description_length": 259,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UpdateVpcIngressConnection",
      "description": "Processes a request to update a VPC ingress connection, handling specific AWS error types and returning a structured response. Operates on context objects and custom request/response types tied to VPC network configurations. Used to modify ingress rules for VPC endpoints in cloud infrastructure workflows.",
      "description_length": 306,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UpdateService",
      "description": "Handles AWS JSON-based update requests by validating context, processing input, and returning structured responses. Operates on custom exception types and request/response records specific to AWS service updates. Used to manage state transitions and resource modifications in distributed systems.",
      "description_length": 296,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UpdateDefaultAutoScalingConfiguration",
      "description": "Handles AWS Auto Scaling configuration updates by processing requests and returning responses or specific error types. Operates on context objects and structured request/response data. Used to adjust default auto-scaling settings in cloud infrastructure management workflows.",
      "description_length": 275,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects, untag_resource_request records, and returns responses or specific AWS-defined exceptions. Used to remove tags from resources in compliance with AWS API requirements.",
      "description_length": 298,
      "index": 277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.TagResource",
      "description": "Handles AWS resource tagging requests by sending structured JSON payloads and parsing responses. Operates on context objects, tag resource requests, and specific error types defined by AWS. Used to associate tags with AWS resources in distributed systems.",
      "description_length": 255,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.StartDeployment",
      "description": "Handles AWS StartDeployment API requests by validating context and processing deployment parameters, returning structured responses or specific error types. Operates on custom request and response records derived from AWS JSON protocols. Used to initiate cloud resource deployments with precise error handling for service, request, and resource issues.",
      "description_length": 352,
      "index": 279,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ResumeService",
      "description": "Handles AWS Lambda resume service requests by processing specific input types and returning structured responses. It operates with custom exception types and context data to manage error states and service interactions. Used to validate and execute resume-related operations within a serverless environment.",
      "description_length": 307,
      "index": 280,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.PauseService",
      "description": "Handles pause service requests by validating context and processing specific request types, returning structured responses or detailed error variants. Operates with context objects, request records, and custom error types derived from AWS JSON protocols. Used to manage service suspension workflows in distributed systems, ensuring proper state transitions and error reporting.",
      "description_length": 377,
      "index": 281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListVpcIngressConnections",
      "description": "Processes AWS VPC ingress connection requests, retrieving structured response data. Operates on context objects and custom request/response types specific to AWS API interactions. Used to fetch and validate network access configurations from cloud infrastructure.",
      "description_length": 263,
      "index": 282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListVpcConnectors",
      "description": "Handles AWS VPC connector listing by sending a structured request and returning a typed response. Processes AWS JSON-formatted data and error conditions specific to VPC connector operations. Used to retrieve and validate VPC connector configurations from an AWS service endpoint.",
      "description_length": 279,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListTagsForResource",
      "description": "Provides functions to send a request for listing tags associated with a specific AWS resource and handle the response along with various error conditions. Operates with context data, request structures, and response formats specific to AWS services. Used to retrieve tagging information for resources like EC2 instances or S3 buckets during infrastructure management tasks.",
      "description_length": 373,
      "index": 284,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListServicesForAutoScalingConfiguration",
      "description": "Provides functions to send a request and handle responses for listing services associated with an auto-scaling configuration, including error handling for specific AWS exceptions. Operates with context objects, request records, and response structures defined by the AWS API. Used to retrieve service associations in cloud infrastructure management workflows.",
      "description_length": 359,
      "index": 285,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListServices",
      "description": "Handles AWS service listing requests by processing context and request parameters, returning structured responses or specific error types. Operates with AWS JSON protocol data structures and exception types defined in the Smaws_Lib module. Used to retrieve available AWS service information in a controlled, error-aware manner.",
      "description_length": 327,
      "index": 286,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListOperations",
      "description": "Handles AWS JSON-based list operations by processing context and request data, returning structured responses or specific error types. Operates on custom request and response types derived from AWS protocol definitions. Used to retrieve paginated resource listings with error handling for service, invalid, and missing resource scenarios.",
      "description_length": 338,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListObservabilityConfigurations",
      "description": "Handles AWS API requests to retrieve observability configurations, processing context and request parameters to produce structured responses. Operates with AWS-specific types such as `Smaws_Lib.Context.t` and custom exception types for error handling. Used to fetch and validate configuration data for monitoring and logging systems within a service.",
      "description_length": 350,
      "index": 288,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListConnections",
      "description": "Handles AWS API requests to list connections, including error handling for specific exception types. Operates on context objects and request/response structures defined in the Smaws_Lib module. Used to retrieve connection details from an AWS service endpoint.",
      "description_length": 259,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListAutoScalingConfigurations",
      "description": "Handles AWS Auto Scaling configuration retrieval by sending structured requests and parsing JSON responses. Operates with context objects, request records, and custom exception types. Used to fetch and validate auto-scaling group configurations from AWS API endpoints.",
      "description_length": 268,
      "index": 290,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DisassociateCustomDomain",
      "description": "Handles the removal of a custom domain from a service, accepting a context and request structure. Operates on specific AWS JSON-based request and response types, along with custom exception types for error handling. Used to manage domain configuration changes in cloud service integrations.",
      "description_length": 290,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeVpcIngressConnection",
      "description": "Processes AWS VPC ingress connection requests, handling specific error conditions and returning structured responses. Operates with context objects, request records, and custom exception types. Used to retrieve detailed ingress connection information from AWS services.",
      "description_length": 269,
      "index": 292,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeVpcConnector",
      "description": "Handles AWS VPC connector description requests by sending a structured API call and returning parsed responses or specific error types. Operates with context objects, request records, and response structures tailored to AWS service interactions. Used to retrieve detailed information about VPC connectors in cloud infrastructure management workflows.",
      "description_length": 350,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeService",
      "description": "Handles AWS service description requests by validating context, parsing input, and returning structured responses. Operates with AWS context objects, request records, and custom exception types. Used to retrieve detailed service metadata in distributed system interactions.",
      "description_length": 273,
      "index": 294,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeObservabilityConfiguration",
      "description": "Handles AWS DescribeObservabilityConfiguration requests by validating context and parameters, then returning structured responses or specific error types. Operates with AWS context objects and custom exception types derived from protocol errors. Used to retrieve observability settings from AWS services with precise error handling for service, request, and resource issues.",
      "description_length": 374,
      "index": 295,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeCustomDomains",
      "description": "Handles AWS SDK requests to describe custom domains, processing responses and specific error conditions. Operates with context objects, request records, and structured response data. Used to retrieve domain configurations and manage exceptions like invalid requests or missing resources.",
      "description_length": 287,
      "index": 296,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeAutoScalingConfiguration",
      "description": "Handles AWS Auto Scaling configuration retrieval by sending a structured request and returning detailed response data, including error variants for service, invalid, and resource-related issues. Operates with context objects and specific request/response types defined in the Smaws_Lib framework. Used to fetch current auto scaling group settings for monitoring or adjustment workflows.",
      "description_length": 386,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteVpcIngressConnection",
      "description": "Processes requests to delete a VPC ingress connection, handling specific AWS JSON-based error types and exception responses. Operates on context objects and structured request/response types related to VPC network configurations. Used to manage network access policies in cloud infrastructure deployments.",
      "description_length": 305,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteVpcConnector",
      "description": "Handles the deletion of a VPC connector by sending a structured request and returning a typed response. Operates with context data, request objects, and specific error types related to AWS VPC operations. Used to safely remove VPC connectors in cloud infrastructure workflows.",
      "description_length": 276,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteService",
      "description": "Handles deletion requests by validating context, processing input, and returning structured responses. Operates on custom request and response types specific to service deletion workflows. Manages error conditions such as invalid states, missing resources, and internal service failures.",
      "description_length": 287,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteObservabilityConfiguration",
      "description": "Handles deletion requests for observability configurations by validating context and processing structured input. Operates on custom request and response types specific to AWS observability management. Used to remove configured monitoring settings in distributed systems with explicit error handling for service and resource issues.",
      "description_length": 332,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteConnection",
      "description": "Handles deletion requests for connections by validating context and processing specific request types, returning detailed responses or specific error types. Operates with context objects, custom request records, and structured response types. Used to manage resource cleanup in distributed systems with explicit error handling for service, invalid, and missing resources.",
      "description_length": 371,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteAutoScalingConfiguration",
      "description": "Handles deletion of auto-scaling configurations by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types tied to AWS auto-scaling operations. Used to safely remove configurations while handling AWS-specific exceptions.",
      "description_length": 305,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateVpcIngressConnection",
      "description": "Handles the creation of a VPC ingress connection by sending a structured request and returning a typed response. Operates with context objects, request records, and specific error types defined in the AWS JSON protocol. Used to establish network connectivity between AWS services and on-premises environments.",
      "description_length": 309,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateVpcConnector",
      "description": "Handles AWS VPC connector creation requests by validating input and interacting with the AWS API. Operates on context objects and structured request/response types specific to VPC connector configuration. Processes errors such as invalid requests, service quotas, and internal service failures.",
      "description_length": 294,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateService",
      "description": "Handles service creation requests by validating input and interacting with AWS infrastructure, returning detailed responses or specific error types. Operates with context objects and structured request/response types defined in the Smaws_Lib module. Used to provision new services while enforcing AWS API constraints and error handling.",
      "description_length": 336,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateObservabilityConfiguration",
      "description": "Handles the creation of observability configurations by processing a request and returning a response or specific error types. Operates on context objects and custom request/response types related to AWS service configuration. Used to set up monitoring and logging parameters for distributed systems.",
      "description_length": 300,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateConnection",
      "description": "Handles AWS JSON protocol requests for establishing connections, processing a custom request type and returning a response or specific error variants. Operates with context data and structured error types defined in Smaws_Lib. Used to manage connection setup in distributed systems with explicit error handling for service-specific exceptions.",
      "description_length": 343,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateAutoScalingConfiguration",
      "description": "Handles the creation of auto-scaling configurations by processing a request and returning a response or specific error types. Operates with context data, request structures, and AWS-specific error exceptions. Used to programmatically define and validate auto-scaling rules within cloud infrastructure setups.",
      "description_length": 308,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.AssociateCustomDomain",
      "description": "Handles the initiation of a custom domain association process by sending a request to the appropriate service, incorporating context and error handling for specific exceptions. Operates with context objects, request structures, and response types tailored to domain association workflows. Used to manage the lifecycle of domain registration within a cloud infrastructure setup.",
      "description_length": 377,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects and untag_resource_request records, which encapsulate resource identifiers and tag keys. Processes responses and error conditions specific to AWS operations, including resource not found and validation failures.",
      "description_length": 343,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.TagResource",
      "description": "Handles AWS resource tagging requests by validating input, checking resource existence, and enforcing tag limits. Operates on AWS context objects and structured request data including resource ARNs and tag lists. Used to apply or update tags on EC2 instances, S3 buckets, and other AWS resources while managing exceptions for invalid inputs and resource constraints.",
      "description_length": 366,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StopConfigurationRecorder",
      "description": "Handles the termination of an AWS Config recorder by sending a structured request. Operates with context objects and specific request types defined in the Smaws_Lib framework. Used to cleanly shut down configuration recording sessions in AWS infrastructure monitoring.",
      "description_length": 268,
      "index": 313,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartResourceEvaluation",
      "description": "Handles the initiation of resource evaluation by sending a structured request and returning a result that includes either a response or specific error conditions. It operates with context objects and custom exception types derived from AWS JSON protocols. Used to validate and process resource evaluation requests in cloud infrastructure workflows.",
      "description_length": 348,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartRemediationExecution",
      "description": "Handles the initiation of a remediation process by sending a structured request and returning a typed response. It operates with context objects and specific exception types derived from AWS JSON protocols. Used to trigger automated fixes in cloud infrastructure configurations with precise error handling.",
      "description_length": 306,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartConfigurationRecorder",
      "description": "Handles the initiation of a configuration recording session by sending a request to track resource configurations. It operates with context objects and specific request structures, returning results or detailed error conditions. Used to start tracking in AWS Config services, ensuring compliance and change tracking.",
      "description_length": 316,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartConfigRulesEvaluation",
      "description": "Handles the evaluation of AWS Config rules by initiating a request with a context and a specific request structure. It processes various error types including parameter validation issues, resource limits, and rule existence checks. Used to trigger configuration compliance assessments in AWS environments.",
      "description_length": 305,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.SelectResourceConfig",
      "description": "Handles AWS resource configuration selection by processing requests with context, validating expressions, limits, and pagination tokens. Operates on AWS JSON protocol structures and error types specific to resource selection. Used to fetch filtered resource data from AWS services with precise control over query parameters and error handling.",
      "description_length": 343,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.SelectAggregateResourceConfig",
      "description": "Handles AWS Config select aggregate resource configuration requests, processing expressions, limits, and pagination tokens. Operates on context objects, request records, and custom exception types specific to AWS Config. Used to query aggregated resource data across multiple AWS accounts and regions.",
      "description_length": 301,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutStoredQuery",
      "description": "Handles the creation or update of a stored query in a system, accepting context and request parameters. Operates on types such as `put_stored_query_request` and `put_stored_query_response`, along with specific error types like `resource_concurrent_modification_exception` and `validation_exception`. Used to manage query definitions in environments requiring precise error handling and context-aware operations.",
      "description_length": 411,
      "index": 320,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutRetentionConfiguration",
      "description": "Handles AWS PutRetentionConfiguration API requests, processing parameters and returning structured responses or specific error types. Operates with context objects, request records, and custom exception types. Used to set or update retention policies in AWS services with precise error handling.",
      "description_length": 295,
      "index": 321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutResourceConfig",
      "description": "Handles AWS Config resource configuration requests by validating input, checking permissions, and enforcing resource limits. Operates on context objects and custom exception types specific to AWS Config service. Used to manage resource registration and ensure compliance with AWS governance rules.",
      "description_length": 297,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutRemediationExceptions",
      "description": "Handles AWS PutRemediationExceptions API requests, processing parameters and returning structured responses or specific error types. Operates with context objects and custom request/response types tailored for AWS remediation operations. Used to apply exceptions to resource remediation tasks in compliance management workflows.",
      "description_length": 328,
      "index": 323,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutRemediationConfigurations",
      "description": "Handles AWS PutRemediationConfigurations API requests by validating parameters and executing the operation, returning structured responses or specific error types. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to apply remediation actions to AWS Config rules based on defined parameters.",
      "description_length": 354,
      "index": 324,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutOrganizationConformancePack",
      "description": "Handles the creation and configuration of organization-wide conformance packs by accepting a structured request and returning a response or specific error conditions. Operates with AWS-specific types such as context, request objects, and detailed error variants. Used to enforce compliance policies across an AWS organization, ensuring all member accounts adhere to defined standards.",
      "description_length": 384,
      "index": 325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutOrganizationConfigRule",
      "description": "Handles the creation and configuration of AWS Organization Config rules by accepting a context and a structured request, then returning a response or specific error types. Operates with AWS-specific data types such as context objects, request structures, and detailed exception types. Used to enforce compliance policies across AWS accounts within an organization.",
      "description_length": 364,
      "index": 326,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutExternalEvaluation",
      "description": "Handles the submission of external evaluation results to a configuration service, accepting context and a structured request to produce a response or specific error types. Operates with custom request and response types, along with AWS-specific error variants. Used to integrate external compliance checks into a larger evaluation system.",
      "description_length": 338,
      "index": 327,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutEvaluations",
      "description": "Handles the submission of evaluation results for AWS Config rules, accepting a context and a request structure to produce a response. Operates with AWS-specific types including context data, evaluation requests, and error variants tied to validation and configuration rules. Used to update compliance status of resources based on defined rules in real-time scenarios.",
      "description_length": 367,
      "index": 328,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutDeliveryChannel",
      "description": "Handles the creation and configuration of AWS Config delivery channels by validating and sending requests. Operates on context objects and specific request structures related to S3 buckets, SNS topics, and KMS keys. Manages exceptions for invalid configurations, policy issues, and resource limits.",
      "description_length": 298,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConformancePack",
      "description": "Handles the submission of a conformance pack configuration to AWS Config, validating the template and checking permissions. Operates on context objects, request records, and various exception types specific to AWS service responses. Used to enforce compliance rules across AWS resources by deploying predefined conformance packs.",
      "description_length": 329,
      "index": 330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConfigurationRecorder",
      "description": "Handles the creation and updating of AWS Config configuration recorders. Operates on context objects and structured request data to interact with AWS services. Manages specific exceptions related to recorder names, recording groups, roles, and service limits.",
      "description_length": 259,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConfigurationAggregator",
      "description": "Handles the submission of configuration aggregators by validating input parameters, checking role permissions, and ensuring organizational compliance. Operates on context objects and specific request/response types defined in the AWS configuration service. Used to enforce AWS Config rules across multiple accounts within an organization.",
      "description_length": 338,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConfigRule",
      "description": "Handles AWS Config rule creation by sending a structured request and returning specific error outcomes. Operates with context data and custom exception types derived from AWS JSON responses. Used to enforce compliance policies within AWS environments by programmatically defining configuration rules.",
      "description_length": 300,
      "index": 333,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutAggregationAuthorization",
      "description": "Handles AWS PutAggregationAuthorization API requests by validating and processing parameters, returning structured responses or specific error types. Operates with context objects, request records, and custom error variants. Used to authorize data aggregation in AWS services requiring explicit permission setup.",
      "description_length": 312,
      "index": 334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on structured request and response types, including error variants for invalid inputs and resource issues. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 274,
      "index": 335,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListStoredQueries",
      "description": "Handles query retrieval by accepting a context and request, returning a response or specific error types. Operates with context objects, request records, and response structures tailored for stored query management. Used to fetch paginated lists of stored queries from a system, supporting navigation through tokens.",
      "description_length": 316,
      "index": 336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListResourceEvaluations",
      "description": "Handles AWS CloudFormation resource evaluation requests by fetching detailed evaluation data based on context and parameters. Operates on structured request and response types specific to AWS CloudFormation. Processes invalid token, parameter, and time range exceptions during evaluation retrieval.",
      "description_length": 298,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListDiscoveredResources",
      "description": "Handles AWS Config resource discovery by sending requests and returning structured responses. Processes context and request objects to retrieve lists of discovered resources, with detailed error handling for invalid inputs and service issues. Supports specific AWS exception types to manage malformed requests and service unavailability.",
      "description_length": 337,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListConformancePackComplianceScores",
      "description": "Processes requests to retrieve conformance pack compliance scores, handling validation and error responses for parameters like limit and next token. Operates on context objects and structured request/response types specific to AWS service interactions. Used to fetch compliance data for AWS Config conformance packs in automated reporting workflows.",
      "description_length": 349,
      "index": 339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListAggregateDiscoveredResources",
      "description": "Processes AWS Config aggregation requests to retrieve discovered resources, handling validation, pagination, and error conditions specific to configuration aggregators. Operates on context objects, request structures, and response records tied to AWS JSON protocols. Used to fetch aggregated resource data across accounts and regions for compliance and inventory tracking.",
      "description_length": 372,
      "index": 340,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetStoredQuery",
      "description": "Handles AWS Glue API requests to retrieve stored queries, processing context and request parameters to return structured responses or specific error types. Operates with AWS context objects, custom request, and response records. Used to fetch query definitions from AWS Glue catalog for data processing workflows.",
      "description_length": 313,
      "index": 341,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetResourceEvaluationSummary",
      "description": "Handles AWS resource evaluation summary requests by sending a structured query and returning a detailed response or specific error conditions. Operates with context objects, request payloads, and response structures tailored for AWS service interactions. Used to retrieve compliance and configuration data for resources within an AWS environment.",
      "description_length": 346,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetResourceConfigHistory",
      "description": "Handles AWS Config resource configuration history requests by accepting a context and a request structure, returning detailed response data or specific error variants. Operates with AWS JSON protocol types and custom exception types derived from AWS error responses. Used to retrieve historical configuration details for AWS resources within a defined time range or with specific filtering parameters.",
      "description_length": 401,
      "index": 343,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetOrganizationCustomRulePolicy",
      "description": "Handles AWS API requests to retrieve custom rule policies for an organization, processing context and request parameters to return structured responses or specific error types. Operates with AWS JSON protocol types, including error variants tied to organization configuration and access control. Used to enforce compliance policies by fetching rule definitions in AWS Config managed rules scenarios.",
      "description_length": 399,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetOrganizationConformancePackDetailedStatus",
      "description": "Handles AWS Config requests to retrieve detailed status information for an organization's conformance pack, including compliance data and evaluation results. Operates on structured request and response types specific to AWS Config's API. Used to monitor and audit compliance across AWS organizational units.",
      "description_length": 307,
      "index": 345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetOrganizationConfigRuleDetailedStatus",
      "description": "Handles AWS Config rule status queries by accepting a context and request object, returning detailed status information or specific error conditions. Operates with AWS JSON protocol types and exception structures defined in the Smaws_Lib library. Used to retrieve compliance data for organization-wide configuration rules in AWS.",
      "description_length": 329,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetDiscoveredResourceCounts",
      "description": "Handles AWS API requests to retrieve counts of discovered resources, processing parameters like limit and next token. Operates with context objects, request records, and specific error types from AWS protocols. Used to fetch and validate resource statistics in cloud management workflows.",
      "description_length": 288,
      "index": 347,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetCustomRulePolicy",
      "description": "Handles AWS Config custom rule policy retrieval by accepting a context and request, returning a response or specific errors like missing rule exceptions. Operates with AWS context objects and structured request/response types. Used to fetch policy details for a specific Config rule during enforcement or auditing workflows.",
      "description_length": 324,
      "index": 348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetConformancePackComplianceSummary",
      "description": "Handles AWS Config conformance pack compliance data retrieval by accepting a context and request structure, returning detailed compliance summaries or specific error types. Operates on AWS JSON-formatted requests and responses, including custom exception types for invalid inputs. Used to analyze resource compliance status across AWS accounts and regions.",
      "description_length": 356,
      "index": 349,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetConformancePackComplianceDetails",
      "description": "Handles AWS Config conformance pack compliance queries by accepting a context and request parameters, returning detailed compliance status with specific error handling for invalid inputs or missing resources. Operates on AWS JSON-formatted requests and responses, including custom exception types for validation and resource existence checks. Used to retrieve compliance data for AWS Config rules within a specified conformance pack.",
      "description_length": 433,
      "index": 350,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceSummaryByResourceType",
      "description": "Handles AWS API requests to retrieve compliance summaries grouped by resource type, processing parameters like resource type and compliance status. Accepts structured input and returns detailed compliance reports with error handling for invalid parameters. Used to aggregate security and configuration compliance data for specific AWS resources.",
      "description_length": 345,
      "index": 351,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceSummaryByConfigRule",
      "description": "Handles AWS Config rule compliance summary requests, processing raw JSON responses into structured data. Operates on AWS context objects and JSON-formatted error responses. Used to retrieve compliance status of configured rules within an AWS account.",
      "description_length": 250,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceDetailsByResource",
      "description": "Handles AWS API requests to retrieve compliance details for specific resources, processing input parameters and returning structured responses or specific error types. Operates with context objects, request records, and response data structures tailored to AWS compliance reporting. Used to fetch detailed compliance status for resources in cloud infrastructure audits.",
      "description_length": 369,
      "index": 353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceDetailsByConfigRule",
      "description": "Handles AWS Config rule compliance checks by generating a request object and processing responses. Operates with context, request, and response types specific to AWS Config API interactions. Used to retrieve compliance status for a defined Config rule, including handling exceptions like invalid parameters or missing rules.",
      "description_length": 324,
      "index": 354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateResourceConfig",
      "description": "Handles AWS Config's GetAggregateResourceConfig API call, processing requests and returning detailed resource configuration data. Operates with context objects, request records, and custom exception types specific to AWS Config. Used to retrieve aggregated configuration details for resources across multiple AWS accounts and regions.",
      "description_length": 334,
      "index": 355,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateDiscoveredResourceCounts",
      "description": "Processes requests to retrieve counts of discovered resources across aggregated AWS configurations. Accepts context and a request structure, returning a response with resource counts or specific error variants. Handles validation, pagination, and configuration aggregator checks.",
      "description_length": 279,
      "index": 356,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateConformancePackComplianceSummary",
      "description": "Processes requests to retrieve compliance summaries for aggregate conformance packs, handling specific AWS error types. Operates on context objects and structured request/response types from the AWS API. Used to aggregate compliance data across multiple AWS accounts and regions.",
      "description_length": 279,
      "index": 357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateConfigRuleComplianceSummary",
      "description": "Processes requests to retrieve compliance summaries for AWS Config aggregate rules, handling specific error conditions. Operates on context objects and structured request/response types from the AWS Config service. Used to monitor and report compliance status across multiple AWS accounts and regions.",
      "description_length": 301,
      "index": 358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateComplianceDetailsByConfigRule",
      "description": "Handles AWS Config requests to retrieve compliance status of resources against a specific rule across aggregated accounts. Operates on structured request and response types for AWS Config rules, including error cases like invalid limits and missing aggregators. Used to monitor and report compliance in multi-account environments.",
      "description_length": 330,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRetentionConfigurations",
      "description": "Handles AWS CloudWatch Logs describe retention configuration requests, parsing and validating input parameters, and returning structured responses. Operates with context objects, request records, and custom exception types specific to AWS service errors. Used to retrieve retention policy details for log groups in a controlled, error-aware manner.",
      "description_length": 348,
      "index": 360,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRemediationExecutionStatus",
      "description": "Handles the retrieval of remediation execution status by sending a structured request and returning detailed response data. Operates with context objects, request records, and specific error types related to AWS Config. Used to monitor the progress of remediation actions in cloud infrastructure management.",
      "description_length": 307,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRemediationExceptions",
      "description": "Handles AWS API requests for describing remediation exceptions, including error handling for invalid tokens and parameter values. Operates on context objects and structured request/response types specific to the AWS service. Used to retrieve and validate exception data during automated remediation processes.",
      "description_length": 309,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRemediationConfigurations",
      "description": "Handles AWS API requests to describe remediation configurations, processing input parameters and returning structured responses. Operates with context objects, request records, and response records specific to AWS services. Used to retrieve detailed information about remediation settings in cloud infrastructure management workflows.",
      "description_length": 334,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribePendingAggregationRequests",
      "description": "Handles retrieval of pending aggregation requests by validating context and parameters, then issuing a structured API call. Operates with custom request and response types specific to AWS CloudFormation. Used to fetch and process aggregation status in cloud resource management workflows.",
      "description_length": 288,
      "index": 364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConformancePackStatuses",
      "description": "Handles AWS Config requests to retrieve the status of organization conformance packs, supporting pagination and error handling for invalid inputs. Operates on structured request and response types specific to AWS Config's organization conformance pack operations. Used to monitor compliance status across AWS accounts within an organization.",
      "description_length": 341,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConformancePacks",
      "description": "Handles AWS Config requests to retrieve organization conformance pack details, including validation of limits and pagination tokens. Operates on AWS JSON protocol responses and error types specific to AWS Config. Used to fetch and validate conformance pack configurations across an organization's accounts.",
      "description_length": 306,
      "index": 366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConfigRuleStatuses",
      "description": "Handles AWS Config rule status queries by accepting a context and request object, returning detailed status information or specific error conditions. Operates with AWS JSON protocol types and exception structures related to organization config rules. Used to validate and retrieve the current status of configured rules within an AWS organization.",
      "description_length": 347,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConfigRules",
      "description": "Provides functions to request and handle responses for describing AWS Organization Config rules, including error handling for invalid limits, next tokens, and missing rules. Operates with AWS context, request, and response types specific to Config rules. Used to retrieve detailed configurations and validate rule existence within an organization.",
      "description_length": 347,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeDeliveryChannelStatus",
      "description": "Handles AWS CloudWatch Logs delivery channel status queries by accepting a context and request object, returning detailed response data or specific error variants. Operates with AWS JSON protocol structures and exception types related to delivery channel configuration. Used to check the current state of a delivery channel in real-time monitoring workflows.",
      "description_length": 358,
      "index": 369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeDeliveryChannels",
      "description": "Handles AWS Config service requests to describe delivery channels, processing input parameters and returning structured responses. Operates with context objects, request records, and custom exception types. Used to retrieve configuration delivery channel details in cloud compliance workflows.",
      "description_length": 293,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConformancePackStatus",
      "description": "Handles AWS Config's DescribeConformancePackStatus operation by accepting a context and request, returning detailed status information about conformance packs, including errors such as invalid parameters or pagination tokens. Works with AWS JSON protocol types and exception structures specific to the DescribeConformancePackStatus API. Used to monitor the current state of conformance packs in an AWS account for compliance tracking.",
      "description_length": 434,
      "index": 371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConformancePacks",
      "description": "Handles AWS Config describe conformance packs requests by fetching detailed information about specified conformance packs, including their compliance status and configuration details. Operates on context objects and request/response structures specific to AWS Config. Used to retrieve and validate conformance pack data in cloud governance workflows.",
      "description_length": 350,
      "index": 372,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConformancePackCompliance",
      "description": "Handles AWS Config conformance pack compliance queries by accepting context and request parameters, returning structured compliance data or specific error types. Operates with AWS JSON protocol responses and error definitions from the Smaws_Lib library. Used to retrieve detailed compliance status for AWS resources against defined conformance packs.",
      "description_length": 350,
      "index": 373,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationRecorderStatus",
      "description": "Handles AWS Config service requests to retrieve the status of a configuration recorder. Operates on AWS JSON protocol types and error variants specific to the DescribeConfigurationRecorderStatus operation. Used to check if a recorder is active, recording, or has encountered issues.",
      "description_length": 282,
      "index": 374,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationRecorders",
      "description": "Handles AWS Config recorder description requests by accepting a context and a request structure, returning detailed configuration recorder information or specific errors. Operates with AWS JSON protocol types and error variants directly tied to AWS service responses. Used to retrieve current recorder settings in compliance and monitoring workflows.",
      "description_length": 350,
      "index": 375,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationAggregatorSourcesStatus",
      "description": "Handles AWS Config aggregator source status description by accepting a context and request, returning detailed status information or specific error types. Operates with AWS JSON protocol structures and exception types related to configuration aggregators. Used to diagnose issues with aggregated resource data sources in AWS environments.",
      "description_length": 338,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationAggregators",
      "description": "Provides functions to request and handle responses for describing configuration aggregators, including error handling for invalid parameters, limits, and tokens. Works with context objects, request records, and response structures specific to AWS Config. Used to retrieve aggregated configuration data from AWS services with precise error reporting.",
      "description_length": 349,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigRules",
      "description": "Handles AWS Config rule description requests by accepting a context and a request structure, returning detailed rule information or specific error types. Operates with AWS JSON protocol types and exception structures defined in the Smaws_Lib library. Used to retrieve configuration rule details in cloud compliance and auditing workflows.",
      "description_length": 338,
      "index": 378,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigRuleEvaluationStatus",
      "description": "Handles AWS Config rule evaluation status requests by accepting a context and a specific request structure, returning detailed response data or specific error types. Operates with AWS JSON protocol structures and exception types related to configuration rules. Used to check the current status of a Config rule's evaluation process in AWS.",
      "description_length": 339,
      "index": 379,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeComplianceByResource",
      "description": "Handles AWS API requests to retrieve compliance information for specific resources, including error handling for invalid tokens and parameter values. Operates on context objects and structured request/response types specific to the AWS API. Used to generate detailed compliance reports for individual resources in cloud infrastructure audits.",
      "description_length": 342,
      "index": 380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeComplianceByConfigRule",
      "description": "Provides operations to request and handle responses for describing compliance status of AWS Config rules, including error handling for invalid tokens, parameter values, and non-existent rules. Works with AWS context objects, request records, and response structures specific to Config rule compliance. Used to retrieve detailed compliance information for auditing and monitoring AWS resources.",
      "description_length": 393,
      "index": 381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeAggregationAuthorizations",
      "description": "Handles AWS DescribeAggregationAuthorizations API requests, validating parameters and processing responses with specific error types. Operates on context objects and structured request/response types from the Smaws_Lib library. Used to retrieve and validate aggregation authorization details in AWS Config services.",
      "description_length": 315,
      "index": 382,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeAggregateComplianceByConformancePacks",
      "description": "Processes requests to describe compliance status of AWS Config conformance packs across multiple accounts and regions. Operates on context objects and specific request/response types defined for AWS Config Aggregator. Handles validation, pagination, and error conditions such as invalid limits or missing configuration aggregators.",
      "description_length": 331,
      "index": 383,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeAggregateComplianceByConfigRules",
      "description": "Provides operations to request and handle responses for describing compliance status of resources against AWS Config rules across aggregated accounts. Works with context objects, request records, and custom exception types specific to AWS Config. Used to retrieve compliance data for auditing and governance purposes in multi-account environments.",
      "description_length": 347,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeliverConfigSnapshot",
      "description": "Handles the retrieval of AWS Config snapshots by sending a request and returning structured responses or specific error conditions. Operates with context objects, request records, and custom error types related to AWS configuration services. Used to fetch current configuration states for compliance checks or auditing purposes.",
      "description_length": 328,
      "index": 385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteStoredQuery",
      "description": "Handles deletion requests for stored queries by validating input and interacting with AWS services. Operates on context objects and structured request/response types specific to AWS Query protocols. Processes exceptions such as missing resources or invalid input during deletion operations.",
      "description_length": 290,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteRetentionConfiguration",
      "description": "Handles the removal of a specified retention configuration from an Amazon S3 bucket by sending a structured request. It operates on AWS JSON protocol responses and specific exception types for invalid parameters or missing configurations. Used to enforce data deletion policies in compliance-driven storage systems.",
      "description_length": 315,
      "index": 387,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteResourceConfig",
      "description": "Handles deletion requests for AWS Config resources by validating configurations and issuing JSON-based API calls. Operates on context objects and specific request types related to AWS Config. Manages exceptions such as missing configuration recorders and validation errors during deletion.",
      "description_length": 289,
      "index": 388,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteRemediationExceptions",
      "description": "Handles the deletion of remediation exceptions by sending a request to a service, returning a result that includes either a response or specific error types such as missing exception references. Operates with context data and structured request/response types defined in the Smaws_Lib module. Used to manage cleanup operations in automated remediation workflows where exceptions need to be removed programmatically.",
      "description_length": 415,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteRemediationConfiguration",
      "description": "Handles deletion requests for remediation configurations by validating parameters, checking permissions, and ensuring no ongoing remediation processes. Operates on context objects, request records, and specific error types related to configuration management. Used to safely remove configurations in AWS CloudFormation scenarios where strict validation and error handling are required.",
      "description_length": 385,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeletePendingAggregationRequest",
      "description": "Handles the deletion of a pending aggregation request by sending a structured request to an AWS service, using a context object for configuration. Operates on `Smaws_Lib.Context.t` and a custom request type specific to the deletion process. Used to remove unresolved aggregation entries in a controlled, error-handled manner during data synchronization workflows.",
      "description_length": 363,
      "index": 391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteOrganizationConformancePack",
      "description": "Handles the deletion of an organization conformance pack by sending a structured request. Operates with AWS JSON protocol types and specific exception types for error handling. Used to remove conformance packs from an AWS organization when they are no longer needed.",
      "description_length": 266,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteOrganizationConfigRule",
      "description": "Removes a specified AWS Config rule from an organization, handling specific error conditions such as missing rules, access denials, and resource conflicts. It operates on AWS JSON protocol responses and error types defined in the Smaws_Lib library. The function is used in scenarios requiring precise control over organization-wide configuration rules.",
      "description_length": 352,
      "index": 393,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteEvaluationResults",
      "description": "Handles deletion requests for evaluation results by validating context and processing specific request structures. Operates on custom request and response types, along with AWS-specific error variants. Used to remove evaluation data when a configuration rule is no longer needed or to free up resources.",
      "description_length": 303,
      "index": 394,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteDeliveryChannel",
      "description": "Handles the deletion of an AWS Config delivery channel by sending a structured request and returning specific error outcomes. Operates with context objects and custom exception types derived from AWS JSON protocol responses. Used to safely remove delivery channels while handling known AWS-specific exceptions.",
      "description_length": 310,
      "index": 395,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConformancePack",
      "description": "Handles deletion requests for AWS Config conformance packs, processing context and request parameters to initiate removal. Operates with AWS JSON protocol types and exception structures specific to AWS Config. Used to safely remove conformance packs that are no longer needed, ensuring proper error handling for missing or in-use resources.",
      "description_length": 340,
      "index": 396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConfigurationRecorder",
      "description": "Handles the deletion of a configuration recorder by sending a structured request and returning success or specific error outcomes. Operates with context data and a request record containing deletion parameters. Used to remove an existing configuration recorder in an AWS environment, addressing cases where the recorder does not exist.",
      "description_length": 335,
      "index": 397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConfigurationAggregator",
      "description": "Handles the deletion of a configuration aggregator by sending a structured request. Operates with context data and a specific request type for AWS configuration management. Used to remove an existing aggregator from the system, ensuring proper cleanup of resources.",
      "description_length": 265,
      "index": 398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConfigRule",
      "description": "Handles deletion requests for AWS Config rules by validating existence and ensuring no dependent resources are in use. Operates on context objects and structured delete requests, returning specific error outcomes for missing or in-use rules. Used to safely remove configuration rules in AWS infrastructure management workflows.",
      "description_length": 327,
      "index": 399,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteAggregationAuthorization",
      "description": "Handles the request to delete an aggregation authorization by interacting with AWS services, using context and a specific request structure. It processes AWS JSON protocols and returns results or specific error types. Used to manage permissions in distributed logging systems.",
      "description_length": 276,
      "index": 400,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.BatchGetResourceConfig",
      "description": "Handles AWS Config batch retrieval of resource configurations using a context and request object, returning detailed responses or specific error types. Operates with AWS JSON protocol structures and exception types defined in the Smaws_Lib library. Used to fetch multiple resource states in a single API call for compliance and auditing workflows.",
      "description_length": 347,
      "index": 401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.BatchGetAggregateResourceConfig",
      "description": "Handles AWS Config's batch retrieval of aggregated resource configurations using a provided context and request structure. Processes input of type `batch_get_aggregate_resource_config_request` and returns a response with resource data or specific error variants. Used to fetch aggregated compliance and configuration details across multiple AWS accounts and regions.",
      "description_length": 366,
      "index": 402,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.UpdateApplicationMaintenanceConfiguration",
      "description": "Handles the request to update an application's maintenance configuration by sending a structured request and returning a response or specific error types. Operates with context data, request objects, and custom exception types related to AWS service interactions. Used to modify maintenance settings for applications while handling concurrency and validation constraints.",
      "description_length": 371,
      "index": 403,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.UpdateApplication",
      "description": "Handles application update requests by validating input, checking resource states, and applying configuration changes. Operates on context objects and structured request/response types specific to application management. Used to manage concurrent updates, enforce configuration rules, and detect invalid or conflicting operations.",
      "description_length": 330,
      "index": 404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request and returning a structured response. Operates with context objects, untag_resource_request records, and various exception types specific to AWS tagging operations. Used to remove tags from resources while managing AWS-specific error conditions during the process.",
      "description_length": 330,
      "index": 405,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.TagResource",
      "description": "Handles AWS resource tagging operations by sending requests and processing responses. Works with context objects, tag resource requests, and structured error types specific to AWS tagging. Used to apply or update tags on resources while managing exceptions like concurrent modifications and resource not found errors.",
      "description_length": 317,
      "index": 406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.StopApplication",
      "description": "Handles application termination requests by validating context and parameters, then executing the stop operation with detailed error handling for specific AWS-related exceptions. Operates on context objects and structured request/response types tied to application management. Used to safely shut down applications while reporting precise error conditions during deployment or maintenance workflows.",
      "description_length": 399,
      "index": 407,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.StartApplication",
      "description": "Handles application start requests by validating configuration and resources, returning detailed responses or specific error types. Operates on context objects and structured request/response types related to application deployment. Used to initiate application instances while enforcing configuration and resource constraints.",
      "description_length": 327,
      "index": 408,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.RollbackApplication",
      "description": "Handles rollback requests for application configurations, processing input and returning structured responses. Operates on context objects and custom exception types to manage validation and state changes. Used to safely revert application settings under specific error conditions or user directives.",
      "description_length": 300,
      "index": 409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on context objects and structured request/response types for AWS services. Used to fetch metadata tags for resources in cloud environments, such as EC2 instances or S3 buckets.",
      "description_length": 264,
      "index": 410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListApplications",
      "description": "Handles AWS API requests to list applications, parsing input and returning structured responses. Operates with context objects, request records, and custom error types specific to AWS JSON protocols. Used to retrieve application metadata from cloud services in a typed, error-aware manner.",
      "description_length": 289,
      "index": 411,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListApplicationVersions",
      "description": "Handles AWS application version requests by fetching detailed version information based on provided context and parameters. Operates on AWS-specific request and response types, including error variants for invalid inputs, missing resources, and unsupported operations. Used to retrieve version histories for deployed applications in cloud environments.",
      "description_length": 352,
      "index": 412,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListApplicationSnapshots",
      "description": "Handles AWS API requests to retrieve application snapshots, processing raw JSON responses into structured data. Operates on context objects, request records, and custom exception types specific to AWS service interactions. Used to fetch and validate snapshot data from cloud infrastructure systems.",
      "description_length": 298,
      "index": 413,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DiscoverInputSchema",
      "description": "Handles schema discovery requests by validating input and returning structured responses. Operates on context objects and custom request/response types specific to the discovery process. Used to analyze data sources and generate schema metadata for downstream processing.",
      "description_length": 271,
      "index": 414,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DescribeApplicationVersion",
      "description": "Handles AWS Elastic Beanstalk application version description requests, processing context and request parameters to retrieve detailed version information. Operates with AWS JSON protocol errors and specific exception types like invalid arguments, resource not found, and unsupported operations. Used to fetch application version metadata during deployment or troubleshooting workflows.",
      "description_length": 386,
      "index": 415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DescribeApplicationSnapshot",
      "description": "Handles AWS Application Discovery Service requests to describe a saved application snapshot, including error handling for invalid inputs, missing resources, and unsupported operations. Operates on context objects and specific request/response types defined in the Smaws_Lib framework. Used to retrieve detailed metadata about application configurations captured in a snapshot.",
      "description_length": 376,
      "index": 416,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DescribeApplication",
      "description": "Handles AWS application description requests by validating context, parsing input, and returning structured responses. Operates on AWS context objects and custom request/response types specific to application metadata. Used to retrieve detailed application configurations from an AWS service endpoint.",
      "description_length": 301,
      "index": 417,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationVpcConfiguration",
      "description": "Handles AWS application VPC configuration deletion by sending a structured request and processing specific error responses. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to safely remove VPC settings from an application while managing concurrency and resource state checks.",
      "description_length": 340,
      "index": 418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationSnapshot",
      "description": "Handles the deletion of application snapshots by sending a structured request and returning a typed response. Operates with context objects and specific exception types derived from AWS JSON protocols. Used to safely remove snapshots while managing known error conditions during the process.",
      "description_length": 291,
      "index": 419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationReferenceDataSource",
      "description": "Handles deletion of application reference data sources by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types tied to application configuration. Used to safely remove data source references while handling AWS-specific exceptions.",
      "description_length": 318,
      "index": 420,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationOutput",
      "description": "Handles AWS JSON-based deletion confirmation requests for applications, processing responses and specific error conditions such as concurrent modifications, invalid arguments, and resource not found. Operates on context objects and structured request/response types defined in the Smaws_Lib framework. Used to validate and execute application deletion workflows in distributed systems.",
      "description_length": 385,
      "index": 421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationInputProcessingConfiguration",
      "description": "Processes deletion requests for application input processing configurations by validating context and request parameters. Operates on AWS JSON protocol errors and specific exception types derived from XML structures. Used to handle concurrent modification, invalid arguments, and resource not found scenarios during deletion.",
      "description_length": 325,
      "index": 422,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationCloudWatchLoggingOption",
      "description": "Handles the deletion of CloudWatch logging configurations for an application, accepting a context and request structure. Processes specific exception types and returns a response tailored to AWS Kinesis Firehose operations. Used to manage logging settings in real-time data pipelines.",
      "description_length": 284,
      "index": 423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplication",
      "description": "Handles deletion requests for applications by validating input, checking resource states, and enforcing concurrency controls. Operates on structured request and response types specific to application management. Used to safely remove applications while detecting conflicts, invalid configurations, or unauthorized access attempts.",
      "description_length": 330,
      "index": 424,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.CreateApplicationSnapshot",
      "description": "Handles the creation of application snapshots by processing a structured request and returning a response or specific error conditions. Operates with context data and custom exception types derived from AWS JSON protocols. Used to safely capture the state of an application under defined constraints and error scenarios.",
      "description_length": 320,
      "index": 425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.CreateApplicationPresignedUrl",
      "description": "Handles the generation of pre-signed URLs for creating applications, accepting a context and request structure. Operates with AWS-specific types including context data, request parameters, and error variants tied to AWS API responses. Used to securely grant temporary access to application creation endpoints in AWS services.",
      "description_length": 325,
      "index": 426,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.CreateApplication",
      "description": "Handles application creation requests by validating input, checking resource constraints, and managing concurrency. Operates on context objects and structured request/response types specific to AWS service interactions. Used to enforce business rules during application provisioning and report detailed error conditions when validation fails.",
      "description_length": 342,
      "index": 427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationVpcConfiguration",
      "description": "Handles the creation of VPC configurations for applications by processing a request and returning a response or specific error conditions. Operates on custom request and response types derived from AWS JSON protocols. Used to manage network settings in cloud application deployments where VPC integration is required.",
      "description_length": 317,
      "index": 428,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationReferenceDataSource",
      "description": "Handles the creation of application reference data sources by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types tied to application configuration. Used to integrate external data sources into application workflows while managing concurrency and validation constraints.",
      "description_length": 359,
      "index": 429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationOutput",
      "description": "Handles the submission of application output data by sending a structured request to a service endpoint. Operates with context objects, request records, and custom exception types to manage validation and service-specific errors. Used to update or record application outputs in a distributed system while handling concurrency and resource constraints.",
      "description_length": 351,
      "index": 430,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationInputProcessingConfiguration",
      "description": "Processes an application input processing configuration request by validating input, checking resource states, and applying configuration changes. Works with context objects, request records, and custom exception types to handle specific AWS-related errors. Used to update or set input processing settings for applications in a controlled, error-checked manner.",
      "description_length": 361,
      "index": 431,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationInput",
      "description": "Handles the submission of application registration requests by validating input parameters against predefined rules, processing the request within a given context, and returning structured responses or specific exception types. Operates with context objects, request records, and custom exception types derived from AWS JSON protocol definitions. Used to enforce input constraints and manage concurrency during application registration workflows.",
      "description_length": 446,
      "index": 432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationCloudWatchLoggingOption",
      "description": "Handles the creation of a CloudWatch logging configuration for an application by sending a structured request and returning a result that includes either the response or specific error conditions. Operates with context data, request parameters, and detailed error types related to application configuration and AWS service interactions. Used to integrate logging setup into an application's deployment workflow, ensuring proper error handling for AWS-specific exceptions.",
      "description_length": 471,
      "index": 433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects, untag_resource_request records, and untag_resource_response records. Used to remove tags from EC2 instances, S3 buckets, or RDS databases via AWS API calls.",
      "description_length": 289,
      "index": 434,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.TagResource",
      "description": "Handles AWS resource tagging requests by processing context and tag resource operations, returning structured responses or specific error types. Operates with AWS JSON protocol structures and exception types defined in the Smaws_Lib library. Used to apply or modify tags on AWS resources within a controlled execution context.",
      "description_length": 326,
      "index": 435,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_PI.ListTagsForResource",
      "description": "Handles AWS service requests to retrieve tags associated with a specific resource. Operates on structured request and response types defined for the ListTagsForResource operation. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 259,
      "index": 436,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_PI.ListPerformanceAnalysisReports",
      "description": "Processes performance analysis reports by sending a request to retrieve a list of reports, handling specific error cases such as invalid input, authorization issues, and internal service failures. Operates on context data and structured request/response types defined in Smaws_Lib. Used to fetch and validate performance data for system diagnostics and reporting.",
      "description_length": 363,
      "index": 437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.ListAvailableResourceMetrics",
      "description": "Handles AWS CloudWatch metric requests by fetching available resource metrics. Operates on context and request types specific to AWS services, returning structured responses or detailed error variants. Used to retrieve metric data for monitoring and logging purposes in cloud infrastructure.",
      "description_length": 291,
      "index": 438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.ListAvailableResourceDimensions",
      "description": "Provides functions to send a request for available resource dimensions and handle specific error cases. Operates with context objects, request records, and response structures tied to AWS services. Used to retrieve dimension metadata for monitoring and resource tracking in cloud infrastructure.",
      "description_length": 295,
      "index": 439,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetResourceMetrics",
      "description": "Handles AWS API requests to retrieve resource metrics by serializing and sending a structured request, then parsing the JSON response. Operates with context objects, custom request records, and specific error types defined by the AWS protocol. Used to monitor cloud resource performance by fetching detailed metric data from the service.",
      "description_length": 337,
      "index": 440,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetResourceMetadata",
      "description": "Requests metadata for a specific resource using a given context, handling various error conditions. It operates with AWS context objects and custom request/response types tailored for metadata retrieval. Used to fetch detailed information about resources in a controlled, error-aware manner.",
      "description_length": 291,
      "index": 441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetPerformanceAnalysisReport",
      "description": "Handles AWS API requests for performance analysis reports, processing context and request parameters to generate structured responses. Operates with custom record types for requests and responses, along with error variants specific to AWS service interactions. Used to retrieve detailed system performance metrics under controlled access conditions.",
      "description_length": 349,
      "index": 442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetDimensionKeyDetails",
      "description": "Handles AWS API requests to retrieve detailed information about a dimension key. Operates on context objects and specific request/response types defined in the Smaws_Lib framework. Used to fetch metadata for dimension keys in cloud monitoring systems.",
      "description_length": 251,
      "index": 443,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_PI.DescribeDimensionKeys",
      "description": "Handles AWS CloudWatch request for retrieving dimension keys, processing context and error responses. Operates with specific request and response types including error variants for service and authorization issues. Used to fetch metadata for time series data in monitoring systems.",
      "description_length": 281,
      "index": 444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.DeletePerformanceAnalysisReport",
      "description": "Handles deletion of performance analysis reports by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types tied to AWS JSON protocols. Used to manage report lifecycle in monitoring systems with explicit error handling for service failures and authorization issues.",
      "description_length": 350,
      "index": 445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.CreatePerformanceAnalysisReport",
      "description": "Handles request submission for generating performance analysis reports based on provided context and input parameters. Operates on custom request and response types specific to the Smaws_Lib framework. Used to initiate report generation workflows in distributed system monitoring scenarios.",
      "description_length": 290,
      "index": 446,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.UpdateTable",
      "description": "Handles AWS DynamoDB update operations by sending structured requests and returning typed responses. Processes data types such as update_table_request and update_table_response, along with specific error variants from AWS protocols. Used to modify table configurations, adjust provisioned throughput, or update global secondary indexes in a controlled, error-aware manner.",
      "description_length": 372,
      "index": 447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.UntagResource",
      "description": "Handles AWS resource untagging by sending a structured request and returning a typed response. Operates with context, untag_resource_request, and various error types specific to AWS service interactions. Used to remove tags from resources in compliance with AWS API constraints and error handling requirements.",
      "description_length": 310,
      "index": 448,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.TagResource",
      "description": "Handles AWS resource tagging requests by sending a structured JSON payload and parsing the response. It operates with context objects, request records, and custom exception types specific to AWS services. Used to apply or modify tags on AWS resources like EC2 instances or S3 buckets within a controlled error-handling flow.",
      "description_length": 324,
      "index": 449,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.RestoreTable",
      "description": "Handles AWS Glue table restoration requests by validating input parameters, checking resource existence, and managing access permissions. Operates on structured data types such as restore_table_request and restore_table_response, along with custom exception types for error handling. Used to restore deleted tables in a data lake environment, ensuring data integrity and compliance with access controls.",
      "description_length": 403,
      "index": 450,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.ListTagsForResource",
      "description": "Provides functions to send a request for listing tags associated with a specific AWS resource and handle various AWS-specific error responses. Operates with AWS context, request, and response types defined in Smaws_Lib. Used to retrieve tags for resources like EC2 instances or S3 buckets during infrastructure management tasks.",
      "description_length": 328,
      "index": 451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.ListTables",
      "description": "Handles AWS DynamoDB list tables requests by sending a structured query and returning a response with table names. Processes context and request records, and returns results with specific error variants. Used to retrieve a list of DynamoDB tables in a given AWS account.",
      "description_length": 270,
      "index": 452,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.ListKeyspaces",
      "description": "Provides functions to request and handle responses for listing keyspaces in a database system, using context and request objects. Works with custom types such as `list_keyspaces_request`, `list_keyspaces_response`, and exception types for error handling. Used to retrieve available keyspaces in a managed database service, ensuring proper error signaling for access and system issues.",
      "description_length": 384,
      "index": 453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.GetTableAutoScalingSettings",
      "description": "Handles AWS DynamoDB table auto-scaling configuration retrieval by sending a structured request and parsing the JSON response. Operates on context objects, request records, and various exception types specific to DynamoDB's API. Used to monitor and manage throughput capacity settings for DynamoDB tables in production environments.",
      "description_length": 332,
      "index": 454,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.GetTable",
      "description": "Handles AWS DynamoDB `GetItem` operations by sending structured requests and parsing specific error responses. Works with context objects, request records, and detailed response types including exception variants. Used to retrieve individual items from a DynamoDB table with precise error handling for AWS-specific exceptions.",
      "description_length": 326,
      "index": 455,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.GetKeyspace",
      "description": "Handles AWS DynamoDB `GetKeyspace` requests by validating input, constructing JSON payloads, and parsing responses. Operates on context objects, request records, and custom exception types specific to AWS service errors. Used to retrieve metadata about a DynamoDB table's primary key structure during data migration or schema validation workflows.",
      "description_length": 347,
      "index": 456,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.DeleteTable",
      "description": "Handles AWS DynamoDB delete table requests by validating input, checking resource existence, and managing access permissions. Operates on structured request and response types specific to DynamoDB table deletion. Processes exceptions such as access denial, resource not found, and service quotas to ensure safe and controlled table removal.",
      "description_length": 340,
      "index": 457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.DeleteKeyspace",
      "description": "Handles deletion requests for a keyspace by validating input, checking permissions, and interacting with the underlying system. Operates on context objects, request records, and response structures specific to the AWS JSON protocol. Used to safely remove a keyspace while managing exceptions such as access denial, resource not found, and service quotas.",
      "description_length": 354,
      "index": 458,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.CreateTable",
      "description": "Handles AWS DynamoDB table creation requests by validating input, checking resource constraints, and interacting with the AWS service to generate a response. Operates on context objects, request structures, and custom exception types specific to DynamoDB. Used to enforce access controls, detect naming conflicts, and manage service limits during table provisioning.",
      "description_length": 366,
      "index": 459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.CreateKeyspace",
      "description": "Handles the creation of a keyspace by sending a structured request and returning a typed response. Operates with context objects, request records, and custom exception types specific to AWS service interactions. Used to initialize database namespaces in distributed systems with strict error handling for service-specific failures.",
      "description_length": 331,
      "index": 460,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.PutResourceAttributes",
      "description": "Handles AWS PutResourceAttributes API requests by validating context, serializing input, and processing responses. Operates on Smaws_Lib.Context.t and custom request/response types specific to AWS resource attribute updates. Used to programmatically set metadata on AWS resources within a controlled execution environment.",
      "description_length": 322,
      "index": 461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.NotifyMigrationTaskState",
      "description": "Handles the request to notify of a migration task state change, accepting a context and a request structure, and returns a result with specific error types. Operates with custom types such as `notify_migration_task_state_request` and `notify_migration_task_state_result`. Used to update task status in a migration system, integrating with AWS JSON protocols and handling exceptions like access denial or resource not found.",
      "description_length": 423,
      "index": 462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.NotifyApplicationState",
      "description": "Handles application state notifications by sending requests with context and structured input, returning results or specific error types. Operates on context objects and custom request/response types tied to application state management. Used to trigger state updates in distributed systems while handling AWS-specific error conditions.",
      "description_length": 336,
      "index": 463,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListProgressUpdateStreams",
      "description": "Handles AWS ListProgressUpdateStreams API requests, processing context and request parameters to retrieve progress update streams. Operates with AWS context objects and specific request/response types defined in the Smaws_Lib module. Used to monitor and manage progress tracking for long-running AWS operations.",
      "description_length": 311,
      "index": 464,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListMigrationTasks",
      "description": "Handles AWS list migration tasks requests by validating context, processing input, and returning structured results or specific error types. Operates on AWS context objects and migration task request parameters. Used to retrieve migration task lists in cloud management workflows, ensuring proper error handling for service-specific exceptions.",
      "description_length": 344,
      "index": 465,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListDiscoveredResources",
      "description": "Provides functions to send a request for discovered resources and handle specific AWS exceptions, including access denied, home region not set, and internal server errors. Operates with context objects and structured request/response types from the Smaws_Lib library. Used to retrieve and manage resource listings in AWS environments with detailed error handling.",
      "description_length": 363,
      "index": 466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListCreatedArtifacts",
      "description": "Handles artifact retrieval by sending a request to a service, processing the response, and managing specific error conditions. Operates with context objects, request records, and result types containing artifact lists or detailed error variants. Used to fetch a list of artifacts created within a specified timeframe from a cloud management system.",
      "description_length": 348,
      "index": 467,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListApplicationStates",
      "description": "Handles AWS request to list application states, returning results or specific error types based on context. Operates with AWS context and request structures, producing detailed error responses. Used to retrieve application state information from AWS services with precise exception handling.",
      "description_length": 291,
      "index": 468,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ImportMigrationTask",
      "description": "Handles the request to import or migrate tasks by interacting with AWS services, returning detailed results or specific error conditions. Operates with context objects and custom exception types derived from AWS JSON protocols. Used to manage task imports in cloud infrastructure workflows where error handling is critical.",
      "description_length": 323,
      "index": 469,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DisassociateDiscoveredResource",
      "description": "Handles the request to disassociate a discovered resource from an AWS service, returning results or specific exception types. Operates with context and request structures specific to AWS operations. Used to manage resource relationships in cloud infrastructure management workflows.",
      "description_length": 282,
      "index": 470,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DisassociateCreatedArtifact",
      "description": "Handles the disassociation of a created artifact from a resource, accepting a context and request structure. Processes specific error types and returns a result containing either success data or detailed error information. Used in scenarios where an artifact must be explicitly detached from its parent resource in an AWS-like service.",
      "description_length": 335,
      "index": 471,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DescribeMigrationTask",
      "description": "Handles the retrieval of detailed information about a specific migration task by sending a request to the appropriate service. Operates with context objects, request records, and a variety of result and error types specific to migration management. Used to fetch task status, configuration, and related metadata during migration workflows.",
      "description_length": 339,
      "index": 472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DescribeApplicationState",
      "description": "Handles AWS application state description requests by validating context, processing input, and returning structured results. Operates with AWS context objects and custom exception types derived from AWS error protocols. Used to retrieve detailed application configurations in cloud management systems.",
      "description_length": 302,
      "index": 473,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DeleteProgressUpdateStream",
      "description": "Handles AWS delete progress update stream requests, returning results or specific error types based on the outcome. Operates with context and request data structures specific to AWS operations. Used to monitor or manage deletion progress in distributed systems with detailed error reporting.",
      "description_length": 291,
      "index": 474,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.CreateProgressUpdateStream",
      "description": "Handles AWS request for creating a progress update stream, returning detailed results or specific error types. Operates on context and request records, including error variants for AWS service interactions. Used to manage and monitor long-running AWS operations with structured error handling.",
      "description_length": 293,
      "index": 475,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.AssociateDiscoveredResource",
      "description": "Handles AWS associate discovered resource requests by sending a structured request and returning a result with specific error types. Operates with context data and custom exception types derived from AWS error responses. Used to link resources in AWS environments when validation and error handling are required.",
      "description_length": 312,
      "index": 476,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.AssociateCreatedArtifact",
      "description": "Handles the creation of associations between resources by sending a structured request and returning a result or specific error types. Operates with context objects and custom request/response types tied to resource linking. Used to establish relationships in a system where resource dependencies must be explicitly defined and validated.",
      "description_length": 338,
      "index": 477,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateServiceSetting",
      "description": "Handles requests to update service settings, returning results or specific error conditions. Operates with context objects and structured request/response types related to service configuration. Used to modify settings in a distributed system while managing concurrency and validation constraints.",
      "description_length": 297,
      "index": 478,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateResourceDataSync",
      "description": "Requests synchronization of resource data using a provided context and configuration, returning results or specific error types. It handles structured request and response data tied to resource synchronization processes. Used to manage and validate data sync operations in distributed systems.",
      "description_length": 293,
      "index": 479,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdatePatchBaseline",
      "description": "Handles the request to update a patch baseline by applying a specified set of rules and approvals. Operates on AWS-specific request and response types, including error variants for missing resources and server issues. Used to programmatically modify system patching configurations in cloud environments.",
      "description_length": 303,
      "index": 480,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateOpsMetadata",
      "description": "Handles AWS OpsMetadata updates by processing requests and returning results or specific error conditions. Operates on context objects and structured request/response types related to metadata operations. Used to manage metadata updates in systems requiring precise error handling and validation.",
      "description_length": 296,
      "index": 481,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateOpsItem",
      "description": "Handles the creation or modification of an OpsItem by sending a request with specific parameters and returning a result that includes detailed error information. Operates on custom request and response types derived from AWS JSON protocols. Used to update existing OpsItems or create new ones while handling AWS-specific exceptions.",
      "description_length": 332,
      "index": 482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateManagedInstanceRole",
      "description": "Handles AWS EC2 managed instance role updates by processing requests and returning results or specific error types. Operates with context objects and structured request/response data. Used to modify instance roles in cloud infrastructure workflows.",
      "description_length": 248,
      "index": 483,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateMaintenanceWindowTask",
      "description": "Handles the modification of existing maintenance window tasks by accepting a context and a request structure, returning a result that includes success or specific error conditions. Operates with AWS-specific types such as `update_maintenance_window_task_request` and `update_maintenance_window_task_result`. Used to update task parameters in AWS Systems Manager, such as changing the schedule or target groups.",
      "description_length": 410,
      "index": 484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateMaintenanceWindowTarget",
      "description": "Handles the request to update a maintenance window target by accepting a context and a request structure, returning a result that includes success or specific error conditions. Operates with AWS-specific types such as `update_maintenance_window_target_request` and `update_maintenance_window_target_result`. Used to modify target configurations in AWS Systems Manager within automated infrastructure management workflows.",
      "description_length": 421,
      "index": 485,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateMaintenanceWindow",
      "description": "Handles the request to update a maintenance window by validating input and interacting with the underlying system. Operates on context objects and structured request/response types specific to AWS maintenance window configurations. Used to modify existing maintenance window settings in cloud infrastructure management workflows.",
      "description_length": 329,
      "index": 486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateDocumentMetadata",
      "description": "Handles metadata updates for documents by validating context and request parameters, then returning structured responses or specific error types. Operates on document metadata structures and AWS JSON protocol errors. Used to enforce version control and operation validity during document metadata modifications.",
      "description_length": 311,
      "index": 487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateDocumentDefaultVersion",
      "description": "Handles the request to update a document's default version by validating input, checking document existence, and applying the change. Works with context objects, request records, and error types specific to document management. Used to ensure a specified version becomes the active default in systems managing document revisions.",
      "description_length": 329,
      "index": 488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateDocument",
      "description": "Handles document updates by validating input, checking version constraints, and ensuring schema compliance. Processes structured data including document content, version names, and schema versions. Used to manage document revisions in a system with strict versioning and content validation rules.",
      "description_length": 296,
      "index": 489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateAssociationStatus",
      "description": "Handles AWS EC2 association status updates by sending requests and processing specific error conditions. Operates with context objects, request records, and custom error types derived from AWS JSON protocols. Used to manage instance association states in cloud infrastructure workflows.",
      "description_length": 286,
      "index": 490,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateAssociation",
      "description": "Handles the request to update an association by validating input, checking version constraints, and ensuring target compatibility. Works with context data, association requests, and error-specific types for detailed failure reporting. Used to modify existing associations in a managed environment, such as updating a document reference or schedule.",
      "description_length": 348,
      "index": 491,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UnlabelParameterVersion",
      "description": "Handles AWS SSM parameter version unlabeling by accepting a context and request, returning results or specific errors like missing parameter or version. Operates with AWS context objects and structured request/response types. Used to remove labels from specific parameter versions in AWS Systems Manager.",
      "description_length": 304,
      "index": 492,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.TerminateSession",
      "description": "Handles session termination requests by validating context and processing structured input, returning a response or specific error types. Operates on context objects and session request/response records defined in related modules. Used to gracefully end user sessions in distributed systems with explicit error handling for service failures.",
      "description_length": 341,
      "index": 493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StopAutomationExecution",
      "description": "Handles requests to stop an automation execution by interacting with AWS Systems Manager. It processes a specific request structure and returns a result or one of several typed errors, including execution not found, internal server issues, or invalid status updates. Works with AWS JSON protocol types and exception structures directly.",
      "description_length": 336,
      "index": 494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartSession",
      "description": "Handles session initiation by sending a request and returning a result with specific error types. Operates on context objects and session request/response structures. Used to establish a connection with a target device, validating input and managing protocol-specific errors.",
      "description_length": 275,
      "index": 495,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartChangeRequestExecution",
      "description": "Handles the initiation of a change request execution by validating context and parameters, then returning a result or specific exception. Operates on `Smaws_Lib.Context.t` and custom request and response types derived from AWS JSON protocols. Used to trigger automated change processes with strict error handling for approval, version, and parameter constraints.",
      "description_length": 362,
      "index": 496,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_SSM.StartAutomationExecution",
      "description": "Handles the initiation of automation executions by sending a request with context and parameters, returning detailed results or specific exception types. Operates with context objects and structured request data to manage automation workflows. Used to trigger automated tasks in systems requiring precise error handling and execution tracking.",
      "description_length": 343,
      "index": 497,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartAssociationsOnce",
      "description": "Handles the initiation of a single association request using a specific context, returning a result that may include errors such as missing or invalid associations. Operates with `Smaws_Lib.Context.t` and custom error types derived from AWS JSON protocols. Used to manage one-time association setup in systems requiring precise control over resource linking.",
      "description_length": 358,
      "index": 498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.SendCommand",
      "description": "Handles AWS SSM send command requests by validating input, processing parameters, and returning structured results. Operates on context objects, command requests, and error-specific types derived from AWS JSON protocols. Used to execute commands on EC2 instances with precise error handling for invalid inputs and service issues.",
      "description_length": 329,
      "index": 499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.SendAutomationSignal",
      "description": "Handles the transmission of automation signals with context, validating and processing requests against specific exception types. Operates on custom request and result types, including error variants for missing execution or step references. Used to trigger or manage automated workflows in cloud infrastructure systems.",
      "description_length": 320,
      "index": 500,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ResumeSession",
      "description": "Handles session resumption by validating and processing a request with context, returning a response or specific error types. Operates on context objects and custom request/response types tied to session management. Used to restore user state after interruption, such as in long-running workflows or interrupted transactions.",
      "description_length": 325,
      "index": 501,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ResetServiceSetting",
      "description": "Handles AWS JSON protocol requests to reset service settings, returning results or specific error types. Operates with context objects and structured request/response types from the Smaws_Lib library. Used to manage service configuration changes in distributed systems with precise error handling.",
      "description_length": 297,
      "index": 502,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RemoveTagsFromResource",
      "description": "Removes specified tags from a resource using an AWS-compatible request structure. It processes resource identifiers and tag keys, interacting with AWS services to modify resource metadata. The function handles errors such as invalid resource IDs, unsupported types, and server issues.",
      "description_length": 284,
      "index": 503,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterTaskWithMaintenanceWindow",
      "description": "Handles the submission of a task to a maintenance window, validating parameters and managing exceptions such as resource limits and invalid inputs. Operates on context objects and structured request data to produce a result with detailed error handling. Used to integrate task scheduling with system maintenance workflows in AWS environments.",
      "description_length": 342,
      "index": 504,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterTargetWithMaintenanceWindow",
      "description": "Handles the creation of a target association with a maintenance window by validating parameters, checking resource limits, and managing idempotency. Operates on context data, request structures, and various error types specific to AWS API interactions. Used to integrate systems with AWS Maintenance Window services for scheduled task execution.",
      "description_length": 345,
      "index": 505,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterPatchBaselineForPatchGroup",
      "description": "Provides functions to send a request for registering a patch baseline with a patch group, handling specific error types such as already existing, non-existent, or invalid resources. Operates with context data, request objects, and result types defined by the Smaws_Lib library. Used to manage AWS Systems Manager patch baseline associations in infrastructure automation workflows.",
      "description_length": 380,
      "index": 506,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterDefaultPatchBaseline",
      "description": "Handles the request to set a default patch baseline by accepting a context and a request structure, returning a result with specific error types. Operates with AWS-specific types such as `register_default_patch_baseline_request` and `register_default_patch_baseline_result`. Used to configure system patch management policies in AWS Systems Manager.",
      "description_length": 349,
      "index": 507,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.PutResourcePolicy",
      "description": "Handles AWS resource policy updates by validating and applying policy documents to specific resources. Operates on context objects and structured request/response types related to AWS service policies. Used to enforce access control policies on resources, detect conflicts, and manage policy limits during deployment workflows.",
      "description_length": 327,
      "index": 508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.PutParameter",
      "description": "Handles AWS SSM PutParameter operations by sending requests with specific parameter configurations. Works with context objects, request records, and error types defined in the AWS SSM protocol. Used to store or update parameters in the AWS Systems Manager Parameter Store with validation and error handling.",
      "description_length": 307,
      "index": 509,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.PutInventory",
      "description": "Handles inventory data submission to a system, processing requests with detailed error handling for specific validation and system constraints. Operates on structured inventory data and context information, including instance IDs and schema versions. Used to enforce limits on inventory size, schema complexity, and item validity during system updates.",
      "description_length": 352,
      "index": 510,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.PutComplianceItems",
      "description": "Handles AWS Systems Manager PutComplianceItems API requests by validating and submitting compliance data. Operates on resource IDs, compliance types, and item content, enforcing size and count constraints. Processes errors such as exceeding item limits, invalid resource types, or malformed content.",
      "description_length": 299,
      "index": 511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ModifyDocumentPermission",
      "description": "Handles permission modification requests for documents by validating input, checking limits, and applying changes. Operates on context objects, permission requests, and error-specific types related to document access controls. Used to enforce access policies and manage user-level document permissions in a secure, controlled manner.",
      "description_length": 333,
      "index": 512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListTagsForResource",
      "description": "Handles AWS ListTagsForResource requests by accepting a context and a request structure, returning tags associated with a specific resource. Operates on AWS JSON protocol errors and custom error types related to resource validity. Used to retrieve tags for EC2 instances, S3 buckets, or RDS databases by their unique identifiers.",
      "description_length": 329,
      "index": 513,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListResourceDataSync",
      "description": "Handles AWS SSM ListResourceDataSync requests, processing context and returning results with specific error types. Operates on AWS JSON protocol responses and error structures. Used to retrieve and validate resource data synchronization configurations from AWS SSM.",
      "description_length": 265,
      "index": 514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListResourceComplianceSummaries",
      "description": "Handles AWS SSM resource compliance summary requests, processing filters and pagination tokens to retrieve system compliance data. Operates on AWS JSON protocol responses and error types specific to SSM. Used to fetch detailed compliance status for managed instances or resources in a structured format.",
      "description_length": 303,
      "index": 515,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListOpsMetadata",
      "description": "Handles metadata retrieval for list operations, processing context and request parameters to return structured results. Operates on custom request and result types specific to AWS operations. Used to fetch and validate operational metadata in distributed systems.",
      "description_length": 263,
      "index": 516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListOpsItemRelatedItems",
      "description": "Provides functions to fetch related items for an Ops Item, handling specific request and response structures. Operates with context objects, request parameters, and custom error types. Used to retrieve related items in AWS Systems Manager operations.",
      "description_length": 250,
      "index": 517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListOpsItemEvents",
      "description": "Handles retrieval of operational item events with context, supporting error-specific responses for invalid parameters, limits, and not found scenarios. Operates on request and response records specific to AWS OpsItems. Used to fetch event history for troubleshooting and auditing purposes.",
      "description_length": 289,
      "index": 518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListInventoryEntries",
      "description": "Processes inventory entry requests by filtering and retrieving system data based on instance IDs and type names. Operates on structured request objects and returns results with detailed error handling for invalid inputs. Used to fetch and validate system inventory information in cloud management workflows.",
      "description_length": 307,
      "index": 519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListDocuments",
      "description": "Handles AWS ListDocuments API requests, processing filter keys and pagination tokens to retrieve document listings. Accepts context and request parameters, returning structured results or specific error types. Used to fetch and filter system-managed documents in cloud infrastructure workflows.",
      "description_length": 294,
      "index": 520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListDocumentVersions",
      "description": "Provides operations to request and handle responses for listing document versions, including error handling for invalid inputs and server issues. Works with context objects, request parameters, and structured results containing version lists. Used to retrieve versioned document data from an API, managing pagination and validation constraints.",
      "description_length": 344,
      "index": 521,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListDocumentMetadataHistory",
      "description": "Handles retrieval of a document's metadata history by querying a service, returning structured responses or specific error types. Operates with context objects and request/response records tailored to document versioning. Used to track changes in document metadata for auditing or version control purposes.",
      "description_length": 306,
      "index": 522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListComplianceSummaries",
      "description": "Handles AWS API requests to retrieve compliance summaries, processing filters and pagination tokens. Operates on context objects, request parameters, and AWS JSON error types. Used to fetch system compliance data for auditing or reporting purposes.",
      "description_length": 248,
      "index": 523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListComplianceItems",
      "description": "Handles AWS SSM list compliance items requests, validating context and parameters while returning results or specific error types. Operates on AWS context objects and compliance item request structures. Used to retrieve compliance data for resources in AWS Systems Manager.",
      "description_length": 273,
      "index": 524,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListCommands",
      "description": "Handles request processing for listing commands, including validation of command IDs, instance IDs, and filters. Operates on context objects and request structures to generate results or specific error types. Used to retrieve command listings with pagination and filtering in AWS integration scenarios.",
      "description_length": 302,
      "index": 525,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListCommandInvocations",
      "description": "Processes AWS command invocation list requests by filtering and retrieving data based on context, command ID, instance ID, and pagination tokens. Operates on structured request and result types specific to AWS SSM command invocations. Handles errors such as invalid command IDs, instance IDs, and malformed pagination tokens.",
      "description_length": 325,
      "index": 526,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListAssociations",
      "description": "Handles AWS API requests to retrieve association data, processing context and request parameters to return structured results. Operates with AWS context objects and custom request/response types specific to the service. Used to fetch and paginate through association records in a cloud infrastructure management system.",
      "description_length": 319,
      "index": 527,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListAssociationVersions",
      "description": "Provides functions to request and handle responses for listing association versions, working with AWS context and specific request/response types. Processes data structures including association versions, error types, and pagination tokens. Used to retrieve version history of associations in AWS Systems Manager, handling errors like missing associations or invalid tokens.",
      "description_length": 374,
      "index": 528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.LabelParameterVersion",
      "description": "Provides functions to request and handle responses for label parameter version operations, working with context and specific error types. Processes data structures like label_parameter_version_request and label_parameter_version_result. Used to manage parameter version labels in AWS Systems Manager, handling cases such as exceeding label limits or encountering server errors.",
      "description_length": 377,
      "index": 529,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetServiceSetting",
      "description": "Handles AWS service setting retrieval by sending a structured request and returning specific results or errors, including service not found and internal server errors. Operates with context objects and custom request/response types tailored for AWS API interactions. Used to fetch configuration parameters from AWS services during runtime configuration checks.",
      "description_length": 360,
      "index": 530,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetResourcePolicies",
      "description": "Handles AWS service requests to retrieve resource policies, processing input parameters and returning structured responses. Operates with context objects, request records, and custom error types specific to AWS JSON protocols. Used to fetch policy details for resources in cloud infrastructure systems.",
      "description_length": 302,
      "index": 531,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetPatchBaselineForPatchGroup",
      "description": "Handles AWS SSM API requests to retrieve the patch baseline associated with a specific patch group. Operates on context objects and structured request/response types from the AWS SSM service. Used to fetch baseline configurations for automated patching workflows in system management.",
      "description_length": 284,
      "index": 532,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetPatchBaseline",
      "description": "Handles AWS SSM get_patch_baseline requests, returning detailed baseline information or specific error conditions. Operates with context objects and structured request/response types from the Smaws_Lib library. Used to retrieve patch baseline configurations for system management tasks.",
      "description_length": 286,
      "index": 533,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetParametersByPath",
      "description": "Handles AWS JSON protocol requests to extract parameters from a given path, validating and parsing filters, keys, and tokens. Operates on context objects, request structures, and error types specific to AWS services. Used to process API gateway requests where query parameters and path segments need structured extraction and validation.",
      "description_length": 337,
      "index": 534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetParameters",
      "description": "Handles AWS GetParameters requests by fetching parameter values from a configured store, supporting both direct retrieval and recursive resolution. Operates on context objects and custom request/response types specific to AWS Systems Manager. Used to dynamically load configuration values during service initialization or runtime configuration adjustments.",
      "description_length": 356,
      "index": 535,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetParameterHistory",
      "description": "Handles requests to retrieve historical data for a specific parameter, accepting a context and a request structure. Operates on AWS-specific types including context, error variants, and parameter-related data. Used to fetch versioned parameter history from AWS Systems Manager, supporting pagination and error handling for invalid inputs.",
      "description_length": 338,
      "index": 536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetParameter",
      "description": "Handles AWS Systems Manager parameter retrieval by validating context, processing requests, and returning results or specific error types. Operates with context objects, request records, and custom error variants. Used to fetch secure parameters from SSM, validate key IDs, and manage version-specific parameter access.",
      "description_length": 319,
      "index": 537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetOpsSummary",
      "description": "Provides functions to request and handle results from a service that summarizes get operations, including error handling for specific exceptions like invalid aggregators, filters, and resource data sync issues. Works with context objects and structured request/response types related to operation summaries. Used to retrieve and process detailed operation data in distributed systems with error-specific responses.",
      "description_length": 414,
      "index": 538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetOpsMetadata",
      "description": "Handles AWS OpsMetadata retrieval requests, processing context and input parameters to fetch metadata. Operates on AWS context objects and specific request/response types defined in the Smaws_Lib framework. Used to fetch system metadata for troubleshooting or configuration auditing in cloud environments.",
      "description_length": 305,
      "index": 539,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetOpsItem",
      "description": "Handles AWS Systems Manager GetOpsItem requests by validating context, parsing input, and returning structured responses. Operates on AWS JSON protocol errors and specific exception types related to access and existence checks. Used to retrieve detailed operational item data in cloud management workflows.",
      "description_length": 306,
      "index": 540,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowTask",
      "description": "Handles retrieval of specific maintenance window tasks by ID, using a context and request structure. Operates on AWS JSON protocol types and custom exception types for error handling. Used to fetch task details from cloud infrastructure systems.",
      "description_length": 245,
      "index": 541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowExecutionTaskInvocation",
      "description": "Handles AWS Systems Manager maintenance window task invocation requests by fetching detailed execution results. Operates on context objects and specific request/response types defined in the Smaws_Lib library. Processes errors such as missing resources or internal server issues during invocation retrieval.",
      "description_length": 307,
      "index": 542,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowExecutionTask",
      "description": "Handles retrieval of specific maintenance window execution tasks by ID, validating context and processing AWS JSON responses. Operates with AWS context objects, request records, and custom error types. Used to fetch detailed execution status for scheduled maintenance tasks in cloud infrastructure management.",
      "description_length": 309,
      "index": 543,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowExecution",
      "description": "Handles AWS Systems Manager maintenance window execution requests by fetching detailed execution data. Operates on context objects and structured request/response types specific to AWS SSM. Used to retrieve status and output of scheduled maintenance tasks.",
      "description_length": 256,
      "index": 544,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindow",
      "description": "Handles AWS API requests to retrieve maintenance window details, including error handling for specific exceptions and internal server errors. Operates with context objects and structured request/response types from the Smaws_Lib library. Used to fetch scheduled maintenance information for cloud infrastructure components.",
      "description_length": 322,
      "index": 545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetInventorySchema",
      "description": "Handles AWS API requests to retrieve inventory schema information, processing context and request parameters to generate a structured response. Operates with custom types such as `get_inventory_schema_request` and `get_inventory_schema_result`, along with error variants specific to AWS protocol responses. Used to fetch system inventory configurations in cloud management workflows.",
      "description_length": 383,
      "index": 546,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetInventory",
      "description": "Handles inventory retrieval requests by validating context and parameters, then executing queries against inventory data structures. Operates on structured request objects and returns results with detailed error handling for specific validation and system issues. Used to fetch and filter inventory records in cloud management systems.",
      "description_length": 335,
      "index": 547,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetDocument",
      "description": "Handles document retrieval by sending a structured request and returning a result or specific error types. Operates with context data and custom request/response types for AWS document operations. Used to fetch and validate documents from a service, ensuring proper error handling for invalid or missing content.",
      "description_length": 312,
      "index": 548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetDeployablePatchSnapshotForInstance",
      "description": "Handles AWS SSM API requests to retrieve a patch snapshot for a specific instance, processing input parameters and returning structured results. Operates on AWS context objects and request/response types defined in Smaws_Lib. Used to fetch patch compliance data for instance management and troubleshooting.",
      "description_length": 306,
      "index": 549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetDefaultPatchBaseline",
      "description": "Handles AWS API requests to retrieve the default patch baseline, processing input parameters and returning structured results or specific error types. Operates with context objects, request records, and AWS-specific error representations. Used to fetch system patch configurations in cloud management workflows.",
      "description_length": 311,
      "index": 550,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetConnectionStatus",
      "description": "Handles AWS API requests to determine the current connection status of a device, returning detailed response data or specific error types. Operates with context objects and structured request/response types defined in the Smaws_Lib framework. Used to monitor device connectivity in cloud-based communication systems.",
      "description_length": 316,
      "index": 551,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetCommandInvocation",
      "description": "Handles AWS GetCommandInvocation requests by fetching detailed execution results of specific commands issued to instances. Operates on context objects and structured request/response types from the Smaws_Lib library. Used to retrieve logs, exit codes, and plugin-specific outputs for troubleshooting or auditing purposes.",
      "description_length": 321,
      "index": 552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetCalendarState",
      "description": "Handles calendar state retrieval by sending a structured request and returning a typed response. Operates with context objects, custom request records, and a variety of specific error types. Used to fetch and validate calendar data from a service, ensuring precise error handling for document and calendar-related issues.",
      "description_length": 321,
      "index": 553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetAutomationExecution",
      "description": "Handles retrieval of automation execution details from AWS, accepting a context and request object to fetch structured results. Operates with AWS JSON protocol types and specific exception types for error handling. Used to monitor and debug ongoing automation processes in cloud infrastructure workflows.",
      "description_length": 304,
      "index": 554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DisassociateOpsItemRelatedItem",
      "description": "Handles the disassociation of related items from an Ops Item by sending a structured request and returning a typed response. Operates with context, request, and response types specific to AWS Systems Manager operations. Used to resolve conflicts or update relationships in operational workflows.",
      "description_length": 295,
      "index": 555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeSessions",
      "description": "Handles AWS EC2 describe-sessions requests by validating context and parameters, returning structured responses or specific error types. Operates on AWS context objects and session filter structures. Used to retrieve and filter EC2 session details in cloud management workflows.",
      "description_length": 278,
      "index": 556,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchProperties",
      "description": "Handles AWS EC2 describe patch properties requests, mapping input parameters to structured API calls. Processes context and request data to retrieve patch property information from AWS. Returns results or specific error types including internal server errors.",
      "description_length": 259,
      "index": 557,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchGroups",
      "description": "Handles AWS EC2 Patch Manager group description requests, processing input parameters and returning structured results. Operates with context objects and specific request/response types defined in the Smaws_Lib framework. Used to retrieve detailed information about patch groups in an AWS environment.",
      "description_length": 301,
      "index": 558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchGroupState",
      "description": "Handles AWS EC2 Patch Group state description requests, processing context and request parameters to retrieve patch group details. Operates with AWS JSON protocol errors, internal server errors, and invalid next token errors. Used to fetch and validate patch group status information from AWS services.",
      "description_length": 302,
      "index": 559,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchBaselines",
      "description": "Handles AWS SSM describe patch baselines requests by converting input parameters into structured API calls. Processes and returns results along with specific error types such as internal server errors. Utilizes context and request types from Smaws_Lib for seamless integration with AWS infrastructure.",
      "description_length": 301,
      "index": 560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeParameters",
      "description": "Handles AWS DescribeParameters requests by validating filters, processing pagination, and returning structured results. Operates on context objects, request records, and error types specific to AWS service interactions. Used to retrieve and filter parameter store entries with precise control over query parameters and error handling.",
      "description_length": 334,
      "index": 561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeOpsItems",
      "description": "Handles AWS EC2 DescribeOpsItems requests, processing and returning structured responses with error handling for service-specific issues. Operates on context objects and custom request/response types derived from AWS JSON protocols. Used to retrieve operational data records from AWS Systems Manager.",
      "description_length": 300,
      "index": 562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowsForTarget",
      "description": "Handles AWS API requests to retrieve maintenance window details for a specified target. Operates on context objects and structured request parameters to fetch results or specific error types. Used to query system maintenance schedules in cloud infrastructure management workflows.",
      "description_length": 280,
      "index": 563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindows",
      "description": "Handles AWS API requests to describe maintenance windows, processing input parameters and returning structured results. Operates with context objects, request records, and error types specific to AWS JSON protocols. Used to retrieve scheduled maintenance window details for cloud infrastructure management.",
      "description_length": 306,
      "index": 564,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowTasks",
      "description": "Handles AWS Systems Manager maintenance window task descriptions by accepting a context and request, returning detailed results or specific error types. Operates with AWS JSON protocol structures and exception types related to task existence and server issues. Used to retrieve information about scheduled maintenance tasks in cloud infrastructure management workflows.",
      "description_length": 369,
      "index": 565,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowTargets",
      "description": "Handles AWS Systems Manager maintenance window target discovery by accepting a context and request, returning detailed results or specific error types. Operates with AWS JSON protocol structures and exception types related to maintenance window resources. Used to retrieve information about instances, resources, or targets associated with a maintenance window.",
      "description_length": 361,
      "index": 566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowSchedule",
      "description": "Handles AWS Systems Manager maintenance window schedule deserialization, including error handling for missing resources and server issues. Operates on context objects and request/response structures specific to AWS JSON protocols. Used to retrieve detailed information about scheduled maintenance windows in cloud infrastructure management workflows.",
      "description_length": 350,
      "index": 567,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowExecutions",
      "description": "Handles AWS Systems Manager maintenance window execution queries by accepting context and request parameters, returning structured results or specific error types. Operates with AWS JSON protocol types and error representations. Used to retrieve detailed execution statuses and metadata for scheduled maintenance tasks.",
      "description_length": 319,
      "index": 568,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowExecutionTasks",
      "description": "Handles the retrieval of tasks associated with a specific maintenance window execution, accepting a context and request object. Operates on AWS-specific types such as `describe_maintenance_window_execution_tasks_request` and returns structured results along with potential error variants. Used to inspect the status and details of tasks during automated system maintenance windows.",
      "description_length": 381,
      "index": 569,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowExecutionTaskInvocations",
      "description": "Handles retrieval of task invocations within a specified maintenance window execution, accepting context and request parameters to fetch detailed results. Operates with AWS JSON protocol types and error variants specific to SSM service responses. Used to monitor and debug execution progress of scheduled maintenance tasks.",
      "description_length": 323,
      "index": 570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInventoryDeletions",
      "description": "Handles AWS EC2 inventory deletion requests by fetching deletion records, validating deletion IDs, and managing pagination through next token parameters. Operates on context objects, request structures, and error types specific to AWS EC2. Used to retrieve and filter inventory deletion history for system auditing and resource management.",
      "description_length": 339,
      "index": 571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstanceProperties",
      "description": "Handles AWS EC2 instance property description requests, processing filters and pagination tokens to retrieve instance metadata. Operates on context objects and structured request parameters, returning detailed results or specific error types related to invalid inputs. Used to fetch system information, tags, or configuration details for EC2 instances under defined criteria.",
      "description_length": 375,
      "index": 572,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstancePatches",
      "description": "Handles AWS EC2 instance patch description requests by fetching patch details based on instance ID, filters, and pagination tokens. Operates on AWS JSON protocol structures and error types specific to EC2 patching. Used to retrieve patch compliance status and update history for managed instances.",
      "description_length": 297,
      "index": 573,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstancePatchStatesForPatchGroup",
      "description": "Handles AWS SSM API requests to retrieve patch state information for instances in a specified patch group. Operates on structured request and response types related to AWS SSM's patch management system. Used to monitor compliance and patch status of EC2 instances grouped by defined patch categories.",
      "description_length": 300,
      "index": 574,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstancePatchStates",
      "description": "Handles AWS EC2 instance patch state queries by accepting a context and request structure, returning detailed patch status information or specific error types. Operates with AWS JSON protocol types and error representations. Used to retrieve and validate patch compliance data for EC2 instances in cloud management workflows.",
      "description_length": 325,
      "index": 575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstanceInformation",
      "description": "Handles AWS EC2 instance information retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects, request records, and custom error types related to instance filters and identifiers. Used to fetch system details, tags, and metadata for EC2 instances within a controlled error-handling framework.",
      "description_length": 368,
      "index": 576,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstanceAssociationsStatus",
      "description": "Handles AWS EC2 instance association status queries by accepting a context and request, returning detailed results or specific error types. Operates with AWS JSON protocol structures and instance ID-based data. Used to retrieve the status of associations for a given EC2 instance, including pagination tokens.",
      "description_length": 309,
      "index": 577,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeEffectivePatchesForPatchBaseline",
      "description": "Handles AWS Patch Manager requests to retrieve effective patches for a specified baseline, processing input parameters and returning structured results. Operates on AWS context objects and patch baseline identifiers, returning detailed patch information or specific error types. Used to generate compliance reports or automate patch management workflows in cloud infrastructure.",
      "description_length": 378,
      "index": 578,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeEffectiveInstanceAssociations",
      "description": "Handles AWS EC2 describe-effective-instance-associations API requests, processing context and parameters to retrieve network interface associations. Operates with context objects, request records, and error types specific to EC2 instance configurations. Used to fetch detailed association data for troubleshooting or monitoring network settings.",
      "description_length": 345,
      "index": 579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeDocumentPermission",
      "description": "Handles AWS Document Permission requests by validating input, processing permissions, and returning structured responses. Operates on context objects, request records, and custom error types specific to document operations. Used to manage access control and permissions for documents in AWS systems.",
      "description_length": 299,
      "index": 580,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeDocument",
      "description": "Handles AWS S3 document description requests by validating context and parameters, then fetching structured document metadata. Operates on AWS context objects and custom request records, returning detailed results or specific error types. Used to retrieve versioned document information in distributed storage systems.",
      "description_length": 318,
      "index": 581,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAvailablePatches",
      "description": "Handles AWS EC2 Systems Manager \"DescribeAvailablePatches\" API requests, processing context and parameters to retrieve patch metadata. Operates with AWS context objects and structured request/response types specific to the EC2 SSM service. Used to fetch details about available software patches for managed instances.",
      "description_length": 317,
      "index": 582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAutomationStepExecutions",
      "description": "Provides functions to request and handle results for describing automation step executions, including error handling for specific AWS exceptions. Operates with context objects, request records, and result types tied to AWS API responses. Used to retrieve detailed execution steps for automation processes in cloud management workflows.",
      "description_length": 335,
      "index": 583,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAutomationExecutions",
      "description": "Handles AWS DescribeAutomationExecutions API requests, processing filters and pagination tokens to retrieve execution details. Operates on context objects and structured request parameters, returning results or specific error types related to invalid inputs. Used to fetch and filter automation execution data from AWS Systems Manager.",
      "description_length": 335,
      "index": 584,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAssociationExecutions",
      "description": "Handles AWS SSM association execution descriptions by accepting a context and request, returning detailed results or specific error types. Operates with AWS JSON protocol structures and error variants related to SSM. Used to retrieve execution history for managed instances or configurations.",
      "description_length": 292,
      "index": 585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAssociationExecutionTargets",
      "description": "Handles AWS SSM API requests to retrieve execution targets for a specific association. Operates on context objects and structured request/response types from the Smaws_Lib library. Used to fetch detailed execution status and target instances for managed systems.",
      "description_length": 262,
      "index": 586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAssociation",
      "description": "Handles AWS EC2 describe association requests, processing context and returning detailed results or specific error conditions. Operates with custom request and result types, along with AWS-specific error variants. Used to retrieve and validate association information from EC2 instances.",
      "description_length": 287,
      "index": 587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeActivations",
      "description": "Handles AWS EC2 describe-activations API requests, processing filters and pagination tokens to retrieve activation data. Accepts context and request parameters, returning structured results or specific error types. Used to fetch and filter EC2 instance activation details in cloud management workflows.",
      "description_length": 302,
      "index": 588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterTaskFromMaintenanceWindow",
      "description": "Handles the removal of a task from a maintenance window by sending a structured request and processing the response. It operates with context objects, request records, and specific error types related to AWS API interactions. Used to manage task dependencies in automated system maintenance workflows.",
      "description_length": 301,
      "index": 589,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterTargetFromMaintenanceWindow",
      "description": "Handles AWS Systems Manager maintenance window target deregistration by processing requests and returning results or specific error conditions. Operates on context objects and structured request/response data types related to maintenance window targets. Used to remove instances or targets from scheduled maintenance windows, ensuring proper error handling for invalid or already removed targets.",
      "description_length": 396,
      "index": 590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterPatchBaselineForPatchGroup",
      "description": "Handles the removal of a patch baseline from a specified patch group by sending a structured request. Operates with AWS-specific data types such as context, request objects, and error variants. Used to manage patch compliance in AWS Systems Manager by dynamically updating baseline assignments.",
      "description_length": 294,
      "index": 591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterManagedInstance",
      "description": "Handles the request to deregister a managed instance, accepting a context and a request structure, and returns a result containing either the response or specific error types. Operates with AWS context data, instance ID validation, and error representations for internal server issues or invalid instance IDs. Used to manage instance lifecycle in cloud infrastructure by safely removing registered instances.",
      "description_length": 408,
      "index": 592,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteResourcePolicy",
      "description": "Handles AWS resource policy deletion by validating and processing requests, including error handling for specific policy-related exceptions. Operates on context data and structured request/response types tied to AWS JSON protocols. Used to enforce policy constraints and manage resource access during deletion workflows.",
      "description_length": 320,
      "index": 593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteResourceDataSync",
      "description": "Handles AWS SSM delete resource data sync operations by accepting a context and a request, returning results or specific error types. Works with AWS context objects and custom request/response types for resource data synchronization. Used to remove configured data sync settings from AWS SSM, with detailed error handling for configuration and existence issues.",
      "description_length": 361,
      "index": 594,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeletePatchBaseline",
      "description": "Handles deletion of AWS Systems Manager patch baselines by sending a request with context and parameters, returning a result or specific error types. Operates on AWS JSON protocol structures and error responses. Used to remove outdated or unused patch baselines in system management workflows.",
      "description_length": 293,
      "index": 595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteParameters",
      "description": "Handles AWS delete parameter requests by processing input parameters and returning results or specific error types. Operates on context objects and structured request data. Used to remove parameters from AWS systems with explicit error handling for service-specific and internal errors.",
      "description_length": 286,
      "index": 596,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteParameter",
      "description": "Handles AWS SSM parameter deletion requests by validating context and processing delete operations. Operates on custom request and result types specific to SSM parameter management. Manages error cases such as missing parameters and internal server issues during deletion.",
      "description_length": 272,
      "index": 597,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteOpsMetadata",
      "description": "Handles deletion requests for operational metadata by validating input, interacting with underlying systems, and returning structured results or specific error conditions. Operates on context objects and custom request/response types tied to AWS JSON protocols. Used to remove metadata entries while enforcing strict error handling for invalid or missing data.",
      "description_length": 360,
      "index": 598,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteOpsItem",
      "description": "Handles deletion requests for specific operations items by validating input parameters and interacting with the underlying system. Operates on context objects and structured request/response types related to AWS OpsItems. Used to remove targeted operational items from a system while managing specific error conditions.",
      "description_length": 319,
      "index": 599,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteMaintenanceWindow",
      "description": "Handles deletion of maintenance windows by sending a structured request and processing the response. Operates with context objects, request records, and result types including error variants. Used to remove scheduled maintenance windows in cloud infrastructure management workflows.",
      "description_length": 282,
      "index": 600,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteInventory",
      "description": "Handles inventory deletion requests by validating parameters, processing the operation, and returning structured results. Operates on custom request and result types specific to inventory management workflows. Used to remove specified inventory items from a system while enforcing strict parameter and type checks.",
      "description_length": 314,
      "index": 601,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteDocument",
      "description": "Handles document deletion requests by validating input, interacting with underlying systems, and returning structured results or specific error types. Operates on custom request and result types derived from AWS JSON protocols. Used to manage document lifecycle in a cloud-based content management system.",
      "description_length": 305,
      "index": 602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteAssociation",
      "description": "Handles the deletion of a specific association by sending a request and returning detailed results or specific error conditions. Operates with context data, deletion requests, and structured error types related to AWS operations. Used to manage resource associations in cloud infrastructure workflows.",
      "description_length": 301,
      "index": 603,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteActivation",
      "description": "Handles deletion requests for specific activation resources, validating input and returning structured results. Operates with context objects and custom error types derived from AWS JSON protocols. Used to manage resource cleanup in distributed systems with precise error reporting.",
      "description_length": 282,
      "index": 604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateResourceDataSync",
      "description": "Handles AWS SSM resource data sync configuration requests, processing and validating input to create or update sync configurations. Operates on context objects and structured request/response types specific to AWS SSM. Used to manage system inventory synchronization between AWS regions and on-premises environments.",
      "description_length": 316,
      "index": 605,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreatePatchBaseline",
      "description": "Handles the creation of a patch baseline by sending a structured request and returning a result or specific error types. Operates with context data, request parameters, and AWS-specific error structures. Used to manage system patching policies in cloud infrastructure workflows.",
      "description_length": 278,
      "index": 606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateOpsMetadata",
      "description": "Handles the creation of operational metadata by validating input, checking existing entries, and enforcing service limits. Processes structured requests and returns detailed results or specific error conditions related to metadata constraints. Used in scenarios where ensuring unique, valid, and non-excessive metadata entries is critical.",
      "description_length": 339,
      "index": 607,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateOpsItem",
      "description": "Handles the creation of an OpsItem by sending a structured request to an AWS service, returning a result that includes either a response or specific error conditions. Operates with context data, request payloads, and response structures defined by the Smaws_Lib library. Used to enforce validation and error handling during the creation of system operations records in an infrastructure management workflow.",
      "description_length": 407,
      "index": 608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateMaintenanceWindow",
      "description": "Handles the creation of maintenance windows by processing a request and returning a result or specific error conditions. Operates with context data, request structures, and custom error types related to AWS maintenance window operations. Used to manage system maintenance schedules with precise error handling for idempotency, server issues, and resource limits.",
      "description_length": 362,
      "index": 609,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateDocument",
      "description": "Handles document creation requests by validating input, checking constraints, and returning structured results. Operates on custom request and result types, along with error variants specific to document processing. Used to enforce business rules during document submission in a cloud-based content management system.",
      "description_length": 317,
      "index": 610,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateAssociationBatch",
      "description": "Handles batch creation of associations by sending a structured request and returning detailed results or specific error conditions. Operates with context data, request structures, and custom error types related to AWS systems management. Used to manage multiple instance-document associations with precise control over errors like duplicate IDs or invalid parameters.",
      "description_length": 367,
      "index": 611,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateAssociation",
      "description": "Handles the creation of associations between documents and instances, returning detailed results or specific error conditions. Operates with context objects, request structures, and custom error types related to document and instance validation. Used to manage automated configuration tasks in cloud infrastructure setups.",
      "description_length": 322,
      "index": 612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateActivation",
      "description": "Handles activation requests by validating input parameters and initiating the activation process. Operates on context objects and structured request/response types specific to the Smaws_Lib framework. Used to generate and manage activation tokens for user-specific service access.",
      "description_length": 280,
      "index": 613,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CancelMaintenanceWindowExecution",
      "description": "Handles the cancellation of a scheduled maintenance window execution by sending a request to the AWS API. Operates on context objects and specific request/response types related to maintenance window operations. Used to abort ongoing or pending maintenance tasks in cloud infrastructure management.",
      "description_length": 298,
      "index": 614,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CancelCommand",
      "description": "Handles cancellation requests for specific commands by validating command and instance IDs, and returning structured results or specific error types. Operates on context objects and custom request/response types tied to command management. Used to manage command termination in distributed systems with precise error reporting.",
      "description_length": 327,
      "index": 615,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.AssociateOpsItemRelatedItem",
      "description": "Handles the creation of a relationship between two Ops Items by sending a structured request and returning a typed result. Operates on specific request and response types defined within the Smaws_Lib framework. Used to establish or manage related item links in an operations management system.",
      "description_length": 293,
      "index": 616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.AddTagsToResource",
      "description": "Handles the creation and execution of requests to associate tags with AWS resources, using a context and a structured request. Operates on types such as `add_tags_to_resource_request` and `add_tags_to_resource_result`, along with AWS-specific error types. Used to programmatically manage resource tagging in cloud infrastructure workflows.",
      "description_length": 339,
      "index": 617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateXssMatchSet",
      "description": "Handles the submission of an updated XSS match set configuration to a security service, using a context and a structured request. Operates on types such as `update_xss_match_set_request` and `update_xss_match_set_response`, along with error variants specific to WAF operations. Used to modify XSS rule configurations in real-time threat protection systems.",
      "description_length": 356,
      "index": 618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateWebACL",
      "description": "Handles AWS WAF WebACL updates by sending structured requests and processing responses. Operates on context objects, update_web_acl_request records, and error-specific exception types. Used to modify web access control lists in AWS WAF, ensuring proper validation and error handling for policy changes.",
      "description_length": 302,
      "index": 619,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateSqlInjectionMatchSet",
      "description": "Handles the creation and modification of SQL injection match sets by sending structured requests to an AWS WAF service. Operates on context objects and specific request/response types defined in the Smaws_Lib module. Used to update web application firewall rules that detect and block malicious SQL injection patterns.",
      "description_length": 318,
      "index": 620,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateSizeConstraintSet",
      "description": "Handles the creation and modification of size constraint sets by sending structured requests and processing detailed responses. Operates with context objects and specific request/response types defined in the Smaws_Lib framework. Used to enforce size limits on web requests in AWS WAF, ensuring compliance with configured rules.",
      "description_length": 328,
      "index": 621,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRuleGroup",
      "description": "Handles the modification of a WAF rule group by sending a structured request and returning a detailed response. Operates with context data, request objects, and various exception types specific to AWS WAF operations. Used to update rule configurations in a web application firewall setup, ensuring compliance with defined security policies.",
      "description_length": 340,
      "index": 622,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRule",
      "description": "Handles the submission of update rules to a WAF system, processing requests with detailed error handling for specific WAF exceptions. Operates on context objects and structured request/response types related to rule updates. Used to modify existing rules in a web application firewall configuration while validating input and managing operational constraints.",
      "description_length": 359,
      "index": 623,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRegexPatternSet",
      "description": "Handles the submission of a new regex pattern set to a WAF service, including error handling for specific WAF exceptions. Operates on context objects and request/response structures defined in the Smaws_Lib module. Used to update regex patterns in a web application firewall configuration during runtime.",
      "description_length": 304,
      "index": 624,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRegexMatchSet",
      "description": "Handles the submission of a regex pattern set update request to a WAF service, processing inputs such as regex patterns, names, and associated rule groups. Operates on structured data including update requests and responses, along with specific error types defined by the WAF protocol. Used to dynamically adjust regex-based rule configurations in web application firewalls.",
      "description_length": 374,
      "index": 625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRateBasedRule",
      "description": "Handles the updating of rate-based rules by sending a structured request and returning a response or specific error types. Operates with context data and custom exception types derived from AWS WAF service definitions. Used to modify rule configurations in real-time threat detection systems.",
      "description_length": 292,
      "index": 626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateIPSet",
      "description": "Handles AWS WAF IP set updates by sending structured requests and processing detailed responses. Operates with context objects, custom exception types, and specific request/response records tied to AWS WAF operations. Used to dynamically adjust IP restrictions in web application firewalls based on real-time threat intelligence.",
      "description_length": 329,
      "index": 627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateGeoMatchSet",
      "description": "Handles the creation and modification of geographic match sets in AWS WAF by accepting a structured request and returning a response. Operates with specific AWS WAF data types such as `update_geo_match_set_request` and `update_geo_match_set_response`, along with custom exception types for error handling. Used to update geographic rule conditions in web access control policies.",
      "description_length": 379,
      "index": 628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateByteMatchSet",
      "description": "Handles the creation and modification of byte match sets in AWS WAF by sending structured update requests. Operates on custom record types representing WAF byte match set configurations and error responses. Used to dynamically adjust rule-based filtering rules in web application firewalls.",
      "description_length": 290,
      "index": 629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UntagResource",
      "description": "Handles AWS WAF resource untagging by sending a structured request and returning a response or specific error types. Operates with context, untag_resource_request, and untag_resource_response types. Used to remove tags from WAF resources, such as rules or web ACLs, with explicit error handling for AWS-specific exceptions.",
      "description_length": 323,
      "index": 630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.TagResource",
      "description": "Handles AWS WAF resource tagging operations by sending requests and processing responses. Works with context objects, tag resource requests, and various AWS-specific error types. Used to associate tags with WAF resources like rules or web ACLs in AWS infrastructure.",
      "description_length": 266,
      "index": 631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.PutPermissionPolicy",
      "description": "Handles AWS WAF put permission policy requests by validating and applying policy configurations to resources. Operates on context objects, policy request structures, and error-specific exception types. Used to update access controls for WAF resources in response to administrative or policy change events.",
      "description_length": 305,
      "index": 632,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.PutLoggingConfiguration",
      "description": "Handles AWS WAF logging configuration updates by sending a structured request and returning a result that includes either a response or specific error conditions. Operates with context objects and custom exception types derived from AWS error responses. Used to manage and validate logging settings in WAF resources, ensuring proper error handling for service-specific exceptions.",
      "description_length": 380,
      "index": 633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListXssMatchSets",
      "description": "Provides functions to handle AWS WAF list XSS match sets requests, including fetching and processing responses. Works with context objects, request records, and custom error types specific to AWS WAF. Used to retrieve XSS match set configurations and manage associated errors during API interactions.",
      "description_length": 300,
      "index": 634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListWebACLs",
      "description": "Handles AWS WAF ListWebACLs API requests, processing context and input to retrieve web ACL listings. Operates with AWS JSON protocol errors and specific exception types like WAFInternalErrorException and WAFInvalidAccountException. Used to fetch a list of web ACLs associated with a given AWS account.",
      "description_length": 301,
      "index": 635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListTagsForResource",
      "description": "Handles AWS WAF resource tag retrieval by sending a structured request and returning a result containing tags or specific error types. Operates with context and request objects, and returns a response with tag data or detailed WAF exceptions. Used to inspect tags on WAF resources like rules or web ACLs during troubleshooting or configuration audits.",
      "description_length": 351,
      "index": 636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListSubscribedRuleGroups",
      "description": "Provides functions to request and handle responses for listing subscribed rule groups, working with AWS WAF context and specific request/response types. Processes exceptions such as internal errors and nonexistent items. Used to retrieve active rule group subscriptions in a WAF-enabled environment.",
      "description_length": 299,
      "index": 637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListSqlInjectionMatchSets",
      "description": "Provides functions to request and handle responses for listing SQL injection match sets, including error handling for AWS-specific exceptions. Operates with context objects, request structures, and response types defined by the AWS WAF service. Used to retrieve configured SQL injection match sets within a specific AWS account.",
      "description_length": 328,
      "index": 638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListSizeConstraintSets",
      "description": "Handles validation and enforcement of list size constraints for input data, ensuring compliance with predefined limits. Operates on context objects and request structures containing size thresholds and data lists. Used to prevent overflow in systems processing user-submitted or externally sourced data collections.",
      "description_length": 315,
      "index": 639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListRules",
      "description": "Handles AWS WAF list rules requests by converting context and input into a structured API call, returning a result with specific error types. Operates on `Smaws_Lib.Context.t` and custom request/response types derived from AWS WAF specifications. Used to retrieve a list of WAF rule configurations from an AWS account.",
      "description_length": 318,
      "index": 640,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListRuleGroups",
      "description": "Handles AWS WAF list rule groups requests by converting context and input into a structured HTTP call, returning a response or specific error types. Operates with AWS context, request, and response types defined in Smaws_Lib. Used to retrieve a list of rule groups associated with a specific AWS WAF web ACL.",
      "description_length": 308,
      "index": 641,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListRegexPatternSets",
      "description": "Handles AWS WAF list regex pattern sets requests, processing context and returning structured responses. Operates with AWS context objects, request records, and custom error types. Used to retrieve and manage regex pattern sets in WAF configurations.",
      "description_length": 250,
      "index": 642,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListRegexMatchSets",
      "description": "Handles AWS WAF regex match sets by retrieving configured patterns and their associated regex rules. Operates on context objects and request/response structures specific to AWS WAF API interactions. Used to fetch and manage regex-based rule configurations for web access control.",
      "description_length": 279,
      "index": 643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListRateBasedRules",
      "description": "Handles AWS WAF rate-based rule listing by sending a structured request and returning a detailed response. Operates with context objects and specific request/response types defined in the Smaws_Lib module. Used to retrieve and manage rate-based rule configurations in AWS WAF policies.",
      "description_length": 285,
      "index": 644,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListLoggingConfigurations",
      "description": "Handles AWS WAF list logging configurations requests, processing context and parameters to retrieve response data. Operates with AWS context objects, request records, and custom exception types. Used to fetch and manage logging settings for WAF resources in a structured, error-aware manner.",
      "description_length": 291,
      "index": 645,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListIPSets",
      "description": "Handles AWS WAF list IP sets requests, processing context and returning structured responses. Operates on AWS JSON protocol types and custom exception types for error handling. Used to retrieve configured IP sets within a WAF service context.",
      "description_length": 242,
      "index": 646,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListGeoMatchSets",
      "description": "Handles AWS WAF list_geo_match_sets API requests, processing context and request parameters to retrieve geographic match set information. Operates on AWS JSON protocol responses and error types specific to WAF service exceptions. Used to fetch and manage geographic match set configurations within AWS WAF policies.",
      "description_length": 315,
      "index": 647,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListByteMatchSets",
      "description": "Provides functions to process and validate byte match sets for web application firewall rules, including handling request parsing and error responses. Operates on custom request and response types derived from AWS WAF specifications. Used to manage and enforce byte-level pattern matching in incoming HTTP traffic.",
      "description_length": 314,
      "index": 648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListActivatedRulesInRuleGroup",
      "description": "Provides functions to request and handle responses for listing activated rules within a specific rule group, using context and request objects. Operates with custom exception types and response structures specific to AWS WAF. Used to retrieve active rule configurations for policy enforcement and auditing.",
      "description_length": 306,
      "index": 649,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetXssMatchSet",
      "description": "Handles AWS WAF GetXssMatchSet API requests, processing context and input to retrieve XSS match set details. Operates with custom exception types and AWS JSON protocol errors. Used to fetch specific WAF rule configurations from an AWS account.",
      "description_length": 243,
      "index": 650,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetWebACL",
      "description": "Handles AWS WAF GetWebACL requests by accepting a context and a request structure, returning detailed responses or specific error types related to WAF operations. Operates with AWS context objects and WAF-specific exception types. Used to retrieve web ACL configurations from AWS WAF service, ensuring precise error handling for account, item, and internal issues.",
      "description_length": 364,
      "index": 651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetSqlInjectionMatchSet",
      "description": "Provides functions to retrieve a SQL injection match set from a WAF service, handling specific AWS error types. Operates with context objects, request records, and response structures defined in the Smaws_Lib module. Used to validate and process incoming HTTP requests by checking against predefined SQL injection patterns.",
      "description_length": 323,
      "index": 652,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetSizeConstraintSet",
      "description": "Handles AWS WAF size constraint set retrieval by sending a structured request and parsing the JSON response. Operates with context objects, request records, and custom exception types specific to AWS WAF errors. Used to fetch and validate size constraint configurations from an AWS WAF service endpoint.",
      "description_length": 303,
      "index": 653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetSampledRequests",
      "description": "Handles retrieval of sampled requests from a WAF service, accepting a context and request parameters to produce a response or specific error types. Operates with AWS JSON protocol structures and WAF exception types. Used to inspect traffic patterns in real-time for security analysis.",
      "description_length": 284,
      "index": 654,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRuleGroup",
      "description": "Handles AWS WAF rule group retrieval by sending a structured request and returning a response or specific error types. Operates with context objects, request records, and custom error exceptions. Used to fetch detailed rule group configurations from AWS WAF service endpoints.",
      "description_length": 276,
      "index": 655,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRule",
      "description": "Handles AWS WAF rule retrieval by sending a request with context and a specific rule identifier, returning detailed response data or specific error types. Operates on context objects and rule request/response structures defined in the Smaws_Lib framework. Used to fetch active rule configurations from AWS WAF for policy enforcement or inspection.",
      "description_length": 347,
      "index": 656,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetRegexPatternSet",
      "description": "Provides functions to retrieve a set of regex patterns from a web application firewall service, handling specific error conditions such as invalid accounts, nonexistent items, and internal errors. Operates on context objects and request/response structures defined in the Smaws_Lib library. Used to dynamically fetch and apply regex patterns for content filtering in security policies.",
      "description_length": 385,
      "index": 657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRegexMatchSet",
      "description": "Provides functions to request and process regex match sets from a WAF service, handling specific error types such as invalid account, internal errors, and non-existent items. Operates on context objects and structured request/response types related to AWS WAF configurations. Used to retrieve and validate regex patterns associated with web access control rules.",
      "description_length": 362,
      "index": 658,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetRateBasedRuleManagedKeys",
      "description": "Handles AWS WAF rate-based rule managed keys retrieval by sending a structured request and returning a response or specific error types. Operates with context, request, and response records defined in the Smaws_Lib framework. Used to fetch managed keys for rate-based rules in AWS WAF, enabling fine-grained access control configurations.",
      "description_length": 338,
      "index": 659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRateBasedRule",
      "description": "Handles AWS WAF rate-based rule retrieval by sending a structured request and returning a typed response. Operates with context, request, and response records specific to AWS WAF API interactions. Used to fetch details of a rate-based rule for threat detection or access control enforcement.",
      "description_length": 291,
      "index": 660,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetPermissionPolicy",
      "description": "Handles AWS WAF get permission policy requests by interacting with the provided context and returning structured responses or specific error types. Operates on AWS context objects and custom request/response types for WAF policy retrieval. Used to fetch policy details for resources in AWS WAF, ensuring proper access control validation.",
      "description_length": 337,
      "index": 661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetLoggingConfiguration",
      "description": "Handles AWS WAF get logging configuration requests by accepting a context and a request structure, returning detailed response data or specific error types. Operates with AWS context objects and WAF-specific request and response structures. Used to retrieve logging settings for WAF resources, enabling monitoring and troubleshooting of web application traffic.",
      "description_length": 361,
      "index": 662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetIPSet",
      "description": "Requests a WAF IP set from AWS using a provided context and request parameters. Operates on AWS-specific types such as `get_ip_set_request` and `get_ip_set_response`, along with custom exception types for error handling. Used to fetch and validate IP set configurations for web application firewall rules.",
      "description_length": 305,
      "index": 663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetGeoMatchSet",
      "description": "Handles AWS WAF GetGeoMatchSet API requests, processing parameters like geo_match_set_id and returning structured responses. Operates with AWS context, request records, and custom exception types. Used to retrieve specific geographic match set configurations from AWS WAF service.",
      "description_length": 280,
      "index": 664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetChangeTokenStatus",
      "description": "Handles AWS WAF change token status checks by sending a request with a context and a specific request structure, returning a response or detailed error types. Operates on AWS JSON protocol structures and exception types defined in the Smaws_Lib library. Used to verify the success or failure of prior WAF change token operations in real-time scenarios.",
      "description_length": 352,
      "index": 665,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetChangeToken",
      "description": "Handles AWS WAF change token requests, returning a response or specific error types. Operates with context and custom request/response types tied to AWS WAF operations. Used to obtain a change token for modifying WAF resources.",
      "description_length": 227,
      "index": 666,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetByteMatchSet",
      "description": "Handles AWS WAF GetByteMatchSet API requests, processing context and input to retrieve byte match set details. Operates with AWS context objects and specific request/response types defined in the WAF protocol. Used to fetch configured byte match set configurations from AWS WAF service.",
      "description_length": 286,
      "index": 667,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteXssMatchSet",
      "description": "Deletes an XSS match set from a WAF service, handling specific error conditions such as invalid accounts, stale data, or referenced items. Operates on context and request types defined in Smaws_Lib, producing a response or one of several WAF-specific error types. Used to manage web access control rules by removing configured XSS match sets.",
      "description_length": 342,
      "index": 668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteWebACL",
      "description": "Handles AWS WAF WebACL deletion requests by validating context and parameters, and returning structured responses or specific error types. Operates with AWS JSON protocol types and WAF exception structures. Used to safely remove web access control lists while handling account-specific and resource-related validation errors.",
      "description_length": 325,
      "index": 669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteSqlInjectionMatchSet",
      "description": "Deletes a SQL injection match set from a WAF configuration, handling specific AWS error types. Operates on context and request structures defined in Smaws_Lib, producing a response or error. Used to clean up WAF rules by removing outdated or unused SQL injection match sets.",
      "description_length": 274,
      "index": 670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteSizeConstraintSet",
      "description": "Handles the deletion of a size constraint set by sending a request to the WAF service, validating the request context, and returning a response or specific error types. Operates with context objects, request records, and response structures defined in the Smaws_Lib library. Used to remove a size constraint set when it is no longer needed, ensuring proper error handling for AWS WAF-specific exceptions.",
      "description_length": 404,
      "index": 671,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRuleGroup",
      "description": "Handles the deletion of a WAF rule group by sending a structured request and processing potential AWS-specific error responses. Operates with context data and custom exception types defined in the Smaws_Lib module. Used to safely remove rule groups while managing AWS API error conditions like invalid operations or referenced items.",
      "description_length": 333,
      "index": 672,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRule",
      "description": "Handles the deletion of a WAF rule by sending a request with context and a specific delete rule command. Operates on `Smaws_Lib.Context.t` and custom exception types related to WAF operations. Used to remove a rule from a WAF configuration, ensuring proper error handling for account, entity, and tagging issues.",
      "description_length": 312,
      "index": 673,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRegexPatternSet",
      "description": "Handles the deletion of a regex pattern set by sending a structured request and processing specific AWS WAFv2 error responses. Operates with context objects and custom exception types derived from AWS error definitions. Used to safely remove regex pattern sets while handling potential validation and state-related errors during the process.",
      "description_length": 341,
      "index": 674,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRegexMatchSet",
      "description": "Handles the deletion of a regex match set by sending a request to the WAF service, incorporating error handling for specific AWS exceptions. Operates with context data and structured request/response types related to AWS WAF configurations. Used to remove outdated or unused regex patterns from a web access control list.",
      "description_length": 321,
      "index": 675,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRateBasedRule",
      "description": "Provides a function to send a request to delete a rate-based rule in AWS WAF, handling specific error types such as invalid account, stale data, and referenced items. Operates with context and request objects specific to AWS WAF operations. Used to remove rules that are no longer needed, ensuring proper cleanup and avoiding conflicts with active resources.",
      "description_length": 358,
      "index": 676,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeletePermissionPolicy",
      "description": "Handles AWS WAF delete permission policy requests by validating context and processing specific error conditions. Operates on AWS context objects and custom exception types derived from WAF service responses. Used to remove policy associations in AWS WAF rule groups with precise error handling for stale or missing data.",
      "description_length": 321,
      "index": 677,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteLoggingConfiguration",
      "description": "Handles the deletion of logging configurations by sending a structured request and processing specific AWS error types. Operates with context objects and custom exception types derived from AWS WAF responses. Used to remove logging settings from a WAF resource while managing potential AWS-specific error conditions.",
      "description_length": 316,
      "index": 678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteIPSet",
      "description": "Handles the deletion of an IP set in a WAF service, accepting a context and request structure to execute the operation. Works with AWS JSON protocol types and custom exception types specific to WAF errors. Used to remove an IP set when it is no longer needed, ensuring proper error handling for account, entity, and reference constraints.",
      "description_length": 338,
      "index": 679,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteGeoMatchSet",
      "description": "Deletes a specified geo match set from AWS WAF by sending a request with the provided context and parameters. It handles specific error types related to AWS WAF validation and state, such as invalid accounts, stale data, or referenced items. The module interacts with AWS services using JSON-based protocols and requires a context object for execution.",
      "description_length": 352,
      "index": 680,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteByteMatchSet",
      "description": "Deletes a specified byte match set from a WAF service, handling specific error conditions such as invalid accounts, stale data, or referenced items. Operates on AWS WAF-related data structures including request and response types for byte match sets. Used to clean up or modify WAF configurations by removing outdated or conflicting byte match rules.",
      "description_length": 350,
      "index": 681,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateXssMatchSet",
      "description": "Handles the creation of an XSS match set by sending a structured request and returning a typed response. Operates with context objects, request records, and custom exception types specific to AWS WAF error conditions. Used to enforce security rules by defining patterns to detect and block malicious input in web requests.",
      "description_length": 322,
      "index": 682,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateWebACLMigrationStack",
      "description": "Handles AWS WAF web ACL migration by sending a structured request and returning a detailed response. Operates with context objects, migration requests, and specific error types related to WAF operations. Used to programmatically initiate and manage web ACL migration processes within AWS infrastructure.",
      "description_length": 303,
      "index": 683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateWebACL",
      "description": "Handles AWS WAF WebACL creation by sending a structured request and returning a typed result. Operates with context objects, request records, and custom exception types specific to AWS WAF. Used to enforce security policies by programmatically defining web access control rules.",
      "description_length": 278,
      "index": 684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateSqlInjectionMatchSet",
      "description": "Handles the creation of a SQL injection match set by sending a structured request to an AWS WAF service, processing responses, and managing specific error conditions. Operates with context objects, request records, and custom exception types related to WAF validation and service constraints. Used to configure web application firewall rules that detect and block malicious SQL injection patterns in incoming HTTP requests.",
      "description_length": 423,
      "index": 685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateSizeConstraintSet",
      "description": "Handles the creation of size-based constraints by sending a structured request and returning a response with specific error handling. Operates on context objects and custom exception types derived from AWS WAF error definitions. Used to enforce size limits on web requests within a security framework.",
      "description_length": 301,
      "index": 686,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRuleGroup",
      "description": "Handles the creation of a WAF rule group by sending a structured request and returning a typed response. Operates with context data, custom request records, and detailed error types specific to AWS WAF operations. Used to programmatically define and validate rule groups within AWS WAF configurations.",
      "description_length": 301,
      "index": 687,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRule",
      "description": "Handles the creation of WAF rules by sending a request with specific parameters and context, returning a result that includes either a response or detailed error types specific to WAF operations. Operates on `Smaws_Lib.Context.t` and custom request/response types derived from WAF specifications. Used to enforce security policies by programmatically defining rule sets in AWS WAF services.",
      "description_length": 390,
      "index": 688,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRegexPatternSet",
      "description": "Handles the creation of a regex pattern set by accepting a context and a request, returning a response or specific error types related to WAF constraints and validation. Operates with AWS-specific types such as context, request, and response, along with custom exception types for WAF errors. Used to enforce naming rules and resource limits when defining regex patterns in AWS WAF.",
      "description_length": 382,
      "index": 689,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRegexMatchSet",
      "description": "Handles the creation of a regex match set by sending a request to an AWS WAF service, processing responses, and managing specific error conditions such as invalid names, internal errors, and stale data. Operates with context objects, request records, and custom error types defined in the WAF protocol. Used to configure web access control rules based on regular expressions in a controlled, error-aware manner.",
      "description_length": 411,
      "index": 690,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRateBasedRule",
      "description": "Provides operations to send a request for creating a rate-based rule, handling specific AWS WAF exceptions and returning a structured response. Works with context objects, request records, and custom exception types related to WAF rule creation. Used to integrate with AWS WAF service for setting up rate-based rules with precise error handling.",
      "description_length": 345,
      "index": 691,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateIPSet",
      "description": "Handles the creation of an IP set by sending a structured request to an AWS WAF service, processing responses, and returning specific error types tied to WAF constraints. Operates with context objects, request records, and custom exception types defined in the WAF protocol. Used to enforce IP-based access control policies within a cloud infrastructure.",
      "description_length": 354,
      "index": 692,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateGeoMatchSet",
      "description": "Handles the creation of a geographic match set in AWS WAF by sending a structured request and returning a typed response. Operates with context information and specific request/response types defined in the Smaws_Lib framework. Processes errors such as invalid parameters, account issues, and rate limits directly within the result type.",
      "description_length": 337,
      "index": 693,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.CreateByteMatchSet",
      "description": "Handles the creation of a byte match set by sending a structured request and returning a typed response. Operates with context data, request objects, and custom exception types specific to AWS WAF. Used to define and validate byte match conditions in web access control rules.",
      "description_length": 276,
      "index": 694,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateThesaurus",
      "description": "Handles the submission of a thesaurus update request, processing context and validating input against specific exception types. Operates with `Smaws_Lib.Context.t` and custom request types to manage thesaurus modifications. Used to apply changes to a thesaurus structure in a controlled, error-checked manner.",
      "description_length": 309,
      "index": 695,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateQuerySuggestionsConfig",
      "description": "Handles AWS request to update query suggestions configuration, returning success or specific error types. Operates with context and request records, including detailed exception types. Used to modify search configuration settings in a controlled, error-aware manner.",
      "description_length": 266,
      "index": 696,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateQuerySuggestionsBlockList",
      "description": "Handles the submission of a block list update for query suggestions, accepting a context and request structure. Operates on AWS-specific error types and request payloads defined in related modules. Used to manage access controls and prevent unwanted search terms in real-time systems.",
      "description_length": 284,
      "index": 697,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateIndex",
      "description": "Handles AWS CloudSearch domain index updates by sending structured requests and managing specific error outcomes. Operates with context objects and custom request types to interface with AWS services. Used to synchronize local data structures with remote search indexes in distributed systems.",
      "description_length": 293,
      "index": 698,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateFeaturedResultsSet",
      "description": "Handles AWS API requests to update a featured results set, processing context and request parameters to return a response or specific error types. Operates with AWS context objects and custom request/response types tied to the update operation. Used to manage dynamic content rankings in search or recommendation systems, ensuring consistency and handling conflicts.",
      "description_length": 366,
      "index": 699,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateExperience",
      "description": "Handles AWS API requests for updating user experience data, including error handling for specific exception types. Operates on context objects and structured request data. Used to modify user experience configurations in a controlled, validated manner.",
      "description_length": 252,
      "index": 700,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateDataSource",
      "description": "Handles AWS JSON-based data source updates by sending requests with context and structured payloads. Operates on custom exception types and context objects to manage error states during update operations. Used to synchronize external data sources with internal system states while enforcing access controls and validation rules.",
      "description_length": 328,
      "index": 701,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateAccessControlConfiguration",
      "description": "Handles AWS access control configuration updates by processing requests and returning structured responses. Operates with context objects, request records, and detailed error types specific to AWS service interactions. Used to modify resource-based access policies in controlled environments with strict validation and error reporting.",
      "description_length": 335,
      "index": 702,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects, untag_resource_request records, and returns responses or specific exception types. Used to remove tags from AWS resources like EC2 instances or S3 buckets in controlled environments.",
      "description_length": 315,
      "index": 703,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.TagResource",
      "description": "Handles AWS resource tagging requests by sending structured JSON payloads and parsing corresponding responses. Operates with context objects, request records, and custom exception types specific to AWS service interactions. Used to apply or modify tags on AWS resources within distributed systems.",
      "description_length": 297,
      "index": 704,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.SubmitFeedback",
      "description": "Requests feedback submission to a service, handling specific error cases such as access denial, resource not found, and throttling. Works with context and request data structures to initiate the feedback process. Used to integrate user feedback mechanisms into application workflows.",
      "description_length": 283,
      "index": 705,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.StopDataSourceSyncJob",
      "description": "Handles the initiation of a stop data source sync job by sending a structured request. Operates with context objects and specific request types related to AWS services. Used to terminate ongoing data synchronization processes in controlled environments.",
      "description_length": 253,
      "index": 706,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.StartDataSourceSyncJob",
      "description": "Handles the initiation of a data source synchronization job by sending a structured request and returning a typed response. Operates with context objects, request records, and detailed error types specific to AWS services. Used to trigger synchronous data integration processes in distributed systems.",
      "description_length": 301,
      "index": 707,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.Retrieve",
      "description": "Handles HTTP requests to fetch data from a service, returning structured results or specific error types. Operates with context objects and custom request/response types defined in the system. Used to retrieve resource configurations and status information under controlled error handling.",
      "description_length": 289,
      "index": 708,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.Query",
      "description": "Handles HTTP requests for querying resources, processing structured data, and returning results or specific exception types. Operates with context objects, query requests, and custom exception types derived from AWS JSON protocols. Used to interact with external services, validate input, and manage error responses during data retrieval.",
      "description_length": 338,
      "index": 709,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.PutPrincipalMapping",
      "description": "Handles AWS PutPrincipalMapping requests by validating input, enforcing access controls, and updating principal-to-resource mappings in a secure, authenticated context. Operates on custom request types and error variants specific to AWS service interactions. Used to manage access policies in distributed systems requiring fine-grained permission enforcement.",
      "description_length": 359,
      "index": 710,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListThesauri",
      "description": "Processes AWS requests to retrieve thesaurus lists, handling specific error types and context parameters. Operates with custom request and response types, along with AWS protocol error variants. Used to fetch structured thesaurus data in systems requiring controlled access and error reporting.",
      "description_length": 294,
      "index": 711,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListTagsForResource",
      "description": "Provides functions to send a request for listing tags associated with a specific AWS resource and handle various AWS-specific error responses. Operates with AWS context, request, and response types defined in Smaws_Lib. Used to retrieve tag information for resources like EC2 instances or S3 buckets during infrastructure management tasks.",
      "description_length": 339,
      "index": 712,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListQuerySuggestionsBlockLists",
      "description": "Provides functions to handle requests for list query suggestions block lists, including error handling for AWS-specific exceptions. Operates with context objects and structured request/response types related to block list management. Used to retrieve block list configurations in systems requiring access control and validation.",
      "description_length": 328,
      "index": 713,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListIndices",
      "description": "Provides functions to request and handle responses for listing indices, working with context and custom exception types. Processes structured data including request and response records specific to index management. Used to retrieve index information from a service while handling various error conditions explicitly.",
      "description_length": 317,
      "index": 714,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListGroupsOlderThanOrderingId",
      "description": "Provides functions to request and handle responses for listing groups older than a specified ordering ID, including error handling for AWS-specific exceptions. Operates with context objects, request records, and response structures tied to group management. Used to retrieve historical group data in systems requiring versioned or ordered group tracking.",
      "description_length": 354,
      "index": 715,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListFeaturedResultsSets",
      "description": "Handles AWS request to fetch lists of featured results sets, processing context and request parameters to return structured responses. Operates with AWS context objects and specific request/response types defined in the Smaws_Lib framework. Used to retrieve curated result sets in systems requiring controlled access to pre-defined data groups.",
      "description_length": 344,
      "index": 716,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListFaqs",
      "description": "Handles AWS JSON-based requests to retrieve FAQs, processing context and structured input to produce responses. Operates with custom exception types and request/response records defined in the Smaws_Lib framework. Used to fetch FAQ data from a service, validating inputs and managing error states during retrieval.",
      "description_length": 314,
      "index": 717,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListExperiences",
      "description": "Handles AWS API requests to retrieve experience data, mapping raw HTTP responses to typed results with specific error variants. Operates on context objects and structured request/response types defined in related modules. Used to fetch user experience records from a service, supporting error handling for common API exceptions.",
      "description_length": 328,
      "index": 718,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListExperienceEntities",
      "description": "Handles AWS API requests to retrieve experience entities, processing context and request parameters to return structured responses. Operates with AWS context objects, request records, and custom exception types. Used to fetch user experience data from a service, ensuring proper error handling for access, resource, and validation issues.",
      "description_length": 338,
      "index": 719,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListEntityPersonas",
      "description": "Processes AWS requests to retrieve entity personas, handling specific error types such as access denial, resource not found, and validation issues. Operates on context objects and request/response structures defined by the Smaws_Lib library. Used to fetch user-specific entity data in systems requiring role-based access control and error-aware API interactions.",
      "description_length": 362,
      "index": 720,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListDataSources",
      "description": "Handles AWS service requests to retrieve data sources, processing context and request parameters to return structured responses. Operates with AWS-specific types such as context, request, and response records, along with custom exception types for error handling. Used to fetch and manage data source listings in cloud infrastructure monitoring workflows.",
      "description_length": 355,
      "index": 721,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListDataSourceSyncJobs",
      "description": "Handles AWS ListDataSourcesSyncJobs API requests, processing context and request parameters to retrieve job listings. Operates with AWS context objects and structured request/response types specific to data source synchronization. Used to fetch and manage sync job statuses for data integration systems.",
      "description_length": 303,
      "index": 722,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListAccessControlConfigurations",
      "description": "Provides functions to handle requests for listing access control configurations, including error handling for AWS-specific exceptions. Operates with context objects and structured request/response types specific to AWS services. Used to retrieve and manage access control settings in a controlled, exception-aware manner.",
      "description_length": 321,
      "index": 723,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.GetSnapshots",
      "description": "Handles AWS EC2 snapshot retrieval by sending a structured request and returning a detailed response. Processes context and custom request types, and returns results with specific error variants for AWS service exceptions. Used to fetch snapshot data in cloud management workflows where error handling is critical.",
      "description_length": 314,
      "index": 724,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.GetQuerySuggestions",
      "description": "Handles AWS GetQuerySuggestions API requests, processing context and request parameters to retrieve search suggestions. Operates with custom record types for requests and responses, along with specific error variants for AWS service exceptions. Used to enhance user search experiences by providing real-time query suggestions based on partial input.",
      "description_length": 349,
      "index": 725,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DisassociatePersonasFromEntities",
      "description": "Handles the disassociation of personas from entities by sending a structured request and returning a result with specific error types. Operates with context data, request objects, and response structures defined by the Smaws_Lib framework. Used to manage user-entity relationships in systems requiring access control and resource management.",
      "description_length": 341,
      "index": 726,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DisassociateEntitiesFromExperience",
      "description": "Provides functions to send a request to disassociate entities from an experience, handling specific AWS JSON-based error types. Operates with context objects, request structures, and response types tailored for AWS service interactions. Used to manage entity relationships in distributed systems with precise error handling for service-specific exceptions.",
      "description_length": 356,
      "index": 727,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeThesaurus",
      "description": "Handles AWS DescribeThesaurus API requests by accepting a context and a request structure, returning detailed thesaurus information or specific error types. Operates with AWS context objects and structured request/response types defined in the Smaws_Lib library. Used to retrieve metadata about a thesaurus resource within an AWS environment.",
      "description_length": 342,
      "index": 728,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeQuerySuggestionsConfig",
      "description": "Handles AWS DescribeQuerySuggestionsConfig API requests, processing context and configuration parameters to retrieve query suggestions settings. Operates with custom request and response types specific to AWS service configurations. Used to fetch detailed query suggestion configurations for Amazon CloudSearch domains.",
      "description_length": 319,
      "index": 729,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeQuerySuggestionsBlockList",
      "description": "Handles AWS SageMaker DescribeQuerySuggestionsBlockList requests, including error handling for access, resource, and validation issues. Accepts context and request parameters, returning detailed block list information. Used to retrieve configuration details for query suggestions block lists in real-time search applications.",
      "description_length": 325,
      "index": 730,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribePrincipalMapping",
      "description": "Handles AWS STS `DescribePrincipalMapping` requests by converting input parameters into a structured API call. Processes and returns responses along with specific error types such as access denial, resource not found, and validation issues. Designed for integration with AWS JSON-based services requiring principal mapping details.",
      "description_length": 331,
      "index": 731,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeIndex",
      "description": "Handles AWS Elasticsearch Service describe index requests, processing context and returning structured responses. Operates with custom request and response types, along with specific exception types for error handling. Used to retrieve detailed information about an Elasticsearch index in a controlled, error-aware manner.",
      "description_length": 322,
      "index": 732,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeFeaturedResultsSet",
      "description": "Handles AWS API requests to describe featured results sets, processing context and request parameters to return structured responses. Operates with AWS context objects, request records, and custom exception types. Used to retrieve and validate specific dataset configurations in AWS services.",
      "description_length": 292,
      "index": 733,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeFaq",
      "description": "Handles AWS API requests for retrieving FAQ entries, processing context and request parameters to produce structured responses. Operates with custom record types for requests and responses, along with specific exception types for error handling. Used to fetch and validate FAQ data in a service-facing API layer.",
      "description_length": 312,
      "index": 734,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeExperience",
      "description": "Handles AWS API requests for retrieving detailed experience data, including error handling for specific exception types. Operates on context objects and structured request/response types related to user experiences. Used to fetch and validate user interaction logs from a service endpoint.",
      "description_length": 289,
      "index": 735,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeDataSource",
      "description": "Handles AWS DescribeDataSource requests by validating context, constructing and sending HTTP queries, and parsing JSON responses. Operates with context objects, request records, and structured error types specific to AWS services. Used to retrieve detailed information about data sources in a controlled, error-aware manner.",
      "description_length": 324,
      "index": 736,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeAccessControlConfiguration",
      "description": "Handles AWS S3 access control configuration requests by validating context, parsing input, and returning structured responses. Processes specific request and response types tied to S3 bucket policies and ACLs. Manages error conditions such as access denial, resource not found, and validation failures during configuration retrieval.",
      "description_length": 333,
      "index": 737,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteThesaurus",
      "description": "Handles deletion requests for thesaurus resources, validating input and managing AWS JSON-based error responses. Operates on context objects and custom exception types derived from AWS protocol standards. Used to enforce access controls and ensure proper resource cleanup in distributed systems.",
      "description_length": 295,
      "index": 738,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteQuerySuggestionsBlockList",
      "description": "Handles AWS DeleteQuerySuggestionsBlockList API requests, processing context and input to execute deletion operations on block lists. Works with AWS context objects and specific request structures for managing search suggestions. Used to remove predefined block lists from a search service, ensuring compliance with access controls and system constraints.",
      "description_length": 355,
      "index": 739,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeletePrincipalMapping",
      "description": "Handles the deletion of principal mappings by sending a structured request and returning specific error outcomes. Operates with context data and a custom request type to manage AWS service interactions. Used to remove IAM role associations in controlled environments where precise error handling is required.",
      "description_length": 308,
      "index": 740,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteIndex",
      "description": "Handles AWS Elasticsearch service index deletion requests by sending a structured delete operation. Operates on context objects and custom request types specific to index management. Manages error cases such as access denial, resource not found, and conflict errors during deletion.",
      "description_length": 282,
      "index": 741,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteFaq",
      "description": "Handles deletion of FAQ entries by sending a request to the service, incorporating context and a specific delete request structure. Processes various error types including access denial, conflict, and resource not found. Used to remove specific FAQs in a controlled, error-aware manner during system maintenance or content updates.",
      "description_length": 331,
      "index": 742,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteExperience",
      "description": "Handles deletion requests for user experiences by validating input, checking resource existence, and managing access permissions. Operates on structured request and response types specific to the deletion workflow. Processes exceptions such as access denial, resource not found, and validation errors during the deletion process.",
      "description_length": 329,
      "index": 743,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteDataSource",
      "description": "Handles deletion requests for data sources by validating permissions, checking resource existence, and managing conflicts. Operates on context objects and structured delete requests, returning detailed error outcomes. Used to safely remove configured data sources in AWS environments, ensuring proper exception handling for operational failures.",
      "description_length": 345,
      "index": 744,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteAccessControlConfiguration",
      "description": "Handles deletion of access control configurations by sending a structured request and returning a typed response. Operates with context, request, and response types specific to AWS JSON protocols, along with custom exception types. Used to enforce resource deletion policies in AWS-based systems, ensuring proper error handling for access and configuration conflicts.",
      "description_length": 367,
      "index": 745,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateThesaurus",
      "description": "Processes a request to create a thesaurus, handling specific error conditions and returning a structured response. Operates with context data and custom request/response types tied to thesaurus creation. Used to initialize new thesaurus entries in a system with strict validation and error reporting.",
      "description_length": 300,
      "index": 746,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateQuerySuggestionsBlockList",
      "description": "Handles AWS SageMaker CreateQuerySuggestionsBlockList API requests, processing context and block list configurations. Accepts structured request data and returns responses or specific AWS-defined error types. Used to programmatically manage block lists for query suggestion systems in machine learning workflows.",
      "description_length": 312,
      "index": 747,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateIndex",
      "description": "Handles AWS DynamoDB index creation requests by processing context and configuration, returning detailed responses or specific exception types. Operates with AWS JSON protocol structures and custom exception types derived from service responses. Used to manage index setup in database systems with strict error handling for service-specific failures.",
      "description_length": 350,
      "index": 748,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateFeaturedResultsSet",
      "description": "Handles the creation of a featured results set by sending a structured request and returning a typed response. Operates with context objects, request records, and custom exception types specific to AWS service interactions. Used to manage and validate the setup of featured content in a controlled, error-aware manner.",
      "description_length": 318,
      "index": 749,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateFaq",
      "description": "Handles the creation of FAQ entries by processing a request structure and returning a response or specific error types. Operates on context data and custom request/response types tied to FAQ management. Used to enforce business rules and validate inputs before persisting FAQ content in a system.",
      "description_length": 296,
      "index": 750,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateExperience",
      "description": "Handles creation requests for user experiences by validating input and interacting with underlying systems. Operates on context objects and structured request/response types specific to experience setup. Used to enforce business rules and manage resource allocation during experience initialization.",
      "description_length": 299,
      "index": 751,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateDataSource",
      "description": "Handles AWS-style data source creation requests by validating input, checking resource existence, and interacting with underlying systems. Processes context and request records, returning detailed responses or specific exception types. Used to manage data source provisioning in distributed applications with strict error handling.",
      "description_length": 331,
      "index": 752,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateAccessControlConfiguration",
      "description": "Handles the creation of access control configurations by processing a request context and a specific request structure, returning a response or a detailed error. Operates with custom types such as `create_access_control_configuration_request` and `create_access_control_configuration_response`, along with AWS-specific error types. Used to enforce access policies in systems requiring strict permission validation and resource management.",
      "description_length": 438,
      "index": 753,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ClearQuerySuggestions",
      "description": "Handles AWS CloudSearch domain query suggestion requests, processing context and configuration to generate structured responses. Operates with context objects and specific request types, returning results or detailed error variants. Used to fetch and validate query suggestions in search-driven applications.",
      "description_length": 308,
      "index": 754,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchPutDocument",
      "description": "Handles AWS DynamoDB batch put operations by constructing and sending requests with detailed error handling. Operates on context objects, document batches, and error-specific types derived from AWS JSON protocols. Used to efficiently insert multiple items into a DynamoDB table while managing exceptions like access denial, conflicts, and throttling.",
      "description_length": 350,
      "index": 755,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchGetDocumentStatus",
      "description": "Provides functions to send a batch document status request and handle specific AWS error types. Operates with context objects and structured request/response types for AWS DynamoDB. Used to efficiently check the status of multiple documents in a single API call.",
      "description_length": 262,
      "index": 756,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchDeleteFeaturedResultsSet",
      "description": "Handles AWS Batch Delete Featured Results Set requests by validating input, constructing JSON payloads, and processing responses. Operates on context objects, request records, and structured error types specific to AWS service exceptions. Used to remove multiple featured results from a dataset in a single API call, ensuring consistent error handling for service-specific failures.",
      "description_length": 382,
      "index": 757,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchDeleteDocument",
      "description": "Handles AWS Batch delete document requests by sending a structured payload and returning a response with specific error types. Operates on AWS context and custom request/response types derived from JSON protocols. Used to remove multiple documents in a single operation with detailed error handling for AWS-specific exceptions.",
      "description_length": 327,
      "index": 758,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.AssociatePersonasToEntities",
      "description": "Handles the association of personas to entities by sending a structured request and returning a result that includes either a response or specific error conditions. Operates with context data, request objects, and custom exception types derived from AWS JSON protocols. Used to manage user-entity relationships in systems requiring access control and resource tracking.",
      "description_length": 369,
      "index": 759,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.AssociateEntitiesToExperience",
      "description": "Handles the submission of entity association requests to an experience, processing inputs such as entity identifiers and experience metadata. It returns structured responses or specific exception types based on the outcome of the operation. Used to link entities to experiences in a system requiring precise error handling and validation.",
      "description_length": 338,
      "index": 760,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateSyncConfiguration",
      "description": "Handles the request to update a synchronization configuration, returning a result that includes either the updated configuration or specific error conditions. Operates with context and input/output records defined in the Smaws_Lib framework. Used to manage configuration changes in distributed systems with precise error handling for operational failures.",
      "description_length": 355,
      "index": 761,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateSyncBlocker",
      "description": "Handles request to update a sync blocker, validating input and returning specific error types based on AWS JSON protocol responses. Operates with context and custom input/output types related to sync blocker management. Used to enforce synchronization constraints during data updates in distributed systems.",
      "description_length": 307,
      "index": 762,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateRepositoryLink",
      "description": "Handles the request to update a repository link by validating input, checking conditions, and applying changes. Operates on context data, input structures, and output results, with detailed error handling for AWS-specific exceptions. Used in scenarios where repository configurations must be dynamically adjusted with strict consistency checks.",
      "description_length": 344,
      "index": 763,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateHost",
      "description": "Handles AWS API requests to update a host resource, processing input parameters and returning structured outputs. Operates with context objects, custom exception types, and specific request/response data structures. Used to modify host configurations in a controlled, error-handled manner during infrastructure management workflows.",
      "description_length": 332,
      "index": 764,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to remove tags from specified resources. Operates on context objects and structured input containing resource ARNs and tag keys. Used to programmatically manage resource metadata in AWS environments.",
      "description_length": 266,
      "index": 765,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.TagResource",
      "description": "Handles AWS resource tagging by sending a JSON-formatted request to associate tags with a specified resource. Accepts context and input containing resource ARN and tags, returning a result with output or specific AWS exceptions. Used to manage metadata for AWS resources like EC2 instances or S3 buckets.",
      "description_length": 304,
      "index": 766,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on structured input and output types defined for the `ListTagsForResource` action, including error variants for service responses. Used to fetch metadata tags for resources like EC2 instances or S3 buckets within AWS infrastructure.",
      "description_length": 320,
      "index": 767,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListSyncConfigurations",
      "description": "Provides functions to request and handle responses for list synchronization configurations, including error handling for specific AWS exceptions. Operates with context objects, input structures for configuration requests, and output structures containing synchronization data. Used to retrieve and manage sync configurations in a controlled, error-aware manner.",
      "description_length": 361,
      "index": 768,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListRepositorySyncDefinitions",
      "description": "Provides functions to request repository sync definitions, handling specific AWS JSON errors and custom exceptions. Operates with context and input/output records structured for AWS API interactions. Used to fetch sync configuration details from a repository in a controlled, error-aware manner.",
      "description_length": 295,
      "index": 769,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListRepositoryLinks",
      "description": "Handles AWS API requests to retrieve links associated with a repository, processing input parameters and returning structured output. Operates with context objects, input records, and custom exception types specific to AWS service responses. Used to fetch repository link data in scenarios requiring interaction with AWS CodeCommit or similar services.",
      "description_length": 352,
      "index": 770,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListHosts",
      "description": "Provides functions to request and process host listings from a service, using a context and input structure to generate a response. Operates with `Smaws_Lib.Context.t` and custom input/output types specific to host retrieval. Used to fetch and validate a list of hosts in a cloud infrastructure setup.",
      "description_length": 301,
      "index": 771,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListConnections",
      "description": "Handles AWS service connection requests by processing input parameters and returning structured outputs. Operates on context objects and custom input/output types specific to AWS connection management. Used to retrieve and manage active connections in distributed system interactions.",
      "description_length": 284,
      "index": 772,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetSyncConfiguration",
      "description": "Handles AWS GetSyncConfiguration requests by processing context and input parameters, returning structured outputs or specific exception types. Operates with custom record types for input and output, along with AWS-specific error variants. Used to retrieve synchronization settings from an AWS service endpoint under controlled conditions.",
      "description_length": 339,
      "index": 773,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetSyncBlockerSummary",
      "description": "Handles AWS API requests to retrieve synchronization blocker summaries, processing context and input parameters to produce structured output. Operates with AWS context objects, custom exception types, and JSON-based data structures. Used to monitor and manage resource synchronization states in distributed systems.",
      "description_length": 315,
      "index": 774,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetResourceSyncStatus",
      "description": "Handles AWS resource synchronization status requests by accepting a context and input parameters, returning detailed status information or specific exception types. Operates with AWS context objects and structured input/output records. Used to monitor the sync state of resources in real-time during deployment or management workflows.",
      "description_length": 335,
      "index": 775,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetRepositorySyncStatus",
      "description": "Requests the current synchronization status of a repository, accepting context and input parameters to execute the operation. It works with custom types representing the request input and output, along with specific exception types for error handling. This is used in scenarios where real-time status updates are required for repository synchronization processes.",
      "description_length": 363,
      "index": 776,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetRepositoryLink",
      "description": "Handles AWS service requests to retrieve repository links, processing context and input parameters to generate a structured output. Operates with custom types such as `get_repository_link_input` and `get_repository_link_output`, along with error variants specific to AWS API responses. Used to fetch repository links in systems integrating with AWS CodeCommit or similar services.",
      "description_length": 380,
      "index": 777,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetHost",
      "description": "Handles DNS resolution by sending a request to retrieve host information, returning structured output or specific error variants. Operates with context objects and custom input/output types representing host configuration details. Used to fetch dynamic host data during service initialization or configuration updates.",
      "description_length": 318,
      "index": 778,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetConnection",
      "description": "Handles AWS service connection requests by validating context and input parameters, returning a structured connection response or specific error types. Operates on context objects and custom input/output records tied to AWS protocol interactions. Used to establish secure, authenticated links to AWS resources during API execution.",
      "description_length": 331,
      "index": 779,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteSyncConfiguration",
      "description": "Handles the deletion of synchronization configurations by sending a request to the service, validating input, and processing the response. Operates with context data, input structures specific to deletion, and output structures containing results or detailed error types. Used to remove configured sync settings in scenarios requiring precise control over data synchronization workflows.",
      "description_length": 387,
      "index": 780,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteRepositoryLink",
      "description": "Handles the deletion of a repository link by sending a structured request with context and input parameters. Operates on types such as `Smaws_Lib.Context.t`, `delete_repository_link_input`, and `delete_repository_link_output`, and returns results with specific error variants. Used to remove a configured link between a repository and an external service, ensuring proper error handling for AWS API interactions.",
      "description_length": 412,
      "index": 781,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteHost",
      "description": "Handles deletion requests for hosts by validating input and interacting with underlying systems. Operates on context objects and custom input/output types specific to host management. Used to remove registered hosts from a service, returning detailed error states when the host is not found or unavailable.",
      "description_length": 306,
      "index": 782,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteConnection",
      "description": "Handles deletion requests for specific connections by validating context and input, then returning a result with output or specific error types. Operates on `Smaws_Lib.Context.t` and custom input/output types related to connection management. Used to remove active network links in distributed systems, with explicit error handling for missing resources.",
      "description_length": 354,
      "index": 783,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateSyncConfiguration",
      "description": "Handles the creation of synchronization configurations by sending a request to an AWS service, processing input parameters, and returning a structured output or specific error types. Operates with context data, input records, and output records defined in the Smaws_Lib framework. Used to set up sync configurations in distributed systems with precise error handling for AWS-specific exceptions.",
      "description_length": 395,
      "index": 784,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateRepositoryLink",
      "description": "Handles AWS CodeCommit repository link creation requests by validating input and interacting with the service. Operates on context objects and structured input/output records specific to repository link configurations. Used to programmatically establish links between repositories in controlled, error-handled workflows.",
      "description_length": 320,
      "index": 785,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateHost",
      "description": "Handles AWS EC2 instance creation requests by validating input parameters and interacting with the AWS API. Operates on context objects and structured input/output records specific to host creation. Processes exceptions such as rate limiting and invalid input during the creation process.",
      "description_length": 288,
      "index": 786,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateConnection",
      "description": "Handles connection requests by validating context and input, then returning structured outputs or specific error types such as limit exceeded, resource not found, or resource unavailable. Operates on custom context objects and input/output records defined within the Smaws_Lib framework. Used to manage AWS service connections with precise error handling during setup.",
      "description_length": 368,
      "index": 787,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UpdateIdentityPool",
      "description": "Handles the modification of an identity pool by sending a request to update its configuration, including attributes like authentication and unauthenticated roles. Operates on an `identity_pool` data structure, which encapsulates pool-specific settings and permissions. Used to apply changes in user identity management systems where concurrent updates or resource constraints must be explicitly handled.",
      "description_length": 403,
      "index": 788,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UntagResource",
      "description": "Handles AWS resource untagging by accepting a context and input parameters, then returning a response or specific error types. Operates with AWS JSON protocol structures and exception types defined in the Smaws_Lib module. Used to remove tags from resources in AWS services like EC2 or S3 upon explicit request.",
      "description_length": 311,
      "index": 789,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UnlinkIdentity",
      "description": "Handles the removal of an identity from a user account by sending a request to the underlying service. Operates on context data and input structures specific to identity management. Used to enforce account hygiene by permanently deleting linked identities when authorized.",
      "description_length": 272,
      "index": 790,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UnlinkDeveloperIdentity",
      "description": "Handles the removal of a developer's identity from a system, accepting context and input parameters to execute the unlink operation. Works with `Smaws_Lib.Context.t` and custom input types specific to identity management. Used to resolve conflicts when a developer account is no longer valid or needs to be dissociated from resources.",
      "description_length": 334,
      "index": 791,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.TagResource",
      "description": "Handles AWS resource tagging by sending a structured request with context and input parameters. Operates on custom types representing tag inputs and responses, along with specific error variants for AWS service exceptions. Used to associate tags with resources in AWS services that support tagging, such as EC2 instances or S3 buckets.",
      "description_length": 335,
      "index": 792,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.SetPrincipalTagAttributeMap",
      "description": "Provides functions to send a request for setting principal tag attributes, handling specific error types from AWS services. Operates with context objects, input records, and response structures tailored for AWS API interactions. Used to manage access control policies by associating tags with principals in distributed systems.",
      "description_length": 327,
      "index": 793,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.SetIdentityPoolRoles",
      "description": "Handles the modification of role assignments for identity pools by accepting context and input parameters, returning success or specific AWS-related error types. Operates with AWS JSON protocol responses and custom exception types derived from AWS service definitions. Used to update permissions in authentication systems where identity pool roles must be dynamically adjusted.",
      "description_length": 377,
      "index": 794,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.MergeDeveloperIdentities",
      "description": "Handles the merging of developer identity records by validating input parameters, checking for conflicts, and executing the merge operation within a specified context. Operates on custom input and response types that encapsulate developer identity data and error conditions. Used to resolve duplicate identity entries in user management systems, ensuring data consistency across services.",
      "description_length": 388,
      "index": 795,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.LookupDeveloperIdentity",
      "description": "Handles AWS JSON-based requests to look up developer identity information, including error handling for specific exception types. Operates on context objects and input/output records defined in related modules. Used to validate and retrieve developer identity details in a cloud service integration scenario.",
      "description_length": 308,
      "index": 796,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.ListTagsForResource",
      "description": "Provides functions to request and handle responses for listing tags associated with a specific AWS resource, including error handling for common AWS exceptions. Operates with AWS context and input/output records defined by the Smaws_Lib library. Used to retrieve metadata tags for resources like EC2 instances or S3 buckets during infrastructure management tasks.",
      "description_length": 363,
      "index": 797,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.ListIdentityPools",
      "description": "Handles AWS Cognito identity pool requests by sending a structured input and returning a response with detailed error handling. Operates on context and input types specific to AWS service interactions. Used to retrieve identity pool information in authentication and user management workflows.",
      "description_length": 293,
      "index": 798,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.ListIdentities",
      "description": "Provides functions to send a request for listing identities, handling specific error types such as invalid parameters, authorization issues, and resource not found. Operates with context data and input structures defined by the Smaws_Lib library. Used to retrieve identity information from a service with precise error handling and response formatting.",
      "description_length": 352,
      "index": 799,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetPrincipalTagAttributeMap",
      "description": "Handles AWS request to retrieve a principal's tag attribute map, processing input and returning structured responses. Operates with context objects, input records, and error-specific exceptions. Used to fetch and validate tag attributes for access control and resource management.",
      "description_length": 280,
      "index": 800,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetOpenIdTokenForDeveloperIdentity",
      "description": "Handles AWS Cognito identity token requests by validating developer-provided identities, fetching associated OpenID tokens, and managing exception responses. Operates with AWS context, input records containing identity pool and developer ID details, and structured error types from AWS protocols. Used to authenticate and authorize user sessions in custom identity management workflows.",
      "description_length": 386,
      "index": 801,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetOpenIdToken",
      "description": "Requests an OpenID Connect token using AWS credentials and configuration. It processes input parameters related to identity providers and returns a token response or specific error types defined by AWS services. Used to authenticate and authorize users in AWS-based applications requiring federated identity.",
      "description_length": 308,
      "index": 802,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetIdentityPoolRoles",
      "description": "Handles AWS Cognito identity pool role retrieval by sending a structured request with context and input parameters. Operates on custom types such as `get_identity_pool_roles_input` and `get_identity_pool_roles_response`, incorporating specific error types for AWS service interactions. Used to fetch role assignments for a given identity pool in authentication workflows.",
      "description_length": 371,
      "index": 803,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetId",
      "description": "Requests an ID from a service, handling specific error types such as invalid parameters, resource conflicts, and service exceptions. It operates on context data and input structures defined by the Smaws_Lib framework. Used to generate unique identifiers in distributed systems with strict error handling for API interactions.",
      "description_length": 325,
      "index": 804,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetCredentialsForIdentity",
      "description": "Handles AWS Cognito identity-based credential requests by validating input and returning temporary credentials. Operates with context and specific input/output types defined by AWS Cognito's API. Manages error conditions such as invalid configurations, authorization failures, and service unavailability.",
      "description_length": 304,
      "index": 805,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DescribeIdentityPool",
      "description": "Handles AWS Cognito Identity Pool description by sending a structured request and returning detailed pool information or specific error types. Operates with context and input records tailored for AWS API interactions. Used to retrieve configuration details of an identity pool in a controlled, error-aware manner.",
      "description_length": 313,
      "index": 806,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DescribeIdentity",
      "description": "Handles AWS Identity description requests by accepting context and input parameters, returning detailed identity information or specific error types. Operates with AWS context objects and structured input records. Used to retrieve user or role details from AWS services in error-resistant workflows.",
      "description_length": 299,
      "index": 807,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DeleteIdentityPool",
      "description": "Handles AWS STS delete identity pool requests by processing input parameters and returning appropriate success or error outcomes. Operates with context and specific input records structured for AWS STS API interactions. Used to remove identity pools from AWS accounts with detailed error reporting for validation, authorization, and service issues.",
      "description_length": 348,
      "index": 808,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DeleteIdentities",
      "description": "Handles identity deletion requests by validating input and initiating the deletion process. Operates on context objects and structured input containing identity identifiers. Processes AWS JSON-based API calls, managing specific error conditions such as invalid parameters or request throttling.",
      "description_length": 294,
      "index": 809,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.CreateIdentityPool",
      "description": "Handles the creation of identity pools by accepting context and input parameters, returning a result that includes the created pool or specific error types. Operates with AWS JSON protocol errors and custom exception types derived from the Smaws_Lib library. Used to manage user identity pool provisioning in AWS Cognito services.",
      "description_length": 330,
      "index": 810,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.VerifyMac",
      "description": "Handles MAC verification requests using cryptographic operations, returning a response or specific error types related to key validity, state, and permissions. Operates on context objects and structured request/response types defined in the Smaws_Lib framework. Used to validate message authentication codes in AWS KMS interactions, ensuring data integrity and proper key usage.",
      "description_length": 378,
      "index": 811,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.Verify",
      "description": "Handles AWS KMS verification requests by validating cryptographic signatures and permissions. Operates on context objects and custom request/response types specific to AWS KMS. Processes operations such as checking key availability, signature validity, and access permissions with detailed error handling for AWS-specific exceptions.",
      "description_length": 333,
      "index": 812,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_KMS.UpdatePrimaryRegion",
      "description": "Handles AWS KMS requests to update the primary region for a multi-Region key, validating context and input parameters. Processes structured request data and returns results with specific error variants for AWS service responses. Used in scenarios requiring region-based key management in distributed systems.",
      "description_length": 308,
      "index": 813,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UpdateKeyDescription",
      "description": "Handles the request to update a key description in AWS KMS, processing specific error types related to dependencies, ARN validity, and KMS state. Operates with context data and request structures defined in Smaws_Lib. Used to modify key metadata in secure environments where precise error handling is critical.",
      "description_length": 310,
      "index": 814,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UpdateCustomKeyStore",
      "description": "Requests the creation or modification of a custom key store in AWS KMS, handling specific error conditions related to cluster states, names, and configurations. It operates with context objects, request records, and detailed response structures tied to AWS KMS operations. Used to manage custom key store registration and update workflows in secure key management systems.",
      "description_length": 372,
      "index": 815,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UpdateAlias",
      "description": "Handles AWS KMS alias updates by sending a request to the KMS service, processing responses, and managing specific error conditions such as invalid states, timeouts, and resource limits. Operates on context objects and structured request data for AWS KMS operations. Used to programmatically modify alias mappings in AWS Key Management Service.",
      "description_length": 344,
      "index": 816,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UntagResource",
      "description": "Handles AWS KMS resource untagging by sending a JSON-based request to the AWS service, processing responses, and raising specific exceptions for invalid ARNs, KMS internal errors, state issues, missing resources, and tag-related problems. Operates with context data, untagging requests, and custom exception types derived from AWS error responses. Used to remove tags from KMS keys in scenarios requiring precise error handling and integration with AWS infrastructure.",
      "description_length": 468,
      "index": 817,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.TagResource",
      "description": "Handles AWS KMS tag resource requests by validating ARNs, applying tags, and managing exceptions such as invalid ARN formats, KMS internal errors, and tag limits. Operates on context objects and specific request structures tied to AWS KMS operations. Processes errors like missing resources, invalid states, and exceeded tag limits during tag application.",
      "description_length": 355,
      "index": 818,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.Sign",
      "description": "Handles signing of data using AWS KMS, accepting a context and a sign request, and returning a signed response or specific error types. Operates with AWS context objects and custom request/response types for cryptographic signing. Used to generate digital signatures for data integrity verification in secure communication workflows.",
      "description_length": 333,
      "index": 819,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ScheduleKeyDeletion",
      "description": "Handles the initiation of key deletion requests in a cryptographic service, processing structured input and returning detailed responses or specific error conditions. Operates with context objects and custom request/response types tied to key management workflows. Used to enforce controlled key removal in secure environments, ensuring proper validation and error reporting.",
      "description_length": 375,
      "index": 820,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.RotateKeyOnDemand",
      "description": "Handles key rotation requests for AWS KMS, processing context and custom request types to return structured responses. Operates with AWS context objects, custom request and response records, and specific exception types. Used to dynamically trigger key rotation in systems requiring on-demand key management.",
      "description_length": 308,
      "index": 821,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.RevokeGrant",
      "description": "Handles the revocation of a KMS grant by sending a structured request to the AWS KMS service, validating input parameters, and managing error responses specific to grant operations. Operates on context objects, grant identifiers, and AWS error types defined in the Smaws_Lib framework. Used to enforce access control changes by removing previously issued cryptographic permissions.",
      "description_length": 381,
      "index": 822,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.RetireGrant",
      "description": "Handles the submission of a retire grant request, validating and processing the provided grant information against AWS KMS services. Operates with context data, grant request structures, and specific exception types defined in the Smaws_Lib module. Used to revoke access permissions associated with a grant in a secure and controlled manner.",
      "description_length": 341,
      "index": 823,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ReplicateKey",
      "description": "Handles key replication requests across AWS regions, processing specific error conditions unique to KMS operations. Operates on context objects and structured request/response types defined in Smaws_Lib. Used to manage cross-region key duplication while enforcing AWS KMS policy and state constraints.",
      "description_length": 301,
      "index": 824,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ReEncrypt",
      "description": "Handles key re-encryption requests by validating context, processing ciphertext, and returning decrypted and re-encrypted data. Operates on cryptographic key structures, AWS JSON error types, and custom exception types related to key management. Used to update encryption keys in stored data without exposing plaintext.",
      "description_length": 319,
      "index": 825,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.PutKeyPolicy",
      "description": "Handles AWS KMS key policy requests by validating and applying specified policies to keys. Operates on context objects and policy-related data structures, including ARNs and policy documents. Directly integrates with AWS services to manage access controls and enforce policy constraints.",
      "description_length": 287,
      "index": 826,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListRetirableGrants",
      "description": "Handles grant retrieval with pagination, supporting context-aware requests and error handling for AWS-related exceptions. Operates on AWS grant request and response structures, including markers for iterative data fetching. Used to fetch a list of grants that can be retired based on specified criteria.",
      "description_length": 303,
      "index": 827,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListResourceTags",
      "description": "Handles AWS resource tag retrieval by sending a structured request and returning detailed responses. Operates with AWS context, request records, and various error types specific to tag operations. Used to fetch tags for resources like EC2 instances or S3 buckets when interacting with AWS services.",
      "description_length": 298,
      "index": 828,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListKeys",
      "description": "Provides functions to request and handle responses for listing keys in a key management system, using context and specific request/response types. Operates with custom exception types and AWS JSON protocol errors. Used to retrieve key metadata in distributed cryptographic applications.",
      "description_length": 286,
      "index": 829,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListKeyRotations",
      "description": "Provides functions to handle key rotation requests for AWS KMS, including error handling for invalid ARNs, markers, and state issues. Operates on AWS context objects and specific request/response types defined in the Smaws_Lib framework. Used to manage cryptographic key rotation workflows in secure cloud environments.",
      "description_length": 319,
      "index": 830,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListKeyPolicies",
      "description": "Handles AWS KMS key policy listing by sending a request with context and a specific request structure, returning a response or detailed error types. Operates on AWS context objects and custom request/response types for KMS key policies. Used to retrieve policy information for cryptographic keys in AWS KMS.",
      "description_length": 307,
      "index": 831,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListGrants",
      "description": "Handles AWS KMS grant requests, processing parameters such as grant tokens and pagination markers to retrieve grant information. Operates on structured data types including request and response records specific to AWS KMS operations. Used to fetch detailed grant metadata for auditing or access control verification in cloud infrastructure workflows.",
      "description_length": 350,
      "index": 832,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ListAliases",
      "description": "Handles AWS KMS list aliases requests, processing context and parameters to retrieve alias information. Operates with AWS JSON protocol errors, custom exceptions, and specific request/response types. Used to fetch a paginated list of KMS key aliases within a given AWS account.",
      "description_length": 277,
      "index": 833,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ImportKeyMaterial",
      "description": "Handles the exchange of cryptographic key material with a remote KMS service, processing requests and responses with precise error handling for AWS-specific exceptions. Operates on structured data types including import_key_material_request and import_key_material_response, incorporating detailed error variants for fault isolation. Used to securely transfer encrypted key data and validate import tokens during key setup workflows.",
      "description_length": 433,
      "index": 834,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.GetPublicKey",
      "description": "Handles AWS KMS public key retrieval by sending a request with a context and a specific request structure, returning a response or a detailed error. Operates on AWS context objects, custom request and response types, and a variety of exception types specific to KMS operations. Used to fetch public keys for cryptographic operations in secure communication workflows.",
      "description_length": 367,
      "index": 835,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GetParametersForImport",
      "description": "Handles AWS KMS import parameter retrieval by validating ARNs, managing dependencies, and processing KMS-specific exceptions. Operates on context objects, request records, and structured error types from AWS JSON protocols. Used to prepare key material for import by fetching necessary configuration and validation data.",
      "description_length": 320,
      "index": 836,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.GetKeyRotationStatus",
      "description": "Handles AWS KMS key rotation status requests by validating context, parsing input, and returning structured responses. Operates on AWS context objects and specific request/response types defined in the Smaws_Lib framework. Used to check the rotation status of customer-managed KMS keys in secure environments.",
      "description_length": 309,
      "index": 837,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GetKeyPolicy",
      "description": "Handles AWS KMS get key policy requests by validating context, parsing input, and returning policy details or specific error variants. Operates on AWS context objects and structured policy request/response types. Used to retrieve cryptographic key policies in secure data management workflows.",
      "description_length": 293,
      "index": 838,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateRandom",
      "description": "Generates random bytes using a specified configuration and returns the result along with potential error variants. It operates on context objects and request structures specific to the AWS KMS service. This function is used to fulfill encryption-related requests requiring secure random data generation.",
      "description_length": 303,
      "index": 839,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateMac",
      "description": "Handles MAC generation requests using AWS KMS, processing context and request parameters to produce cryptographic responses. Operates on AWS-specific types such as context, request, and various exception types. Used to securely generate message authentication codes within AWS encryption workflows.",
      "description_length": 298,
      "index": 840,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKeyWithoutPlaintext",
      "description": "Handles KMS data key generation without plaintext exposure, using a context and request structure to produce encrypted key materials. Operates on AWS KMS-specific request and response types, along with custom exception types for error handling. Used in secure key management workflows where plaintext keys must not be generated or transmitted.",
      "description_length": 343,
      "index": 841,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKeyPairWithoutPlaintext",
      "description": "Handles key pair generation for encryption without plaintext exposure, using AWS KMS protocols. Operates on context objects and request/response structures specific to KMS data key operations. Used to securely generate asymmetric key pairs for scenarios requiring cryptographic isolation.",
      "description_length": 288,
      "index": 842,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKeyPair",
      "description": "Handles the creation of data key pairs by sending a request to an AWS KMS service, returning a response or specific error types related to key generation. Operates with context objects and structured request/response types defined in the Smaws_Lib module. Used to securely generate encryption keys for data protection in cryptographic workflows.",
      "description_length": 345,
      "index": 843,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKey",
      "description": "Handles key generation requests by interacting with AWS KMS, returning a response or specific error types related to key management. Operates with context objects and custom request/response types for AWS JSON protocol interactions. Used to dynamically create data keys for encryption workflows within secure applications.",
      "description_length": 322,
      "index": 844,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.Encrypt",
      "description": "Handles encryption requests by interacting with a cryptographic service, returning structured responses or specific error types related to key management and access control. Operates on context objects and custom request/response types defined in the Smaws_Lib module. Used to securely encrypt data payloads within AWS KMS-compatible workflows, validating keys and permissions before execution.",
      "description_length": 394,
      "index": 845,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.EnableKeyRotation",
      "description": "Handles the initiation of key rotation for AWS KMS keys by sending a request with specific parameters. Operates on context objects and custom exception types derived from AWS JSON protocol responses. Used to programmatically enable rotation for encrypted data sources within secure infrastructure workflows.",
      "description_length": 307,
      "index": 846,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.EnableKey",
      "description": "Handles AWS KMS key enabling by sending a request with context and a specific request structure. Operates on context objects and error types defined in the Smaws_Lib library. Used to activate KMS keys when encountering state restrictions or access issues.",
      "description_length": 255,
      "index": 847,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DisconnectCustomKeyStore",
      "description": "Handles the termination of a custom key store connection by sending a structured request and processing specific error conditions. Operates with context objects, request records, and response types tailored to AWS KMS interactions. Used to cleanly disconnect a custom key store when it is no longer needed or has entered an invalid state.",
      "description_length": 338,
      "index": 848,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DisableKeyRotation",
      "description": "Handles the request to disable key rotation in AWS KMS, accepting a context and a specific request structure. Operates with AWS JSON protocol errors and custom exception types related to KMS state and configuration. Used to enforce key rotation policies in secure key management workflows.",
      "description_length": 289,
      "index": 849,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DisableKey",
      "description": "Handles the request to disable a KMS key by interacting with AWS services, returning success or specific error types related to key management. Operates on context objects and custom request records tied to key disablement workflows. Used in scenarios requiring controlled access revocation for cryptographic keys.",
      "description_length": 314,
      "index": 850,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DescribeKey",
      "description": "Handles AWS KMS describe-key operations by accepting a context and request structure, returning detailed key information or specific error types. Works with AWS context objects and custom request/response types tailored for key metadata retrieval. Used to fetch cryptographic key attributes in secure communication setups.",
      "description_length": 322,
      "index": 851,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DescribeCustomKeyStores",
      "description": "Handles AWS KMS requests to describe custom key stores, including error handling for specific exceptions. Operates on context objects and structured request/response types related to KMS custom key stores. Used to retrieve detailed information about configured custom key stores in an AWS environment.",
      "description_length": 301,
      "index": 852,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DeriveSharedSecret",
      "description": "Handles the generation of a shared secret using a provided context and request parameters. Operates on `Smaws_Lib.Context.t` and custom request/response types specific to the KMS protocol. Used to establish secure communication channels in cryptographic workflows requiring key-based authentication.",
      "description_length": 299,
      "index": 853,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DeleteImportedKeyMaterial",
      "description": "Handles the deletion of imported key material in AWS KMS by sending a structured request. Operates on AWS context and specific error-typed results. Used to remove cryptographic keys that were externally imported into a KMS key.",
      "description_length": 227,
      "index": 854,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DeleteCustomKeyStore",
      "description": "Handles the deletion of a custom key store by validating its state, checking for associated CMKs, and ensuring it exists. Operates on context objects and specific request/response types tied to AWS KMS operations. Returns detailed error outcomes for invalid states, missing stores, or internal issues.",
      "description_length": 301,
      "index": 855,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DeleteAlias",
      "description": "Handles deletion of aliases in AWS KMS by sending a structured request and returning specific error outcomes. Operates with context objects and custom exception types derived from AWS JSON protocols. Used to manage cryptographic key aliases in secure environments where precise error handling is required.",
      "description_length": 305,
      "index": 856,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.Decrypt",
      "description": "Handles decryption requests using a context object, returning a result that includes decrypted data or specific error conditions related to key availability, validity, and permissions. Operates on custom exception types and a structured request/response format defined in related modules. Used to securely process encrypted payloads in systems requiring strict key management and error reporting.",
      "description_length": 396,
      "index": 857,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.CreateKey",
      "description": "Handles the creation of cryptographic keys by sending a request to a key management service, returning a response or specific error conditions related to key configuration, state, or permissions. Operates with context objects and structured request/response types defined in the Smaws_Lib library. Used to initialize keys in a cloud HSM cluster or custom key store, ensuring proper validation and error handling during setup.",
      "description_length": 425,
      "index": 858,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.CreateGrant",
      "description": "Handles the creation of AWS KMS grants by sending a request with specified parameters, validating permissions, and managing error conditions such as invalid ARNs, disabled keys, and resource limits. Operates on context objects, grant requests, and structured responses specific to AWS KMS. Processes operations that require cryptographic key access, including scenarios with dry runs and grant tokens.",
      "description_length": 401,
      "index": 859,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.CreateCustomKeyStore",
      "description": "Handles the creation of a custom key store by validating configuration parameters, checking for existing resources, and ensuring trust anchor integrity. Operates on context objects, request structures, and various exception types related to AWS KMS and CloudHSM. Used to set up secure key management systems with custom hardware security modules.",
      "description_length": 346,
      "index": 860,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.CreateAlias",
      "description": "Handles alias creation requests for cryptographic keys, validating names and checking existing aliases. Operates on context objects and structured request data, returning detailed error outcomes. Used to enforce unique alias constraints and manage key reference integrity in secure systems.",
      "description_length": 290,
      "index": 861,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ConnectCustomKeyStore",
      "description": "Requests the creation of a custom key store by validating the provided configuration, checking the state of the CloudHSM cluster, and ensuring the KMS is in a stable condition. It operates on context objects, request structures, and various exception types specific to AWS KMS and CloudHSM. The function is used to initialize a custom key store in environments where encrypted key material is managed externally.",
      "description_length": 412,
      "index": 862,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.CancelKeyDeletion",
      "description": "Handles the request to cancel a key deletion by interacting with AWS KMS, processing specific error types related to invalid ARNs, dependencies, and key states. Operates on context objects and custom request/response types tied to the KMS service. Used to manage key lifecycle operations in cloud infrastructure workflows.",
      "description_length": 322,
      "index": 863,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.UntagResources",
      "description": "Handles AWS resource untagging by accepting a context and input parameters, then returning a result with output or specific error types. Operates on AWS JSON protocol structures and exception types defined in the Smaws_Lib library. Used to remove tags from EC2 instances, S3 buckets, or other AWS resources programmatically.",
      "description_length": 324,
      "index": 864,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.TagResources",
      "description": "Handles AWS resource tagging operations by accepting context and input parameters, returning results or specific error types. Works with AWS context objects, tag input structures, and output responses. Used to apply or modify tags on AWS resources within a controlled execution environment.",
      "description_length": 290,
      "index": 865,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.StartReportCreation",
      "description": "Handles the initiation of a start report creation process by validating input and interacting with underlying systems. Operates on context objects and structured input data to produce output or specific exception types. Used to manage report generation workflows with explicit error handling for service-specific conditions.",
      "description_length": 324,
      "index": 866,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetTagValues",
      "description": "Handles AWS CloudWatch request to retrieve tag values for specified resources, accepting context and input parameters. Operates on AWS JSON protocol types and error variants specific to CloudWatch. Used to fetch paginated tag data for monitoring and resource management tasks.",
      "description_length": 276,
      "index": 867,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetTagKeys",
      "description": "Provides functions to request tag keys from an AWS service, handling specific error types such as invalid parameters, internal service issues, and throttling. Operates with context objects and input structures defined by the Smaws_Lib library. Used to retrieve paginated tag key lists in AWS resource management workflows.",
      "description_length": 322,
      "index": 868,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetResources",
      "description": "Requests resource data from a service, accepting a context and input parameters to generate a structured output. It handles specific error cases such as invalid parameters, service exceptions, and throttling. The module interacts with AWS JSON protocols and processes pagination tokens for efficient data retrieval.",
      "description_length": 315,
      "index": 869,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetComplianceSummary",
      "description": "Processes compliance summary requests by validating input and invoking the appropriate service endpoint, returning structured output or specific exception types. Operates with context objects, input records containing filter criteria, and output records aggregating compliance data. Used to generate compliance reports for AWS resources based on defined parameters.",
      "description_length": 365,
      "index": 870,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.DescribeReportCreation",
      "description": "Handles AWS EC2 describe report creation requests by validating input parameters, processing context, and returning structured outputs. Operates with context objects, input records, and custom exception types specific to AWS service constraints. Used to retrieve detailed information about report creation status and associated errors in cloud infrastructure monitoring workflows.",
      "description_length": 380,
      "index": 871,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateVpcEndpoint",
      "description": "Handles AWS VPC endpoint updates by sending structured requests and processing responses. Operates with context objects, request records, and custom exception types. Used to modify VPC endpoint configurations in cloud infrastructure workflows.",
      "description_length": 243,
      "index": 872,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateSecurityPolicy",
      "description": "Handles the submission of security policy updates by validating input, checking resource existence, and managing conflicts. Operates on context objects and structured request/response types specific to AWS service interactions. Processes scenarios such as resource not found, service quotas exceeded, and invalid input during policy modifications.",
      "description_length": 347,
      "index": 873,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateSecurityConfig",
      "description": "Handles AWS IoT Core security configuration updates by sending a request and returning a result with specific error types. Operates on context objects and custom request/response types tied to IoT device security settings. Used to modify certificate-based authentication policies for IoT devices in a secure manner.",
      "description_length": 315,
      "index": 874,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateLifecyclePolicy",
      "description": "Handles the submission of update lifecycle policy requests, processing parameters such as policy ARN and rules. Operates with structured data including update_lifecycle_policy_request and associated response types. Used to modify existing lifecycle policies in AWS services like S3, ensuring compliance with defined retention and transition rules.",
      "description_length": 347,
      "index": 875,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateCollection",
      "description": "Handles AWS API requests to update a collection by validating input, checking for conflicts, and managing server errors. Operates on context objects and structured request/response types specific to the AWS protocol. Processes updates with error handling for conflicts, invalid inputs, and internal server issues.",
      "description_length": 313,
      "index": 876,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateAccountSettings",
      "description": "Handles account settings updates by sending a structured request and returning a typed response. Operates with context, request, and response types specific to AWS JSON protocols. Processes user-defined settings changes with error handling for server and validation issues.",
      "description_length": 273,
      "index": 877,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateAccessPolicy",
      "description": "Handles AWS IAM policy updates by sending a request with context and a structured policy update, returning a result that includes success responses or specific exception types. Operates with context objects, policy update requests, and response structures tailored to AWS IAM interactions. Used to programmatically modify access policies for IAM entities in cloud infrastructure workflows.",
      "description_length": 389,
      "index": 878,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the service, processing responses, and returning specific error types derived from AWS protocol definitions. Operates with context objects, untag_resource_request records, and untag_resource_response records. Used to remove tags from AWS resources like EC2 instances or S3 buckets in a controlled, error-aware manner.",
      "description_length": 387,
      "index": 879,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.TagResource",
      "description": "Handles AWS resource tagging operations by sending requests and processing responses. Accepts context and tag resource request structures, returning results with specific error types. Used to associate tags with AWS resources in controlled environments.",
      "description_length": 253,
      "index": 880,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListTagsForResource",
      "description": "Handles AWS service requests to retrieve tags associated with a specific resource. Operates on structured request and response types, including error variants for service-specific exceptions. Used to fetch metadata tags for resources in AWS environments, such as EC2 instances or S3 buckets.",
      "description_length": 291,
      "index": 881,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetPoliciesStats",
      "description": "Processes AWS GetPoliciesStats requests by validating input, constructing HTTP calls, and parsing JSON responses. Operates on context objects, request records, and structured error types specific to AWS services. Used to retrieve aggregated policy metrics from AWS services in distributed systems.",
      "description_length": 297,
      "index": 882,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetAccountSettings",
      "description": "Handles AWS API requests to retrieve account settings, processing JSON-based inputs and outputs. Operates with context objects, request records, and response structures specific to AWS services. Used to fetch configuration details from an AWS account during system integration workflows.",
      "description_length": 287,
      "index": 883,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateSecurityPolicy",
      "description": "Handles the creation of security policies by processing a request and returning a response or specific error types. Operates with context data, request structures, and custom exception types related to policy conflicts, service issues, and validation. Used to enforce policy creation constraints within AWS-based systems.",
      "description_length": 321,
      "index": 884,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateLifecyclePolicy",
      "description": "Handles the creation of lifecycle policies by sending a request to an AWS service, processing the response, and returning specific error types based on the service's output. Operates with context objects, request records, and custom exception types derived from AWS JSON responses. Used to enforce policy constraints in cloud resource management workflows.",
      "description_length": 356,
      "index": 885,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetVpcEndpoint",
      "description": "Handles AWS VPC endpoint retrieval by sending a structured request and parsing the JSON response. Operates on context objects, request records, and custom exception types specific to AWS service interactions. Used to fetch multiple VPC endpoint details in a single API call, supporting error handling for service-specific exceptions.",
      "description_length": 333,
      "index": 886,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetLifecyclePolicy",
      "description": "Handles AWS API requests to retrieve lifecycle policies for multiple resources, accepting context and a structured request. Operates on AWS-specific data types including `batch_get_lifecycle_policy_request` and `batch_get_lifecycle_policy_response`. Used to fetch policy details for resource management in cloud infrastructure workflows.",
      "description_length": 337,
      "index": 887,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetEffectiveLifecyclePolicy",
      "description": "Handles AWS Glue API requests to retrieve effective lifecycle policies for multiple resources. Operates on context objects and structured request/response types specific to the Glue service. Used to fetch policy configurations for batch processing in data governance workflows.",
      "description_length": 277,
      "index": 888,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetCollection",
      "description": "Handles AWS DynamoDB batch get collection requests by accepting a context and a request structure, returning a response or specific error types. Operates with AWS JSON protocol structures and exception types defined in the Smaws_Lib module. Used to retrieve multiple items from a DynamoDB table or index in a single operation.",
      "description_length": 326,
      "index": 889,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListVpcEndpoints",
      "description": "Processes AWS VPC endpoint listing requests by sending a structured API call and returning a parsed response. Operates on context objects, request records, and error-specific types derived from AWS JSON protocols. Used to retrieve and handle VPC endpoint configurations from cloud infrastructure services.",
      "description_length": 305,
      "index": 890,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListSecurityPolicies",
      "description": "Handles AWS IoT Core list security policies requests by processing context and input parameters, returning a structured response or specific error types. Operates with AWS JSON protocol errors, internal server exceptions, and validation exceptions. Used to retrieve a list of security policies associated with an IoT device or account.",
      "description_length": 335,
      "index": 891,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListSecurityConfigs",
      "description": "Handles AWS API requests to list security configurations, processing context and request parameters to return structured responses. Operates with AWS context objects, request records, and custom error types specific to the service. Used to retrieve and validate security settings in cloud infrastructure workflows.",
      "description_length": 314,
      "index": 892,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListLifecyclePolicies",
      "description": "Handles AWS S3 lifecycle policy retrieval by sending a structured request and returning a typed response. Processes context and request objects to interact with S3 services, incorporating specific error types for internal and validation issues. Used to fetch and manage lifecycle configurations for S3 buckets programmatically.",
      "description_length": 327,
      "index": 893,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListCollections",
      "description": "Handles AWS ListCollections requests by processing context and request parameters, returning a structured response or specific error types. Operates with AWS context objects, request records, and custom error types derived from AWS JSON protocols. Used to retrieve collection lists from AWS services with precise error handling for validation and server issues.",
      "description_length": 361,
      "index": 894,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListAccessPolicies",
      "description": "Provides functions to handle AWS IAM list access policies requests, including parsing and executing policy retrieval operations. Works with context objects, request structures, and response types specific to AWS IAM. Used to fetch and manage access policies for IAM users, groups, and roles within an AWS environment.",
      "description_length": 317,
      "index": 895,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetSecurityPolicy",
      "description": "Handles AWS API requests to retrieve security policy configurations, processing input of type `get_security_policy_request` and returning structured responses or specific error variants. Operates with context data from `Smaws_Lib.Context.t` to manage request execution and error handling. Used to fetch policy details from AWS services, enabling precise control over security settings in distributed systems.",
      "description_length": 408,
      "index": 896,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetSecurityConfig",
      "description": "Handles AWS service requests to retrieve security configuration details, processing input of type `get_security_config_request` and returning structured responses or specific error types including internal server, resource not found, and validation exceptions. Works with context objects containing environment and authentication data. Used to fetch and validate security settings in AWS-based applications.",
      "description_length": 407,
      "index": 897,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetAccessPolicy",
      "description": "Handles AWS IAM get access policy requests by validating context, processing the request, and returning structured responses or specific error types. Operates with AWS context objects and custom request/response types derived from protocol specifications. Used to retrieve policy details from IAM, ensuring proper error handling for service-specific exceptions.",
      "description_length": 361,
      "index": 898,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteVpcEndpoint",
      "description": "Handles the deletion of a VPC endpoint by sending a structured request and returning a result that includes either a response object or specific error types such as conflict, internal server, resource not found, or validation exceptions. Operates on custom request and response types derived from AWS JSON protocols. Used in scenarios requiring precise error handling during VPC endpoint removal in cloud infrastructure management.",
      "description_length": 431,
      "index": 899,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteSecurityPolicy",
      "description": "Handles deletion of security policies by sending a structured request and returning a result with specific error types. Operates on custom request and response types derived from AWS JSON protocol definitions. Used to manage policy removal in AWS services with explicit error handling for common failure scenarios.",
      "description_length": 314,
      "index": 900,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteSecurityConfig",
      "description": "Handles AWS API requests to delete security configurations, processing responses and specific error types such as conflict, internal server, resource not found, and validation exceptions. Operates with context objects and structured request/response types defined in Smaws_Lib. Used to manage deletion workflows in AWS services requiring security configuration validation and error handling.",
      "description_length": 391,
      "index": 901,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteLifecyclePolicy",
      "description": "Handles AWS S3 lifecycle policy deletion by sending a structured request and returning a typed response. Operates with context objects, policy-specific request records, and detailed error types. Used to programmatically remove lifecycle configurations from S3 buckets in cloud management workflows.",
      "description_length": 298,
      "index": 902,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteCollection",
      "description": "Handles deletion requests for collections by validating input, checking resource existence, and managing conflicts. Operates on custom request and response types, along with specific exception types for error handling. Used to safely remove collections in distributed systems with explicit error reporting.",
      "description_length": 306,
      "index": 903,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteAccessPolicy",
      "description": "Handles AWS S3 delete access policy requests by sending a structured request and returning a result with specific error types. Operates with context objects and policy-related data structures. Used to remove access policies from S3 resources while managing AWS-specific exceptions.",
      "description_length": 281,
      "index": 904,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateVpcEndpoint",
      "description": "Handles the creation of a VPC endpoint by sending a structured request and returning a response or specific error types. Operates with context data, request parameters, and AWS-specific error types. Used to establish network connectivity between a VPC and an AWS service through an endpoint.",
      "description_length": 291,
      "index": 905,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateSecurityConfig",
      "description": "Handles the creation of security configurations by sending a request to an AWS service, processing the response, and managing specific error cases such as conflicts, service quotas, and validation issues. Operates on context objects, request records, and response structures defined within the Smaws_Lib framework. Used to enforce security policies during resource provisioning in cloud infrastructure workflows.",
      "description_length": 412,
      "index": 906,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateCollection",
      "description": "Handles AWS DynamoDB collection creation requests by validating input, checking resource limits, and managing conflicts. Operates on context objects, request structures, and various exception types specific to DynamoDB. Used to safely initialize new database collections within constrained environments.",
      "description_length": 303,
      "index": 907,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateAccessPolicy",
      "description": "Handles the creation of access policies by sending a structured request and returning a result that includes either a response or specific error conditions. Operates with context data, request objects, and custom exception types derived from AWS JSON protocol definitions. Used to enforce policy creation workflows in AWS-based access control systems.",
      "description_length": 351,
      "index": 908,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.UpdateSubnetGroup",
      "description": "Handles the update of a subnet group by validating and processing the request, including error handling for specific fault conditions like invalid subnets or quota limits. Operates on custom request and response types derived from AWS JSON protocols. Used to modify network configurations in cloud infrastructure with precise error reporting.",
      "description_length": 342,
      "index": 909,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.UpdateParameterGroup",
      "description": "Handles AWS parameter group updates by validating input, checking group existence, and enforcing state constraints. Operates on context objects and structured request/response types specific to AWS services. Used to apply configuration changes to database clusters while catching errors like invalid parameters or missing groups.",
      "description_length": 329,
      "index": 910,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.UpdateCluster",
      "description": "Handles cluster update requests by validating parameters, checking cluster state, and applying configuration changes. Operates on context objects, update requests, and error-specific types derived from AWS JSON protocols. Used to modify cluster configurations in distributed systems while enforcing strict validation rules.",
      "description_length": 323,
      "index": 911,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.UntagResource",
      "description": "Handles AWS EKS resource untagging by accepting a context and an untag resource request, returning a response or specific error variants. Operates with AWS JSON protocol types and custom fault structures related to cluster and tag management. Used to remove tags from EKS clusters when validation checks and AWS service constraints are met.",
      "description_length": 340,
      "index": 912,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.TagResource",
      "description": "Handles AWS resource tagging requests by validating input, applying tags, and managing errors specific to cluster and ARN constraints. Operates on context objects, tag resource requests, and structured error types derived from AWS JSON protocols. Used to enforce tagging policies and track resource metadata in distributed systems.",
      "description_length": 331,
      "index": 913,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.RebootNode",
      "description": "Handles reboot requests for specific nodes in a cluster, validating context and parameters before initiating the process. Operates on custom request and response types, along with error variants for cluster and node state issues. Used to manage node reboots in distributed systems with strict validation requirements.",
      "description_length": 317,
      "index": 914,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.ListTags",
      "description": "Provides functions to request and handle responses for listing tags associated with AWS resources, including error handling for specific fault conditions. Operates with context objects, request records, and response structures tailored to AWS tag operations. Used to retrieve tag information for clusters and validate ARN formats during tag listing.",
      "description_length": 349,
      "index": 915,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.IncreaseReplicationFactor",
      "description": "Handles requests to increase the replication factor of a cluster, returning a response or specific error conditions. Operates with context data, request structures, and detailed error types related to cluster configuration and AWS infrastructure constraints. Used to adjust cluster resilience and data redundancy in distributed systems.",
      "description_length": 336,
      "index": 916,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeSubnetGroups",
      "description": "Handles AWS EC2 subnet group description requests, processing context and input to retrieve detailed subnet group information. Operates with AWS JSON protocol errors, service-linked role not found faults, and subnet group not found faults. Used to fetch configuration and status of specific subnet groups in cloud infrastructure.",
      "description_length": 329,
      "index": 917,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeParameters",
      "description": "Handles AWS parameter description requests by validating input, querying parameter groups, and returning structured responses. Processes context data, request parameters, and error-specific types related to AWS RDS. Used to retrieve detailed information about database parameter groups in cloud management workflows.",
      "description_length": 316,
      "index": 918,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeParameterGroups",
      "description": "Provides functions to request and handle responses for describing parameter groups in a cloud service, including error handling for specific exceptions. Works with context objects, request records, and response structures tailored to parameter group queries. Used to retrieve detailed information about parameter groups, validate input parameters, and manage service-specific error conditions.",
      "description_length": 393,
      "index": 919,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeEvents",
      "description": "Handles AWS EC2 describe-events requests by validating parameters and returning structured responses. Processes context and event-specific data to fetch and format event details. Manages specific error cases such as invalid parameter combinations and service-linked role not found.",
      "description_length": 281,
      "index": 920,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeDefaultParameters",
      "description": "Handles AWS API requests to describe default parameters for services, processing context and specific request types. Operates on custom request and response types, along with error variants specific to parameter validation and service configuration. Used to retrieve predefined parameter settings in AWS environments where service-linked roles are involved.",
      "description_length": 357,
      "index": 921,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeClusters",
      "description": "Handles AWS EKS cluster description requests, processing parameters and returning detailed cluster information or specific error conditions. Operates with context objects, request records, and structured response types. Used to retrieve cluster configurations, validate input parameters, and manage fault responses during cluster queries.",
      "description_length": 338,
      "index": 922,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DeleteSubnetGroup",
      "description": "Handles AWS RDS subnet group deletion by processing requests and returning responses with specific error types. Operates on context objects and structured request/response data including fault conditions. Used to safely remove subnet groups while managing errors like missing or in-use groups.",
      "description_length": 293,
      "index": 923,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DeleteParameterGroup",
      "description": "Handles the deletion of a parameter group by sending a structured request and returning a result that includes success responses or specific error conditions. Operates with context data, request records, and custom error types related to parameter group validation and state. Used to enforce proper deletion workflows in AWS-compatible systems, ensuring valid parameter group references and preventing invalid operations.",
      "description_length": 421,
      "index": 924,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DeleteCluster",
      "description": "Handles cluster deletion requests by validating input, checking cluster state, and interacting with AWS services. Operates on custom request and response types, along with specific fault types for error handling. Used to safely remove clusters while enforcing constraints and providing detailed error feedback.",
      "description_length": 310,
      "index": 925,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DecreaseReplicationFactor",
      "description": "Handles cluster node replication factor adjustment by processing requests and returning detailed responses. Operates on cluster and node identifiers, along with configuration parameters. Used to manage cluster state transitions and validate input constraints during replication changes.",
      "description_length": 286,
      "index": 926,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.CreateSubnetGroup",
      "description": "Handles AWS RDS subnet group creation by validating input, checking quota limits, and ensuring subnet compatibility. Processes requests with detailed error handling for duplicate groups, quota violations, and missing resources. Works with AWS context, subnet group configurations, and error-specific data types.",
      "description_length": 311,
      "index": 927,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.CreateParameterGroup",
      "description": "Handles the creation of parameter groups by validating input, checking constraints, and interacting with AWS services. Operates on context objects, request records, and various error types specific to parameter group configuration. Used to enforce AWS-specific validation rules during parameter group setup.",
      "description_length": 307,
      "index": 928,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.CreateCluster",
      "description": "Handles cluster creation requests by validating input parameters, checking resource quotas, and ensuring compliance with AWS-specific constraints. Operates on context objects, cluster configuration data, and error-specific types derived from AWS JSON protocols. Used to initiate cluster setup in cloud environments while enforcing AWS service limits and configuration rules.",
      "description_length": 374,
      "index": 929,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.ListStreams",
      "description": "Handles AWS ListStreams API requests, processing input parameters and returning structured output along with specific error types. Operates on context objects and custom input/output types defined for stream management. Used to retrieve a list of streams from an AWS service endpoint with precise error handling.",
      "description_length": 312,
      "index": 930,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.GetShardIterator",
      "description": "Handles AWS Kinesis shard iterator requests by accepting context and input parameters, returning a structured output or specific error types. Operates with AWS JSON protocol responses and custom error types derived from Kinesis exceptions. Used to retrieve shard iterators for data retrieval in stream processing workflows.",
      "description_length": 323,
      "index": 931,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.GetRecords",
      "description": "Handles AWS Kinesis data retrieval by sending a request with context and input parameters, returning structured output or specific error variants. Operates with AWS context objects, custom input records, and detailed error types from the Kinesis API. Used to fetch and process streams of data in real-time applications with precise error handling.",
      "description_length": 347,
      "index": 932,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.DescribeStream",
      "description": "Handles AWS DescribeStream API requests by accepting a context and input parameters, returning structured output or specific error types. Operates with AWS context objects and stream-related input/output records. Used to retrieve detailed information about a specific stream in an AWS environment.",
      "description_length": 297,
      "index": 933,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UpdateHypervisor",
      "description": "Handles hypervisor update requests by validating input and returning structured outputs. Operates on context objects and custom exception types to manage access, conflict, and resource errors. Used to enforce permissions and ensure valid hypervisor state transitions during system updates.",
      "description_length": 289,
      "index": 934,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UpdateGatewaySoftwareNow",
      "description": "Handles the initiation of a gateway software update by sending a request with context and input parameters. Operates on `Smaws_Lib.Context.t` and custom input/output types specific to the update process. Used to trigger firmware upgrades on designated gateway devices through an AWS JSON protocol.",
      "description_length": 297,
      "index": 935,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UpdateGatewayInformation",
      "description": "Handles AWS IoT Core gateway updates by sending structured requests and processing specific error conditions. Operates with context objects, input records containing gateway details, and output records with updated information. Manages conflicts and missing resources through explicit exception handling.",
      "description_length": 304,
      "index": 936,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects, input structures containing resource ARNs and tag keys, and produces output or specific error types including resource not found. Used to programmatically remove tags from AWS resources like EC2 instances or S3 buckets.",
      "description_length": 352,
      "index": 937,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.TestHypervisorConfiguration",
      "description": "Handles configuration validation requests for test hypervisors, processing input structures and returning structured outputs or specific error types. Operates on context objects and custom input/output records tied to hypervisor setup. Used to verify compliance with predefined configuration rules before deployment.",
      "description_length": 316,
      "index": 938,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.TagResource",
      "description": "Handles AWS resource tagging requests by sending a structured input containing resource ARNs and tags. Processes inputs with specific types like `tag_resource_input` and returns outputs with `tag_resource_output` or error variants including AWS JSON errors and resource not found exceptions. Used to programmatically apply tags to AWS resources such as EC2 instances or S3 buckets.",
      "description_length": 381,
      "index": 939,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.StartVirtualMachinesMetadataSync",
      "description": "Processes requests to start virtual machines with metadata synchronization, handling input parameters and returning structured outputs. It operates with context objects, input records containing configuration details, and output records with synchronization results. Used to initiate VM startups while ensuring metadata is properly synced and errors are explicitly reported.",
      "description_length": 374,
      "index": 940,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.PutMaintenanceStartTime",
      "description": "Handles the initiation of maintenance periods by accepting a context and input parameters, returning a result that includes either a success response or specific error conditions. Operates with context objects, input records containing maintenance start details, and output records with confirmation data. Used to schedule maintenance windows in system management workflows, ensuring proper tracking and error handling.",
      "description_length": 419,
      "index": 941,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.PutHypervisorPropertyMappings",
      "description": "Handles the transmission of hypervisor property mappings by converting input parameters into a structured API request. Operates on custom input and output types representing hypervisor configuration data. Used to update or establish property mappings in cloud infrastructure systems.",
      "description_length": 283,
      "index": 942,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.PutBandwidthRateLimitSchedule",
      "description": "Handles AWS PutBandwidthRateLimitSchedule API requests by applying a specified bandwidth rate limit schedule to an account. Accepts context and input parameters, returning a result that includes either the output or specific error types like AWS JSON errors or resource not found exceptions. Used to manage and enforce bandwidth constraints in cloud infrastructure configurations.",
      "description_length": 380,
      "index": 943,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListVirtualMachines",
      "description": "Requests a list of virtual machines from an AWS service, using a context and input parameters. It processes and returns a structured output containing machine details, including identifiers and states. The module handles AWS JSON responses and error cases specific to virtual machine listings.",
      "description_length": 293,
      "index": 944,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on input and output records defined by the AWS JSON protocol, including error types specific to resource tagging. Used to fetch metadata tags for resources like S3 buckets or EC2 instances within AWS infrastructure.",
      "description_length": 303,
      "index": 945,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListHypervisors",
      "description": "Handles AWS EC2 request to list hypervisors, accepting context and input parameters, returning a result with output or error. Operates on AWS context, input records, and structured output types. Used to retrieve hypervisor information from EC2 for monitoring or management tasks.",
      "description_length": 279,
      "index": 946,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListGateways",
      "description": "Handles AWS API requests to retrieve gateway information, processing input parameters and returning structured outputs. Operates with context objects and custom input/output types specific to the Smaws_Lib framework. Used to fetch and format network gateway details from cloud infrastructure services.",
      "description_length": 301,
      "index": 947,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ImportHypervisorConfiguration",
      "description": "Processes hypervisor configuration imports by validating input parameters and initiating the import workflow. Accepts context and configuration input, returning structured output or specific error types. Handles access control checks and conflict resolution during the import process.",
      "description_length": 284,
      "index": 948,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetVirtualMachine",
      "description": "Handles AWS EC2 virtual machine retrieval by sending a JSON-based request with context and input parameters. Operates on context objects, input records, and output structures specific to EC2 virtual machine data. Used to fetch detailed information about a virtual machine when its identifier and configuration are known.",
      "description_length": 320,
      "index": 949,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetHypervisorPropertyMappings",
      "description": "Requests a mapping of hypervisor properties from a remote service, using a context and input parameters. It processes structured input and returns a result containing property mappings or specific error types. Used to retrieve and translate hypervisor metadata for integration with cloud management systems.",
      "description_length": 307,
      "index": 950,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetHypervisor",
      "description": "Handles AWS API requests to retrieve hypervisor information, using a context and input structure to produce a result containing hypervisor details or specific error types. Operates with custom input and output records derived from AWS JSON protocols. Used to fetch hypervisor data in cloud management workflows where resource existence must be verified.",
      "description_length": 353,
      "index": 951,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetGateway",
      "description": "Handles AWS API requests to retrieve gateway information using a context and input parameters. Operates with custom types for context, input, and output, along with specific error variants. Used to fetch gateway details in cloud infrastructure workflows where resource existence must be verified.",
      "description_length": 296,
      "index": 952,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetBandwidthRateLimitSchedule",
      "description": "Handles AWS API requests to retrieve a bandwidth rate limit schedule, processing input parameters and returning structured output or specific error types. Operates with context objects, input records containing resource identifiers, and output records with schedule configurations. Used to fetch and validate rate limit schedules for managed resources in cloud infrastructure workflows.",
      "description_length": 386,
      "index": 953,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.DisassociateGatewayFromServer",
      "description": "Handles the removal of a gateway from a server by sending a structured request with specific input parameters. Operates on types such as `disassociate_gateway_from_server_input` and `disassociate_gateway_from_server_output`, along with AWS-specific error types. Used to manage network configurations in cloud infrastructure setups where gateway-server associations need to be dynamically adjusted.",
      "description_length": 397,
      "index": 954,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.DeleteHypervisor",
      "description": "Handles deletion requests for hypervisor resources by validating input and initiating the removal process. Operates on structured input containing hypervisor identifiers and returns outcomes with detailed error states. Used to safely remove hypervisor entries from a managed infrastructure system.",
      "description_length": 297,
      "index": 955,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.DeleteGateway",
      "description": "Handles AWS EC2 gateway deletion by sending a JSON-based request with context and input parameters. Operates on context objects, input records, and output structures specific to AWS API interactions. Used to remove a specified gateway and manage errors such as missing resources during the deletion process.",
      "description_length": 307,
      "index": 956,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.CreateGateway",
      "description": "Handles AWS JSON protocol requests for gateway creation, processing input structures and returning structured outputs or specific error types. Operates on context objects and custom input/output records defined in the Smaws_Lib module. Used to initiate gateway setup in cloud infrastructure workflows.",
      "description_length": 301,
      "index": 957,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.AssociateGatewayToServer",
      "description": "Handles the creation of a association between a network gateway and a server instance. Operates on context data and input structures specific to gateway-server relationships. Used to establish connectivity in cloud infrastructure setups.",
      "description_length": 237,
      "index": 958,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateEventBus",
      "description": "Handles request submission to an event bus, processing updates with specific error handling for AWS-related exceptions. Operates on context objects and structured request/response types tied to event bus operations. Used to manage asynchronous event delivery and ensure proper error propagation in distributed systems.",
      "description_length": 318,
      "index": 959,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateEndpoint",
      "description": "Handles AWS IoT Core update endpoint requests, processing context and configuration to modify endpoint settings. Operates with AWS JSON protocol types and specific exception types for error handling. Used to adjust endpoint configurations in real-time while managing concurrency and resource validation.",
      "description_length": 303,
      "index": 960,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateConnection",
      "description": "Handles AWS IoT device connection updates by sending a request and returning a result that includes either a response or specific error conditions. Operates with context objects and custom exception types derived from AWS JSON protocol responses. Used to manage device connection state changes in IoT systems while handling concurrency and resource constraints.",
      "description_length": 361,
      "index": 961,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateArchive",
      "description": "Handles AWS CloudWatch Events archive updates by sending requests and managing specific error conditions. Operates with context objects and structured request/response types tied to AWS JSON protocols. Processes scenarios like concurrent modifications, invalid patterns, and resource not found errors during archive updates.",
      "description_length": 324,
      "index": 962,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateApiDestination",
      "description": "Handles API destination updates by sending a request with context and a specific request structure, returning a response or one of several typed errors. Operates on `Smaws_Lib.Context.t` and custom request/response types tied to AWS API operations. Used to modify event destination configurations in a controlled, error-aware manner.",
      "description_length": 333,
      "index": 963,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the service, processing responses, and returning specific error types such as resource not found, concurrent modification, or internal exceptions. Operates with context data, untagging requests, and structured responses. Used to remove tags from AWS resources like EC2 instances or S3 buckets in a controlled, error-aware manner.",
      "description_length": 399,
      "index": 964,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.TestEventPattern",
      "description": "Handles AWS event pattern validation by processing a context and a request, returning a structured response or specific error types. Operates on context objects, event pattern requests, and custom error variants. Used to validate event patterns in AWS Lambda event sources, ensuring they conform to expected formats.",
      "description_length": 316,
      "index": 965,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.TagResource",
      "description": "Handles AWS resource tagging by sending requests to associate tags with specific resources. Operates on context objects and structured request/response types related to resource tagging. Processes errors such as concurrent modifications, internal failures, and missing resources.",
      "description_length": 279,
      "index": 966,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.StartReplay",
      "description": "Handles AWS CloudWatch Events start replay operations by processing a request and returning a response or specific error types. It works with context objects and structured event data to initiate replay processes. Used to restore event streams from a specified timestamp to the current time.",
      "description_length": 291,
      "index": 967,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.RemoveTargets",
      "description": "Removes specified targets from a rule based on a context and request structure. It processes custom exception types and AWS JSON error responses to handle validation and system-level failures. The module is used in scenarios where rule configurations need to be dynamically adjusted without disrupting ongoing operations.",
      "description_length": 321,
      "index": 968,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.RemovePermission",
      "description": "Handles permission removal requests by interacting with AWS services, validating context, and returning specific error types. Operates on custom request types and AWS error variants, ensuring precise exception handling. Used to enforce access control changes in distributed systems with strict concurrency guarantees.",
      "description_length": 317,
      "index": 969,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutTargets",
      "description": "Handles AWS CloudWatch Events target management by sending configuration updates to specified rules. Operates on rule names, target IDs, and event patterns. Used to add, update, or remove targets associated with specific event rules.",
      "description_length": 233,
      "index": 970,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutRule",
      "description": "Handles AWS EventBridge put rule operations by validating and sending rule configurations, processing responses, and managing specific error conditions such as concurrent modifications, invalid patterns, and resource not found. Works with context objects, rule request structures, and detailed error types defined in the AWS JSON protocol. Used to programmatically define or update event rules in distributed systems with precise error handling.",
      "description_length": 445,
      "index": 971,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutPermission",
      "description": "Handles permission requests for resource access, supporting operations like granting or revoking access rights. Works with context objects and structured permission requests. Used to manage access control policies in distributed systems with explicit error handling for common failure scenarios.",
      "description_length": 295,
      "index": 972,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutPartnerEvents",
      "description": "Handles AWS Partner Events API requests by sending event data and processing responses. Operates on context objects, event request structures, and custom error types specific to the AWS Partner Events service. Used to integrate external system events into AWS event processing pipelines.",
      "description_length": 287,
      "index": 973,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutEvents",
      "description": "Handles AWS CloudWatch Events put operations by sending event data and processing responses. Accepts context and event payloads, returning structured results or specific error types. Used to batch submit events to monitoring systems with precise error handling.",
      "description_length": 261,
      "index": 974,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListTargetsByRule",
      "description": "Processes a request to list targets associated with a specific rule, returning a structured response or specific error types. Operates on context data and custom request/response types derived from AWS JSON protocols. Used to retrieve target information for rule-based event routing in distributed systems.",
      "description_length": 306,
      "index": 975,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListTagsForResource",
      "description": "Handles AWS service requests to retrieve tags associated with a specific resource. Operates on structured request and response types defined for the ListTagsForResource operation. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 259,
      "index": 976,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListRules",
      "description": "Handles AWS API requests to list rules, including error handling for specific exceptions. Operates on context objects and custom request/response types derived from AWS JSON protocols. Processes inputs to retrieve rule sets from AWS services, managing internal and resource-related errors.",
      "description_length": 289,
      "index": 977,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListRuleNamesByTarget",
      "description": "Processes AWS IoT Greengrass list rule names by target requests, handling specific error types including internal and resource not found exceptions. Operates on context objects and structured request/response types from the Smaws_Lib library. Used to retrieve rule names associated with a specific target in an IoT deployment.",
      "description_length": 326,
      "index": 978,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListReplays",
      "description": "Handles AWS JSON-based requests to retrieve replay lists, processing context and custom request types to generate structured responses. Operates with `Smaws_Lib.Context.t` and domain-specific request/response records. Used to fetch historical data from a service endpoint under defined error conditions.",
      "description_length": 303,
      "index": 979,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListPartnerEventSources",
      "description": "Handles AWS Partner Event Source requests by validating context and processing structured input to retrieve event source listings. Operates on AWS context objects and custom request/response types specific to partner event management. Used to fetch and manage event source configurations in integrated partner systems.",
      "description_length": 318,
      "index": 980,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListPartnerEventSourceAccounts",
      "description": "Handles AWS Partner Event Source account requests by fetching configured accounts using a context and a specific request structure. Operates on AWS JSON protocol errors and custom exception types derived from AWS service responses. Used to retrieve account information for event source partnerships in cloud infrastructure management workflows.",
      "description_length": 344,
      "index": 981,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListEventSources",
      "description": "Handles AWS event source requests by converting context and request data into a structured response. Processes specific AWS protocol types and error conditions during event source enumeration. Used to retrieve configured event sources in a managed AWS environment.",
      "description_length": 264,
      "index": 982,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListEventBuses",
      "description": "Handles AWS IoT Events list event buses operation, accepting a context and request structure to retrieve event bus configurations. Processes data types including context information and request parameters specific to AWS IoT Events. Used to enumerate configured event buses for monitoring or management purposes.",
      "description_length": 312,
      "index": 983,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListEndpoints",
      "description": "Handles AWS API requests to retrieve endpoint information, processing raw JSON responses into structured data. Operates on context objects and custom request/response types specific to the Smaws_Lib framework. Used to fetch available service endpoints for dynamic API routing and configuration.",
      "description_length": 294,
      "index": 984,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListConnections",
      "description": "Handles AWS service connection requests by validating context and processing structured input, returning detailed responses or specific error types. Operates with custom request and response records derived from AWS JSON protocols. Used to retrieve active service connections in a managed cloud environment.",
      "description_length": 307,
      "index": 985,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListArchives",
      "description": "Handles AWS S3 list archives requests, processing context and returning a structured response with archive listings or specific error types. Operates on S3 archive data structures and AWS protocol errors. Used to retrieve and manage archive metadata from S3 buckets.",
      "description_length": 266,
      "index": 986,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListApiDestinations",
      "description": "Handles AWS API Gateway destination requests by sending a structured request and returning a response or specific error types. Operates with context objects, request records, and response structures tailored for API Gateway destinations. Used to retrieve configured destinations in an API Gateway setup, supporting error handling for internal and protocol-specific issues.",
      "description_length": 372,
      "index": 987,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.EnableRule",
      "description": "Handles the submission of an enable rule request, validating context and returning specific error types related to AWS Rule Management. Operates with context objects and structured error types from AWS JSON protocols. Used to manage rule activation in systems requiring precise error handling and context-aware operations.",
      "description_length": 322,
      "index": 988,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DisableRule",
      "description": "Handles the request to disable a rule by interacting with the context, validating inputs, and returning specific error types. Operates with custom exception types and a request structure tied to rule management. Used to enforce controlled rule deactivation in system workflows.",
      "description_length": 277,
      "index": 989,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeRule",
      "description": "Handles AWS EC2 describe rule requests by processing context and input, returning structured responses or specific error types. Operates with context objects, request records, and custom error variants. Used to retrieve detailed rule information from EC2, supporting error handling for missing resources and internal failures.",
      "description_length": 326,
      "index": 990,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeReplay",
      "description": "Handles AWS DescribeReplay API requests by processing context and request data, returning structured responses or specific error types. Operates with AWS context objects, custom request records, and detailed response structures. Used to retrieve metadata about replay operations in distributed systems.",
      "description_length": 302,
      "index": 991,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribePartnerEventSource",
      "description": "Handles AWS EventBridge partner event source description by sending a structured request and returning a typed response. Operates with context, request, and response records specific to AWS JSON protocols. Used to retrieve detailed information about a partner event source in an AWS environment.",
      "description_length": 295,
      "index": 992,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeEventSource",
      "description": "Handles AWS event source description requests by validating context and processing specific request types, returning structured responses or detailed error variants. Operates with context objects, custom request records, and response types tailored to AWS event source metadata. Used to fetch configuration details for event sources in distributed systems, ensuring precise error handling for service-specific exceptions.",
      "description_length": 421,
      "index": 993,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeEventBus",
      "description": "Handles AWS EventBridge describe event bus requests, parsing context and returning structured responses or specific error types. Operates with custom request and response records, along with AWS-specific error variants. Used to retrieve detailed information about a specific event bus configuration in an AWS environment.",
      "description_length": 321,
      "index": 994,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeEndpoint",
      "description": "Handles AWS EC2 describe-endpoint requests by validating context and parsing input, returning structured responses or specific error types. Operates on custom request and response records derived from AWS JSON protocols. Used to retrieve detailed information about endpoint configurations in cloud infrastructure workflows.",
      "description_length": 323,
      "index": 995,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeConnection",
      "description": "Handles AWS EC2 describe connection requests, parsing and validating input parameters for EC2 instances and VPCs. Processes responses containing detailed connection states and error conditions specific to AWS infrastructure. Integrates with AWS JSON protocol handlers to manage low-level communication and error mapping.",
      "description_length": 320,
      "index": 996,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeArchive",
      "description": "Handles AWS Glacier archive description requests, processing context and returning detailed archive metadata. Operates with AWS JSON protocol errors and specific exception types. Used to retrieve information about archived data objects in a Glacier vault.",
      "description_length": 255,
      "index": 997,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeApiDestination",
      "description": "Handles AWS API destination description requests by processing context and request parameters, returning structured responses or specific error types. Operates with AWS context objects, request records, and custom error variants. Used to retrieve detailed information about API destinations in AWS EventBridge.",
      "description_length": 310,
      "index": 998,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteRule",
      "description": "Handles deletion requests for rules by validating context and processing specific error conditions. Operates on context objects and custom exception types derived from AWS JSON protocols. Used to safely remove rules while managing concurrency and resource availability checks.",
      "description_length": 276,
      "index": 999,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeletePartnerEventSource",
      "description": "Handles the deletion of an event source associated with a partner by sending a structured request. Operates on types such as `delete_partner_event_source_request`, `concurrent_modification_exception`, and `internal_exception`. Used to safely remove event sources in AWS CloudWatch Events, ensuring proper error handling for conflicts and service issues.",
      "description_length": 353,
      "index": 1000,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteEventBus",
      "description": "Handles deletion requests for event buses by validating context and processing specific error conditions such as concurrent modifications and internal failures. Operates on custom request types and error variants defined in the AWS JSON protocol. Used to safely remove event buses in distributed systems while managing conflict and service errors.",
      "description_length": 347,
      "index": 1001,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteEndpoint",
      "description": "Handles AWS API requests to remove endpoints, processing context and custom request types. Operates with AWS JSON protocol errors and specific exception types like concurrent modification and resource not found. Used to manage endpoint deletion in distributed systems with error handling for concurrent access and missing resources.",
      "description_length": 332,
      "index": 1002,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteConnection",
      "description": "Handles deletion requests for connections by validating context and processing specific error conditions. Operates on custom request and response types, along with AWS JSON error variants. Used to safely remove resources while managing exceptions like concurrent modifications or missing items.",
      "description_length": 294,
      "index": 1003,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteArchive",
      "description": "Handles archive deletion requests by interacting with AWS S3 Glacier, processing specific request and response structures, and returning detailed error outcomes including concurrency and resource issues. Works with context objects, delete archive requests, and structured responses. Used to manage archive removal in backup systems where error handling for service-specific exceptions is critical.",
      "description_length": 397,
      "index": 1004,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteApiDestination",
      "description": "Handles deletion requests for API destinations by validating context and processing specific request structures. Operates on AWS JSON protocol errors and custom exception types related to resource management. Used to safely remove configured API endpoints while handling concurrency and resource existence checks.",
      "description_length": 313,
      "index": 1005,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeauthorizeConnection",
      "description": "Handles the deauthorization of a connection by sending a request to remove access permissions. Operates on context objects and specific request/response types related to connection management. Used to cleanly terminate active sessions in distributed systems.",
      "description_length": 258,
      "index": 1006,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeactivateEventSource",
      "description": "Handles the deactivation of an event source by sending a request with context and a specific request structure. It operates on `Smaws_Lib.Context.t` and custom request types, returning results with detailed error variants. Used to manage event source state in AWS-based systems, ensuring proper handling of exceptions during deactivation.",
      "description_length": 338,
      "index": 1007,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreatePartnerEventSource",
      "description": "Handles the creation of a partner event source by sending a request to the AWS EventBridge service. Operates on context objects and specific request/response types defined in the Smaws_Lib library. Returns detailed error outcomes for scenarios such as concurrent modifications, internal failures, and resource conflicts.",
      "description_length": 320,
      "index": 1008,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateEventBus",
      "description": "Handles creation of event buses by sending requests with context, returning responses or specific error types such as concurrent modification, resource already exists, or invalid state. Operates on context objects and structured request/response types defined in the Smaws_Lib framework. Used to manage event bus provisioning in distributed systems with precise error handling for AWS-compatible services.",
      "description_length": 405,
      "index": 1009,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateEndpoint",
      "description": "Handles AWS API requests for creating endpoints, processing structured input and returning typed responses. Operates with context objects and custom request/response records specific to the service. Used to initialize new API endpoints with validation and error handling for service-specific exceptions.",
      "description_length": 303,
      "index": 1010,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateConnection",
      "description": "Handles connection establishment by sending a structured request and returning a typed response, incorporating specific error variants for AWS protocol interactions. Operates with context objects, custom request, and response records defined in the Smaws_Lib module. Used to initiate network connections with precise error handling for service-specific exceptions.",
      "description_length": 364,
      "index": 1011,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateArchive",
      "description": "Handles the creation of archives by sending a structured request and returning a typed response. Operates with context data, custom request records, and detailed error types specific to archive operations. Used to manage event archive setup in systems requiring precise error handling and resource validation.",
      "description_length": 309,
      "index": 1012,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateApiDestination",
      "description": "Handles HTTP requests to create an API destination by validating input parameters and interacting with AWS services. Operates on custom request and response types specific to the API creation process. Used to register new endpoints in a messaging system, ensuring proper error handling for duplicate or invalid configurations.",
      "description_length": 326,
      "index": 1013,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.CancelReplay",
      "description": "Handles cancellation of replay operations by sending a request to the service, returning a response or specific error types. Operates with context data and custom request/response types tied to the cancellation process. Used to manage state transitions in event-driven systems where replay sessions must be terminated abruptly.",
      "description_length": 327,
      "index": 1014,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ActivateEventSource",
      "description": "Handles the initiation of event sources by sending a structured request, validating context, and managing specific error outcomes such as concurrent modifications, invalid states, and resource not found conditions. Operates with context objects and custom exception types derived from AWS JSON protocol responses. Used to trigger event source activation in distributed systems with strict error handling for operational constraints.",
      "description_length": 432,
      "index": 1015,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateUser",
      "description": "Handles user attribute updates by sending a request to the service, processing the response, and managing specific error conditions. Works with context data, update request payloads, and structured error types from the AWS JSON protocol. Used to modify user details in a directory service while handling authentication, entity, and organization-related exceptions.",
      "description_length": 364,
      "index": 1016,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateResource",
      "description": "Handles AWS JSON-based resource updates by sending requests and returning structured responses. Operates on context objects and custom exception types specific to AWS service interactions. Used to manage user or domain configuration changes in a directory service, validating inputs and handling service-specific error conditions.",
      "description_length": 330,
      "index": 1017,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdatePrimaryEmailAddress",
      "description": "Handles the request to update a user's primary email address, returning a result that includes either a response or specific exception types related to directory services, email validation, and entity states. Operates on context objects and structured request/response types specific to AWS services. Used in scenarios where user email verification and directory synchronization are required, such as during user profile updates in enterprise systems.",
      "description_length": 451,
      "index": 1018,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateMobileDeviceAccessRule",
      "description": "Handles the submission of a request to update a mobile device access rule, returning a result that includes either the response or specific error conditions. Operates with context data, request payloads, and structured error types related to AWS services. Used in scenarios where access policies for mobile devices need to be dynamically adjusted within an organization's framework.",
      "description_length": 382,
      "index": 1019,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateMailboxQuota",
      "description": "Handles quota updates for mailboxes by processing requests and returning structured responses. Operates with context objects, request records, and custom exception types related to entity and organization states. Used to enforce and apply mailbox quota changes within an email service infrastructure.",
      "description_length": 300,
      "index": 1020,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateImpersonationRole",
      "description": "Handles the request to update an impersonation role within an AWS context, processing specific request and response types tied to role management. It operates with context objects and custom exception types to manage errors during role updates. Used in scenarios where administrative access needs to be dynamically adjusted within an organization's structure.",
      "description_length": 359,
      "index": 1021,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateGroup",
      "description": "Handles AWS JSON-based requests to update group configurations, including validation and error handling for specific exception types. Operates on context objects and structured request/response data tied to AWS service operations. Used to manage group state transitions within an organization's resource hierarchy.",
      "description_length": 314,
      "index": 1022,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateDefaultMailDomain",
      "description": "Handles the request to update a mail domain's default setting, processing context and specific request data. Operates on custom record types for requests and responses, along with error variants for domain and organization-related issues. Used to modify mail domain configurations within an organization's account.",
      "description_length": 314,
      "index": 1023,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateAvailabilityConfiguration",
      "description": "Handles AWS UpdateAvailabilityConfiguration requests by validating and applying configuration changes to specified resources. Operates on context objects and structured request/response types specific to AWS services. Processes exceptions related to invalid parameters, missing organizations, or non-existent resources.",
      "description_length": 319,
      "index": 1024,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to remove tags from specified resources. Operates on context objects and custom request/response types specific to AWS operations. Used to programmatically manage resource tags in cloud infrastructure workflows.",
      "description_length": 278,
      "index": 1025,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.TestAvailabilityConfiguration",
      "description": "Handles AWS test availability configuration requests by validating context and parameters, returning structured responses or specific error types. Operates with context objects, request records, and custom error variants. Used to check resource availability within an organization's configuration before executing actions.",
      "description_length": 322,
      "index": 1026,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.TagResource",
      "description": "Handles AWS tag resource requests by sending structured JSON payloads and parsing responses. Operates with context objects, request records, and custom exception types specific to AWS tagging operations. Used to associate tags with AWS resources in scenarios requiring programmatic metadata management.",
      "description_length": 302,
      "index": 1027,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.StartMailboxExportJob",
      "description": "Handles the initiation of a mailbox export job by sending a structured request and returning a typed response. Operates with context objects, request records, and custom error types specific to AWS Mailbox export operations. Used to trigger exports in compliance and data management workflows.",
      "description_length": 293,
      "index": 1028,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ResetPassword",
      "description": "Handles password reset requests by validating user input, checking directory service authentication, and managing state transitions. Operates on custom request and response types, including error variants for directory and organization-related failures. Used to process user-initiated password resets in a secure, state-aware manner.",
      "description_length": 333,
      "index": 1029,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.RegisterToWorkMail",
      "description": "Handles AWS Directory Service requests to register an entity to WorkMail, including error handling for specific exceptions like email address conflicts and directory unavailability. Operates on context objects and structured request/response types defined in Smaws_Lib. Used to manage user or group registration in AWS WorkMail environments with precise error feedback.",
      "description_length": 369,
      "index": 1030,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.RegisterMailDomain",
      "description": "Handles domain registration requests for email services, processing parameters and returning structured responses or specific error conditions. Operates with context objects, request records, and response structures tailored to email domain validation and registration. Used to enforce domain uniqueness, check organization status, and manage registration limits during email service setup.",
      "description_length": 390,
      "index": 1031,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutRetentionPolicy",
      "description": "Handles AWS S3 put retention policy requests, processing parameters and returning responses or specific error types. Operates with context objects and structured request/response types from the S3 service. Used to enforce legal hold or governance retention policies on S3 buckets.",
      "description_length": 280,
      "index": 1032,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutMobileDeviceAccessOverride",
      "description": "Handles the submission of a request to override access settings for a mobile device, processing the provided parameters and returning the corresponding response or specific error conditions. Operates with context data, request structures, and a range of custom exception types. Used in scenarios where administrative access control needs to be temporarily modified for device management purposes.",
      "description_length": 396,
      "index": 1033,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutMailboxPermissions",
      "description": "Handles permission updates for mailboxes by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types tied to mailbox access control. Used to enforce access policies in email service workflows.",
      "description_length": 276,
      "index": 1034,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutInboundDmarcSettings",
      "description": "Handles AWS SESv2 inbound DMARC settings updates by sending a structured request and returning a response or specific error types. Operates with context, request, and response records tailored to the AWS SESv2 API. Used to configure DMARC policies for email domains within an AWS organization.",
      "description_length": 293,
      "index": 1035,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutEmailMonitoringConfiguration",
      "description": "Handles AWS SESV2 PutEmailMonitoringConfiguration requests, processing parameters and returning structured responses. Operates with context objects, request records, and custom exception types specific to AWS SESV2. Used to update email monitoring settings for an organization within an AWS account.",
      "description_length": 299,
      "index": 1036,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutAccessControlRule",
      "description": "Handles AWS S3 bucket policy modifications by applying a specified access control rule. Operates on context objects and structured request/response types related to S3 access controls. Processes scenarios such as invalid parameters, resource not found, and organization state issues during policy updates.",
      "description_length": 305,
      "index": 1037,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListUsers",
      "description": "Handles user listing requests by interacting with AWS services, processing context and request parameters to return user data or specific error conditions. Operates with AWS context objects, request records, and custom error types derived from AWS JSON protocols. Used to fetch user lists from an organization's directory, validating context and handling exceptions like invalid parameters or missing organizations.",
      "description_length": 415,
      "index": 1038,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListTagsForResource",
      "description": "Handles AWS resource tag retrieval by accepting a context and request structure, returning tags or specific errors. Operates with AWS JSON protocol types and resource exception structures. Used to fetch associated tags for an S3 bucket or DynamoDB table during resource management workflows.",
      "description_length": 291,
      "index": 1039,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListResources",
      "description": "Handles AWS resource listing by sending structured requests and parsing JSON responses. Operates on context objects, request records, and custom error types specific to AWS service interactions. Used to retrieve and manage resource inventories within an organization's account structure.",
      "description_length": 287,
      "index": 1040,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListResourceDelegates",
      "description": "Handles AWS ListResourceDelegates API requests, processing context and request parameters to retrieve delegate information. Operates on AWS context objects and specific request/response types defined in Smaws_Lib. Used to fetch delegated administrators for an AWS organization within a given account.",
      "description_length": 300,
      "index": 1041,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListOrganizations",
      "description": "Handles AWS STS list organizations requests, processing context and parameters to retrieve organization details. Operates with AWS context objects and specific request/response types defined in the STS protocol. Used to fetch a list of AWS organizations associated with a given account.",
      "description_length": 286,
      "index": 1042,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMobileDeviceAccessRules",
      "description": "Handles AWS IAM access rule requests for mobile devices, processing context and parameters to retrieve or manage device access configurations. Operates on structured request and response types specific to AWS IAM policies. Used to enforce or audit mobile device compliance within an organization's security framework.",
      "description_length": 317,
      "index": 1043,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMobileDeviceAccessOverrides",
      "description": "Handles requests to retrieve mobile device access override configurations, processing AWS JSON formatted inputs and returning structured responses. Operates on custom request and response types specific to device access policies. Used to enforce or override device compliance rules within an organization's management system.",
      "description_length": 325,
      "index": 1044,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMailDomains",
      "description": "Processes AWS SES request to list mail domains, handling specific error cases. Operates on context and request records, producing a response with domain data. Used to retrieve domain configurations within an AWS organization.",
      "description_length": 225,
      "index": 1045,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMailboxPermissions",
      "description": "Handles permission requests for mailboxes by validating context and processing specific request structures, returning detailed responses or specific error types. Operates on custom request and response records, along with AWS-specific error variants. Used to enforce access control policies during mailbox-related operations.",
      "description_length": 325,
      "index": 1046,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMailboxExportJobs",
      "description": "Handles requests to list mailbox export jobs, processing AWS JSON responses and error conditions such as invalid parameters, missing organizations, or organization state issues. Operates on context objects and structured request/response types specific to AWS services. Used to retrieve and manage export job statuses within an organization's mailbox system.",
      "description_length": 358,
      "index": 1047,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListImpersonationRoles",
      "description": "Handles AWS STS operations to request a list of impersonation roles within an organization, accepting a context and request structure. Processes AWS JSON responses and specific error types including invalid parameters, missing organizations, and state issues. Used to retrieve role information for administrative or auditing purposes in cloud environments.",
      "description_length": 356,
      "index": 1048,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListGroupsForEntity",
      "description": "Handles AWS service requests to retrieve group memberships for a specific entity, processing and validating input parameters against defined error types. Operates on structured request and response types derived from AWS JSON protocols, including custom exception types for entity and organization states. Used to enforce access control policies by identifying group affiliations during user or resource authentication workflows.",
      "description_length": 429,
      "index": 1049,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListGroups",
      "description": "Handles AWS IAM group listing requests by validating context and parameters, then fetching group data from the service. Operates on AWS context objects and specific request/response types defined in the Smaws_Lib framework. Used to retrieve group information in scenarios requiring AWS IAM integration, such as user management systems or access control audits.",
      "description_length": 360,
      "index": 1050,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListGroupMembers",
      "description": "Handles AWS SSO ListGroupMembers API requests, processing context and parameters to retrieve group member lists. Operates with AWS JSON protocol types and error variants specific to SSO service exceptions. Used to fetch user and group memberships for access management systems.",
      "description_length": 277,
      "index": 1051,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListAvailabilityConfigurations",
      "description": "Handles AWS Organizations list availability configurations requests by fetching and processing responses. Operates on context objects and structured request/response types specific to AWS API interactions. Used to retrieve configuration details for AWS services across an organization's accounts.",
      "description_length": 296,
      "index": 1052,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListAliases",
      "description": "Handles AWS ListAliases API requests, processing context and request parameters to retrieve alias information. Operates on AWS context objects and specific request/response types defined in the Smaws_Lib module. Used to fetch a list of aliases associated with an AWS account or organization.",
      "description_length": 291,
      "index": 1053,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListAccessControlRules",
      "description": "Provides functions to handle requests for listing access control rules, including error handling for organization-related exceptions. Operates with context objects, request records, and response structures specific to AWS JSON protocols. Used to enforce access policies in distributed systems by validating and processing rule listings.",
      "description_length": 336,
      "index": 1054,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMobileDeviceAccessOverride",
      "description": "Handles the retrieval of mobile device access override settings by sending a structured request to an AWS service. Operates on context objects and specific request/response types defined in the Smaws_Lib module. Used to check or modify access policies for devices within an organization's managed environment.",
      "description_length": 309,
      "index": 1055,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMobileDeviceAccessEffect",
      "description": "Requests permission to access a mobile device through an AWS service, handling specific error conditions such as invalid parameters, missing organizations, or organization state issues. It operates with context objects and custom request/response types tied to mobile device access workflows. Used in scenarios where system administrators need to grant or revoke device access within an organized AWS environment.",
      "description_length": 413,
      "index": 1056,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMailDomain",
      "description": "Handles AWS SES request to retrieve a mail domain configuration, returning detailed response or specific error types. Operates with context, request, and response records defined in related modules. Used to fetch domain settings for email verification and configuration management.",
      "description_length": 281,
      "index": 1057,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMailboxDetails",
      "description": "Handles AWS Simple Email Service (SES) requests to retrieve mailbox details, processing parameters and returning structured responses. Operates with context objects, request records, and custom exception types specific to AWS SES. Used to fetch configuration and status information for email mailboxes within an organization.",
      "description_length": 325,
      "index": 1058,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetImpersonationRoleEffect",
      "description": "Handles AWS STS GetImpersonationRoleEffect requests by validating context, processing the request, and returning a structured response. Operates on custom exception types and AWS JSON protocol errors, along with specific request and response records. Used to retrieve role details under an assumed identity in a controlled access scenario.",
      "description_length": 339,
      "index": 1059,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetImpersonationRole",
      "description": "Handles AWS STS GetImpersonationRole requests by validating context and parameters, then returning role details or specific error types. Operates on AWS context objects and structured request/response types defined in Smaws_Lib. Used to retrieve assumed role credentials for delegated access in cloud environments.",
      "description_length": 314,
      "index": 1060,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetDefaultRetentionPolicy",
      "description": "Handles AWS S3 control API requests to retrieve the default retention policy for a bucket, returning structured responses or specific error types. Operates with context objects and custom request/response types defined in the S3 control protocol. Used to enforce compliance policies in data management workflows.",
      "description_length": 312,
      "index": 1061,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetAccessControlEffect",
      "description": "Handles AWS JSON protocol requests for retrieving access control effects, processing context and request data to produce structured responses. Operates with custom exception types and context objects specific to AWS service interactions. Used to enforce access policies by evaluating resource and organization states during API calls.",
      "description_length": 334,
      "index": 1062,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DisassociateMemberFromGroup",
      "description": "Handles the removal of a member from a group by sending a structured request and returning a response or specific exception types. Operates with context data, request objects, and custom exception types related to directory services and organization states. Used in scenarios where user-group membership needs to be dynamically adjusted with explicit error handling for service-specific failures.",
      "description_length": 396,
      "index": 1063,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DisassociateDelegateFromResource",
      "description": "Handles the removal of a delegate from a resource by sending a structured request and processing specific error conditions. Operates on AWS JSON protocol types and custom exception types related to resource delegation. Used to manage access control in organizational resource hierarchies when a delegate's permissions need to be revoked.",
      "description_length": 337,
      "index": 1064,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeUser",
      "description": "Handles user description requests by validating context and parameters, then fetching user data or returning specific error conditions. Operates with AWS JSON protocol types and custom exception types for error handling. Used to retrieve user details in a controlled, error-aware manner during API interactions.",
      "description_length": 311,
      "index": 1065,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeResource",
      "description": "Handles AWS DescribeResource requests by validating context, parsing input, and returning structured responses. Operates on custom request and response types, along with specific error variants for AWS service exceptions. Used to retrieve detailed information about resources in a controlled, error-aware manner.",
      "description_length": 312,
      "index": 1066,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeOrganization",
      "description": "Handles AWS Organizations describe operations by accepting a context and a request structure, returning detailed organizational information or specific error types. Works with AWS JSON protocol structures and custom exception types for invalid parameters or missing organizations. Used to retrieve precise details about an organization's configuration during cloud management workflows.",
      "description_length": 386,
      "index": 1067,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeMailboxExportJob",
      "description": "Handles the retrieval of detailed information about a specific mailbox export job. Operates on request and response types specific to AWS Simple Email Service (SES) and returns structured results with error handling for common SES exceptions. Used to monitor the status and outcome of ongoing or completed mailbox export operations.",
      "description_length": 332,
      "index": 1068,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeInboundDmarcSettings",
      "description": "Processes DMARC inbound settings requests by sending a structured API call and returning a parsed response. It operates with AWS context, request, and response records specific to the DMARC configuration. Used to retrieve current DMARC policies for an organization's email domain.",
      "description_length": 280,
      "index": 1069,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeGroup",
      "description": "Handles AWS SNS group description requests by validating context and parameters, then fetching group details from the service. Operates on custom request and response types specific to the SNS protocol. Used to retrieve detailed information about an SNS topic's subscription group during system diagnostics or user management workflows.",
      "description_length": 336,
      "index": 1070,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeEntity",
      "description": "Handles entity description requests by validating context and parameters, then fetching or constructing detailed entity responses. Operates on custom request and response types, along with specific exception types for error handling. Used to retrieve structured entity data in scenarios involving organizations and their members.",
      "description_length": 329,
      "index": 1071,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeEmailMonitoringConfiguration",
      "description": "Handles AWS SES email monitoring configuration retrieval by sending a structured request and returning detailed response data. Operates with context objects, request records, and custom error types specific to AWS SES. Used to fetch and validate email monitoring settings within an AWS organization.",
      "description_length": 299,
      "index": 1072,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeregisterMailDomain",
      "description": "Handles AWS SES domain deregistration by validating and processing requests, returning detailed responses or specific error conditions. Operates on context objects, domain configuration data, and error-specific types related to SES setup. Used to safely remove email domains from an organization's SES configuration when they are no longer needed.",
      "description_length": 347,
      "index": 1073,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeregisterFromWorkMail",
      "description": "Handles AWS WorkMail deregistration requests by validating context, processing input parameters, and returning structured responses or specific error types. Operates on AWS context objects and custom request/response types tied to WorkMail operations. Used to remove users or resources from an organization's WorkMail service with precise error handling for common AWS exceptions.",
      "description_length": 380,
      "index": 1074,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteUser",
      "description": "Handles user deletion requests by interacting with AWS services, returning detailed responses or specific exception types based on the outcome. Operates with context objects and structured request/response types defined in the Smaws_Lib module. Used to manage user lifecycle in directory services, ensuring proper error handling for directory and organizational constraints.",
      "description_length": 374,
      "index": 1075,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteRetentionPolicy",
      "description": "Handles AWS S3 delete retention policy requests, processing parameters and returning responses with specific error types. Operates on context objects and structured request/response types from the S3 service. Used to enforce compliance policies by removing retention settings from objects in a controlled manner.",
      "description_length": 312,
      "index": 1076,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteResource",
      "description": "Handles deletion requests for resources by validating context and parameters, then returning structured responses or specific error types. Operates on custom request and response types, along with AWS-specific error variants. Used to enforce deletion constraints and propagate detailed error information during resource management workflows.",
      "description_length": 341,
      "index": 1077,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteOrganization",
      "description": "Handles deletion requests for organizations by validating context, processing input parameters, and returning structured responses or specific error types. Operates with context objects, request records, and custom error variants derived from AWS JSON protocols. Used to manage organization lifecycle events with precise error handling for invalid inputs, missing entities, or state mismatches.",
      "description_length": 394,
      "index": 1078,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteMobileDeviceAccessRule",
      "description": "Handles the deletion of mobile device access rules by sending a structured request and returning a response or specific error types. Operates with context data, request objects, and custom error types related to AWS operations. Used to enforce compliance policies in organizational AWS environments.",
      "description_length": 299,
      "index": 1079,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteMobileDeviceAccessOverride",
      "description": "Handles the deletion of mobile device access overrides by validating context and request parameters, then executing the deletion operation. Works with context objects, request records, and response structures specific to AWS SSO. Used to remove access restrictions for devices within an organization's managed environment.",
      "description_length": 322,
      "index": 1080,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteMailboxPermissions",
      "description": "Handles deletion of permissions for a mailbox by sending a structured request and returning a result with specific error types. Operates on context data and custom request/response types tied to mailbox access control. Used to manage access rights in an email service's permission system.",
      "description_length": 288,
      "index": 1081,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteImpersonationRole",
      "description": "Handles the deletion of an impersonation role by validating context and request parameters, and returning structured responses or specific error types. Operates with AWS context objects and custom request/response types tied to role management. Used to enforce access control policies during role removal in organizational workflows.",
      "description_length": 333,
      "index": 1082,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteGroup",
      "description": "Handles deletion requests for user groups by validating context and parameters, then executing the operation with detailed error handling for directory and organizational constraints. Works with context objects, request records, and custom exception types specific to AWS directory services. Used to manage group lifecycle in directory-enabled applications, ensuring proper state transitions and error reporting.",
      "description_length": 412,
      "index": 1083,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteEmailMonitoringConfiguration",
      "description": "Handles AWS SESV2 delete email monitoring configuration requests, processing context and request data to return a response or specific error types. Operates with AWS JSON protocol structures, including error variants and exception types from the SESV2 service. Used to remove monitoring configurations from an AWS organization's email settings.",
      "description_length": 344,
      "index": 1084,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteAvailabilityConfiguration",
      "description": "Handles deletion requests for availability configurations by validating context and processing specific request types. Operates on custom request and response types tied to AWS JSON protocols, along with exception types for organizational state and not found scenarios. Used to enforce deletion constraints within AWS management workflows.",
      "description_length": 339,
      "index": 1085,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteAlias",
      "description": "Handles deletion requests for aliases by validating context, processing the request, and returning appropriate responses or specific error conditions. Works with context objects, delete alias request records, and structured error types derived from AWS JSON protocols. Used to manage alias removal in systems requiring strict validation and error reporting.",
      "description_length": 357,
      "index": 1086,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteAccessControlRule",
      "description": "Handles deletion of access control rules by sending a structured request and returning a result that includes either a response or specific error conditions such as an invalid organization state or a missing organization. Operates with context data, request payloads, and custom error types related to AWS organization configurations. Used to enforce policy changes in managed environments where access rules must be dynamically removed.",
      "description_length": 437,
      "index": 1087,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateUser",
      "description": "Handles user creation requests by validating input, checking name availability, and interacting with directory services. Processes structured data including user attributes and error-specific types from AWS JSON protocols. Used to enforce business rules during user onboarding and handle specific exceptions like password constraints and organization state checks.",
      "description_length": 364,
      "index": 1088,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateResource",
      "description": "Handles resource creation requests by validating input, checking name availability, and enforcing organizational constraints. Operates on context objects, request structures, and custom exception types specific to AWS directory services. Used to manage user or group resource provisioning with detailed error reporting for compliance and configuration issues.",
      "description_length": 359,
      "index": 1089,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateOrganization",
      "description": "Handles the creation of an AWS Directory Service organization by sending a structured request and returning a result that includes either a response with organization details or specific error conditions. Operates with context data, a custom request type, and a response type tailored to AWS Directory Service interactions. Used to validate and execute organization setup while handling exceptions like directory in use, name availability, and parameter limits.",
      "description_length": 461,
      "index": 1090,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateMobileDeviceAccessRule",
      "description": "Handles the creation of mobile device access rules by sending a structured request to an AWS service, processing responses, and managing specific error conditions. Operates with context objects, request records, and response structures tailored to AWS Mobile Device Management. Used to enforce access policies in enterprise mobile environments, ensuring compliance with organizational security configurations.",
      "description_length": 409,
      "index": 1091,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateImpersonationRole",
      "description": "Handles the creation of an impersonation role by validating input parameters, checking organizational constraints, and interacting with AWS services. Operates on context objects, request records, and various error types specific to AWS IAM. Used to securely grant temporary access permissions in controlled environments.",
      "description_length": 320,
      "index": 1092,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateGroup",
      "description": "Handles group creation requests by validating parameters, checking name availability, and interacting with directory services. Processes structured input containing group details and returns responses or specific AWS-related error types. Used in user management workflows to ensure compliance with organizational and naming constraints.",
      "description_length": 336,
      "index": 1093,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateAvailabilityConfiguration",
      "description": "Handles the creation of availability configurations by processing a request and returning a response or specific error types. Operates with context data, request objects, and structured error responses. Used to validate and register availability settings in a system, ensuring compliance with parameter and resource limits.",
      "description_length": 323,
      "index": 1094,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateAlias",
      "description": "Handles the creation of email aliases by sending a request to the AWS service, validating input parameters, and managing specific error conditions such as duplicate email addresses or invalid domains. Works with context objects, request structures, and custom exception types related to email and domain configurations. Used to enforce email alias policies and ensure compliance with AWS service constraints during user or resource setup.",
      "description_length": 438,
      "index": 1095,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.CancelMailboxExportJob",
      "description": "Handles the cancellation of a mailbox export job by sending a structured request and returning a result with specific error types. Operates with context objects and custom request/response types tied to AWS mailbox export operations. Used to terminate ongoing export processes in an organization's mail system.",
      "description_length": 310,
      "index": 1096,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.AssumeImpersonationRole",
      "description": "Handles the initiation of an impersonation role by sending a structured request to assume a specified role, validating context, and returning a response or specific error types. Operates with context objects, request records, and response structures tied to AWS IAM operations. Used to grant temporary credentials for actions performed on behalf of another account within an organization.",
      "description_length": 388,
      "index": 1097,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.AssociateMemberToGroup",
      "description": "Handles the initiation of associating a member with a group by sending a request and returning a result that includes either a response or specific exception types. Operates with context data, request structures, and various error types related to directory services and organization states. Used in scenarios where user-group membership validation and assignment need to be executed with detailed error reporting.",
      "description_length": 414,
      "index": 1098,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.AssociateDelegateToResource",
      "description": "Handles the process of associating a delegate with a resource by sending a structured request and returning a result that includes either a response or specific error conditions. Operates with context data, request objects, and response structures defined in the Smaws_Lib framework. Used to enforce access control policies in cloud resource management systems.",
      "description_length": 361,
      "index": 1099,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateWebACL",
      "description": "Handles AWS WAF web ACL updates by sending structured requests and processing responses with detailed error handling. Operates on context objects, update_web_acl_request records, and response structures specific to AWS WAF operations. Used to modify rule groups and conditions within a web ACL while managing exceptions like duplicate items, invalid parameters, and resource limits.",
      "description_length": 382,
      "index": 1100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateRuleGroup",
      "description": "Handles the submission of update requests for rule groups in a WAF system, processing inputs and returning structured responses or specific error types. Operates with context objects, request records, and detailed response structures tied to AWS WAF operations. Used to modify existing rule groups while validating configurations and handling exceptions like duplicate entries or invalid parameters.",
      "description_length": 399,
      "index": 1101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateRegexPatternSet",
      "description": "Handles the submission of a request to update a set of regex patterns in a WAF service, processing parameters and returning a response or specific error types. Operates with context data and structured request/response types defined in the Smaws_Lib module. Used to manage dynamic regex pattern updates in web application firewall configurations.",
      "description_length": 346,
      "index": 1102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateManagedRuleSetVersionExpiryDate",
      "description": "Updates the expiry date of a managed rule set version by sending a request to the AWS WAF service. It accepts a context and a request structure containing the rule set ID and new expiry date, and returns a response or specific AWS error types. This is used to manage the lifecycle of rule sets in AWS WAF configurations.",
      "description_length": 320,
      "index": 1103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateIPSet",
      "description": "Handles AWS WAF IP set updates by sending structured requests and processing detailed error responses. Operates with context objects and specific request/response types defined in the Smaws_Lib module. Used to dynamically manage IP restrictions in web application firewalls.",
      "description_length": 274,
      "index": 1104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UntagResource",
      "description": "Handles AWS WAF resource untagging by accepting a context and an untag resource request, returning a response or specific error types related to WAF operations. Operates on AWS context data and WAF-specific exception types. Used to remove tags from WAF resources in compliance with AWS API constraints and error handling requirements.",
      "description_length": 334,
      "index": 1105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.TagResource",
      "description": "Handles AWS WAF tag resource operations by sending requests and returning structured responses. Processes context, tag resource requests, and error-specific exceptions related to WAF tagging. Used to associate tags with WAF resources in AWS infrastructure.",
      "description_length": 256,
      "index": 1106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.PutPermissionPolicy",
      "description": "Handles AWS WAF put permission policy requests by validating and applying policy configurations to resources. Operates on context objects and specific request/response types tied to AWS WAF policy management. Used to update access controls for web ACLs with structured error handling for policy-related failures.",
      "description_length": 312,
      "index": 1107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.PutManagedRuleSetVersions",
      "description": "Handles AWS WAF rule set version updates by sending a request with a context and a structured input, returning a response or specific error types related to WAF operations. Operates on AWS context objects and custom request/response types for managing rule set versions. Used to apply changes to rule sets while handling exceptions like invalid operations or lock conflicts.",
      "description_length": 374,
      "index": 1108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.PutLoggingConfiguration",
      "description": "Handles the submission of logging configurations to AWS WAF, accepting context and a request structure to produce a response or specific error types. Operates with AWS context objects and WAF-specific request and response types. Used to configure logging destinations and manage permissions and validation errors during setup.",
      "description_length": 326,
      "index": 1109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListWebACLs",
      "description": "Provides operations to send a request and receive a response for listing Web ACLs in AWS WAF, handling specific error types such as invalid parameters, operations, and internal errors. Works with context objects, request structures, and response data specific to the WAF service. Used to retrieve a list of Web ACLs associated with a given AWS account and region.",
      "description_length": 363,
      "index": 1110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListTagsForResource",
      "description": "Provides functions to send a request and handle responses for listing tags associated with a resource, including error handling for specific WAF exceptions. Operates with context objects, request structures, and response data types defined in the Smaws_Lib library. Used to retrieve and manage tags for AWS resources within a WAF service context.",
      "description_length": 346,
      "index": 1111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListRuleGroups",
      "description": "Handles AWS WAF rule group listing by sending a structured request and returning a response with detailed rule group information. Operates on context objects and specific request/response types defined in the Smaws_Lib module. Used to retrieve and process rule groups for security policy management in AWS WAF.",
      "description_length": 310,
      "index": 1112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListResourcesForWebACL",
      "description": "Handles AWS WAF list-resources-for-web-acl requests by accepting a context and a request structure, returning a response or specific error types. Operates on AWS JSON protocol types and WAF exception structures. Used to retrieve associated resources for a WebACL in AWS WAF service interactions.",
      "description_length": 295,
      "index": 1113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListRegexPatternSets",
      "description": "Handles AWS WAF list regex pattern sets requests, processing context and returning structured responses. Operates with AWS context objects and specific error types defined in the protocol. Used to retrieve and manage regex pattern sets in WAF configurations.",
      "description_length": 258,
      "index": 1114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListMobileSdkReleases",
      "description": "Handles AWS WAF mobile SDK release data retrieval by sending a structured request and returning a typed response. Operates with context objects, request records, and custom exception types specific to AWS WAF. Used to fetch and process mobile SDK release information in compliance with WAF service constraints.",
      "description_length": 310,
      "index": 1115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListManagedRuleSets",
      "description": "Handles AWS WAF rule set listing by sending a request with context and parameters, returning a structured response or specific error types. Operates with AWS context objects and WAF exception types derived from JSON responses. Used to retrieve managed rule sets in a WAF-enabled environment for policy management.",
      "description_length": 313,
      "index": 1116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListLoggingConfigurations",
      "description": "Handles AWS WAF list logging configurations requests, returning detailed response data including logging configurations and error specifics. Operates with context objects and structured request/response types from the Smaws_Lib framework. Used to retrieve and inspect logging setup details for WAF resources in real-time operations.",
      "description_length": 332,
      "index": 1117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListIPSets",
      "description": "Provides functions to handle AWS WAF list IP sets operations, including requesting and processing responses. Works with context objects, request records, and custom exception types. Used to retrieve and manage IP set configurations in AWS WAF services.",
      "description_length": 252,
      "index": 1118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListAvailableManagedRuleGroups",
      "description": "Provides operations to send a request and receive a response for listing managed rule groups, handling specific AWS WAF exceptions. Works with context objects, request records, and response structures tailored for AWS WAF services. Used to retrieve available managed rule groups in a WAF-enabled environment.",
      "description_length": 308,
      "index": 1119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListAvailableManagedRuleGroupVersions",
      "description": "Handles AWS WAF requests to retrieve versions of managed rule groups, supporting error handling for specific WAF exceptions. Operates on context objects and structured request/response types defined in Smaws_Lib. Used to fetch available versions for rule groups in AWS WAF configurations.",
      "description_length": 288,
      "index": 1120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListAPIKeys",
      "description": "Handles AWS WAF API requests to list API keys, processing context and request parameters to return structured responses. Operates with AWS-specific types such as `list_api_keys_request` and `list_api_keys_response`, along with error types from the WAF service. Used to retrieve and validate API key configurations within AWS WAF resources.",
      "description_length": 339,
      "index": 1121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetWebACLForResource",
      "description": "Handles AWS WAF web ACL retrieval for resources by sending a structured request and returning detailed responses or specific error types. Operates with context objects and custom exception types derived from AWS error responses. Used to fetch and validate web ACL configurations in real-time security policy enforcement scenarios.",
      "description_length": 330,
      "index": 1122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetWebACL",
      "description": "Requests a Web ACL from AWS WAF, handling specific error types such as invalid parameters, non-existent items, and internal server errors. Operates on AWS context and custom request/response types for WAF operations. Used to retrieve and validate Web ACL configurations in real-time security policies.",
      "description_length": 301,
      "index": 1123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetSampledRequests",
      "description": "Handles AWS WAF sampling request operations, accepting a context and request parameters to retrieve sampled requests. Works with AWS context objects and specific request/response types defined in the WAF protocol. Used to inspect traffic patterns and validate WAF rule configurations in real-time.",
      "description_length": 297,
      "index": 1124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetRuleGroup",
      "description": "Handles AWS WAF rule group retrieval by sending a structured request and returning a typed response. Operates with context objects, custom exception types, and AWS JSON protocol errors. Used to fetch specific rule group configurations from AWS WAF service.",
      "description_length": 256,
      "index": 1125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetRegexPatternSet",
      "description": "Handles AWS WAF regex pattern set retrieval by sending a request with context and parameters, returning detailed response or specific error types. Operates on AWS context objects and custom request/response types tied to WAF operations. Used to fetch configured regex patterns for rule evaluation in web application firewall systems.",
      "description_length": 333,
      "index": 1126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetRateBasedStatementManagedKeys",
      "description": "Handles AWS WAF rate-based rule managed keys retrieval by sending a structured request and returning a typed response. Operates with context objects, custom exception types, and AWS JSON error formats. Used to fetch managed keys for rate-based rules in web application firewall configurations.",
      "description_length": 293,
      "index": 1127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetPermissionPolicy",
      "description": "Handles AWS WAF get permission policy requests by sending a structured request and returning a response or specific error types. Operates with context, request, and response records defined in related modules. Used to retrieve policy details for AWS WAF resources in a controlled, error-aware manner.",
      "description_length": 300,
      "index": 1128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetMobileSdkRelease",
      "description": "Handles AWS WAF API requests to retrieve mobile SDK release information. Operates on context objects and structured request/response types specific to the WAF service. Used to fetch SDK release details in systems integrating with AWS WAF for policy management.",
      "description_length": 260,
      "index": 1129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetManagedRuleSet",
      "description": "Handles AWS WAF managed rule set retrieval by sending a structured request and returning a typed response. Operates with context objects, request records, and custom exception types specific to AWS WAF errors. Used to fetch details of a managed rule set during policy evaluation or configuration validation.",
      "description_length": 307,
      "index": 1130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetLoggingConfiguration",
      "description": "Handles AWS WAF get logging configuration requests by accepting a context and a request structure, returning detailed response data or specific error types. Operates with AWS context objects and WAF-specific exception types. Used to retrieve logging settings for web access control lists in AWS WAF services.",
      "description_length": 308,
      "index": 1131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetIPSet",
      "description": "Requests a WAF IP set from AWS using a context and a request structure, handling specific error types related to WAF operations. Works with AWS context objects, custom request and response types, and WAF exception types. Used to retrieve IP set configurations for security policy enforcement.",
      "description_length": 292,
      "index": 1132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetDecryptedAPIKey",
      "description": "Handles API key decryption by sending a structured request to an AWS service, returning a response or specific error types related to WAF operations. Operates on context objects and custom request/response types defined in the Smaws_Lib module. Used to securely retrieve API keys in systems requiring WAF-compliant validation and error handling.",
      "description_length": 345,
      "index": 1133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GenerateMobileSdkReleaseUrl",
      "description": "Generates a pre-signed URL for accessing a mobile SDK release by accepting a context and a request structure. It handles AWS JSON protocol errors and specific WAF exceptions, returning a response with the generated URL. Used to securely grant temporary access to SDK artifacts in a controlled environment.",
      "description_length": 305,
      "index": 1134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.DisassociateWebACL",
      "description": "Handles the disassociation of a WebACL from a resource by sending a structured request and processing the response. Operates with AWS-specific data types such as `disassociate_web_acl_request` and `disassociate_web_acl_response`, along with error variants from the WAF service. Used to dynamically remove access control policies from resources in AWS WAF configurations.",
      "description_length": 370,
      "index": 1135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.DescribeManagedRuleGroup",
      "description": "Handles AWS WAFv2 describe-managed-rule-group requests by accepting a context and a request structure, then returning a response or specific error types. Operates with AWS context objects and structured request/response types from the WAFv2 API. Used to retrieve detailed information about a managed rule group in a WAF configuration.",
      "description_length": 334,
      "index": 1136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DescribeManagedProductsByVendor",
      "description": "Handles AWS WAFv2 API requests to describe managed products associated with a specific vendor. Operates on context objects and structured request/response types defined in Smaws_Lib. Used to retrieve vendor-specific product configurations in AWS WAF rule groups.",
      "description_length": 262,
      "index": 1137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DescribeAllManagedProducts",
      "description": "Handles AWS WAFv2 request to describe all managed rule groups, returning structured responses or specific error types. Operates with context and custom request/response types derived from AWS JSON protocols. Used to retrieve and validate managed product configurations in AWS WAFv2 environments.",
      "description_length": 295,
      "index": 1138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteWebACL",
      "description": "Handles the deletion of a Web ACL by sending a structured request and returning a typed response. Operates with AWS-specific data types such as `delete_web_acl_request` and `delete_web_acl_response`, along with custom exception types for WAF-related errors. Used to safely remove a Web ACL from a protected resource while handling potential validation and operational constraints.",
      "description_length": 380,
      "index": 1139,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteRuleGroup",
      "description": "Handles the deletion of a WAF rule group by sending a request with context and parameters, returning a result that includes specific error types related to WAF operations. Operates on AWS WAF data structures such as rule group identifiers and associated items. Used to safely remove rule groups while handling exceptions like invalid operations or concurrent modification errors.",
      "description_length": 379,
      "index": 1140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteRegexPatternSet",
      "description": "Deletes a specified regex pattern set from a WAF service, handling specific error conditions during the operation. Works with context objects and custom request/response types for AWS WAF interactions. Used to remove outdated or unused regex patterns in web application firewall configurations.",
      "description_length": 294,
      "index": 1141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeletePermissionPolicy",
      "description": "Handles the deletion of a WAF permission policy by sending a structured request and processing specific error responses. Operates with context data, request parameters, and custom exception types related to WAF policy operations. Used to remove policies from AWS resources while managing known error conditions during the deletion process.",
      "description_length": 339,
      "index": 1142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteLoggingConfiguration",
      "description": "Handles the deletion of logging configurations by sending a structured request and returning a response or specific error types. Operates with context objects and custom exception types derived from AWS WAF error definitions. Used to manage and remove logging settings in a controlled, error-aware manner during configuration updates.",
      "description_length": 334,
      "index": 1143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteIPSet",
      "description": "Deletes an IP set from a WAF service, handling specific error conditions such as invalid operations, missing items, and concurrency conflicts. Accepts a context and a request structure, returning a response or detailed error types. Used in managing web application firewall configurations to remove IP-based rules.",
      "description_length": 314,
      "index": 1144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteFirewallManagerRuleGroups",
      "description": "Handles the deletion of specified rule groups from a firewall manager by sending a structured request and processing the response. Operates with AWS WAF-related data types such as `delete_firewall_manager_rule_groups_request` and `delete_firewall_manager_rule_groups_response`, along with error types specific to WAF operations. Used to remove outdated or unused rule groups from a managed firewall configuration.",
      "description_length": 413,
      "index": 1145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteAPIKey",
      "description": "Handles the deletion of an API key by sending a structured request and processing specific AWS error responses. Operates with context data and custom exception types derived from AWS WAF error definitions. Used to enforce safe removal of API keys in systems requiring strict error handling and validation.",
      "description_length": 305,
      "index": 1146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateWebACL",
      "description": "Handles the creation of a Web ACL by sending a structured request and returning a response, with detailed error handling for AWS WAF-specific exceptions. Operates on context objects and custom request/response types specific to AWS WAF operations. Used to programmatically define and deploy web access control policies in AWS environments.",
      "description_length": 339,
      "index": 1147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateRuleGroup",
      "description": "Handles the creation of a WAF rule group by sending a request to the AWS WAF service, incorporating context and error handling for specific AWS exceptions. Operates on `Smaws_Lib.Context.t` and custom request/response types for WAF rule group operations. Used to programmatically define and deploy rule groups in AWS WAF with detailed error feedback.",
      "description_length": 350,
      "index": 1148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateRegexPatternSet",
      "description": "Handles the creation of a regex pattern set by sending a request with specific parameters, including name, regex pattern list, and capacity. Operates on types such as `create_regex_pattern_set_request` and `create_regex_pattern_set_response`, along with AWS-specific error types. Used to configure regex-based rules in AWS WAF for traffic filtering.",
      "description_length": 349,
      "index": 1149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateIPSet",
      "description": "Handles AWS WAFv2 IP set creation by sending a structured request and returning a typed result. Operates with context objects, request records, and detailed response types including error variants specific to WAF operations. Used to programmatically manage IP-based access control rules within AWS WAFv2 configurations.",
      "description_length": 319,
      "index": 1150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateAPIKey",
      "description": "Handles API key creation requests by sending a structured request to an AWS service, processing the response, and returning specific error types based on the service's output. Operates with context objects, request records, and response records defined in the Smaws_Lib module. Used to generate API keys while enforcing validation and error handling for WAF-specific exceptions.",
      "description_length": 378,
      "index": 1151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.CheckCapacity",
      "description": "Handles capacity checks for AWS WAF resources by validating requests and returning detailed responses. Processes context and custom request types, and returns results with specific error variants for WAF-related exceptions. Used to ensure operational validity before applying rules or managing resources in AWS WAF.",
      "description_length": 315,
      "index": 1152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.AssociateWebACL",
      "description": "Handles the association of a web ACL with a resource by sending a structured request and returning a typed response. Operates with context objects, custom request records, and specific error types defined in the WAF service. Used to enforce web access control policies on resources within an AWS environment.",
      "description_length": 308,
      "index": 1153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement.SearchAgreements",
      "description": "Handles AWS API requests for searching agreements, accepting context and input parameters to return structured outputs. Operates with custom exception types and AWS JSON protocol errors. Used to query agreement records in a governed data environment.",
      "description_length": 250,
      "index": 1154,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement.GetAgreementTerms",
      "description": "Handles AWS JSON-based requests to retrieve agreement terms, processing input parameters and returning structured output along with specific error variants. Operates with context objects, input records, and output records defined in related modules. Used to enforce access controls and validate requests before delivering agreement data.",
      "description_length": 337,
      "index": 1155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement.DescribeAgreement",
      "description": "Handles AWS service requests for retrieving agreement details, including error handling for specific exception types. Operates on context objects and input structures specific to the describe agreement operation. Used to fetch structured agreement information from a service endpoint under defined access controls.",
      "description_length": 314,
      "index": 1156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateSubscription",
      "description": "Handles subscription updates by sending a request to an API endpoint, processing the response, and returning specific error types based on the service's validation and state. Works with context objects, request records, and response structures tailored to the service's protocol. Used to modify subscription parameters while enforcing constraints and handling concurrency conflicts.",
      "description_length": 382,
      "index": 1157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateProtectionGroup",
      "description": "Handles AWS UpdateProtectionGroup API requests by validating input parameters, enforcing optimistic locking, and returning structured responses. Operates on custom request and response types specific to AWS Shield Advanced. Used to modify protection group configurations in real-time while ensuring consistency and error handling for malformed or conflicting inputs.",
      "description_length": 366,
      "index": 1158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateEmergencyContactSettings",
      "description": "Handles AWS API requests to update emergency contact settings, processing structured JSON inputs and returning typed results. Operates with context objects and specific request/response types defined in the Smaws_Lib framework. Used to modify user emergency contact information in cloud-based systems with error handling for service-specific exceptions.",
      "description_length": 353,
      "index": 1159,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateApplicationLayerAutomaticResponse",
      "description": "Handles the retrieval of automatic response configurations for application layers, accepting context and request parameters to produce a structured response or specific error types. Operates with custom exception types and AWS JSON protocol errors, ensuring precise error handling. Used to fetch or update automated responses in network management systems.",
      "description_length": 356,
      "index": 1160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UntagResource",
      "description": "Handles AWS resource untagging by accepting a context and a request structure, then returning a response or specific error types. Operates with AWS JSON protocol structures and exception types defined in the Smaws_Lib library. Used to remove tags from resources in AWS services that support tagging, such as EC2 instances or S3 buckets.",
      "description_length": 336,
      "index": 1161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.TagResource",
      "description": "Handles AWS resource tagging requests by processing context and tag resource operations, returning structured responses or specific error types. Operates with AWS JSON protocol structures and exception types defined in the Smaws_Lib module. Used to apply or modify tags on AWS resources like EC2 instances or S3 buckets.",
      "description_length": 320,
      "index": 1162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on AWS context and request structures, returning tagged results or specific error types. Used to fetch metadata tags for resources in AWS services like EC2 or S3.",
      "description_length": 250,
      "index": 1163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.ListResourcesInProtectionGroup",
      "description": "Handles AWS request to list resources within a protection group, returning structured responses or specific error types. Operates with context, request, and response types defined in Smaws_Lib. Used to retrieve and validate resource listings in cloud protection configurations.",
      "description_length": 277,
      "index": 1164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.ListProtections",
      "description": "Processes AWS list protections requests, handling pagination and error conditions. Operates on context objects and structured request/response types specific to AWS services. Used to retrieve protection configurations from an AWS endpoint with precise error handling.",
      "description_length": 267,
      "index": 1165,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.ListProtectionGroups",
      "description": "Handles AWS request to fetch protection groups, processing pagination and error responses. Operates on context and custom request/response types specific to AWS services. Manages exceptions such as invalid tokens and missing resources during retrieval.",
      "description_length": 252,
      "index": 1166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.ListAttacks",
      "description": "Handles AWS API requests to list attacks, processing specific request structures and returning detailed responses. Operates with context objects and custom exception types to manage error conditions during attack enumeration. Used to retrieve attack data from cloud security services for analysis and monitoring.",
      "description_length": 312,
      "index": 1167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.GetSubscriptionState",
      "description": "Handles AWS API requests to retrieve subscription state information, processing JSON-based inputs and outputs. Operates with context objects, request structures, and error-specific exceptions. Used to fetch real-time subscription status from AWS services in distributed systems.",
      "description_length": 278,
      "index": 1168,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.EnableProactiveEngagement",
      "description": "Handles the initiation of proactive engagement features by sending a structured request and returning a typed response. Operates with context objects and custom exception types to manage AWS-specific error conditions. Used to enable system-wide proactive alerts and notifications in distributed service environments.",
      "description_length": 316,
      "index": 1169,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.EnableApplicationLayerAutomaticResponse",
      "description": "Handles the request to enable automatic response for application layer by processing a specific request structure and returning a tailored response. Operates on context and custom exception types derived from AWS JSON protocol errors. Used to configure system behavior in response to defined application layer events.",
      "description_length": 317,
      "index": 1170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisassociateHealthCheck",
      "description": "Handles the removal of a health check from an AWS resource by sending a structured request and processing the response. Operates with context objects, request records, and custom exception types specific to AWS API interactions. Used to manage health check associations in cloud infrastructure configurations.",
      "description_length": 309,
      "index": 1171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisassociateDRTRole",
      "description": "Handles the removal of a role from a DRT (Direct Route Table) by processing a request and returning a response or specific error conditions. Operates on custom request and response types derived from AWS JSON protocols. Used to manage role assignments in network configurations where precise error handling is required.",
      "description_length": 319,
      "index": 1172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisassociateDRTLogBucket",
      "description": "Handles the removal of a DRT log bucket association by sending a structured request and returning a typed response. Operates with AWS context, custom request, and response types, along with specific exception types for error handling. Used to manage logging configurations in AWS services requiring explicit disassociation of resources.",
      "description_length": 336,
      "index": 1173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DisableProactiveEngagement",
      "description": "Handles the disabling of proactive engagement features by processing a request and returning a structured response. Operates on context objects and custom exception types derived from AWS JSON protocols. Used to manage system configuration changes in response to user or policy-driven triggers.",
      "description_length": 294,
      "index": 1174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisableApplicationLayerAutomaticResponse",
      "description": "Handles the request to disable automatic responses at the application layer, processing context and a specific request structure to return a response or relevant error. Operates with custom exception types and AWS JSON protocol errors. Used to enforce policy changes in network response handling within a controlled environment.",
      "description_length": 328,
      "index": 1175,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeSubscription",
      "description": "Handles AWS SNS subscription description requests by sending a structured HTTP query and parsing the JSON response. It operates on context objects, request records, and custom exception types derived from AWS error responses. Used to retrieve detailed subscription information in distributed messaging systems.",
      "description_length": 310,
      "index": 1176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeProtectionGroup",
      "description": "Handles AWS EC2 describe protection group requests by validating context and parameters, then returning structured responses or specific error types. Operates with AWS context objects, request records, and custom error exceptions. Used to retrieve detailed information about protection groups in cloud infrastructure setups.",
      "description_length": 324,
      "index": 1177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeProtection",
      "description": "Handles AWS EC2 describe-protection requests by validating context, parsing input, and returning structured responses. Operates on `Smaws_Lib.Context.t` and custom request/response types specific to EC2 protection data. Used to retrieve protection status for EC2 resources in cloud infrastructure monitoring workflows.",
      "description_length": 318,
      "index": 1178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeEmergencyContactSettings",
      "description": "Handles retrieval of emergency contact settings from a specified context, using a structured request and returning a detailed response or specific error types. Operates with context objects, request records, and response structures tailored to AWS service interactions. Used to fetch configuration data in scenarios requiring immediate access to emergency contact information.",
      "description_length": 376,
      "index": 1179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeDRTAccess",
      "description": "Handles AWS DescribeDrtAccess API requests by validating context, parsing input, and returning structured responses or specific error types. Operates on AWS context objects and custom request/response types derived from protocol definitions. Used to retrieve digital rights tracking access configurations from AWS services.",
      "description_length": 323,
      "index": 1180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeAttackStatistics",
      "description": "Handles AWS API requests to retrieve detailed attack statistics, processing specific request and response structures defined in the Smaws_Lib library. Operates on custom types representing attack data, including timestamps, attack types, and mitigation details. Used to generate reports for security analysis and incident response workflows.",
      "description_length": 341,
      "index": 1181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeAttack",
      "description": "Handles AWS DescribeAttack API requests by validating context and parsing input, returning structured responses or specific error types. Operates with AWS JSON protocol structures and custom exception types. Used to retrieve detailed attack information from security monitoring systems.",
      "description_length": 286,
      "index": 1182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DeleteSubscription",
      "description": "Handles subscription deletion requests by validating context and processing specific request structures, returning detailed responses or targeted error types. Operates with context objects, deletion request records, and structured error exceptions. Used to manage AWS SNS subscription removals with explicit error handling for locked or missing subscriptions.",
      "description_length": 359,
      "index": 1183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DeleteProtectionGroup",
      "description": "Handles the request to delete a protection group by validating dependencies and ensuring resource integrity. Operates on AWS JSON protocol structures and exception types specific to resource deletion. Used to enforce safe deletion of critical infrastructure components in cloud management systems.",
      "description_length": 297,
      "index": 1184,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DeleteProtection",
      "description": "Handles AWS Delete Protection requests by validating and processing deletion constraints, returning detailed responses or specific error conditions. Operates on context objects and structured request/response types defined in related modules. Used to enforce resource deletion policies in cloud infrastructure management workflows.",
      "description_length": 331,
      "index": 1185,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.CreateSubscription",
      "description": "Handles subscription creation by sending a request to an AWS service, processing the response, and returning specific error types including internal and resource conflict exceptions. Operates with context data, subscription request payloads, and structured response types. Used to manage unique subscription registrations in distributed systems.",
      "description_length": 345,
      "index": 1186,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.CreateProtectionGroup",
      "description": "Handles AWS CloudHSM V2 protection group creation by processing a request and returning a response or specific error types. Operates with context and structured request/response types defined in Smaws_Lib. Used to enforce AWS API constraints and validate inputs before provisioning protection groups.",
      "description_length": 300,
      "index": 1187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.CreateProtection",
      "description": "Handles AWS JSON-based protection creation requests by validating input, enforcing resource constraints, and returning structured responses. Operates on context objects and custom exception types derived from AWS protocols. Used to manage resource protection logic in distributed systems with strict error handling.",
      "description_length": 315,
      "index": 1188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateProactiveEngagementDetails",
      "description": "Handles the retrieval of proactive engagement details for associates by processing a specific request structure and returning a tailored response. It operates with context data, request parameters, and a range of custom exception types to manage error conditions. Used in scenarios where system administrators need to access detailed engagement records for troubleshooting or reporting.",
      "description_length": 386,
      "index": 1189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateHealthCheck",
      "description": "Handles health check requests for associates, validating input and returning structured responses. Operates with context objects and custom exception types to manage AWS JSON protocol errors and specific business exceptions. Used to ensure associate data integrity and system reliability during service interactions.",
      "description_length": 316,
      "index": 1190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateDRTRole",
      "description": "Handles AWS DRT role association requests by validating parameters, checking permissions, and interacting with AWS services. Operates on context objects, request records, and specific error types defined in the AWS JSON protocol. Used to manage role assignments in cloud infrastructure workflows where access control and resource validation are critical.",
      "description_length": 354,
      "index": 1191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateDRTLogBucket",
      "description": "Handles AWS DRT log bucket association requests, returning structured responses or specific error types based on API interactions. Operates with context objects and custom request/response records tied to AWS service semantics. Used to manage log bucket associations in cloud infrastructure workflows, ensuring proper error handling for service-specific exceptions.",
      "description_length": 365,
      "index": 1192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Operates on context objects, untag_resource_request records, and returns responses or specific AWS-defined exceptions. Used to remove tags from resources in compliance with AWS API requirements.",
      "description_length": 298,
      "index": 1193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.TagResource",
      "description": "Handles AWS resource tagging operations by sending requests and processing responses. Operates with context objects, tag resource requests, and structured error types specific to AWS services. Used to apply or update tags on AWS resources like EC2 instances or S3 buckets.",
      "description_length": 272,
      "index": 1194,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.PutResourceSet",
      "description": "Handles AWS PutResourceSet API requests by validating input, processing resource set data, and returning structured responses or specific error types. Operates with context objects, request records, and custom exception types derived from AWS JSON protocol. Used to manage resource set configurations in cloud infrastructure workflows.",
      "description_length": 335,
      "index": 1195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.PutProtocolsList",
      "description": "Handles HTTP requests to retrieve a list of put protocols, processing context and request parameters to generate a structured response. Operates with custom exception types and protocol-specific data structures defined in related modules. Used to enforce access control and validate input before executing protocol-related operations.",
      "description_length": 334,
      "index": 1196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutPolicy",
      "description": "Handles AWS S3 put policy requests by validating input, processing policy documents, and returning structured responses. Operates on context objects, policy requests, and error-specific exceptions. Used to enforce access control policies on S3 buckets during resource updates.",
      "description_length": 276,
      "index": 1197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutNotificationChannel",
      "description": "Handles AWS PutNotificationChannel API requests by validating and sending configuration data. Operates on context objects and structured request data to manage notification channel settings. Used to update or establish notification channels in AWS services requiring explicit configuration.",
      "description_length": 290,
      "index": 1198,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.PutAppsList",
      "description": "Handles AWS PutAppsList API requests by validating input, processing app data, and returning structured responses. Operates on custom request and response types derived from AWS JSON protocols. Used to update application lists in cloud infrastructure systems with error handling for specific AWS exceptions.",
      "description_length": 307,
      "index": 1199,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.PutAdminAccount",
      "description": "Handles administrative account requests by validating input, enforcing operational limits, and returning structured error responses. Operates on context data and custom exception types derived from AWS JSON protocols. Used to manage account modifications with strict input and state validation.",
      "description_length": 294,
      "index": 1200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListThirdPartyFirewallFirewallPolicies",
      "description": "Processes requests to retrieve third-party firewall policies, handling AWS JSON responses and specific error conditions. Operates with context objects, request records, and response structures tailored to firewall policy data. Used to fetch policy configurations from external firewall systems within a cloud infrastructure.",
      "description_length": 324,
      "index": 1201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListTagsForResource",
      "description": "Handles AWS service requests to retrieve tags associated with a specific resource. Operates on structured request and response types defined for the ListTagsForResource operation. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 259,
      "index": 1202,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListResourceSets",
      "description": "Handles AWS request for listing resource sets, parsing input, and returning structured responses. Operates on context objects and specific request/response types defined in the Smaws_Lib framework. Used to retrieve and manage resource set configurations in cloud infrastructure workflows.",
      "description_length": 288,
      "index": 1203,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListResourceSetResources",
      "description": "Provides functions to handle AWS ListResourceSetResources requests, including parsing and processing responses. Operates with context objects, request structures, and custom exception types. Used to retrieve resource sets from AWS services with detailed error handling.",
      "description_length": 269,
      "index": 1204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListProtocolsLists",
      "description": "Handles protocol list requests by validating context and processing specific request types, returning structured responses or detailed error variants. Operates with context objects, request records, and custom error types derived from AWS JSON protocols. Used to retrieve or manage protocol lists in system configuration workflows.",
      "description_length": 331,
      "index": 1205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListPolicies",
      "description": "Provides functions to send AWS IAM list policies requests and handle specific error types, including internal errors, invalid operations, and resource not found exceptions. Operates with context objects and structured request/response types from the Smaws_Lib library. Used to retrieve policy lists from AWS IAM with detailed error handling for operational constraints.",
      "description_length": 369,
      "index": 1206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListMemberAccounts",
      "description": "Handles AWS API requests to retrieve member account information from a list, using context and request parameters. Operates on types such as `list_member_accounts_request` and `list_member_accounts_response`, along with error types from the AWS protocol. Used to fetch account details in cloud management systems requiring centralized account tracking.",
      "description_length": 352,
      "index": 1207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListDiscoveredResources",
      "description": "Handles AWS resource discovery requests by sending structured queries and returning detailed responses. Processes context and request objects to interact with AWS services, parsing and validating input parameters. Returns specific error types alongside resource lists, enabling precise handling of API responses and exceptions.",
      "description_length": 327,
      "index": 1208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListComplianceStatus",
      "description": "Processes AWS SSM list compliance status requests, handling errors and returning structured responses. Operates with context objects, request records, and custom exception types. Used to retrieve compliance data for managed instances in AWS.",
      "description_length": 241,
      "index": 1209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListAppsLists",
      "description": "Provides functions to handle requests for listing application lists, including error handling for specific AWS exceptions. Operates with context objects and structured request/response types related to application management. Used to retrieve application list configurations from a service endpoint under defined access controls.",
      "description_length": 329,
      "index": 1210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListAdminsManagingAccount",
      "description": "Handles AWS request for listing administrators managing an account, processing context and request parameters to generate a response. Operates with AWS context, request, and response types specific to account administration. Used to retrieve administrative user lists for compliance and access control verification.",
      "description_length": 315,
      "index": 1211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListAdminAccountsForOrganization",
      "description": "Handles AWS Organizations admin account listing by sending a structured request and parsing the JSON response. Operates with context objects, request records, and custom exception types derived from AWS error responses. Used to retrieve admin account information in AWS management scenarios requiring programmatic access.",
      "description_length": 321,
      "index": 1212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetViolationDetails",
      "description": "Handles AWS API requests to retrieve detailed information about specific violations. Operates with context objects and custom request/response types tied to violation data. Used to fetch structured violation metadata in error-handling workflows.",
      "description_length": 245,
      "index": 1213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetThirdPartyFirewallAssociationStatus",
      "description": "Handles AWS API requests to retrieve the association status between a VPC and a third-party firewall. Operates on context objects and structured request/response types specific to AWS's networking services. Used to validate firewall integration and diagnose configuration issues in cloud infrastructure.",
      "description_length": 303,
      "index": 1214,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.GetResourceSet",
      "description": "Requests a set of resources from a service, handling specific error conditions such as invalid inputs, resource not found, and internal failures. It operates with context information and structured request/response types tailored to the service's API. Used to fetch configured resource collections in a controlled, error-aware manner.",
      "description_length": 334,
      "index": 1215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetProtocolsList",
      "description": "Handles HTTP requests to retrieve a list of protocols, processing the response and handling specific error cases such as invalid operations, missing resources, and internal server errors. Operates with context data, request parameters, and structured response types defined in the system. Used to fetch protocol configurations in AWS-related services where error handling is critical.",
      "description_length": 384,
      "index": 1216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetProtectionStatus",
      "description": "Handles AWS API requests to retrieve protection status information for resources. Operates on context objects and specific request/response types defined in the Smaws_Lib module. Used to check the protection state of AWS resources in error-prone or conditional scenarios.",
      "description_length": 271,
      "index": 1217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetPolicy",
      "description": "Handles AWS policy retrieval by sending a structured request and returning a typed response. Processes context and policy-specific data structures, including error variants for AWS-specific exceptions. Used to fetch and validate policy details from an AWS service endpoint.",
      "description_length": 273,
      "index": 1218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetNotificationChannel",
      "description": "Handles AWS service requests to retrieve notification channel configurations, processing specific request and response types tied to AWS SNS. It manages error cases such as invalid operations, missing resources, and internal exceptions. Used to fetch and validate notification channel details in cloud-based messaging systems.",
      "description_length": 326,
      "index": 1219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetComplianceDetail",
      "description": "Handles AWS API requests to retrieve compliance details by sending a structured request and returning a response or specific error types. Operates with context objects, request records, and response structures defined by the AWS JSON protocol. Used to fetch detailed compliance information from AWS services in error-handled workflows.",
      "description_length": 335,
      "index": 1220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.GetAppsList",
      "description": "Handles AWS API requests to retrieve application lists, processing specific request structures and returning structured responses. Operates with context objects and custom exception types to manage AWS service errors. Used to fetch application metadata in distributed system management workflows.",
      "description_length": 296,
      "index": 1221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetAdminScope",
      "description": "Handles AWS request to retrieve administrative scope information, processing context and request parameters to generate a response. Operates with custom types such as `get_admin_scope_request` and `get_admin_scope_response`, along with error variants specific to AWS service exceptions. Used to enforce access control policies by determining the scope of administrative actions within a system.",
      "description_length": 394,
      "index": 1222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetAdminAccount",
      "description": "Handles AWS API requests to retrieve admin account information, processing specific request and response types defined in the Smaws_Lib framework. It operates with context objects and custom exception types to manage errors during the retrieval process. Used to fetch admin account details in scenarios requiring direct API interaction with AWS services.",
      "description_length": 354,
      "index": 1223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DisassociateThirdPartyFirewall",
      "description": "Handles the disassociation of a third-party firewall from a network resource by sending a structured request and processing the response. Operates with context objects, request records, and custom exception types to manage AWS API interactions. Used to remove firewall associations in cloud infrastructure management workflows.",
      "description_length": 327,
      "index": 1224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DisassociateAdminAccount",
      "description": "Provides operations to send a request to disassociate an admin account, handling specific AWS error types such as internal errors, invalid operations, and resource not found. Works with context objects and structured request data for AWS service interactions. Used to manage account associations in cloud infrastructure workflows.",
      "description_length": 330,
      "index": 1225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteResourceSet",
      "description": "Handles the initiation of a resource set deletion by accepting a context and a request structure, returning a result that indicates success or specific error conditions. Operates with AWS context objects and custom exception types derived from protocol-specific errors. Used to manage the lifecycle of resource sets in cloud infrastructure by validating and processing deletion requests.",
      "description_length": 387,
      "index": 1226,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteProtocolsList",
      "description": "Handles deletion of protocol lists by sending a structured request to a service, returning specific error types based on the response. Operates with context objects and custom exception types derived from AWS JSON protocol definitions. Used to manage resource cleanup in systems requiring precise error handling for protocol operations.",
      "description_length": 336,
      "index": 1227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeletePolicy",
      "description": "Handles AWS delete policy requests by validating input, checking resource existence, and enforcing operational limits. Processes structured delete policy data and returns specific error types based on validation outcomes. Used to manage resource deletion workflows with precise exception handling.",
      "description_length": 297,
      "index": 1228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteNotificationChannel",
      "description": "Handles the deletion of a specified notification channel by sending a structured request. Operates with context objects and custom exception types to manage AWS API interactions. Used to remove configured channels in systems requiring precise error handling and resource validation.",
      "description_length": 282,
      "index": 1229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteAppsList",
      "description": "Handles the deletion of application lists by sending a structured request to a service, processing responses, and managing specific error conditions. Operates with context objects and custom request types to enforce strict validation and communication protocols. Used to remove configured application lists in cloud management systems, ensuring proper error handling for invalid or missing resources.",
      "description_length": 400,
      "index": 1230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.BatchDisassociateResource",
      "description": "Handles AWS Batch resource disassociation by sending a structured request and returning a typed response. Operates with context objects, request records, and specific error types defined by AWS protocols. Used to detach resources from jobs or job queues in batch processing workflows.",
      "description_length": 284,
      "index": 1231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.BatchAssociateResource",
      "description": "Handles AWS batch resource association by sending a structured request and returning a typed result. Operates with context, request, and response types specific to AWS JSON protocols. Used to link resources in bulk while managing AWS-specific error conditions.",
      "description_length": 260,
      "index": 1232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.AssociateThirdPartyFirewall",
      "description": "Handles the creation of a third-party firewall association by sending a structured request and returning a typed response. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to integrate external firewall systems with network resources in cloud infrastructure.",
      "description_length": 322,
      "index": 1233,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.AssociateAdminAccount",
      "description": "Handles the initiation of an associate admin account request using a provided context and request structure. Operates on `Smaws_Lib.Context.t` and `associate_admin_account_request` types, returning a result with specific error variants. Used to link an admin account to a managed organization through a controlled API interaction.",
      "description_length": 330,
      "index": 1234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.UpdateApplication",
      "description": "Handles the request to update an application by validating input, checking resource states, and applying changes. Works with context data, request payloads, and various exception types specific to application management. Used to modify application configurations in a controlled, error-checked manner during deployment or configuration updates.",
      "description_length": 344,
      "index": 1235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-based request to the service, processing responses, and returning specific error types based on API constraints. Operates with context objects, untag resource requests, and structured responses. Used to remove tags from resources while managing exceptions like concurrent modifications or invalid arguments.",
      "description_length": 356,
      "index": 1236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.TagResource",
      "description": "Handles AWS resource tagging operations by sending requests and processing responses. Works with context objects, tag resource requests, and structured error types specific to AWS API interactions. Used to apply or update tags on AWS resources while managing exceptions like concurrent modifications or invalid arguments.",
      "description_length": 321,
      "index": 1237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.StopApplication",
      "description": "Handles application termination requests by validating context and sending structured responses. Operates on custom request and response types, along with specific error variants for AWS JSON protocol interactions. Used to gracefully shut down applications while managing exceptions like resource conflicts or unsupported operations.",
      "description_length": 333,
      "index": 1238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.StartApplication",
      "description": "Handles application start requests by validating configurations, checking resource availability, and managing exceptions. Operates on context objects and structured request/response types specific to application deployment. Used to initiate application instances while enforcing constraints and reporting detailed error conditions.",
      "description_length": 331,
      "index": 1239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on structured request and response types, including error variants for common AWS exceptions. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 261,
      "index": 1240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.ListApplications",
      "description": "Handles AWS API requests to list applications, parsing and serializing JSON payloads using context-specific configurations. Operates on custom request and response types derived from AWS protocol specifications. Used to retrieve application metadata from cloud infrastructure endpoints.",
      "description_length": 286,
      "index": 1241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DiscoverInputSchema",
      "description": "Requests schema information from a data source, handling specific error conditions such as invalid arguments, throughput limits, and service unavailability. Operates on context objects and structured request/response types related to schema discovery. Used to dynamically determine data formats in distributed systems.",
      "description_length": 318,
      "index": 1242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DescribeApplication",
      "description": "Handles AWS application description requests by validating context and processing specific request structures, returning detailed application responses or targeted error variants. Operates with context objects, custom request records, and structured response types aligned with AWS JSON protocols. Used to retrieve application metadata in distributed systems requiring precise error handling and protocol compliance.",
      "description_length": 416,
      "index": 1243,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationReferenceDataSource",
      "description": "Handles deletion of application reference data sources by sending a structured request and returning a result with specific error types. Operates on context objects and custom request/response types tied to application configuration. Used to safely remove data source references while handling concurrency and validation errors.",
      "description_length": 328,
      "index": 1244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationOutput",
      "description": "Handles deletion requests for application outputs by validating context and processing specific error conditions. Operates on custom request and response types, along with AWS-specific error variants. Used to safely remove application outputs while managing concurrency and resource state.",
      "description_length": 289,
      "index": 1245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationInputProcessingConfiguration",
      "description": "Processes deletion requests for application input processing configurations, handling validation and error conditions. Operates on context objects and structured request/response types specific to AWS service interactions. Manages exceptions such as concurrent modifications, invalid arguments, and resource not found scenarios.",
      "description_length": 328,
      "index": 1246,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption",
      "description": "Handles AWS Kinesis Firehose delete application cloud watch logging option requests. Operates on context and request records, returning responses or specific exception types. Used to remove logging configurations from a Kinesis Firehose application.",
      "description_length": 249,
      "index": 1247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplication",
      "description": "Handles deletion requests for applications by validating conditions and enforcing constraints. Operates on context objects and structured request/response types specific to application management. Prevents deletions on in-use resources, non-existent applications, or unsupported configurations.",
      "description_length": 294,
      "index": 1248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.CreateApplication",
      "description": "Handles application creation requests by validating input, checking resource constraints, and interacting with AWS services. Operates on context objects, application request structures, and error-specific types derived from AWS JSON protocols. Used to enforce validation rules, manage concurrent modifications, and report detailed error conditions during application setup.",
      "description_length": 373,
      "index": 1249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationReferenceDataSource",
      "description": "Handles the creation of application reference data sources by processing a request and returning a response or specific error conditions. Operates with context objects, request records, and custom exception types related to resource conflicts, invalid inputs, and unsupported operations. Used to manage data source registration in a system where concurrent modifications and resource availability must be strictly controlled.",
      "description_length": 425,
      "index": 1250,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationOutput",
      "description": "Handles the submission of application output data by validating input, processing the request, and returning structured responses. Operates with context objects, request records, and custom exception types to manage errors during the addition process. Used to update application outputs in a system where concurrent modifications and resource states must be strictly controlled.",
      "description_length": 378,
      "index": 1251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationInputProcessingConfiguration",
      "description": "Processes an application input processing configuration request by validating input, applying configuration changes, and returning a response or specific error. Works with context objects, request records, and custom exception types related to AWS resource states. Used to update or set input processing parameters for an application while handling concurrency and validation errors.",
      "description_length": 383,
      "index": 1252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationInput",
      "description": "Handles the submission of application registration requests by validating input data, checking resource availability, and managing concurrency. Operates on context objects and structured request/response types specific to application registration workflows. Processes exceptions related to invalid inputs, resource conflicts, and unsupported operations during the registration process.",
      "description_length": 385,
      "index": 1253,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationCloudWatchLoggingOption",
      "description": "Handles AWS Kinesis Application logging configuration updates by processing requests to add CloudWatch logging options. Operates on context objects and structured request/response types specific to AWS Kinesis. Manages exceptions for concurrent modifications, invalid inputs, and resource states during logging setup.",
      "description_length": 317,
      "index": 1254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateRelationalDatabaseParameters",
      "description": "Handles the submission of parameter updates for a relational database, accepting a context and a request structure to initiate the process. Operates with specific request and result types tied to database configuration changes. Used to modify database settings in response to user or system-driven configuration needs.",
      "description_length": 318,
      "index": 1255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateRelationalDatabase",
      "description": "Handles database schema and configuration updates by sending structured requests and processing detailed responses. Operates with context objects, update requests, and complex error types specific to relational database operations. Used to apply migrations, adjust table structures, or modify database settings in cloud environments.",
      "description_length": 333,
      "index": 1256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateLoadBalancerAttribute",
      "description": "Handles AWS Elastic Load Balancing attribute updates by validating input, sending JSON-encoded requests, and parsing responses. Operates on context objects, request structures, and error-specific types derived from AWS service definitions. Used to modify load balancer settings such as access logs or cross-zone load balancing during infrastructure configuration workflows.",
      "description_length": 373,
      "index": 1257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateInstanceMetadataOptions",
      "description": "Handles metadata updates for EC2 instances by sending structured requests and processing specific error conditions. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to modify instance metadata settings while managing exceptions like access denial, invalid input, and service failures.",
      "description_length": 348,
      "index": 1258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateDomainEntry",
      "description": "Handles domain entry updates by sending requests to a service, processing responses, and managing specific error conditions. Operates with context objects, request records, and result types tied to domain management. Used to modify DNS configurations in response to user or system-triggered change requests.",
      "description_length": 307,
      "index": 1259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateDistributionBundle",
      "description": "Handles the request to update a distribution bundle by validating input, checking permissions, and executing the update process. Operates on context objects, request records, and various exception types specific to AWS service interactions. Used to manage content delivery updates in a cloud infrastructure setup.",
      "description_length": 313,
      "index": 1260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateDistribution",
      "description": "Handles AWS update distribution requests, validating inputs and propagating specific exception types. Operates on context objects and structured request/response data. Used to manage distribution updates with detailed error reporting for AWS service interactions.",
      "description_length": 263,
      "index": 1261,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateContainerService",
      "description": "Handles AWS ECS update container service operations by accepting a context and request, returning detailed results or specific exception types. Operates with AWS context objects and service-specific request/response structures. Used to modify container service configurations in AWS ECS with precise error handling for access, input, and service issues.",
      "description_length": 353,
      "index": 1262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateBucketBundle",
      "description": "Handles AWS S3 bucket policy updates by sending a structured request and returning detailed results or specific exception types. Operates with context objects and custom exception types derived from AWS JSON protocol responses. Used to programmatically modify bucket policies with explicit error handling for common AWS API failures.",
      "description_length": 333,
      "index": 1263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateBucket",
      "description": "Handles AWS S3 bucket updates by sending structured requests and returning results or specific error types. Operates with context objects and custom request/response types tailored for S3 bucket modifications. Used to programmatically adjust bucket configurations in response to user actions or system events.",
      "description_length": 309,
      "index": 1264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UntagResource",
      "description": "Handles AWS resource untagging by sending a structured request and returning results or specific error conditions. Operates with context data, untag_resource_request, and various exception types derived from AWS service responses. Used to remove tags from resources in controlled environments where error handling is critical.",
      "description_length": 326,
      "index": 1265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UnpeerVpc",
      "description": "Handles the unpeer VPC operation by sending a request with context and a specific request structure, returning a result or a variety of AWS-specific error types. Operates on AWS context data and VPC unpeer request payloads. Used to terminate VPC peering connections in cloud infrastructure workflows.",
      "description_length": 300,
      "index": 1266,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.TestAlarm",
      "description": "Handles AWS test alarm requests by validating context, processing input, and returning structured results. Operates with context objects, custom exception types, and result unions. Used to simulate or verify alarm behaviors in cloud infrastructure testing.",
      "description_length": 256,
      "index": 1267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.TagResource",
      "description": "Handles AWS resource tagging requests by validating input, applying tags, and managing exceptions. Operates on context objects, tag resource requests, and structured error types specific to AWS services. Used to programmatically attach tags to AWS resources within a controlled execution environment.",
      "description_length": 300,
      "index": 1268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.StopRelationalDatabase",
      "description": "Handles the initiation of stopping a relational database instance by sending a structured request. Operates with context data and specific exception types to manage various error conditions during the stop operation. Used to gracefully terminate database resources within an AWS environment.",
      "description_length": 291,
      "index": 1269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.StopInstance",
      "description": "Handles AWS EC2 instance termination by sending a structured request and returning detailed results or specific exception types. Operates with context objects and custom request/response types tailored for EC2 stop operations. Used to gracefully shut down instances while handling AWS-specific error conditions.",
      "description_length": 311,
      "index": 1270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.StopGUISession",
      "description": "Handles session termination requests by validating context and processing specific error conditions. Operates with context objects and custom exception types derived from AWS JSON protocols. Used to gracefully end GUI sessions with precise error reporting during user or system-initiated shutdowns.",
      "description_length": 298,
      "index": 1271,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.StartRelationalDatabase",
      "description": "Handles the initiation of a relational database by processing a structured request and returning a result or specific error conditions. Operates with context data and custom exception types derived from AWS JSON protocols. Used to manage database startup workflows in cloud infrastructure interactions.",
      "description_length": 302,
      "index": 1272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.StartInstance",
      "description": "Handles AWS EC2 instance start requests by validating context and input, then executing the operation with detailed error handling for specific AWS exceptions. Works with context objects, request records, and result types structured for AWS JSON protocols. Used to initiate EC2 instances while managing access controls, input validation, and service-specific error responses.",
      "description_length": 375,
      "index": 1273,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.StartGUISession",
      "description": "Handles AWS session initiation by sending a start GUI session request, validating inputs, and managing error responses such as access denial, invalid input, and service exceptions. Operates on context objects and structured request/response types specific to AWS session management. Used to securely launch GUI sessions within a controlled AWS environment.",
      "description_length": 356,
      "index": 1274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.SetupInstanceHttps",
      "description": "Handles HTTPS setup requests for instances by validating input, checking permissions, and returning structured results. Operates on context objects and custom exception types derived from AWS JSON protocols. Used to securely configure instance endpoints with detailed error reporting for access control and input validation failures.",
      "description_length": 333,
      "index": 1275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.SetResourceAccessForBucket",
      "description": "Handles AWS S3 bucket policy modification by applying a specified resource access configuration. Operates on context objects and request structures specific to S3 bucket access control. Used to enforce access rules on S3 resources in response to user or system-initiated policy updates.",
      "description_length": 286,
      "index": 1276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.SetIpAddressType",
      "description": "Handles IP address type configuration requests by validating input, enforcing access controls, and interacting with underlying services to update network settings. Operates on context objects, request payloads, and structured error types specific to AWS API interactions. Used to transition EC2 instances or VPCs between standard and advanced networking configurations.",
      "description_length": 369,
      "index": 1277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.SendContactMethodVerification",
      "description": "Handles verification request submission for contact methods, accepting a context and a request structure, and returning a result or specific exception types. Operates with custom exception types and a context object containing operational parameters. Used to validate user-provided contact information against service-specific constraints and authentication requirements.",
      "description_length": 371,
      "index": 1278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.ResetDistributionCache",
      "description": "Handles AWS request for resetting a distribution cache, processing context and request parameters to return a result or specific exception types. Operates with context objects and structured request data related to content delivery networks. Used to invalidate cached content in a distributed system through a controlled API call.",
      "description_length": 330,
      "index": 1279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.ReleaseStaticIp",
      "description": "Handles the request to release a static IP address, accepting a context and a specific request structure. It operates on types such as `release_static_ip_request` and `release_static_ip_result`, and returns detailed error variants for AWS-specific exceptions. Used in scenarios where an application needs to dynamically manage IP resources within an AWS environment.",
      "description_length": 366,
      "index": 1280,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.RegisterContainerImage",
      "description": "Handles AWS ECR container image registration by sending a request with context and a structured input, returning a result or specific exception types. Operates with AWS context objects and custom request/response types for container image operations. Used to programmatically register images in ECR with detailed error handling for AWS-specific exceptions.",
      "description_length": 356,
      "index": 1281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.RebootRelationalDatabase",
      "description": "Handles the initiation of a database reboot process by sending a structured request containing database identifiers and configuration parameters. Operates on custom record types representing reboot requests and results, along with specific exception types for error handling. Used to trigger controlled restarts of relational database instances in cloud infrastructure workflows.",
      "description_length": 379,
      "index": 1282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.RebootInstance",
      "description": "Handles instance reboot requests by sending a structured request to the AWS API, processing the response, and returning detailed results or specific exception types. Operates with context data and custom request/response types tailored for instance management. Used to programmatically trigger instance reboots in cloud infrastructure workflows.",
      "description_length": 345,
      "index": 1283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.PutInstancePublicPorts",
      "description": "Handles the request to open public ports on an instance, accepting a context and a specific request structure. It returns a result containing either the operation's outcome or a range of AWS-specific error types. Used to manage network accessibility for EC2 instances in cloud environments.",
      "description_length": 290,
      "index": 1284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.PutAlarm",
      "description": "Handles AWS PutAlarm API requests by validating input, sending the request, and returning structured results or specific exception types. Operates with context objects and custom request/response types defined in Smaws_Lib. Used to programmatically set or update alarms in AWS CloudWatch with explicit error handling.",
      "description_length": 317,
      "index": 1285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.PeerVpc",
      "description": "Handles AWS VPC requests with detailed error handling, including specific exceptions like access denied, account setup in progress, and invalid input. Operates on context objects and structured request/response types tailored for VPC operations. Used to initiate and manage VPC-related interactions in cloud infrastructure workflows.",
      "description_length": 333,
      "index": 1286,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.OpenInstancePublicPorts",
      "description": "Handles AWS EC2 instance public port configuration requests by validating context, processing port mappings, and returning results or specific exception types. Operates on AWS context objects and structured port request data. Used to dynamically adjust network accessibility for EC2 instances in response to infrastructure changes or security policies.",
      "description_length": 352,
      "index": 1287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.IsVpcPeered",
      "description": "Handles AWS VPC peering status checks by sending a request with context and a specific request structure, returning a result or detailed error types. Operates on AWS context objects and VPC peering request parameters. Used to verify if a VPC is connected to another through a peering relationship in cloud infrastructure workflows.",
      "description_length": 331,
      "index": 1288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.ImportKeyPair",
      "description": "Handles key pair import requests by interacting with AWS services, returning detailed results or specific exception types. Operates with context objects and structured request/response data. Used to securely manage key pair validation and import within cloud infrastructure workflows.",
      "description_length": 284,
      "index": 1289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetStaticIps",
      "description": "Handles AWS API requests to retrieve static IP addresses, supporting error handling for specific AWS exceptions. Operates with context objects and request structures defined in Smaws_Lib. Used to fetch static IP configurations in cloud infrastructure management workflows.",
      "description_length": 272,
      "index": 1290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetStaticIp",
      "description": "Handles AWS API requests to obtain a static IP address, returning results or specific exception types based on the response. Operates with context objects and request structures defined in Smaws_Lib. Used to retrieve static IP configurations in cloud infrastructure management workflows.",
      "description_length": 287,
      "index": 1291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetSetupHistory",
      "description": "Handles retrieval of setup history data by sending a structured request and returning a result with specific error types. Operates with context objects and custom request/response types tailored for AWS JSON protocol interactions. Used to fetch historical setup information for resources in a controlled, error-aware manner.",
      "description_length": 324,
      "index": 1292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseSnapshots",
      "description": "Provides functions to request and handle responses for retrieving relational database snapshots, including error handling for access issues, invalid inputs, and service failures. Works with context objects and structured request/response types specific to AWS RDS. Used to fetch snapshot data for backup management and database recovery workflows.",
      "description_length": 347,
      "index": 1293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseSnapshot",
      "description": "Handles AWS RDS snapshot retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects and custom request/response types tailored for relational database snapshots. Used to fetch snapshot metadata and status for diagnostic or backup management tasks.",
      "description_length": 321,
      "index": 1294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabases",
      "description": "Handles AWS RDS instance retrieval by sending structured API requests and parsing JSON responses. Operates on context objects, request records, and result types specific to relational database services. Processes exceptions such as access denial, invalid input, and service failures to support robust cloud infrastructure management.",
      "description_length": 333,
      "index": 1295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseParameters",
      "description": "Handles requests to retrieve parameters of a relational database, returning structured results or specific error types. Operates with context and request records, including detailed error representations. Used to fetch configuration settings in cloud infrastructure management workflows.",
      "description_length": 287,
      "index": 1296,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseMetricData",
      "description": "Provides functions to retrieve metric data for a relational database, accepting a context and a request structure. Operates with AWS-specific types such as `get_relational_database_metric_data_request` and `get_relational_database_metric_data_result`. Used to monitor database performance by fetching metrics like CPU utilization and query latency.",
      "description_length": 348,
      "index": 1297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseMasterUserPassword",
      "description": "Handles the retrieval of a relational database's master user password by sending a structured request. Operates with context and specific request/response types tied to AWS services. Used to securely access database credentials in controlled environments.",
      "description_length": 255,
      "index": 1298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseLogStreams",
      "description": "Provides functions to retrieve log streams from a relational database, handling AWS-specific error types and context-aware requests. Operates with request and result types specific to database logging configurations. Used to inspect available log streams for troubleshooting or monitoring database activities.",
      "description_length": 309,
      "index": 1299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseLogEvents",
      "description": "Provides functions to retrieve log events from a relational database, handling specific AWS error types and contextual requests. Operates with AWS context and structured request/response types for database logging. Used to fetch and process detailed log entries for troubleshooting or monitoring database activities.",
      "description_length": 316,
      "index": 1300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseEvents",
      "description": "Handles requests to retrieve event logs from a relational database service, returning structured results or specific error types. Operates with context objects and custom request records to fetch database-related events. Used to monitor database activity and diagnose operational issues in real-time.",
      "description_length": 300,
      "index": 1301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseBundles",
      "description": "Handles AWS RDS bundle retrieval by sending structured requests and processing responses. Operates with context objects, request records, and result types specific to relational database configurations. Used to fetch available database bundle details in cloud infrastructure management workflows.",
      "description_length": 296,
      "index": 1302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseBlueprints",
      "description": "Handles AWS RDS blueprint retrieval by sending structured requests and parsing JSON responses. Operates on context objects, request records, and result types specific to relational database configurations. Used to fetch available database blueprint details for deployment or configuration validation.",
      "description_length": 300,
      "index": 1303,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabase",
      "description": "Handles AWS RDS instance retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects and custom request/response types tailored for relational database operations. Used to fetch database metadata in scenarios requiring precise error handling and integration with AWS infrastructure.",
      "description_length": 355,
      "index": 1304,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRegions",
      "description": "Handles AWS EC2 region enumeration by sending a request with context and returning detailed results or specific exception types. Operates on AWS context objects and region-related request structures. Used to dynamically retrieve available regions for cloud infrastructure management.",
      "description_length": 283,
      "index": 1305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetOperationsForResource",
      "description": "Handles AWS resource operation requests by validating context, processing input, and returning structured results. Operates on AWS-specific request and response types, including error variants for common service exceptions. Used to retrieve operational metadata for resources in AWS environments, such as checking available actions or status updates.",
      "description_length": 350,
      "index": 1306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetOperations",
      "description": "Handles HTTP GET requests for retrieving operational data, including error handling for specific AWS exceptions. Operates on context objects and request structures tailored for AWS service interactions. Used to fetch system status updates and audit logs from cloud infrastructure.",
      "description_length": 280,
      "index": 1307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetOperation",
      "description": "Handles HTTP GET requests by mapping input parameters to specific operation logic, returning structured results or detailed error types. Operates on context objects and custom request records, leveraging typed exceptions for precise error handling. Used to retrieve resource states, configuration data, or operational metadata from a service endpoint.",
      "description_length": 351,
      "index": 1308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancerTlsPolicies",
      "description": "Handles AWS API requests to retrieve TLS policies associated with a load balancer. Operates on context objects and structured request/response types specific to AWS services. Used to fetch configured TLS policies for secure network communication setup.",
      "description_length": 252,
      "index": 1309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancerTlsCertificates",
      "description": "Handles TLS certificate retrieval for a load balancer by sending a structured request and returning a result or specific error types. Operates with context data and request objects defined in the Smaws_Lib library. Used to fetch certificate information in AWS integration scenarios where authentication and validation are required.",
      "description_length": 331,
      "index": 1310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancers",
      "description": "Handles AWS API requests to retrieve load balancer configurations, returning detailed results or specific error types based on the response. Operates with context objects and structured request parameters for AWS services. Used to fetch and validate load balancer data in cloud infrastructure management workflows.",
      "description_length": 314,
      "index": 1311,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancerMetricData",
      "description": "Provides functions to request metric data for a load balancer, handling specific AWS error types and returning structured results. Operates with context objects and custom request/response types tailored for AWS API interactions. Used to monitor load balancer performance by fetching real-time metrics like request count and latency.",
      "description_length": 333,
      "index": 1312,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancer",
      "description": "Handles AWS API requests to retrieve load balancer details, including error handling for specific exception types. Operates on context objects and structured request data to produce results or detailed error variants. Used to fetch and validate load balancer configurations in cloud infrastructure management workflows.",
      "description_length": 319,
      "index": 1313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetKeyPairs",
      "description": "Handles AWS request to retrieve key pairs, returning a result with detailed error handling for specific AWS exceptions. Operates with context and request types from Smaws_Lib, producing a structured response containing key pair data or exception details. Used to fetch user-specific key pairs in cloud infrastructure management workflows.",
      "description_length": 338,
      "index": 1314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetKeyPair",
      "description": "Handles AWS key pair retrieval by sending a request and returning structured results or specific exception types. Operates with context objects and custom request records to interact with AWS services. Used to fetch cryptographic key pairs in cloud infrastructure workflows.",
      "description_length": 274,
      "index": 1315,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceState",
      "description": "Handles AWS EC2 instance state retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects and custom request/response types tailored for AWS API interactions. Used to check the current status of EC2 instances in environments requiring precise error handling and state validation.",
      "description_length": 353,
      "index": 1316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceSnapshots",
      "description": "Handles AWS EC2 instance snapshot requests by accepting a context and a structured request, returning detailed results or specific exception types. Operates with AWS context objects and custom request/response types tailored for EC2 operations. Used to retrieve snapshot information for diagnostic analysis or backup verification.",
      "description_length": 330,
      "index": 1317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceSnapshot",
      "description": "Handles AWS EC2 instance snapshot requests by validating context, processing input, and returning structured results. Operates on custom request and result types, along with specific exception types for error handling. Used to retrieve detailed state and configuration of an EC2 instance at a given point in time.",
      "description_length": 313,
      "index": 1318,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstances",
      "description": "Handles AWS EC2 instance retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context data and custom request/response types tailored for EC2 instance queries. Used to fetch active instance states and diagnose issues like access denial or invalid inputs during cloud resource management.",
      "description_length": 351,
      "index": 1319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstancePortStates",
      "description": "Handles AWS API requests to retrieve port state information for EC2 instances, returning detailed results or specific error conditions. Operates with context objects and structured request/response types defined in Smaws_Lib. Used to diagnose network connectivity issues by inspecting instance port configurations.",
      "description_length": 314,
      "index": 1320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceMetricData",
      "description": "Provides functions to request and handle metrics data for a specific instance, including error handling for AWS-specific exceptions. Works with context objects, request records, and result types that include both success data and detailed error variants. Used to retrieve performance and operational metrics from cloud infrastructure systems.",
      "description_length": 342,
      "index": 1321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceAccessDetails",
      "description": "Handles AWS EC2 instance access detail retrieval by sending a structured request and returning detailed results or specific exception types. Operates with context objects and custom request/response types tailored for AWS API interactions. Used to fetch secure access information for instances under controlled authentication and authorization workflows.",
      "description_length": 354,
      "index": 1322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstance",
      "description": "Handles AWS EC2 instance retrieval by sending a request with context and parameters, returning detailed results or specific error types. Operates with context objects and structured request/response data. Used to fetch instance details in cloud management workflows where error handling is critical.",
      "description_length": 299,
      "index": 1323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetExportSnapshotRecords",
      "description": "Handles AWS API requests to retrieve export snapshot records, processing structured input and returning results or specific error types. Operates with context objects and custom request/response types defined in the Smaws_Lib framework. Used to fetch detailed records for snapshot exports in cloud infrastructure management workflows.",
      "description_length": 334,
      "index": 1324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDomains",
      "description": "Handles AWS Route 53 domain registration information retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects and domain-specific request/response types. Used to fetch domain listings during account setup validation or troubleshooting DNS configuration issues.",
      "description_length": 336,
      "index": 1325,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDomain",
      "description": "Handles domain retrieval requests by interacting with AWS services, returning structured results or specific exception types based on the response. Operates with context objects and custom request/response types tailored for domain lookup operations. Used to validate and fetch domain information in scenarios requiring precise error handling and integration with AWS infrastructure.",
      "description_length": 383,
      "index": 1326,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributions",
      "description": "Handles AWS S3 distribution requests by sending a structured query and returning detailed results or specific error conditions. Operates with context objects and custom request/response types tailored for AWS API interactions. Used to retrieve distribution configurations and manage exceptions during API calls.",
      "description_length": 311,
      "index": 1327,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributionMetricData",
      "description": "Handles AWS CloudFront distribution metric data retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects, request records, and result types tailored to AWS API responses. Used to monitor traffic patterns, performance, and error rates for specific distributions.",
      "description_length": 337,
      "index": 1328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributionLatestCacheReset",
      "description": "Handles AWS request to retrieve the latest cache reset timestamp for a distribution, processing context and request parameters. Operates on custom request and result types specific to the AWS API. Used to monitor cache validity and trigger updates in content delivery systems.",
      "description_length": 276,
      "index": 1329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributionBundles",
      "description": "Handles AWS request for retrieving distribution bundles, processing context and request parameters to return structured results. Operates with AWS context objects and custom exception types for error handling. Used to fetch and manage distribution bundle configurations in cloud infrastructure workflows.",
      "description_length": 304,
      "index": 1330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDiskSnapshots",
      "description": "Handles AWS API requests to retrieve disk snapshots, processing input parameters and returning structured results. Operates with context objects, request records, and custom exception types specific to AWS service interactions. Used to fetch snapshot data for storage management and backup verification.",
      "description_length": 303,
      "index": 1331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDiskSnapshot",
      "description": "Handles requests to retrieve disk snapshot information from an AWS-compatible service, returning structured results or specific error types. Operates with context objects and custom request/response types tailored for disk snapshot queries. Used to fetch detailed snapshot metadata in cloud infrastructure management workflows.",
      "description_length": 327,
      "index": 1332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDisks",
      "description": "Handles disk information retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects and custom request/response types tailored for disk data. Used to fetch disk configurations in cloud infrastructure management workflows.",
      "description_length": 295,
      "index": 1333,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDisk",
      "description": "Handles disk information retrieval by sending a structured request, processing responses, and managing specific error conditions such as access denial, invalid input, and service failures. Operates with custom request and result types, including detailed exception types for error handling. Used to fetch disk metadata in cloud infrastructure workflows where precise error reporting is critical.",
      "description_length": 395,
      "index": 1334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetCostEstimate",
      "description": "Handles cost estimation requests by validating input, authenticating the context, and returning structured results or specific exception types. Operates with context objects, request records, and detailed error variants. Used to integrate cost estimation into AWS-based workflows with precise error handling.",
      "description_length": 308,
      "index": 1335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServices",
      "description": "Handles AWS S3 container services requests by sending a structured query and returning a list of services or specific error types based on the response. Operates with context objects and request records tailored for AWS API interactions. Used to retrieve service configurations in environments requiring direct API communication.",
      "description_length": 329,
      "index": 1336,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServicePowers",
      "description": "Handles AWS EC2 Container Service power configuration requests by validating context, parsing input, and returning structured results. Operates on AWS context objects, request records, and custom exception types. Used to retrieve available power options for container services in controlled environments.",
      "description_length": 304,
      "index": 1337,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServiceMetricData",
      "description": "Provides operations to fetch metric data for container services using AWS API, handling specific request and response structures. Works with context objects, request parameters, and result types including error variants for access control, input validation, and service failures. Used to monitor container performance and troubleshoot issues by retrieving real-time metrics.",
      "description_length": 374,
      "index": 1338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServiceDeployments",
      "description": "Handles AWS ECS deployment retrieval by sending a structured request and returning detailed results or specific error types. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to fetch deployment statuses for container services in a controlled, error-aware manner.",
      "description_length": 326,
      "index": 1339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerLog",
      "description": "Handles AWS ECS container log retrieval by sending a structured request and returning detailed results or specific error types. Operates with context objects and custom request records containing container and cluster identifiers. Used to fetch log data from ECS tasks for debugging or monitoring purposes.",
      "description_length": 306,
      "index": 1340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerImages",
      "description": "Handles AWS ECS container image retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to fetch container image metadata in cloud orchestration workflows where error handling must distinguish between access, input, and service-related failures.",
      "description_length": 405,
      "index": 1341,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerAPIMetadata",
      "description": "Handles AWS S3 container API metadata retrieval by sending a structured request and returning detailed results or specific error types. Operates with context objects and custom request/response types tailored for AWS API interactions. Used to fetch metadata for S3 containers in scenarios requiring precise error handling and protocol compliance.",
      "description_length": 346,
      "index": 1342,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContactMethods",
      "description": "Handles AWS request for retrieving contact methods, processing input parameters, and returning structured results. Operates with context objects, request records, and detailed error types specific to AWS service interactions. Used to fetch contact method configurations in systems requiring AWS service integration and error-aware responses.",
      "description_length": 341,
      "index": 1343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetCloudFormationStackRecords",
      "description": "Handles AWS CloudFormation stack record retrieval by sending structured requests and returning detailed results. Operates with context objects, custom request records, and complex error types specific to AWS API interactions. Used to fetch stack metadata for deployment tracking and infrastructure auditing.",
      "description_length": 307,
      "index": 1344,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetCertificates",
      "description": "Handles certificate retrieval requests by validating input, authenticating the context, and fetching results from a service. Operates on AWS context objects and structured request/response types specific to certificate management. Used to dynamically obtain certificate data in systems requiring secure, authenticated access to AWS certificate stores.",
      "description_length": 351,
      "index": 1345,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBundles",
      "description": "Handles AWS API requests to retrieve bundle information, returning structured results or specific exception types. Operates with context objects and custom request/response types defined in the Smaws_Lib framework. Used to fetch bundle data in scenarios requiring error-specific handling and integration with AWS services.",
      "description_length": 322,
      "index": 1346,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBuckets",
      "description": "Handles AWS S3 bucket listing requests by sending a structured HTTP query to the S3 service, processing the JSON response, and returning a typed result. Operates with context objects, request records, and error-specific types derived from AWS JSON protocol responses. Used to retrieve a list of S3 buckets associated with an AWS account under specific access controls.",
      "description_length": 368,
      "index": 1347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBucketMetricData",
      "description": "Handles AWS S3 bucket metric data retrieval by sending structured requests and parsing JSON responses. Operates with context objects, request records, and custom exception types to manage AWS API interactions. Used to fetch storage usage and access patterns for specific S3 buckets in monitoring and reporting workflows.",
      "description_length": 320,
      "index": 1348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBucketBundles",
      "description": "Handles AWS S3 bucket bundle requests by validating context and processing structured input, returning results or specific exception types. Operates with AWS context objects and custom request/response types tailored for S3 bucket operations. Used to fetch and manage bundle configurations associated with S3 buckets in a controlled, error-specific manner.",
      "description_length": 356,
      "index": 1349,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBucketAccessKeys",
      "description": "Handles AWS S3 bucket access key requests by validating context and processing structured input, returning results or specific exception types. Operates with AWS JSON protocol errors and custom exception types derived from S3 service responses. Used to retrieve access keys for a specified bucket in a controlled, error-aware manner.",
      "description_length": 333,
      "index": 1350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBlueprints",
      "description": "Handles AWS GetBlueprints API requests, returning structured results or specific error types based on the response. Operates with context and request objects, producing a result that includes blueprint data or detailed exception information. Used to retrieve available blueprint configurations from an AWS service, with explicit handling of access and validation errors.",
      "description_length": 370,
      "index": 1351,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetAutoSnapshots",
      "description": "Handles AWS EC2 auto snapshot requests by sending a structured query and returning detailed results or specific error conditions. Operates with context objects and custom request/response types tailored for EC2 operations. Used to programmatically retrieve and manage auto snapshot data within cloud infrastructure workflows.",
      "description_length": 325,
      "index": 1352,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetAlarms",
      "description": "Handles AWS IoT Greengrass v2 get alarms request with context, returning structured results or specific exception types. Operates on `Smaws_Lib.Context.t` and custom request types derived from AWS JSON protocols. Used to retrieve alarm data from IoT devices, validating inputs and handling service-specific errors.",
      "description_length": 314,
      "index": 1353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetActiveNames",
      "description": "Handles AWS service requests to retrieve active names, processing context and custom request types. Returns results or specific exception types based on service responses. Used to validate and fetch active name lists in cloud infrastructure management workflows.",
      "description_length": 262,
      "index": 1354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.ExportSnapshot",
      "description": "Handles AWS export snapshot requests, processing parameters and returning structured results or specific error types. Operates with context objects and custom exception types derived from AWS protocol responses. Used to manage snapshot exports in cloud infrastructure workflows, ensuring precise error handling and result validation.",
      "description_length": 333,
      "index": 1355,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.EnableAddOn",
      "description": "Handles the process of requesting an enable add-on operation, validating input, and returning structured results or specific error conditions. Operates with context objects and custom request/response types tied to add-on management. Used to integrate add-on features into a system while enforcing access controls and input validation.",
      "description_length": 335,
      "index": 1356,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DownloadDefaultKeyPair",
      "description": "Handles the retrieval of a default key pair by sending a structured request to an AWS-compatible service, processing the response, and managing specific error conditions. Operates with context objects and custom request/response types tailored for key pair operations. Used to fetch default key pairs in cloud deployment workflows where authentication and access control are enforced.",
      "description_length": 384,
      "index": 1357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DisableAddOn",
      "description": "Handles the cancellation of add-ons by sending a request to the service, processing the response, and returning specific error or success outcomes. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to manage add-on deactivation in systems requiring precise error handling and service interaction.",
      "description_length": 359,
      "index": 1358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachStaticIp",
      "description": "Handles the request to detach a static IP address from an EC2 instance, processing the associated AWS JSON protocol errors and specific exception types. Operates on context data and structured request/response types defined in the Smaws_Lib module. Used in scenarios where an application needs to programmatically manage static IP assignments in AWS infrastructure.",
      "description_length": 365,
      "index": 1359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachInstancesFromLoadBalancer",
      "description": "Handles the removal of specified instances from a load balancer by sending a structured request. Operates on AWS-specific data types such as context information and error-defined exceptions. Used to manage instance detachment in cloud infrastructure workflows where precise error handling is required.",
      "description_length": 301,
      "index": 1360,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachDisk",
      "description": "Handles disk detachment requests by validating input, checking permissions, and interacting with cloud infrastructure. Operates on structured request and result types, including error-specific variants for fault handling. Used to safely remove disks from instances while managing exceptions related to access, configuration, and service availability.",
      "description_length": 350,
      "index": 1361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachCertificateFromDistribution",
      "description": "Handles the process of detaching a certificate from a distribution by sending a structured request. It operates with AWS context and specific request/response types tailored for the operation. Used to manage certificate associations in cloud infrastructure configurations.",
      "description_length": 272,
      "index": 1362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteRelationalDatabaseSnapshot",
      "description": "Handles the deletion of a relational database snapshot by sending a structured request and returning a result or specific error conditions. Operates with AWS JSON protocol types and exception types defined in the Smaws_Lib module. Used to safely remove database snapshots when they are no longer needed, ensuring proper error handling for AWS-specific exceptions.",
      "description_length": 363,
      "index": 1363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteRelationalDatabase",
      "description": "Handles deletion of a relational database by sending a structured request and returning a result or specific error conditions. Operates with context information and custom exception types derived from AWS JSON protocols. Used to safely remove databases in cloud infrastructure workflows where precise error handling is required.",
      "description_length": 328,
      "index": 1364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteLoadBalancerTlsCertificate",
      "description": "Handles AWS API requests to remove a TLS certificate from a load balancer, processing structured input and returning results or specific error types. Operates with context data and custom exception types derived from AWS error responses. Used to manage certificate lifecycle in cloud infrastructure deployments.",
      "description_length": 311,
      "index": 1365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteLoadBalancer",
      "description": "Handles the deletion of a load balancer by sending a structured request and returning a result or specific exception types. Operates with context data and request objects tailored for AWS load balancer management. Used to safely remove load balancers while handling AWS-specific error conditions.",
      "description_length": 296,
      "index": 1366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteKnownHostKeys",
      "description": "Handles the removal of specified SSH host keys from a user's known hosts list. Operates on context objects and request structures containing key identifiers. Used to securely update or purge outdated or compromised host keys in AWS systems.",
      "description_length": 240,
      "index": 1367,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteKeyPair",
      "description": "Handles AWS key pair deletion by sending a request with context and a structured delete command. Operates on types like `delete_key_pair_request` and returns results or specific exception types related to AWS API interactions. Used to remove SSH key pairs from an AWS account with detailed error handling for common API failures.",
      "description_length": 329,
      "index": 1368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteInstanceSnapshot",
      "description": "Handles the deletion of instance snapshots by sending a structured request and returning a result or specific error types. Operates with context information and custom exception types derived from AWS JSON protocols. Used to manage resource cleanup in cloud infrastructure workflows.",
      "description_length": 283,
      "index": 1369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteInstance",
      "description": "Handles deletion requests for specific instances by validating context and input, returning results or detailed error conditions. Operates with context objects and structured request data, supporting precise error handling for AWS-related scenarios. Used to safely remove resources while managing exceptions like access denial, invalid input, and service failures.",
      "description_length": 364,
      "index": 1370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDomainEntry",
      "description": "Handles domain entry deletion by sending a request to the service, processing the response, and managing specific error conditions. Operates with context data, request structures, and result types tied to AWS JSON protocols. Used to remove DNS entries when validating user permissions and handling service-specific exceptions.",
      "description_length": 326,
      "index": 1371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDomain",
      "description": "Handles domain deletion requests by validating input, checking permissions, and interacting with the underlying service to execute the deletion. Works with context objects, custom exception types, and structured request/response data. Used to securely remove domains from a system while managing specific error conditions.",
      "description_length": 322,
      "index": 1372,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDistribution",
      "description": "Handles AWS CloudFront distribution deletion requests by validating context, processing the request, and returning results or specific exception types. Operates on AWS context objects and structured delete distribution inputs. Used to programmatically remove distributions with detailed error handling for common AWS API exceptions.",
      "description_length": 332,
      "index": 1373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDiskSnapshot",
      "description": "Handles deletion of disk snapshots by sending a structured request and returning a result or specific error types. Operates with context data and custom exception types derived from AWS JSON protocols. Used to manage storage resources in cloud environments with precise error handling.",
      "description_length": 285,
      "index": 1374,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDisk",
      "description": "Handles disk deletion requests by interacting with AWS services, returning detailed results or specific exception types based on the outcome. Operates with context objects and structured request/response types tailored for disk management. Used to safely remove disks from cloud infrastructure while handling AWS-specific error conditions.",
      "description_length": 339,
      "index": 1375,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteContainerService",
      "description": "Handles AWS S3 container deletion requests by validating context, processing input, and returning structured results or specific exception types. Operates with AWS context objects and custom exception types derived from S3 service responses. Used to enforce access controls and manage deletion workflows in cloud storage systems.",
      "description_length": 329,
      "index": 1376,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteContainerImage",
      "description": "Handles AWS ECR container image deletion by sending a structured request and returning detailed results or specific exception types. Operates with context objects and custom request/response types tailored for ECR operations. Used to programmatically remove images from a repository while handling AWS-specific error conditions.",
      "description_length": 328,
      "index": 1377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteContactMethod",
      "description": "Handles deletion of contact methods by sending a structured request and returning detailed results or specific exceptions. Operates with context, request, and result types defined in related modules. Used to remove email or phone verification methods from user accounts in a secure authentication system.",
      "description_length": 304,
      "index": 1378,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteCertificate",
      "description": "Handles certificate deletion requests by validating input, checking permissions, and interacting with the underlying service. Operates on context objects, certificate request structures, and error-specific types derived from AWS JSON protocols. Used to securely remove certificates from a system while handling specific exception cases like access denial or not found errors.",
      "description_length": 375,
      "index": 1379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteBucketAccessKey",
      "description": "Removes an access key from a specified S3 bucket using AWS JSON protocol, handling specific error cases such as access denial, invalid input, and resource not found. It operates on AWS context objects and request structures tailored for S3 bucket access management. This function is used to securely revoke user credentials in AWS environments.",
      "description_length": 344,
      "index": 1380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteBucket",
      "description": "Handles AWS S3 bucket deletion requests by sending a structured HTTP request and returning a result that includes either a success response or specific error conditions such as access denial, invalid input, or resource not found. Operates with context data, a delete bucket request object, and various error types defined in the Smaws_Lib library. Used to programmatically remove S3 buckets while handling AWS-specific exceptions explicitly.",
      "description_length": 441,
      "index": 1381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteAutoSnapshot",
      "description": "Handles deletion requests for auto snapshots by validating input, checking permissions, and executing the deletion process. Operates on context objects, request records, and various exception types specific to AWS services. Used to remove outdated or unnecessary snapshots in cloud storage systems.",
      "description_length": 298,
      "index": 1382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteAlarm",
      "description": "Handles deletion requests for alarms by validating input, checking permissions, and executing the deletion process. Operates on custom request and result types specific to the alarm management system. Used to safely remove alarms in response to user-initiated or automated cleanup workflows.",
      "description_length": 291,
      "index": 1383,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateRelationalDatabaseSnapshot",
      "description": "Handles the creation of a relational database snapshot by sending a structured request and returning a result or specific error conditions. Operates with context data and custom exception types derived from AWS service responses. Used to capture the state of a database at a given point in time for backup or migration purposes.",
      "description_length": 328,
      "index": 1384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateRelationalDatabaseFromSnapshot",
      "description": "Handles the creation of a relational database from a snapshot using a provided context and request structure. Operates on AWS-specific types such as context, request, and result, along with error variants for fault handling. Used to initialize databases in cloud environments where snapshot-based recovery or duplication is required.",
      "description_length": 333,
      "index": 1385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateRelationalDatabase",
      "description": "Handles database creation requests by validating input, checking permissions, and initiating the setup process. Operates on context objects, request records, and result types specific to relational database provisioning. Used to securely launch new databases within an AWS environment, ensuring proper error handling for access, configuration, and service-related issues.",
      "description_length": 371,
      "index": 1386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateLoadBalancerTlsCertificate",
      "description": "Handles TLS certificate requests for load balancers by validating input, authenticating the context, and returning structured results or specific AWS error types. Operates on custom request and result records, along with AWS-specific exception types. Used to integrate SSL/TLS configuration into infrastructure setup workflows.",
      "description_length": 327,
      "index": 1387,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateLoadBalancer",
      "description": "Handles the creation of a load balancer by sending a structured request and returning a result or specific error types. Operates with context data and custom request/response types tailored for AWS load balancer operations. Used to manage infrastructure setup in cloud environments with precise error handling for AWS-specific exceptions.",
      "description_length": 338,
      "index": 1388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateKeyPair",
      "description": "Handles key pair creation requests by validating input, interacting with AWS services, and returning results or specific exception types. Operates on context objects and structured request data. Used to generate and manage cryptographic key pairs in cloud infrastructure workflows.",
      "description_length": 281,
      "index": 1389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateInstanceSnapshot",
      "description": "Handles the creation of instance snapshots by sending a structured request and returning a result or specific error types. Operates with context data and custom request/response types related to instance management. Used to capture the state of an instance for backup or migration purposes.",
      "description_length": 290,
      "index": 1390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateInstancesFromSnapshot",
      "description": "Handles the creation of EC2 instances based on a snapshot, accepting a context and request structure. Processes AWS JSON responses and specific exception types related to permissions, account setup, input validation, and service errors. Used to launch instances in scenarios where data persistence from a snapshot is required.",
      "description_length": 326,
      "index": 1391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateInstances",
      "description": "Handles AWS EC2 instance creation requests by validating input, checking permissions, and initiating instance provisioning. Operates on context objects and structured request data, returning detailed results or specific exception types. Used to manage user-driven instance launch workflows within cloud infrastructure systems.",
      "description_length": 326,
      "index": 1392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateGUISessionAccessDetails",
      "description": "Handles AWS API requests for generating GUI session access details, processing context and request parameters to return session-specific credentials. Operates with AWS context objects and structured request/response types specific to session management. Used to securely grant temporary access to GUI sessions in cloud-based applications.",
      "description_length": 338,
      "index": 1393,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDomainEntry",
      "description": "Handles domain creation requests by validating input, checking permissions, and interacting with AWS services. Operates on context objects, domain entry requests, and various exception types specific to AWS operations. Used to securely register new domains within a managed cloud environment, ensuring compliance with service constraints and access controls.",
      "description_length": 358,
      "index": 1394,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDomain",
      "description": "Handles domain creation requests by validating input, checking permissions, and interacting with AWS services to provision domains. Operates on context objects and structured request data, returning detailed results or specific exception types. Used to manage domain setup in cloud infrastructure workflows where access control and error handling are critical.",
      "description_length": 360,
      "index": 1395,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDistribution",
      "description": "Handles AWS CloudFront distribution creation by sending a request and returning detailed results or specific exception types. Operates with context objects and structured request data. Used to programmatically manage distribution setup with precise error handling for AWS service interactions.",
      "description_length": 293,
      "index": 1396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDiskSnapshot",
      "description": "Handles the creation of disk snapshots by sending a structured request and returning a result or specific error types. Operates with context information and custom exception types derived from AWS JSON protocols. Used to capture the state of a disk at a given point in time for backup or migration purposes.",
      "description_length": 307,
      "index": 1397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDiskFromSnapshot",
      "description": "Handles the creation of a disk from a snapshot by sending a structured request and returning a result or specific exception types. Operates with context data and custom request/response types tied to disk creation workflows. Used in cloud infrastructure management to provision storage based on existing snapshots.",
      "description_length": 314,
      "index": 1398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDisk",
      "description": "Handles AWS EC2 disk creation requests by validating input, interacting with the cloud infrastructure, and returning structured results or specific error conditions. Operates on custom request and result types derived from AWS JSON protocols. Used to programmatically provision storage volumes with detailed error reporting for operational and authentication issues.",
      "description_length": 366,
      "index": 1399,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContainerServiceRegistryLogin",
      "description": "Provides functions to request credentials for accessing a container service registry, handling specific AWS JSON-based errors and exceptions. Operates with context objects and structured request/response types related to container service authentication. Used to authenticate and authorize access in cloud-native application deployment workflows.",
      "description_length": 346,
      "index": 1400,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContainerServiceDeployment",
      "description": "Handles AWS ECS deployment requests by validating input, constructing deployment configurations, and returning structured results. Operates on context objects, deployment requests, and error-specific types derived from AWS JSON protocols. Used to initiate container service deployments in cloud infrastructure workflows.",
      "description_length": 320,
      "index": 1401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContainerService",
      "description": "Handles AWS S3 container creation requests by validating input, authenticating the user, and interacting with the underlying service. Operates on context objects, request records, and various exception types specific to AWS API interactions. Used to programmatically set up S3 buckets with configured permissions and parameters.",
      "description_length": 328,
      "index": 1402,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContactMethod",
      "description": "Handles the creation of contact methods by sending a request to an external service, returning a result or specific exception types. Operates with context objects and structured request/response data. Used to manage user contact information in a compliance-driven system.",
      "description_length": 271,
      "index": 1403,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateCloudFormationStack",
      "description": "Handles AWS CloudFormation stack creation by sending a structured request and returning a result or specific error types. Operates with context data and a custom request type containing stack configuration details. Used to deploy infrastructure templates with precise error handling for AWS-specific exceptions.",
      "description_length": 311,
      "index": 1404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateCertificate",
      "description": "Handles certificate creation requests by validating input, interacting with AWS services, and returning structured results or specific exception types. Operates on context objects and certificate request data structures to manage the issuance process. Used to generate X.509 certificates with defined attributes in secure deployment workflows.",
      "description_length": 343,
      "index": 1405,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateBucketAccessKey",
      "description": "Handles AWS IAM access key creation for S3 buckets, accepting context and request parameters to generate a new access key. Operates on AWS JSON protocol errors and specific exception types derived from AWS service responses. Used to programmatically assign access keys to IAM users within S3 bucket policies.",
      "description_length": 308,
      "index": 1406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateBucket",
      "description": "Handles AWS S3 bucket creation requests by sending a JSON-formatted HTTP POST to the appropriate endpoint. Operates on context objects, bucket configuration data, and error-specific types derived from AWS service responses. Used to programmatically establish new S3 buckets with defined access policies and region settings.",
      "description_length": 323,
      "index": 1407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CopySnapshot",
      "description": "Handles the creation of a snapshot copy by sending a request to the AWS service, processing the response, and managing specific error conditions. Operates with context data, request parameters, and result types defined by the Smaws_Lib library. Used to replicate snapshots across regions or accounts with detailed error reporting for operational issues.",
      "description_length": 353,
      "index": 1408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CloseInstancePublicPorts",
      "description": "Handles the request to close specific public ports on an EC2 instance, accepting a context and a structured request. Operates on AWS-specific data types such as access_denied_exception and invalid_input_exception. Used to enforce security policies by programmatically restricting network access to instances.",
      "description_length": 308,
      "index": 1409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachStaticIp",
      "description": "Handles the request to associate a static IP address with an EC2 instance, processing input parameters and returning a result or specific error types. Operates with context data and structured request/response types related to AWS EC2 operations. Used in scenarios requiring programmatic IP assignment in cloud infrastructure.",
      "description_length": 326,
      "index": 1410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachLoadBalancerTlsCertificate",
      "description": "Handles the process of attaching an SSL/TLS certificate to a load balancer by sending a structured request and returning a result or specific error types. It operates with context data, request payloads, and detailed error responses defined in the Smaws_Lib library. Used in scenarios where secure communication via HTTPS must be dynamically configured for cloud-based load balancers.",
      "description_length": 384,
      "index": 1411,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachInstancesToLoadBalancer",
      "description": "Handles the creation of a request to attach instances to a load balancer, processing input parameters and returning a result or specific AWS error types. Operates with context data, request structures, and AWS-specific exception types. Used to integrate EC2 instances with a load balancer in cloud infrastructure workflows.",
      "description_length": 323,
      "index": 1412,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachDisk",
      "description": "Handles disk attachment requests by validating input, checking permissions, and interacting with underlying storage systems. Operates on custom request and result types specific to disk attachment workflows. Used to securely attach volumes to instances in cloud infrastructure, handling exceptions such as access denial, invalid inputs, and service failures.",
      "description_length": 358,
      "index": 1413,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachCertificateToDistribution",
      "description": "Handles the process of associating an SSL certificate with a CloudFront distribution by sending a structured request. Operates on types such as `attach_certificate_to_distribution_request` and `attach_certificate_to_distribution_result`, incorporating specific error types for AWS-related failures. Used to securely configure distributions with custom certificates in deployment workflows.",
      "description_length": 389,
      "index": 1414,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.AllocateStaticIp",
      "description": "Handles the request to allocate a static IP address in a cloud environment, returning a result or specific exception types based on the outcome. Operates with context data and structured request parameters for cloud resource management. Used to dynamically assign static IPs during infrastructure setup or scaling operations.",
      "description_length": 325,
      "index": 1415,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ValidateStateMachineDefinition",
      "description": "Handles validation of state machine definitions by checking input against specific rules and constraints. Operates on context objects and input records containing state machine configurations. Used to ensure compliance with defined schema before processing or deployment.",
      "description_length": 271,
      "index": 1416,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.UpdateStateMachineAlias",
      "description": "Handles the request to update a state machine's alias, validating inputs and managing potential errors such as conflicts, invalid ARNs, and resource not found conditions. Operates on context objects and structured input/output types specific to AWS Step Functions. Used to modify alias mappings in a state machine configuration while enforcing strict validation rules.",
      "description_length": 368,
      "index": 1417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.UpdateStateMachine",
      "description": "Handles state machine updates by validating input, checking resource existence, and managing conflicts. Operates on context objects and structured update parameters, returning detailed outcomes or specific error types. Used to enforce state machine consistency during configuration changes or lifecycle transitions.",
      "description_length": 315,
      "index": 1418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.UpdateMapRun",
      "description": "Handles AWS IoT Greengrass V2 update map run operations by validating input, checking resource existence, and executing updates. Works with context objects, input records, and error types specific to IoT Greengrass. Processes ARN-based resource updates and returns structured outputs with detailed error reporting.",
      "description_length": 314,
      "index": 1419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.UntagResource",
      "description": "Handles AWS resource untagging by accepting a context and input parameters, returning a result with output or specific error types. Operates on AWS ARN structures and resource identifiers. Used to remove tags from EC2 instances, S3 buckets, or RDS databases via AWS API calls.",
      "description_length": 276,
      "index": 1420,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.TestState",
      "description": "Handles AWS state machine execution requests by validating input and returning structured outputs. Operates on context objects and custom error types derived from AWS JSON protocols. Processes invalid ARNs, definitions, execution inputs, and validation exceptions during state transitions.",
      "description_length": 289,
      "index": 1421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.TagResource",
      "description": "Handles AWS resource tagging by accepting a context and input parameters, then returning a result with either a success response or specific error variants. Operates on AWS ARN structures and tag configurations. Used to apply or update tags on resources like EC2 instances or S3 buckets within an AWS environment.",
      "description_length": 313,
      "index": 1422,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.StopExecution",
      "description": "Handles termination requests for specific execution instances, validating context and input parameters. Operates with AWS context objects and custom error types related to execution states and ARN validity. Used to gracefully stop running processes in distributed systems with explicit error handling for invalid or non-existent executions.",
      "description_length": 340,
      "index": 1423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.StartSyncExecution",
      "description": "Handles the initiation of a state machine execution by validating input parameters, checking the state machine's existence and status, and returning the execution details or specific error conditions. Operates on context objects, execution input structures, and error types related to invalid ARNs, execution inputs, state machine states, and types. Used to start asynchronous workflows in a state machine service, ensuring proper validation before execution.",
      "description_length": 459,
      "index": 1424,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.StartExecution",
      "description": "Handles the initiation of state machine executions by validating input, checking for existing executions, and managing rate limits. Operates on context objects and structured input/output types specific to AWS Step Functions. Directly interacts with AWS infrastructure to start workflows, ensuring proper error handling for invalid inputs, duplicate executions, and resource constraints.",
      "description_length": 387,
      "index": 1425,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.SendTaskSuccess",
      "description": "Handles the submission of task success status to a service, accepting context and input parameters to validate and process the response. Operates on custom types representing task input, output, and various error conditions. Used to confirm task completion in distributed workflows where explicit success reporting is required.",
      "description_length": 327,
      "index": 1426,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.SendTaskHeartbeat",
      "description": "Handles heartbeat requests for task coordination, validating tokens and checking task status. Operates on context objects, input structures containing task identifiers, and output structures for response data. Used to extend task lifetimes and prevent timeouts in distributed processing workflows.",
      "description_length": 297,
      "index": 1427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.SendTaskFailure",
      "description": "Handles AWS SWF task failure requests by validating context and input, then returning structured outputs or specific error types. Operates with SWF task identifiers, execution tokens, and AWS JSON protocol errors. Used to signal task failures in workflow executions, ensuring proper error handling and state transitions.",
      "description_length": 320,
      "index": 1428,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.RedriveExecution",
      "description": "Handles the resubmission of failed or stopped AWS Step Functions executions by validating input, checking execution status, and initiating a new run. Operates on context objects, execution input structures, and error-specific types derived from AWS JSON protocols. Used to retry specific workflow instances after failure or manual intervention.",
      "description_length": 344,
      "index": 1429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.PublishStateMachineVersion",
      "description": "Handles the request to publish a new version of a state machine, validating inputs and managing AWS-specific error responses. Operates on context objects and structured input/output types related to state machine versions. Used to ensure atomic updates and prevent conflicts during deployment.",
      "description_length": 293,
      "index": 1430,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListTagsForResource",
      "description": "Handles AWS ListTagsForResource requests by accepting a context and input parameters, returning tags associated with a specified resource. Operates on AWS ARN identifiers and structured input/output types defined in the protocol. Used to retrieve metadata tags for resources like S3 buckets or EC2 instances.",
      "description_length": 308,
      "index": 1431,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListStateMachines",
      "description": "Handles state machine requests by processing input configurations and returning structured outputs. Operates on context objects and custom input/output records specific to state machine workflows. Used to retrieve and manage state machine definitions within a service-oriented architecture.",
      "description_length": 290,
      "index": 1432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListStateMachineVersions",
      "description": "Handles retrieval of state machine version lists from AWS Step Functions, accepting a context and input parameters. Operates on AWS JSON protocol errors, invalid ARN, token, and validation exceptions. Used to fetch version histories for specific state machines in distributed workflow systems.",
      "description_length": 293,
      "index": 1433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListStateMachineAliases",
      "description": "Handles retrieval of state machine aliases using a context and input parameters. Operates on custom error types and result structures derived from AWS JSON protocols. Used to fetch alias lists for specific state machines in a controlled, error-aware manner.",
      "description_length": 257,
      "index": 1434,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ListMapRuns",
      "description": "Handles AWS Step Functions list map runs operation, accepting context and input to retrieve execution details. Processes execution ARNs and tokens, returning structured outputs with error variants for invalid inputs. Used to monitor and manage the state of map runs within a workflow.",
      "description_length": 284,
      "index": 1435,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ListExecutions",
      "description": "Provides functions to request and handle execution lists from a state machine, using context and input parameters. Operates with types such as `invalid_arn`, `invalid_token`, and `resource_not_found` to represent specific error conditions. Used to retrieve execution data while managing errors related to ARN validation, token authenticity, and state machine existence.",
      "description_length": 369,
      "index": 1436,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListActivities",
      "description": "Handles AWS JSON-based activity requests by validating tokens and fetching activity lists. Operates on context objects and input records containing session tokens and pagination parameters. Used to retrieve user-specific activity data in a secure, authenticated API flow.",
      "description_length": 271,
      "index": 1437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.GetExecutionHistory",
      "description": "Handles retrieval of execution history from a system, accepting context and input parameters to fetch structured output. Operates with custom types such as execution_does_not_exist, invalid_arn, and invalid_token for error handling. Used to trace workflow executions by querying specific execution identifiers and tokens.",
      "description_length": 321,
      "index": 1438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.GetActivityTask",
      "description": "Handles the retrieval of an activity task from a workflow system, processing input parameters and returning structured output or specific error conditions. Operates on custom input and output types derived from AWS JSON protocols, including error variants for invalid states. Used to fetch and manage task assignments in distributed workflow execution.",
      "description_length": 352,
      "index": 1439,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeStateMachineForExecution",
      "description": "Handles state machine description requests by validating context and input, returning detailed execution information or specific error types. Operates with context objects and structured input containing execution ARN. Used to retrieve state machine configurations during workflow execution validation.",
      "description_length": 302,
      "index": 1440,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeStateMachineAlias",
      "description": "Handles AWS DescribeStateMachineAlias requests by validating input, querying state machine aliases, and returning structured outputs. Operates on context objects, input records, and error-specific types related to ARN validation and resource existence. Used to retrieve detailed information about state machine aliases in AWS Step Functions workflows.",
      "description_length": 351,
      "index": 1441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeStateMachine",
      "description": "Handles AWS Step Functions `DescribeStateMachine` API requests, validating input and returning structured outputs. Processes context and input records, including error cases like invalid ARNs and non-existent state machines. Used to retrieve detailed information about a specific state machine configuration.",
      "description_length": 308,
      "index": 1442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeMapRun",
      "description": "Handles AWS EC2 describe-map-run requests by validating ARNs and fetching run details. Processes input containing map run identifiers and returns structured output with run metadata. Manages errors such as invalid ARN formats and missing resources.",
      "description_length": 248,
      "index": 1443,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeExecution",
      "description": "Handles AWS Step Functions `DescribeExecution` requests by validating context and input, then returning execution details or specific error types. Operates with `Smaws_Lib.Context.t` and custom input/output records tied to AWS JSON protocols. Used to retrieve real-time status and metadata of running or completed state machine executions.",
      "description_length": 339,
      "index": 1444,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeActivity",
      "description": "Handles AWS Step Functions `DescribeActivity` requests by validating context and input, then returning structured output or specific errors like missing activity or invalid ARN. Operates on `Smaws_Lib.Context.t` and custom input/output records tied to AWS JSON protocols. Used to fetch detailed information about a specific activity resource in a workflow system.",
      "description_length": 363,
      "index": 1445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteStateMachineVersion",
      "description": "Handles the deletion of a specific version of a state machine by validating the provided ARN, checking for conflicts, and returning the result of the operation. Operates on context data, input parameters, and custom exception types related to invalid ARNs, conflicts, and validation errors. Used in workflows requiring controlled removal of state machine versions with explicit error handling.",
      "description_length": 393,
      "index": 1446,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteStateMachineAlias",
      "description": "Handles the request to delete a state machine alias, validating inputs and managing AWS JSON responses. Operates with context, input records, and custom error types related to AWS Step Functions. Used to remove aliases associated with specific state machine ARNs in a controlled, error-aware manner.",
      "description_length": 299,
      "index": 1447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteStateMachine",
      "description": "Handles the initiation of a state machine deletion process by validating input and context, returning success or specific error types such as invalid ARN or validation failures. Operates on custom input and output records, along with AWS JSON error types and domain-specific exceptions. Used to manage the lifecycle of state machine removal in a distributed workflow system.",
      "description_length": 374,
      "index": 1448,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteActivity",
      "description": "Handles deletion requests for specific activity resources by validating and processing input parameters. Operates on context objects and custom input/output types related to activity management. Used to remove active records from a system, ensuring proper error handling for invalid or malformed ARNs.",
      "description_length": 301,
      "index": 1449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.CreateStateMachineAlias",
      "description": "Handles the creation of an alias for a state machine by validating input, checking resource existence, and managing conflicts. Operates on context, input records, and various error types specific to AWS Step Functions. Used to safely register new aliases while preventing duplicates or invalid configurations.",
      "description_length": 309,
      "index": 1450,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.CreateStateMachine",
      "description": "Handles the creation of a state machine by validating input parameters and interacting with AWS services. Processes context and input structures to produce a result that includes either a success response or specific error conditions related to state machine configuration. Used to enforce AWS-compliant state machine setup and error reporting during deployment.",
      "description_length": 362,
      "index": 1451,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.CreateActivity",
      "description": "Handles activity creation requests with validation for name, tags, and limits. Processes input containing activity details and returns structured outputs or specific error variants. Used to enforce business rules during activity setup in a workflow system.",
      "description_length": 256,
      "index": 1452,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.UpdateCertificateOptions",
      "description": "Handles AWS certificate update requests by validating and processing options, including ARN checks, state validation, and resource existence. Operates on context objects and custom exception types derived from AWS JSON protocols. Used to enforce constraints and manage errors during certificate configuration changes.",
      "description_length": 317,
      "index": 1453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.ResendValidationEmail",
      "description": "Handles the submission of a request to resend a validation email for a domain, using a context object and a specific request structure. Operates with types such as `Smaws_Lib.Context.t` and custom exception types for error handling. Used to trigger email validation workflows in AWS Certificate Manager integration.",
      "description_length": 315,
      "index": 1454,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.RequestCertificate",
      "description": "Handles certificate request operations by sending a structured request to a service, processing the response, and returning specific error types based on validation and service constraints. Works with context objects, request and response records, and custom exception types derived from AWS JSON protocols. Used to generate and validate SSL/TLS certificate requests with domain-specific constraints and tagging policies.",
      "description_length": 421,
      "index": 1455,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.RenewCertificate",
      "description": "Handles certificate renewal requests by interacting with AWS services, validating ARNs, and managing error responses. Operates on context objects and structured renewal requests, returning detailed error states. Used to update SSL/TLS certificates in cloud infrastructure workflows.",
      "description_length": 282,
      "index": 1456,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.RemoveTagsFromCertificate",
      "description": "Removes specified tags from an AWS certificate resource using a structured request. It operates on AWS context objects and custom exception types derived from AWS JSON protocols. This function is used to manage tag assignments on certificates in compliance with AWS tagging policies.",
      "description_length": 283,
      "index": 1457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.PutAccountConfiguration",
      "description": "Handles AWS S3 account configuration updates by sending a request with specific parameters. Operates on context objects and custom exception types derived from AWS JSON protocols. Used to apply bucket policies or governance settings under controlled access conditions.",
      "description_length": 268,
      "index": 1458,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.ListTagsForCertificate",
      "description": "Handles AWS ACM certificate tag retrieval by sending a structured request and returning a response with associated tags. Operates on AWS context and specific request/response types defined in the Smaws_Lib framework. Processes invalid ARN and resource not found exceptions during the tag lookup process.",
      "description_length": 303,
      "index": 1459,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.ListCertificates",
      "description": "Handles AWS ACM certificate listing by sending a structured request and returning a parsed response. Operates with context objects, request records, and error types specific to AWS JSON protocols. Used to retrieve certificate metadata from AWS ACM within a programmatic workflow.",
      "description_length": 279,
      "index": 1460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.ImportCertificate",
      "description": "Handles certificate import requests by validating ARN formats, checking parameter constraints, and managing tag policies. Operates on context objects, import certificate requests, and various exception types related to certificate configuration. Used to enforce AWS-specific validation rules during certificate deployment workflows.",
      "description_length": 332,
      "index": 1461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.GetCertificate",
      "description": "Handles certificate retrieval requests by validating ARNs, checking for ongoing operations, and fetching certificate data from AWS services. Operates on context objects, request structures, and error-specific types derived from AWS JSON protocols. Used to securely obtain X.509 certificate information in cloud infrastructure workflows.",
      "description_length": 336,
      "index": 1462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.GetAccountConfiguration",
      "description": "Handles AWS account configuration retrieval by sending a request using a provided context. Operates with AWS JSON protocol errors, access denied exceptions, and throttling exceptions. Used to fetch account settings in scenarios requiring explicit permission checks and rate limiting awareness.",
      "description_length": 293,
      "index": 1463,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.ExportCertificate",
      "description": "Handles certificate export requests by validating ARNs, checking for ongoing operations, and retrieving certificate data from AWS. Operates on context objects, export request structures, and error-specific types. Used to securely fetch and manage certificate information in compliance with AWS service constraints.",
      "description_length": 314,
      "index": 1464,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.DescribeCertificate",
      "description": "Handles AWS Certificate Manager certificate description requests by validating ARNs and fetching detailed certificate information. Operates on context objects and structured request/response types specific to AWS JSON protocols. Used to retrieve certificate metadata in cloud infrastructure management workflows.",
      "description_length": 312,
      "index": 1465,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.DeleteCertificate",
      "description": "Handles the initiation of a certificate deletion request by validating context and parameters, and returns a result indicating success or specific AWS-related error conditions. Operates with AWS context objects and structured delete request data. Used to manage certificate lifecycle in AWS ACM by safely triggering removal and handling access and resource conflicts.",
      "description_length": 367,
      "index": 1466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.AddTagsToCertificate",
      "description": "Handles the addition of tags to an AWS certificate resource, accepting a context and a request structure. Operates with AWS-specific error types and certificate-related data structures. Used to manage tag policies and enforce constraints during certificate tagging operations.",
      "description_length": 276,
      "index": 1467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.UntagQueue",
      "description": "Handles queue request operations with specific error handling for invalid addresses, security issues, and queue existence. Operates on context objects and custom request types to manage AWS SQS interactions. Processes requests with detailed error reporting for throttling and unsupported actions.",
      "description_length": 296,
      "index": 1468,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.TagQueue",
      "description": "Handles queue operations by sending requests to a tag queue system, returning detailed error outcomes based on specific validation and service conditions. Works with context objects and structured request data to manage interactions with queue infrastructure. Used to validate and execute tag-related commands while enforcing access controls and service limits.",
      "description_length": 361,
      "index": 1469,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.StartMessageMoveTask",
      "description": "Handles the initiation of message move tasks by validating input parameters, checking resource existence, and managing error conditions such as invalid addresses, security issues, and throttling. Operates on context objects, request records, and custom error types derived from AWS JSON protocols. Used to move messages between queues while enforcing access controls and rate limits.",
      "description_length": 383,
      "index": 1470,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.SetQueueAttributes",
      "description": "Handles AWS SQS set queue attributes requests by validating and applying attribute updates. Operates on context objects and structured request data, ensuring compliance with AWS JSON protocols. Processes specific errors such as invalid attribute names, values, and queue existence checks.",
      "description_length": 288,
      "index": 1471,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.SendMessageBatch",
      "description": "Handles batch submission of messages to a messaging service, supporting error-specific handling for invalid entries, security issues, and service limits. Operates on structured request and result types derived from AWS JSON protocols. Used to send multiple messages atomically while managing distinct entry IDs and avoiding throttling or invalid format errors.",
      "description_length": 360,
      "index": 1472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.SendMessage",
      "description": "Handles message sending with detailed error handling, including validation checks for address, message content, and security settings. Operates on context objects and structured request/response types specific to message delivery. Used to interface with messaging queues while managing AWS-specific error conditions during message transmission.",
      "description_length": 344,
      "index": 1473,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.RemovePermission",
      "description": "Handles permission removal requests by validating context and input, then executing the operation with specific error handling for address, security, queue, throttling, and unsupported scenarios. Operates on custom error types and a context record containing session and configuration data. Used to enforce access control policies in message queue systems.",
      "description_length": 356,
      "index": 1474,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.ReceiveMessage",
      "description": "Handles message retrieval from a queue by sending a request with context and a specific message request structure. It processes results and errors related to queue access, encryption, and service limits. Returns detailed outcomes including message content, delivery counts, and various error conditions specific to the messaging service.",
      "description_length": 337,
      "index": 1475,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.PurgeQueue",
      "description": "Handles queue purging requests by validating context, checking queue existence, and managing purge in progress states. Processes specific error types such as invalid addresses, security issues, and throttled requests. Ensures safe queue state transitions during purge operations.",
      "description_length": 279,
      "index": 1476,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.ListQueues",
      "description": "Handles AWS SQS list queues operation, processing context and request to retrieve queue URLs. Accepts specific error types including invalid credentials, throttling, and unsupported actions. Used to enumerate SQS queues within a given AWS account and region.",
      "description_length": 258,
      "index": 1477,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ListQueueTags",
      "description": "Handles AWS SQS list queue tags requests, processing context and request parameters to retrieve tag information. Operates with AWS context objects, request records, and custom error types specific to SQS operations. Used to fetch tags associated with a queue, validating permissions and handling service-specific errors.",
      "description_length": 320,
      "index": 1478,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ListMessageMoveTasks",
      "description": "Handles the retrieval of message move tasks by sending a structured request and returning a result with specific error types. Operates on context data and custom request/response types for message management. Used to fetch task details in scenarios involving message migration or reassignment.",
      "description_length": 293,
      "index": 1479,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ListDeadLetterSourceQueues",
      "description": "Handles AWS SQS operations to retrieve dead-letter source queues for a given queue, supporting error handling for invalid inputs, queue existence, and service restrictions. Operates on AWS context and request structures specific to SQS. Used to diagnose message routing issues by identifying which queues are sending messages to a dead-letter queue.",
      "description_length": 349,
      "index": 1480,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.GetQueueUrl",
      "description": "Handles AWS SQS queue URL retrieval with context-aware requests, returning structured results or specific error types like invalid security configurations or non-existent queues. Operates on custom request and result types derived from AWS JSON protocols. Used to dynamically obtain queue endpoints for message processing or administrative tasks.",
      "description_length": 346,
      "index": 1481,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.GetQueueAttributes",
      "description": "Handles AWS SQS queue attribute retrieval by sending a structured request and returning detailed results or specific error conditions. Operates with context objects, attribute requests, and error types defined by the AWS JSON protocol. Used to fetch queue metadata such as visibility timeout or delay seconds in distributed messaging systems.",
      "description_length": 342,
      "index": 1482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.DeleteQueue",
      "description": "Handles queue deletion requests with detailed error handling for invalid inputs, security issues, and queue state. Operates on context objects and specific request types related to queue management. Used to safely remove queues while reporting precise failure reasons to the caller.",
      "description_length": 282,
      "index": 1483,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.DeleteMessageBatch",
      "description": "Handles the submission of batch delete requests for messages in a messaging queue, validating and processing each entry's uniqueness and validity. Operates on structured request and result types specific to message deletion workflows. Used to remove multiple messages at once while enforcing constraints like distinct entry IDs and queue existence.",
      "description_length": 348,
      "index": 1484,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.DeleteMessage",
      "description": "Handles deletion of messages from a queue by sending a request with specific validation checks. Operates on message identifiers, receipt handles, and queue contexts. Used to remove a specific message after it has been successfully processed, ensuring proper resource management.",
      "description_length": 278,
      "index": 1485,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.CreateQueue",
      "description": "Handles queue creation requests with detailed error handling for AWS SQS-specific issues. Operates on context objects and structured request data, returning results with explicit success or failure cases. Used to enforce AWS SQS naming conventions, validate attributes, and manage rate limits during queue provisioning.",
      "description_length": 319,
      "index": 1486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ChangeMessageVisibilityBatch",
      "description": "Handles batch updates to message visibility in a queue by accepting a list of message entries and their new visibility timeouts. Operates on structured request and result types specific to AWS SQS batch operations. Processes errors such as invalid entry IDs, duplicate IDs, and throttled requests during the visibility update process.",
      "description_length": 334,
      "index": 1487,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.ChangeMessageVisibility",
      "description": "Handles message visibility updates for queue systems, processing requests with context and returning detailed status outcomes. Operates on structured request data and error-specific types derived from AWS JSON protocols. Used to adjust message visibility timeouts in distributed task processing workflows.",
      "description_length": 305,
      "index": 1488,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.CancelMessageMoveTask",
      "description": "Handles the cancellation of a message move task by sending a request to the service, validating input, and managing specific error conditions. Operates on context objects, request records, and custom error types related to invalid addresses, security issues, and resource availability. Used to abort ongoing message migration processes in distributed systems.",
      "description_length": 359,
      "index": 1489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.AddPermission",
      "description": "Handles permission request operations for message queues, validating addresses, security settings, and queue existence. Processes structured requests and returns detailed error outcomes for invalid or restricted actions. Used to enforce access control in distributed messaging systems.",
      "description_length": 285,
      "index": 1490,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.UpdateTrail",
      "description": "Handles AWS CloudTrail update operations by validating and applying configuration changes to trails, including event selectors, S3 buckets, and logging settings. Works with context objects, request structures, and detailed error types specific to AWS CloudTrail API interactions. Used to modify existing trails in response to policy updates, compliance requirements, or operational changes.",
      "description_length": 390,
      "index": 1491,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.UpdateEventDataStore",
      "description": "Handles the modification of event data store configurations by accepting a context and a request structure, returning a result that includes success responses or specific error conditions. It operates with custom exception types and a request/response structure tailored for AWS CloudTrail operations. Used to update event selectors, insight selectors, and encryption settings for an existing data store.",
      "description_length": 404,
      "index": 1492,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.UpdateChannel",
      "description": "Provides functions to request updates to a specific channel, handling various error conditions such as invalid ARNs, missing channels, and parameter issues. Operates with context objects and custom exception types derived from AWS JSON protocols. Used to manage channel state changes in a controlled, error-aware manner during system updates.",
      "description_length": 342,
      "index": 1493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StopLogging",
      "description": "Handles requests to stop logging for a specific trail, validating context and processing responses. Works with custom exception types and AWS JSON protocol errors. Used to manage logging cessation in cloud trail configurations with precise error handling.",
      "description_length": 255,
      "index": 1494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StopImport",
      "description": "Handles AWS API requests for stopping imports, validating context, and returning structured responses. Processes custom exception types and specific request/response records tied to import operations. Used to manage termination of ongoing import tasks in a cloud infrastructure context.",
      "description_length": 286,
      "index": 1495,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StopEventDataStoreIngestion",
      "description": "Handles the ingestion of stop event data into a specified data store by validating context and request parameters. Processes structured data including event ARNs, categories, and status checks, and returns detailed responses or specific exception types. Used to ensure proper logging and tracking of stop events within AWS-based systems.",
      "description_length": 337,
      "index": 1496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartQuery",
      "description": "Requests a query to be started against an event data store, handling specific error conditions related to permissions, configuration, and resource validity. It operates on context objects and custom exception types derived from AWS JSON protocols. Used to initiate complex data exploration tasks in logging and monitoring systems.",
      "description_length": 330,
      "index": 1497,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartLogging",
      "description": "Handles logging initiation requests by validating context and processing specific error conditions. Operates on AWS context objects and structured request/response types related to cloud trail configurations. Used to manage logging setup with detailed error reporting for AWS service constraints and permissions.",
      "description_length": 312,
      "index": 1498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartImport",
      "description": "Handles the initiation of an import process by sending a request with context, validating input parameters, and managing specific error conditions related to event data stores and import configurations. Works with context objects, import requests, and custom exception types derived from AWS JSON protocols. Used to start an import when the event data store is active and the import source is valid, ensuring proper error handling for account-specific and configuration-related issues.",
      "description_length": 485,
      "index": 1499,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartEventDataStoreIngestion",
      "description": "Handles the ingestion of start event data into a store by validating context and request parameters, and returning structured responses or specific error types related to data store configuration and permissions. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to manage event data ingestion workflows in systems requiring strict validation of data store ARNs and account permissions.",
      "description_length": 449,
      "index": 1500,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.RestoreEventDataStore",
      "description": "Handles requests to restore an event data store, returning detailed responses or specific error conditions. Operates with context objects and custom exception types derived from AWS JSON protocols. Used to manage event data store recovery in cloud auditing systems, ensuring proper error handling for compliance and governance workflows.",
      "description_length": 337,
      "index": 1501,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.RemoveTags",
      "description": "Removes specified tags from a resource using an AWS context and a request structure. It handles various error conditions related to invalid or missing resources, such as invalid ARNs, missing event data stores, or unsupported operations. The function interacts with AWS services to manage tagging configurations for supported resource types.",
      "description_length": 341,
      "index": 1502,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.RegisterOrganizationDelegatedAdmin",
      "description": "Handles the process of requesting a delegated admin for an organization, including validation of account eligibility and compliance with AWS organizational policies. Operates on context data and specific request/response types defined in the Smaws_Lib framework. Used to enforce governance rules when assigning administrative roles within an AWS organization.",
      "description_length": 359,
      "index": 1503,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.PutResourcePolicy",
      "description": "Handles AWS resource policy modification by validating input parameters, checking permissions, and enforcing constraints. Operates on context objects, policy requests, and error-specific types derived from AWS JSON protocols. Used to apply or update policies on specific AWS resources while ensuring compliance with service restrictions.",
      "description_length": 337,
      "index": 1504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.PutInsightSelectors",
      "description": "Handles the configuration of insight selectors for a CloudTrail trail, accepting a context and request parameters to apply or update selectors. Works with AWS-specific error types and request/response structures defined in the Smaws_Lib framework. Used to enforce logging policies and monitor activity in AWS environments.",
      "description_length": 322,
      "index": 1505,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.PutEventSelectors",
      "description": "Handles the submission of event selectors for a CloudTrail trail, processing requests and returning detailed responses or specific error conditions. Operates with context objects, request records, and custom exception types related to trail configuration and permissions. Used to configure which events are logged by a trail, ensuring proper validation and error reporting during setup.",
      "description_length": 386,
      "index": 1506,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.LookupEvents",
      "description": "Handles AWS CloudTrail lookup events by accepting context and request parameters, returning structured responses or specific error types. Operates with AWS context objects and event lookup configurations. Used to retrieve and validate event data from CloudTrail within defined time ranges and attributes.",
      "description_length": 304,
      "index": 1507,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListTrails",
      "description": "Handles AWS API requests to retrieve trail information, processing context and request parameters to generate a response. Operates on custom types representing AWS context, request payloads, and structured error responses. Used to fetch logging trail details from AWS CloudTrail in a controlled, error-aware manner.",
      "description_length": 315,
      "index": 1508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListTags",
      "description": "Provides functions to request and handle responses for listing tags associated with AWS resources, including error handling for specific exception types. Works with context objects, request records, and structured response data. Used to retrieve tagging information for resources like trails, event data stores, and channels in AWS CloudTrail.",
      "description_length": 343,
      "index": 1509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListQueries",
      "description": "Handles querying of event data stores by sending structured requests and returning results or specific error conditions. Operates with context objects and custom request/response types tailored for AWS Event Data Store interactions. Used to retrieve and process query results from cloud event tracking systems.",
      "description_length": 310,
      "index": 1510,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListPublicKeys",
      "description": "Handles AWS JSON-based requests to retrieve a list of public keys, including error handling for specific exception types. Operates with context objects and structured request/response types defined in Smaws_Lib. Used to fetch public key data from an AWS service within a controlled execution environment.",
      "description_length": 304,
      "index": 1511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListInsightsMetricData",
      "description": "Provides functions to retrieve metric data from list insights, handling specific AWS JSON-based requests and responses. Works with context objects, request structures, and custom exception types. Used to fetch and process detailed metrics in distributed system monitoring scenarios.",
      "description_length": 282,
      "index": 1512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListImports",
      "description": "Handles AWS ListImports API requests, processing parameters and returning structured responses. Operates with context objects, request records, and custom exception types specific to AWS service interactions. Used to retrieve import records from an event data store with pagination and error handling.",
      "description_length": 301,
      "index": 1513,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListImportFailures",
      "description": "Handles AWS ListImportFailures API requests, processing context and request parameters to retrieve failure records. Operates with AWS JSON protocol errors and specific exception types. Used to fetch and manage import failure data in cloud infrastructure workflows.",
      "description_length": 264,
      "index": 1514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListEventDataStores",
      "description": "Handles AWS event data store listing by processing context and request parameters, returning structured responses or specific error types. Operates with AWS JSON protocol errors and custom exception types derived from XML structures. Used to retrieve and validate event data store listings in managed AWS environments.",
      "description_length": 318,
      "index": 1515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListChannels",
      "description": "Handles AWS API requests to retrieve channel listings, processing responses and specific error conditions such as invalid tokens, operation permissions, and unsupported operations. Operates on context objects and structured request/response types defined in the Smaws_Lib framework. Used to fetch and validate channel data in distributed messaging systems.",
      "description_length": 356,
      "index": 1516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetTrailStatus",
      "description": "Handles AWS CloudTrail status retrieval by sending a request with context and a specific request structure, returning detailed responses or specific exception types. Operates with AWS context objects and custom exception types derived from CloudTrail service errors. Used to verify the existence and configuration of trails in an AWS account.",
      "description_length": 342,
      "index": 1517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetTrail",
      "description": "Handles AWS CloudTrail trail retrieval by sending a request with context and a specific request structure, returning a response or one of several domain-specific errors. Operates with AWS context, custom request, and response types, as well as exception types for invalid ARNs, trail names, permissions, and unsupported operations. Used to fetch detailed trail information from AWS, ensuring precise error handling for common API failures.",
      "description_length": 439,
      "index": 1518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetResourcePolicy",
      "description": "Handles AWS resource policy retrieval by sending a structured request and returning a typed response. Operates with context objects, policy requests, and detailed error types specific to AWS resource management. Used to enforce access control policies in cloud infrastructure workflows.",
      "description_length": 286,
      "index": 1519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetQueryResults",
      "description": "Handles AWS CloudTrail query result retrieval by sending requests and processing responses. Operates with context objects, query parameters, and structured error types specific to AWS CloudTrail. Used to fetch and validate query outcomes in distributed logging systems.",
      "description_length": 269,
      "index": 1520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetInsightSelectors",
      "description": "Handles AWS CloudTrail get_insight_selectors requests by validating context and parameters, returning structured responses or specific error types. Operates on AWS context objects and custom request/response records tied to CloudTrail configurations. Used to retrieve insight selectors for a given trail, enabling detailed monitoring and compliance checks.",
      "description_length": 356,
      "index": 1521,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetImport",
      "description": "Handles AWS import requests by validating context, parsing input, and returning structured responses. Operates on custom request and response types, along with specific exception types for error handling. Used to process import operations in a controlled, error-aware manner.",
      "description_length": 275,
      "index": 1522,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetEventSelectors",
      "description": "Handles AWS CloudTrail event selector requests by validating context and parameters, then returning structured responses or specific exception types. Operates with AWS context objects, request records, and custom exception types derived from CloudTrail errors. Used to manage and enforce access control and validation for event selector configurations in AWS logging setups.",
      "description_length": 374,
      "index": 1523,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetEventDataStore",
      "description": "Handles retrieval of event data store configurations by validating and processing a request with specific error handling for ARN issues, missing stores, and permission problems. Operates on context objects and structured request/response types tied to AWS event data store operations. Used to fetch detailed event data store information in compliance and monitoring workflows.",
      "description_length": 376,
      "index": 1524,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetChannel",
      "description": "Handles AWS IoT Core channel requests by validating and retrieving channel information. Operates on context objects and custom request/response types specific to IoT channel operations. Manages exceptions for invalid ARNs, missing channels, and unauthorized or unsupported operations.",
      "description_length": 284,
      "index": 1525,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.EnableFederation",
      "description": "Handles AWS federation enablement requests by validating context and parameters, then executing the operation with detailed error handling for specific AWS service exceptions. Works with context objects, request records, and response structures tied to AWS CloudTrail and Organizations. Used to enforce federation policies in multi-account environments, ensuring proper permissions and compliance with AWS service constraints.",
      "description_length": 426,
      "index": 1526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DisableFederation",
      "description": "Handles AWS federation disable requests by validating context and parameters, returning structured responses or specific error types. Operates with context objects and custom request/response records tied to AWS service protocols. Used to enforce access controls and manage federation states in cloud infrastructure workflows.",
      "description_length": 326,
      "index": 1527,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DescribeTrails",
      "description": "Handles AWS CloudTrail description requests by validating input parameters, querying trail configurations, and returning structured responses. Operates on context objects, request records, and custom exception types specific to AWS CloudTrail. Used to retrieve detailed information about trails in a managed environment, ensuring proper error handling for invalid or unsupported inputs.",
      "description_length": 386,
      "index": 1528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DescribeQuery",
      "description": "Handles AWS CloudTrail describe query operations by accepting a context and a request, returning detailed responses or specific error types related to query execution. Works with AWS context objects, query request structures, and custom error types for CloudTrail services. Used to retrieve metadata about ongoing or completed queries in event data stores.",
      "description_length": 356,
      "index": 1529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeregisterOrganizationDelegatedAdmin",
      "description": "Handles the removal of a delegated administrator from an AWS organization by validating account permissions, checking organizational status, and ensuring proper service access. Operates on request and response records specific to the deregistration process, including error types for account and permission validation. Used to transition an account out of a delegated admin role while maintaining compliance with AWS organization policies.",
      "description_length": 439,
      "index": 1530,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteTrail",
      "description": "Handles deletion requests for AWS CloudTrail trails, processing context and request parameters to execute the operation. Works with AWS JSON protocol errors and specific exception types related to trail configuration and permissions. Used to remove trails when validation and access checks are satisfied.",
      "description_length": 304,
      "index": 1531,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteResourcePolicy",
      "description": "Handles AWS resource policy deletion by sending a structured request and returning detailed responses or specific exceptions. Operates with context objects and custom request/response types tied to AWS JSON protocols. Used to enforce policy removal with explicit error handling for access, resource, and format validation issues.",
      "description_length": 329,
      "index": 1532,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteEventDataStore",
      "description": "Handles the deletion of an event data store by sending a request with context and parameters, returning a result that includes specific error types related to validation, permissions, and state. Operates on types such as `delete_event_data_store_request` and `delete_event_data_store_response`, along with custom exception types for various failure scenarios. Used in scenarios where an event data store must be safely removed, ensuring all constraints and dependencies are checked before execution.",
      "description_length": 499,
      "index": 1533,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteChannel",
      "description": "Handles deletion requests for specific channels, validating the channel ARN and ensuring proper permissions. Operates on structured request and response types, including error variants for invalid or non-existent channels. Used to safely remove channels in AWS IoT Core services with explicit error handling.",
      "description_length": 308,
      "index": 1534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CreateTrail",
      "description": "Handles the creation of AWS CloudTrail trails by validating configuration parameters and interacting with AWS services. Accepts a context and a request structure, returning a response or specific error types related to trail setup. Used to establish logging for AWS account activity with detailed error handling for configuration issues.",
      "description_length": 337,
      "index": 1535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CreateEventDataStore",
      "description": "Handles the creation of an event data store by validating configuration parameters, checking permissions, and ensuring compliance with AWS service constraints. Operates on context objects and request structures specific to AWS CloudTrail. Manages errors such as duplicate store names, insufficient permissions, and invalid KMS keys.",
      "description_length": 332,
      "index": 1536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CreateChannel",
      "description": "Handles the creation of a channel by sending a request with specific parameters and context, returning a response or a detailed error. Works with context objects, create_channel_request records, and various error types related to channel configuration and permissions. Used to initialize a new channel in a system that enforces strict validation on parameters like event data store ARNs and tags.",
      "description_length": 396,
      "index": 1537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CancelQuery",
      "description": "Handles cancellation of asynchronous queries by sending a request with context and a structured request object. Operates on custom exception types and AWS JSON error responses, returning a result with specific error variants. Used to manage query termination in distributed systems with explicit error handling for AWS-specific conditions.",
      "description_length": 339,
      "index": 1538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.AddTags",
      "description": "Handles the addition of tags to AWS resources by processing a request context and a structured tag input. It operates on types such as `add_tags_request` and `add_tags_response`, along with specific exception types for error handling. Used to manage tag assignments in AWS CloudTrail and similar services, ensuring compliance with tagging policies and resource constraints.",
      "description_length": 373,
      "index": 1539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateLongTermPricing",
      "description": "Handles AWS EC2 long-term pricing updates by processing structured requests and returning results or specific error types. Operates on context objects and custom request/response types tied to EC2 pricing configurations. Used to modify reserved instance pricing terms through direct API interaction.",
      "description_length": 299,
      "index": 1540,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateJobShipmentState",
      "description": "Handles state transitions for job shipments by validating and applying updates based on provided requests. Operates on context objects and custom exception types to manage invalid states or resource errors. Used to enforce business rules during shipment status changes in order processing workflows.",
      "description_length": 299,
      "index": 1541,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateJob",
      "description": "Handles AWS EMR job updates by sending requests and returning results or specific error conditions. Operates with context objects and structured job update data. Used to manage cluster resource limits, validate job states, and handle EC2 or KMS-related failures during updates.",
      "description_length": 277,
      "index": 1542,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateCluster",
      "description": "Handles AWS EC2 cluster updates by sending structured requests and returning detailed results or specific error conditions. Operates with context objects, update cluster requests, and various error types defined in the AWS protocol. Used to manage cluster configuration changes while handling AWS-specific exceptions during the process.",
      "description_length": 336,
      "index": 1543,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListServiceVersions",
      "description": "Handles AWS S3 list service versions requests, processing context and parameters to retrieve versioned object listings. Operates with AWS JSON protocol errors and specific exception types for invalid tokens and resources. Used to navigate and fetch paginated versioned data from S3 buckets.",
      "description_length": 290,
      "index": 1544,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListPickupLocations",
      "description": "Handles AWS S3 bucket location requests by querying available pickup locations, returning a list of results or specific errors. Operates on context objects and request structures specific to S3 bucket configurations. Used to determine valid regions for data retrieval operations.",
      "description_length": 279,
      "index": 1545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListLongTermPricing",
      "description": "Handles AWS API requests for retrieving long-term pricing data, processing pagination tokens, and validating resource identifiers. Operates with context objects, request structures, and error-specific types from AWS protocols. Used to fetch and manage reserved instance pricing information in cloud infrastructure workflows.",
      "description_length": 324,
      "index": 1546,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.ListJobs",
      "description": "Handles AWS Batch list jobs requests by fetching job summaries and pagination tokens. Processes `list_jobs_request` and returns job data along with error or invalid token exceptions. Designed for interacting with AWS Batch API to retrieve job listings in a structured format.",
      "description_length": 275,
      "index": 1547,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListCompatibleImages",
      "description": "Handles AWS EC2 requests to retrieve compatible image information, processing parameters like filters and pagination tokens. Operates on EC2-specific data structures such as request configurations and error responses. Used to fetch valid AMI candidates for instance launch operations within cloud infrastructure workflows.",
      "description_length": 322,
      "index": 1548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListClusters",
      "description": "Handles AWS ECS cluster listing with pagination support, processing requests and returning results along with specific error types. Operates on context objects and custom request/response types for ECS cluster data. Manages invalid token exceptions and structured JSON responses from AWS API calls.",
      "description_length": 298,
      "index": 1549,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.ListClusterJobs",
      "description": "Handles AWS Batch job listing requests with context, supporting pagination and error handling for invalid tokens and resources. Operates on AWS Batch cluster job data structures and request parameters. Used to retrieve job summaries from a specific cluster, with support for navigating large result sets.",
      "description_length": 304,
      "index": 1550,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.GetSoftwareUpdates",
      "description": "Handles AWS API requests to retrieve software update information, processing context and request parameters to return structured results or specific error types. Operates with AWS JSON protocol responses and custom exception types for job and resource validation. Used to fetch update metadata in systems integrating with AWS management services.",
      "description_length": 346,
      "index": 1551,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.GetSnowballUsage",
      "description": "Handles AWS Snowball usage requests by sending a structured query and returning a result or specific AWS error. Operates with context objects and custom request/response types tied to AWS Snowball services. Used to retrieve usage metrics for Snowball devices within an AWS environment.",
      "description_length": 285,
      "index": 1552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.GetJobUnlockCode",
      "description": "Handles job unlock code requests by validating job state and resource integrity, returning a result or specific error types. Operates on context objects and structured request data to interact with job management systems. Used to retrieve unlock codes for suspended or restricted jobs in cloud infrastructure workflows.",
      "description_length": 319,
      "index": 1553,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.GetJobManifest",
      "description": "Handles AWS API requests to retrieve job manifests, processing specific error conditions such as invalid job states and resource issues. Operates with context objects and structured request/response types defined in the Smaws_Lib framework. Used to fetch job metadata in distributed processing workflows.",
      "description_length": 304,
      "index": 1554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeReturnShippingLabel",
      "description": "Handles the retrieval of return shipping labels by sending a request to an external service, processing the response, and managing specific error conditions such as conflicts, invalid job states, and resource issues. Operates on context objects, request structures, and result types defined within the Smaws_Lib framework. Used to generate shipping labels for returned items in e-commerce workflows where validation and error handling are critical.",
      "description_length": 448,
      "index": 1555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeJob",
      "description": "Handles AWS EC2 describe job requests by validating context and processing input, returning structured results or specific error types. Operates with AWS context objects and custom request/response types for job information. Used to retrieve detailed status and metadata for EC2 jobs in distributed systems.",
      "description_length": 307,
      "index": 1556,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeCluster",
      "description": "Handles AWS ECS cluster description requests by sending a structured HTTP query to the AWS API, processing the JSON response, and returning detailed cluster information or specific error types such as invalid resource exceptions. Operates with context objects, request records, and result types tailored to ECS cluster data. Used to retrieve cluster configurations, status, and metadata during infrastructure monitoring or deployment workflows.",
      "description_length": 444,
      "index": 1557,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeAddresses",
      "description": "Handles AWS EC2 describe-addresses requests, parsing and serializing JSON responses from the AWS API. Operates on context objects, request parameters, and structured result types specific to EC2 address data. Used to retrieve and process public IP address information within an AWS environment.",
      "description_length": 294,
      "index": 1558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeAddress",
      "description": "Handles AWS EC2 describe address requests, mapping raw API responses to structured results. Processes context and request parameters to retrieve network address details. Returns specific error variants for invalid resource scenarios.",
      "description_length": 233,
      "index": 1559,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateReturnShippingLabel",
      "description": "Handles the creation of return shipping labels by sending a request to an external service, returning a result or specific error types related to label conflicts, invalid inputs, or resource states. Operates with context data and structured request objects containing shipment details. Used in e-commerce workflows to generate labels for returned items, ensuring proper handling of exceptions during label creation.",
      "description_length": 415,
      "index": 1560,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateLongTermPricing",
      "description": "Handles the creation of long-term pricing agreements by processing a structured request and returning a result or specific error types. It operates with context data and a custom request type, producing a tailored response structure. Used to manage pricing configurations in cloud infrastructure workflows.",
      "description_length": 306,
      "index": 1561,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateJob",
      "description": "Handles job creation requests by validating input and interacting with underlying systems, returning detailed results or specific exception types. Operates on context objects and structured job creation data. Used to manage cluster resource allocation and ensure compliance with input constraints.",
      "description_length": 297,
      "index": 1562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateCluster",
      "description": "Handles AWS EC2 cluster creation requests by validating input, interacting with EC2 and KMS services, and returning detailed results or specific error conditions. Operates on context objects, cluster creation requests, and error-specific types derived from AWS protocols. Used to provision clusters with configured networking and encryption settings, ensuring compliance with AWS service constraints.",
      "description_length": 400,
      "index": 1563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateAddress",
      "description": "Handles address creation requests by validating input and interacting with AWS services. Accepts context and a structured request containing address details, returning a result with success or specific error types. Used to process and validate address data before submitting to external systems.",
      "description_length": 295,
      "index": 1564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CancelJob",
      "description": "Handles job cancellation requests by validating job state and resources, and interacting with AWS services to initiate cancellation. Operates on context objects, job request structures, and error-specific exception types. Used to manage job termination in distributed systems, ensuring proper state transitions and error reporting.",
      "description_length": 331,
      "index": 1565,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CancelCluster",
      "description": "Handles cancellation requests for clusters by validating state and resources, and interacting with AWS services to execute the cancellation. Operates on context objects, cluster request structures, and error-specific types derived from AWS JSON responses. Used to manage cluster termination in distributed systems, ensuring proper error handling for invalid states or resource issues.",
      "description_length": 384,
      "index": 1566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateVocabularyFilter",
      "description": "Handles the submission of a request to update a vocabulary filter in an AWS service, processing the provided filter details and returning the response or specific error types. Operates with context information and structured request/response types defined for the vocabulary filter update operation. Used to dynamically modify filter configurations in real-time processing systems.",
      "description_length": 381,
      "index": 1567,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateVocabulary",
      "description": "Handles vocabulary updates by sending requests to an API, processing responses, and managing specific error conditions. Operates with context objects, update requests, and structured error types. Used to synchronize user-defined vocabulary data with a remote service, ensuring consistency and handling conflicts or limits.",
      "description_length": 322,
      "index": 1568,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateMedicalVocabulary",
      "description": "Processes requests to update medical vocabulary by validating input, applying changes, and returning structured responses. Operates on context objects, request records, and custom exception types specific to medical data management. Used to synchronize clinical terminology systems with external updates or regulatory changes.",
      "description_length": 326,
      "index": 1569,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateCallAnalyticsCategory",
      "description": "Handles AWS API requests to update call analytics categories by sending a structured request and returning a response or specific error types. Operates with context objects, request records, and custom exception types derived from AWS JSON protocols. Used to modify call analytics configurations in real-time systems with precise error handling.",
      "description_length": 345,
      "index": 1570,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.UntagResource",
      "description": "Handles AWS resource untagging by sending a structured request and returning a result with specific error types. Operates with context, untag_resource_request, and untag_resource_response types. Used to remove tags from AWS resources like EC2 instances or S3 buckets in a controlled, error-aware manner.",
      "description_length": 303,
      "index": 1571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.TagResource",
      "description": "Handles AWS resource tagging requests by sending structured JSON payloads and parsing corresponding responses. Operates with context objects, custom request records, and detailed error types specific to AWS service interactions. Used to apply or modify tags on AWS resources within a controlled, error-aware workflow.",
      "description_length": 317,
      "index": 1572,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartTranscriptionJob",
      "description": "Handles the initiation of a transcription job by sending a structured request to an AWS service, processing the response, and managing specific error conditions such as bad requests, conflicts, and service limits. Operates with context data, request objects, and response structures defined by the Smaws_Lib library. Used to start asynchronous speech-to-text processing in applications requiring audio transcription.",
      "description_length": 416,
      "index": 1573,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartMedicalTranscriptionJob",
      "description": "Handles the initiation of a medical transcription job by sending a structured request to an AWS service. It operates with context objects and specific request/response types tailored for medical transcription workflows. Used to start a job with defined parameters, validate input, and handle service-specific exceptions.",
      "description_length": 320,
      "index": 1574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartMedicalScribeJob",
      "description": "Handles the initiation of a medical scribe job by sending a structured request and returning a response or specific error types. Operates with context objects, request records, and detailed response structures. Used to start a scribe session in a healthcare documentation system, validating input and managing exceptions during job creation.",
      "description_length": 341,
      "index": 1575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartCallAnalyticsJob",
      "description": "Handles the initiation of call analytics jobs by sending a structured request and returning a typed response. Operates with context objects, job request records, and detailed error types specific to AWS service interactions. Used to start real-time analysis of customer calls in a telephony system, providing immediate feedback on job status and potential issues.",
      "description_length": 363,
      "index": 1576,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListVocabularyFilters",
      "description": "Provides functions to request and handle responses for listing vocabulary filters, using context and specific request types. Operates with AWS JSON protocol types, including error variants and exception types. Used to retrieve and manage vocabulary filter configurations in a speech recognition service.",
      "description_length": 303,
      "index": 1577,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListVocabularies",
      "description": "Provides functions to request and handle responses for listing vocabularies, including error handling for specific exceptions like bad requests, internal failures, and limit exceedances. Operates with context objects and structured request/response types defined in related modules. Used to retrieve vocabulary lists in systems requiring controlled access and error-specific handling.",
      "description_length": 384,
      "index": 1578,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListTranscriptionJobs",
      "description": "Handles AWS Transcribe service requests to list transcription jobs, including error handling for specific exceptions. Operates with context objects and structured request/response types from the Smaws_Lib library. Used to retrieve job listings from AWS Transcribe within a controlled error-handling framework.",
      "description_length": 309,
      "index": 1579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListTagsForResource",
      "description": "Handles AWS API requests to retrieve tags associated with a specific resource. Operates on structured request and response types defined for the ListTagsForResource operation. Used to fetch metadata tags for resources in AWS services that support tagging.",
      "description_length": 255,
      "index": 1580,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListMedicalVocabularies",
      "description": "Processes requests to retrieve medical vocabulary lists, handling specific error conditions such as bad requests, internal failures, and rate limits. Operates with context objects and structured request/response types tailored for medical data. Used to fetch standardized medical terminology during system integration or data validation workflows.",
      "description_length": 347,
      "index": 1581,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListMedicalTranscriptionJobs",
      "description": "Handles requests to list medical transcription jobs, processing AWS JSON responses and error conditions such as bad requests, internal failures, and rate limits. Operates with context objects and structured request/response types specific to AWS transcription services. Used to retrieve job listings from AWS for medical data processing workflows.",
      "description_length": 347,
      "index": 1582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListMedicalScribeJobs",
      "description": "Handles job requests for medical scribes by fetching job data from a service, processing responses, and managing specific error conditions. Operates on context objects, request records, and structured response data. Used to retrieve and validate medical scribe job listings in a healthcare workflow system.",
      "description_length": 306,
      "index": 1583,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListLanguageModels",
      "description": "Handles AWS SageMaker list language models requests, processing context and returning structured responses. Operates with AWS JSON protocol errors and specific exception types. Used to retrieve and manage language model listings within a machine learning infrastructure.",
      "description_length": 270,
      "index": 1584,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListCallAnalyticsJobs",
      "description": "Handles AWS Connect Contact Lens list call analytics jobs requests, processing parameters and returning structured responses. Operates with context objects, request records, and custom exception types. Used to retrieve and manage analytics job listings from AWS services.",
      "description_length": 271,
      "index": 1585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListCallAnalyticsCategories",
      "description": "Handles AWS ListCallAnalyticsCategories API requests, processing context and request parameters to retrieve category lists. Operates with AWS context objects and specific request/response types defined in the Smaws_Lib library. Used to fetch configured call analytics categories from an AWS service endpoint.",
      "description_length": 308,
      "index": 1586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetVocabularyFilter",
      "description": "Handles retrieval of a custom vocabulary filter from an AWS service, accepting a context and request object to initiate the operation. Operates with AWS-specific request and response types, including error variants for common service exceptions. Used to fetch configured filters for speech recognition systems requiring customized word filtering.",
      "description_length": 346,
      "index": 1587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetVocabulary",
      "description": "Provides functions to send a vocabulary retrieval request and handle specific error responses from an API. Operates with context objects and custom exception types derived from AWS JSON protocols. Used to fetch linguistic data while managing service-specific error conditions during API calls.",
      "description_length": 293,
      "index": 1588,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetTranscriptionJob",
      "description": "Handles AWS Transcribe service requests to retrieve details of a specific transcription job. Operates with context objects and structured request/response types specific to the AWS JSON protocol. Used to fetch job status, output locations, and configuration after a job has been initiated.",
      "description_length": 289,
      "index": 1589,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetMedicalVocabulary",
      "description": "Requests medical vocabulary data from a service, handling specific error conditions such as bad requests, internal failures, and not found responses. Works with context objects and structured request/response types defined in the Smaws_Lib framework. Used to fetch standardized medical terminology in applications requiring clinical data integration.",
      "description_length": 350,
      "index": 1590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetMedicalTranscriptionJob",
      "description": "Handles AWS SageMaker Medical Transcription job retrieval by sending a structured request and returning detailed job status and configuration. Operates with AWS context, request, and response records specific to medical transcription. Used to fetch real-time updates on ongoing or completed medical speech-to-text processing tasks.",
      "description_length": 331,
      "index": 1591,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetMedicalScribeJob",
      "description": "Handles the retrieval of medical scribe job details by sending a structured request to an API endpoint. It operates on context objects and custom request/response types specific to the medical scribe workflow. Used to fetch job status and associated data during processing pipelines.",
      "description_length": 283,
      "index": 1592,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetCallAnalyticsJob",
      "description": "Handles AWS Connect GetCallAnalyticsJob API requests, processing parameters and returning structured responses. Operates with context objects, request records, and custom exception types. Used to retrieve detailed analytics data for specific call sessions in customer engagement systems.",
      "description_length": 287,
      "index": 1593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetCallAnalyticsCategory",
      "description": "Handles AWS API requests for retrieving call analytics categories, processing structured input and returning detailed responses. Operates with context objects, request records, and custom exception types specific to AWS service errors. Used to fetch and analyze call data metrics in distributed communication systems.",
      "description_length": 317,
      "index": 1594,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DescribeLanguageModel",
      "description": "Handles language model description requests by sending structured queries to a service endpoint, processing responses, and returning detailed model metadata. Operates with context objects and custom request/response types specific to the language model API. Used to retrieve configuration and performance details for deployed models in production workflows.",
      "description_length": 357,
      "index": 1595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteVocabularyFilter",
      "description": "Handles deletion of a specified vocabulary filter by sending a structured request. Operates with AWS JSON protocol types and exception types specific to the service. Used to remove outdated or unused filters from a speech recognition system.",
      "description_length": 241,
      "index": 1596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteVocabulary",
      "description": "Handles deletion requests for vocabulary entries by interacting with a context-aware API. Operates on structured request data and returns specific error-typed results. Used to remove predefined vocabulary items from a system, ensuring proper error handling for invalid or missing entries.",
      "description_length": 288,
      "index": 1597,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteTranscriptionJob",
      "description": "Handles deletion of transcription jobs by sending a structured request to the service, using context and specific error handling for invalid, failed, or rate-limited requests. Operates with `Smaws_Lib.Context.t` and custom exception types derived from AWS JSON protocol responses. Used to cleanly remove outdated or unnecessary transcription records from a system.",
      "description_length": 364,
      "index": 1598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteMedicalVocabulary",
      "description": "Handles deletion requests for medical vocabulary entries by sending a structured JSON payload to an AWS service. It operates on context objects and custom request types specific to the medical vocabulary system. Used to remove outdated or incorrect entries from a medical terminology database.",
      "description_length": 293,
      "index": 1599,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteMedicalTranscriptionJob",
      "description": "Handles deletion of medical transcription jobs by sending a structured request to an AWS service. Operates on custom request types and error-specific exceptions defined in the system. Used to clean up completed or invalid transcription tasks in a medical data processing pipeline.",
      "description_length": 280,
      "index": 1600,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteMedicalScribeJob",
      "description": "Handles the deletion of a medical scribe job by sending a structured request. Operates with context objects and specific request types related to job management. Used to initiate job termination in a controlled, error-handled manner.",
      "description_length": 233,
      "index": 1601,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteLanguageModel",
      "description": "Handles deletion requests for language models by validating context and processing specific request structures. Operates on custom request types and error variants defined in associated modules. Used to initiate model removal in systems requiring explicit deletion confirmation and error handling.",
      "description_length": 297,
      "index": 1602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteCallAnalyticsJob",
      "description": "Handles deletion of call analytics jobs by sending a structured request and returning a typed response. Operates with context, request, and response records specific to the AWS API. Used to remove configured analytics jobs in a controlled, error-aware manner.",
      "description_length": 259,
      "index": 1603,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteCallAnalyticsCategory",
      "description": "Handles deletion of call analytics categories by sending a structured request and returning a result with specific error types. Operates with context, request, and response records defined in related modules. Used to remove configured analytics categories in AWS services, ensuring proper error handling for invalid or missing resources.",
      "description_length": 337,
      "index": 1604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateVocabularyFilter",
      "description": "Handles the creation of a vocabulary filter by sending a structured request and returning a response or specific error types. Operates with context data, request objects, and response structures defined by the AWS JSON protocol. Used to enforce vocabulary constraints in text processing workflows, such as filtering inappropriate content in speech-to-text applications.",
      "description_length": 369,
      "index": 1605,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateVocabulary",
      "description": "Handles vocabulary creation requests by validating input, checking for conflicts, and enforcing service limits. Operates on context objects and structured request/response types specific to the Smaws_Lib framework. Used to generate unique vocabulary entries while managing exceptions for invalid inputs and system constraints.",
      "description_length": 326,
      "index": 1606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateMedicalVocabulary",
      "description": "Processes a request to create a medical vocabulary by validating input, checking for conflicts, and interacting with an external service. It handles specific request and response types, along with error conditions such as bad requests, conflicts, and service limits. The module integrates with context data to manage the creation workflow.",
      "description_length": 339,
      "index": 1607,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateLanguageModel",
      "description": "Handles language model creation requests by validating input parameters and interacting with an external service. Operates on context objects and structured request/response types specific to the language model setup process. Used to initialize new language models with defined configurations and error handling for common deployment issues.",
      "description_length": 341,
      "index": 1608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateCallAnalyticsCategory",
      "description": "Handles the creation of call analytics categories by sending a structured request to an AWS service, returning a response or specific error types. Operates with context data, request objects containing category details, and response structures tailored to AWS Call Analytics. Used to configure custom analytics rules for call monitoring systems.",
      "description_length": 345,
      "index": 1609,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.UntagResource",
      "description": "Handles AWS resource untagging by sending a JSON-formatted request to the appropriate service endpoint. Accepts context and untag resource input, returning success or specific AWS error types. Used to remove tags from resources like EC2 instances or S3 buckets within a controlled AWS environment.",
      "description_length": 297,
      "index": 1610,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.UndeprecateWorkflowType",
      "description": "Handles the request to undeprecate a workflow type by validating context and input, and returning specific error outcomes. Operates with context objects and input records containing workflow type identifiers. Used to restore deprecated workflow types in a controlled environment, ensuring proper permissions and resource existence.",
      "description_length": 331,
      "index": 1611,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.UndeprecateDomain",
      "description": "Handles domain undeprecation requests by interacting with AWS services, validating input, and returning specific error conditions. Operates on context objects and domain input structures, ensuring proper authentication and request formatting. Used to restore deprecated domains in managed service environments, addressing operational constraints and resource state issues.",
      "description_length": 372,
      "index": 1612,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.UndeprecateActivityType",
      "description": "Handles the request to undeprecate an activity type in a system, accepting context and input parameters. Operates on custom types such as `undeprecate_activity_type_input`, `operation_not_permitted_fault`, `type_already_exists_fault`, and `unknown_resource_fault`. Used to restore deprecated activity types when specific permissions and conditions are met.",
      "description_length": 356,
      "index": 1613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.TerminateWorkflowExecution",
      "description": "Handles the termination of a specific workflow execution by sending a termination request. Operates on context data and input structures representing workflow termination parameters. Used to explicitly end running workflows in response to administrative or error conditions.",
      "description_length": 274,
      "index": 1614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.TagResource",
      "description": "Handles AWS resource tagging requests by validating input, enforcing limits, and managing faults. Operates on context objects and structured tag inputs to apply or modify tags on AWS resources. Processes specific error conditions such as exceeding tag limits, unauthorized operations, and unknown resources.",
      "description_length": 307,
      "index": 1615,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.StartWorkflowExecution",
      "description": "Handles the initiation of a workflow execution by sending a request with specified input. Operates on context data and workflow execution parameters, returning a result that includes either a run identifier or specific fault types. Used to start workflows in a system where fault handling is critical and precise error reporting is required.",
      "description_length": 341,
      "index": 1616,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.SignalWorkflowExecution",
      "description": "Handles signal delivery to a specific workflow execution by validating context and processing input. Operates on workflow execution identifiers and signal data structures. Used to inject external events into running workflows for state updates or termination.",
      "description_length": 259,
      "index": 1617,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.RespondDecisionTaskCompleted",
      "description": "Handles the completion of a decision task by sending a structured request to a workflow system. It accepts a context and input containing task details, and returns a result indicating success or specific error conditions. Used to finalize workflow steps in distributed processing systems.",
      "description_length": 288,
      "index": 1618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RespondActivityTaskFailed",
      "description": "Handles the response to an activity task failure by sending a structured request to the AWS service. It operates with context data and input containing failure details, including error-specific types for operation permissions and resource recognition. Used to signal task failures in workflow execution pipelines where precise error handling is required.",
      "description_length": 354,
      "index": 1619,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RespondActivityTaskCompleted",
      "description": "Handles the completion of an activity task by sending a structured request to a workflow service, using a context and input parameters. It operates with specific AWS JSON protocol types and error variants related to task completion. Used to finalize activity executions in a workflow system, ensuring proper state transitions and error handling.",
      "description_length": 345,
      "index": 1620,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RespondActivityTaskCanceled",
      "description": "Handles the response to cancel an activity task by sending a structured request to the appropriate service endpoint. It operates with context objects and input data containing cancellation details, and returns a result type that includes specific error variants for operational and resource-related failures. Used in workflow orchestration to properly signal task cancellation within a distributed system.",
      "description_length": 405,
      "index": 1621,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RequestCancelWorkflowExecution",
      "description": "Handles the cancellation of a specific workflow execution by sending a request to the AWS SWF service. It operates on context data and input parameters specific to workflow cancellation, returning success or detailed error states. Used to terminate workflows that are no longer needed, ensuring proper resource cleanup.",
      "description_length": 319,
      "index": 1622,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RegisterWorkflowType",
      "description": "Handles the submission of a new workflow type to a system, validating input and managing specific error conditions such as duplicate types, permission issues, and resource limits. Operates on context objects and structured input data representing workflow type definitions. Used to enforce registration constraints and ensure proper error handling during workflow type creation.",
      "description_length": 378,
      "index": 1623,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_SWF.RegisterDomain",
      "description": "Handles domain registration requests with AWS Route 53, validating input and returning specific error types for domain conflicts, permissions, and limits. Operates on context objects and structured input data representing domain registration parameters. Used to enforce AWS service constraints during domain creation workflows.",
      "description_length": 327,
      "index": 1624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RegisterActivityType",
      "description": "Handles AWS SWF register activity type requests, validating input and managing fault responses. Processes context and activity type configuration data to interact with the SWF service. Used to dynamically register new activity types with specific fault handling for resource constraints and permissions.",
      "description_length": 303,
      "index": 1625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RecordActivityTaskHeartbeat",
      "description": "Handles heartbeat requests for activity tasks, validating context and processing input to update task status. Operates on AWS JSON protocol types and custom fault structures. Used to maintain task liveness in distributed workflows.",
      "description_length": 231,
      "index": 1626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.PollForDecisionTask",
      "description": "Handles AWS SWF poll for decision task requests, processing input and returning a decision task or specific error types. Operates with context and custom input types derived from SWF protocols. Used to retrieve and manage decision tasks in workflow execution pipelines.",
      "description_length": 269,
      "index": 1627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.PollForActivityTask",
      "description": "Handles AWS SWF activity task polling with context-aware requests, returning either a task or specific fault types. Operates on `poll_for_activity_task_input` and processes AWS JSON responses. Used to retrieve and manage activity tasks in distributed workflow systems.",
      "description_length": 268,
      "index": 1628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListWorkflowTypes",
      "description": "Handles AWS workflow type requests by fetching detailed information about workflow types based on context and input parameters. Operates on custom types such as `workflow_type_infos`, `operation_not_permitted_fault`, and `unknown_resource_fault`. Used to retrieve and validate workflow type data in distributed system interactions.",
      "description_length": 331,
      "index": 1629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListTagsForResource",
      "description": "Provides functions to request and handle responses for listing tags associated with a specific AWS resource, including error handling for faults like limit exceeded, operation not permitted, and unknown resource. Works with AWS context and input/output structures specific to the `ListTagsForResource` API. Used to retrieve metadata tags for resources in AWS services that support tagging.",
      "description_length": 389,
      "index": 1630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListOpenWorkflowExecutions",
      "description": "Provides functions to request and handle responses for listing workflow executions, including error handling for permissions and unknown resources. Operates with context objects and input structures specific to workflow execution queries. Used to retrieve execution details from a workflow system with precise fault tolerance.",
      "description_length": 326,
      "index": 1631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListDomains",
      "description": "Handles AWS S3 domain listing requests by sending a structured input and returning domain information or specific error types. Operates with context data and a custom input type to query domain configurations. Used to retrieve and validate domain access permissions in cloud infrastructure workflows.",
      "description_length": 300,
      "index": 1632,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.ListClosedWorkflowExecutions",
      "description": "Provides functions to retrieve information about closed workflow executions, including details like execution ARN, start and close timestamps, and status. Works with data types such as workflow execution infos, context objects, and error variants specific to AWS service faults. Used to monitor and audit completed workflows in a distributed system.",
      "description_length": 349,
      "index": 1633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListActivityTypes",
      "description": "Handles AWS API requests to retrieve activity type information, including error handling for unauthorized operations and missing resources. Operates on context objects and input records specific to AWS service interactions. Used to fetch detailed metadata about activity types in a controlled, fault-tolerant manner.",
      "description_length": 316,
      "index": 1634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.GetWorkflowExecutionHistory",
      "description": "Handles retrieval of workflow execution history from an AWS service, processing input parameters and returning structured event data along with specific error variants. Operates on context objects and custom input records representing workflow execution details. Used to audit or monitor the progression of long-running workflow processes within a distributed system.",
      "description_length": 367,
      "index": 1635,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeWorkflowType",
      "description": "Handles AWS SWF workflow type description requests, processing context and input to retrieve detailed workflow type information. Operates with `Smaws_Lib.Context.t` and custom input types specific to SWF operations. Used to fetch workflow type metadata in distributed task orchestration systems.",
      "description_length": 295,
      "index": 1636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeWorkflowExecution",
      "description": "Handles AWS SWF workflow execution description requests by fetching detailed execution data. Accepts context and input parameters to initiate the operation. Returns execution details or specific error types related to permissions and resource availability.",
      "description_length": 256,
      "index": 1637,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeDomain",
      "description": "Handles AWS EC2 domain description requests by validating context and input, then returning detailed domain information or specific error types. Operates with context objects and structured input records related to domain configuration. Used to retrieve or verify domain settings in cloud infrastructure management workflows.",
      "description_length": 325,
      "index": 1638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeActivityType",
      "description": "Handles AWS SWF activity type description requests, accepting context and input to retrieve detailed activity type information. Operates with AWS JSON protocol errors and specific fault types like operation permission and resource not found. Used to fetch metadata for registered activity types in a workflow system.",
      "description_length": 316,
      "index": 1639,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DeprecateWorkflowType",
      "description": "Handles workflow type deprecation requests by validating context and input, returning specific error outcomes based on permissions, type status, or resource existence. Operates with context objects and structured input containing workflow type identifiers. Used to enforce deprecation policies and prevent invalid operations in workflow management systems.",
      "description_length": 356,
      "index": 1640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DeprecateDomain",
      "description": "Handles domain deprecation requests by validating context and input, then executing the deprecation process. Operates on context objects and structured input containing domain identifiers and reasons. Used to enforce policy restrictions and manage domain lifecycle in AWS-like service interactions.",
      "description_length": 298,
      "index": 1641,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DeprecateActivityType",
      "description": "Handles the deprecation of an activity type by validating permissions, checking if the type is already deprecated, and ensuring the resource exists. Operates on context data and input structures specific to activity type management. Used to enforce business rules around activity type lifecycle management in workflow systems.",
      "description_length": 326,
      "index": 1642,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DeleteWorkflowType",
      "description": "Handles deletion requests for workflow types by validating permissions and resource status. Operates on context objects and input records specific to workflow type removal. Returns detailed error outcomes for unauthorized actions, invalid states, or missing resources.",
      "description_length": 268,
      "index": 1643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DeleteActivityType",
      "description": "Handles the deletion of an activity type by validating permissions and resource status, returning specific error outcomes for invalid requests. Operates on context data and input structures representing activity type deletion parameters. Used to enforce access control and ensure proper deprecation state before removing an activity type.",
      "description_length": 338,
      "index": 1644,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.CountPendingDecisionTasks",
      "description": "Handles AWS SWF workflow count requests, processing context and input to retrieve pending decision task counts. Operates on SWF context objects and custom input records specific to workflow execution states. Used to monitor and manage workflow progress in distributed systems.",
      "description_length": 276,
      "index": 1645,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.CountPendingActivityTasks",
      "description": "Handles AWS API requests to determine the number of pending activity tasks for a specific resource, returning a count or specific error conditions. Operates with context objects and input records structured for AWS JSON protocols. Used to enforce access controls and monitor task queues in distributed systems.",
      "description_length": 310,
      "index": 1646,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.CountOpenWorkflowExecutions",
      "description": "Handles AWS SWF API requests to retrieve the number of open workflow executions. Operates on context and input structures specific to SWF, returning a count or detailed error types. Used to monitor active workflows in a domain for operational tracking or reporting.",
      "description_length": 265,
      "index": 1647,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.CountClosedWorkflowExecutions",
      "description": "Handles AWS SWF API requests to count closed workflow executions, accepting context and input parameters. Operates on workflow execution data and error types specific to AWS SWF. Used to retrieve execution statistics in systems integrating with Amazon Simple Workflow Service.",
      "description_length": 276,
      "index": 1648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "smaws-clients",
      "description": "Provides functions for initiating and managing asynchronous AWS service requests, including request signing, error handling, and response parsing. Operates on custom types representing AWS service operations, credentials, and HTTP messages. Used to integrate OCaml applications with AWS services like S3 and DynamoDB through a streamlined, effect-based concurrency model.",
      "description_length": 371,
      "index": 1649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton",
      "description": "The module provides a suite of operations for managing AWS infrastructure components, including template versions, service configurations, environment settings, and resource tagging. It utilizes context objects, custom input/output records, and AWS-specific exception types to handle requests for updates, deletions, retrievals, and synchronization. Functions include modifying service templates, updating environment configurations, tagging/untagging resources, and managing deployment workflows with detailed error reporting.",
      "description_length": 527,
      "index": 1650,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster",
      "description": "Provides functions for managing routing control states and configurations through AWS API interactions, supporting both updates and retrieval operations. Key data types include `update_routing_control_state_request`, `update_routing_control_state_response`, and context objects for handling AWS-specific errors and responses. It enables real-time adjustments and monitoring of network routing setups, such as updating control states or fetching current configurations. Examples include modifying traffic flow policies and validating routing data during cloud infrastructure operations.",
      "description_length": 585,
      "index": 1651,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB",
      "description": "The module provides a comprehensive set of operations for managing AWS DynamoDB and related services, including TTL configuration, auto-scaling, item updates, global table management, and transactional writes. It supports data types like context objects, input/output records, and custom error variants, enabling precise control over database configurations and data manipulation. Examples include updating item attributes with conditions, enabling continuous backups, and managing Kinesis streaming destinations. It also handles resource tagging, policy management, and backup restoration, offering robust error handling for AWS-specific exceptions.",
      "description_length": 650,
      "index": 1652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService",
      "description": "Provides a comprehensive set of operations for managing directory services, trust relationships, and cloud infrastructure configurations. It supports data types such as context objects, structured requests, custom exceptions, and result types, enabling actions like trust verification, schema extensions, directory updates, and resource tagging. Examples include validating AWS trust policies, modifying RADIUS settings, restoring system states, and managing certificate registrations. The module offers precise error handling and structured interactions with AWS services for reliable cloud management.",
      "description_length": 603,
      "index": 1653,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery",
      "description": "Provides a comprehensive set of operations for managing AWS services, including DNS namespaces, EC2 instances, tags, and service registrations. Operates on context objects, request records, and custom error types, supporting actions like updating, creating, deleting, and listing resources with precise validation and error handling. Examples include modifying DNS configurations, registering instances, updating health statuses, and retrieving service metadata. Processes structured inputs and returns typed responses, ensuring consistency across AWS API interactions.",
      "description_length": 569,
      "index": 1654,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis",
      "description": "Provides a comprehensive interface for managing AWS Kinesis and DynamoDB streams, including configuration, encryption, tagging, and monitoring. Operates on `Smaws_Lib.Context.t` and custom input/output types, supporting actions like stream creation, shard management, encryption setup, and consumer registration. Examples include adjusting retention periods, splitting shards, retrieving stream metadata, and handling encryption during termination. Manages AWS-specific errors and enforces access controls, resource limits, and validation checks throughout operations.",
      "description_length": 568,
      "index": 1655,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner",
      "description": "Provides unified handling of AWS API interactions, including VPC ingress connections, auto-scaling configurations, resource tagging, and service deployments. Operates on context objects, custom request/response records, and AWS-specific exception types to manage network, resource, and service operations. Supports actions like updating, listing, creating, and deleting AWS resources with structured responses and precise error handling. Examples include modifying VPC rules, tagging resources, initiating deployments, and managing auto-scaling settings.",
      "description_length": 554,
      "index": 1656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService",
      "description": "The module provides a comprehensive set of operations for managing AWS Config and related services, enabling tagging, untagging, recording, evaluating, and remediation of resources. It supports structured requests and responses, with data types like context objects, request records, and custom exception types for precise error handling. Examples include initiating resource evaluations, applying tags, managing conformance packs, and retrieving compliance data across multiple AWS accounts and regions.",
      "description_length": 504,
      "index": 1657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2",
      "description": "Provides structured handling of AWS Kinesis Analytics V2 application lifecycle operations, including creation, deletion, updates, and configuration management. Operates on context objects, request/response records, and custom exception types to manage tagging, snapshots, VPC settings, logging, and application states. Supports actions like updating maintenance configurations, applying tags, retrieving application metadata, and executing deletions with precise error handling. Enables controlled interaction with AWS services for managing cloud-based data processing workflows.",
      "description_length": 579,
      "index": 1658,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI",
      "description": "Provides a comprehensive interface for interacting with AWS resource tagging, metrics, and performance analysis features. It supports operations like tagging, untagging, listing, and retrieving metadata, metrics, and performance reports through structured request and response types. Functions handle context-aware API calls, error management, and data serialization for services such as EC2, S3, RDS, and CloudWatch. Examples include removing tags from resources, fetching metric data, and generating performance reports with detailed error handling.",
      "description_length": 551,
      "index": 1659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces",
      "description": "Manages AWS resource lifecycle operations including tagging, untagging, listing, restoring, and deleting tables and keyspaces, with structured request and response handling. Processes custom data types like `list_keyspaces_request`, `restore_table_request`, and `tag_resource_request`, along with specific error variants for precise control. Supports tasks such as retrieving table metadata, applying tags to resources, or safely removing keyspaces with exception-aware workflows. Enables interaction with DynamoDB and other AWS services through typed interfaces and context-aware operations.",
      "description_length": 592,
      "index": 1660,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub",
      "description": "Manages AWS resource and migration operations through a set of specialized functions that process context, request, and response types to perform actions like updating attributes, notifying task states, retrieving progress streams, listing tasks, and handling artifacts. Each function operates on custom types such as `notify_migration_task_state_request`, `list_migration_tasks_request`, and `discovered_resource_request`, enabling precise control over cloud resource management and migration workflows. Examples include updating metadata on AWS resources, monitoring task progress, and associating or disassociating resources with detailed error handling. The module supports both high-level orchestration and low-level interaction with AWS services, ensuring robust execution in distributed and cloud-native environments.",
      "description_length": 824,
      "index": 1661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM",
      "description": "The module provides a comprehensive set of operations for managing AWS Systems Manager (SSM) resources, including updating service settings, synchronizing data, modifying patch baselines, handling OpsItems, and controlling instance roles. It supports structured request and response types, context objects, and AWS-specific error handling for tasks like parameter management, compliance checks, and maintenance window operations. Examples include updating a patch baseline, creating an OpsItem, synchronizing resource data, and deleting associations, all with detailed error reporting and validation.",
      "description_length": 600,
      "index": 1662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF",
      "description": "The module provides a comprehensive set of operations for managing AWS WAF configurations, including creating, updating, deleting, and retrieving various rule components like XSS, SQL injection, size constraints, regex, IP, and geographic match sets, as well as web ACLs, rule groups, and logging settings. It works with structured data types such as `update_xss_match_set_request`, `update_web_acl_request`, `get_ip_set_request`, and custom error types to handle WAF-specific exceptions. Users can dynamically adjust security policies, enforce size limits, manage IP restrictions, and inspect rule configurations, all while ensuring precise error handling and context-aware operations.",
      "description_length": 686,
      "index": 1663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra",
      "description": "The module provides a suite of functions for interacting with AWS services, enabling the management of thesauri, query suggestions, access controls, data sources, and user experiences through structured requests and detailed error handling. It utilizes `Smaws_Lib.Context.t` and custom request/response types to process operations like updating, listing, retrieving, and deleting resources, with specific exception handling for AWS service interactions. Examples include modifying block lists, synchronizing data sources, fetching featured results, and managing principal mappings, all while enforcing access controls and validating inputs. Operations span from creating and deleting resources to retrieving metadata, ensuring consistent error reporting and controlled execution across distributed systems.",
      "description_length": 806,
      "index": 1664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections",
      "description": "Provides a set of functions for managing AWS resource configurations, synchronization settings, and connections through structured input and output types. Key data types include context objects, input/output records, and custom exception types, with operations for updating, retrieving, and deleting configurations, repository links, hosts, and sync blockers. Examples include modifying repository sync settings, fetching tag metadata, monitoring synchronization status, and establishing secure AWS service connections.",
      "description_length": 519,
      "index": 1665,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity",
      "description": "Provides functions for managing AWS Cognito identity pools, developer identities, and resource tagging through structured requests and error handling. Operates on custom types like `identity_pool`, `Smaws_Lib.Context.t`, and AWS-specific input/output records, supporting actions such as updating roles, removing identities, tagging resources, and retrieving credentials. Examples include modifying pool configurations, unlinking developer identities, and fetching tag attributes for access control. Handles complex workflows like merging duplicate identities and generating temporary credentials with precise error reporting.",
      "description_length": 625,
      "index": 1666,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS",
      "description": "Provides a comprehensive set of operations for interacting with AWS Key Management Service, handling cryptographic functions, key management, and policy enforcement. It supports data encryption/decryption, key rotation, signing, MAC generation, alias management, and grant operations, using context objects, structured requests, and custom error types. Functions include key creation, deletion, description, tagging, untagging, and cross-region replication, with detailed error handling for AWS-specific exceptions. Examples include generating secure random data, managing key policies, and revoking access grants.",
      "description_length": 614,
      "index": 1667,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI",
      "description": "manages AWS resource tagging and untagging, report generation, and tag data retrieval through a set of specialized operations. It supports context-aware interactions with AWS services, utilizing structured input and output types, and handles errors specific to each service. Functions include removing tags from EC2 instances, generating compliance reports, and fetching paginated tag keys or values. It enables programmatic control over resource tagging, reporting, and compliance monitoring within AWS environments.",
      "description_length": 517,
      "index": 1668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless",
      "description": "Provides a comprehensive set of operations for managing AWS resources through structured API interactions, including updates, deletions, listings, and policy management. Key data types include context objects, request/response records, and custom exception types tailored to specific AWS services like IAM, S3, and IoT. Examples include modifying VPC endpoints, updating security policies, retrieving lifecycle configurations, and handling tag operations with precise error reporting.",
      "description_length": 484,
      "index": 1669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX",
      "description": "Provides a comprehensive set of operations for managing AWS resources, including updating and describing subnet groups, parameter groups, clusters, and EKS resources. Operates on context objects, custom request/response types, and structured error variants, enabling precise control over network, database, and cluster configurations. Supports actions like tagging, untagging, rebooting nodes, adjusting replication factors, and enforcing quota and state constraints. Examples include modifying cluster settings, retrieving parameter group details, and handling subnet group deletions with detailed fault reporting.",
      "description_length": 615,
      "index": 1670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams",
      "description": "Provides a set of functions for interacting with AWS Kinesis and DynamoDB Streams, including listing streams, retrieving shard iterators, fetching data, and describing streams. Operates on context objects, custom input/output records, and specific error types derived from AWS exceptions. Supports real-time data processing, stream management, and detailed stream information retrieval. Examples include fetching shard iterators for data consumption and listing active streams for monitoring.",
      "description_length": 492,
      "index": 1671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway",
      "description": "Manages AWS and hypervisor operations through a set of modules that process context objects, input records, and output structures to handle updates, deletions, tagging, listing, and configuration tasks. Key data types include `Smaws_Lib.Context.t`, custom input/output records, and exception types for error handling, enabling actions like firmware upgrades, resource tagging, VM startup, and gateway management. Specific operations include applying bandwidth limits, removing tags, validating hypervisor configurations, and retrieving gateway or hypervisor details. The modules support structured API interactions, conflict resolution, and explicit error reporting across cloud infrastructure workflows.",
      "description_length": 704,
      "index": 1672,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge",
      "description": "Provides a comprehensive set of operations for interacting with AWS services, focusing on event management, resource configuration, and system state control. It supports structured request and response types, custom exception handling, and context-aware processing for tasks like event bus updates, IoT device management, CloudWatch Events, and API destination configurations. Examples include validating event patterns, tagging resources, managing rule activations, and handling archive deletions with precise error reporting. Key data types include context objects, AWS JSON protocol records, and custom exception variants, enabling robust integration with distributed systems.",
      "description_length": 679,
      "index": 1673,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail",
      "description": "The module provides a suite of operations for managing AWS WorkMail and related services, including user, group, and device configuration updates, mailbox quotas, access controls, and resource tagging. It supports structured requests and responses, custom exception types, and context-aware processing for error handling and validation. Examples include updating user attributes, modifying email domains, enforcing mobile device policies, and managing mailbox export jobs.",
      "description_length": 472,
      "index": 1674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2",
      "description": "The module provides a comprehensive set of operations for managing AWS WAF resources, including updating, listing, retrieving, and deleting web ACLs, rule groups, IP sets, regex pattern sets, and logging configurations. It works with context objects, structured request and response types, and custom exception handling for AWS-specific errors. Users can dynamically adjust firewall policies, manage rule sets, configure logging, and enforce access controls with precise error feedback and validation. Examples include updating a web ACL with new rules, retrieving managed rule group versions, deleting outdated IP sets, and associating web ACLs with resources.",
      "description_length": 661,
      "index": 1675,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement",
      "description": "combines AWS API interactions for querying, retrieving, and validating agreement data, with context-aware processing and error management. It supports operations like searching, describing, and fetching agreement records, using context objects, input records, and structured outputs. Custom exceptions and AWS JSON protocol errors are handled throughout the workflow. Examples include retrieving agreement terms with access validation or fetching detailed agreement information under controlled access.",
      "description_length": 502,
      "index": 1676,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield",
      "description": "Provides a comprehensive set of operations for managing AWS Shield Advanced resources, including subscription updates, protection group modifications, emergency contact settings, tagging, untagging, and attack data retrieval. Operates on custom request and response types, context objects, and AWS-specific exception structures to handle validation, concurrency, and error conditions. Supports actions like enabling/disabling proactive engagement, configuring automatic responses, and retrieving detailed attack statistics. Examples include updating protection group configurations, removing tags from EC2 instances, and fetching subscription state information.",
      "description_length": 661,
      "index": 1677,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS",
      "description": "Provides a comprehensive set of operations for managing AWS resources through structured API interactions, including tagging, untagging, policy management, and resource set configurations. Operates with context objects, request/response records, and custom exception types to handle AWS-specific errors and validate input. Supports tasks like retrieving compliance data, listing resources, managing notification channels, and associating or disassociating firewalls, enabling precise control over cloud infrastructure workflows. Examples include fetching tags for a resource, updating application lists, and removing firewall associations with detailed error handling.",
      "description_length": 668,
      "index": 1678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics",
      "description": "Manages AWS Kinesis Analytics application lifecycle operations, including creation, update, deletion, and configuration changes, through a set of specialized handlers. Core data types include context objects, request and response records, and custom exception types for error handling. Operations range from tagging and untagging resources to modifying application inputs, outputs, and logging configurations, with strict validation and concurrency control. Examples include updating application settings, removing data source references, and retrieving application metadata via structured API calls.",
      "description_length": 600,
      "index": 1679,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail",
      "description": "The module provides a suite of operations for managing AWS infrastructure components, including databases, EC2 instances, load balancers, S3 buckets, and more. It supports creating, updating, deleting, and retrieving resources through structured requests, with detailed error handling for AWS-specific exceptions. Key data types include context objects, request and response records, and custom exception types, enabling precise control over cloud resource management workflows. Examples include modifying database configurations, updating load balancer attributes, managing S3 bucket policies, and provisioning EC2 instances with secure access controls.",
      "description_length": 654,
      "index": 1680,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN",
      "description": "Provides validation, management, and interaction with AWS state machines, IoT Greengrass, and resource tagging systems. Operates on context objects, ARN structures, and custom error types to handle tasks like updating aliases, executing workflows, tagging resources, and managing execution lifecycles. Supports operations such as starting, terminating, and describing state machine executions, as well as retrieving execution histories and version lists. Enables precise control over AWS Step Functions and related services with detailed error handling and structured input/output processing.",
      "description_length": 592,
      "index": 1681,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM",
      "description": "Provides a comprehensive interface for managing AWS Certificate Manager (ACM) resources through structured request handling, validation, and error management. Operates on context objects, request/response records, and custom exception types, supporting actions like certificate creation, renewal, import, deletion, tagging, and metadata retrieval. Examples include validating ARN formats, resending validation emails, exporting certificate data, and managing tag policies. Processes AWS-specific errors and enforces constraints during certificate lifecycle operations.",
      "description_length": 568,
      "index": 1682,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS",
      "description": "Provides comprehensive AWS SQS interaction capabilities through context-aware operations, handling message delivery, queue management, and attribute manipulation with precise error reporting. Key data types include context objects, request records, and custom error types derived from AWS JSON protocols, supporting operations like message sending, queue creation, attribute updates, and batch processing. Examples include moving messages between queues, updating visibility timeouts, retrieving dead-letter sources, and managing access controls. Each operation enforces validation, security checks, and service-specific error handling to ensure reliable queue management.",
      "description_length": 672,
      "index": 1683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail",
      "description": "Provides a comprehensive set of functions for managing AWS CloudTrail configurations, including updating trails, event data stores, channels, and import processes. It supports operations like adding or removing tags, modifying event selectors, and handling errors through custom exception types and structured responses. Key data types include context objects, request/response records, and error-specific variants, enabling precise control over logging, querying, and policy enforcement. Examples include configuring logging for specific events, restoring data stores, and managing channel states with detailed validation and error reporting.",
      "description_length": 643,
      "index": 1684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball",
      "description": "Provides a unified interface for interacting with various AWS services, including EC2, EMR, ECS, S3, and Snowball, through structured requests and context-aware operations. Supports data types such as context objects, request/response structures, and custom error variants, enabling tasks like managing pricing agreements, job state transitions, cluster configurations, and shipping label generation. Examples include retrieving job manifests, updating cluster settings, fetching reserved instance pricing, and generating return shipping labels. Handles pagination, validation, and error-specific responses across multiple AWS API interactions.",
      "description_length": 644,
      "index": 1685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe",
      "description": "Provides structured operations for managing AWS Transcribe and related services, including creating, updating, listing, and deleting vocabulary filters, transcription jobs, medical scribe jobs, and call analytics configurations. Operates with context objects, request/response records, and custom exception types to handle service-specific errors and ensure consistent data management. Supports real-time modifications, error-aware workflows, and integration with clinical and analytical systems. Examples include updating medical terminology, initiating transcription jobs, and removing outdated call analytics categories.",
      "description_length": 623,
      "index": 1686,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF",
      "description": "Provides a comprehensive set of operations for managing AWS SWF workflows, including tagging, untagging, deprecating, undeprecating, starting, terminating, and polling for tasks. It supports custom types like `undeprecate_activity_type_input`, `operation_not_permitted_fault`, and `workflow_type_infos`, enabling precise control over workflow and activity lifecycle management. Functions include retrieving execution histories, listing tags, counting open/closed workflows, and handling task heartbeats, cancellations, and completions. Examples include restoring deprecated workflow types, terminating running executions, and monitoring task queues for system orchestration.",
      "description_length": 674,
      "index": 1687,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1727,
    "meaningful_modules": 1688,
    "filtered_empty_modules": 39,
    "retention_rate": 0.9774174869716271
  },
  "statistics": {
    "max_description_length": 824,
    "min_description_length": 225,
    "avg_description_length": 332.9218009478673,
    "embedding_file_size_mb": 6.131415367126465
  }
}