{
  "package": "smaws-clients",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1687,
  "creation_timestamp": "2025-08-15T00:33:38.523605",
  "modules": [
    {
      "module_path": "Smaws_Client_FMS.DeleteResourceSet",
      "library": "smaws-clients.fms",
      "description": "Deletes a specified resource set in AWS FMS by sending a deletion request. It handles errors such as invalid input, resource not found, and internal service issues. This function is used when managing AWS Firewall Manager policies and associated resources.",
      "description_length": 256,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.GetThirdPartyFirewallAssociationStatus",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to retrieve the association status of third-party firewalls within AWS FMS. It processes input contexts and structured requests to return detailed status responses or specific error types. Use it to programmatically check if a third-party firewall is properly associated with an AWS account for security policy enforcement.",
      "description_length": 351,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListThirdPartyFirewallFirewallPolicies",
      "library": "smaws-clients.fms",
      "description": "This module handles requests to list firewall policies for third-party firewalls, interacting with the FMS service. It processes input requests and returns structured responses or specific error types like `InvalidInputException` or `ResourceNotFoundException`. It is used to retrieve and manage firewall policy configurations in a security management workflow.",
      "description_length": 361,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.PutNotificationChannel",
      "library": "smaws-clients.fms",
      "description": "This module handles the creation or updating of notification channels in AWS FMS by sending a PUT request with the provided configuration. It operates on a context and a notification channel request, returning a result indicating success or a specific AWS FMS error. Use this module to configure SNS topics for receiving security policy compliance events from AWS FMS.",
      "description_length": 368,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.GetAdminAccount",
      "library": "smaws-clients.fms",
      "description": "This module handles retrieving administrative account details by sending a request and returning a result with either the response data or specific error types. It works with context and request/response structures defined in the Smaws_Client_FMS library. A concrete use case is fetching admin account information in an AWS FMS integration, handling errors such as resource not found or invalid operations.",
      "description_length": 406,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.GetPolicy",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to retrieve policy details from AWS FMS, handling responses and specific error conditions such as resource not found or invalid operations. It works with context and policy request/response structures defined in the Smaws_Client_FMS library. Use this module when querying FMS policies to ensure correct handling of AWS service interactions and error states.",
      "description_length": 385,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutAdminAccount",
      "library": "smaws-clients.fms",
      "description": "Sends a request to create or update an administrative account in FMS, handling validation and error responses. Works with context and request data types specific to FMS administrative account operations. Used when configuring centralized security management across AWS accounts.",
      "description_length": 278,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.BatchDisassociateResource",
      "library": "smaws-clients.fms",
      "description": "This module handles the disassociation of resources in batches by sending a request to the FMS service. It works with context and request/response types specific to FMS, including error types like `InvalidInputException` and `ResourceNotFoundException`. It is used when detaching multiple resources from a policy in AWS Firewall Manager programmatically.",
      "description_length": 354,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DisassociateThirdPartyFirewall",
      "library": "smaws-clients.fms",
      "description": "This module handles the disassociation of a third-party firewall from AWS Firewall Manager. It provides a `request` function that takes a context and a disassociation request, returning a result with either a response or specific error types like `InvalidInputException` or `ResourceNotFoundException`. It is used when managing firewall policies and removing third-party integrations in AWS FMS.",
      "description_length": 395,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DisassociateAdminAccount",
      "library": "smaws-clients.fms",
      "description": "This module provides a single operation to disassociate an admin account in AWS FMS, handling errors specific to the operation such as resource not found or invalid state. It works with AWS context and request structures tailored for FMS admin account management. A concrete use case is removing a delegated administrator account from an AWS organization's FMS configuration.",
      "description_length": 375,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListResourceSetResources",
      "library": "smaws-clients.fms",
      "description": "This module handles the `list_resource_set_resources` API operation, which retrieves the resources associated with a specific resource set in AWS FMS. It works with AWS context, request, and response structures, along with various error types for handling failure cases. A typical use case involves querying AWS FMS to inspect the resources protected under a given resource set for compliance or monitoring purposes.",
      "description_length": 416,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteNotificationChannel",
      "library": "smaws-clients.fms",
      "description": "Deletes a notification channel for AWS Firewall Manager, handling errors such as resource not found or invalid operations. Works with AWS context and request structures specific to FMS notifications. Use this module to remove existing notification channels when managing AWS security policies programmatically.",
      "description_length": 310,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutPolicy",
      "library": "smaws-clients.fms",
      "description": "This module handles the submission of policy updates to AWS FMS, interacting directly with the service via the `request` function. It processes responses and potential errors from the AWS FMS API, specifically supporting operations to configure and enforce security policies across AWS accounts. Use this module when applying or modifying firewall management policies in AWS environments.",
      "description_length": 388,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetProtocolsList",
      "library": "smaws-clients.fms",
      "description": "This module handles retrieving a list of protocols by sending a structured request and returning a result that includes either the response data or specific error types. It works with context and protocol-related data structures defined in the Smaws_Lib and Smaws_Client_FMS modules. Concrete use cases include querying protocol configurations from a remote service and handling service-specific errors during retrieval.",
      "description_length": 420,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.AssociateThirdPartyFirewall",
      "library": "smaws-clients.fms",
      "description": "This module handles the association of third-party firewalls with AWS Firewall Manager by sending a request to link a firewall account. It operates on context and request/response types specific to the FMS service, including error types for handling failure scenarios like invalid input or missing resources. It is used when integrating external firewall services into an AWS environment for centralized policy management.",
      "description_length": 422,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteAppsList",
      "library": "smaws-clients.fms",
      "description": "Sends a request to delete a list of applications in the FMS service, handling errors such as internal failures, invalid operations, or missing resources. Works with context and request structures specific to FMS application deletion. Useful for removing multiple application entries in a single call during configuration cleanup or migration.",
      "description_length": 342,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListAppsLists",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to list application lists in AWS FMS, handling responses and specific AWS service errors. It operates on AWS context and request/response data structures defined in the FMS protocol. Use it to retrieve application list metadata from FMS policies, handling service-specific exceptions like resource not found or limit exceeded.",
      "description_length": 354,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.UntagResource",
      "library": "smaws-clients.fms",
      "description": "Removes specified tags from a resource managed by FMS. It accepts a context and an untagging request, returning a result that indicates success or a specific AWS error. This operation is useful when cleaning up resource metadata or adjusting tag-based policies.",
      "description_length": 261,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListPolicies",
      "library": "smaws-clients.fms",
      "description": "This module handles the `ListPolicies` operation for the FMS service, sending requests to retrieve a list of policies and returning either a response with policy data or specific error types. It works with the `list_policies_request` and `list_policies_response` types, interacting with the AWS FMS API to manage firewall policies. A concrete use case is retrieving all configured firewall policies in an AWS account for auditing or monitoring purposes.",
      "description_length": 453,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.GetAppsList",
      "library": "smaws-clients.fms",
      "description": "Handles retrieving a list of applications from a service using a structured request. It processes the context and request parameters to return either a response with application data or specific error types. Useful for querying application metadata in automated deployment or monitoring workflows.",
      "description_length": 297,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetComplianceDetail",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to retrieve compliance details for AWS Firewall Manager policies, handling responses and errors specific to compliance queries. It operates on AWS context and request/response structures defined in the `Smaws_Client_FMS` module. A concrete use case is querying compliance status for a specific policy and account combination in AWS FMS.",
      "description_length": 364,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeleteProtocolsList",
      "library": "smaws-clients.fms",
      "description": "Handles deletion of protocols lists in FMS by sending a request to remove a specified protocols list. It works with the context type and a delete request specific to FMS protocols lists. This module is used when managing network security policies, such as removing outdated protocol definitions from a firewall configuration.",
      "description_length": 325,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetNotificationChannel",
      "library": "smaws-clients.fms",
      "description": "This module handles retrieving notification channel configurations from AWS FMS by sending a request and returning a result with either the response data or specific error types. It works with AWS context, request, and response structures defined in the Smaws_Client_FMS module. A concrete use case is querying the current SNS topic used for FMS notifications in an AWS environment.",
      "description_length": 382,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetProtectionStatus",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to retrieve AWS Firewall Manager protection status for specified resources. It processes input contexts and request parameters to return either a protection status response or specific AWS error types. Use it to check if resources like EC2 instances or CloudFront distributions are protected by FMS policies.",
      "description_length": 336,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.BatchAssociateResource",
      "library": "smaws-clients.fms",
      "description": "This module handles batch association of resources in FMS, providing a `request` function that sends a batch association request and returns a result with either a response or specific error types. It works with context and request/response types defined in the `Smaws_Lib` and `Smaws_Client_FMS` libraries. A concrete use case is associating multiple AWS resources with an FMS policy in a single operation, handling errors like invalid input or resource not found.",
      "description_length": 465,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetViolationDetails",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to retrieve detailed information about specific violations detected by AWS Firewall Manager. It processes a violation ID and context to return structured violation details or error responses. Use it to programmatically access compliance and policy violation data for auditing or automated remediation workflows.",
      "description_length": 339,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutProtocolsList",
      "library": "smaws-clients.fms",
      "description": "Sends a request to associate a list of protocols with an AWS Firewall Manager policy, handling protocol validation and policy constraints. Works with AWS FMS protocol lists, policy identifiers, and network protocol specifications. Used when configuring centralized network protocol enforcement across AWS accounts.",
      "description_length": 314,
      "index": 26,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListDiscoveredResources",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to list discovered resources, handling responses and errors from the FMS service. It works with context and request/response types specific to FMS resource discovery. A concrete use case is retrieving a list of resources detected by FMS for compliance evaluation.",
      "description_length": 291,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetResourceSet",
      "library": "smaws-clients.fms",
      "description": "This module handles the retrieval of resource sets by sending a structured request and parsing the response. It works with context data, resource set requests, and error types like invalid input or resource not found. A concrete use case is fetching a collection of resources based on specific criteria from a remote service.",
      "description_length": 325,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListTagsForResource",
      "library": "smaws-clients.fms",
      "description": "This module handles the AWS FMS operation to list tags for a specified resource. It accepts a context and a request object containing the resource ARN, returning a result with the tag list or specific AWS service errors. It is used to retrieve metadata tags associated with AWS resources for management and billing purposes.",
      "description_length": 324,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.GetAdminScope",
      "library": "smaws-clients.fms",
      "description": "This module issues requests to retrieve administrative scope configurations from AWS FMS, handling responses and specific error conditions. It operates on AWS context and FMS-specific request/response data structures. Use this to fetch admin scope details when managing AWS Firewall Manager policies and resource exclusions.",
      "description_length": 324,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListMemberAccounts",
      "library": "smaws-clients.fms",
      "description": "Handles requests to list member accounts associated with an AWS Firewall Manager (FMS) administrator account. It sends a query using a provided context and request configuration, returning either a response with account details or an error indicating issues like missing resources or internal service problems. This module is used to programmatically retrieve managed account information in FMS setups, such as during audit or management workflows.",
      "description_length": 448,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutAppsList",
      "library": "smaws-clients.fms",
      "description": "Makes an API request to update a list of applications in FMS, handling input validation, resource existence checks, and rate limiting. Works with context and request/response FMS types. Used when modifying application lists for firewall management in AWS.",
      "description_length": 255,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListComplianceStatus",
      "library": "smaws-clients.fms",
      "description": "This module handles the `ListComplianceStatus` operation for AWS FMS, sending a request to retrieve compliance status information and returning a result with either the response or specific error types. It works with the `list_compliance_status_request` and `list_compliance_status_response` data structures, which include details like policy IDs and compliance summaries. A concrete use case is querying the compliance status of AWS resources against FMS policies for automated governance workflows.",
      "description_length": 500,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListAdminsManagingAccount",
      "library": "smaws-clients.fms",
      "description": "This module handles requests to list administrators managing an account in AWS FMS. It works with context and request/response structures specific to the FMS service. Use it to retrieve administrator details for account management in security and compliance workflows.",
      "description_length": 268,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.TagResource",
      "library": "smaws-clients.fms",
      "description": "Sends a request to tag a resource in FMS, handling errors related to input validation, resource state, and service limits. Works with FMS-specific request and response types, including error variants like `InvalidInputException` and `ResourceNotFoundException`. Used when applying tags to AWS Firewall Manager resources programmatically.",
      "description_length": 337,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListResourceSets",
      "library": "smaws-clients.fms",
      "description": "This module handles the `list_resource_sets` operation for the FMS service, sending requests to retrieve resource sets and returning parsed responses or specific AWS error types. It works with AWS context, request, and response structures, along with standard OCaml result types. Use this module to interact with FMS resource sets, such as listing existing resource sets for policy management or auditing.",
      "description_length": 405,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.AssociateAdminAccount",
      "library": "smaws-clients.fms",
      "description": "This module handles the association of an admin account in FMS by sending a request with the provided context and admin account details. It processes errors specific to FMS operations, such as invalid input, resource not found, and limit exceeded, returning a result indicating success or failure. It is used when setting up or modifying admin account configurations in FMS services.",
      "description_length": 383,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.ListProtocolsLists",
      "library": "smaws-clients.fms",
      "description": "This module handles the `request` operation to list protocols lists in FMS, interacting with AWS JSON error responses. It works with context and request/response types specific to FMS protocols lists. A concrete use case is retrieving configured protocols lists from FMS for policy management or audit purposes.",
      "description_length": 311,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.DeletePolicy",
      "library": "smaws-clients.fms",
      "description": "Deletes a specified policy from AWS FMS, handling errors such as invalid input, resource not found, or operation limits. Works with AWS FMS policy identifiers and context objects for authentication and configuration. Useful when removing outdated or unused security policies from an AWS environment.",
      "description_length": 299,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_FMS.ListAdminAccountsForOrganization",
      "library": "smaws-clients.fms",
      "description": "This module handles the AWS FMS operation to list admin accounts for an organization. It sends a request using the provided context and returns a result containing either the response data or specific AWS FMS error types. It works with AWS FMS request and response structures, handling errors such as internal, invalid operation, limit exceeded, and resource not found exceptions.",
      "description_length": 380,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS.PutResourceSet",
      "library": "smaws-clients.fms",
      "description": "Sends a request to create or update a resource set in AWS FMS, handling validation and error responses. Works with AWS FMS resource set requests and responses, including error types like invalid input or limit exceeded. Used to manage resource sets for AWS Firewall Manager policies, such as associating resources with security rules.",
      "description_length": 334,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_FMS",
      "library": "smaws-clients.fms",
      "description": "This module facilitates managing network security policies, compliance, and resource configurations in AWS Firewall Manager (FMS), with operations focused on policy enforcement, violation remediation, and infrastructure synchronization. It works with structured data such as network ACLs, route tables, protocol/application lists, policy compliance statuses, and violation reports to address misconfigurations in firewalls, subnets, and routing. Use cases include automating security compliance checks, resolving network infrastructure discrepancies, and configuring centralized firewall policies across multi-account environments.",
      "description_length": 631,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetWebACL",
      "library": "smaws-clients.wafv2",
      "description": "This module handles retrieving a WebACL configuration from AWS WAFV2 by sending a request and returning the response or specific error types. It works with AWS context, request, and response structures, along with custom error types for WAFV2-specific exceptions. It is used to fetch detailed information about a specific WebACL resource by its identifier.",
      "description_length": 356,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateRegexPatternSet",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to update a regex pattern set in AWS WAFV2, handling concurrency and validation errors specific to the service. It works with structured request and response types defined for WAFV2 regex pattern set updates, including error types for duplicate items, invalid parameters, and optimistic lock conflicts. A concrete use case is modifying a set of regex patterns used for web request inspection in a WAF rule.",
      "description_length": 434,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListAvailableManagedRuleGroupVersions",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing available versions of managed rule groups in AWS WAFv2. It works with AWS context and request/response structures specific to WAFv2 managed rule groups. Use this to retrieve version details for managed rule groups when configuring or updating WAF rules.",
      "description_length": 281,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListIPSets",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing IP sets in AWS WAFV2 by sending a request and returning a result with either the response or specific WAF-related errors. It operates on AWS context and WAFV2-specific request/response data types. Use it to retrieve configured IP sets for web ACLs in WAFV2, handling errors like invalid parameters or internal service issues.",
      "description_length": 353,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateAPIKey",
      "library": "smaws-clients.wafv2",
      "description": "This module issues API key creation requests for AWS WAFv2, handling responses and specific error conditions like invalid parameters or rate limiting. It operates on context and request/response structures defined in the Smaws_Client_WAFV2 library. Concrete use cases include programmatically generating API keys to secure web access control rules or integrating WAFv2 with external authentication systems.",
      "description_length": 406,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeletePermissionPolicy",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the deletion of permission policies in AWS WAFV2 by sending a request to remove a specified policy. It works with AWS WAFV2-specific request and response types, along with error types such as `WAFInternalErrorException` and `WAFNonexistentItemException`. A concrete use case is removing a permission policy attached to a WAF rule group to control cross-account access.",
      "description_length": 388,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetRateBasedStatementManagedKeys",
      "library": "smaws-clients.wafv2",
      "description": "This module executes a request to retrieve managed keys associated with a rate-based rule in AWS WAF, specifically handling errors related to invalid parameters, non-existent items, and unsupported key types. It operates on AWS WAF rate-based statement configurations and returns a response containing the managed keys or an error. Use this module to inspect or manage rate-based rule keys in AWS WAFV2, particularly when integrating with custom rule management systems.",
      "description_length": 470,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetSampledRequests",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to retrieve sampled HTTP requests from AWS WAFv2, specifically handling the `get_sampled_requests` operation. It works with AWS WAFv2 rule sets and sampling configurations to analyze recent web traffic data. Use this module to inspect live sampled requests that match specific rules, aiding in rule tuning and traffic analysis.",
      "description_length": 355,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteRegexPatternSet",
      "library": "smaws-clients.wafv2",
      "description": "Deletes a regex pattern set from AWS WAFV2 using a provided context and request configuration. Handles errors related to resource dependencies, invalid parameters, concurrency conflicts, and tagging operations. Useful for removing outdated or unused regex patterns from WAF rules programmatically.",
      "description_length": 297,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteAPIKey",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the deletion of API keys by sending a request to remove a specified API key and returning a result indicating success or a specific error. It works with the context type and structured request and response types for API key deletion, including detailed error cases like invalid parameters or non-existent items. It is used when securely removing an API key from a system, ensuring proper error handling for common failure scenarios.",
      "description_length": 452,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteLoggingConfiguration",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the deletion of logging configurations for AWS WAFv2 resources. It provides a `request` function that sends a deletion command and returns a result indicating success or a specific AWS WAFv2 error. It works with WAFv2 logging configuration identifiers and is used when disabling logging for web ACLs.",
      "description_length": 320,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UntagResource",
      "library": "smaws-clients.wafv2",
      "description": "Removes tags from a WAFv2 resource using the provided context and request parameters. It handles errors specific to tag operations, resource existence, and parameter validation. This operation is useful when managing AWS WAFv2 resources that require tag-based access control or cost tracking.",
      "description_length": 292,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateRuleGroup",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to update AWS WAF rule groups, handling responses and specific error conditions such as configuration warnings, duplicate items, and optimistic lock conflicts. It operates on rule group configurations using the AWS JSON protocol, providing precise error types for common update scenarios. Use this module to programmatically modify rule group settings in AWS WAFV2, ensuring correct versioning and handling of dependencies.",
      "description_length": 451,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListRuleGroups",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing AWS WAF rule groups by sending a request and returning a result with either the response data or specific WAF error types. It operates on AWS context and request/response structures defined in the Smaws_Client_WAFV2 module. A concrete use case is retrieving configured rule groups to manage web application firewall policies in AWS.",
      "description_length": 360,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListManagedRuleSets",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing managed rule sets for AWS WAFV2 by sending a request and returning a result with either the response or specific WAF-related errors. It operates on WAFV2 context and request/response data types, including error types like internal, invalid operation, and invalid parameter exceptions. It is used to retrieve available managed rule sets in AWS WAFV2 configurations.",
      "description_length": 392,
      "index": 57,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.DisassociateWebACL",
      "library": "smaws-clients.wafv2",
      "description": "This module provides a function to disassociate a web ACL from a resource in AWS WAFV2. It works with context and request/response types specific to the WAFV2 service, handling errors such as invalid parameters or non-existent items. A concrete use case is removing a web ACL from a CloudFront distribution or API Gateway stage during infrastructure management tasks.",
      "description_length": 367,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListWebACLs",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing AWS WAFv2 web access control lists (WebACLs) by sending a request and returning a result with either the response data or specific WAFv2 error types. It operates on context and request structures to interact with AWS WAFv2 services, providing direct access to WebACL metadata. Use this module to retrieve and manage WebACL configurations for AWS resources like CloudFront distributions or API Gateway stages.",
      "description_length": 436,
      "index": 59,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteRuleGroup",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the deletion of a WAFV2 rule group by sending a request with the provided context and delete rule group request parameters. It works with the `delete_rule_group_request` and `delete_rule_group_response` data types, along with various WAFV2-specific error types for handling failure cases. A concrete use case is removing an unused or outdated rule group from an AWS WAFV2 configuration to maintain an organized and effective web application firewall setup.",
      "description_length": 476,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.PutManagedRuleSetVersions",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the submission of managed rule set versions to AWS WAFV2, providing the `request` function that sends a version update request and returns a result with either a success response or specific WAFV2 error types. It works with AWS WAFV2 rule set version requests and responses, along with contextual information from `Smaws_Lib.Context`. A concrete use case is updating the version of a managed rule group in AWS WAFV2 to apply the latest security rules.",
      "description_length": 471,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteFirewallManagerRuleGroups",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the deletion of Firewall Manager rule groups in AWS WAFV2. It processes a request with a context and returns a result containing either a success response or specific WAFV2 error types. It is used when managing rule group deletions in automated security workflows or infrastructure cleanup tasks.",
      "description_length": 316,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateIPSet",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the creation of IP sets for AWS WAFv2 by sending a request with provided configuration and returning a result that includes either a success response or specific AWS WAFv2 error types. It works with IP set configuration data, including parameters like name, scope, IP version, and addresses. A concrete use case is defining a set of malicious IP addresses to block in a web application firewall policy.",
      "description_length": 422,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateRuleGroup",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the creation of a WAF rule group by sending a request and returning a result with either a response or specific WAF error types. It works with AWS WAFv2 rule group configurations, including parameters like rule definitions, visibility settings, and tags. Use this module to programmatically set up new rule groups for web application firewall policies in AWS.",
      "description_length": 379,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DescribeManagedProductsByVendor",
      "library": "smaws-clients.wafv2",
      "description": "This module handles requests to describe managed products by vendor, interacting with AWS WAFV2 services. It processes input contexts and request structures to retrieve managed product details, returning either a response or specific error types like internal, invalid operation, or invalid parameter exceptions. Use this to query information about managed rule groups provided by a vendor within AWS WAFV2.",
      "description_length": 407,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetIPSet",
      "library": "smaws-clients.wafv2",
      "description": "This module handles retrieving IP set configurations from AWS WAFV2 by sending a request and returning the response with details like IP addresses and metadata. It works with IP set identifiers and AWS context for authentication and region configuration. Use this module to fetch specific IP set information for monitoring or managing web access control policies.",
      "description_length": 363,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetManagedRuleSet",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to retrieve managed rule set details from AWS WAFV2. It processes a context and a `get_managed_rule_set_request` to produce either a `get_managed_rule_set_response` or specific WAFV2 error types such as `WAFInternalErrorException` or `WAFNonexistentItemException`. It is used to fetch configuration details of a managed rule set by its identifier in an AWS account.",
      "description_length": 393,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetDecryptedAPIKey",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to retrieve decrypted API keys from AWS WAFV2, handling responses and specific AWS service errors. It operates on AWS context and request/response structures defined for WAFV2. Concrete use cases include securely accessing stored API keys for web application firewall configurations and troubleshooting key access errors in deployment pipelines.",
      "description_length": 373,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListAvailableManagedRuleGroups",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing available managed rule groups for WAFV2 by sending a request and returning a result with either the response or specific WAF-related error types. It operates on context and request/response structures defined in the WAFV2 client library. Use this module when retrieving predefined rule groups to apply in WAF configurations, such as when setting up or updating web ACLs with managed rules.",
      "description_length": 417,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DescribeAllManagedProducts",
      "library": "smaws-clients.wafv2",
      "description": "This module handles requests to describe all managed products in AWS WAFV2, providing a `request` function that sends a query and returns a result with either the response data or specific WAF-related error types. It works with context and request/response types defined in the `Smaws_Client_WAFV2` module, including detailed error handling for common WAF service exceptions. It is used to retrieve information about managed rule groups available for use in WAF policies.",
      "description_length": 471,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.PutPermissionPolicy",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the submission of permission policies for AWS WAFv2 resources, providing a `request` function that sends a policy document to AWS. It works with AWS context objects and structured policy request/response types, including detailed error handling for common AWS WAFv2 policy exceptions. Use this module to programmatically attach or update permission policies on WAFv2 rule groups or web ACLs.",
      "description_length": 411,
      "index": 71,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateRegexPatternSet",
      "library": "smaws-clients.wafv2",
      "description": "This module issues AWS WAFv2 API requests to create regex pattern sets, handling responses and specific error conditions like duplicate items or invalid parameters. It operates on WAFv2 request and response structures, including context data for authentication and region configuration. A concrete use case is defining and deploying custom regex patterns to inspect web requests in AWS WAFv2 rule groups.",
      "description_length": 404,
      "index": 72,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.GenerateMobileSdkReleaseUrl",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to generate URLs for mobile SDK release downloads, handling authentication and parameter validation. It works with context objects and structured request/response types specific to the WAFV2 service. Use this to programmatically obtain signed URLs for distributing mobile SDKs in deployment pipelines or CI/CD workflows.",
      "description_length": 348,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.CreateWebACL",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the creation of a WebACL in AWS WAFV2, sending a request and returning a result with either a response or specific WAFV2 error types. It works with context, request, and response structures defined in the WAFV2 client library. Use this when programmatically setting up or updating a WebACL with rules, visibility configurations, and tags in AWS WAFV2.",
      "description_length": 371,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateIPSet",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to update IP sets in AWS WAFV2, handling responses and specific error conditions like duplicate items, invalid parameters, and optimistic lock conflicts. It operates on IP set update requests and responses, interacting with AWS WAFV2's API to manage IP-based rules. Concrete use cases include dynamically updating firewall rules to block or allow specific IP addresses in response to security events.",
      "description_length": 428,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetLoggingConfiguration",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to retrieve AWS WAFv2 logging configurations, handling responses and specific AWS error types. It operates on WAFv2 resource identifiers and logging configuration data structures. Use this to fetch current logging settings for WAFv2 web ACLs in AWS environments.",
      "description_length": 290,
      "index": 76,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListAPIKeys",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing API keys for WAFV2 resources by sending a request and returning a result with either the response or specific WAFV2 error types. It operates on `list_api_keys_request` and `list_api_keys_response` data structures, interacting with WAFV2 services through the provided context. A concrete use case is retrieving API keys associated with a WAFV2 web ACL for monitoring or management purposes.",
      "description_length": 417,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetPermissionPolicy",
      "library": "smaws-clients.wafv2",
      "description": "This module handles retrieving permission policies for AWS WAFv2 resources by sending a request and returning a result with either the policy response or specific AWS WAFv2 error types. It operates on AWS WAFv2 request and response structures, including error types like `WAFInternalErrorException` and `WAFNonexistentItemException`. A concrete use case is fetching the resource policy of a WAFv2 web ACL to verify or manage cross-account permissions.",
      "description_length": 451,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.TagResource",
      "library": "smaws-clients.wafv2",
      "description": "The module includes a single function `request` that sends a tag resource request to AWS WAFV2, handling responses and specific error cases. It operates on AWS WAFV2 tag resource requests and responses, and is used to associate tags with WAFV2 resources such as web ACLs or rules. This function is typically used in scenarios where tagging AWS WAF resources is required for organization, billing, or access control purposes.",
      "description_length": 424,
      "index": 79,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListTagsForResource",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing tags for a WAFV2 resource by sending a request and returning a result with either the tag response or specific WAFV2 error types. It operates on WAFV2 resource identifiers and tag structures, supporting use cases like auditing resource tags or managing tag-based access controls in AWS WAFV2.",
      "description_length": 320,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetWebACLForResource",
      "library": "smaws-clients.wafv2",
      "description": "This module handles retrieving a WebACL configuration for a specific AWS resource using the WAFV2 service. It works with AWS context and request/response structures to interact with WAFV2, specifically resolving associated security policies for cloud resources. It is used in scenarios where access control rules need to be inspected or modified for services like CloudFront or API Gateway.",
      "description_length": 390,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteWebACL",
      "library": "smaws-clients.wafv2",
      "description": "Deletes a WebACL resource in AWS WAFV2, handling concurrency and dependency constraints. It accepts a context and a delete request, returning a result with either the deletion response or specific WAFV2 error types. This operation is used when removing a web access control list that is no longer needed or when cleaning up resources in a deployment pipeline.",
      "description_length": 359,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.PutLoggingConfiguration",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the configuration of logging for AWS WAFv2 resources by sending a structured request to enable or update logging settings. It works with WAFv2 logging configuration requests and responses, interacting with AWS context objects to manage permissions and resource identifiers. Concrete use cases include enabling CloudWatch logging for web ACLs and updating log destination settings in AWS WAFv2.",
      "description_length": 413,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListRegexPatternSets",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing regex pattern sets in AWS WAFV2 by sending a request and returning a result with either the response or specific WAF-related errors. It operates on AWS context and request/response types defined in the Smaws_Client_WAFV2 library. A concrete use case is retrieving configured regex patterns for web request inspection in security rule management.",
      "description_length": 373,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetRegexPatternSet",
      "library": "smaws-clients.wafv2",
      "description": "This module handles retrieving a regex pattern set from AWS WAFV2 by sending a request and returning the response or specific AWS WAFV2 error types. It operates with context and request/response data structures defined in the Smaws_Client_WAFV2 module. A concrete use case is fetching a named regex pattern set to inspect or update its regex patterns for web request filtering.",
      "description_length": 377,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetMobileSdkRelease",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to retrieve details of a mobile SDK release, handling responses and specific AWS WAF errors. It processes a context and a structured request, returning either a response with SDK details or an error indicating issues like invalid parameters, non-existent items, or internal service failures. It is used to fetch and validate mobile SDK release information from WAFV2 services.",
      "description_length": 404,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DeleteIPSet",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the deletion of an IP set in AWS WAFV2, providing a `request` function that takes a context and a delete IP set request. It works with AWS WAFV2-specific data types such as `delete_ip_set_request` and `delete_ip_set_response`, along with various error types representing AWS WAFV2 API exceptions. It is used when removing an IP set from a WAFV2 web ACL, handling cases like invalid parameters, optimistic lock conflicts, and resource not found errors.",
      "description_length": 471,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.CheckCapacity",
      "library": "smaws-clients.wafv2",
      "description": "Performs a capacity check for AWS WAFv2 rules by sending a request to validate if the provided rule group configuration exceeds account limits. Works with AWS WAFv2 rule groups and associated metadata, returning capacity usage details or specific AWS WAFv2 error conditions. Useful when planning large rule group deployments to avoid exceeding AWS service quotas.",
      "description_length": 363,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.DescribeManagedRuleGroup",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to describe managed rule groups in AWS WAFV2, handling responses and specific error conditions like expired versions or invalid parameters. It operates on WAFV2 rule group descriptors, working with input structures that specify rule group identifiers and AWS context. Use this module to retrieve detailed configuration information about managed rule groups for monitoring or integration purposes.",
      "description_length": 424,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateManagedRuleSetVersionExpiryDate",
      "library": "smaws-clients.wafv2",
      "description": "This module handles updating the expiry date of a managed rule set version in AWS WAFV2. It works with AWS context and request/response structures specific to WAFV2 rule set management. Concrete use cases include extending or expiring rule set versions as part of automated policy management workflows.",
      "description_length": 302,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListMobileSdkReleases",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing mobile SDK releases by sending a request to the WAFV2 service. It works with context and request/response types specific to the WAFV2 API, including handling errors like invalid parameters or internal service issues. It is used to retrieve available mobile SDK versions for integration with AWS WAF services.",
      "description_length": 336,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListLoggingConfigurations",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the listing of AWS WAFv2 logging configurations by sending a request and returning a result with either the response or specific WAFv2 error types. It operates on the `list_logging_configurations_request` type and produces a `list_logging_configurations_response` containing logging configuration details. It is used to retrieve logging setup information for WAFv2 resources like web ACLs.",
      "description_length": 409,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.AssociateWebACL",
      "library": "smaws-clients.wafv2",
      "description": "This module handles associating a web ACL with a resource in AWS WAFv2. It provides a `request` function that takes a context and an association request, returning a result with either the response or specific WAFv2 error types. It works directly with AWS WAFv2 web ACLs and target resources like CloudFront distributions or API gateways.",
      "description_length": 338,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.UpdateWebACL",
      "library": "smaws-clients.wafv2",
      "description": "This module handles the request to update a WebACL in AWS WAFV2, sending the provided update request to the service and returning the response. It works with the context type and the update_web_acl_request and response types, along with various AWS WAFV2-specific error types for failure handling. It is used when modifying the rules, visibility configuration, or other settings of a WebACL in AWS WAFV2.",
      "description_length": 404,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2.ListResourcesForWebACL",
      "library": "smaws-clients.wafv2",
      "description": "This module handles listing resources associated with a WebACL in AWS WAFV2. It provides a `request` function that takes a context and a list-resources-for-WebACL request, returning a result with either the response or specific WAFV2 error types. It is used to retrieve information about resources like CloudFront distributions or Application Load Balancers linked to a specific WebACL.",
      "description_length": 386,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAFV2.GetRuleGroup",
      "library": "smaws-clients.wafv2",
      "description": "This module issues requests to retrieve AWS WAF rule group configurations, handling responses and specific error conditions like invalid parameters or missing items. It operates on AWS WAFV2 rule group request and response data structures, along with associated error types. A concrete use case is fetching the current state of a rule group to inspect its rules and evaluate web ACL configurations.",
      "description_length": 398,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAFV2",
      "library": "smaws-clients.wafv2",
      "description": "This module provides operations for managing AWS WAFv2 resources, including constructing and modifying rule sets, IP access controls, regex patterns, and rate-limiting configurations. It works with data structures that model HTTP request components (headers, cookies, body), security policies (block/allow actions, CAPTCHA handling), and AWS-specific entities like ARNs and logging configurations. Specific use cases include defending against web exploits (SQLi, XSS), implementing bot mitigation, enforcing rate-based throttling, and integrating WAF rules with CloudFront or API gateways for application-layer security.",
      "description_length": 620,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement.GetAgreementTerms",
      "library": "smaws-clients.marketplace-agreement",
      "description": "This module issues requests to retrieve terms of a marketplace agreement, handling input and output specific to that operation. It works with context data, agreement identifiers, and structured error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used to fetch agreement details from a marketplace service, directly mapping to API interactions with precise error reporting.",
      "description_length": 399,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement.DescribeAgreement",
      "library": "smaws-clients.marketplace-agreement",
      "description": "This module handles the `request` operation to retrieve details of a marketplace agreement using a provided context and input parameters. It works with structured input and output types specific to marketplace agreements, along with handling detailed error cases such as access denial, resource not found, and validation failures. A concrete use case is fetching agreement metadata for auditing or compliance checks in a marketplace system.",
      "description_length": 440,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement.SearchAgreements",
      "library": "smaws-clients.marketplace-agreement",
      "description": "Performs a search for marketplace agreements using a provided context and input parameters, returning either a list of agreements or an error. It handles data types such as `search_agreements_input` for query parameters and `search_agreements_output` for results, along with specific error types like `access_denied_exception` and `validation_exception`. This function is used to retrieve agreement details from a marketplace system, supporting filtering and pagination through input parameters.",
      "description_length": 495,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MarketplaceAgreement",
      "library": "smaws-clients.marketplace-agreement",
      "description": "This module provides operations for creating, querying, and managing marketplace agreement data structures with support for filtering, sorting, and validation. It works with agreement metadata, pricing/legal/payment terms, participant roles, and error types to model scenarios like trial periods, fixed pricing, and contract negotiations. Specific use cases include searching agreements by status or terms, retrieving structured agreement details, and handling validation exceptions during term configuration.",
      "description_length": 509,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.UntagResource",
      "library": "smaws-clients.kinesis-analytics",
      "description": "Removes tags from a Kinesis Analytics resource using a provided context and request object. It handles specific error cases such as invalid arguments, resource not found, and concurrent modification. This operation is useful when managing resource metadata in AWS Kinesis Analytics applications.",
      "description_length": 295,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationInputProcessingConfiguration",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles adding an input processing configuration to a Kinesis Analytics application. It works with AWS context and request/response structures specific to Kinesis Analytics. Use it when configuring real-time data processing pipelines that require in-application stream transformations.",
      "description_length": 297,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationInputProcessingConfiguration",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles the deletion of input processing configurations for a Kinesis Analytics application. It works with AWS context and request/response structures specific to Kinesis Analytics. Use this module when removing an input processing configuration from an existing application, ensuring the application is in a state that allows modification.",
      "description_length": 352,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.CreateApplication",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles the creation of Kinesis Analytics applications by sending a structured request to AWS, including application configuration details. It works with AWS context and specific request/response types defined for application creation, such as `create_application_request` and `create_application_response`. It is used when setting up new streaming applications that process data from Kinesis streams.",
      "description_length": 413,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationReferenceDataSource",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles adding a reference data source to an existing Kinesis Analytics application. It works with AWS context objects and structured request/response types specific to Kinesis Analytics. Use this when configuring applications to consume reference data from S3 or other supported sources.",
      "description_length": 300,
      "index": 106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationCloudWatchLoggingOption",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles adding CloudWatch logging options to a Kinesis Analytics application. It works with AWS context and request/response structures specific to Kinesis Analytics. Use this when configuring real-time log monitoring for streaming applications.",
      "description_length": 257,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplication",
      "library": "smaws-clients.kinesis-analytics",
      "description": "Deletes a Kinesis Analytics application by name, handling concurrency and resource state errors. Works with application names and AWS context for authentication. Useful for cleaning up unused streaming applications or tearing down infrastructure in deployment scripts.",
      "description_length": 268,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DiscoverInputSchema",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module issues requests to discover the schema of input data streams for Kinesis Analytics applications. It handles responses and specific error cases such as invalid arguments, throughput limits, service availability, and schema detection failures. It is used when configuring input processing to automatically determine data structure from streaming sources like Kinesis Streams.",
      "description_length": 385,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationOutput",
      "library": "smaws-clients.kinesis-analytics",
      "description": "Deletes an output configuration from a Kinesis Analytics application. Works with application output identifiers and handles errors like resource not found or concurrent modifications. Useful when managing streaming data pipelines that require real-time analytics output adjustments.",
      "description_length": 282,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.ListTagsForResource",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles making a request to list tags for a Kinesis Analytics resource, returning either the response or specific AWS errors. It works with context and request/response types defined in the Kinesis Analytics client library. A concrete use case is retrieving metadata tags associated with a Kinesis Analytics application for tracking or billing purposes.",
      "description_length": 365,
      "index": 111,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationOutput",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles adding an output configuration to a Kinesis Analytics application. It works with AWS context and request/response types specific to Kinesis Analytics. Use it when integrating streaming outputs like Kinesis Data Streams or Lambda into an analytics application.",
      "description_length": 279,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.AddApplicationInput",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles adding input streams to an existing Kinesis Analytics application by sending a structured request to AWS. It works with AWS context objects and Kinesis Analytics input request/response types, including detailed error handling for common service-specific failure conditions. Use this when configuring real-time data ingestion pipelines by attaching sources like Kinesis streams to analytics applications.",
      "description_length": 423,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles the removal of CloudWatch logging options from a Kinesis Analytics application. It works with AWS context, request, and response structures specific to Kinesis Analytics. Use this when disabling CloudWatch logging for a streaming application, for example during application cleanup or configuration updates.",
      "description_length": 327,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DeleteApplicationReferenceDataSource",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles the deletion of reference data sources from a Kinesis Analytics application. It provides a `request` function that sends a deletion command and returns a result with either a success response or specific error types like `ResourceNotFoundException` or `ConcurrentModificationException`. It works directly with Kinesis Analytics application configurations and reference data source identifiers.",
      "description_length": 413,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.StopApplication",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles stopping a Kinesis Analytics application by sending a stop request and returning a result with either a success response or specific error types. It works with context and request/response types defined in the Kinesis Analytics client library. A concrete use case is programmatically halting a running stream processing application when scaling down or decommissioning resources.",
      "description_length": 399,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.TagResource",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles tagging operations for Kinesis Analytics resources, specifically allowing the addition of metadata tags to specified resources. It works with context objects and Kinesis Analytics tag request/response structures, including detailed error types for common failure scenarios. Concrete use cases include managing resource metadata for cost allocation, access control, or operational tracking in Kinesis Analytics applications.",
      "description_length": 443,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.DescribeApplication",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles the `DescribeApplication` API request for Kinesis Analytics, returning detailed information about a specific application. It works with the `describe_application_request` type to fetch data and produces a `describe_application_response` or specific error types like `ResourceNotFoundException`. Use this to retrieve runtime metadata, configuration, and status of a Kinesis Analytics application by name.",
      "description_length": 423,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.ListApplications",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles listing Kinesis Analytics applications by sending a request and returning a result with either a response or an error. It works with context and configuration data types specific to the Kinesis Analytics client. A concrete use case is retrieving all analytics applications for monitoring or management purposes.",
      "description_length": 331,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.UpdateApplication",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module handles updating an application in Kinesis Analytics by sending a request with the application configuration and receiving a response indicating success or failure. It works with structured data types representing application updates, errors, and context. Concrete use cases include modifying application properties like input configurations or parallelism settings in streaming data pipelines.",
      "description_length": 406,
      "index": 120,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics.StartApplication",
      "library": "smaws-clients.kinesis-analytics",
      "description": "Starts a Kinesis Analytics application with the provided configuration, handling errors related to invalid inputs, resource states, and unsupported operations. Works with application request and response types, along with specific error types for precise failure handling. Useful for initiating stream processing applications in AWS Kinesis Analytics.",
      "description_length": 351,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalytics",
      "library": "smaws-clients.kinesis-analytics",
      "description": "This module provides operations for configuring and managing stream processing applications, including updating input/output streams, defining schemas, and controlling application lifecycle (start/stop). It works with data structures representing AWS resources (like ARNs, S3 keys), application configurations, and schema mappings to model components such as Kinesis streams, Firehose inputs, Lambda processors, and logging options. These tools are used to build, modify, and monitor real-time analytics pipelines that integrate with AWS services for data ingestion, transformation, and tagging workflows.",
      "description_length": 605,
      "index": 122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.GetRoutingControlState",
      "library": "smaws-clients.route53-recovery-cluster",
      "description": "This module handles retrieving the state of a routing control in Route 53 Recovery Cluster. It sends a request using a context and a specific routing control identifier, returning the control's current state or an error if the operation fails. Use this to monitor or validate routing control states in high-availability configurations.",
      "description_length": 335,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.UpdateRoutingControlStates",
      "library": "smaws-clients.route53-recovery-cluster",
      "description": "This module handles updating the states of routing controls in a Route 53 Recovery Cluster. It accepts a context and a request containing identifiers and desired states for routing controls, then returns a result indicating success or a specific AWS error. It is used to manage failover routing configurations across multiple AWS regions during disaster recovery scenarios.",
      "description_length": 373,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.UpdateRoutingControlState",
      "library": "smaws-clients.route53-recovery-cluster",
      "description": "This module handles updating the state of routing controls in a Route 53 Recovery Cluster. It provides a `request` function that sends an update request and returns a result with either the response or specific error types such as `AccessDeniedException` or `ResourceNotFoundException`. It is used to manage failover routing configurations in AWS-based high-availability systems.",
      "description_length": 379,
      "index": 125,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster.ListRoutingControls",
      "library": "smaws-clients.route53-recovery-cluster",
      "description": "This module handles listing routing controls in AWS Route 53 Recovery Cluster by sending a request and returning a result with either the response or specific error types. It works with context and request/response structures defined in the Route53RecoveryCluster library. Use this module to retrieve current routing control states for failover management in distributed applications.",
      "description_length": 384,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Route53RecoveryCluster",
      "library": "smaws-clients.route53-recovery-cluster",
      "description": "This module provides operations for managing routing control states in distributed systems, focusing on updating, retrieving, and listing routing control configurations. It works with data structures like routing control ARNs, state descriptors, and request/response objects to handle failover scenarios, concurrency conflicts, and resource limits. Specific use cases include orchestrating high-availability architectures by dynamically adjusting routing control states across AWS-hosted recovery clusters.",
      "description_length": 506,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeGlobalTable",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `DescribeGlobalTable` operation for DynamoDB, accepting a context and input parameters to retrieve metadata about a global table. It works with DynamoDB-specific input and output structures, including error types like `GlobalTableNotFoundException` and `InternalServerError`. A concrete use case is checking the status and configuration of a global table across AWS regions during infrastructure monitoring or deployment validation.",
      "description_length": 456,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListExports",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `ListExports` API operation for querying DynamoDB table export details. It accepts a context and input parameters, returning a result with export output data or specific AWS errors. Use it to retrieve information about ongoing or completed DynamoDB table exports programmatically.",
      "description_length": 304,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateGlobalTable",
      "library": "smaws-clients.dynamodb",
      "description": "Performs an update operation on a DynamoDB global table, modifying its replication settings across regions. It accepts a context and an input structure specifying the table name and replica updates, returning a result with either the updated global table description or specific error types. This module is used to add or remove replicas in a global table configuration programmatically.",
      "description_length": 387,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.CreateBackup",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to create backups of DynamoDB tables, handling specific error conditions like table unavailability or backup limits. It operates on input structures defining backup parameters and returns result types indicating success or specific failure reasons. Use it when programmatically initiating backups for disaster recovery or data management workflows.",
      "description_length": 376,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UntagResource",
      "library": "smaws-clients.dynamodb",
      "description": "Removes tags from a DynamoDB resource by making an API call with the provided context and input parameters. Works with DynamoDB resource ARNs and tag keys. Useful for managing resource metadata in serverless applications or infrastructure-as-code workflows where tag cleanup is required.",
      "description_length": 287,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.GetResourcePolicy",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to retrieve resource policies for DynamoDB resources, handling specific error cases like missing policies or invalid endpoints. It operates on input and output structures defined in the DynamoDB protocol, including resource identifiers and policy data. Use this to fetch IAM policies attached to DynamoDB tables or streams in an AWS environment.",
      "description_length": 373,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteBackup",
      "library": "smaws-clients.dynamodb",
      "description": "Deletes a specified DynamoDB backup by name, interacting with the DynamoDB API to perform the removal. Works with input containing the backup name and context for authentication and configuration. Useful for cleaning up outdated backups or managing backup lifecycle in automated scripts.",
      "description_length": 287,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.BatchExecuteStatement",
      "library": "smaws-clients.dynamodb",
      "description": "This module executes batch statements against DynamoDB, handling inputs and outputs for operations like querying or updating multiple items. It works with DynamoDB-specific input and output structures, including error types for internal server issues and request limits. Use it to perform bulk data modifications or queries efficiently within a single request.",
      "description_length": 360,
      "index": 135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteResourcePolicy",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the deletion of resource policies in DynamoDB by sending a request to remove a specified policy. It works with input and output structures specific to the DynamoDB resource policy deletion operation, including error types like `PolicyNotFoundException` and `ResourceNotFoundException`. A concrete use case is removing an IAM policy attached to a DynamoDB table to control access permissions.",
      "description_length": 411,
      "index": 136,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListBackups",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `ListBackups` operation for DynamoDB, allowing retrieval of backup details for a specified table. It works with input and output structures specific to the DynamoDB backup listing operation, including error types like internal server errors and invalid endpoint exceptions. A concrete use case is querying backup metadata for a DynamoDB table to manage disaster recovery or audit backup history.",
      "description_length": 419,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.TransactWriteItems",
      "library": "smaws-clients.dynamodb",
      "description": "Performs atomic transactional write operations on DynamoDB items, handling complex updates, inserts, and deletes across multiple tables. Works with structured input and output types representing transaction conditions and results, along with detailed error types for failure handling. Useful for maintaining data consistency in distributed systems without manual locking.",
      "description_length": 371,
      "index": 138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeTimeToLive",
      "library": "smaws-clients.dynamodb",
      "description": "Handles requests to check the Time to Live (TTL) status for a DynamoDB table. It takes a context and input parameters specifying the table, returning the TTL status or errors like resource not found, internal server error, or invalid endpoint. Useful for verifying TTL configuration on a specific DynamoDB table during monitoring or setup.",
      "description_length": 339,
      "index": 139,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeExport",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to describe the status and details of a DynamoDB table export, returning metadata like export ARN, status, and progress. It operates on input types specifying the export or table ARN and outputs structured data including export start/end times, item count, and error information. Use this to monitor ongoing exports or verify completion and troubleshoot failed exports.",
      "description_length": 397,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeImport",
      "library": "smaws-clients.dynamodb",
      "description": "Handles requests to describe the status and details of a DynamoDB import operation. It accepts a context and input parameters, returning either the import output or specific errors like `ImportNotFoundException`. This module is used to monitor ongoing DynamoDB table imports by querying their status and metadata directly.",
      "description_length": 322,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.TagResource",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles tagging operations for DynamoDB resources, specifically allowing the addition of metadata tags to tables or streams. It works with input structures containing resource ARNs and tag key-value pairs, and returns unit on success or detailed error types on failure. A concrete use case is managing cost allocation tags for DynamoDB tables in a multi-tenant application.",
      "description_length": 385,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListTables",
      "library": "smaws-clients.dynamodb",
      "description": "Performs a DynamoDB ListTables operation, retrieving table names from a specified DynamoDB endpoint. Accepts a context and list_tables_input, returning either a list_tables_output or specific DynamoDB errors. Used to enumerate existing tables in a DynamoDB instance for management or auditing purposes.",
      "description_length": 302,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.EnableKinesisStreamingDestination",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles enabling Kinesis streaming destinations for DynamoDB tables. It provides a `request` function that sends a streaming destination configuration to AWS, returning an updated streaming status or an error. It works directly with DynamoDB table names and Kinesis stream ARNs, used when configuring real-time data pipelines from DynamoDB to Kinesis.",
      "description_length": 363,
      "index": 144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeBackup",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to describe a DynamoDB backup, returning metadata about the backup or errors if it is not found or if service issues occur. It operates on input containing backup identifiers and produces output with backup details or specific error types like `BackupNotFoundException`. It is used to retrieve information about a specific DynamoDB backup in an AWS environment.",
      "description_length": 389,
      "index": 145,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ExecuteStatement",
      "library": "smaws-clients.dynamodb",
      "description": "This module executes a prepared SQL-like statement against a DynamoDB table, handling input parameters and returning either the result set or a specific DynamoDB error. It works directly with DynamoDB's execute statement input and output structures, supporting operations like querying or modifying data using PartiQL. Concrete use cases include running parameterized queries to retrieve items or perform conditional updates on DynamoDB tables.",
      "description_length": 444,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateGlobalTableSettings",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles updating settings for global DynamoDB tables, including operations to modify replicas, billing modes, and capacity. It works with input and output structures specific to global table configurations, along with error types for failure scenarios like missing tables or invalid endpoints. It is used to manage cross-region replication settings and adjust global table capacity in response to scaling needs.",
      "description_length": 423,
      "index": 147,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.RestoreTableFromBackup",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the restoration of a DynamoDB table from a backup by sending the appropriate request and processing the response. It works with input and output structures specific to the restore operation, including error types for common failure scenarios like backup unavailability or resource limits. It is used when recovering a table from an existing backup, ensuring proper error handling for conflicts or system limitations.",
      "description_length": 436,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.BatchWriteItem",
      "library": "smaws-clients.dynamodb",
      "description": "Performs batch writes to DynamoDB, handling item collections and throughput limits. Works with DynamoDB tables, items, and error types like `ProvisionedThroughputExceededException`. Used to efficiently write multiple items to one or more tables in a single request, with per-table error handling.",
      "description_length": 296,
      "index": 149,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeContinuousBackups",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the request to describe continuous backups for a DynamoDB table, interacting with AWS services using a provided context. It works with input and output structures specific to the DynamoDB continuous backups API, including error types like `TableNotFoundException` and `InvalidEndpointException`. A concrete use case is retrieving backup details for a specific DynamoDB table to monitor or manage disaster recovery configurations.",
      "description_length": 449,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeLimits",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `DescribeLimits` operation for DynamoDB, providing a function to request account-level limits from DynamoDB services. It works with input and output structures specific to the DynamoDB API, including error types like `InternalServerError` and `InvalidEndpointException`. A concrete use case is retrieving current provisioned capacity limits for a DynamoDB account to manage resource scaling decisions.",
      "description_length": 425,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.CreateTable",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the creation of DynamoDB tables by sending a request with the provided table configuration and returning the result. It works with input and output structures specific to DynamoDB table creation, including error types for common failure scenarios. Use this module when defining and provisioning new DynamoDB tables with custom key schemas, attribute definitions, and throughput settings.",
      "description_length": 407,
      "index": 152,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListContributorInsights",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `ListContributorInsights` operation for a DynamoDB client, sending requests to retrieve contributor insights for a specified table or global secondary index. It works with input and output structures defined in the DynamoDB protocol, including error types like `ResourceNotFoundException` and `InternalServerError`. A typical use case involves querying a DynamoDB table to analyze access patterns and identify high-traffic contributors.",
      "description_length": 460,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateContributorInsights",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to update contributor insights for a DynamoDB table, handling responses and errors specific to that operation. It works with input and output structures defined for DynamoDB contributor insights updates, including error types like internal server error and resource not found. A concrete use case is enabling or disabling contributor insights on a specific DynamoDB table based on operational needs.",
      "description_length": 427,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListImports",
      "library": "smaws-clients.dynamodb",
      "description": "Handles requests to list ongoing import operations in DynamoDB. It accepts a context and input parameters, returning either a list of import summaries or an error indicating failure. This module is used to monitor active data imports into DynamoDB tables.",
      "description_length": 255,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateKinesisStreamingDestination",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles enabling or disabling Kinesis streaming for a DynamoDB table, accepting a context and input parameters to configure the streaming destination. It operates on DynamoDB table identifiers and Kinesis stream ARNs, returning an updated configuration or specific AWS service errors. Use this to directly manage real-time data streaming from DynamoDB to Kinesis.",
      "description_length": 375,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateTableReplicaAutoScaling",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles updating auto-scaling settings for DynamoDB table replicas. It accepts a context and an input structure specifying the table and scaling parameters, returning either a success response or specific DynamoDB errors. It is used to adjust auto-scaling configurations programmatically in response to operational needs.",
      "description_length": 333,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.BatchGetItem",
      "library": "smaws-clients.dynamodb",
      "description": "Performs batch retrieval of items from DynamoDB tables using a context and input configuration. It handles responses and errors specific to DynamoDB, such as throughput limits, internal server errors, and missing resources. Useful for efficiently fetching multiple items across one or more tables in a single network call.",
      "description_length": 322,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.GetItem",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues DynamoDB GetItem requests, retrieving items from a specified table using primary key attributes. It processes inputs like table name and key values, returning item data or specific error types such as `ResourceNotFoundException` or `ProvisionedThroughputExceededException`. Use it to fetch individual records from DynamoDB in contexts like querying user data by ID or retrieving configuration entries.",
      "description_length": 420,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.Scan",
      "library": "smaws-clients.dynamodb",
      "description": "Performs a scan operation on a DynamoDB table using a provided context and scan input parameters. It returns a result containing either the scan output data or specific DynamoDB error types such as provisioned throughput exceeded or resource not found. This function is used to retrieve items from a DynamoDB table that match a given filter and pagination criteria.",
      "description_length": 365,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeEndpoints",
      "library": "smaws-clients.dynamodb",
      "description": "Makes an API request to retrieve endpoint information for DynamoDB in a specific region. Works with context and request/response types defined in the DynamoDB client library. Useful for determining the correct service endpoints when interacting with DynamoDB in different AWS regions.",
      "description_length": 284,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeGlobalTableSettings",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `DescribeGlobalTableSettings` operation for DynamoDB, accepting a context and input parameters to retrieve settings for a global table. It works with DynamoDB-specific input and output structures, including error types like `GlobalTableNotFoundException` and `InternalServerError`. A concrete use case is querying the current configuration of a global DynamoDB table, such as replica regions and billing mode.",
      "description_length": 433,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.Query",
      "library": "smaws-clients.dynamodb",
      "description": "Performs query operations against DynamoDB tables using provided input parameters and context. It handles responses and errors specific to DynamoDB queries, such as throughput limits, resource not found, and invalid endpoint issues. This module is used to retrieve items that match a given query expression, typically for data analysis or application logic requiring filtered data retrieval.",
      "description_length": 391,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListTagsOfResource",
      "library": "smaws-clients.dynamodb",
      "description": "Handles requests to list tags for a specified DynamoDB resource. It accepts a context and an input structure containing the resource ARN, returning a result with either the list of tags or specific AWS errors. This module is used to retrieve metadata tags associated with DynamoDB tables for management or auditing purposes.",
      "description_length": 324,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeTableReplicaAutoScaling",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `DescribeTableReplicaAutoScaling` operation for DynamoDB, providing a function to request auto-scaling details for table replicas. It works with input and output structures specific to DynamoDB's auto-scaling configuration, including error types like `ResourceNotFoundException` and `InternalServerError`. A concrete use case is retrieving current auto-scaling settings for a DynamoDB table in a serverless application to monitor or adjust capacity policies.",
      "description_length": 482,
      "index": 165,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeTable",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to describe a DynamoDB table, returning metadata such as its schema, status, and provisioned throughput. It operates on input specifying the table name and context containing AWS configuration, producing either a detailed table description or specific error types like resource not found or internal server errors. It is used to retrieve the current configuration and state of a DynamoDB table during infrastructure checks or deployment workflows.",
      "description_length": 475,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DisableKinesisStreamingDestination",
      "library": "smaws-clients.dynamodb",
      "description": "This module defines a single operation to disable a Kinesis streaming destination for a DynamoDB table. It takes a context and an input structure specifying the table and stream ARN, returning a result with either the output response or specific DynamoDB error types. It is used when managing event streaming configurations, such as detaching a Kinesis stream from a DynamoDB table during infrastructure updates or cleanup.",
      "description_length": 423,
      "index": 167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ImportTable",
      "library": "smaws-clients.dynamodb",
      "description": "Handles importing data into a DynamoDB table by executing an import request. It works with input configurations specifying the source data and target table, returning either a successful import response or specific error types like conflicts or resource limits. This module is used when migrating data from S3 into a new or existing DynamoDB table.",
      "description_length": 348,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.PutResourcePolicy",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the low-level request to put a resource policy on a DynamoDB table, managing serialization and error handling. It works with context and input/output structures specific to the DynamoDB PutResourcePolicy operation. A concrete use case is applying a resource-based policy to a DynamoDB table to control access permissions programmatically.",
      "description_length": 358,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateTable",
      "library": "smaws-clients.dynamodb",
      "description": "Performs an update operation on a DynamoDB table, modifying its configuration such as provisioned capacity or global secondary indexes. It accepts an update_table_input request and returns an update_table_output result, handling specific DynamoDB errors like resource not found or limit exceeded. This module is used to adjust table settings in response to changing workload demands or schema requirements.",
      "description_length": 406,
      "index": 170,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeContributorInsights",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to retrieve contributor insights for a DynamoDB table, handling input parameters and error responses. It works with DynamoDB-specific input and output structures, including error types like internal server errors and resource not found exceptions. A concrete use case is monitoring and analyzing access patterns on a DynamoDB table to identify high-traffic contributors.",
      "description_length": 398,
      "index": 171,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.RestoreTableToPointInTime",
      "library": "smaws-clients.dynamodb",
      "description": "This module initiates a request to restore a DynamoDB table to a specific point in time. It handles the input configuration and context required to trigger the restore operation, returning either a successful response or a detailed error indicating issues like invalid timestamps, resource limits, or table states. It works directly with DynamoDB table identifiers and restore parameters, targeting scenarios where precise data recovery is needed after accidental deletion or corruption.",
      "description_length": 487,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateItem",
      "library": "smaws-clients.dynamodb",
      "description": "Performs atomic updates to items in a DynamoDB table using a provided update expression and condition. It works with DynamoDB's native data types such as strings, numbers, and sets, and supports conditional writes to ensure data consistency. This function is used when modifying specific attributes of a database record in place, such as incrementing a counter or updating a status field.",
      "description_length": 388,
      "index": 173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateTimeToLive",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues requests to update the Time to Live (TTL) configuration for a DynamoDB table. It handles input parameters like the table name and TTL specification, returning an updated TTL configuration or specific AWS service errors. It is used to manage data expiration policies in DynamoDB tables directly.",
      "description_length": 313,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.UpdateContinuousBackups",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the request to update continuous backups for a DynamoDB table, interacting with AWS services using provided context and input parameters. It works with input and output structures specific to DynamoDB continuous backups, along with error types tied to backup and table operations. Use this module to enable or disable point-in-time recovery for a DynamoDB table, handling service-specific errors directly.",
      "description_length": 425,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteItem",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the deletion of items from a DynamoDB table based on a provided key and optional conditions. It works with input and output types specific to DynamoDB item deletion, including error types for common failure scenarios like conditional check failures or throughput limits. Concrete use cases include removing records from a database when a key is known, often used in data cleanup or user account deletion workflows.",
      "description_length": 434,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.PutItem",
      "library": "smaws-clients.dynamodb",
      "description": "This module provides a `request` function to insert or update an item in a DynamoDB table, handling conditional writes and returning detailed error codes for failure scenarios. It operates on DynamoDB items represented as attribute-value maps, supporting type-safe interactions with table schemas. Concrete use cases include writing user data to a table with condition checks to prevent overwriting existing entries or enforcing business rules during data ingestion.",
      "description_length": 466,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.CreateGlobalTable",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the creation of a global DynamoDB table by sending a request with the provided input configuration. It works with DynamoDB-specific input and output structures, including error types like `GlobalTableAlreadyExistsException` and `TableNotFoundException`. Use this when setting up a global table across multiple AWS regions, ensuring replication and regional failover capabilities.",
      "description_length": 399,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DeleteTable",
      "library": "smaws-clients.dynamodb",
      "description": "Deletes a DynamoDB table by sending a deletion request with the provided context and input parameters. Returns a result indicating success or a specific error such as resource not found, limit exceeded, or internal server error. Works directly with DynamoDB table names and contextual execution data for targeted resource removal.",
      "description_length": 330,
      "index": 179,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ListGlobalTables",
      "library": "smaws-clients.dynamodb",
      "description": "This module handles the `ListGlobalTables` API request for DynamoDB, interacting with AWS's DynamoDB service to retrieve a list of global tables. It works with input and output structures defined in `Smaws_Client_DynamoDB`, including error types like `InternalServerError` and `InvalidEndpointException`. A concrete use case is querying global table metadata across AWS regions for replication or monitoring purposes.",
      "description_length": 417,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.TransactGetItems",
      "library": "smaws-clients.dynamodb",
      "description": "This module issues a `TransactGetItems` request to DynamoDB, retrieving multiple items from one or more tables as part of a transaction. It handles input structured as a list of table keys and returns either the retrieved items or specific DynamoDB error types such as `ProvisionedThroughputExceededException` or `TransactionCanceledException`. It is used to perform strongly consistent, atomic reads across multiple tables in DynamoDB workflows.",
      "description_length": 446,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ExecuteTransaction",
      "library": "smaws-clients.dynamodb",
      "description": "This module executes a transaction request against a DynamoDB table, handling inputs and outputs specific to transactional operations. It works with DynamoDB transaction input and output structures, along with context data for AWS requests. Concrete use cases include performing atomic write and delete operations across multiple items in a DynamoDB table as part of a single transaction.",
      "description_length": 388,
      "index": 182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDB.ExportTableToPointInTime",
      "library": "smaws-clients.dynamodb",
      "description": "Exports a DynamoDB table to a point in time using a provided context and input parameters. It handles errors related to export conflicts, invalid timestamps, and resource limits. This module is used to restore or analyze table data at a specific moment, leveraging DynamoDB\u2019s point-in-time recovery feature.",
      "description_length": 307,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB.DescribeKinesisStreamingDestination",
      "library": "smaws-clients.dynamodb",
      "description": "Handles requests to describe Kinesis streaming destinations for DynamoDB tables, interacting with AWS services using provided context and input parameters. It processes `describe_kinesis_streaming_destination_input` to retrieve configuration details and returns a result containing either the output or specific AWS service errors. Useful when monitoring or managing real-time data streams from DynamoDB to Kinesis.",
      "description_length": 415,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDB",
      "library": "smaws-clients.dynamodb",
      "description": "This module provides operations for configuring and managing DynamoDB resources, including table updates, auto-scaling policies, time-to-live settings, and Kinesis streaming integrations. It works with data structures representing tables, items, global/secondary indexes, replicas, backups, and capacity metrics, enabling use cases like cross-region replication, dynamic scaling of throughput, and real-time data streaming. Specific functionalities include conditional item updates, global table management, and batch operations for high-throughput data manipulation.",
      "description_length": 567,
      "index": 185,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.GetActivityTask",
      "library": "smaws-clients.sfn",
      "description": "This module handles the retrieval of activity tasks from AWS Step Functions, providing a `request` function that takes a context and input parameters to fetch a task. It works with AWS context types and structured input/output formats specific to activity tasks. Use this module to poll for and receive activity tasks in worker implementations for serverless workflows.",
      "description_length": 369,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeActivity",
      "library": "smaws-clients.sfn",
      "description": "Handles requests to describe an activity in a state machine workflow. It takes a context and an input containing the activity ARN, returning details about the activity or specific errors like `ActivityDoesNotExist` or `InvalidArn`. This module is used to retrieve metadata about a specific activity within a Step Functions workflow.",
      "description_length": 332,
      "index": 187,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.PublishStateMachineVersion",
      "library": "smaws-clients.sfn",
      "description": "Publishes a new version of a state machine definition with the provided ARN. It handles versioning and returns the updated state machine metadata or specific error types like `InvalidArn` or `ValidationException`. This function is used when deploying updated workflows in AWS Step Functions while ensuring version control and consistency.",
      "description_length": 338,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteActivity",
      "library": "smaws-clients.sfn",
      "description": "This module handles the deletion of an activity in AWS Step Functions by sending a deletion request. It operates on an input type that includes the activity ARN and returns a result indicating success or failure with specific error types. A concrete use case is removing an unused activity resource to manage workflow definitions efficiently.",
      "description_length": 342,
      "index": 189,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.CreateActivity",
      "library": "smaws-clients.sfn",
      "description": "This module issues requests to create AWS Step Functions activities, handling input validation and communication with the AWS API. It works with context objects and activity configuration data, returning either a success response or specific error types like name validation failures or tag limits. It is used when setting up new state machine activities that require task coordination across distributed systems.",
      "description_length": 413,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ListExecutions",
      "library": "smaws-clients.sfn",
      "description": "This module handles listing executions for a state machine, accepting a context and input parameters to produce either a list of executions or specific error types like `ResourceNotFound` or `InvalidArn`. It operates on AWS Step Functions data structures, specifically working with execution summaries and state machine identifiers. Use this module to retrieve and manage execution records for monitoring or debugging workflows in AWS Step Functions.",
      "description_length": 450,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListActivities",
      "library": "smaws-clients.sfn",
      "description": "Handles requests to list activity types in a state machine workflow. Works with context and input/output structures specific to AWS Step Functions. Useful for retrieving registered activities within a workflow execution.",
      "description_length": 220,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeMapRun",
      "library": "smaws-clients.sfn",
      "description": "Handles requests to describe the status and metadata of a Step Functions Map Run by accepting a context and input parameters. It operates on AWS Step Functions Map Run identifiers and returns detailed output or specific error types like `InvalidArn` or `ResourceNotFound`. Useful for monitoring the progress or failure reasons of distributed Map Runs in AWS Step Functions workflows.",
      "description_length": 383,
      "index": 193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ListStateMachines",
      "library": "smaws-clients.sfn",
      "description": "This module handles listing state machines in AWS Step Functions, providing a `request` function that sends a list state machines command and returns either the output or an error, including invalid token handling. It works with context and input/output types specific to the AWS Step Functions protocol. Use it to retrieve state machine summaries from AWS Step Functions in an OCaml application.",
      "description_length": 396,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.StartExecution",
      "library": "smaws-clients.sfn",
      "description": "Starts a state machine execution with a given input, returning a result that indicates success or a specific error condition. It operates on a context and a structured input type containing the state machine ARN, execution name, and input data. This function is used to programmatically trigger workflows defined in AWS Step Functions, with precise handling of common failure scenarios like invalid inputs or resource limits.",
      "description_length": 425,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.SendTaskSuccess",
      "library": "smaws-clients.sfn",
      "description": "Sends a success response for a task in a state machine workflow, confirming completion and providing output. It operates on task success input data and returns either a success output or specific error types like invalid token or task timeout. This is used to signal task completion in workflows orchestrated by AWS Step Functions.",
      "description_length": 331,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.SendTaskFailure",
      "library": "smaws-clients.sfn",
      "description": "Sends a failure notification for a specific task in a state machine execution. It takes a context and input parameters, returning a result with either a success response or an error indicating issues like invalid tokens, non-existent tasks, or timeouts. This operation is used to explicitly mark a task as failed in distributed workflows orchestrated by AWS Step Functions.",
      "description_length": 373,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.UpdateStateMachine",
      "library": "smaws-clients.sfn",
      "description": "Performs an update operation on a state machine using the provided context and input parameters. It handles errors related to invalid configurations, missing parameters, and state machine lifecycle states. This function is used when modifying existing state machines in AWS Step Functions.",
      "description_length": 289,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListTagsForResource",
      "library": "smaws-clients.sfn",
      "description": "This module handles making a request to list tags for a specified AWS resource by accepting a context and input parameters. It returns a result containing either the output of the tag list or specific error types such as invalid ARN or resource not found. It is used when interacting with AWS services to retrieve metadata tags associated with a resource identified by its ARN.",
      "description_length": 377,
      "index": 199,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeStateMachineForExecution",
      "library": "smaws-clients.sfn",
      "description": "This module issues requests to describe the state machine associated with a specific execution in AWS Step Functions. It takes a context and an input containing the execution ARN, returning details about the state machine or errors like invalid ARNs or missing executions. It is used to retrieve metadata and configuration about running or completed executions.",
      "description_length": 361,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteStateMachineVersion",
      "library": "smaws-clients.sfn",
      "description": "This module handles the deletion of a specific version of a state machine in AWS Step Functions. It accepts a context and input parameters specifying the state machine version to delete, returning a result that indicates success or a specific error such as conflict, invalid ARN, or validation failure. It is used when managing state machine lifecycle, such as cleaning up outdated versions or maintaining versioned workflows.",
      "description_length": 426,
      "index": 201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ValidateStateMachineDefinition",
      "library": "smaws-clients.sfn",
      "description": "Validates a state machine definition by sending a request with the provided context and input parameters, returning either a successful validation result or an error. It operates on state machine definitions and handles errors such as invalid configurations or malformed input. This function is used when deploying or updating AWS Step Functions state machines to ensure they conform to required schemas and constraints.",
      "description_length": 420,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeExecution",
      "library": "smaws-clients.sfn",
      "description": "Handles requests to describe the status and metadata of a Step Functions execution by accepting an execution ARN. It returns detailed output about the execution state or specific errors like non-existent execution or invalid ARNs. Useful for monitoring and debugging workflows in AWS Step Functions.",
      "description_length": 299,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListMapRuns",
      "library": "smaws-clients.sfn",
      "description": "Handles listing map runs for a state machine execution by sending a request with input parameters and returning either the output data or specific error types. It operates on state machine execution ARNs and map run identifiers, providing direct access to AWS Step Functions' map run listing functionality. This module is used to retrieve details about map runs associated with a specific state machine execution for monitoring or debugging purposes.",
      "description_length": 450,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteStateMachine",
      "library": "smaws-clients.sfn",
      "description": "Performs deletion of a state machine in AWS Step Functions by sending a deletion request. It takes a context and a deletion input containing the state machine's ARN, returning a result that indicates success or specific errors like invalid ARN or validation issues. This operation is used when permanently removing a state machine resource from an AWS account.",
      "description_length": 360,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.CreateStateMachine",
      "library": "smaws-clients.sfn",
      "description": "This module handles the creation of state machines in AWS Step Functions by sending a request with provided configuration. It processes input parameters to define the state machine's properties and returns either a successful response or specific error types related to invalid inputs, conflicts, or AWS limits. It is used when setting up new workflows in AWS Step Functions programmatically.",
      "description_length": 392,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.TestState",
      "library": "smaws-clients.sfn",
      "description": "Performs a state machine execution test by validating input parameters and invoking a state machine with given context. It operates on state machine definitions, execution inputs, and ARNs, returning either a test output or specific validation errors. This module is used to execute and validate AWS Step Functions state machines during testing workflows.",
      "description_length": 355,
      "index": 207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.DeleteStateMachineAlias",
      "library": "smaws-clients.sfn",
      "description": "Deletes a state machine alias in AWS Step Functions. It takes a context and input parameters specifying the alias to delete, returning a result that indicates success or a specific error such as `ResourceNotFound` or `InvalidArn`. This operation is used when managing state machine versions and aliases to ensure correct workflow execution routing.",
      "description_length": 348,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeStateMachine",
      "library": "smaws-clients.sfn",
      "description": "This module handles the `DescribeStateMachine` operation for AWS Step Functions, accepting a context and input parameters to retrieve details about a specific state machine. It works with the `describe_state_machine_input` type for input and returns either a `describe_state_machine_output` or specific error types such as `InvalidArn` or `StateMachineDoesNotExist`. It is used to fetch metadata like the state machine's ARN, definition, and status when managing workflows in AWS infrastructure.",
      "description_length": 495,
      "index": 209,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.UntagResource",
      "library": "smaws-clients.sfn",
      "description": "Removes tags from a specified resource using an ARN. It accepts a context and input containing the ARN and tag keys, returning a result indicating success or failure with specific error types for invalid ARNs or missing resources. This operation is useful when managing AWS Step Functions resources and handling tag-based access control or cleanup.",
      "description_length": 348,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.GetExecutionHistory",
      "library": "smaws-clients.sfn",
      "description": "This module retrieves the history of a specific AWS Step Functions execution using its ARN and a pagination token. It handles errors such as invalid ARNs, non-existent executions, and invalid tokens, returning either the execution history or a detailed error. Use this to audit or debug workflows by inspecting the sequence of events and states during an execution.",
      "description_length": 365,
      "index": 211,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.CreateStateMachineAlias",
      "library": "smaws-clients.sfn",
      "description": "This module handles the creation of state machine aliases in AWS Step Functions. It takes a context and input parameters, then returns a result with either the alias creation output or specific error types like `InvalidArn` or `ConflictException`. It is used to manage aliases for state machines, ensuring correct naming and referencing within workflows.",
      "description_length": 354,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.StartSyncExecution",
      "library": "smaws-clients.sfn",
      "description": "Starts a synchronous execution of a state machine using the provided context and input parameters, returning either the execution output or specific error types. It operates on context and input/output structures defined in the Smaws_Lib and Smaws_Client_SFN modules, handling errors such as invalid ARNs, execution inputs, and state machine states. This function is used when directly invoking a state machine and requiring immediate execution feedback.",
      "description_length": 454,
      "index": 213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.RedriveExecution",
      "library": "smaws-clients.sfn",
      "description": "This module provides a function to request the redriving of a failed state machine execution using its ARN. It handles specific error cases such as invalid ARNs, non-existent executions, and redrive limits. A concrete use case is retrying a failed workflow after resolving underlying issues in a distributed system.",
      "description_length": 315,
      "index": 214,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.TagResource",
      "library": "smaws-clients.sfn",
      "description": "Performs tagging operations on AWS Step Functions resources using ARNs. Accepts a context and input specifying the resource ARN and tags, returning a result with either a success response or specific error types like invalid ARN or resource not found. Useful for managing metadata on state machines or activities in AWS Step Functions.",
      "description_length": 335,
      "index": 215,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.StopExecution",
      "library": "smaws-clients.sfn",
      "description": "This module provides a function to request the termination of a Step Functions execution by sending a stop execution command with the provided input. It operates on execution ARNs and handles errors such as invalid ARNs, non-existent executions, and validation failures. A concrete use case is stopping a long-running or misbehaving workflow execution programmatically based on monitoring or user action.",
      "description_length": 404,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.ListStateMachineAliases",
      "library": "smaws-clients.sfn",
      "description": "This module handles listing state machine aliases in AWS Step Functions, providing a `request` function that takes a context and input parameters to retrieve aliases for a specified state machine. It works with AWS Step Functions' state machine alias data structures, handling errors like invalid ARNs, tokens, and resource not found. A concrete use case is querying aliases to manage versioned state machine executions in a serverless application.",
      "description_length": 448,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.DescribeStateMachineAlias",
      "library": "smaws-clients.sfn",
      "description": "This module handles the `DescribeStateMachineAlias` operation for AWS Step Functions, accepting a context and input parameters to retrieve details about a state machine alias. It works with input and output structures specific to the Step Functions service, including error types like `InvalidArn`, `ResourceNotFound`, and `ValidationException`. A concrete use case is fetching metadata about a versioned state machine alias to manage workflow deployments.",
      "description_length": 456,
      "index": 218,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.SendTaskHeartbeat",
      "library": "smaws-clients.sfn",
      "description": "Sends a heartbeat for a task in a state machine execution, ensuring the task is still active. Works with context and input/output types specific to task heartbeat operations, including error types for invalid tokens, non-existent tasks, and task timeouts. Used to maintain task liveness during long-running executions.",
      "description_length": 318,
      "index": 219,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.ListStateMachineVersions",
      "library": "smaws-clients.sfn",
      "description": "This module handles listing versions of a state machine in AWS Step Functions. It accepts a context and input parameters, returning a result with either the output or specific error types like invalid ARN or token. It is used to retrieve historical versions of a state machine for auditing or rollback purposes.",
      "description_length": 311,
      "index": 220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SFN.UpdateStateMachineAlias",
      "library": "smaws-clients.sfn",
      "description": "This module issues requests to update State Machine aliases in AWS Step Functions. It handles input parameters like alias ARN, description, and routing configuration, returning either a success response or specific error types such as `ConflictException` or `InvalidArn`. It is used to manage version routing for state machines without reconfiguring clients.",
      "description_length": 358,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN.UpdateMapRun",
      "library": "smaws-clients.sfn",
      "description": "Performs an update operation on a map run in a state machine, taking a context and input parameters to modify specific aspects of the map run execution. It handles errors related to invalid ARNs, missing resources, and validation failures. This function is used to adjust map run configurations during workflow execution, such as updating item processing status or retry policies.",
      "description_length": 380,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SFN",
      "library": "smaws-clients.sfn",
      "description": "This module provides operations for managing AWS Step Functions workflows, focusing on state machine lifecycle management (creation, validation, updating, deletion), execution control (starting, stopping, inspecting), and resource configuration (tagging, logging, routing). It works with data structures representing state machine definitions, ARNs, versions, execution metadata, event details, task lifecycle states, and error diagnostics, while supporting use cases like serverless workflow orchestration, distributed system error handling, and execution history analysis. Specific patterns include validating state machine definitions with detailed diagnostics, managing aliases and routing weights for canary deployments, and handling task-level events for distributed workflow coordination.",
      "description_length": 795,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.IncreaseReplicationFactor",
      "library": "smaws-clients.dax",
      "description": "Performs an operation to increase the replication factor of a DAX cluster by adding nodes. It takes a context and a request specifying the cluster identifier and new replication factor, returning a result with the updated cluster configuration or specific error types. This module is used when scaling DAX clusters horizontally to handle increased read traffic or improve fault tolerance.",
      "description_length": 388,
      "index": 224,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.CreateSubnetGroup",
      "library": "smaws-clients.dax",
      "description": "This module handles the creation of DAX subnet groups by sending a request with provided configuration and returning a result that includes either a success response or specific error types. It works with context data, subnet group requests, and various error types related to subnet and role validation. Concrete use cases include setting up network isolation for DAX clusters by defining subnet groups within a VPC.",
      "description_length": 417,
      "index": 225,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DeleteParameterGroup",
      "library": "smaws-clients.dax",
      "description": "Deletes a DAX parameter group by name, handling errors for invalid states, missing groups, and parameter issues. Works with DAX parameter group names and AWS context. Useful for cleaning up unused parameter groups in a DAX cluster environment.",
      "description_length": 243,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DeleteCluster",
      "library": "smaws-clients.dax",
      "description": "This module handles the deletion of a DAX cluster by sending a request to the DAX service and returning a result that either contains the deletion response or an error indicating failure reasons such as invalid state or missing cluster. It operates on DAX cluster identifiers and context data, supporting use cases like automated cluster cleanup or resource management workflows. Errors include specific fault types for precise handling of common DAX deletion failure scenarios.",
      "description_length": 478,
      "index": 227,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeSubnetGroups",
      "library": "smaws-clients.dax",
      "description": "Handles requests to describe DAX subnet groups, returning configuration details or specific errors like missing subnet groups or service-linked roles. Works with AWS DAX subnet group data structures and context objects. Useful for retrieving subnet group information in DAX clusters for network configuration validation or diagnostics.",
      "description_length": 335,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeParameterGroups",
      "library": "smaws-clients.dax",
      "description": "This module handles requests to describe DAX parameter groups, returning configuration details for specified groups or listing all available ones. It works with DAX-specific request and response structures that include parameters like group names and pagination tokens. Use this module to retrieve parameter group information when managing DAX clusters or validating configuration settings.",
      "description_length": 390,
      "index": 229,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DeleteSubnetGroup",
      "library": "smaws-clients.dax",
      "description": "This module handles the deletion of a DAX subnet group by sending a request with the provided context and subnet group identifier. It processes the response, returning either a success result or specific error types such as subnet group not found or in-use faults. It is used when removing a subnet group that is no longer needed, ensuring it is not associated with any active clusters.",
      "description_length": 386,
      "index": 230,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.ListTags",
      "library": "smaws-clients.dax",
      "description": "Handles DAX cluster tag listing by sending requests to retrieve tags from a specified DAX cluster. Works with DAX cluster ARNs, returning tag metadata or detailed error responses for faults like invalid ARNs or cluster states. Useful for inspecting or managing cluster tags in AWS DAX environments.",
      "description_length": 298,
      "index": 231,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.UntagResource",
      "library": "smaws-clients.dax",
      "description": "Removes tags from a DAX resource by making an AWS API call to untag a specified resource. It works with DAX clusters and ARNs, handling errors like invalid ARNs, missing clusters, or non-existent tags. This operation is useful when managing DAX resource metadata or automating tag cleanup in cloud environments.",
      "description_length": 311,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.CreateParameterGroup",
      "library": "smaws-clients.dax",
      "description": "This module handles the creation of DAX parameter groups by sending a request to AWS DAX with the provided configuration. It works with `Smaws_Lib.Context.t` and `create_parameter_group_request` to produce a result containing either a `create_parameter_group_response` or a specific AWS DAX error type. It is used when setting up or modifying DAX clusters that require custom parameter configurations, such as tuning performance settings or applying security policies.",
      "description_length": 468,
      "index": 233,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeEvents",
      "library": "smaws-clients.dax",
      "description": "Handles requests to retrieve event descriptions from a DAX service. It processes a context and a describe events request, returning either a response with events or specific error types. Useful for monitoring and troubleshooting DAX cluster events based on parameters like source name, event type, or time range.",
      "description_length": 312,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.TagResource",
      "library": "smaws-clients.dax",
      "description": "This module handles tagging operations for DAX resources by sending requests to associate tags with specific AWS DAX clusters. It works with DAX cluster ARNs and tag lists, validating inputs and handling errors such as invalid ARNs, tag limits, or cluster state issues. Use this module when managing metadata for DAX clusters in AWS environments.",
      "description_length": 346,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.CreateCluster",
      "library": "smaws-clients.dax",
      "description": "This module issues requests to create a DAX cluster, handling validation and error responses. It operates on context and cluster creation request data types, returning either a cluster response or specific error types. Use it to provision a new DAX cluster with custom configuration parameters.",
      "description_length": 294,
      "index": 236,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.RebootNode",
      "library": "smaws-clients.dax",
      "description": "Reboots a specific node within a DAX cluster using the provided context and request parameters. It handles errors related to invalid states, missing clusters or nodes, and parameter issues. This operation is used when maintaining or troubleshooting distributed caching systems.",
      "description_length": 277,
      "index": 237,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.UpdateCluster",
      "library": "smaws-clients.dax",
      "description": "This module issues requests to modify the configuration of a DAX cluster, such as updating its node type, parameter group, or security settings. It operates on DAX cluster identifiers and structured update requests, returning responses indicating success or specific failure conditions like invalid state or missing resources. It is used when adjusting cluster properties in AWS DAX environments, handling errors such as invalid parameters or missing dependencies during updates.",
      "description_length": 479,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeParameters",
      "library": "smaws-clients.dax",
      "description": "This module handles the `DescribeParameters` operation for DAX parameter groups, accepting a context and a request to retrieve parameter details. It works with DAX-specific request and response structures, including error types like `InvalidParameterCombinationException` and `ParameterGroupNotFoundFault`. A concrete use case is querying the configuration parameters of a DAX cluster's parameter group to validate or inspect current settings.",
      "description_length": 443,
      "index": 239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeClusters",
      "library": "smaws-clients.dax",
      "description": "Sends a request to describe DAX clusters, handling errors like invalid parameters or missing clusters. Works with DAX cluster descriptions, returning configuration and status details. Useful for monitoring cluster health or retrieving metadata for automation workflows.",
      "description_length": 269,
      "index": 240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.UpdateParameterGroup",
      "library": "smaws-clients.dax",
      "description": "This module handles updating DAX parameter groups by sending a request with the specified parameter group name and updated values. It works with the `update_parameter_group_request` type, which includes parameters like the group name and a list of parameter values. A concrete use case is modifying cache settings in a DAX cluster by updating its associated parameter group.",
      "description_length": 374,
      "index": 241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DecreaseReplicationFactor",
      "library": "smaws-clients.dax",
      "description": "This module issues requests to decrease the replication factor of a DAX cluster, handling specific error cases like invalid parameters or missing clusters. It works with DAX cluster configurations and context data to adjust replication settings. A typical use case involves scaling down a cluster's node count in response to reduced workload demands.",
      "description_length": 350,
      "index": 242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DAX.UpdateSubnetGroup",
      "library": "smaws-clients.dax",
      "description": "This module handles updating subnet group configurations by sending requests with provided context and parameters. It operates on subnet group data types, validating and applying changes to associated subnets. Use this module to modify existing subnet groups in a DAX cluster, ensuring correct subnet membership and handling errors like invalid subnets or quota limits.",
      "description_length": 369,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX.DescribeDefaultParameters",
      "library": "smaws-clients.dax",
      "description": "This module handles the `DescribeDefaultParameters` operation for a DAX client, sending requests to retrieve default parameter values for DAX clusters. It works with AWS DAX parameter configurations and provides structured responses along with specific error handling for invalid parameters and role-related failures. It is used to configure and validate DAX cluster settings during deployment or management workflows.",
      "description_length": 418,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DAX",
      "library": "smaws-clients.dax",
      "description": "This module provides operations for managing DAX clusters, parameter groups, subnet groups, and resource tags, including updates, replication adjustments, and node reboots. It works with structured data types like cluster configurations, subnet definitions, parameter sets, and event logs, supporting workflows such as scaling clusters, applying configuration changes, and handling tag-based resource organization. Specific use cases include rebooting nodes for maintenance, increasing replication factors for scalability, and managing encryption or security group settings for clusters.",
      "description_length": 587,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.UndeprecateDomain",
      "library": "smaws-clients.swf",
      "description": "This module handles the undeprecation of a domain in SWF by sending a request to restore a deprecated domain. It operates on a context and an undeprecate domain input, returning a result that indicates success or specific failure conditions such as domain already existing, operation not being permitted, or the domain not being found. It is used when reactivating a previously deprecated domain to make it active again for workflow execution.",
      "description_length": 443,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListTagsForResource",
      "library": "smaws-clients.swf",
      "description": "This module handles the `list_tags_for_resource` operation, which retrieves tags associated with a specific AWS SWF resource. It works with input and output structures defined in the `Smaws_Client_SWF` module, including error types like `LimitExceededFault` and `UnknownResourceFault`. A concrete use case is querying tags for a workflow execution to manage resource metadata or support cost allocation in AWS billing.",
      "description_length": 418,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.SignalWorkflowExecution",
      "library": "smaws-clients.swf",
      "description": "This module sends a signal to a specific workflow execution in Amazon SWF, allowing external events to trigger actions within running workflows. It operates on a context and a signal workflow execution input, returning a result indicating success or a specific error. Concrete use cases include notifying a workflow of an external event, such as a user action or system state change, to resume or alter its execution flow.",
      "description_length": 422,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListWorkflowTypes",
      "library": "smaws-clients.swf",
      "description": "This module handles listing workflow types in a Step Functions (SWF) context. It provides a `request` function that sends a list workflow types command to AWS SWF, accepting a context and input parameters, returning workflow type information or specific error types. It works directly with AWS SWF context, input configuration, and error response types. A typical use case is retrieving registered workflow types for monitoring or management purposes.",
      "description_length": 451,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.CountPendingActivityTasks",
      "library": "smaws-clients.swf",
      "description": "This module issues a request to count pending activity tasks for a specific task list in a workflow system. It takes a context and input parameters, returning either the count of pending tasks or an error indicating issues like unauthorized access or missing resources. It is used to monitor task backlog and manage worker scaling in distributed systems.",
      "description_length": 354,
      "index": 250,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeDomain",
      "library": "smaws-clients.swf",
      "description": "Handles requests to describe a domain in a distributed workflow system. It accepts a context and a describe-domain input, returning detailed domain information or specific error types like `OperationNotPermittedFault` or `UnknownResourceFault`. This function is used when retrieving metadata about a workflow domain, such as its configuration and status.",
      "description_length": 354,
      "index": 251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RespondActivityTaskCompleted",
      "library": "smaws-clients.swf",
      "description": "Handles completion responses for activity tasks in a workflow system. It takes a context and a completion input, then returns a result indicating success or specific error conditions like unauthorized operations or missing resources. This module is used to signal that an activity task has finished processing successfully.",
      "description_length": 323,
      "index": 252,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.RegisterActivityType",
      "library": "smaws-clients.swf",
      "description": "Registers a new activity type in SWF with a given domain, activity name, and version. Accepts configuration parameters through `register_activity_type_input` and returns an error if the type already exists, the domain doesn't exist, or limits are exceeded. Useful when setting up workflows that require custom activity execution logic.",
      "description_length": 335,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeActivityType",
      "library": "smaws-clients.swf",
      "description": "This module handles the `DescribeActivityType` API operation for Amazon SWF, retrieving detailed information about a specific activity type. It works with input and output data structures defined in the `Smaws_Client_SWF` module, including activity type identifiers and error responses. A typical use case involves querying SWF to inspect the configuration and status of an activity type within a domain.",
      "description_length": 404,
      "index": 254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.PollForDecisionTask",
      "library": "smaws-clients.swf",
      "description": "Handles polling for decision tasks in a workflow system by sending requests to retrieve decision tasks. It works with context and input configurations, returning either a decision task or specific error types like `LimitExceededFault`. Used to enable workflow decision-making by retrieving pending tasks or handling resource and permission errors.",
      "description_length": 347,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.GetWorkflowExecutionHistory",
      "library": "smaws-clients.swf",
      "description": "This module retrieves the history of a specific workflow execution, providing detailed event records. It operates on workflow execution identifiers and handles errors related to permissions and resource existence. Concrete use cases include auditing workflow progress, debugging failed executions, and tracking event timelines in distributed systems.",
      "description_length": 350,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListDomains",
      "library": "smaws-clients.swf",
      "description": "This module handles listing domains in the SWF service by sending a request with a given context and input parameters. It processes the response into a result type that includes domain information or specific error cases like `OperationNotPermittedFault`. It is used to retrieve and manage domain records from AWS SWF within an application's workflow.",
      "description_length": 351,
      "index": 257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.ListOpenWorkflowExecutions",
      "library": "smaws-clients.swf",
      "description": "This module handles requests to list open workflow executions in a SWF (Simple Workflow Service) environment. It accepts a context and input parameters, returning either workflow execution information or specific error types like `OperationNotPermittedFault` or `UnknownResourceFault`. It is used to monitor active workflows, typically for operational oversight or system management tasks.",
      "description_length": 389,
      "index": 258,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.TerminateWorkflowExecution",
      "library": "smaws-clients.swf",
      "description": "Terminates a workflow execution in a distributed system, given a context and input parameters. It operates on workflow identifiers and handles errors related to permissions and missing resources. This function is used when forcibly ending a running workflow, such as in cleanup or error recovery scenarios.",
      "description_length": 306,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DeprecateDomain",
      "library": "smaws-clients.swf",
      "description": "Deprecates a domain in SWF, rendering it unusable for new workflows. Works with domain identifiers and context for AWS communication. Useful when phasing out old domains to prevent new workflow executions.",
      "description_length": 205,
      "index": 260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.UndeprecateWorkflowType",
      "library": "smaws-clients.swf",
      "description": "This module handles the undeprecation of a workflow type in a service, accepting a context and an input structure to perform the operation. It returns a result indicating success or an error, including specific faults like operation not permitted, type already exists, or unknown resource. Use this when reactivating a previously deprecated workflow type to ensure it can be used again in workflows.",
      "description_length": 399,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.TagResource",
      "library": "smaws-clients.swf",
      "description": "This module handles tagging operations for SWF resources by sending a tag resource request and returning a result with unit on success or specific error types. It works with context and tag resource input data types, supporting precise resource management scenarios like applying tags to workflows or handling tag-related failures. Concrete use cases include adding metadata to SWF executions or workflows while handling constraints such as tag limits or unauthorized tagging attempts.",
      "description_length": 485,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DeprecateWorkflowType",
      "library": "smaws-clients.swf",
      "description": "Deprecates a specified workflow type in SWF, ensuring it can no longer be used to start new workflow executions. Works with the `deprecate_workflow_type_input` type and interacts with the SWF service through the provided context. Useful when phasing out outdated workflows to prevent accidental use while maintaining existing executions.",
      "description_length": 337,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RequestCancelWorkflowExecution",
      "library": "smaws-clients.swf",
      "description": "This module handles the cancellation of a specific workflow execution by sending a cancellation request. It works with the `Context.t` type for configuration and a structured input type containing workflow identifiers. A concrete use case is terminating a running workflow when a user explicitly requests its cancellation through an administrative interface.",
      "description_length": 358,
      "index": 264,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.RespondDecisionTaskCompleted",
      "library": "smaws-clients.swf",
      "description": "This module handles the completion of a decision task in a workflow system by sending a request to finalize the task. It works with context and input data specific to decision task completion, including error types for invalid operations or missing resources. It is used when a workflow decision task needs to be explicitly acknowledged or closed after processing.",
      "description_length": 364,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DeleteActivityType",
      "library": "smaws-clients.swf",
      "description": "Deletes a deprecated activity type in SWF, handling errors for undeprecated types, unknown resources, and permission issues. Works with AWS context and SWF activity type input data. Useful for cleaning up unused activity types after deprecation.",
      "description_length": 245,
      "index": 266,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.CountOpenWorkflowExecutions",
      "library": "smaws-clients.swf",
      "description": "This module issues requests to count open workflow executions in a specified domain, using a given context and input parameters. It works with workflow execution counts and handles errors such as operation not permitted or unknown resource faults. A concrete use case is monitoring active workflows to manage resource limits or track system load in a distributed application.",
      "description_length": 375,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DeleteWorkflowType",
      "library": "smaws-clients.swf",
      "description": "This module handles the deletion of a workflow type in Amazon SWF, issuing a request that takes a context and input parameters. It returns a result indicating success or failure, with specific error types for common failure scenarios like missing permissions or undeprecated types. It is used when cleaning up deprecated workflows or managing workflow lifecycle in SWF-based applications.",
      "description_length": 388,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.ListActivityTypes",
      "library": "smaws-clients.swf",
      "description": "This module handles listing activity types in a workflow system by sending a request with a context and input parameters, returning either a list of activity type information or specific error types. It works with context, input, and error data structures defined in related modules. A concrete use case is retrieving available activity types for workflow execution validation or configuration.",
      "description_length": 394,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.CountClosedWorkflowExecutions",
      "library": "smaws-clients.swf",
      "description": "This module issues requests to count closed workflow executions in a specified domain, using a given filter. It works with workflow execution count responses and handles errors such as access violations or missing resources. A concrete use case is tracking the number of completed workflows in a distributed system for monitoring or billing purposes.",
      "description_length": 350,
      "index": 270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RecordActivityTaskHeartbeat",
      "library": "smaws-clients.swf",
      "description": "This module handles heartbeating for activity tasks in a workflow system, allowing a client to report progress and maintain liveness. It operates on context and input types specific to activity task heartbeat requests, returning a result that indicates success or specific error conditions. A concrete use case is enabling long-running activity tasks to periodically signal progress to the workflow engine to prevent timeouts.",
      "description_length": 426,
      "index": 271,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DeprecateActivityType",
      "library": "smaws-clients.swf",
      "description": "Deprecates a specified activity type in SWF, preventing further use while allowing existing tasks to complete. Works with SWF context and activity type input structures. Useful for phasing out outdated workflows without disrupting current executions.",
      "description_length": 250,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.UndeprecateActivityType",
      "library": "smaws-clients.swf",
      "description": "Reactivates a deprecated activity type in a workflow system by sending an undeprecate request. Works with activity type identifiers and handles errors such as invalid state, permission issues, or missing resources. Used when restoring previously deprecated activity types to active status in workflow definitions.",
      "description_length": 313,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.CountPendingDecisionTasks",
      "library": "smaws-clients.swf",
      "description": "This module issues a request to count pending decision tasks for a specific workflow type in a given domain. It works with context and input structures containing workflow and domain identifiers, returning either the count or an error indicating resource absence or access denial. A concrete use case is monitoring workflow progress in a distributed system to determine if task processing is stalled.",
      "description_length": 400,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeWorkflowType",
      "library": "smaws-clients.swf",
      "description": "This module handles the `DescribeWorkflowType` API request, retrieving detailed information about a specific workflow type in SWF. It operates on input contexts and workflow type identifiers, returning either workflow type details or specific AWS error responses. Concrete use cases include inspecting registered workflow types for configuration validation or operational debugging in distributed workflows.",
      "description_length": 407,
      "index": 275,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.RegisterDomain",
      "library": "smaws-clients.swf",
      "description": "Registers a new domain in AWS SWF, handling input configuration and context. It works with domain registration parameters and returns unit on success or specific error types. Useful for initializing domains with custom settings in workflow management systems.",
      "description_length": 259,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.StartWorkflowExecution",
      "library": "smaws-clients.swf",
      "description": "This module initiates a new workflow execution using the provided context and input parameters. It handles errors related to resource limits, permissions, and workflow type validity, returning either a successful run identifier or a specific fault. It is used to start workflows in a distributed system where fault tolerance and precise error handling are critical.",
      "description_length": 365,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RegisterWorkflowType",
      "library": "smaws-clients.swf",
      "description": "This module handles the registration of workflow types in a distributed system, interacting with a service via a provided context. It processes input configurations to register new workflow types and returns results indicating success or specific failure conditions like type existence or resource limits. Concrete use cases include initializing workflow definitions in a task orchestration system before starting workflow executions.",
      "description_length": 434,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RespondActivityTaskCanceled",
      "library": "smaws-clients.swf",
      "description": "Handles cancellation responses for activity tasks in a workflow system. Works with context and input data to send a cancellation request, returning a result with unit or specific error types. Useful for signaling task cancellation and managing workflow state transitions.",
      "description_length": 271,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.RespondActivityTaskFailed",
      "library": "smaws-clients.swf",
      "description": "Handles failed activity tasks in a SWF workflow by sending a failure response with context and input parameters. It operates on context and input data structures specific to SWF activity tasks, returning a result indicating success or a specific error type. This is used when an activity task encounters an error and needs to report the failure back to the SWF service.",
      "description_length": 369,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.PollForActivityTask",
      "library": "smaws-clients.swf",
      "description": "This module handles polling for activity tasks in a workflow system, using a provided context and input parameters. It returns a result containing either an activity task or specific error types such as `LimitExceededFault`, `OperationNotPermittedFault`, or `UnknownResourceFault`. It is used to retrieve and process individual activity tasks from a service like AWS SWF in a typed, error-aware manner.",
      "description_length": 402,
      "index": 281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.ListClosedWorkflowExecutions",
      "library": "smaws-clients.swf",
      "description": "This module handles requests to list closed workflow executions in a SWF (Simple Workflow Service) context. It takes a context and input parameters, then returns a result containing workflow execution information or specific error types like `OperationNotPermittedFault` or `UnknownResourceFault`. It is used when querying historical workflow runs that have completed or been terminated.",
      "description_length": 387,
      "index": 282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SWF.DescribeWorkflowExecution",
      "library": "smaws-clients.swf",
      "description": "This module issues requests to describe the state and metadata of a specific workflow execution. It accepts a context and input parameters identifying the workflow, returning detailed execution information or specific AWS service errors. It is used to monitor workflow progress, inspect execution history, or troubleshoot failed or running workflows.",
      "description_length": 350,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF.UntagResource",
      "library": "smaws-clients.swf",
      "description": "Removes tags from a specified resource in the SWF service. It accepts a context and an untag resource input, returning a result that indicates success or specific error conditions such as limit exceeded, operation not permitted, or unknown resource. This function is used when managing resource metadata, such as cleaning up or reorganizing tagged workflows.",
      "description_length": 358,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SWF",
      "library": "smaws-clients.swf",
      "description": "This module facilitates workflow lifecycle management and resource control for AWS SWF through operations like starting, terminating, and signaling workflow executions, as well as tagging resources and managing workflow/activity type deprecation. It models data structures such as workflow execution metadata, event attributes, decision tasks, and domain configurations to support distributed workflow orchestration. These capabilities are applied in scenarios requiring task scheduling, state monitoring, and resource tagging within distributed systems.",
      "description_length": 554,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.Sign",
      "library": "smaws-clients.kms",
      "description": "This module handles cryptographic signing operations using AWS KMS keys. It provides the `request` function to sign data with a specified key and algorithm, returning the signature or a detailed error. It works with context objects and KMS-specific request/response types, handling errors like key unavailability or invalid state.",
      "description_length": 330,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.CreateGrant",
      "library": "smaws-clients.kms",
      "description": "This module issues a request to create a grant for a KMS key, handling errors such as invalid ARNs, key state issues, and timeouts. It operates on KMS key grants using input parameters like key ARN, grantee principal, and operations. Use it when programmatically delegating access permissions to AWS KMS keys in an application.",
      "description_length": 327,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateMac",
      "library": "smaws-clients.kms",
      "description": "This module issues requests to generate a message authentication code (MAC) using a specified KMS key. It handles input data, key identifiers, and optional grant tokens, returning either the generated MAC or a specific KMS error. It is used in cryptographic operations where data integrity and authenticity are required using AWS KMS-backed keys.",
      "description_length": 346,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UpdatePrimaryRegion",
      "library": "smaws-clients.kms",
      "description": "Performs an update to the primary region of a multi-Region key in AWS KMS, handling errors related to key state, permissions, and region configuration. Works with AWS KMS context and request structures, returning a result indicating success or a specific KMS error. Useful for managing regional key replication state in distributed systems.",
      "description_length": 340,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DescribeCustomKeyStores",
      "library": "smaws-clients.kms",
      "description": "This module handles requests to describe custom key stores in AWS KMS, providing detailed information about their configuration and status. It works with `describe_custom_key_stores_request` and returns a response containing key store metadata or specific error types like `CustomKeyStoreNotFoundException`. Use it to retrieve and inspect custom key store details, such as when managing cryptographic keys across different key stores.",
      "description_length": 434,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListKeys",
      "library": "smaws-clients.kms",
      "description": "Handles requests to list keys in AWS KMS, returning a result that includes either a list of keys or an error. Works with context and request/response types specific to AWS KMS key listing. Used to retrieve summaries of customer master keys (CMKs) from AWS KMS, supporting pagination through markers.",
      "description_length": 299,
      "index": 291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKeyPairWithoutPlaintext",
      "library": "smaws-clients.kms",
      "description": "This module handles the generation of asymmetric data key pairs without returning the plaintext private key, using a specified KMS key. It works with cryptographic key material and interacts with AWS KMS to ensure secure key generation in environments where private keys must not be exposed. Concrete use cases include generating signing keys for secure communications or cryptographic operations where only the public key and encrypted private key are used.",
      "description_length": 458,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GetPublicKey",
      "library": "smaws-clients.kms",
      "description": "This module issues requests to retrieve public key information from a KMS service. It handles responses and specific error conditions such as key unavailability, invalid ARNs, and operation timeouts. It is used to securely fetch cryptographic key metadata for operations like encryption or signature verification.",
      "description_length": 313,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.CancelKeyDeletion",
      "library": "smaws-clients.kms",
      "description": "This module handles the cancellation of scheduled key deletions in AWS KMS. It provides a `request` function that takes a context and a cancellation request, returning a result with either a success response or specific KMS error types. It works directly with KMS key ARNs and deletion scheduling data, used when recovering keys accidentally marked for deletion.",
      "description_length": 362,
      "index": 294,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DeleteAlias",
      "library": "smaws-clients.kms",
      "description": "Deletes an alias from AWS KMS, accepting a context and a delete alias request. It returns a result indicating success or a specific error such as dependency timeout, internal exception, invalid state, or alias not found. This operation is used when removing a friendly name for a KMS key, typically during key management or cleanup processes.",
      "description_length": 342,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GetKeyPolicy",
      "library": "smaws-clients.kms",
      "description": "This module handles retrieving key policies for AWS KMS keys by sending a request with a given context and key identifier. It works with KMS key policy data structures, including error responses like invalid ARN or key state issues. A concrete use case is enforcing encryption policies by programmatically accessing and validating key permissions in AWS KMS.",
      "description_length": 358,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DeleteCustomKeyStore",
      "library": "smaws-clients.kms",
      "description": "This module handles the deletion of a custom key store in AWS KMS, issuing a request and parsing the response or specific error conditions. It works with context data and structured AWS KMS request and response types, including detailed error variants for failure scenarios. Concrete use cases include safely removing a custom key store when it's no longer needed or during cleanup operations in key management workflows.",
      "description_length": 421,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GetParametersForImport",
      "library": "smaws-clients.kms",
      "description": "This module issues requests to retrieve parameters required to import key material into a KMS key. It works with KMS ARNs and handles responses containing import parameters or specific AWS KMS service errors. Use it when preparing to securely import cryptographic key material into AWS KMS.",
      "description_length": 290,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKeyPair",
      "library": "smaws-clients.kms",
      "description": "This module handles the generation of data key pairs using AWS KMS, interacting directly with KMS to create cryptographic key material. It works with context and request/response types specific to AWS KMS operations, including structured error types for failure handling. Concrete use cases include securely generating asymmetric key pairs for encryption or signing operations within a service that integrates with AWS KMS.",
      "description_length": 423,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ReEncrypt",
      "library": "smaws-clients.kms",
      "description": "ReEncrypt sends a re-encryption request to AWS KMS, taking a context and a re-encryption request structure, and returns a result containing either the re-encryption response or a specific error. It operates on KMS-related data types including encryption contexts, ciphertexts, and key identifiers. This function is used when migrating keys or updating encryption materials by decrypting and re-encrypting data under a new key.",
      "description_length": 426,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateRandom",
      "library": "smaws-clients.kms",
      "description": "This module issues requests to generate cryptographically secure random data using AWS KMS, returning raw byte strings. It handles errors related to key store state, timeouts, and service limitations. Use it when creating secure tokens, nonces, or initialization vectors that require AWS KMS-backed randomness.",
      "description_length": 310,
      "index": 301,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.RotateKeyOnDemand",
      "library": "smaws-clients.kms",
      "description": "This module handles the rotation of cryptographic keys on demand within a KMS system. It processes a rotation request using a context and returns a result indicating success or a specific error such as key not found, invalid state, or dependency timeout. It works directly with KMS-specific request and response structures, along with detailed exception types for precise error handling.",
      "description_length": 387,
      "index": 302,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_KMS.EnableKey",
      "library": "smaws-clients.kms",
      "description": "This module handles the enabling of a key in AWS KMS. It provides a `request` function that takes a context and an enable key request, returning a result indicating success or a specific AWS KMS error. It works with key ARNs and is used when activating a previously disabled KMS key.",
      "description_length": 283,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UntagResource",
      "library": "smaws-clients.kms",
      "description": "Removes specified tags from a KMS resource using the provided ARN. Works with AWS KMS tag structures and context data for authentication and configuration. Useful for managing metadata on encryption keys in AWS KMS directly from OCaml applications.",
      "description_length": 248,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.UpdateAlias",
      "library": "smaws-clients.kms",
      "description": "This module handles the low-level HTTP request for updating a KMS alias in AWS, sending the provided alias update parameters and returning a result indicating success or a specific AWS KMS error. It operates on AWS KMS alias update requests and interacts with the AWS JSON protocol for error handling and response parsing. A concrete use case is programmatically modifying the target key of a KMS alias during infrastructure updates or key rotation.",
      "description_length": 449,
      "index": 305,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.UpdateKeyDescription",
      "library": "smaws-clients.kms",
      "description": "Sends a request to update the description of a KMS key using the provided context and request parameters. It handles specific AWS KMS errors such as invalid ARN, key not found, or internal service issues, returning a result indicating success or failure. This operation is useful when modifying metadata of an existing KMS key in AWS Key Management Service.",
      "description_length": 357,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DisableKey",
      "library": "smaws-clients.kms",
      "description": "This module handles the disabling of a KMS key by sending a request to the KMS service. It works with `Smaws_Lib.Context.t` and `Smaws_Client_KMS.disable_key_request` to perform the operation, returning a result that includes possible service-specific errors. It is used when deactivating a key to prevent further cryptographic operations.",
      "description_length": 339,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.TagResource",
      "library": "smaws-clients.kms",
      "description": "This module handles tagging operations for KMS resources by sending requests to associate tags with specified AWS KMS keys. It works with `tag_resource_request` to define tag key-value pairs and the target KMS resource ARN. Use this module to manage metadata for KMS keys, such as adding cost center or environment tags for resource tracking.",
      "description_length": 342,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ReplicateKey",
      "library": "smaws-clients.kms",
      "description": "Replicates a key in AWS KMS across regions by sending a replication request with the source and target region details. It handles responses and specific AWS KMS errors such as key state issues, policy problems, and resource limits. This module is used when setting up multi-region cryptographic keys for cross-region data encryption consistency.",
      "description_length": 345,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DisableKeyRotation",
      "library": "smaws-clients.kms",
      "description": "This module handles the disabling of key rotation for a KMS key by sending a request to the KMS service. It works with the `disable_key_rotation_request` type, which includes the key ARN, and returns a result indicating success or a specific KMS error. Concrete use cases include managing key lifecycle policies and ensuring compliance by preventing automatic key rotation for specific cryptographic keys.",
      "description_length": 405,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.PutKeyPolicy",
      "library": "smaws-clients.kms",
      "description": "This module handles the low-level request logic for setting key policies in AWS KMS, including sending the policy document and key ARN to the service. It works directly with `put_key_policy_request` structures and context objects, returning unit on success or specific AWS KMS error types on failure. It is used when programmatically updating the access control policy of a KMS key, such as during infrastructure provisioning or policy rotation.",
      "description_length": 445,
      "index": 311,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ListRetirableGrants",
      "library": "smaws-clients.kms",
      "description": "Handles requests to list grants that can be retired in AWS KMS. Works with KMS context, grant responses, and error types like `InvalidArnException` or `NotFoundException`. Used to retrieve and manage grant data for key rotation or cleanup tasks.",
      "description_length": 245,
      "index": 312,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.EnableKeyRotation",
      "library": "smaws-clients.kms",
      "description": "This module handles the low-level request to enable key rotation for a KMS key in AWS. It sends the appropriate API call using context and request parameters, returning a result with unit or specific AWS KMS error types. It is used when programmatically managing key rotation settings for cryptographic keys in AWS KMS.",
      "description_length": 319,
      "index": 313,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.DeleteImportedKeyMaterial",
      "library": "smaws-clients.kms",
      "description": "Deletes imported key material from a KMS key using the provided context and request parameters. Works with KMS key ARNs and handles errors such as invalid states, timeouts, and missing resources. Useful when removing externally imported cryptographic keys from AWS KMS after they've expired or are no longer needed.",
      "description_length": 315,
      "index": 314,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ListKeyRotations",
      "library": "smaws-clients.kms",
      "description": "This module handles listing key rotations for a KMS key by sending a request and returning a result with either the response or specific KMS-related errors. It works with KMS key ARNs and pagination markers to retrieve rotation records. Use this to audit or monitor key rotation events in AWS KMS.",
      "description_length": 297,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListGrants",
      "library": "smaws-clients.kms",
      "description": "Handles listing grants for a KMS key by sending a request with context and parsing the response. It works with KMS grant identifiers, markers for pagination, and key ARNs. Useful when retrieving and managing grants for auditing or access control in KMS-backed systems.",
      "description_length": 268,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.Verify",
      "library": "smaws-clients.kms",
      "description": "This module handles the verification of cryptographic signatures using AWS KMS keys. It provides a `request` function that takes a context and a verification request, returning a result indicating success or a specific KMS error. It works with AWS KMS key identifiers, signatures, and data to verify, supporting use cases like validating signed messages or ensuring data integrity in distributed systems.",
      "description_length": 404,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.CreateAlias",
      "library": "smaws-clients.kms",
      "description": "This module handles the creation of KMS aliases by sending a request with the provided alias name and target key ID. It works with error types specific to KMS operations, allowing precise handling of failure cases like invalid names or resource limits. A concrete use case is setting up aliases for newly created KMS keys to simplify key management and reference.",
      "description_length": 363,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DescribeKey",
      "library": "smaws-clients.kms",
      "description": "Handles requests to describe a key in a key management service, returning detailed information about the specified key. It works with context and key description request/response structures. Used to retrieve metadata and configuration details for a specific cryptographic key by its ARN.",
      "description_length": 287,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ConnectCustomKeyStore",
      "library": "smaws-clients.kms",
      "description": "This module handles requests to connect to a custom key store in AWS KMS, performing the necessary authentication and configuration checks. It works with context and request/response types specific to AWS KMS, including handling a variety of error conditions related to key store state and configuration. It is used when establishing secure connections to hardware security modules for cryptographic operations.",
      "description_length": 411,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ScheduleKeyDeletion",
      "library": "smaws-clients.kms",
      "description": "Schedules the deletion of a KMS key by sending a deletion request with a specified waiting period. Works with KMS key ARNs and handles errors related to key state, dependencies, and permissions. Used to automate key lifecycle management in AWS KMS integrations.",
      "description_length": 261,
      "index": 321,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ListKeyPolicies",
      "library": "smaws-clients.kms",
      "description": "This module handles the `ListKeyPolicies` operation for KMS, sending a request to list key policies associated with a specific KMS key and returning the response or an error. It works with KMS key ARNs and interacts with AWS KMS to retrieve policy names. Use this module when managing or auditing key policies for encryption keys in AWS KMS.",
      "description_length": 341,
      "index": 322,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.UpdateCustomKeyStore",
      "library": "smaws-clients.kms",
      "description": "This module handles requests to update a custom key store in a KMS service, interacting with contexts and key store configurations. It processes update operations and returns responses or specific error types related to key store and HSM cluster states. Use this module to modify custom key store settings when integrating with AWS KMS or similar key management systems.",
      "description_length": 370,
      "index": 323,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.ListAliases",
      "library": "smaws-clients.kms",
      "description": "This module handles the `ListAliases` operation for KMS, sending a request to list aliases in the KMS service and returning a result with either the response or specific KMS error types. It works with KMS-specific types like `list_aliases_request`, `list_aliases_response`, and various KMS exception types. A concrete use case is retrieving a paginated list of KMS aliases for auditing or key management workflows.",
      "description_length": 414,
      "index": 324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.Encrypt",
      "library": "smaws-clients.kms",
      "description": "This module handles encryption requests by interacting with AWS KMS to securely encrypt data. It takes a context and an encryption request, then returns either an encrypted response or a specific error indicating failure reasons such as key unavailability, invalid state, or timeouts. It is used when encrypting sensitive data using AWS-managed keys, ensuring secure handling and compliance with key usage policies.",
      "description_length": 415,
      "index": 325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.CreateKey",
      "library": "smaws-clients.kms",
      "description": "This module issues requests to create cryptographic keys in AWS KMS, handling detailed configuration parameters like key policies, descriptions, and usage settings. It processes responses and errors specific to key creation, such as policy validation failures or resource limits. Use this module when setting up new encryption keys with custom access controls or integrating key creation into automated infrastructure workflows.",
      "description_length": 428,
      "index": 326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKey",
      "library": "smaws-clients.kms",
      "description": "This module handles the generation of data keys using a specified KMS key, providing direct interaction with AWS KMS services. It works with cryptographic key metadata, grant tokens, and encryption context to produce securely generated key material. Use this when encrypting data locally with a key that is itself encrypted by a KMS-managed key.",
      "description_length": 345,
      "index": 327,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DeriveSharedSecret",
      "library": "smaws-clients.kms",
      "description": "This module handles the derivation of a shared secret using AWS KMS, interacting with cryptographic keys and grant tokens. It processes requests to generate a shared secret and returns the result along with handling specific KMS-related errors. Use this when implementing key exchange protocols or deriving encryption keys from asymmetric operations in AWS KMS.",
      "description_length": 361,
      "index": 328,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.RetireGrant",
      "library": "smaws-clients.kms",
      "description": "Retires a grant in AWS KMS by making a request to invalidate it, using a grant ID or token. Works with KMS grant identifiers and context data to perform the operation. Useful for cleaning up expired or unused grants to maintain secure key management.",
      "description_length": 250,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ListResourceTags",
      "library": "smaws-clients.kms",
      "description": "This module handles the listing of resource tags for AWS KMS resources by sending a request with a given ARN and marker, returning a paginated response of tags. It works with AWS KMS resource ARNs and tag structures, supporting error handling for common KMS service exceptions like invalid ARNs or markers. It is used when managing or auditing KMS key metadata, such as retrieving tags for cost allocation or compliance tracking.",
      "description_length": 429,
      "index": 330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.Decrypt",
      "library": "smaws-clients.kms",
      "description": "Decrypts ciphertext using AWS KMS, returning the decrypted plaintext along with metadata. It handles errors such as invalid keys, incorrect ciphertext, and key unavailability, providing detailed exception information. This module is used when retrieving sensitive data from encrypted KMS blobs, such as decrypting secrets stored in a database or configuration files.",
      "description_length": 366,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.VerifyMac",
      "library": "smaws-clients.kms",
      "description": "This module provides a `request` function to verify a message authentication code (MAC) using a specified KMS key, handling cryptographic validation and key state checks. It works with KMS-specific request and response types, including structured error types for common AWS KMS failure scenarios like invalid MACs, disabled keys, or incorrect key usage. Concrete use cases include validating signed data integrity in secure messaging or ensuring tamper-proof data exchanges in distributed systems.",
      "description_length": 497,
      "index": 332,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.GetKeyRotationStatus",
      "library": "smaws-clients.kms",
      "description": "This module issues requests to check the key rotation status for AWS KMS customer master keys. It works with context and key rotation status request/response structures, handling specific AWS KMS errors like invalid ARN or key state issues. A concrete use case is verifying whether automatic key rotation is enabled for a specific KMS key in an AWS account.",
      "description_length": 357,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.GenerateDataKeyWithoutPlaintext",
      "library": "smaws-clients.kms",
      "description": "This module issues a request to generate an encrypted data key without returning the plaintext version, interacting with KMS services using a provided context and key specification. It handles errors specific to key state, permissions, and system failures, returning an encrypted data key response or an error. It is used to securely generate cryptographic keys for encryption workflows where plaintext exposure must be avoided.",
      "description_length": 428,
      "index": 334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.ImportKeyMaterial",
      "library": "smaws-clients.kms",
      "description": "This module handles the import of key material into a KMS key using a signed import token. It processes requests to upload encrypted key material and returns a response indicating success or failure. Concrete use cases include securely onboarding externally generated cryptographic keys into AWS KMS for use in encryption workflows.",
      "description_length": 332,
      "index": 335,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.CreateCustomKeyStore",
      "library": "smaws-clients.kms",
      "description": "This module handles the creation of a custom key store in AWS KMS, validating configurations and interfacing with HSM clusters or external key stores. It works with request and response structures specific to key store creation, including error types for misconfigurations, resource conflicts, and connectivity issues. Concrete use cases include setting up a key store backed by a CloudHSM cluster or an external key manager, ensuring correct trust anchors and authentication credentials are provided.",
      "description_length": 501,
      "index": 336,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KMS.RevokeGrant",
      "library": "smaws-clients.kms",
      "description": "Revokes a grant from a KMS key, handling errors such as invalid ARNs, grant IDs, and key state issues. Works with KMS grant identifiers and AWS context data. Used to manage access permissions for cryptographic keys in AWS KMS.",
      "description_length": 226,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS.DisconnectCustomKeyStore",
      "library": "smaws-clients.kms",
      "description": "This module handles the disconnection of a custom key store from a KMS service. It accepts a context and a disconnection request, returning a result that either contains the disconnection response or specific error types such as invalid state, not found, or internal exceptions. It is used when managing cryptographic key infrastructure that requires integration with external key stores.",
      "description_length": 388,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KMS",
      "library": "smaws-clients.kms",
      "description": "This module supports cryptographic verification, key lifecycle management, and secure resource configuration for cryptographic keys and external key stores. It operates on data structures including cryptographic keys, key stores, metadata (e.g., descriptions, primary regions), tags, aliases, and cryptographic parameters like signatures, MACs, and encryption contexts. This enables use cases such as cross-region key replication, access control via grants, data integrity checks with HMACs, and integration with external key stores for secure cryptographic workflows.",
      "description_length": 568,
      "index": 339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironmentTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "This module handles the creation of environment template versions by sending a request with provided input parameters and returning a result that either contains the output data or specific error types. It works with context and input/output structures defined in the Smaws_Lib and Smaws_Client_Proton libraries. A concrete use case is programmatically deploying updated environment templates in a Proton service to manage infrastructure as code.",
      "description_length": 446,
      "index": 340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceInstance",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to retrieve service instance details from AWS Proton, handling input parameters and parsing responses into structured output. It operates on AWS Proton service instance identifiers, returning metadata and status information. Use this module to fetch specific service instance data, such as when monitoring deployment status or retrieving configuration details for a known service instance.",
      "description_length": 417,
      "index": 341,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteService",
      "library": "smaws-clients.proton",
      "description": "Performs service deletion in Proton by sending a request with a provided context and input parameters. It handles errors specific to service deletion, such as access denial, conflicts, and resource not found, returning either a successful result or a detailed error. This module is used when removing Proton services programmatically, ensuring proper error handling for operational integrity.",
      "description_length": 392,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceInstances",
      "library": "smaws-clients.proton",
      "description": "This module handles listing service instances in AWS Proton by sending a request with a given context and input parameters. It processes the response into a result type, handling specific AWS Proton errors such as access denied, internal server errors, and resource not found. It is used to retrieve and manage service instance data directly from AWS Proton in a structured and error-aware manner.",
      "description_length": 397,
      "index": 343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceSyncConfig",
      "library": "smaws-clients.proton",
      "description": "Retrieves service synchronization configuration details using a provided context and input parameters. It operates on AWS Proton service models, handling errors related to access, resource state, and validation. This function is used to fetch configuration data for service sync operations in AWS Proton workflows.",
      "description_length": 314,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironmentTemplate",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to create environment templates in AWS Proton, handling input validation and error responses. It operates on context and input/output structures specific to the Proton service, including detailed error types for failure scenarios. Concrete use cases include defining new environment templates with specified parameters and handling service-specific exceptions during creation.",
      "description_length": 404,
      "index": 345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteDeployment",
      "library": "smaws-clients.proton",
      "description": "Deletes a deployment by sending a request with the provided context and input parameters, returning a result that either contains the output or an error indicating failure. It operates on deployment identifiers and handles errors such as resource not found, access denied, and validation issues. This function is used when tearing down or reconfiguring infrastructure deployments managed by the Proton service.",
      "description_length": 410,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListComponentProvisionedResources",
      "library": "smaws-clients.proton",
      "description": "This module handles requests to list provisioned resources for a component in AWS Proton. It works with context and input/output types specific to the Proton service, including structured error types for common AWS exceptions. It is used to retrieve information about provisioned resources tied to a specific component, supporting operations like resource tracking and status checks.",
      "description_length": 383,
      "index": 347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentTemplates",
      "library": "smaws-clients.proton",
      "description": "This module handles listing environment templates by sending a request to the Proton service using a provided context and input parameters. It works with input and output structures specific to the Proton service, including error types like access denied, internal server errors, throttling, and validation exceptions. A concrete use case is retrieving a paginated list of environment templates for managing infrastructure as code in AWS Proton.",
      "description_length": 445,
      "index": 348,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetTemplateSyncConfig",
      "library": "smaws-clients.proton",
      "description": "Retrieves the template sync configuration for a specific resource in Proton. It takes a context and an input structure containing identifiers like template name or repository details, returning either the sync configuration or an error indicating issues like missing resources or access problems. This function is used when managing infrastructure templates to ensure correct version control integration.",
      "description_length": 404,
      "index": 349,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentTemplateVersions",
      "library": "smaws-clients.proton",
      "description": "This module handles listing versions of an environment template in AWS Proton, providing the `request` function to send queries and receive paginated results. It works with input and output structures specific to environment template versions, including metadata like template name and version numbers. Use this module to retrieve historical or available versions of a template for deployment or management tasks.",
      "description_length": 413,
      "index": 350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServicePipelineProvisionedResources",
      "library": "smaws-clients.proton",
      "description": "This module handles requests to list provisioned resources for a service pipeline in Proton, interacting with AWS services using context and input parameters. It processes errors specific to AWS operations, including access denial, internal server issues, resource absence, throttling, and validation failures. Use this module to retrieve and manage resource data for Proton service pipelines in AWS environments.",
      "description_length": 413,
      "index": 351,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CancelServicePipelineDeployment",
      "library": "smaws-clients.proton",
      "description": "Cancels a service pipeline deployment by sending a request with the provided context and input parameters, handling specific error cases such as access denial, conflicts, and resource not found. It operates on Proton service pipeline deployment data, using input and output structures defined in the Proton client library. This function is used when stopping an ongoing deployment is needed, such as during manual intervention or automated rollback scenarios.",
      "description_length": 459,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateComponent",
      "library": "smaws-clients.proton",
      "description": "This module provides a `request` function to update a component in AWS Proton, taking a context and input parameters. It returns a result with either the output of the update or specific AWS Proton error types. It is used to modify component configurations programmatically, handling errors such as conflicts, validation failures, or resource not found during the update process.",
      "description_length": 379,
      "index": 353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironment",
      "library": "smaws-clients.proton",
      "description": "Deletes a Proton environment by sending a request with the environment name or ID. Works with input and output structures defined in the Proton client library, handling errors like resource not found or access denied. Useful for cleaning up environments that are no longer needed or automating environment teardown in CI/CD pipelines.",
      "description_length": 334,
      "index": 354,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.RejectEnvironmentAccountConnection",
      "library": "smaws-clients.proton",
      "description": "Rejects an environment account connection request, handling errors such as access denial, conflicts, and validation failures. Works with context and input/output types specific to the Proton service. Useful for managing environment account connections in AWS Proton workflows.",
      "description_length": 276,
      "index": 355,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CancelEnvironmentDeployment",
      "library": "smaws-clients.proton",
      "description": "This module provides a function to cancel an environment deployment in Proton by sending a request with the necessary context and input parameters. It handles specific error types such as access denied, conflict, internal server errors, and resource not found. A concrete use case is stopping an ongoing deployment when a new configuration is pushed or when manual intervention is required.",
      "description_length": 390,
      "index": 356,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironmentAccountConnection",
      "library": "smaws-clients.proton",
      "description": "This module handles retrieving environment account connection details by sending a request with a context and input parameters, returning either the connection output or specific AWS service errors. It operates on context and input/output types defined in the Smaws_Lib and Smaws_Client_Proton libraries, specifically targeting environment account connection data. Use this module to fetch connection metadata for a given environment account in AWS Proton workflows.",
      "description_length": 466,
      "index": 357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetDeployment",
      "library": "smaws-clients.proton",
      "description": "Retrieves deployment details by sending a request with a specific input structure, returning either the deployment output or an error indicating issues like missing resources, access problems, or validation failures. Works with context and deployment input/output types defined in the Proton protocol. Useful for checking the status or configuration of a specific deployment in a service pipeline.",
      "description_length": 397,
      "index": 358,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.NotifyResourceDeploymentStatusChange",
      "library": "smaws-clients.proton",
      "description": "This module provides a single operation, `request`, which notifies a change in resource deployment status. It works with input and output types defined in the `Smaws_Client_Proton` module, along with a context from `Smaws_Lib.Context`. It is used to signal deployment state updates for resources managed by the Proton service, handling common AWS service errors with specific exception types.",
      "description_length": 392,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceTemplate",
      "library": "smaws-clients.proton",
      "description": "Handles updating service templates in AWS Proton by sending requests with provided configuration. Works with input and output structures defined in the `Smaws_Client_Proton` module, including detailed error types for failure handling. Useful for infrastructure automation workflows where service templates need to be modified programmatically.",
      "description_length": 343,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironment",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to create Proton environments, handling input and output data structures specific to the Proton service. It works with context data, environment creation parameters, and structured error types for failure conditions like conflicts or validation issues. A concrete use case is automating the setup of Proton environments as part of a CI/CD pipeline or infrastructure provisioning workflow.",
      "description_length": 416,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetService",
      "library": "smaws-clients.proton",
      "description": "This module handles the `request` operation for retrieving service details, using a context and input parameters specific to the Proton service. It works with structured input and output types defined in `Smaws_Client_Proton`, along with error types representing common AWS service failures. It is used to fetch information about a Proton service by name or ARN, handling errors such as access denial, resource not found, and validation issues.",
      "description_length": 444,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteComponent",
      "library": "smaws-clients.proton",
      "description": "Deletes a component from AWS Proton using the provided input, returning a result that indicates success or failure. It operates on Proton component data types, handling errors such as access denial, conflicts, and resource not found. This function is used when removing a component from a Proton environment or service.",
      "description_length": 319,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CancelComponentDeployment",
      "library": "smaws-clients.proton",
      "description": "This module handles the cancellation of a component deployment in a system, using a provided context and input parameters. It interacts with data types representing deployment inputs, outputs, and various error conditions such as access denial, conflicts, or resource not found. A concrete use case is stopping an ongoing deployment when a new version is pushed or when an error is detected mid-deployment.",
      "description_length": 406,
      "index": 364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServicePipeline",
      "library": "smaws-clients.proton",
      "description": "This module handles the core logic for updating service pipelines in a system, providing a `request` function that processes input data and returns either a successful output or a detailed error. It works with structured input and output types specific to service pipeline updates, including context, configuration, and error details. Use this module when modifying existing service pipeline configurations, handling validation, or managing conflicts during updates.",
      "description_length": 466,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironmentTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "Retrieves a specific version of an environment template by making a request with the provided context and input parameters. It handles errors related to access control, resource existence, validation, and system limits, returning either the template version data or a detailed error. This function is used when deploying or inspecting infrastructure templates in a Proton-managed environment.",
      "description_length": 392,
      "index": 366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironmentTemplate",
      "library": "smaws-clients.proton",
      "description": "Sends a request to update an environment template with specified parameters, handling errors such as access denial, conflicts, and validation failures. Works with input and output structures defined in Smaws_Client_Proton, including environment template details and exception types. Useful for modifying existing environment templates in Proton with precise error handling for common API issues.",
      "description_length": 395,
      "index": 367,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.CreateComponent",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to create components with input parameters, returning either a success result with output data or an error indicating specific failure conditions like access denial, conflicts, or validation issues. It operates on context and input structures defined in related modules, handling errors such as quota limits or resource not found. It is used to programmatically provision new components in a system while handling common failure scenarios during creation.",
      "description_length": 483,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetResourcesSummary",
      "library": "smaws-clients.proton",
      "description": "Retrieves a summary of resources managed by Proton, including counts and statuses, using a provided context and input parameters. It operates on AWS context and Proton-specific input/output structures, handling errors such as access denial, validation failure, and throttling. This function is used to monitor resource allocation and health in Proton-managed environments.",
      "description_length": 372,
      "index": 369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteServiceTemplate",
      "library": "smaws-clients.proton",
      "description": "Sends a request to delete a service template in AWS Proton, handling input validation and returning either the deletion result or specific error types. Works with AWS Proton service templates using input and output structures defined in the Proton client library. Useful for removing unused or outdated service templates directly from infrastructure code.",
      "description_length": 355,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceSyncBlockerSummary",
      "library": "smaws-clients.proton",
      "description": "This module issues a request to retrieve a summary of service sync blocker information, handling input and output types specific to the Proton service. It operates on context and input structures to produce a result that includes either the summary output or a detailed error. Use this module to fetch service sync blocker summaries when managing Proton service templates and their deployment dependencies.",
      "description_length": 406,
      "index": 371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetAccountSettings",
      "library": "smaws-clients.proton",
      "description": "Retrieves account settings from the Proton service using a provided context and input parameters. It handles errors such as access denial, resource not found, and validation issues, returning a result that includes the account settings or an appropriate error. This function is used when configuring or auditing Proton account-level settings programmatically.",
      "description_length": 359,
      "index": 372,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.CancelServiceInstanceDeployment",
      "library": "smaws-clients.proton",
      "description": "This module provides a function to request cancellation of a service instance deployment in AWS Proton. It handles input and output types specific to the Proton service, including detailed error cases like access denial, conflicts, and validation failures. A concrete use case is stopping an ongoing deployment when a new configuration update is triggered.",
      "description_length": 356,
      "index": 373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceInstance",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to create service instances, handling input and output specific to the Proton service. It works with context data and structured input/output types defined in the Proton protocol. Use this to programmatically provision new service instances in AWS Proton with custom configurations.",
      "description_length": 310,
      "index": 374,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateRepository",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to create repositories, handling input and output structures specific to the repository creation operation. It works with context data, repository configuration inputs, and produces repository metadata or detailed error types on failure. Concrete use cases include setting up new repositories with specified parameters and handling service-specific errors like quota limits or validation failures.",
      "description_length": 425,
      "index": 375,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.AcceptEnvironmentAccountConnection",
      "library": "smaws-clients.proton",
      "description": "Accepts an environment account connection request, handling authentication and authorization between services. Works with context and input/output types specific to environment account connections. Used when establishing secure links between Proton environments and external accounts, ensuring proper access control and resource management.",
      "description_length": 340,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironments",
      "library": "smaws-clients.proton",
      "description": "This module issues a request to list Proton environments, handling pagination and filtering through input parameters. It processes the response into a structured output format, including environment metadata and potential errors. Use this to retrieve environment summaries for monitoring or management workflows.",
      "description_length": 312,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "This module handles the creation of a new service template version in Proton, interacting with the AWS JSON protocol. It processes input parameters to generate a request, returning either a successful response or specific error types such as `AccessDeniedException`, `ConflictException`, or `ValidationException`. It is used when deploying updated versions of service templates in Proton, ensuring correct versioning and handling failure scenarios specific to the service.",
      "description_length": 472,
      "index": 378,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateAccountSettings",
      "library": "smaws-clients.proton",
      "description": "This module handles account settings updates by sending requests with provided context and input parameters, returning either a result or specific error types. It works with context and input/output structures defined in the Smaws_Lib and Smaws_Client_Proton namespaces. A concrete use case is modifying user account configurations in a Proton-based service while handling potential failures such as conflicts or validation errors.",
      "description_length": 431,
      "index": 379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentAccountConnections",
      "library": "smaws-clients.proton",
      "description": "This module handles listing environment account connections in Proton by sending a request with a given context and input parameters. It processes the response into a result type, handling specific Proton errors like access denial, internal server issues, throttling, and validation failures. Use this to retrieve and manage environment account connection details programmatically within an AWS Proton setup.",
      "description_length": 408,
      "index": 380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironmentAccountConnection",
      "library": "smaws-clients.proton",
      "description": "Deletes an environment account connection using a provided context and input parameters, returning either a success result or specific error types such as `AccessDeniedException` or `ResourceNotFoundException`. It operates on input and output structures defined in the Proton protocol, handling errors specific to AWS service interactions. This function is used when managing Proton environment account connections in AWS, such as during cleanup or reconfiguration workflows.",
      "description_length": 475,
      "index": 381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServices",
      "library": "smaws-clients.proton",
      "description": "This module handles the `list_services` operation for a Proton client, sending requests to list all services within a given context. It works with input and output structures defined in `Smaws_Client_Proton`, including error types like `AccessDeniedException` and `ValidationException`. A concrete use case is retrieving a paginated list of Proton services for monitoring or management purposes.",
      "description_length": 395,
      "index": 382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceSyncConfig",
      "library": "smaws-clients.proton",
      "description": "This module issues a synchronous configuration creation request for a service, handling input parameters and returning either a successful output or specific error types. It operates on context and input/output structures defined in the `Smaws_Client_Proton` module, including detailed error cases like `AccessDeniedException` and `ValidationException`. It is used when setting up or updating service configurations in a Proton service integration, ensuring immediate feedback on the operation's result.",
      "description_length": 503,
      "index": 383,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListRepositories",
      "library": "smaws-clients.proton",
      "description": "This module handles the `list_repositories` operation for the Proton service, sending a request to retrieve repository information and returning a result that includes either the list of repositories or an error. It works with input and output types specific to the Proton service, including context, repository metadata, and various error types such as `AccessDeniedException` and `ValidationException`. A concrete use case is querying all repositories in a Proton environment to display or manage their configurations.",
      "description_length": 520,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceInstanceSyncStatus",
      "library": "smaws-clients.proton",
      "description": "This module issues a request to check the synchronization status of a service instance, handling authentication and error responses. It operates on input and output structures defined in the `Smaws_Client_Proton` module, including detailed error types for failure conditions. A typical use case involves querying the status of a deployed service instance to determine if it is in sync with its template definition.",
      "description_length": 414,
      "index": 385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateService",
      "library": "smaws-clients.proton",
      "description": "The module issues API requests to update service configurations in Proton, handling responses and errors specific to service management. It operates on input and output structures defined in `Smaws_Client_Proton`, including error types like `AccessDeniedException` and `ValidationException`. This module is used when modifying Proton service settings, such as updating service templates or deployment specifications.",
      "description_length": 416,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListTagsForResource",
      "library": "smaws-clients.proton",
      "description": "This module handles listing tags for a specified resource in Proton, using the provided context and input parameters. It works with custom input and output types defined in `Smaws_Client_Proton`, along with standard error types from the AWS JSON protocol. A typical use case involves retrieving metadata tags for a Proton service or environment to support cost tracking or resource management workflows.",
      "description_length": 403,
      "index": 387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteTemplateSyncConfig",
      "library": "smaws-clients.proton",
      "description": "Deletes a template sync configuration by ID, handling errors such as access denial, conflicts, and resource not found. Works with input and output structures defined in the Proton client library. Useful for removing outdated or unused sync configurations in a Proton service template setup.",
      "description_length": 290,
      "index": 388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceInstanceProvisionedResources",
      "library": "smaws-clients.proton",
      "description": "This module handles requests to list provisioned resources for a service instance in Proton, interacting with AWS services using a provided context. It processes input parameters to retrieve resource data and returns structured output or specific error types such as `AccessDeniedException` or `ResourceNotFoundException`. Use this module when querying Proton to inspect the resources provisioned under a specific service instance.",
      "description_length": 431,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListDeployments",
      "library": "smaws-clients.proton",
      "description": "This module handles listing deployments by sending a request to the Proton service, accepting a context and input parameters. It processes the response into a result type that includes either deployment data or specific error types like access denied, internal server errors, or validation issues. It is used to retrieve and manage deployment information directly from Proton's API in a structured format.",
      "description_length": 405,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetRepository",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to retrieve repository details from the Proton service, handling errors such as access denial, resource not found, and validation failures. It operates on input and output structures defined in the `Smaws_Client_Proton` module, interacting with AWS JSON-based APIs. A typical use case involves fetching metadata about a specific repository by name or ID within an automated deployment or monitoring workflow.",
      "description_length": 436,
      "index": 391,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.ListServicePipelineOutputs",
      "library": "smaws-clients.proton",
      "description": "This module handles listing outputs from service pipelines by sending a request with a given context and input parameters. It processes the response into a result type that includes either the output data or specific error types such as `AccessDeniedException`, `ResourceNotFoundException`, and others. It is used to retrieve and handle service pipeline outputs in an AWS Proton context, providing detailed error handling for common failure scenarios.",
      "description_length": 451,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "Retrieves a specific version of a service template by making an AWS API request. It handles input parameters and authentication through the provided context, returning either the template version details or an error indicating issues like missing resources, access problems, or validation failures. This function is used when deploying or inspecting service templates in AWS Proton.",
      "description_length": 382,
      "index": 393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "This module handles updating a service template version in AWS Proton by sending a request with the provided input. It works with the `update_service_template_version_input` and `update_service_template_version_output` data structures, along with various error types for specific failure scenarios. It is used when modifying an existing version of a service template, such as adjusting configuration or deployment settings.",
      "description_length": 423,
      "index": 394,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironment",
      "library": "smaws-clients.proton",
      "description": "Performs an environment update operation using a provided context and input parameters, returning either a successful response or a detailed error. It handles specific AWS Proton-related exceptions such as access denial, conflicts, and resource not found. This module is used to modify environment configurations in AWS Proton programmatically.",
      "description_length": 344,
      "index": 395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UntagResource",
      "library": "smaws-clients.proton",
      "description": "Removes specified tags from a Proton resource using the provided context and input parameters. It handles common AWS service errors such as access denial, conflicts, and validation issues. This operation is useful when managing resource metadata in AWS Proton, such as cleaning up tags after resource updates or deletions.",
      "description_length": 322,
      "index": 396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListComponents",
      "library": "smaws-clients.proton",
      "description": "This module handles listing components in AWS Proton by sending a request with a given context and input parameters, returning either a list of components or an error. It works with input and output structures defined in the Smaws_Client_Proton module, including error types specific to AWS Proton. A concrete use case is retrieving all components associated with a service template to manage infrastructure as code deployments.",
      "description_length": 428,
      "index": 397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteServiceSyncConfig",
      "library": "smaws-clients.proton",
      "description": "Performs synchronous deletion of a service sync configuration in AWS Proton, handling errors such as access denial, conflicts, and resource not found. It operates on input and output types specific to the Proton service sync configuration deletion operation. This function is used when ensuring a service sync configuration is removed and immediate confirmation is required.",
      "description_length": 374,
      "index": 398,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetServiceTemplate",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to retrieve service templates in AWS Proton, handling input parameters and parsing responses into structured output. It operates on AWS Proton service template identifiers and returns detailed template information or specific error types on failure. A concrete use case is fetching service template configurations to deploy or inspect infrastructure as code templates in AWS Proton workflows.",
      "description_length": 420,
      "index": 399,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironment",
      "library": "smaws-clients.proton",
      "description": "Retrieves environment details from Proton by sending a request with a given context and input parameters. It handles responses by returning either the environment data or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. This module is used when querying Proton for environment configuration in AWS workflows.",
      "description_length": 341,
      "index": 400,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteServiceTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "Deletes a specific version of a service template, handling errors such as access denial, conflicts, and resource not found. Works with input and output structures defined in the Proton client library. Useful for managing service template versions in AWS Proton workflows.",
      "description_length": 271,
      "index": 401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentOutputs",
      "library": "smaws-clients.proton",
      "description": "This module handles the `list_environment_outputs` operation, which retrieves outputs from a Proton environment. It works with input and output structures defined in the `Smaws_Client_Proton` module, including environment identifiers and output metadata. Use this module to query deployed environment outputs for inspection or debugging purposes.",
      "description_length": 346,
      "index": 402,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListEnvironmentProvisionedResources",
      "library": "smaws-clients.proton",
      "description": "This module handles requests to list provisioned resources for a Proton environment, interacting with AWS services using a provided context and input parameters. It processes the input to query environment-specific resources and returns either the output data or specific error types like access denied, internal server errors, or resource not found. Use this module when retrieving provisioned infrastructure details for a Proton environment in AWS.",
      "description_length": 450,
      "index": 403,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceSyncBlocker",
      "library": "smaws-clients.proton",
      "description": "This module provides a `request` function to block or unblock service sync operations in Proton by sending update requests with specified input parameters. It works with context and input/output types defined in the Smaws_Lib and Smaws_Client_Proton namespaces, handling errors such as access denial, conflicts, and validation issues. A concrete use case is managing service synchronization state during deployment workflows in AWS Proton.",
      "description_length": 439,
      "index": 404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceTemplates",
      "library": "smaws-clients.proton",
      "description": "This module handles listing service templates in AWS Proton by sending a request with a given context and input parameters. It processes the response into a result type, handling specific AWS errors like access denial, internal server issues, throttling, and validation failures. Use this to retrieve and manage service templates programmatically within an AWS Proton environment.",
      "description_length": 380,
      "index": 405,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateTemplateSyncConfig",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to configure template synchronization in a cloud service environment. It processes input parameters to establish sync settings and returns either a confirmation of the created configuration or specific error conditions like quota limits, conflicts, or validation failures. It directly handles structured data for sync configuration input and output, along with detailed exception types for error reporting.",
      "description_length": 434,
      "index": 406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetTemplateSyncStatus",
      "library": "smaws-clients.proton",
      "description": "Retrieves the synchronization status of a template by making a request with a provided context and input. It handles errors specific to AWS Proton, such as access denial, resource not found, and validation issues. This function is used to check whether a template is in sync with its source repository in AWS Proton.",
      "description_length": 316,
      "index": 407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateTemplateSyncConfig",
      "library": "smaws-clients.proton",
      "description": "Sends a request to update a template sync configuration, handling input validation and returning either the updated configuration or specific error types. Works with context, input, and output structures defined in the Proton protocol, including detailed error cases like access denied or resource not found. Useful for synchronizing infrastructure templates with source repositories in AWS Proton workflows.",
      "description_length": 408,
      "index": 408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateServiceTemplate",
      "library": "smaws-clients.proton",
      "description": "This module handles the creation of service templates in AWS Proton by sending a request with provided input parameters and returning a result that either contains the output of the operation or an error indicating the specific failure. It works with input and output structures defined in the Smaws_Client_Proton module, including error types such as `AccessDeniedException`, `ConflictException`, and `ValidationException`. A concrete use case is automating the provisioning of infrastructure templates within AWS Proton while handling service-specific errors for retries or user feedback.",
      "description_length": 590,
      "index": 409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetComponent",
      "library": "smaws-clients.proton",
      "description": "This module handles retrieving component details from AWS Proton by sending a request with a given context and input parameters. It processes the response into a structured output or returns specific error types such as access denied, internal server error, or resource not found. Use this module when querying AWS Proton for component information, especially in automation or resource management workflows.",
      "description_length": 407,
      "index": 410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetRepositorySyncStatus",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to retrieve the synchronization status of a repository in a cloud service. It handles input configurations and context to fetch repository sync details, returning structured output or specific error types. Use it to monitor repository state and resolve sync issues in deployment pipelines.",
      "description_length": 317,
      "index": 411,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironmentTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to update environment template versions in Proton, handling input parameters and parsing service responses. It works with context objects and structured input/output types defined in the Proton client library. Use this module when modifying environment template versions programmatically, such as in deployment pipelines or infrastructure management tools.",
      "description_length": 384,
      "index": 412,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.TagResource",
      "library": "smaws-clients.proton",
      "description": "This module handles tagging operations for Proton resources, providing a `request` function to associate tags with specified resources. It works with input and output types specific to Proton's tagging API, including structured error types for common failure scenarios. Concrete use cases include adding metadata tags to Proton services, repositories, or environments for resource management and cost tracking.",
      "description_length": 410,
      "index": 413,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironmentTemplateVersion",
      "library": "smaws-clients.proton",
      "description": "Deletes a specific version of an environment template, handling errors such as access denial, conflicts, and resource not found. Works with input and output structures defined in the Proton client library. Useful for managing environment template versions in AWS Proton workflows.",
      "description_length": 280,
      "index": 414,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceSyncConfig",
      "library": "smaws-clients.proton",
      "description": "Sends a request to update service synchronization configuration with specified input parameters. It handles errors related to access control, resource state, and validation, returning either a successful response or a detailed error. This function is used when adjusting how a service synchronizes with infrastructure resources in a managed environment.",
      "description_length": 353,
      "index": 415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateEnvironmentAccountConnection",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to establish environment account connections in Proton, handling input parameters and parsing responses. It works with context objects and Proton-specific input/output structures for environment account connection operations. Use this when programmatically linking environment accounts in AWS Proton, particularly during setup or integration workflows requiring account-level connections.",
      "description_length": 416,
      "index": 416,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceTemplateVersions",
      "library": "smaws-clients.proton",
      "description": "This module handles listing versions of a service template by sending a request with a given context and input parameters. It works with service template version data, returning either a result containing the output or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used to retrieve historical versions of a service template for management or deployment purposes.",
      "description_length": 404,
      "index": 417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListComponentOutputs",
      "library": "smaws-clients.proton",
      "description": "This module handles listing outputs for a Proton component by sending a request with a context and input parameters, returning either the output data or specific error types such as `AccessDeniedException` or `ResourceNotFoundException`. It operates on Proton component output data structures, which include details like output names and values. A concrete use case is retrieving infrastructure output values after deploying a Proton component for monitoring or further automation.",
      "description_length": 481,
      "index": 418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListServiceInstanceOutputs",
      "library": "smaws-clients.proton",
      "description": "This module handles retrieving outputs from a service instance in Proton by sending a request and returning a result with either the output data or specific error types. It works with context and input/output types defined in the Proton client library. A concrete use case is fetching deployment outputs for a specific service instance in an AWS Proton-managed application.",
      "description_length": 373,
      "index": 419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.GetEnvironmentTemplate",
      "library": "smaws-clients.proton",
      "description": "Retrieves an environment template by sending a request with a given context and input parameters. It handles specific AWS Proton errors and returns either the template data or an error variant. This function is used when fetching environment templates from AWS Proton, such as during infrastructure setup or template management workflows.",
      "description_length": 338,
      "index": 420,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteRepository",
      "library": "smaws-clients.proton",
      "description": "This module handles the deletion of a repository in Proton by sending a request with the necessary context and input parameters. It works with the `delete_repository_input` and `delete_repository_output` data structures, along with various error types for specific failure scenarios. A concrete use case is removing a repository resource when decommissioning or reconfiguring infrastructure in a Proton-managed environment.",
      "description_length": 423,
      "index": 421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.CreateService",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to create a service, handling input and output data specific to the Proton service creation operation. It works with context data, service creation parameters, and structured error types like `AccessDeniedException` or `ValidationException`. It is used when provisioning new services in AWS Proton, returning either a successful response or a typed error indicating the failure reason.",
      "description_length": 413,
      "index": 422,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.ListRepositorySyncDefinitions",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to list repository synchronization definitions, handling input and output according to the Proton service protocol. It operates on context and input/output types defined in the Smaws_Client_Proton library, interacting with Proton service endpoints. Use this module to retrieve configured repository sync definitions from AWS Proton within a given context.",
      "description_length": 383,
      "index": 423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.DeleteEnvironmentTemplate",
      "library": "smaws-clients.proton",
      "description": "Sends a request to delete an environment template, handling authentication and error responses. Works with context and input/output structures specific to the Proton service. Used when removing a template that is no longer needed, ensuring it is no longer available for environment creation.",
      "description_length": 291,
      "index": 424,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateEnvironmentAccountConnection",
      "library": "smaws-clients.proton",
      "description": "This module issues requests to update environment account connections in Proton, handling input and output data specific to the Proton service. It operates on context and input types defined in the Proton client library, returning either a successful response or a detailed error. Concrete use cases include modifying account connections for Proton environments as part of infrastructure automation workflows.",
      "description_length": 409,
      "index": 425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton.UpdateServiceInstance",
      "library": "smaws-clients.proton",
      "description": "This module handles updating service instances in AWS Proton by sending requests with provided input parameters and returning either a successful output or specific error types. It operates on AWS Proton service instance data structures, including input configurations and error responses like access denied, conflict, or resource not found. A concrete use case is modifying an existing service instance's configuration within an AWS Proton environment.",
      "description_length": 453,
      "index": 426,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Proton",
      "library": "smaws-clients.proton",
      "description": "This module facilitates infrastructure-as-code management in AWS Proton by handling template synchronization, service configuration updates, and deployment tracking. It works with data structures representing service templates, versions, environments, components, repositories, and sync configurations, including metadata like ARNs, timestamps, and deployment states. Use cases include resolving synchronization blockers, managing template versioning, and orchestrating deployments via CloudFormation or Terraform.",
      "description_length": 514,
      "index": 427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListCollections",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing OpenSearch Serverless collections by sending a request and returning a result with either the response or specific error types. It operates on the `list_collections_request` and `list_collections_response` data structures, interacting with the OpenSearch Serverless service. It is used to retrieve collection metadata, such as names and ARNs, for service management and monitoring tasks.",
      "description_length": 415,
      "index": 428,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetVpcEndpoint",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles batch retrieval of VPC endpoint configurations by sending requests to the OpenSearch Serverless service. It processes input containing endpoint identifiers and returns responses with detailed endpoint information or specific error types like validation failures. It is used to efficiently query multiple VPC endpoints in a single operation, particularly in infrastructure management and monitoring workflows.",
      "description_length": 428,
      "index": 429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateLifecyclePolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to update OpenSearch Serverless lifecycle policies, handling responses and specific error conditions such as conflicts, validation failures, and resource not found. It operates on lifecycle policy request and response structures defined in the client library. Use this module when modifying retention rules or data expiration settings for OpenSearch Serverless collections.",
      "description_length": 401,
      "index": 430,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListSecurityConfigs",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing security configurations for OpenSearch Serverless by sending a request and returning a result with either the response or specific error types. It works with security configuration data, including identifiers and types like SAML. Use this module to retrieve configured SAML options or other security settings for managing authentication in OpenSearch Serverless.",
      "description_length": 390,
      "index": 431,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateVpcEndpoint",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles the request to update an OpenSearch Serverless VPC endpoint, sending the provided update request to the service and returning the response. It works with the `update_vpc_endpoint_request` and `update_vpc_endpoint_response` data types, along with various error types for handling failure cases. A concrete use case is modifying the network configuration of an existing VPC endpoint for an OpenSearch Serverless collection.",
      "description_length": 441,
      "index": 432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteSecurityConfig",
      "library": "smaws-clients.opensearchserverless",
      "description": "Deletes a security configuration from OpenSearch Serverless. It takes a context and a delete request, returning a result with the response or specific error types like `ResourceNotFoundException` or `ValidationException`. This function is used to remove existing security policies when managing access controls in OpenSearch Serverless.",
      "description_length": 336,
      "index": 433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UntagResource",
      "library": "smaws-clients.opensearchserverless",
      "description": "Removes specified tags from an OpenSearch Serverless resource. Works with AWS context and untagging request/response structures. Used to manage resource metadata in OpenSearch Serverless by removing key-value tags.",
      "description_length": 214,
      "index": 434,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetSecurityPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to retrieve security policies from OpenSearch Serverless, handling responses and specific error conditions. It works with security policy identifiers and structured policy documents. Use it to fetch and validate security policies for OpenSearch domains.",
      "description_length": 281,
      "index": 435,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateAccessPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to create access policies for OpenSearch Serverless, handling policy configuration and permissions. It works with access policy request and response structures, along with specific error types like conflict, validation, and quota exceptions. Use it to define and apply access controls for OpenSearch resources in AWS environments.",
      "description_length": 358,
      "index": 436,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListLifecyclePolicies",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing lifecycle policies in OpenSearch Serverless by sending a request and returning a result with either the response or specific error types. It works with AWS context, lifecycle policy requests, and responses, including error handling for server and validation issues. It is used to retrieve configured lifecycle policies for data management in OpenSearch Serverless environments.",
      "description_length": 405,
      "index": 437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.TagResource",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles tagging operations for OpenSearch Serverless resources. It accepts a context and a tagging request, then returns a result indicating success or a specific error such as conflict, resource not found, or validation failure. It is used to associate metadata tags with OpenSearch Serverless resources like collections or indexes.",
      "description_length": 345,
      "index": 438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteLifecyclePolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to delete OpenSearch Serverless lifecycle policies, handling responses and specific AWS service errors such as conflict, internal server, resource not found, and validation exceptions. It operates on a context and a delete lifecycle policy request, producing a result with either a deletion response or an error. It is used when managing OpenSearch Serverless resources to safely remove outdated or unnecessary lifecycle policies while handling failure scenarios specific to the service.",
      "description_length": 515,
      "index": 439,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateCollection",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to create OpenSearch Serverless collections, handling responses and specific error conditions such as conflicts, validation failures, and quota limits. It operates on AWS context and collection configuration data types, enabling direct interaction with the OpenSearch Serverless API. A concrete use case is automating the setup of isolated search environments with defined encryption and capacity settings.",
      "description_length": 434,
      "index": 440,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListAccessPolicies",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing access policies for OpenSearch Serverless by sending a request and returning a result with either the response or specific error types. It operates on access policy data structures, interacting with OpenSearch Serverless resources. A concrete use case is retrieving current access policies to audit or manage permissions for OpenSearch domains.",
      "description_length": 372,
      "index": 441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListSecurityPolicies",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing security policies by sending a request and returning a result with either the response or specific error types. It works with security policy data structures and error types like `InternalServerException` and `ValidationException`. A concrete use case is retrieving configured security policies for access control in an OpenSearch Serverless environment.",
      "description_length": 382,
      "index": 442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetEffectiveLifecyclePolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module executes a batch request to retrieve effective lifecycle policies for specified OpenSearch Serverless resources. It processes a request structure containing resource identifiers and returns a response with policy details or error information. It is used to efficiently query lifecycle configurations for multiple resources in a single call, typically for operational visibility or policy auditing.",
      "description_length": 409,
      "index": 443,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteSecurityPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles the deletion of security policies in OpenSearch Serverless by sending a deletion request and returning a result with either a success response or specific error types. It operates on security policy identifiers and interacts with the OpenSearch Serverless API to perform the deletion. Concrete use cases include removing outdated or unused security policies to manage access control configurations.",
      "description_length": 418,
      "index": 444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateCollection",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles updating an OpenSearch Serverless collection by sending a request with the provided configuration. It works with the `update_collection_request` type to modify collection properties and returns a response indicating success or failure. Concrete use cases include adjusting retention settings or updating encryption configurations for a collection.",
      "description_length": 367,
      "index": 445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetAccessPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles retrieving access policies for OpenSearch Serverless resources by sending a request and returning a result with either the policy response or specific error types. It works with context and access policy request/response data structures, supporting operations like fetching policies tied to a resource. A concrete use case is checking access configurations for a specific OpenSearch Serverless collection or data source.",
      "description_length": 440,
      "index": 446,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetSecurityConfig",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to retrieve security configurations from OpenSearch Serverless, handling responses and specific error conditions like resource not found or validation failures. It operates on structured request and response types defined for security configuration queries, including error variants for server exceptions and invalid inputs. Use this module to fetch security settings for OpenSearch domains, ensuring proper handling of configuration mismatches or missing resources.",
      "description_length": 494,
      "index": 447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetPoliciesStats",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues a request to retrieve statistics about policies in an OpenSearch Serverless environment. It works with context and policy statistics request/response types defined in the OpenSearch Serverless client library. A concrete use case is monitoring policy usage and performance metrics in serverless OpenSearch deployments.",
      "description_length": 336,
      "index": 448,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateLifecyclePolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to create lifecycle policies in OpenSearch Serverless, handling policy configuration and validation. It works with structured policy definitions and AWS error types for conflict, quota, and validation issues. A concrete use case is automating the setup of data retention rules for OpenSearch indices in serverless environments.",
      "description_length": 355,
      "index": 449,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListTagsForResource",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing tags for a specified OpenSearch Serverless resource. It accepts a context and a request containing the resource ARN, returning a result with either the list of tags or an error such as resource not found or validation failure. It is used to retrieve metadata tags associated with OpenSearch Serverless collections or indexes for management and tracking purposes.",
      "description_length": 390,
      "index": 450,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetLifecyclePolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles batch retrieval of lifecycle policies from OpenSearch Serverless by sending a structured request and parsing the response. It works with input and output record types specific to the OpenSearch Serverless API, including error types for server and validation issues. It is used to efficiently fetch multiple lifecycle policy configurations in a single API call, supporting automation and configuration management workflows.",
      "description_length": 442,
      "index": 451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateSecurityConfig",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles updating security configurations for OpenSearch Serverless by sending a request with a context and a configuration update payload, returning either a success response or specific error types like conflict, internal server error, resource not found, or validation errors. It operates on structured request and response types defined in the OpenSearch Serverless client library. Use this module to modify security settings such as encryption or access policies for OpenSearch resources programmatically.",
      "description_length": 521,
      "index": 452,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateSecurityPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to create security policies in OpenSearch Serverless, handling responses and specific error conditions like conflicts or validation failures. It operates on security policy configuration data, including policy content and metadata. Use it to define access controls or encryption settings when setting up OpenSearch resources.",
      "description_length": 353,
      "index": 453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateAccountSettings",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles updating account settings for an OpenSearch Serverless service by sending a request with provided configuration. It works with structured data types representing account settings, including encryption and capacity configurations. A concrete use case is modifying default encryption settings or adjusting capacity limits for OpenSearch resources programmatically.",
      "description_length": 382,
      "index": 454,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteVpcEndpoint",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles the deletion of an OpenSearch Serverless VPC endpoint, issuing a request that takes a context and a deletion request structure. It returns a result containing either a deletion response or specific error types like `ConflictException`, `ResourceNotFoundException`, and others. It is used to safely remove VPC endpoints while handling common failure scenarios during the deletion process.",
      "description_length": 407,
      "index": 455,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.BatchGetCollection",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles batch retrieval of collection data from OpenSearch Serverless by sending a structured request and parsing the response. It works with context and AWS-specific request/response types to fetch multiple collections in a single call. A typical use case involves querying multiple collections by their identifiers to efficiently retrieve their configurations and metadata.",
      "description_length": 387,
      "index": 456,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateVpcEndpoint",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles the creation of VPC endpoints for OpenSearch Serverless by sending a request with the provided configuration and returning a result that includes either a success response or specific error types. It works with VPC endpoint request and response structures, along with various exception types for error handling. It is used when setting up network access to OpenSearch Serverless resources within a VPC environment.",
      "description_length": 434,
      "index": 457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteAccessPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "Deletes an access policy from OpenSearch Serverless, handling requests with context and returning a result that includes either the deletion response or specific error types. Works with access policy identifiers and contextual execution data. Useful for managing security configurations by removing outdated or unnecessary policies in serverless OpenSearch environments.",
      "description_length": 370,
      "index": 458,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.DeleteCollection",
      "library": "smaws-clients.opensearchserverless",
      "description": "Deletes an OpenSearch Serverless collection using a provided context and request configuration. Works with AWS JSON error types and specific exception variants like `ResourceNotFoundException` or `ValidationException`. Useful for managing OpenSearch collections programmatically, such as during cleanup or reconfiguration workflows.",
      "description_length": 332,
      "index": 459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.ListVpcEndpoints",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles listing VPC endpoints for OpenSearch Serverless by sending a request and returning a result with either the response or specific error types. It operates on context and request/response types defined in the Smaws_Client_OpenSearchServerless library. Use this module to retrieve information about existing VPC endpoints associated with an OpenSearch Serverless instance.",
      "description_length": 389,
      "index": 460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.CreateSecurityConfig",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles the creation of security configurations for OpenSearch Serverless by sending a request with provided parameters and returning a result that includes either a success response or specific error types. It operates on context and request/response data structures defined in the OpenSearch Serverless client library. It is used to set up security policies such as encryption and access control when configuring OpenSearch Serverless resources.",
      "description_length": 459,
      "index": 461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateSecurityPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module issues requests to update security policies in OpenSearch Serverless, handling responses and specific error conditions like conflicts, validation failures, and resource not found. It operates on security policy update requests and returns either a success response or an error tagged with detailed exception types. Use this module to modify existing security policies when integrating with OpenSearch Serverless in AWS environments.",
      "description_length": 444,
      "index": 462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.GetAccountSettings",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles retrieving account settings for OpenSearch Serverless by sending a request and returning a result with either the settings response or specific error types. It operates on context and request data structures specific to the OpenSearch Serverless service. A concrete use case is fetching current account-level configurations to enforce limits or audit settings in an AWS environment.",
      "description_length": 402,
      "index": 463,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless.UpdateAccessPolicy",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module handles updating access policies for OpenSearch Serverless resources by sending a request with a policy document and resource identifier. It works with structured policy data and handles responses or specific error types like conflict, internal server errors, and validation failures. Use this module to programmatically modify access controls for OpenSearch Serverless collections or indexes.",
      "description_length": 405,
      "index": 464,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_OpenSearchServerless",
      "library": "smaws-clients.opensearchserverless",
      "description": "This module provides operations for managing security policies, network configurations, and resource settings in a serverless search service, focusing on CRUD actions for access policies, lifecycle rules, VPC endpoints, and collection metadata. It works with data structures like policy documents, configuration records with optional fields, and paginated response types to handle resource enumeration and batch operations. Specific use cases include securing network access through VPC endpoint management, enforcing data retention via lifecycle policies, and organizing resources with access control rules and tags.",
      "description_length": 617,
      "index": 465,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.RollbackApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles rolling back a Kinesis Analytics V2 application to a previous version. It sends a rollback request and returns a result indicating success or a specific error such as invalid arguments, resource not found, or concurrent modification. It works with application configuration data and rollback metadata to support versioned state recovery.",
      "description_length": 357,
      "index": 466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationCloudWatchLoggingOption",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of CloudWatch logging options for a Kinesis Analytics V2 application. It works with AWS context and request/response structures specific to the Kinesis Analytics V2 service. A concrete use case is removing logging configuration from an existing streaming application to adjust monitoring settings.",
      "description_length": 330,
      "index": 467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.UpdateApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "Sends an update request to modify the configuration of a Kinesis Analytics V2 application. Works with application configuration data types and handles specific AWS service errors related to application updates. Used to adjust application settings such as input sources, output destinations, or processing logic in deployed streaming applications.",
      "description_length": 346,
      "index": 468,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.TagResource",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles tagging operations for Kinesis Analytics V2 resources, specifically allowing the addition of metadata tags to specified resources. It works with AWS context objects and structured tag request/response types defined in the Kinesis Analytics V2 protocol. A typical use case involves tagging a Kinesis Analytics application for cost tracking or resource management within an AWS environment.",
      "description_length": 408,
      "index": 469,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.CreateApplicationSnapshot",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module issues requests to create snapshots of Kinesis Analytics applications, handling responses and specific error conditions such as invalid configurations, resource limits, and missing resources. It operates on application snapshot request and response structures, along with various exception types tied to snapshot creation constraints. It is used to capture the state of a running analytics application for backup or versioning purposes.",
      "description_length": 448,
      "index": 470,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationVpcConfiguration",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles adding a VPC configuration to a Kinesis Analytics application by sending a request with the application name and VPC details. It works with AWS-specific data types such as application ARNs, VPC subnet IDs, and security group IDs. A concrete use case is configuring network isolation for a streaming application to access private resources within a VPC.",
      "description_length": 372,
      "index": 471,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationReferenceDataSource",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of reference data sources from a Kinesis Analytics V2 application. It accepts a context and a deletion request, then returns a result containing either a success response or specific error types like `ResourceNotFoundException` or `InvalidRequestException`. It is used when managing streaming applications that require removal of external data source references.",
      "description_length": 395,
      "index": 472,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationInputProcessingConfiguration",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles adding input processing configurations to a Kinesis Analytics V2 application by sending the appropriate API request. It works with application input identifiers and processing configuration data structures, such as input IDs and Lambda processor settings. A concrete use case is configuring real-time data transformation using a Lambda function on a streaming application input.",
      "description_length": 398,
      "index": 473,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.UntagResource",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the untagging of resources in Kinesis Analytics V2 by sending a request to remove specified tags from a resource. It works with the `untag_resource_request` and `untag_resource_response` data types, along with various error types for handling failure scenarios. A concrete use case is removing cost allocation tags from a Kinesis Analytics application when they are no longer needed.",
      "description_length": 403,
      "index": 474,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DescribeApplicationSnapshot",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the `DescribeApplicationSnapshot` API operation for Kinesis Analytics V2, accepting a context and a request to retrieve snapshot details for a specific application. It works with AWS Kinesis Analytics V2 application identifiers and snapshot metadata, returning either a response with snapshot information or an error indicating issues like invalid arguments, missing resources, or unsupported operations. A concrete use case is retrieving the status and details of a previously created application snapshot to monitor restoration progress or verify snapshot consistency.",
      "description_length": 590,
      "index": 475,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DescribeApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the `DescribeApplication` API request for Kinesis Analytics V2, returning detailed information about a specific application. It works with application names and ARNs, and is used to retrieve runtime configuration, status, and input/output details of streaming applications. A concrete use case is inspecting the current state and settings of a deployed analytics application for monitoring or debugging purposes.",
      "description_length": 432,
      "index": 476,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListTagsForResource",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles listing tags for a Kinesis Analytics V2 resource, providing a request function that takes a context and a resource ARN. It returns a result containing either the list of tags or specific error types like `ResourceNotFoundException` or `InvalidArgumentException`. Use it when retrieving metadata tags associated with a streaming application for management or auditing purposes.",
      "description_length": 396,
      "index": 477,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListApplicationVersions",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles listing versions of a Kinesis Analytics V2 application by sending a request and returning a result with either the response or specific error types. It works with application version identifiers and related metadata structures. Use this module to retrieve historical versions of streaming applications for auditing or rollback purposes.",
      "description_length": 356,
      "index": 478,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.StartApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles starting a Kinesis Analytics V2 application by sending a request with the application name and runtime configuration. It works with AWS context, request, and response structures, along with specific error types like invalid configuration or resource not found. It is used to programmatically initialize streaming applications in AWS Kinesis Analytics.",
      "description_length": 371,
      "index": 479,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.UpdateApplicationMaintenanceConfiguration",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles updating the maintenance configuration of a Kinesis Analytics V2 application. It sends a request to adjust settings like auto-scaling or scheduled maintenance windows, working with application identifiers and maintenance policies. It is used when modifying operational parameters for stream processing applications in AWS.",
      "description_length": 342,
      "index": 480,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListApplications",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles listing applications in Kinesis Analytics V2 by sending a request and returning a result with either the list of applications or an error. It works with context and request/response types specific to Kinesis Analytics V2. A concrete use case is retrieving all streaming applications to monitor or manage their configurations programmatically.",
      "description_length": 362,
      "index": 481,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationInput",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles adding input streams to an application in Kinesis Analytics V2 by sending a request and returning a result with either a success response or specific error types. It works with application input request and response structures, along with various exception types for error handling. It is used when integrating data sources like Kinesis streams into real-time analytics applications.",
      "description_length": 403,
      "index": 482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of Kinesis Analytics V2 applications by sending a delete request and returning a result with either a success response or specific error types. It works with application identifiers and contextual configuration data to perform the operation. Concrete use cases include removing outdated or unused streaming applications from an AWS environment.",
      "description_length": 377,
      "index": 483,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.CreateApplicationPresignedUrl",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module issues pre-signed URLs for creating Kinesis Analytics V2 applications, handling authentication and request signing. It works with AWS context and application configuration data to generate URLs valid for a limited time. Use this to securely delegate application creation to untrusted environments without sharing credentials.",
      "description_length": 337,
      "index": 484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.ListApplicationSnapshots",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles listing application snapshots for Kinesis Analytics V2 by sending a request and returning a result with either a response or specific error types. It works with application snapshot request and response data structures, including handling invalid argument and unsupported operation exceptions. A concrete use case is retrieving existing snapshots of a streaming application for backup or analysis purposes.",
      "description_length": 426,
      "index": 485,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationCloudWatchLoggingOption",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles adding CloudWatch logging options to a Kinesis Analytics V2 application. It works with AWS context and request/response structures specific to Kinesis Analytics V2. A concrete use case is configuring real-time log monitoring for an analytics application during deployment or updates.",
      "description_length": 303,
      "index": 486,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationVpcConfiguration",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of VPC configurations for Kinesis Analytics applications. It provides a `request` function that sends a deletion request and returns a result with either a success response or specific error types like `ResourceNotFoundException` or `InvalidApplicationConfigurationException`. It works directly with Kinesis Analytics VPC configuration requests and responses, targeting use cases such as removing network isolation settings from streaming applications.",
      "description_length": 485,
      "index": 487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DiscoverInputSchema",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module issues a request to analyze and infer the schema of streaming data from a Kinesis source, returning structured metadata or specific error conditions. It works with input configurations and streaming data sources, targeting scenarios like real-time data validation and schema discovery for analytics pipelines. Use it when setting up or debugging data streams for applications consuming JSON, CSV, or other structured formats.",
      "description_length": 437,
      "index": 488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationOutput",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles adding an output configuration to a Kinesis Analytics application by sending a request with the application name and output details. It works with AWS context, application output requests, and response structures specific to Kinesis Analytics V2. A concrete use case is configuring real-time data streaming outputs to destinations like S3 or Lambda during application setup.",
      "description_length": 394,
      "index": 489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.AddApplicationReferenceDataSource",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles adding a reference data source to an application by sending a request with the application's context and configuration. It works with application reference data source request and response types, along with various error types for handling failure scenarios. It is used when integrating reference data streams into analytics applications for real-time processing.",
      "description_length": 383,
      "index": 490,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationInputProcessingConfiguration",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of input processing configurations for a Kinesis Analytics V2 application. It works with AWS context and request/response structures specific to Kinesis Analytics V2. A concrete use case is removing an existing input processing configuration when updating or decommissioning a streaming application.",
      "description_length": 332,
      "index": 491,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DescribeApplicationVersion",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the `DescribeApplicationVersion` API request for Kinesis Analytics V2, retrieving detailed information about a specific application version. It works with the `describe_application_version_request` and `describe_application_version_response` data types, along with various error types such as `InvalidArgumentException` and `ResourceNotFoundException`. A concrete use case is fetching the configuration and status of a Kinesis Analytics application version to validate deployment or inspect runtime settings.",
      "description_length": 528,
      "index": 492,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationSnapshot",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of application snapshots in Kinesis Analytics V2 by sending a delete request and returning a result with either a success response or specific error types. It works with context and request/response types defined in the KinesisAnalyticsV2 client library, including structured error cases like `ResourceNotFoundException` or `InvalidRequestException`. It is used when managing streaming applications by removing specific application snapshots for cleanup or reconfiguration.",
      "description_length": 506,
      "index": 493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.StopApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles stopping a Kinesis Analytics V2 application by sending a stop request with the provided configuration. It works with application context and request/response structures specific to stopping applications, including handling errors like resource not found or invalid requests. A concrete use case is programmatically halting a running stream processing application during maintenance or deployment updates.",
      "description_length": 424,
      "index": 494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.DeleteApplicationOutput",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the deletion of application outputs in Kinesis Analytics V2 by sending a deletion request and returning a result with either a success response or specific error types. It works with application output configurations and interacts with Kinesis Analytics V2 resources. A concrete use case is removing an output destination from a streaming application to reconfigure or decommission it.",
      "description_length": 405,
      "index": 495,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2.CreateApplication",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module handles the creation of Kinesis Analytics applications by sending a structured request and returning a result with either a response or specific error types. It works with AWS context, application request/response types, and various exception types tied to application creation constraints. Use this when provisioning new streaming applications with defined runtime, inputs, and output configurations in AWS Kinesis Analytics V2.",
      "description_length": 441,
      "index": 496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_KinesisAnalyticsV2",
      "library": "smaws-clients.kinesis-analytics-v2",
      "description": "This module supports lifecycle management, configuration updates, and resource tagging for streaming analytics applications, focusing on real-time data processing workflows. It operates on application configurations, input/output streams (Kinesis Streams/Firehose, Lambda), schema definitions, reference data sources (S3), and Flink-specific settings like checkpointing and parallelism. Specific use cases include deploying updated processing logic, managing monitoring and logging integrations, rolling back to stable versions, and orchestrating data pipeline interactions with AWS services such as S3 and Lambda.",
      "description_length": 614,
      "index": 497,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartQuery",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues queries to CloudTrail for log data analysis, handling errors related to query validation, permissions, and resource configuration. It works with structured request and response types that map directly to CloudTrail's API, including query parameters and event data store ARNs. Concrete use cases include initiating forensic analysis of AWS account activity and monitoring compliance-related events in real-time.",
      "description_length": 429,
      "index": 498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.UpdateChannel",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the core logic for updating CloudTrail channels by sending requests to modify channel configurations, such as changing the event data store or adjusting channel status. It works with structured request and response types specific to CloudTrail, including detailed error types for common failure scenarios like invalid ARNs or missing resources. Concrete use cases include programmatically updating a CloudTrail channel's target event data store or reconfiguring channel settings in response to infrastructure changes.",
      "description_length": 537,
      "index": 499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListPublicKeys",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the retrieval of public keys from AWS CloudTrail by sending a request and returning a result with either the public keys response or specific CloudTrail errors. It operates on AWS context and request/response data types defined in the CloudTrail protocol. Use this module to fetch public keys for verifying CloudTrail log file signatures or managing key rotation in a CloudTrail logging setup.",
      "description_length": 413,
      "index": 500,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetEventSelectors",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles retrieving event selectors for a CloudTrail trail, interacting with AWS CloudTrail's API to fetch configuration details. It works with CloudTrail-specific request and response structures, including error types like `TrailNotFoundException` or `InvalidTrailNameException`. Use this module to audit or manage event logging configurations for specific trails in AWS environments.",
      "description_length": 396,
      "index": 501,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListImportFailures",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles requests to list CloudTrail import failures, providing structured error handling for common AWS API exceptions. It processes input parameters and returns a result containing either a response with failure details or specific error types like invalid token or parameter exceptions. Use this when retrieving and handling CloudTrail import failure data in an AWS environment.",
      "description_length": 392,
      "index": 502,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.EnableFederation",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles federating access to CloudTrail event data stores by enabling identity federation for cross-account queries. It works with AWS context objects and structured request/response types that define federation parameters and error conditions. Use this module to configure and activate federation for CloudTrail event data stores across AWS accounts.",
      "description_length": 363,
      "index": 503,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteEventDataStore",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the deletion of an event data store in AWS CloudTrail, providing a function to send a deletion request and handle various error conditions specific to the operation. It works with AWS CloudTrail's event data store identifiers and context information to perform the request. Concrete use cases include safely removing unused event data stores while handling conflicts, permissions issues, and dependencies.",
      "description_length": 425,
      "index": 504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.PutInsightSelectors",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the configuration of insight selectors for AWS CloudTrail by sending requests to set which event types are logged. It works with structured data types representing CloudTrail configurations, encryption policies, and S3 bucket settings. A concrete use case is enabling specific management events or data events in a CloudTrail trail to optimize logging and analysis.",
      "description_length": 385,
      "index": 505,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListTags",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the `ListTags` operation for AWS CloudTrail, sending requests to retrieve tags associated with a specified resource. It works with ARNs for CloudTrail trails, channels, or event data stores, returning a list of tags or detailed error information if the resource is invalid or inaccessible. Concrete use cases include auditing resource metadata, managing tag-based policies, or integrating with billing and governance tools.",
      "description_length": 443,
      "index": 506,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListChannels",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the `ListChannels` operation for CloudTrail, sending requests to list event data stores and handling specific AWS errors like invalid tokens or unsupported operations. It works with CloudTrail's list channels request and response structures, including pagination tokens and event data store metadata. Use this module to retrieve and manage event data store listings in CloudTrail, especially when handling paginated results or error conditions.",
      "description_length": 464,
      "index": 507,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DescribeQuery",
      "library": "smaws-clients.cloudtrail",
      "description": "This module executes a request to describe a CloudTrail query, handling responses and specific AWS CloudTrail errors. It works with CloudTrail's query request and response structures, including query IDs and event data store ARNs. Use it to retrieve details about a specific CloudTrail query execution, such as status, results, or error information.",
      "description_length": 349,
      "index": 508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListQueries",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues requests to list CloudTrail queries, handling responses and specific AWS error conditions. It works with CloudTrail's query listing requests and responses, including error types like invalid parameters or missing event data stores. Use it to retrieve and manage query results from CloudTrail event data stores, particularly in scenarios requiring error handling for invalid or unsupported inputs.",
      "description_length": 415,
      "index": 509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteResourcePolicy",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the deletion of resource policies in AWS CloudTrail by sending a request to remove a specified policy from a resource. It works with AWS context and structured request/response types that include error handling for specific CloudTrail exceptions. Use this module to programmatically delete resource policies for CloudTrail event selectors or advanced event selectors.",
      "description_length": 387,
      "index": 510,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CreateTrail",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the creation of AWS CloudTrail trails by sending a request with specified configuration parameters and returning a result indicating success or a detailed error. It works with AWS context, trail request, and response structures, along with a wide range of exception types for precise error handling. It is used when setting up new CloudTrail logging trails in AWS environments, particularly for auditing and compliance workflows.",
      "description_length": 449,
      "index": 511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListTrails",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles listing AWS CloudTrail trails by sending a request and returning a result with either the trail data or specific error types. It works with CloudTrail trail request and response structures, including error cases like operation not permitted or unsupported operations. Use this module to retrieve trail information directly from AWS CloudTrail within a given context.",
      "description_length": 386,
      "index": 512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListInsightsMetricData",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the `ListInsightsMetricData` API operation for CloudTrail, sending requests to retrieve metric data related to insights and returning parsed responses or specific AWS errors. It works with structured request and response types defined in `Smaws_Client_CloudTrail`, including error types like `InvalidParameterException` and `UnsupportedOperationException`. A concrete use case is querying CloudTrail to analyze trends in management events or insight types over time.",
      "description_length": 486,
      "index": 513,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartImport",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the initiation of CloudTrail imports by sending a request to start an import operation. It works with CloudTrail-specific types such as `start_import_request`, `start_import_response`, and a variety of error types representing failure conditions like invalid parameters or missing resources. It is used when importing historical logs into a CloudTrail event data store, allowing for validation and error handling specific to the import process.",
      "description_length": 464,
      "index": 514,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListEventDataStores",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles listing event data stores in AWS CloudTrail by sending a request and returning a result with either the response or specific error types. It works with context, request, and response structures defined in the CloudTrail protocol, including handling errors like invalid parameters or missing permissions. It is used to retrieve event data store information from CloudTrail, particularly in multi-account environments where management account permissions are required.",
      "description_length": 486,
      "index": 515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CreateChannel",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues requests to create CloudTrail channels, handling responses and specific AWS error conditions. It works with context and request/response types tailored for CloudTrail channel creation. Use it to programmatically set up new channels while handling errors like duplicate names or resource limits.",
      "description_length": 313,
      "index": 516,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.PutResourcePolicy",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the `PutResourcePolicy` operation for CloudTrail, sending a request to associate a resource policy with a specified ARN and returning a result with either a success response or specific CloudTrail error types. It works with CloudTrail resource policy requests and responses, including detailed error handling for policy validation, permissions, and resource type compatibility. Concrete use cases include configuring cross-account access policies for CloudTrail event data stores or trails.",
      "description_length": 510,
      "index": 517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartEventDataStoreIngestion",
      "library": "smaws-clients.cloudtrail",
      "description": "This module initiates event data store ingestion in AWS CloudTrail by sending a start ingestion request. It handles responses and specific exceptions related to event data store configuration, access permissions, and status validation. Use this module to programmatically control ingestion for a specific event data store by its ARN within an AWS organization setup.",
      "description_length": 366,
      "index": 518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CancelQuery",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues requests to cancel an ongoing CloudTrail query, interacting directly with the CloudTrail service. It handles cancellation by sending a query ID and event data store ARN, returning a result indicating success or specific error conditions. Use this when terminating long-running queries that are no longer needed or have exceeded their intended execution time.",
      "description_length": 377,
      "index": 519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.AddTags",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles adding tags to AWS CloudTrail resources by sending a request with a context and an add-tags request object. It works with AWS CloudTrail ARNs and tag structures, supporting operations on trails, channels, and event data stores. Use this module to associate metadata tags with specific CloudTrail resources for organizational or billing purposes.",
      "description_length": 365,
      "index": 520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.LookupEvents",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles querying CloudTrail event logs by sending a lookup request with specified attributes and time ranges, returning filtered events or detailed error codes. It works with structured request and response types that include event categories, time intervals, and pagination tokens. Concrete use cases include auditing user activity, monitoring API calls, and investigating security incidents by retrieving specific event records from AWS CloudTrail.",
      "description_length": 462,
      "index": 521,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.UpdateEventDataStore",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles updating event data store configurations in AWS CloudTrail, providing a `request` function that sends update operations with detailed error handling for specific CloudTrail exceptions. It works with structured request and response types defined in the CloudTrail protocol, including event data store identifiers and configuration parameters. Concrete use cases include modifying retention periods, enabling or disabling event logging, and updating encryption settings for event data stores.",
      "description_length": 510,
      "index": 522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.UpdateTrail",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues requests to update AWS CloudTrail configurations, handling responses and errors specific to trail modification operations. It works with structured request and response types defined in the CloudTrail protocol, including error variants that reflect service-specific failure conditions. Concrete use cases include enabling or modifying logging settings, updating S3 bucket or CloudWatch Logs integrations, and handling access or configuration errors during trail updates.",
      "description_length": 489,
      "index": 523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.RestoreEventDataStore",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the restoration of an event data store in AWS CloudTrail by sending a request to re-enable a previously disabled data store. It works with structured request and response types specific to the CloudTrail service, including detailed error types for common failure scenarios. Use this module to programmatically restore event data store functionality when reactivating CloudTrail logging in an AWS environment.",
      "description_length": 428,
      "index": 524,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetEventDataStore",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles retrieving event data store information by sending a request with a context and a specific event data store identifier. It works with AWS CloudTrail event data store requests and responses, including detailed error types for failure handling. Concrete use cases include querying the status or configuration of a specific event data store in AWS CloudTrail.",
      "description_length": 376,
      "index": 525,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteChannel",
      "library": "smaws-clients.cloudtrail",
      "description": "Deletes a CloudTrail channel using the provided context and request parameters. It handles responses and specific errors such as invalid ARN, channel not found, operation not permitted, and unsupported operation. This module is used when removing a CloudTrail channel in AWS environments.",
      "description_length": 288,
      "index": 526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StopLogging",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues requests to stop CloudTrail logging for a specified trail, handling errors related to invalid ARNs, conflicts, insufficient permissions, and trail configuration. It operates on `stop_logging_request` and `stop_logging_response` types, interacting with CloudTrail trails and AWS context. Use it to disable logging on a specific trail when auditing or decommissioning resources.",
      "description_length": 395,
      "index": 527,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StopImport",
      "library": "smaws-clients.cloudtrail",
      "description": "This module provides a `request` function to stop an import operation in AWS CloudTrail, handling specific error cases like invalid parameters or missing imports. It works with AWS context and CloudTrail-specific request/response types, including structured error types for precise error handling. Use it to programmatically halt ongoing import tasks and manage failure scenarios in CloudTrail integrations.",
      "description_length": 407,
      "index": 528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.PutEventSelectors",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the configuration of event selectors for AWS CloudTrail trails by sending requests to set up or modify event logging rules. It works with structured data types representing CloudTrail configurations, including event selectors, trail ARNs, and region information. Concrete use cases include enabling logging for specific AWS services, filtering events by type or resource, and managing audit trails for compliance in multi-account environments.",
      "description_length": 463,
      "index": 529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetTrail",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles retrieving CloudTrail configuration details by making API requests. It works with AWS context and CloudTrail-specific request/response types, including error types for invalid ARNs, trail names, and access permissions. It is used to fetch trail metadata and verify trail existence in AWS accounts.",
      "description_length": 317,
      "index": 530,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetImport",
      "library": "smaws-clients.cloudtrail",
      "description": "Handles retrieval of CloudTrail import tasks by sending a structured request and returning detailed status information. Works with CloudTrail-specific request and response types, including error variants for common failure scenarios. Useful for monitoring the progress or outcome of a CloudTrail import operation, such as checking if an import has completed or identifying why it failed.",
      "description_length": 387,
      "index": 531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.RemoveTags",
      "library": "smaws-clients.cloudtrail",
      "description": "Removes tags from AWS CloudTrail resources using a context and a structured request. It handles errors specific to resource and tag validation, returning a result with either a response or a typed exception. Useful for managing tag-based resource metadata in CloudTrail trails, channels, or event data stores.",
      "description_length": 309,
      "index": 532,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetChannel",
      "library": "smaws-clients.cloudtrail",
      "description": "Retrieves a CloudTrail channel by ARN, returning configuration details or an error if the channel is invalid, not found, or inaccessible. Works with AWS context, request/response structures, and specific CloudTrail exceptions. Useful for validating channel existence and retrieving metadata like source and destination settings.",
      "description_length": 328,
      "index": 533,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetInsightSelectors",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles retrieving insight selectors for a CloudTrail trail, providing a `request` function that sends a query to fetch insight selector data. It works with CloudTrail trail ARNs and processes responses or specific AWS error types like `TrailNotFoundException` or `InsightNotEnabledException`. A concrete use case is checking which insight selectors are configured for a trail to monitor event patterns.",
      "description_length": 415,
      "index": 534,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StartLogging",
      "library": "smaws-clients.cloudtrail",
      "description": "This module provides a function to start logging for a CloudTrail trail, taking a context and a start logging request. It returns a result with either a success response or specific CloudTrail error types. It works directly with CloudTrail trails by enabling logging on an existing trail identified by name or ARN.",
      "description_length": 314,
      "index": 535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.StopEventDataStoreIngestion",
      "library": "smaws-clients.cloudtrail",
      "description": "This module provides a function to stop ingestion for a CloudTrail event data store, handling validation and error responses. It works with AWS context and CloudTrail-specific request/response types, including detailed error cases like invalid ARN or unsupported operations. Use it to programmatically halt event data ingestion while managing specific AWS service exceptions.",
      "description_length": 375,
      "index": 536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.CreateEventDataStore",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the creation of an Event Data Store in AWS CloudTrail, sending a request and returning a result with either a response or specific error types. It works with context, request, and response types defined in the CloudTrail module, along with various exception types for error handling. Use this module to set up event data stores programmatically, handling conflicts, permissions, and validation errors directly.",
      "description_length": 430,
      "index": 537,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetQueryResults",
      "library": "smaws-clients.cloudtrail",
      "description": "This module executes a request to retrieve results from a CloudTrail query, handling errors related to invalid parameters, encryption policies, and event data store states. It operates on AWS CloudTrail query result requests and responses, interacting with event data stores via their ARNs. Use this module to fetch and process CloudTrail query outputs, such as retrieving logs filtered by specific criteria or time ranges.",
      "description_length": 423,
      "index": 538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetTrailStatus",
      "library": "smaws-clients.cloudtrail",
      "description": "This module issues requests to retrieve the status of a CloudTrail trail, handling responses and specific AWS error conditions. It works with CloudTrail trail status request and response structures, including error types like invalid ARN, trail not found, and operation not permitted. Use this to check the operational status and metadata of a trail, such as whether it's logging or paused.",
      "description_length": 390,
      "index": 539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeleteTrail",
      "library": "smaws-clients.cloudtrail",
      "description": "Deletes a specified CloudTrail trail by name or ARN, handling errors such as invalid names, conflicts, or missing permissions. Works with CloudTrail trail identifiers and returns a result indicating success or specific failure reasons. Useful for removing unused or misconfigured trails in AWS environments.",
      "description_length": 307,
      "index": 540,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.GetResourcePolicy",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles retrieving resource policies for CloudTrail resources by sending a request and returning a result with either the policy response or specific error types. It works with AWS context, request, and response structures, along with various CloudTrail-specific exceptions. It is used to fetch and validate resource policies tied to CloudTrail trails or event data stores.",
      "description_length": 385,
      "index": 541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DescribeTrails",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the `DescribeTrails` API operation for CloudTrail, accepting a context and a request to retrieve trail details. It works with CloudTrail trail ARNs and names, returning configuration data or specific error types like invalid ARN, trail name, or missing SLR. Use it to programmatically inspect CloudTrail configurations in AWS accounts with precise error handling.",
      "description_length": 383,
      "index": 542,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DeregisterOrganizationDelegatedAdmin",
      "library": "smaws-clients.cloudtrail",
      "description": "This module provides a function to deregister a delegated administrator account from AWS CloudTrail in an organization. It handles the request and response cycle, including specific error cases such as account not found, invalid parameters, or missing organization features. It works with CloudTrail's deregistration request and response structures, along with context data for AWS interactions.",
      "description_length": 395,
      "index": 543,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.RegisterOrganizationDelegatedAdmin",
      "library": "smaws-clients.cloudtrail",
      "description": "Registers a delegated administrator account for CloudTrail in an AWS organization. It takes a context and a request with parameters like account ID and service principal, returning a result with either a response or specific CloudTrail and AWS service errors. This function is used when configuring cross-account access for CloudTrail in multi-account environments.",
      "description_length": 365,
      "index": 544,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.ListImports",
      "library": "smaws-clients.cloudtrail",
      "description": "This module handles the `ListImports` operation for CloudTrail, sending requests to retrieve imports data and returning a result with either the response or specific CloudTrail error types. It works with CloudTrail's import-related request and response structures, including handling pagination and event data store ARN validation. Use this module to query CloudTrail imports, especially when managing event data from S3 or handling import failures.",
      "description_length": 449,
      "index": 545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail.DisableFederation",
      "library": "smaws-clients.cloudtrail",
      "description": "This module provides a `request` function to disable federation for a CloudTrail event data store, taking a context and a disable federation request. It returns a result indicating success or a specific CloudTrail error type. The function is used to manage event data store configurations in AWS CloudTrail by disabling federated access.",
      "description_length": 337,
      "index": 546,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CloudTrail",
      "library": "smaws-clients.cloudtrail",
      "description": "This module provides configuration, monitoring, and querying operations for AWS CloudTrail resources, focusing on trails, event data stores, channels, and associated policies. It works with structured types like event selectors, resource policies, and import configurations to enable cross-account logging, encryption management, and compliance auditing. Specific use cases include forensic analysis of AWS activity logs, real-time ingestion control for event data stores, and automated compliance validation through query execution and event filtering.",
      "description_length": 553,
      "index": 547,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateConnection",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the creation of connections by sending a request and returning a result with either a response or specific error types. It operates on context and request data structures to manage connection setup in client applications. Use this module when initiating connections that require handling of service quotas, invalid requests, or internal service errors.",
      "description_length": 372,
      "index": 548,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.PauseService",
      "library": "smaws-clients.apprunner",
      "description": "This module handles pausing a service in AppRunner by sending a request with the service name and retrieving the operation status. It works with context and response types specific to AppRunner's pause service API. A concrete use case is stopping a running service instance during maintenance or deployment updates.",
      "description_length": 315,
      "index": 549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListVpcIngressConnections",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the `list_vpc_ingress_connections` operation, sending a request to retrieve VPC ingress connections and returning a result with either the response or specific error types. It works with AWS context and structured request/response types defined in the AppRunner service. A concrete use case is querying configured VPC ingress connections for an AppRunner service to manage network access.",
      "description_length": 408,
      "index": 550,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListObservabilityConfigurations",
      "library": "smaws-clients.apprunner",
      "description": "This module handles listing observability configurations for AWS App Runner services. It provides a `request` function that sends a list observability configurations request and returns a result with either the response or specific AWS error types. It works with App Runner context, request, and response structures, handling errors like invalid requests or internal service issues.",
      "description_length": 382,
      "index": 551,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListServicesForAutoScalingConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the request to list services associated with a specific auto-scaling configuration in AWS App Runner. It takes a context and a request object, then returns a result containing either the response data or an error indicating issues like invalid input, missing resources, or internal service failures. It is used to retrieve service details for managing or monitoring auto-scaling configurations within an App Runner environment.",
      "description_length": 447,
      "index": 552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UpdateDefaultAutoScalingConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "This module handles updating the default auto-scaling configuration for an App Runner service by sending a request with the provided context and configuration parameters. It works with the `Context.t` type and App Runner-specific request and response structures, including error types like `InternalServiceErrorException` and `InvalidRequestException`. A concrete use case is adjusting auto-scaling settings programmatically in response to changing workload demands or deployment events.",
      "description_length": 487,
      "index": 553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.AssociateCustomDomain",
      "library": "smaws-clients.apprunner",
      "description": "Handles associating a custom domain with an App Runner service by sending a request and returning a result with either a response or specific error types. Works with context and request/response types defined in the App Runner module. Useful for deploying services with custom domains while handling errors like invalid requests or internal service issues.",
      "description_length": 356,
      "index": 554,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeCustomDomains",
      "library": "smaws-clients.apprunner",
      "description": "Handles requests to describe custom domains associated with an AppRunner service. It sends a query to AWS AppRunner using a context and request configuration, returning either a response with domain details or an error indicating issues like invalid input or missing resources. This module is used to retrieve information about custom domains configured for a specific AppRunner service.",
      "description_length": 387,
      "index": 555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeService",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the `request` operation to describe a service in the AppRunner system, interacting with AWS JSON protocols. It processes `describe_service_request` inputs and returns either a `describe_service_response` or specific error types like `ResourceNotFoundException`. It is used to retrieve detailed information about a deployed AppRunner service, such as its configuration and current state.",
      "description_length": 406,
      "index": 556,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteService",
      "library": "smaws-clients.apprunner",
      "description": "Deletes a service in the AppRunner system by sending a deletion request. It takes a context and a delete service request, returning a result with either a success response or specific error types like resource not found or invalid state. This function is used when managing AppRunner services, such as during service cleanup or reconfiguration.",
      "description_length": 344,
      "index": 557,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListConnections",
      "library": "smaws-clients.apprunner",
      "description": "This module handles listing active connections by sending a dedicated request to the AppRunner service. It works with context and connection request/response data types to retrieve connection details. A concrete use case includes monitoring or managing connections established through AppRunner for operational visibility.",
      "description_length": 322,
      "index": 558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListAutoScalingConfigurations",
      "library": "smaws-clients.apprunner",
      "description": "Handles requests to list auto-scaling configurations in an AWS App Runner service. It works with context and request/response types specific to AWS App Runner, returning either a list of configurations or an error. Useful for retrieving scaling settings to manage application resource allocation based on traffic.",
      "description_length": 313,
      "index": 559,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteAutoScalingConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "Handles deletion of an App Runner auto scaling configuration by sending a request with the provided context and configuration details. It works with auto scaling configuration identifiers and returns a result indicating success or specific AWS error conditions. Used to remove auto scaling settings for an App Runner service when adjusting resource management policies.",
      "description_length": 369,
      "index": 560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.TagResource",
      "library": "smaws-clients.apprunner",
      "description": "Handles tagging operations for AWS App Runner resources by sending requests to associate or update tags. Works with AWS context, tag resource requests, and returns responses or specific AWS service errors. Used to manage metadata for App Runner services, such as adding or modifying tags for cost tracking or resource organization.",
      "description_length": 331,
      "index": 561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteVpcConnector",
      "library": "smaws-clients.apprunner",
      "description": "Deletes an App Runner VPC connector by name, handling errors such as invalid requests, resource not found, or internal service issues. It operates on a context and a delete VPC connector request, producing a result with either a success response or a specific error type. This function is used when managing App Runner infrastructure to cleanly remove unused VPC connectors.",
      "description_length": 374,
      "index": 562,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateAutoScalingConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "This module issues requests to create an auto-scaling configuration for a service, handling responses and specific error cases such as invalid input or service limits. It operates on auto-scaling configuration request and response data types, along with error types for failure scenarios. A concrete use case is defining scaling policies when setting up a scalable AppRunner service.",
      "description_length": 383,
      "index": 563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateObservabilityConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the creation of observability configurations by sending a request to configure logging and tracing for an AppRunner service. It works with context data and structured request/response types that define observability settings. Use this when setting up or updating observability for an AppRunner application to integrate with AWS logging and X-Ray tracing.",
      "description_length": 374,
      "index": 564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DisassociateCustomDomain",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the disassociation of a custom domain from an application, accepting a context and a disassociate custom domain request. It returns a result containing either a disassociate custom domain response or specific error types such as `ResourceNotFoundException` or `InvalidRequestException`. It is used when managing custom domain configurations for applications, particularly during cleanup or reconfiguration workflows.",
      "description_length": 436,
      "index": 565,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.StartDeployment",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the initiation of deployment requests within a cloud application environment. It processes a context and deployment request, returning a result that includes either a deployment response or specific error types such as invalid request, resource not found, or internal service errors. It is used to programmatically trigger and manage deployments in a service-oriented architecture.",
      "description_length": 401,
      "index": 566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteConnection",
      "library": "smaws-clients.apprunner",
      "description": "Deletes an App Runner connection by sending a deletion request with the specified connection name. Handles responses and errors from the App Runner service, including resource not found and invalid request exceptions. Useful for managing App Runner connections programmatically in AWS deployments.",
      "description_length": 297,
      "index": 567,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeVpcConnector",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the `DescribeVpcConnector` API operation for AWS App Runner, accepting a context and a request to retrieve details about a specific VPC connector. It returns either a response containing the connector's information or an error indicating failure, such as invalid input or missing resources. Use this to inspect the configuration and status of an existing VPC connector within an App Runner service.",
      "description_length": 418,
      "index": 568,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateVpcConnector",
      "library": "smaws-clients.apprunner",
      "description": "This module issues requests to create VPC connectors, handling responses and specific AWS service errors like quota limits or invalid inputs. It operates on context and request/response data structures tailored for VPC connector creation. A concrete use case is setting up network connectivity for serverless applications within a defined VPC.",
      "description_length": 343,
      "index": 569,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListServices",
      "library": "smaws-clients.apprunner",
      "description": "Handles listing services in the AppRunner API by sending a request and returning a result with either the list of services or specific error types. Works with context and response/request types defined in the AppRunner module, including service metadata and error details. Used to retrieve and manage deployed AppRunner services programmatically.",
      "description_length": 346,
      "index": 570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateService",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the creation of a service by processing a structured request and returning a result with either a successful response or specific error types. It operates on data types including the application context, service creation requests, and responses with error handling for invalid inputs, service quotas, and internal errors. It is used to initiate service creation in a system with strict validation and error reporting requirements.",
      "description_length": 450,
      "index": 571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.CreateVpcIngressConnection",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the creation of a VPC ingress connection by sending a request and returning a result with either a response or specific error types. It works with context and request/response types defined in the Smaws_Client_AppRunner and Smaws_Lib modules. Concrete use cases include setting up secure network access between an App Runner service and a VPC.",
      "description_length": 363,
      "index": 572,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteObservabilityConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "Deletes an observability configuration for an App Runner service. It takes a context and a delete request, returning a result that either confirms deletion or surfaces specific errors like invalid requests or missing resources. This module directly interacts with App Runner's observability settings, enabling cleanup or reconfiguration in service management workflows.",
      "description_length": 369,
      "index": 573,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeAutoScalingConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the `DescribeAutoScalingConfiguration` API request, retrieving details of an App Runner auto-scaling configuration using its ARN. It processes the request within a given context and returns either the configuration response or specific error types like `ResourceNotFoundException`. Use this to inspect current auto-scaling settings for App Runner services during deployment or monitoring workflows.",
      "description_length": 418,
      "index": 574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeVpcIngressConnection",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the `DescribeVpcIngressConnection` API operation, which retrieves details about a specific VPC ingress connection. It works with AWS context and request/response structures specific to AppRunner VPC ingress. Use this to inspect configuration and status of an existing VPC ingress connection by its identifier.",
      "description_length": 329,
      "index": 575,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListOperations",
      "library": "smaws-clients.apprunner",
      "description": "Handles listing operations for AppRunner resources by sending a request and returning a result with either a response or specific error types. Works with context, list operations requests, and responses, including error variants like internal service errors or invalid requests. Used to retrieve operation records for a service or resource in AppRunner, such as tracking deployment or configuration changes.",
      "description_length": 407,
      "index": 576,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UpdateVpcIngressConnection",
      "library": "smaws-clients.apprunner",
      "description": "Handles updating a VPC ingress connection in AWS App Runner by sending a request with the provided context and configuration. It works with VPC ingress connection identifiers and network settings, returning the updated connection details or specific AWS service errors. Useful for modifying network access rules for App Runner services connected to a VPC.",
      "description_length": 355,
      "index": 577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UpdateService",
      "library": "smaws-clients.apprunner",
      "description": "Handles update service requests within the AppRunner client by sending a request to modify service configurations. It works with structured data types representing service updates, including error responses for invalid requests, resource states, and internal issues. This function is used when applying configuration changes to deployed services, such as updating source repositories or environment variables.",
      "description_length": 409,
      "index": 578,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.UntagResource",
      "library": "smaws-clients.apprunner",
      "description": "Handles the untagging of resources by sending a request to remove specified tags from a resource identified in the context. It processes the response or returns an error if the operation fails due to invalid input, resource state, or missing resource. This module is used when managing tag-based metadata for AWS App Runner resources, such as services or applications, during cleanup or reorganization workflows.",
      "description_length": 412,
      "index": 579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListTagsForResource",
      "library": "smaws-clients.apprunner",
      "description": "This module handles making a request to list tags for a specified resource, returning either a response with the tags or an error indicating issues like invalid requests, resource not found, or internal service errors. It operates on AWS context and structured request/response types specific to the AppRunner service. A concrete use case is retrieving metadata tags for an AppRunner service to manage resource organization and tracking.",
      "description_length": 437,
      "index": 580,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DescribeObservabilityConfiguration",
      "library": "smaws-clients.apprunner",
      "description": "This module handles the request to retrieve observability configuration details for an AppRunner service. It sends a request using a provided context and returns either the configuration response or specific AWS error types such as `ResourceNotFoundException` or `InvalidRequestException`. It is used to fetch observability settings like logging and tracing for a running AppRunner service instance.",
      "description_length": 399,
      "index": 581,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.ResumeService",
      "library": "smaws-clients.apprunner",
      "description": "Handles resuming a paused service in AWS App Runner by sending a resume request. It works with context and resume service request types, returning a result that includes either a resume service response or specific error types. This module is used to programmatically restart a stopped App Runner service during application deployment workflows.",
      "description_length": 345,
      "index": 582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner.DeleteVpcIngressConnection",
      "library": "smaws-clients.apprunner",
      "description": "Deletes a VPC ingress connection for an App Runner service using a provided context and request configuration. Handles errors related to invalid requests, resource states, and missing resources, returning either a success response or a typed error. Useful for managing network access configurations in serverless applications deployed with App Runner.",
      "description_length": 351,
      "index": 583,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_AppRunner.ListVpcConnectors",
      "library": "smaws-clients.apprunner",
      "description": "This module handles listing VPC connectors by sending a request and returning a result with either the response or specific error types. It operates on AWS context and VPC connector request/response data structures. A concrete use case is retrieving configured VPC connectors for monitoring or management within an AWS environment.",
      "description_length": 331,
      "index": 584,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_AppRunner",
      "library": "smaws-clients.apprunner",
      "description": "This module provides operations for managing AWS App Runner services, including updating configurations (VPC ingress, auto-scaling, observability), controlling service state (pause/resume), deploying services, and handling resource tags. It works with data structures like ARNs, service configuration records, and tagged entities, supporting nested optional fields and enumerations to model AWS resource states. Specific use cases include automating service updates, managing network isolation via VPC connectors, and orchestrating deployments with custom domains or scaling policies.",
      "description_length": 584,
      "index": 585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateCluster",
      "library": "smaws-clients.snowball",
      "description": "Performs cluster update operations by sending requests to modify cluster configurations. It handles specific error cases like invalid input combinations, resource states, and failures in EC2 or KMS interactions. This function is used when adjusting cluster properties such as node counts or security settings in an active cluster environment.",
      "description_length": 342,
      "index": 586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListClusters",
      "library": "smaws-clients.snowball",
      "description": "Handles listing clusters in AWS Snowball by sending a request and returning a result with either cluster data or specific errors. Works with AWS context, list cluster requests, and responses containing cluster results or error types. Useful for retrieving cluster information with support for pagination and error handling.",
      "description_length": 323,
      "index": 587,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeJob",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to retrieve detailed information about a specific AWS Snowball job. It accepts a context and a job description request, returning either the job details or an error if the job cannot be found or is invalid. This module is used to directly query the status and configuration of a Snowball job by its identifier.",
      "description_length": 327,
      "index": 588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListClusterJobs",
      "library": "smaws-clients.snowball",
      "description": "Handles listing jobs associated with a specific cluster by sending a request and returning a result that includes job details or specific error types. Works with cluster job request and result types, including error variants for invalid tokens and resources. Useful for retrieving and managing job information within a cluster context.",
      "description_length": 335,
      "index": 589,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.ListLongTermPricing",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to list long-term pricing information for AWS Snowball resources. It processes a context and a list request, returning either a result with pricing data or specific error types like invalid token or resource exceptions. Useful for retrieving and managing long-term pricing configurations in AWS Snowball services.",
      "description_length": 330,
      "index": 590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateLongTermPricing",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to update long-term pricing configurations in the Snowball service. Works with context and pricing request data types, returning result or error responses. Used to modify existing pricing settings for Snowball resources.",
      "description_length": 237,
      "index": 591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateCluster",
      "library": "smaws-clients.snowball",
      "description": "Handles the creation of a new cluster by sending a request with provided configuration and returning a result that indicates success or specific error conditions. Works with context and cluster creation request data types, yielding either a cluster creation result or an error tagged with detailed exception information. Useful for initiating cluster provisioning in a system that requires explicit handling of creation-time failures.",
      "description_length": 434,
      "index": 592,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeAddress",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to retrieve address details by interacting with the Snowball service. It processes `describe_address_request` inputs and returns either a `describe_address_result` or an error indicating invalid resources or AWS-specific failures. Useful for validating and fetching metadata about physical addresses associated with Snowball jobs.",
      "description_length": 347,
      "index": 593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.GetJobManifest",
      "library": "smaws-clients.snowball",
      "description": "Handles retrieving job manifest information by sending a request and returning either the result or specific error types. Works with job manifest request and result types, along with error types like `InvalidJobStateException` and `InvalidResourceException`. Used to fetch and validate job manifest data in Snowball operations.",
      "description_length": 327,
      "index": 594,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.GetSoftwareUpdates",
      "library": "smaws-clients.snowball",
      "description": "Handles retrieving software update information for AWS Snowball devices by sending a structured request and returning a result that includes either the list of available updates or specific error conditions. Works with AWS Snowball device identifiers and software update metadata. Used to check for pending software updates on a Snowball device during job execution or maintenance workflows.",
      "description_length": 391,
      "index": 595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateReturnShippingLabel",
      "library": "smaws-clients.snowball",
      "description": "This module issues requests to generate return shipping labels for Snowball jobs, handling job-specific validation and conflict errors. It works with Snowball job contexts and label request/response structures defined in the Snowball client library. Use this module when automating return label creation for Snowball data transfer jobs, particularly in workflows requiring error handling for invalid job states or duplicate labels.",
      "description_length": 431,
      "index": 596,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeReturnShippingLabel",
      "library": "smaws-clients.snowball",
      "description": "This module handles the request to describe a return shipping label for a Snowball job, interacting with the AWS Snowball service. It processes the job identifier and returns detailed information about the shipping label, including its status and metadata. Use this module to retrieve shipping label details for tracking or managing Snowball job returns.",
      "description_length": 354,
      "index": 597,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateJob",
      "library": "smaws-clients.snowball",
      "description": "This module handles updating job configurations in the Snowball service by sending a request with the provided job update parameters and returning a result indicating success or a specific error type. It works directly with the `update_job_request` type to modify job details and `update_job_result` to capture the response, alongside various exception types for error handling. It is used when adjusting job settings such as resource tags, device configurations, or job status transitions within a Snowball workflow.",
      "description_length": 517,
      "index": 598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListServiceVersions",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to list service versions for Snowball resources, interacting with AWS JSON protocols. Works with context and request/response types specific to Snowball service versioning. Used to retrieve and validate available service versions when managing Snowball data transfer jobs.",
      "description_length": 289,
      "index": 599,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListCompatibleImages",
      "library": "smaws-clients.snowball",
      "description": "This module handles requests to list compatible images for Snowball devices, interacting with AWS services using context and request parameters. It processes responses into result types, including success cases with image lists and specific error cases like EC2 request failures or invalid tokens. Use this module when retrieving and handling compatible AMI images for Snowball Edge devices in AWS migrations.",
      "description_length": 409,
      "index": 600,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.GetJobUnlockCode",
      "library": "smaws-clients.snowball",
      "description": "Handles retrieving a job unlock code by sending a request to validate and fetch the code for a specific job. Works with job identifiers and authentication contexts to ensure secure access. Useful for scenarios where a job's unlock code must be programmatically retrieved after meeting specific job state requirements.",
      "description_length": 317,
      "index": 601,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeAddresses",
      "library": "smaws-clients.snowball",
      "description": "This module handles the `DescribeAddresses` API operation for the Snowball service, allowing retrieval of address information associated with AWS Snowball jobs. It processes requests using a context and a structured input type, returning either a result containing address details or specific error types like `InvalidNextTokenException` or `InvalidResourceException`. It is used to manage physical address data required for Snowball device shipping and job configuration.",
      "description_length": 472,
      "index": 602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListPickupLocations",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to retrieve pickup locations for Snowball devices in AWS. It processes a context and a list pickup locations request, returning either a result with the locations or an error such as an invalid resource exception. Useful when managing physical data transfer devices in AWS Snowball workflows.",
      "description_length": 309,
      "index": 603,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateAddress",
      "library": "smaws-clients.snowball",
      "description": "This module issues requests to create addresses in the Snowball service. It processes a context and a creation request, returning a result that includes either a creation response or specific error types like invalid or unsupported address exceptions. It directly handles AWS JSON protocol errors alongside service-specific exception variants.",
      "description_length": 343,
      "index": 604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.GetSnowballUsage",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to retrieve Snowball usage data by accepting a context and a specific usage request, returning a result that either contains the usage details or an AWS JSON error. Works with Snowball-specific request and result types, along with standard error handling. Useful for querying current Snowball job usage metrics in an AWS environment.",
      "description_length": 350,
      "index": 605,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.DescribeCluster",
      "library": "smaws-clients.snowball",
      "description": "Handles requests to retrieve detailed information about a specific cluster in the Snowball service. It accepts a context and a `describe_cluster_request` containing the cluster identifier, returning either a `describe_cluster_result` with cluster details or an error indicating failure. This module is used to fetch metadata and status of a cluster for monitoring or management purposes.",
      "description_length": 387,
      "index": 606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.ListJobs",
      "library": "smaws-clients.snowball",
      "description": "Handles listing jobs in AWS Snowball by sending a request and returning a result with job information or specific errors. Works with `list_jobs_request` and `list_jobs_result` types from the Snowball client library. Useful for retrieving summaries of existing Snowball jobs, especially when paginating with next tokens.",
      "description_length": 319,
      "index": 607,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateJob",
      "library": "smaws-clients.snowball",
      "description": "Handles the creation of a new job in Snowball by sending a request with the provided context and job configuration. It processes the response into a result type, including specific error cases such as cluster limits, invalid input combinations, and resource issues. This function is used when initiating data transfer jobs to AWS Snowball devices, ensuring correct setup and validation of job parameters.",
      "description_length": 404,
      "index": 608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball.CreateLongTermPricing",
      "library": "smaws-clients.snowball",
      "description": "Handles the creation of long-term pricing requests within a specified context, returning either a result or an error. It operates on `create_long_term_pricing_request` input types and produces `create_long_term_pricing_result`, with explicit error handling for invalid resources. This module is used when configuring and submitting long-term pricing options for Snowball resources.",
      "description_length": 381,
      "index": 609,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.UpdateJobShipmentState",
      "library": "smaws-clients.snowball",
      "description": "This module handles updating the shipment state of a job in the Snowball service. It provides the `request` function that sends an update request and returns a result indicating success or specific error conditions like invalid job state or resource errors. It works directly with job shipment state request and response data structures, along with context information.",
      "description_length": 369,
      "index": 610,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CancelCluster",
      "library": "smaws-clients.snowball",
      "description": "Cancels a cluster by sending a cancellation request, handling errors such as invalid job state, missing resources, or KMS failures. Works with cluster identifiers and AWS context to perform the operation. Useful when terminating a provisioned cluster that is no longer needed, especially before it reaches a terminal state.",
      "description_length": 323,
      "index": 611,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Snowball.CancelJob",
      "library": "smaws-clients.snowball",
      "description": "This module handles the cancellation of a job in the Snowball service by sending a cancellation request. It works with the `Context.t` type for execution context and a `cancel_job_request` type specifying the job to cancel, returning a result that includes either a success response or specific error types like `InvalidJobStateException`. It is used when a user needs to programmatically cancel a job that is in a cancellable state.",
      "description_length": 433,
      "index": 612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Snowball",
      "library": "smaws-clients.snowball",
      "description": "This module supports operations for managing AWS Snowball job lifecycles, cluster configurations, and long-term pricing adjustments, alongside handling shipments, service versions, and pickup locations. It works with data structures representing jobs, clusters, addresses, device services, and resource configurations (e.g., S3, Lambda, EC2), including metadata, shipping labels, and regional tax/identification details. Specific use cases include automating job state updates, configuring device resources, managing cluster cancellations, and retrieving service dependencies or compatibility data for Snowball devices.",
      "description_length": 619,
      "index": 613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.NotifyApplicationState",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles notifying the state of an application within a migration hub, providing a `request` function that sends state updates and returns either a success result or a detailed error. It works with context data and structured request/response types specific to application state notifications. Use this module to report application migration statuses and handle potential errors like invalid inputs or resource not found during migration tracking.",
      "description_length": 458,
      "index": 614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.AssociateCreatedArtifact",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the association of created artifacts with migration tasks by sending requests to the Migration Hub service. It processes input parameters and authentication context to perform the operation, returning either a success result or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used when tracking resources that have been created as part of a migration workflow.",
      "description_length": 420,
      "index": 615,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DescribeApplicationState",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the `DescribeApplicationState` API request, which retrieves the current state of a migration application. It works with AWS-specific request and response structures, including error types like `AccessDeniedException` and `ResourceNotFoundException`. Use this module to query application state details directly from AWS Migration Hub.",
      "description_length": 353,
      "index": 616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DescribeMigrationTask",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the `DescribeMigrationTask` API request, retrieving detailed information about a specific migration task. It works with the `describe_migration_task_request` type to send queries and returns either a `describe_migration_task_result` or a specific AWS error type. It is used to inspect the status and metadata of an ongoing migration task in AWS Migration Hub.",
      "description_length": 379,
      "index": 617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DisassociateDiscoveredResource",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the disassociation of a discovered resource from a migration task. It sends a request to remove a specific resource from being tracked by the Migration Hub, returning a result that indicates success or a specific error type. It works with AWS migration contexts and resource identifiers, typically used when cleaning up or reconfiguring migration setups.",
      "description_length": 374,
      "index": 618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListProgressUpdateStreams",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles requests to list progress update streams for AWS Migration Hub, interacting with the service via a provided context and request configuration. It processes the response into a result type, either returning the list of streams or an error specific to AWS operations. Concrete use cases include retrieving stream metadata for tracking migration progress or auditing stream activity within a specific AWS account.",
      "description_length": 430,
      "index": 619,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListApplicationStates",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles requests to list application states in AWS Migration Hub, interacting with the service via a context and a structured request. It processes responses into either a result or specific AWS error types, such as `AccessDeniedException` or `InvalidInputException`. It is used to retrieve and manage application state data from Migration Hub in a type-safe manner.",
      "description_length": 378,
      "index": 620,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.CreateProgressUpdateStream",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the creation of a progress update stream for migration tasks, interacting with AWS Migration Hub. It provides a `request` function that sends a creation request and returns a result with either the stream name or specific AWS error types. It works with context and request/response types defined in the Migration Hub protocol, enabling tracking of migration progress in distributed systems.",
      "description_length": 410,
      "index": 621,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DisassociateCreatedArtifact",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the disassociation of created artifacts from migration tasks by sending a request to the Migration Hub service. It works with context and request/response types specific to the Migration Hub API, including detailed error handling for AWS-specific exceptions. It is used when managing migration workflows to track or clean up artifacts linked to completed or failed migrations.",
      "description_length": 396,
      "index": 622,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListDiscoveredResources",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles requests to list discovered resources in AWS Migration Hub, interacting with the context and specific request/response types. It processes queries for resources identified during migration discovery, returning either a result or detailed error types like access denied, invalid input, or resource not found. Use it when retrieving discovered resource data from a migration assessment or planning workflow.",
      "description_length": 425,
      "index": 623,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListCreatedArtifacts",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles requests to list created artifacts in AWS Migration Hub, interacting with migration and artifact data structures. It provides a `request` function that takes a context and a specific request type, returning either a result or a detailed error. Use this module to retrieve artifact information for migration tracking or resource management tasks.",
      "description_length": 365,
      "index": 624,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_MigrationHub.PutResourceAttributes",
      "library": "smaws-clients.migration-hub",
      "description": "Sends a request to update resource attributes in AWS Migration Hub, handling specific error cases like access denial, invalid input, and resource not found. Works with AWS context and Migration Hub request/response types for attribute updates. Used when migrating or tracking resources across AWS services to maintain accurate resource metadata.",
      "description_length": 345,
      "index": 625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ListMigrationTasks",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles listing migration tasks by sending a request to the Migration Hub service, returning a result that includes either a list of migration tasks or an error. It works with AWS-specific data structures like `list_migration_tasks_request` and `list_migration_tasks_result`, and includes detailed error types for handling service-specific failures. It is used to retrieve and manage migration task records in a given AWS account and region.",
      "description_length": 453,
      "index": 626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.NotifyMigrationTaskState",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles notifications for migration task state changes in a cloud migration service. It provides a `request` function that sends state updates for migration tasks, accepting context and request parameters, and returns a result with either a success response or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used to track and manage migration progress across distributed systems.",
      "description_length": 432,
      "index": 627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.AssociateDiscoveredResource",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the association of discovered resources within a migration hub context. It processes requests to link resources with migration tasks, returning either a success result or specific error types such as `ResourceNotFoundException` or `InvalidInputException`. It is used when integrating resource discovery data with migration workflows in AWS Migration Hub.",
      "description_length": 374,
      "index": 628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.DeleteProgressUpdateStream",
      "library": "smaws-clients.migration-hub",
      "description": "Deletes a progress update stream in AWS Migration Hub, handling errors such as invalid input, resource not found, and access denied. Works with context and request types specific to Migration Hub. Useful for cleaning up migration tracking streams when they are no longer needed.",
      "description_length": 278,
      "index": 629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_MigrationHub.ImportMigrationTask",
      "library": "smaws-clients.migration-hub",
      "description": "This module handles the import of migration tasks by sending a request to the Migration Hub service. It works with context and migration task request data types, returning either a result or specific AWS error types. It is used to programmatically create migration tasks while handling errors such as invalid input, access denial, or resource not found.",
      "description_length": 353,
      "index": 630,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Smaws_Client_MigrationHub",
      "library": "smaws-clients.migration-hub",
      "description": "This module provides operations for managing migration workflows, including tracking migration task states, synchronizing application statuses, and organizing discovered resources, created artifacts, and progress update streams. It operates on structured types like `migration_task`, `application_state`, `resource_attribute`, and `progress_update_stream`, enabling use cases such as resource association, state notification, and lifecycle management for cloud migration workflows in AWS environments.",
      "description_length": 501,
      "index": 631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetXssMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles requests to retrieve XSS match sets in AWS WAF, providing a `request` function that takes a context and a specific request type. It works with data types representing WAF contexts, XSS match set identifiers, and various error conditions like invalid accounts or non-existent items. A concrete use case is fetching XSS match set details for monitoring or validation purposes within a WAF configuration.",
      "description_length": 421,
      "index": 632,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetRateBasedRule",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving a rate-based rule in AWS WAF by sending a request and returning a result with either the rule details or specific error types. It operates on a context and a `get_rate_based_rule_request`, producing a `get_rate_based_rule_response` or an error such as `WAFInternalErrorException`, `WAFInvalidAccountException`, or `WAFNonexistentItemException`. It is used when querying AWS WAF to inspect rate-based rules for web access control policies.",
      "description_length": 469,
      "index": 633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRateBasedRule",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of rate-based rules in AWS WAF, providing a `request` function that sends a rule creation request and returns a result with either a response or specific WAF error types. It works with AWS WAF rule configurations, including rate limits, predicates, and tags. Use this module to programmatically define and enforce rate-limiting rules for web traffic protection in AWS WAF.",
      "description_length": 405,
      "index": 634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRateBasedRule",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of rate-based rules in AWS WAF, providing a `request` function that takes a context and a delete request, returning a result with either a success response or a specific WAF error type. It works with AWS WAF rate-based rule identifiers and associated context data. Concrete use cases include removing outdated or unused rate-based rules to manage web traffic protection policies.",
      "description_length": 412,
      "index": 635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRegexPatternSet",
      "library": "smaws-clients.waf",
      "description": "This module handles updating a regex pattern set in AWS WAF by sending a request with the provided context and update parameters. It works with regex pattern sets, accepting changes to their included regex patterns and returning a response indicating success or failure. Use cases include modifying existing regex patterns used in WAF rules to detect malicious input, such as SQL injection or XSS attack signatures.",
      "description_length": 415,
      "index": 636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteByteMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of a byte match set in AWS WAF, providing a `request` function that takes a context and a delete request, returning a result with either a success response or specific WAF error types. It works with AWS WAF's byte match set identifiers and associated error structures. A concrete use case is removing an outdated byte match set when updating a web ACL's rules.",
      "description_length": 393,
      "index": 637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetSqlInjectionMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve SQL injection match sets from AWS WAF, handling responses and specific error conditions such as internal errors, invalid accounts, and nonexistent items. It operates on AWS WAF contexts and structured request/response types defined in the Smaws_Client_WAF module. A concrete use case is fetching a SQL injection match set by ID to inspect or update its rules within a WAF configuration.",
      "description_length": 426,
      "index": 638,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteXssMatchSet",
      "library": "smaws-clients.waf",
      "description": "Deletes an XSS match set from AWS WAF, handling errors such as stale data, non-existent items, or referenced items. Works with AWS WAF contexts and structured request/response types specific to XSS match set deletion. Useful for removing outdated or unused XSS match sets during security rule maintenance.",
      "description_length": 305,
      "index": 639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListWebACLs",
      "library": "smaws-clients.waf",
      "description": "This module handles listing AWS WAF web access control lists (WebACLs) by sending a request and returning a result with either the response data or specific WAF error types. It operates on AWS context and request/response structures defined in the Smaws_Client_WAF module. A concrete use case is retrieving existing WebACLs to audit or manage security policies in an AWS environment.",
      "description_length": 383,
      "index": 640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRegexPatternSet",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve AWS WAF regex pattern sets by ID, handling responses and specific error conditions like invalid accounts or missing items. It operates on AWS context and request/response structures defined in the Smaws_Client_WAF module. A concrete use case is fetching a stored regex pattern set for inspection or logging within a WAF configuration workflow.",
      "description_length": 383,
      "index": 641,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListXssMatchSets",
      "library": "smaws-clients.waf",
      "description": "This module handles requests to list XSS match sets in AWS WAF, providing a `request` function that sends a query and returns either a list of match sets or an error. It works with AWS WAF-specific data structures like `list_xss_match_sets_request` and `list_xss_match_sets_response`. Use this module to retrieve configured XSS match sets for inspecting web requests in WAF rules.",
      "description_length": 380,
      "index": 642,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRegexPatternSet",
      "library": "smaws-clients.waf",
      "description": "Deletes a regex pattern set from AWS WAF by sending a deletion request with the provided context and pattern set identifier. It handles responses and specific AWS WAF errors such as stale data, non-empty entity, or nonexistent item conditions. This operation is used when managing WAF rules to remove outdated or unused regex patterns that are no longer needed for web request filtering.",
      "description_length": 387,
      "index": 643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateByteMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles updating a byte match set in a WAF configuration by sending a request with the provided context and update parameters. It works with byte match sets, byte match tuples, and related WAF exception types. A concrete use case is modifying existing byte match conditions to refine web request filtering rules in AWS WAF.",
      "description_length": 335,
      "index": 644,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListSubscribedRuleGroups",
      "library": "smaws-clients.waf",
      "description": "This module handles the request to list subscribed rule groups for AWS WAF, interacting with the provided context and request parameters. It works with AWS WAF-specific data structures, including rule group summaries and error responses. A concrete use case is retrieving a list of rule groups currently subscribed to by an account for managing web access controls.",
      "description_length": 365,
      "index": 645,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateGeoMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of a WAF GeoMatchSet by sending a request to associate specified geographic locations with a web ACL. It works with AWS WAF context data and structured request/response types that define GeoMatchSet parameters and returned metadata. Concrete use cases include configuring regional access controls for web applications based on country codes.",
      "description_length": 374,
      "index": 646,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetChangeTokenStatus",
      "library": "smaws-clients.waf",
      "description": "This module issues a request to check the status of a change token in AWS WAF, returning the result as a response or an error. It operates on a context and a `get_change_token_status_request`, producing a `get_change_token_status_response` or one of several error types. Use this to verify whether a change token has been successfully processed after making updates to WAF rules or configurations.",
      "description_length": 397,
      "index": 647,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.CreateIPSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of IP sets in AWS WAF, sending a request with provided configuration and returning a result that includes either a successful response or specific AWS WAF error types. It operates on AWS WAF IP set request and response structures, along with context data needed for AWS service communication. It is used when defining new IP sets for web access control policies in AWS WAF.",
      "description_length": 406,
      "index": 648,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetGeoMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving a geo match set from AWS WAF, providing the `request` function to send the query and return the response or an error. It works with AWS WAF geo match set request and response types, along with error types specific to WAF operations. A concrete use case is fetching geographic IP restrictions configured in AWS WAF for traffic filtering.",
      "description_length": 367,
      "index": 649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListTagsForResource",
      "library": "smaws-clients.waf",
      "description": "This module handles making a request to list tags for a specific WAF resource, using a provided context and request configuration. It works with WAF-specific types like `list_tags_for_resource_request` and `list_tags_for_resource_response`, along with various WAF error types for precise error handling. A concrete use case is retrieving metadata tags associated with a WAF rule group or web ACL for resource management or auditing purposes.",
      "description_length": 441,
      "index": 650,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteGeoMatchSet",
      "library": "smaws-clients.waf",
      "description": "Deletes a geo match set from AWS WAF, handling errors such as stale data, non-empty entity, or referenced item conflicts. Works with AWS WAF geo match set identifiers and associated exception types. Used when removing geographic IP restrictions from a web ACL.",
      "description_length": 260,
      "index": 651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListByteMatchSets",
      "library": "smaws-clients.waf",
      "description": "This module handles listing byte match sets in AWS WAF by sending a request and returning a result with either the response or specific WAF errors. It operates on AWS context and request/response data types defined in the Smaws_Client_WAF module. A concrete use case is retrieving configured byte match sets for monitoring or managing web request filtering rules.",
      "description_length": 363,
      "index": 652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListSizeConstraintSets",
      "library": "smaws-clients.waf",
      "description": "This module handles listing size constraint sets in AWS WAF by sending a request and returning a result with either the response or specific WAF errors. It operates on AWS context and WAF-specific request/response data types. It is used to retrieve configured size constraints for web access control in AWS WAF.",
      "description_length": 311,
      "index": 653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteLoggingConfiguration",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of logging configurations for AWS WAF resources. It provides a `request` function that sends a deletion request and returns a result indicating success or specific AWS WAF errors such as stale data or nonexistent item. It works with AWS WAF logging configuration identifiers and integrates with the AWS JSON protocol for error handling.",
      "description_length": 369,
      "index": 654,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetPermissionPolicy",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving permission policies for AWS WAF resources by sending a request and returning a result with either the policy response or specific AWS WAF error types. It operates on AWS WAF request and response structures, including error types like `WAFInternalErrorException` and `WAFNonexistentItemException`. A concrete use case is fetching the resource policy of a WAF rule group to determine its permissions configuration.",
      "description_length": 443,
      "index": 655,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateXssMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of XSS match sets in AWS WAF by sending a request with provided configuration and returning a result that includes either a success response or specific AWS WAF error types. It operates on AWS WAF request and response structures, along with context data required for AWS service communication. It is used when setting up or updating web ACL rules to detect cross-site scripting attacks.",
      "description_length": 419,
      "index": 656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRateBasedRuleManagedKeys",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve managed keys for rate-based rules in AWS WAF. It operates on a context and a specific request structure, producing a response or an error tagged with detailed AWS WAF exception types. It is used to programmatically access key management data for rate-based rules in AWS WAF configurations.",
      "description_length": 329,
      "index": 657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetWebACL",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving a WebACL resource from AWS WAF by sending a request and returning the response or specific error types. It operates on `Smaws_Lib.Context.t` and `Smaws_Client_WAF.get_web_acl_request` to produce either a `get_web_acl_response` or one of several WAF-specific error variants. It is used when querying AWS WAF for the configuration details of a specific WebACL by its identifier.",
      "description_length": 407,
      "index": 658,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListRules",
      "library": "smaws-clients.waf",
      "description": "This module handles the `list_rules` operation for the WAF service, sending requests to retrieve rule information and returning parsed responses or specific WAF errors. It works with WAF rule identifiers and pagination tokens to manage large result sets. A concrete use case is listing all firewall rules associated with a specific WAF web ACL for monitoring or management purposes.",
      "description_length": 382,
      "index": 659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListRegexMatchSets",
      "library": "smaws-clients.waf",
      "description": "This module handles the listing of regex match sets used in AWS WAF, interacting with the service via a provided context and request configuration. It operates on AWS WAF-specific data types, including regex match set identifiers and metadata. A typical use case involves retrieving existing regex match sets to manage or inspect web access control rules programmatically.",
      "description_length": 372,
      "index": 660,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.DeletePermissionPolicy",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of a permission policy in AWS WAF by sending a request and returning a result with either a success response or specific error types. It operates on AWS WAF permission policy identifiers and interacts with AWS context and protocol types. It is used when removing access control policies attached to WAF resources like rule groups or web ACLs.",
      "description_length": 375,
      "index": 661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRateBasedRule",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to update rate-based rules in AWS WAF, handling the specific response and error types associated with the update operation. It works with AWS WAF rate-based rule request and response structures, along with context data required for AWS service communication. A concrete use case is modifying the rate limit or conditions of a rate-based rule within an AWS WAF web ACL.",
      "description_length": 396,
      "index": 662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteSqlInjectionMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of SQL injection match sets in AWS WAF by sending a request to remove a specified match set, returning a result that includes either a success response or specific AWS WAF error types. It operates on the `delete_sql_injection_match_set_request` type and produces a `delete_sql_injection_match_set_response` on success, while propagating AWS service errors such as stale data or non-empty entity conditions. It is used when managing WAF rules to remove outdated or unused SQL injection protection configurations.",
      "description_length": 544,
      "index": 663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListSqlInjectionMatchSets",
      "library": "smaws-clients.waf",
      "description": "This module handles listing SQL injection match sets in AWS WAF by sending a request and returning a result with either the response or specific WAF errors. It works with AWS WAF contexts, request and response structures, and custom error types like `WAFInternalErrorException`. Use this module to retrieve configured SQL injection match sets for web access control policies.",
      "description_length": 375,
      "index": 664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UntagResource",
      "library": "smaws-clients.waf",
      "description": "Removes tags from a WAF resource using the provided context and request parameters. It handles responses and specific WAF exceptions like invalid parameters or nonexistent items. This operation is useful when managing resource tags for AWS WAF resources like web ACLs or rules.",
      "description_length": 277,
      "index": 665,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateXssMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to update XSS match sets in AWS WAF, handling the specific AWS JSON protocol for communication. It works with structured request and response types defined for AWS WAF, including error types that correspond to WAF service exceptions. Concrete use cases include modifying XSS match conditions in WAF rules to adapt to evolving security threats.",
      "description_length": 371,
      "index": 666,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.GetRule",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving a specific WAF rule by sending a request with a given context and rule identifier. It works with WAF rule data structures, including rule metadata and error types such as `WAFInternalErrorException`, `WAFInvalidAccountException`, and `WAFNonexistentItemException`. A concrete use case is fetching the details of an existing WAF rule to inspect its conditions or actions within a security policy.",
      "description_length": 426,
      "index": 667,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRegexPatternSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of WAF regex pattern sets by sending a request with provided configuration and returning a result that includes either a success response or specific WAF error types. It works with context data, regex pattern set requests, and produces responses or exceptions tied to WAF constraints and states. Concrete use cases include setting up regex patterns for web request validation in AWS WAF.",
      "description_length": 420,
      "index": 668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRule",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to create WAF rules, handling validation, rate limiting, and tag management. It works with WAF rule configurations, including predicates, actions, and metadata. Use it to programmatically deploy new web ACL rules in AWS WAF.",
      "description_length": 252,
      "index": 669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.PutPermissionPolicy",
      "library": "smaws-clients.waf",
      "description": "This module handles the submission of permission policies for AWS WAF resources, validating and applying access controls. It operates on AWS WAF request and response structures, specifically for associating resource policies with web ACLs. Use this module to enforce cross-account access rules or API Gateway integrations by attaching a resource policy to a WAF web ACL.",
      "description_length": 370,
      "index": 670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteWebACL",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of a WebACL in AWS WAF by sending a request and returning a result with either a success response or specific error types. It works with the `Context.t` type for configuration and `delete_web_acl_request` for input parameters, producing a `delete_web_acl_response` on success. Concrete use cases include removing outdated or unused WebACLs as part of infrastructure cleanup or security policy updates.",
      "description_length": 434,
      "index": 671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteSizeConstraintSet",
      "library": "smaws-clients.waf",
      "description": "Deletes a size constraint set from AWS WAF, interacting with the provided context and request data. Works with AWS WAF size constraint sets, handling errors such as non-existent items, stale data, or referenced entities. Useful for removing outdated or unused size constraints from WAF rules during security policy updates.",
      "description_length": 323,
      "index": 672,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListGeoMatchSets",
      "library": "smaws-clients.waf",
      "description": "This module handles listing geo match sets in AWS WAF by sending a request and returning a result with either the response or specific WAF errors. It works with context, request, and response types defined in the Smaws_Client_WAF module. A concrete use case is retrieving configured geo match sets to manage regional access control in web applications.",
      "description_length": 352,
      "index": 673,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetIPSet",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving IP set configurations from AWS WAF by sending a request and returning a result with either the IP set response or specific AWS WAF error types. It operates on AWS WAF IP set identifiers within a given context, supporting operations like fetching existing IP set details for inspection or management. Use this module to programmatically access and verify IP set data in AWS WAF, such as checking IP address inclusion rules or retrieving IP set metadata for logging and auditing.",
      "description_length": 508,
      "index": 674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRule",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of WAF rules by sending a request to remove a specified rule and returns a result indicating success or a specific error. It works with WAF rule identifiers and context data required for AWS interactions. Use this module when removing an existing WAF rule that is no longer needed or when cleaning up stale or unused rules in a WAF configuration.",
      "description_length": 379,
      "index": 675,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListLoggingConfigurations",
      "library": "smaws-clients.waf",
      "description": "This module handles the request to list AWS WAF logging configurations, interacting with the WAF service using a provided context and request parameters. It processes responses and errors specific to listing logging configurations, including handling exceptions like invalid parameters or non-existent items. A concrete use case is retrieving current logging configurations for analysis or auditing purposes in a WAF-managed environment.",
      "description_length": 437,
      "index": 676,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRule",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to update WAF rules, handling responses and errors specific to rule modification operations. It works with WAF rule request and response structures, along with context data required for AWS interactions. It is used when modifying existing WAF rules to enforce updated security policies on web traffic.",
      "description_length": 329,
      "index": 677,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateWebACLMigrationStack",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of a WebACL migration stack by sending a request to migrate a WebACL from one AWS WAF version to another. It works with the `Context.t` type for authentication and configuration, and specialized WAF request and response types for migration operations. It is used when upgrading AWS WAF resources from version 1 to version 2, ensuring compatibility and proper configuration transfer.",
      "description_length": 415,
      "index": 678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRuleGroup",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of WAF rule groups by sending a request with provided configuration and returning a result that includes either a success response or specific WAF error types. It operates on WAF rule group request and response structures, along with various WAF-specific exception types for error handling. It is used when setting up new WAF rule groups in AWS WAF, particularly during infrastructure provisioning or policy updates.",
      "description_length": 449,
      "index": 679,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRegexMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles requests to retrieve a WAF regex match set by ID, returning the set's details or specific errors if the request fails. It operates on WAF regex match set identifiers and interacts with AWS WAF services to fetch configuration data. Use this module when managing or inspecting WAF rules that involve regex pattern matching in an AWS environment.",
      "description_length": 363,
      "index": 680,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteIPSet",
      "library": "smaws-clients.waf",
      "description": "This module provides a function to delete an IP set from AWS WAF, handling specific error cases such as non-existent items or stale data. It operates on AWS WAF IP set request and response types, using a context for execution. A concrete use case is removing outdated IP restrictions from a web access control policy.",
      "description_length": 317,
      "index": 681,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetSizeConstraintSet",
      "library": "smaws-clients.waf",
      "description": "This module handles retrieving size constraint sets from AWS WAF by sending a request and returning a result with either the response or specific WAF error types. It works with AWS WAF size constraint set identifiers and associated error types such as `WAFInternalErrorException`, `WAFInvalidAccountException`, and `WAFNonexistentItemException`. A concrete use case is fetching a specific size constraint set configuration to inspect or modify its rules within a WAF setup.",
      "description_length": 473,
      "index": 682,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateRegexMatchSet",
      "library": "smaws-clients.waf",
      "description": "Handles the creation of a regex match set in AWS WAF by sending a request with provided configuration. It works with context and request/response types specific to AWS WAF, returning either a success response or one of several WAF-specific error types. This module is used when setting up or updating WAF rules that involve regex pattern matching against web requests.",
      "description_length": 368,
      "index": 683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetChangeToken",
      "library": "smaws-clients.waf",
      "description": "This module issues a request to obtain a change token from AWS WAF, which is required for making configuration changes to WAF resources. It works with AWS WAF-specific request and response structures, handling authentication and error responses from the service. A concrete use case is retrieving a valid change token before creating or updating WAF rules or web ACLs.",
      "description_length": 368,
      "index": 684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRegexMatchSet",
      "library": "smaws-clients.waf",
      "description": "Deletes a RegexMatchSet from AWS WAF, handling errors such as stale data, non-existent items, or referenced items. Works with AWS WAF contexts and structured request/response types specific to regex match set deletion. Useful for removing outdated or unused regex patterns from WAF rules programmatically.",
      "description_length": 305,
      "index": 685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateSqlInjectionMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to update SQL injection match sets in AWS WAF, handling the specific AWS JSON protocol errors that can occur during the update. It works with structured request and response types defined for AWS WAF SQL injection protections, including match set identifiers and rule updates. A concrete use case is modifying an existing SQL injection match set to add or remove byte match tuples when updating WAF rules in response to security threats.",
      "description_length": 465,
      "index": 686,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.DeleteRuleGroup",
      "library": "smaws-clients.waf",
      "description": "This module handles the deletion of a WAF rule group by sending a request and returning a result with either a response or specific WAF error types. It works with contexts and structured WAF request/response types, including detailed error cases like stale data or non-empty entity conflicts. It is used to safely remove rule groups while handling AWS-specific failure conditions.",
      "description_length": 380,
      "index": 687,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.CreateWebACL",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of a WebACL in AWS WAF by sending a request and returning a result with either a response or specific WAF error types. It works with contexts, WebACL requests, and responses, including detailed error handling for WAF-specific exceptions. It is used to set up new WebACLs with precise configurations and handle failure scenarios unique to WAF operations.",
      "description_length": 386,
      "index": 688,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateSizeConstraintSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of WAF size constraint sets by sending requests to validate and set constraints on web request components like headers or query strings. It works with WAF-specific data structures such as size constraint set requests and responses, and handles errors related to invalid parameters, duplicate names, and resource limits. A concrete use case is enforcing a minimum or maximum size on query string values to block malicious requests.",
      "description_length": 463,
      "index": 689,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetRuleGroup",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve AWS WAF rule group details, handling responses and specific AWS WAF errors such as internal errors or nonexistent item exceptions. It operates on AWS WAF rule group request and response data structures, which include identifiers and metadata for rule groups. A concrete use case is fetching the configuration of a specific WAF rule group to inspect its rules and settings during security audits or deployment validation.",
      "description_length": 460,
      "index": 690,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetLoggingConfiguration",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve AWS WAF logging configurations, handling responses and specific error types like internal errors or missing items. It operates on AWS WAF request and response data structures, including context for authentication and endpoint resolution. A concrete use case is querying the current logging setup for a WAF web ACL to monitor or audit request logs.",
      "description_length": 387,
      "index": 691,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRuleGroup",
      "library": "smaws-clients.waf",
      "description": "This module handles the core logic for updating a WAF rule group by sending a request and returning a result with either a response or specific WAF error types. It works with structured data types like `update_rule_group_request`, `update_rule_group_response`, and various WAF exception types. A concrete use case is modifying rule group configurations in AWS WAF, such as adding or removing rules, while handling version conflicts and validation errors.",
      "description_length": 454,
      "index": 692,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateWebACL",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to update AWS WAF web access control lists (WebACLs), handling responses and specific error conditions such as invalid parameters, stale data, or missing items. It operates on AWS WAF configuration data, including rules, constraints, and exception types specific to WebACL updates. Concrete use cases include modifying rule groups, adjusting rate-based rules, or updating IP allow/deny lists in an AWS WAF configuration.",
      "description_length": 448,
      "index": 693,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateGeoMatchSet",
      "library": "smaws-clients.waf",
      "description": "Sends a request to update a WAF GeoMatchSet with specified changes, handling concurrency and validation errors. Works with GeoMatchSet configurations, including country codes and change tokens. Useful for modifying geographic access controls in WAF rules programmatically.",
      "description_length": 272,
      "index": 694,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.TagResource",
      "library": "smaws-clients.waf",
      "description": "This module handles tagging operations for WAF resources by sending requests to associate or manage tags with specific WAF entities. It works with WAF resource identifiers and tag structures, supporting operations like adding, updating, or removing tags. Concrete use cases include managing metadata for WAF rules or web access control lists.",
      "description_length": 342,
      "index": 695,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateRegexMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to update a WAF regex match set, handling validation and AWS-specific error conditions. It works with WAF context data, regex match set identifiers, and rule configurations. Concrete use cases include modifying regex patterns or rules within a WAF match set to adjust web traffic filtering policies.",
      "description_length": 327,
      "index": 696,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.CreateSqlInjectionMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of SQL injection match sets in AWS WAF by sending a request with provided configuration. It works with context and request/response types specific to AWS WAF's SQL injection protection setup. Use this module when programmatically defining WAF rules to detect SQL injection attacks in web requests.",
      "description_length": 330,
      "index": 697,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListRuleGroups",
      "library": "smaws-clients.waf",
      "description": "This module handles the AWS WAF operation to list rule groups, providing a `request` function that sends a query to retrieve rule group information. It works with AWS WAF-specific data types such as `list_rule_groups_request` and `list_rule_groups_response`. A concrete use case is retrieving a paginated list of WAF rule groups associated with a specific AWS account or region for management or auditing purposes.",
      "description_length": 414,
      "index": 698,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListRegexPatternSets",
      "library": "smaws-clients.waf",
      "description": "This module handles listing regex pattern sets in AWS WAF by sending a request and returning a result with either the response or specific WAF errors. It operates on AWS context and WAF-specific request/response types, including error types like `WAFInternalErrorException` and `WAFInvalidAccountException`. A concrete use case is retrieving configured regex pattern sets for monitoring or managing WAF rules in an AWS environment.",
      "description_length": 431,
      "index": 699,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.CreateByteMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module handles the creation of byte match sets for AWS WAF, sending requests and parsing responses. It works with context and request/response types specific to AWS WAF's byte match functionality. Concrete use cases include setting up conditions to inspect web requests based on byte-level content matches.",
      "description_length": 311,
      "index": 700,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateIPSet",
      "library": "smaws-clients.waf",
      "description": "This module handles updating an IP set in AWS WAF by sending a request with the provided context and update parameters. It works with IP set identifiers, IP addresses, and AWS WAF-specific error types for failure handling. Use this module to programmatically refresh or modify IP-based access rules in AWS WAF, such as blocking malicious IP ranges or allowing trusted sources.",
      "description_length": 376,
      "index": 701,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListActivatedRulesInRuleGroup",
      "library": "smaws-clients.waf",
      "description": "This module handles requests to list activated rules within a specific WAF rule group, returning either a response with the list or an error indicating issues like invalid parameters or missing items. It operates on AWS WAF-specific data types, including rule group identifiers and error structures. A concrete use case is retrieving the current set of active rules for auditing or management purposes in a WAF configuration.",
      "description_length": 425,
      "index": 702,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.ListIPSets",
      "library": "smaws-clients.waf",
      "description": "This module handles listing IP sets in AWS WAF by sending a request and returning a result with either the response or specific WAF errors. It operates on AWS context and WAF-specific request/response types. Use it to retrieve configured IP sets for monitoring or managing WAF rules.",
      "description_length": 283,
      "index": 703,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetSampledRequests",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve sampled HTTP requests that match specific AWS WAF rules. It processes a context and a structured query to return a result containing either a response with request samples or an error indicating failure. It is used to analyze traffic patterns and troubleshoot rule configurations in AWS WAF.",
      "description_length": 331,
      "index": 704,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.PutLoggingConfiguration",
      "library": "smaws-clients.waf",
      "description": "This module handles the configuration of logging for AWS WAF resources by sending a request to enable or update logging for a specified web ACL. It works with AWS WAF logging configuration requests and responses, including handling specific error types such as resource not found or stale data. It is used when setting up or modifying logging destinations like CloudWatch Logs for WAF traffic monitoring.",
      "description_length": 404,
      "index": 705,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.GetByteMatchSet",
      "library": "smaws-clients.waf",
      "description": "This module issues requests to retrieve WAF byte match sets, handling responses and specific AWS WAF errors like invalid account or non-existent items. It operates on AWS WAF contexts and structured request/response types tied to byte match set configurations. Use this to fetch and inspect byte match set details from AWS WAF, such as when managing web request filtering rules.",
      "description_length": 378,
      "index": 706,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WAF.ListRateBasedRules",
      "library": "smaws-clients.waf",
      "description": "This module handles listing rate-based rules in AWS WAF, providing a `request` function that sends a query and returns a result with either the list of rules or an error. It works with AWS context, request, and response structures specific to WAF rate-based rules. Use this module to retrieve configured rate-based rules for inspection or management tasks in a WAF setup.",
      "description_length": 371,
      "index": 707,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF.UpdateSizeConstraintSet",
      "library": "smaws-clients.waf",
      "description": "Performs an update operation on a WAF size constraint set using a provided context and request structure. It handles validation, serialization, and communication with the WAF service, returning either an updated constraint set response or a typed error indicating failure causes such as invalid parameters, stale data, or resource constraints. This function is used when modifying size-based request inspection rules in AWS WAF.",
      "description_length": 428,
      "index": 708,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WAF",
      "library": "smaws-clients.waf",
      "description": "This module provides operations for managing AWS WAF rule sets, including creating, updating, and deleting security policies to protect web applications from threats like XSS, SQL injection, and malicious IP traffic. It works with structured data types such as rule groups, match sets (e.g., regex, byte, geo, IP), web ACLs, and change tokens, supporting actions like inserting/removing conditions, applying text transformations, and configuring rate-based rules. Specific use cases include enforcing request filtering, managing geo-restrictions, mitigating OWASP Top 10 vulnerabilities, and programmatically handling WAF resource lifecycles with concurrency control via tokens.",
      "description_length": 678,
      "index": 709,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UntagResource",
      "library": "smaws-clients.shield",
      "description": "This module handles the untagging of AWS Shield resources by sending a request to remove specified tags from a resource. It works with AWS Shield's untag resource request and response types, along with common AWS error types. A concrete use case is removing cost center or environment tags from a Shield protection resource during resource cleanup or reclassification.",
      "description_length": 368,
      "index": 710,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeDRTAccess",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to retrieve details about DRT access configurations. It processes a context and a structured request to return a response containing DRT access information or specific error conditions. It is used to programmatically inspect DRT access settings for AWS Shield resources.",
      "description_length": 298,
      "index": 711,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeProtectionGroup",
      "library": "smaws-clients.shield",
      "description": "This module handles the `describe_protection_group` API request in AWS Shield, sending a query to retrieve details about a specific protection group. It works with `Context.t` for authentication and request metadata, and processes structured AWS JSON responses or errors. A concrete use case is retrieving the configuration and status of a protection group to verify its existence or inspect its properties in an automated monitoring system.",
      "description_length": 441,
      "index": 712,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DisableApplicationLayerAutomaticResponse",
      "library": "smaws-clients.shield",
      "description": "This module provides a `request` function to disable application layer automatic responses in AWS Shield, interacting with AWS Shield's API using context and specific request/response types. It handles errors such as invalid parameters, resource not found, and optimistic lock exceptions. Use this module when managing AWS Shield protections programmatically to customize response behavior during attacks.",
      "description_length": 405,
      "index": 713,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateProtectionGroup",
      "library": "smaws-clients.shield",
      "description": "Performs an update operation on a protection group resource using a provided context and request configuration. It handles errors related to invalid parameters, optimistic locking, missing resources, and internal service issues. This function is used to modify existing protection group settings in AWS Shield, such as adjusting associated resources or changing the protection group's name.",
      "description_length": 390,
      "index": 714,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.CreateProtection",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to create protection configurations for AWS Shield, handling responses and specific error conditions. It operates on a context and a structured protection request, producing a result that includes either a success response or a detailed error. Concrete use cases include setting up DDoS protection for resources like CloudFront distributions or Route 53 health checks.",
      "description_length": 396,
      "index": 715,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.TagResource",
      "library": "smaws-clients.shield",
      "description": "Performs an API request to tag a resource within AWS Shield, handling specific error cases such as invalid parameters or missing resources. It operates on `tag_resource_request` and returns a result containing either a `tag_resource_response` or a detailed error type. This function is used when applying tags to AWS Shield-protected resources for organizational or billing purposes.",
      "description_length": 383,
      "index": 716,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.ListResourcesInProtectionGroup",
      "library": "smaws-clients.shield",
      "description": "This module handles listing resources within a protection group by sending a request and returning a result with either the response or specific error types. It works with AWS Shield's protection group data structures, including pagination tokens and resource identifiers. A concrete use case is retrieving all protected resources for monitoring or management within a specific AWS Shield protection group.",
      "description_length": 406,
      "index": 717,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DeleteProtectionGroup",
      "library": "smaws-clients.shield",
      "description": "Deletes a protection group in AWS Shield, returning a result that indicates success or failure with specific error types. It operates on a context and a delete protection group request, producing a response or an error such as optimistic lock or resource not found. This function is used when managing DDoS protection groups, ensuring they can be safely removed when no longer needed.",
      "description_length": 384,
      "index": 718,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.CreateSubscription",
      "library": "smaws-clients.shield",
      "description": "Handles the creation of a subscription request in AWS Shield, validating parameters and sending the request to the service. It works with `Context.t` for configuration and processes `create_subscription_request` to return either a `create_subscription_response` or specific AWS Shield errors. This module is used when enabling AWS Shield protection for a resource, ensuring the subscription is properly configured.",
      "description_length": 414,
      "index": 719,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.EnableProactiveEngagement",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to enable proactive engagement in Shield, handling responses and specific error conditions like invalid parameters or resource not found. It operates on context and request/response types defined in the Shield protocol, including error types such as `InvalidParameterException` and `ResourceNotFoundException`. It is used when configuring Shield to automatically engage with AWS support during DDoS events.",
      "description_length": 434,
      "index": 720,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.ListProtectionGroups",
      "library": "smaws-clients.shield",
      "description": "This module handles requests to list AWS Shield protection groups, returning paginated results or specific error details. It operates on AWS Shield service data types, including protection group configurations and exception responses. Use this module to retrieve and manage protection group information directly from AWS Shield API endpoints.",
      "description_length": 342,
      "index": 721,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.GetSubscriptionState",
      "library": "smaws-clients.shield",
      "description": "Performs a lookup to retrieve the current subscription state for AWS Shield resources. It accepts a context and a request object containing parameters like resource ARN, returning a result with the subscription details or an error. This is used to determine whether a specific AWS resource is currently protected under Shield.",
      "description_length": 326,
      "index": 722,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateDRTLogBucket",
      "library": "smaws-clients.shield",
      "description": "This module handles the association of a DRT log bucket in AWS Shield, sending requests to link a specified log bucket to a Shield protection. It works with AWS Shield's internal request and response types, along with standard error handling for common AWS failure scenarios. Concrete use cases include configuring logging for DDoS protection and ensuring proper bucket integration with Shield services.",
      "description_length": 403,
      "index": 723,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeAttackStatistics",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to retrieve attack statistics from AWS Shield, handling responses and errors specific to attack data retrieval. It works with AWS Shield's attack statistics request and response structures, along with context data for authentication and configuration. A concrete use case is querying detailed metrics about recent DDoS attacks for monitoring or incident analysis.",
      "description_length": 391,
      "index": 724,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DisassociateDRTRole",
      "library": "smaws-clients.shield",
      "description": "This module handles the disassociation of a DRT role in AWS Shield, providing a `request` function that takes a context and a disassociate DRT role request. It operates on AWS Shield-specific data types, including the disassociate request and response structures, and raises specific AWS Shield errors on failure. It is used to manage role permissions for DRT (DDoS Response Team) access in AWS Shield Advanced.",
      "description_length": 411,
      "index": 725,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisassociateDRTLogBucket",
      "library": "smaws-clients.shield",
      "description": "This module handles the disassociation of a DRT log bucket in AWS Shield, sending requests to remove logging destinations linked to a protection resource. It works with AWS Shield-specific request and response types, including error handling for shield-related exceptions. Use this when managing logging configurations for AWS Shield protections programmatically.",
      "description_length": 363,
      "index": 726,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateDRTRole",
      "library": "smaws-clients.shield",
      "description": "This module handles the association of a DRT role to a Shield protection, sending the request and returning the response or specific AWS error types. It operates on context and request/response types defined in the `Smaws_Client_Shield` module. A concrete use case is granting the DRT access to customer protections during incident response.",
      "description_length": 341,
      "index": 727,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DeleteProtection",
      "library": "smaws-clients.shield",
      "description": "This module handles requests to delete protection resources in AWS Shield, providing a `request` function that takes a context and a delete protection request. It works with AWS Shield-specific data types, including delete protection requests and responses, along with error types such as internal error, optimistic lock, and resource not found exceptions. A concrete use case is removing a protection when decommissioning a resource that was previously shielded against DDoS attacks.",
      "description_length": 484,
      "index": 728,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.CreateProtectionGroup",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to create protection groups in AWS Shield, handling responses and specific error conditions like resource conflicts or invalid parameters. It operates on AWS Shield-specific data structures for protection group configurations and exceptions. Use this when programmatically setting up DDoS protection groups with custom resource associations.",
      "description_length": 369,
      "index": 729,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeAttack",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to retrieve details about DDoS attacks, specifically handling responses that include attack summaries or errors like access denial and internal service issues. It operates on AWS context and Shield-specific request/response data structures. Use this to programmatically analyze attack data from AWS Shield for incident response or monitoring purposes.",
      "description_length": 379,
      "index": 730,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateEmergencyContactSettings",
      "library": "smaws-clients.shield",
      "description": "This module handles updating emergency contact settings by sending a structured request and returning a result with either a success response or specific error types. It works with context and request/response types defined in the Smaws_Lib and Smaws_Client_Shield libraries. Concrete use cases include modifying emergency contact information in a system that enforces optimistic locking and validates input parameters.",
      "description_length": 419,
      "index": 731,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateApplicationLayerAutomaticResponse",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to update an application layer automatic response in AWS Shield. It handles the specific AWS API interaction, including error cases like invalid parameters, resource not found, and optimistic lock conflicts. The module works directly with AWS Shield's update request and response structures.",
      "description_length": 319,
      "index": 732,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateProactiveEngagementDetails",
      "library": "smaws-clients.shield",
      "description": "This module handles the request to associate proactive engagement details, interacting with the Shield service to enable or update proactive engagement for a specific resource. It works with context and request/response types defined in the Shield client library, including handling specific error types like invalid parameters or resource not found. A concrete use case is configuring proactive engagement settings for a protection resource in AWS Shield.",
      "description_length": 456,
      "index": 733,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.ListAttacks",
      "library": "smaws-clients.shield",
      "description": "This module handles listing attack details from AWS Shield by sending a request and returning a result with either the attack data or specific error types. It works with AWS Shield's attack data structures, including identifiers and timestamps. Use this module to retrieve and process recent DDoS attack events for monitoring or incident response.",
      "description_length": 347,
      "index": 734,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisableProactiveEngagement",
      "library": "smaws-clients.shield",
      "description": "This module provides a function to disable proactive engagement in Shield, sending a request to stop proactive threat detection for a specific resource. It works with Shield's internal types for requests and responses, along with standard AWS error handling structures. A concrete use case is disabling proactive DDoS protection when decommissioning a protected resource.",
      "description_length": 371,
      "index": 735,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeEmergencyContactSettings",
      "library": "smaws-clients.shield",
      "description": "This module issues requests to retrieve emergency contact settings for AWS Shield resources, handling responses and specific error conditions like internal errors or missing resources. It operates on AWS Shield context and request/response types defined in the `Smaws_Client_Shield` module. A concrete use case is fetching emergency contact configurations for a specific AWS Shield protection to validate or audit contact details during incident response workflows.",
      "description_length": 465,
      "index": 736,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeSubscription",
      "library": "smaws-clients.shield",
      "description": "Handles requests to retrieve details about a Shield subscription, including subscription status and associated resources. Works with AWS Shield subscription data types, specifically `describe_subscription_request` and `describe_subscription_response`. Useful for checking the current state of a Shield subscription and verifying protection coverage for AWS resources.",
      "description_length": 367,
      "index": 737,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.ListProtections",
      "library": "smaws-clients.shield",
      "description": "This module handles requests to list protection resources in AWS Shield, specifically managing pagination and error responses. It works with AWS context, request, and response structures, along with custom error types for exceptions like invalid tokens or missing resources. Use this to retrieve and process a list of protections applied to AWS resources, handling common failure scenarios directly.",
      "description_length": 399,
      "index": 738,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.EnableApplicationLayerAutomaticResponse",
      "library": "smaws-clients.shield",
      "description": "This module provides a `request` function to enable application layer automatic response in AWS Shield, sending a configuration request and returning a result with either a success response or specific error types. It works with AWS Shield context and request/response data structures, handling errors like invalid parameters, resource not found, and optimistic lock exceptions. A concrete use case is configuring automatic DDoS mitigation responses for protected resources in an AWS environment.",
      "description_length": 496,
      "index": 739,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DeleteSubscription",
      "library": "smaws-clients.shield",
      "description": "Sends a request to delete a Shield subscription, handling responses and specific error conditions such as locked subscriptions or missing resources. Works with context and subscription request/response structures defined in the Shield protocol. Useful for managing AWS Shield subscriptions programmatically, particularly in cleanup or migration workflows.",
      "description_length": 355,
      "index": 740,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.ListTagsForResource",
      "library": "smaws-clients.shield",
      "description": "This module handles listing tags for a specified resource by sending a request and returning a result with either the tag response or specific error types. It works with resource identifiers and tag structures defined in the `Smaws_Client_Shield` module. A concrete use case is retrieving metadata tags for billing or resource management in AWS Shield.",
      "description_length": 352,
      "index": 741,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.DisassociateHealthCheck",
      "library": "smaws-clients.shield",
      "description": "This module handles the disassociation of health checks from Shield resources by sending a request to the Shield service. It works with health check identifiers and Shield-protected resources, ensuring the specified health check is no longer monitored for DDoS protection. Use this when removing health checks from Shield-protected applications or infrastructure.",
      "description_length": 363,
      "index": 742,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Shield.UpdateSubscription",
      "library": "smaws-clients.shield",
      "description": "Handles requests to update Shield subscription configurations by sending an update request with the provided context and subscription details. It works with `update_subscription_request` and returns a result containing either the response or specific error types like `InvalidParameterException` or `ResourceNotFoundException`. This module is used when modifying existing Shield subscriptions, such as updating protection settings or subscription metadata.",
      "description_length": 456,
      "index": 743,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.DescribeProtection",
      "library": "smaws-clients.shield",
      "description": "This module handles requests to retrieve protection details for AWS Shield resources, specifically working with context and request/response types defined in the `Smaws_Client_Shield` module. It provides the `request` function to query protection information, returning either a response with protection data or an error indicating issues like invalid parameters or missing resources. Concrete use cases include retrieving protection status for a specific resource ARN or validating if a resource is shielded against DDoS attacks.",
      "description_length": 530,
      "index": 744,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield.AssociateHealthCheck",
      "library": "smaws-clients.shield",
      "description": "This module handles the association of health checks with Shield resources by sending a request to the Shield service. It processes the response and returns either a success result or specific Shield service errors. The primary use case is enabling health check integration for Shield-protected resources like load balancers or CloudFront distributions.",
      "description_length": 353,
      "index": 745,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Shield",
      "library": "smaws-clients.shield",
      "description": "This module provides operations for managing DDoS protection configurations, updating resource associations, and handling attack mitigation strategies in AWS Shield. It works with data structures such as resource ARNs, protection groups, attack statistics (counters, vectors), subscription metadata, and tagging entities, while incorporating error types like `InvalidParameterException` for validation. Specific use cases include automating response actions during attacks, configuring proactive engagement settings, tracking protected resources, and managing limits for security-critical operations.",
      "description_length": 600,
      "index": 746,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UntagResource",
      "library": "smaws-clients.cognito-identity",
      "description": "Removes specified tags from a Cognito Identity resource using the provided context and input parameters. It handles errors such as invalid parameters, unauthorized access, and resource not found, returning a result with the response or an error variant. This operation is useful when managing metadata for identity pools or user pools in AWS Cognito.",
      "description_length": 350,
      "index": 747,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetId",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the retrieval of a Cognito identity ID by sending a request with provided input parameters. It works with AWS Cognito Identity service, using input data such as identity pool ID and optional logins. It returns either a response containing the identity ID or specific error types like `NotAuthorizedException` or `ResourceNotFoundException` based on the service's response.",
      "description_length": 392,
      "index": 748,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.ListIdentities",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles listing identities from a Cognito identity pool using a provided context and input parameters. It works with AWS Cognito identity data structures, specifically handling errors like invalid parameters, unauthorized access, and resource not found. A concrete use case is retrieving a paginated list of user identities for auditing or user management in a serverless application.",
      "description_length": 396,
      "index": 749,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetIdentityPoolRoles",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles retrieving roles associated with a Cognito identity pool. It accepts a context and input parameters, returning either a response with the roles or an error indicating issues like invalid parameters, authorization problems, or resource conflicts. It is used when configuring or inspecting role mappings for authenticated and unauthenticated identities in Cognito.",
      "description_length": 382,
      "index": 750,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.ListTagsForResource",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles listing tags for a specified Cognito Identity resource. It accepts a context and an input structure containing the resource ARN, then returns a result with either the list of tags or specific AWS Cognito Identity service errors. It is used to retrieve metadata tags associated with identity pools or identity providers for resource management and cost allocation.",
      "description_length": 383,
      "index": 751,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetOpenIdToken",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the retrieval of OpenID tokens from AWS Cognito Identity, interacting with authentication systems to exchange identity information for a token. It works with input records containing identity pool IDs and user identifiers, returning token responses or specific AWS service errors. Concrete use cases include authenticating users in serverless applications and securing API access using temporary credentials.",
      "description_length": 428,
      "index": 752,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.LookupDeveloperIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles requests to look up a developer identity in a Cognito identity pool. It accepts a context and input parameters, returning a result that includes either the identity response or specific AWS Cognito error types. It is used to retrieve identity information for a user in server-side workflows that integrate with AWS Cognito.",
      "description_length": 343,
      "index": 753,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.CreateIdentityPool",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the creation of a new identity pool in AWS Cognito Identity, providing the `request` function that takes a context and an input configuration. It works with input and output types specific to the identity pool creation operation, including error types for handling failure scenarios. It is used when setting up new identity pools with custom configurations, such as defining identity provider mappings and IAM roles.",
      "description_length": 436,
      "index": 754,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.SetIdentityPoolRoles",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles setting IAM roles for an identity pool in AWS Cognito. It accepts an identity pool ID and role mappings, then sends the configuration to AWS. Use it to define authenticated and unauthenticated role access for Cognito identity pools.",
      "description_length": 252,
      "index": 755,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.MergeDeveloperIdentities",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles merging developer identities in a Cognito identity pool by sending a request to the AWS service. It works with input and response structures specific to the merge operation, including identity IDs and pool configurations. It is used when consolidating user data across different identity providers in server-side authentication workflows.",
      "description_length": 358,
      "index": 756,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DescribeIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "This module provides a `request` function that sends a request to describe an identity in a Cognito identity pool, returning detailed information about the specified identity. It works with input types like `describe_identity_input` and produces output types such as `identity_description`, along with specific error types for handling failure cases. It is used to retrieve metadata about a Cognito identity, such as its creation date and associated provider, in applications integrating with AWS Cognito for user authentication and identity management.",
      "description_length": 553,
      "index": 757,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DeleteIdentityPool",
      "library": "smaws-clients.cognito-identity",
      "description": "Deletes an identity pool in AWS Cognito Identity, taking a context and input parameters. Handles errors such as invalid parameters, unauthorized access, and missing resources. Useful for managing identity pools during application shutdown or resource cleanup.",
      "description_length": 259,
      "index": 758,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetOpenIdTokenForDeveloperIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "This module issues OpenID tokens for developer identities in AWS Cognito. It handles token requests with explicit error cases like invalid parameters, resource conflicts, and user registration status. Use it to authenticate users in server-side workflows requiring temporary AWS credentials.",
      "description_length": 291,
      "index": 759,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UnlinkIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "Unlinks an identity from a user in a Cognito identity pool. It accepts a context and an unlink identity input, returning a result indicating success or a specific error such as invalid parameters or resource not found. This operation is used when removing federated identity associations in server-side workflows.",
      "description_length": 313,
      "index": 760,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetPrincipalTagAttributeMap",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles retrieving the principal tag attribute map for a given identity pool in AWS Cognito. It accepts a context and input specifying the identity pool ID and provider name, returning a result that includes either the attribute map or specific AWS service errors. It is used to manage federated identity attribute mappings in serverless or authenticated web applications.",
      "description_length": 384,
      "index": 761,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.ListIdentityPools",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles listing identity pools in AWS Cognito Identity by sending a request with a given context and input parameters. It processes the response or returns specific error types such as `InvalidParameterException` or `NotAuthorizedException`. Use this module to retrieve identity pool information from AWS Cognito, particularly when managing user authentication and identity management workflows.",
      "description_length": 407,
      "index": 762,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DeleteIdentities",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the deletion of user identities from a Cognito identity pool. It accepts a context and a list of identity IDs, then returns a result indicating success or failure with specific error types. It is used when managing user data cleanup or account deletion in server-side workflows.",
      "description_length": 298,
      "index": 763,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.TagResource",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles tagging operations for Cognito Identity resources, specifically allowing the addition of metadata tags to identity pools. It accepts a context and a `tag_resource_input` structure containing the resource ARN and tags, returning a result that indicates success or specific AWS service errors. It is used when managing identity pool metadata for cost allocation, access control, or resource organization in AWS Cognito Identity.",
      "description_length": 446,
      "index": 764,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.GetCredentialsForIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the retrieval of temporary AWS credentials for a user authenticated via Cognito Identity. It accepts a context and an input structure containing identity pool and user identifier details, returning either credentials or a specific error. It is used to securely grant federated users access to AWS services.",
      "description_length": 326,
      "index": 765,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UpdateIdentityPool",
      "library": "smaws-clients.cognito-identity",
      "description": "Updates an identity pool in Amazon Cognito with the provided configuration, returning the modified identity pool or an error if the update fails. It operates on `identity_pool` and `context` types, handling errors such as invalid parameters, resource conflicts, and concurrency issues. This function is used when modifying settings of an existing identity pool, such as updating IAM roles or identity provider configurations.",
      "description_length": 425,
      "index": 766,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.UnlinkDeveloperIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the unlinking of a developer identity from an identity pool in AWS Cognito. It accepts a context and an input structure containing identity and user identifier details, then returns a result indicating success or a specific error. Use this when managing user identities in server-side authentication workflows that integrate with Cognito Identity.",
      "description_length": 367,
      "index": 767,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.DescribeIdentityPool",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles the `DescribeIdentityPool` operation, which retrieves detailed information about a specific Amazon Cognito identity pool. It accepts a context and an input structure containing the identity pool ID, returning either the identity pool configuration or an error indicating issues like invalid parameters, authorization failures, or missing resources. It is used to inspect identity pool settings programmatically, such as retrieving supported login providers or IAM roles.",
      "description_length": 490,
      "index": 768,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity.SetPrincipalTagAttributeMap",
      "library": "smaws-clients.cognito-identity",
      "description": "This module handles setting principal tag attribute mappings in a Cognito identity pool, primarily used for fine-grained access control in AWS Cognito federated identities. It works with input and response structures specific to the `set_principal_tag_attribute_map` operation, including error types for handling AWS service responses. Concrete use cases include configuring tag-based permissions for authenticated users or roles in serverless applications or custom authentication flows.",
      "description_length": 488,
      "index": 769,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CognitoIdentity",
      "library": "smaws-clients.cognito-identity",
      "description": "This module provides operations for managing identity pools, linking and merging user identities, configuring role mappings, and handling resource tags in AWS Cognito Identity. It works with data structures like identity providers (SAML, OpenID), ARNs, principal tags, and credentials to support use cases such as federated authentication, access control configuration, and user identity synchronization across systems. Key workflows include identity pool creation with custom role assignments, token-based authentication, and metadata management for scalable user access policies.",
      "description_length": 581,
      "index": 770,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeDeliveryChannels",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `DescribeDeliveryChannels` operation in AWS Config Service, retrieving configuration details for specified delivery channels. It works with AWS context, request, and response structures, including error types like `NoSuchDeliveryChannelException`. A concrete use case is querying delivery channel status and settings for compliance monitoring or logging configuration audits.",
      "description_length": 399,
      "index": 771,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConfigRuleStatuses",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve the status of organization configuration rules, providing detailed information on their compliance and evaluation states. It works with AWS Config Service's organization config rule data structures, including rule names, compliance statuses, and error details. Concrete use cases include monitoring organizational compliance across multiple AWS accounts and identifying configuration issues in governed resources.",
      "description_length": 454,
      "index": 772,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteOrganizationConformancePack",
      "library": "smaws-clients.config-service",
      "description": "Deletes an organization conformance pack from AWS Config Service using the provided context and request parameters. It handles specific AWS errors such as missing conformance packs, access denial, and resource use conflicts. This function is used when removing centralized configuration rules across an AWS organization.",
      "description_length": 320,
      "index": 773,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.TagResource",
      "library": "smaws-clients.config-service",
      "description": "Handles tagging operations for AWS Config Service resources by sending tag assignment requests. Works with AWS context and tag request data structures, returning unit on success or specific AWS error types. Used to associate metadata tags with AWS configuration items like resources or compliance rules.",
      "description_length": 303,
      "index": 774,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeAggregationAuthorizations",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to describe aggregation authorizations in AWS Config, providing structured access to responses and error handling for invalid parameters, limits, or pagination tokens. Works with AWS context, request, and response types specific to Config's aggregation authorization API. Useful for querying cross-account configuration aggregation permissions with precise error diagnostics.",
      "description_length": 392,
      "index": 775,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateDiscoveredResourceCounts",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve aggregated counts of discovered resources across accounts and regions. It processes a configuration request context and returns either a response with resource counts or specific AWS service errors. It is used to monitor compliance and resource distribution in multi-account AWS environments.",
      "description_length": 332,
      "index": 776,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConfigurationAggregator",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutConfigurationAggregator` API request, sending configuration aggregator data to AWS Config and returning the service's response or specific error types. It works with AWS context, request, and response structures, along with detailed exception types such as `InvalidParameterValueException` and `LimitExceededException`. It is used when setting up or updating a configuration aggregator in AWS Config, particularly in multi-account setups requiring centralized data collection.",
      "description_length": 504,
      "index": 777,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve aggregate resource configuration details by accepting a context and a specific request structure. It processes the query and returns either a response containing the configuration data or an error indicating issues like missing aggregators, oversized items, undiscovered resources, or validation failures. It is used when querying aggregated configuration information for resources across multiple accounts or regions.",
      "description_length": 459,
      "index": 778,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartRemediationExecution",
      "library": "smaws-clients.config-service",
      "description": "This module handles the initiation of remediation executions within a configuration service context. It processes a request using a context and returns a result indicating success or specific error conditions such as invalid parameters or missing configurations. It operates on types like `start_remediation_execution_request` and `start_remediation_execution_response`.",
      "description_length": 370,
      "index": 779,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartConfigRulesEvaluation",
      "library": "smaws-clients.config-service",
      "description": "This module handles the initiation of configuration rule evaluations in AWS Config, triggering evaluations for specified rules. It works with AWS context data and structured request/response types for evaluation tasks. Use this module to programmatically start rule evaluations when managing compliance checks or configuration audits in AWS environments.",
      "description_length": 354,
      "index": 780,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.BatchGetResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "Handles batch retrieval of resource configurations by accepting a context and request object. It processes queries for multiple resource configurations in a single call, returning either a response with configuration details or specific error types. Useful for auditing or inventory systems that need to collect configuration data for multiple AWS resources efficiently.",
      "description_length": 370,
      "index": 781,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutRemediationExceptions",
      "library": "smaws-clients.config-service",
      "description": "This module handles the submission of remediation exceptions in AWS Config by sending a request to the service and returning a result with either a success response or specific error types. It operates on AWS context and request/response data structures defined in the ConfigService library. A concrete use case is submitting exceptions for AWS Config rules that require manual approval to skip automatic remediation.",
      "description_length": 417,
      "index": 782,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetStoredQuery",
      "library": "smaws-clients.config-service",
      "description": "This module handles retrieving stored queries from a configuration service. It accepts a context and a request, returning a result that either contains the stored query response or an error such as `ResourceNotFoundException` or `ValidationException`. It is used when querying predefined configurations stored in the service, for example, to retrieve saved query templates for execution.",
      "description_length": 387,
      "index": 783,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutAggregationAuthorization",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutAggregationAuthorization` API request for Config Service, sending aggregation authorization data and returning the response or an error. It operates on `Smaws_Lib.Context.t` and `put_aggregation_authorization_request` types, producing a result with either a `put_aggregation_authorization_response` or specific AWS JSON errors. A concrete use case is configuring cross-account aggregation authorization in AWS Config.",
      "description_length": 445,
      "index": 784,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "Deletes a resource configuration using a provided context and request, returning an error or unit result. Works with AWS JSON error types and specific exceptions like `NoRunningConfigurationRecorderException` and `ValidationException`. Used to remove configuration records for AWS resources when a recorder is active and inputs are valid.",
      "description_length": 338,
      "index": 785,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListTagsForResource",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `list_tags_for_resource` operation, sending a request to retrieve tags associated with a specific resource. It works with AWS Config Service resources, using identifiers like ARNs to fetch metadata tags. The function returns either a response with the tags or an error indicating issues like invalid input, resource not found, or limit constraints.",
      "description_length": 372,
      "index": 786,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetOrganizationCustomRulePolicy",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve the policy document for an organization's custom Config rule. It handles responses and specific AWS exceptions like missing rules or access denial. Use it when managing or inspecting Config rule policies across AWS organization accounts.",
      "description_length": 277,
      "index": 787,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceDetailsByResource",
      "library": "smaws-clients.config-service",
      "description": "This module handles retrieving compliance details for a specified AWS resource using a structured request. It processes the query within a given context and returns either a compliance details response or an error indicating invalid parameters or AWS-specific issues. Use this to check the compliance status of resources like EC2 instances or S3 buckets against AWS Config rules.",
      "description_length": 379,
      "index": 788,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetOrganizationConformancePackDetailedStatus",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve detailed status information for organization conformance packs, handling pagination and specific error conditions such as invalid limits, missing conformance packs, and access restrictions. It operates on AWS configuration service request and response structures, integrating with the broader AWS SDK for OCaml. Concrete use cases include auditing compliance status across organization accounts and retrieving paginated results for monitoring and reporting.",
      "description_length": 497,
      "index": 789,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationAggregators",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to describe configuration aggregators, returning results or specific AWS service errors like invalid parameter values or missing aggregators. It operates on AWS context and request/response data structures tailored for configuration aggregation queries. Use it to retrieve details about existing configuration aggregators in AWS Config, including pagination and filtering parameters.",
      "description_length": 412,
      "index": 790,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteEvaluationResults",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of evaluation results for a configuration rule in AWS Config. It processes a delete request within a given context and returns a result indicating success or specific error conditions such as the rule not existing or being in use. It works with AWS configuration rule identifiers and handles responses defined in the AWS JSON protocol.",
      "description_length": 368,
      "index": 791,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetConformancePackComplianceSummary",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve compliance summaries for AWS Config conformance packs. It processes input contexts and request structures to produce compliance data or specific error types such as `InvalidLimitException` and `NoSuchConformancePackException`. It is used to assess the compliance status of conformance packs within AWS Config, providing direct access to aggregated compliance results and error conditions.",
      "description_length": 428,
      "index": 792,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRemediationConfigurations",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve remediation configurations from AWS Config Service. It processes input contexts and request objects to produce either a response with configuration details or an AWS JSON protocol error. It is used to query specific remediation actions associated with AWS resources.",
      "description_length": 307,
      "index": 793,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetConformancePackComplianceDetails",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve compliance details for conformance packs in AWS Config, handling pagination and parameter validation. It processes input such as conformance pack names, config rule names, and limits, returning compliance evaluation results or specific AWS service errors. It is used to audit and enforce compliance of AWS resources against defined configuration rules.",
      "description_length": 392,
      "index": 794,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartResourceEvaluation",
      "library": "smaws-clients.config-service",
      "description": "This module handles the initiation of resource evaluations within a configuration service, providing a `request` function that sends evaluation requests and returns responses indicating success or specific error conditions. It works with context data, evaluation requests, and responses that include identifiers for tracking and handling idempotency or parameter validation issues. Concrete use cases include triggering configuration compliance checks for cloud resources and managing evaluation workflows with idempotent retries.",
      "description_length": 530,
      "index": 795,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutStoredQuery",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to store or update a query in AWS Config by sending a query name, expression, and description. Works with AWS context data and structured query input to return a success status or specific error types like validation or concurrency issues. Useful for persisting custom configuration queries in AWS environments.",
      "description_length": 328,
      "index": 796,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteAggregationAuthorization",
      "library": "smaws-clients.config-service",
      "description": "Handles deletion of aggregation authorizations in AWS Config by sending a request to remove a specified authorization. Works with context and request data types specific to AWS Config's aggregation setup. Useful for revoking cross-account configuration aggregation permissions programmatically.",
      "description_length": 294,
      "index": 797,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteOrganizationConfigRule",
      "library": "smaws-clients.config-service",
      "description": "Deletes an organization configuration rule in AWS Config Service. It takes a context and a delete request, returning a result indicating success or specific AWS errors. Useful for removing centralized configuration rules applied across an AWS organization.",
      "description_length": 256,
      "index": 798,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConfigRule",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to update or create AWS Config rules, handling validation and permission errors. It operates on configuration rule requests and interacts with AWS services using context and error types specific to the Config service. Use this module to programmatically manage Config rules in AWS environments, such as enforcing compliance policies or auditing resource configurations.",
      "description_length": 397,
      "index": 799,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteStoredQuery",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of stored queries in the ConfigService by sending a request to remove a specified query. It works with the `delete_stored_query_request` type to identify the query to delete and returns a result indicating success or failure, including specific error types like `ResourceNotFoundException` and `ValidationException`. A concrete use case is removing outdated or invalid stored queries to maintain clean and accurate configuration data.",
      "description_length": 467,
      "index": 800,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutOrganizationConformancePack",
      "library": "smaws-clients.config-service",
      "description": "This module handles the AWS Config Service operation to create or update an organization conformance pack. It sends a request with organization-wide configuration rules and returns a response indicating success or a specific error such as validation failure, access denial, or resource limits. It works directly with AWS context, request, and response structures specific to organization conformance packs.",
      "description_length": 406,
      "index": 801,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutRemediationConfigurations",
      "library": "smaws-clients.config-service",
      "description": "This module handles the submission of remediation configurations to AWS Config Service. It sends a request to update remediation settings for specified AWS resources and returns a result indicating success or specific error conditions like invalid parameters or insufficient permissions. The primary data types involved are the remediation configuration request and response structures defined in the ConfigService module.",
      "description_length": 422,
      "index": 802,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRemediationExecutionStatus",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to describe the status of remediation executions in AWS Config Service. It handles responses and specific errors like invalid tokens, parameter values, or missing remediation configurations. Use it to check the progress or outcome of automated remediation actions triggered by configuration rules.",
      "description_length": 325,
      "index": 803,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetDiscoveredResourceCounts",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve counts of discovered resources, handling pagination and filtering by resource types. It processes input contexts and request parameters to return resource count data or specific AWS service errors. Use it to query AWS Config for aggregated resource counts across an account or organization.",
      "description_length": 330,
      "index": 804,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListAggregateDiscoveredResources",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to list aggregated discovered resources in AWS Config, providing pagination and filtering capabilities. It works with context and request/response data structures specific to AWS Config's aggregation functionality. A concrete use case is retrieving cross-account AWS resource inventories filtered by resource type or compliance status.",
      "description_length": 364,
      "index": 805,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutOrganizationConfigRule",
      "library": "smaws-clients.config-service",
      "description": "This module handles the AWS Config Service operation to put an organization config rule, interacting with organization-wide configuration rules. It works with request and response structures specific to AWS Config's organization config rules, including error types for common AWS service exceptions. Concrete use cases include creating or updating organization-level AWS Config rules to enforce compliance policies across all accounts in an AWS Organization.",
      "description_length": 458,
      "index": 806,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListResourceEvaluations",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to list resource evaluations by accepting a context and a structured request, returning a result that includes either a response or specific error types. It works with AWS context, request/response structures, and custom exceptions like `InvalidNextTokenException`. It is used to retrieve resource evaluation data from AWS Config, handling pagination and parameter validation errors.",
      "description_length": 412,
      "index": 807,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteRemediationExceptions",
      "library": "smaws-clients.config-service",
      "description": "Deletes remediation exceptions for specified configuration rules and resource identifiers. Works with AWS Config Service data types, including rule names and resource IDs. Useful for removing non-compliant exceptions after resources have been remediated.",
      "description_length": 254,
      "index": 808,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeAggregateComplianceByConformancePacks",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve aggregate compliance status for conformance packs across multiple AWS accounts and regions. It accepts a context and a request object containing parameters like configuration aggregator name, limit, and next token, returning either a compliance response or specific AWS service errors. It is used to assess the compliance state of conformance packs in a centralized AWS Config setup.",
      "description_length": 424,
      "index": 809,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigRuleEvaluationStatus",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve the evaluation status of a configuration rule, including details like last evaluation time and compliance status. It works with AWS Config Service's configuration rule identifiers and pagination tokens. Use this to monitor or audit the compliance state of AWS resources governed by specific configuration rules.",
      "description_length": 352,
      "index": 810,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StopConfigurationRecorder",
      "library": "smaws-clients.config-service",
      "description": "This module provides a function to stop a configuration recorder in AWS Config by sending a request to disable it. It works with the context type and a stop configuration recorder request, returning a result indicating success or failure. A concrete use case is halting the recording of configuration changes for compliance monitoring when it is no longer needed.",
      "description_length": 363,
      "index": 811,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.BatchGetAggregateResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "This module handles batch requests to retrieve aggregate resource configurations, providing a `request` function that processes context and request parameters to return configuration data or specific AWS errors. It works with resource configuration requests and responses, including error types like `NoSuchConfigurationAggregatorException` and `ValidationException`. Use this module to efficiently fetch combined configuration details for multiple resources across AWS accounts.",
      "description_length": 479,
      "index": 812,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConformancePacks",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to describe conformance packs in AWS Config, providing detailed information about their configuration and compliance status. Works with AWS context and specific request/response structures for conformance pack queries. Used to retrieve conformance pack details, including compliance results across AWS resources.",
      "description_length": 329,
      "index": 813,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutResourceConfig` API request for the ConfigService, sending resource configuration data to AWS Config. It works with the `Context.t` type for authentication and a `put_resource_config_request` record containing resource details. It returns a result indicating success or specific AWS Config service errors like validation failures or exceeding resource limits.",
      "description_length": 387,
      "index": 814,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConformancePack",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of a conformance pack in AWS Config Service. It takes a context and a delete conformance pack request, returning a result indicating success or specific errors such as the pack not existing or being in use. It works directly with conformance pack identifiers and AWS error types.",
      "description_length": 312,
      "index": 815,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRetentionConfigurations",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve retention configurations from a service, using a provided context and request parameters. It processes queries that may involve pagination or parameter validation, returning either a response with configuration details or specific error types. Use this when querying retention policies configured in the target system, such as for log or data retention settings.",
      "description_length": 403,
      "index": 816,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeComplianceByResource",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to retrieve compliance status for AWS Config resources, accepting a context and a `describe_compliance_by_resource_request` input. It returns a result containing either a `describe_compliance_by_resource_response` or specific error types such as `InvalidNextTokenException` or `InvalidParameterValueException`. This function is used to check compliance of specific resources against AWS Config rules, useful in auditing and compliance workflows.",
      "description_length": 462,
      "index": 817,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutDeliveryChannel",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutDeliveryChannel` operation for AWS Config Service, sending delivery channel configuration requests and returning unit on success or specific AWS error types on failure. It works with AWS context and request/response structures defined in the `Smaws_Client_ConfigService` module. Use this module to configure delivery channels for AWS Config data, handling errors like invalid S3 buckets, KMS keys, or exceeding delivery channel limits.",
      "description_length": 463,
      "index": 818,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateComplianceDetailsByConfigRule",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve compliance details for AWS Config rules across aggregated accounts. It processes a context and a structured request to return compliance data or specific AWS service errors. It is used to assess the compliance status of AWS resources against defined configuration rules in a multi-account setup.",
      "description_length": 335,
      "index": 819,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListStoredQueries",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to list stored queries in AWS Config Service. It sends a `list_stored_queries_request` and returns either a `list_stored_queries_response` or specific error types like `InvalidNextTokenException` or `ValidationException`. Useful for retrieving predefined queries used in configuration analysis workflows.",
      "description_length": 321,
      "index": 820,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConformancePack",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutConformancePack` API operation for AWS Config Service, validating and deploying conformance packs. It processes requests with contextual information and returns either a success response or specific error types like template validation failures or permission issues. Use this module to enforce AWS Config compliance policies by creating or updating conformance packs programmatically.",
      "description_length": 412,
      "index": 821,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribePendingAggregationRequests",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to describe pending aggregation requests in a configuration service. It processes input parameters and returns a result containing either a response with pending aggregation data or specific error types like invalid limit or token exceptions. It is used to retrieve and manage aggregation request states in distributed systems.",
      "description_length": 356,
      "index": 822,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetResourceConfigHistory",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve the configuration history of a specified AWS resource, handling pagination and time-range constraints. It processes input parameters like resource identifiers, time intervals, and result limits, returning a structured response with configuration records or specific error types. Use it to audit or track changes to resources such as EC2 instances or S3 buckets over time.",
      "description_length": 411,
      "index": 823,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConfigRules",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to describe organization configuration rules, returning rule details or errors like invalid limits, invalid next tokens, missing rules, or access denial. It operates on AWS context and configuration service request/response types. Use it to retrieve compliance rules across AWS organizational accounts.",
      "description_length": 331,
      "index": 824,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateConfigRuleComplianceSummary",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve compliance summaries for AWS Config rules across aggregated accounts. It processes a context and a structured request to fetch paginated compliance data, handling errors like invalid limits, missing aggregators, or malformed tokens. Use it to monitor cross-account compliance status for specific AWS Config rules in large-scale AWS environments.",
      "description_length": 385,
      "index": 825,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceSummaryByConfigRule",
      "library": "smaws-clients.config-service",
      "description": "This module issues a request to retrieve compliance summary data for a specific configuration rule. It operates within a context and returns a result containing either the compliance summary response or an AWS JSON protocol error. It is used to assess compliance status for AWS Config rules programmatically.",
      "description_length": 308,
      "index": 826,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigRules",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to describe AWS Config rules, returning rule details or errors like invalid parameters or missing rules. It works with AWS context, request, and response structures specific to ConfigService. Use it to retrieve configuration compliance rules from AWS Config, handling pagination and validation errors directly.",
      "description_length": 339,
      "index": 827,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.UntagResource",
      "library": "smaws-clients.config-service",
      "description": "Removes specified tags from a resource in the ConfigService API. Works with context and untag resource request data structures. Used to manage resource metadata by tag keys in AWS ConfigService workflows.",
      "description_length": 204,
      "index": 828,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConformancePackStatus",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to retrieve the status of conformance packs in AWS Config, providing detailed information on compliance and evaluation results. Works with AWS context objects and structured request/response types for conformance pack status queries. Useful for monitoring and auditing configuration compliance across AWS resources.",
      "description_length": 332,
      "index": 829,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteDeliveryChannel",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of a delivery channel in AWS Config Service. It provides the `request` function to send a deletion request, accepting a context and a delete delivery channel request. The function returns a result indicating success or specific errors like the last delivery channel deletion failure or non-existent delivery channel.",
      "description_length": 349,
      "index": 830,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationAggregatorSourcesStatus",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve the status of configuration aggregator sources, returning either a response with status details or specific error types like invalid parameter values or missing aggregators. It operates on context and request/response structures defined in the ConfigService library. Use this to check the health or status of configuration sources in AWS Config aggregations.",
      "description_length": 399,
      "index": 831,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutRetentionConfiguration",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to configure retention settings for AWS Config Service, handling responses or specific error conditions. It operates on retention configuration requests and responses, including exceptions for invalid parameters or exceeding configuration limits. A concrete use case is setting up retention policies for configuration history in AWS environments.",
      "description_length": 374,
      "index": 832,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeAggregateComplianceByConfigRules",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve aggregate compliance status for AWS Config rules across multiple accounts and regions. It works with structured AWS Config service data types, including compliance results, configuration aggregators, and error responses. Concrete use cases include auditing multi-account compliance and identifying non-compliant resources at scale.",
      "description_length": 372,
      "index": 833,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeletePendingAggregationRequest",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of pending aggregation requests in the Config Service by sending a request with the provided context and request parameters. It works with the `Context.t` type and a `delete_pending_aggregation_request_request` structure, returning a result that indicates success or an error such as invalid parameter values. A concrete use case is removing a previously submitted aggregation request that has not yet been processed.",
      "description_length": 450,
      "index": 834,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceDetailsByConfigRule",
      "library": "smaws-clients.config-service",
      "description": "This module handles retrieving compliance details for a specific configuration rule by sending a request and returning a result with either the compliance details or an error. It works with context data, configuration rule identifiers, and structured error types like `InvalidNextTokenException` or `NoSuchConfigRuleException`. It is used to check the compliance status of AWS resources against a named configuration rule in AWS Config.",
      "description_length": 436,
      "index": 835,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetOrganizationConfigRuleDetailedStatus",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve the detailed status of an organization's configuration rule, handling pagination and specific AWS error responses. It processes input contexts and request parameters to fetch results or return structured error types like `InvalidLimitException` and `NoSuchOrganizationConfigRuleException`. Use this to monitor compliance statuses across organization accounts in AWS Config.",
      "description_length": 413,
      "index": 836,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeliverConfigSnapshot",
      "library": "smaws-clients.config-service",
      "description": "This module handles the delivery of a configuration snapshot by sending a request to initiate the snapshot process and returning a result indicating success or specific failure conditions. It works with context and configuration snapshot request/response types, including error types for missing or inactive configuration recorders and delivery channels. A concrete use case is triggering a manual delivery of the current configuration state to a specified S3 bucket for auditing or compliance purposes.",
      "description_length": 503,
      "index": 837,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteRetentionConfiguration",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of a retention configuration in AWS Config Service. It takes a context and a delete retention configuration request, returning a result indicating success or an error such as invalid parameters or a missing configuration. It works directly with AWS JSON error types and specific exception variants for retention configuration deletion.",
      "description_length": 368,
      "index": 838,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConformancePackCompliance",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to describe conformance pack compliance in a configuration service, providing detailed compliance status for AWS Config rules within a specified conformance pack. It works with structured request and response types that include parameters like conformance pack name, limit, and next token, returning either a compliance response or specific error types such as `NoSuchConformancePackException`. It is used to programmatically retrieve compliance details for configuration rules in AWS environments.",
      "description_length": 527,
      "index": 839,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeRemediationExceptions",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to describe remediation exceptions in a configuration service, providing a function to send a query with context and receive a result containing either a response or specific error types. It works with structured request and response types, including error cases like invalid next token or parameter value exceptions. A concrete use case is retrieving exceptions for compliance rules in a configuration management system.",
      "description_length": 450,
      "index": 840,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConformancePacks",
      "library": "smaws-clients.config-service",
      "description": "This module handles the request to describe organization conformance packs in AWS Config Service. It works with context and request/response types specific to the Config Service, including handling errors like invalid limits, invalid next tokens, and access denied exceptions. It is used to retrieve details about organization conformance packs in a structured format.",
      "description_length": 368,
      "index": 841,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConfigurationRecorder",
      "library": "smaws-clients.config-service",
      "description": "Handles deletion of a configuration recorder in AWS Config by sending a deletion request. Works with context and request data types specific to the Config service. Used when removing a configuration recorder by name in an AWS environment.",
      "description_length": 238,
      "index": 842,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutEvaluations",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutEvaluations` API request for AWS Config Service, sending evaluation results for configuration rules. It works with context data and structured request/response types specific to AWS Config. Use this module to submit compliance evaluations for custom AWS Config rules programmatically.",
      "description_length": 312,
      "index": 843,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationRecorders",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to retrieve configuration recorder details from AWS Config. It accepts a context and a request object, returning either a response with recorder information or an error if the recorder doesn't exist. This function is used when querying the status or existence of specific configuration recorders in AWS.",
      "description_length": 320,
      "index": 844,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListConformancePackComplianceScores",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to retrieve conformance pack compliance scores, accepting a context and a structured request with parameters. It returns a result containing either the compliance scores response or specific AWS service errors like invalid parameter or limit exceptions. This function is used to query AWS Config Service for compliance data, enabling programmatic access to conformance pack evaluation results.",
      "description_length": 410,
      "index": 845,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeOrganizationConformancePackStatuses",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve the status of organization conformance packs in AWS Config Service. It works with context and request/response data types specific to the Config Service, including error types like `InvalidLimitException` and `OrganizationAccessDeniedException`. It is used to monitor compliance status across organization accounts in AWS.",
      "description_length": 363,
      "index": 846,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConfigurationAggregator",
      "library": "smaws-clients.config-service",
      "description": "Deletes a configuration aggregator by name, handling errors such as missing aggregators. Works with AWS context and service-specific request/response types. Useful for cleaning up unused configuration aggregators in AWS Config.",
      "description_length": 227,
      "index": 847,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.SelectResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "This module handles the execution of resource configuration queries against AWS Config, enabling filtering and selection based on resource types and constraints. It works with structured request and response types defined in the `Smaws_Client_ConfigService`, including support for error handling via result types that capture specific AWS service exceptions. Concrete use cases include querying AWS resource configurations with expressions, pagination, and custom limits in automated infrastructure validation or auditing workflows.",
      "description_length": 532,
      "index": 848,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteConfigRule",
      "library": "smaws-clients.config-service",
      "description": "Deletes a specified configuration rule within a given context, handling errors such as missing rules or resource conflicts. Works directly with AWS JSON error types and configuration rule identifiers. Useful for removing outdated or unused configuration rules in AWS Config.",
      "description_length": 274,
      "index": 849,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DeleteRemediationConfiguration",
      "library": "smaws-clients.config-service",
      "description": "This module handles the deletion of remediation configurations in AWS Config Service. It provides a `request` function that sends a deletion request and returns a result indicating success or specific error conditions like invalid parameters or missing configurations. It works with AWS context, request/response types, and error variants specific to remediation configuration deletion.",
      "description_length": 386,
      "index": 850,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.StartConfigurationRecorder",
      "library": "smaws-clients.config-service",
      "description": "This module handles the initialization of a configuration recorder in AWS Config, sending a request to start recording configuration changes for specified resources. It works with context and request data types specific to the Config service, including handling errors like missing delivery channels or invalid recorders. A concrete use case involves enabling continuous configuration tracking for compliance monitoring in cloud environments.",
      "description_length": 442,
      "index": 851,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetComplianceSummaryByResourceType",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve compliance summaries for specific resource types, handling responses or errors from the service. It operates on context and request data structures to fetch compliance state details. A typical use case involves querying compliance status for AWS resources like EC2 instances or S3 buckets by resource type.",
      "description_length": 346,
      "index": 852,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeComplianceByConfigRule",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to describe compliance status for AWS Config rules, handling responses or specific error cases like invalid tokens, parameter values, or missing rules. It operates on configuration rule identifiers and compliance filters, returning structured compliance data. It is used to assess resource compliance against defined AWS Config policies.",
      "description_length": 365,
      "index": 853,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeDeliveryChannelStatus",
      "library": "smaws-clients.config-service",
      "description": "Handles requests to retrieve the status of a delivery channel in AWS Config Service. It works with context and response data types specific to the Config Service, including error types like `NoSuchDeliveryChannelException`. This module is used to check whether a delivery channel is active, paused, or in an error state, typically for monitoring or troubleshooting delivery issues.",
      "description_length": 381,
      "index": 854,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.ListDiscoveredResources",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `ListDiscoveredResources` API operation for the Config Service, allowing retrieval of resources recorded by a configuration recorder. It works with request and response structures specific to resource discovery, including pagination and filtering parameters. Use this module to query AWS Config for a list of resources that have been recorded, with support for handling common service-specific errors like invalid limits or missing configuration recorders.",
      "description_length": 480,
      "index": 855,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutExternalEvaluation",
      "library": "smaws-clients.config-service",
      "description": "This module handles the `PutExternalEvaluation` API request for a configuration service, sending evaluation results for AWS Config rules. It works with context data and structured request/response types specific to external evaluations. Use this module to submit compliance evaluations for custom AWS Config rules programmatically.",
      "description_length": 331,
      "index": 856,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ConfigService.PutConfigurationRecorder",
      "library": "smaws-clients.config-service",
      "description": "Sends a request to configure a configuration recorder in AWS Config, handling validation and error responses. It works with AWS context and configuration recorder request data types. Use this to enable or update configuration recording in AWS environments programmatically.",
      "description_length": 273,
      "index": 857,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetResourceEvaluationSummary",
      "library": "smaws-clients.config-service",
      "description": "This module handles the retrieval of resource evaluation summaries by sending a request to evaluate compliance data for specific AWS resources. It works with evaluation summary responses and errors such as `ResourceNotFoundException`. A concrete use case is querying compliance status for a specific AWS resource within a configuration service.",
      "description_length": 344,
      "index": 858,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.DescribeConfigurationRecorderStatus",
      "library": "smaws-clients.config-service",
      "description": "This module handles requests to retrieve the status of a configuration recorder in AWS Config. It accepts a context and a request object, returning a result that includes either the status response or specific errors like `NoSuchConfigurationRecorderException`. It is used to check whether a configuration recorder is currently recording, pending, or stopped.",
      "description_length": 359,
      "index": 859,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetAggregateConformancePackComplianceSummary",
      "library": "smaws-clients.config-service",
      "description": "This module issues requests to retrieve compliance summaries for conformance packs across aggregated configuration data. It processes a context and a structured request, returning a result that either contains the compliance summary response or an error indicating issues like invalid limits, missing aggregators, or validation failures. It works directly with AWS configuration service requests and responses, handling specific error types related to data retrieval constraints and configuration state.",
      "description_length": 503,
      "index": 860,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.SelectAggregateResourceConfig",
      "library": "smaws-clients.config-service",
      "description": "This module executes requests to select aggregate resource configurations, handling specific AWS Config Service exceptions. It works with context and request/response types defined in the Config Service protocol. A concrete use case is querying aggregated resource data across AWS accounts and regions using a predefined configuration aggregator.",
      "description_length": 346,
      "index": 861,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService.GetCustomRulePolicy",
      "library": "smaws-clients.config-service",
      "description": "This module handles retrieving a custom rule policy from AWS Config Service by sending a request with a provided context and rule identifier. It works with AWS-specific data structures for configuration rules, including policy documents and error types like `NoSuchConfigRuleException`. A concrete use case is fetching the policy associated with a specific AWS Config rule to validate or audit resource compliance.",
      "description_length": 414,
      "index": 862,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ConfigService",
      "library": "smaws-clients.config-service",
      "description": "This module supports operations for managing AWS Config Service tasks like resource tagging, compliance evaluation, configuration recording, and remediation workflows. It works with data structures such as resource identifiers, tags, compliance summaries, conformance packs, delivery channels, and configuration rules. Specific use cases include auditing resource configurations, enforcing compliance policies across accounts, automating remediation actions, and aggregating compliance data for multi-region or organization-wide visibility.",
      "description_length": 540,
      "index": 863,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetComplianceSummary",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles retrieving compliance summary data for resource groups, specifically through the `request` function that sends a query to the tagging API. It processes inputs like filters and returns structured outputs including compliance status and errors. Use it to assess tag compliance across AWS resources, handling exceptions like throttling or invalid parameters.",
      "description_length": 375,
      "index": 864,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.DescribeReportCreation",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles the `DescribeReportCreation` operation for the Resource Groups Tagging API, providing a function to request the status of a report creation process. It works with input and output structures specific to the AWS Resource Groups Tagging API, including error types like `ConstraintViolationException` and `ThrottledException`. A concrete use case is checking the progress or failure reason of a previously initiated report creation task in AWS.",
      "description_length": 461,
      "index": 865,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.StartReportCreation",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module issues requests to initiate report creation for resource groups tagging, handling specific AWS service errors. It operates on input and output structures defined in the `Smaws_Client_ResourceGroupsTaggingAPI` module. A typical use case involves triggering a report generation task and handling potential failures such as throttling or invalid parameters.",
      "description_length": 366,
      "index": 866,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.UntagResources",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles the untagging of AWS resources by accepting a context and an input structure specifying resource ARNs and tag keys. It returns a result indicating success or an error such as invalid parameters, internal service issues, or throttling. Use this when removing specific tags from multiple AWS resources in the Resource Groups Tagging API.",
      "description_length": 355,
      "index": 867,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetTagKeys",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles retrieving tag keys from AWS Resource Groups Tagging API. It sends a request using context and input parameters, returning a result with either the output data or specific AWS error types. Use it to list all tag keys in an AWS account for resource management or cost allocation.",
      "description_length": 298,
      "index": 868,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetResources",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles retrieving tagged resources using AWS's Resource Groups Tagging API. It processes requests with input parameters like region filters and pagination tokens, returning structured output with resource details or error types such as throttling or invalid parameters. It is used to query and manage AWS resource metadata, particularly for cost allocation or resource organization based on tags.",
      "description_length": 409,
      "index": 869,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.TagResources",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles tagging of AWS resources by accepting a context and input parameters, then executing the tag operation. It works with AWS resource identifiers and tag key-value pairs, returning success or specific error types like throttling or invalid parameters. It is used to apply tags to resources in services like EC2, S3, or RDS for cost allocation or organizational purposes.",
      "description_length": 387,
      "index": 870,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI.GetTagValues",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module handles retrieving tag values from AWS Resource Groups Tagging API by sending a structured request with a context and input parameters. It processes responses into a result type, including success outputs or specific AWS error types like `InternalServiceException` and `ThrottledException`. It is used to query available values for a given tag key across AWS resources, supporting paginated results and error handling for common AWS service issues.",
      "description_length": 460,
      "index": 871,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ResourceGroupsTaggingAPI",
      "library": "smaws-clients.resource-groups-tagging-api",
      "description": "This module provides operations for managing AWS resource tags by ARN, assessing compliance with tagging policies, and generating reports on tag usage and compliance status. It works with data structures representing tags, resource mappings, compliance summaries, and paginated query results, while supporting error handling for AWS-specific issues like throttling and invalid inputs. These capabilities are used to enforce tagging governance across multiple AWS services, track resource metadata, and produce audit-ready documentation.",
      "description_length": 536,
      "index": 872,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.DeleteKeyspace",
      "library": "smaws-clients.keyspaces",
      "description": "Deletes a keyspace in Amazon Keyspaces using a provided context and request configuration. Handles errors specific to keyspace deletion, such as resource not found, access denied, and conflict exceptions. Used when removing an existing keyspace as part of infrastructure management or cleanup tasks.",
      "description_length": 299,
      "index": 873,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.CreateKeyspace",
      "library": "smaws-clients.keyspaces",
      "description": "This module issues requests to create keyspaces in Amazon Keyspaces, handling responses and specific error conditions like access denial, conflicts, and validation failures. It operates on context and request/response types defined in the Smaws_Client_Keyspaces library. Use this module when programmatically provisioning new keyspaces with custom configurations in AWS.",
      "description_length": 370,
      "index": 874,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.DeleteTable",
      "library": "smaws-clients.keyspaces",
      "description": "Deletes a table from a keyspace in AWS Keyspaces. It takes a context and a delete table request, returning a result with the response or specific error types. This module is used to remove a table when its name and keyspace are known, handling common failure scenarios like missing resources or validation errors.",
      "description_length": 313,
      "index": 875,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.GetKeyspace",
      "library": "smaws-clients.keyspaces",
      "description": "This module issues requests to retrieve keyspace information from Amazon Keyspaces, handling responses and specific error conditions like access denial, resource not found, and validation failures. It operates on AWS context and structured request/response types defined in the Smaws_Client_Keyspaces module. Use this to fetch details about a specific keyspace within an AWS environment, such as during configuration validation or monitoring workflows.",
      "description_length": 452,
      "index": 876,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.UpdateTable",
      "library": "smaws-clients.keyspaces",
      "description": "Performs an update operation on a table in a keyspace, modifying its schema or configuration. It handles requests with context and returns a result indicating success or specific error conditions like conflicts, validation failures, or resource not found. This module is used when altering table definitions in Amazon Keyspaces, such as changing column types or adjusting capacity settings.",
      "description_length": 390,
      "index": 877,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.GetTableAutoScalingSettings",
      "library": "smaws-clients.keyspaces",
      "description": "This module handles retrieving auto-scaling settings for a specific table in Amazon Keyspaces. It sends a request using the provided context and returns either the auto-scaling response or an error indicating issues like access denial, resource not found, or validation failure. It is used when monitoring or adjusting the scaling behavior of a Keyspaces table in response to workload changes.",
      "description_length": 393,
      "index": 878,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.ListKeyspaces",
      "library": "smaws-clients.keyspaces",
      "description": "This module issues requests to list keyspaces in a given context, handling errors such as access denial, internal server issues, and validation failures. It operates on AWS JSON protocol structures, specifically working with context, request, and response types tied to keyspaces management. A typical use case involves querying available keyspaces within an AWS environment to manage and validate database configurations programmatically.",
      "description_length": 439,
      "index": 879,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.UntagResource",
      "library": "smaws-clients.keyspaces",
      "description": "Removes tags from a specified resource by sending an untagging request. Works with AWS Keyspaces resource identifiers and tag keys. Used when managing resource metadata in Amazon Keyspaces to clean up or reorganize tagged resources.",
      "description_length": 232,
      "index": 880,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.CreateTable",
      "library": "smaws-clients.keyspaces",
      "description": "This module handles the creation of tables in a keyspace by sending a request with table configuration and returning a result indicating success or a specific error. It works with data types representing table requests, responses, and various error conditions like conflicts or validation failures. Use this module when defining new tables with specific schema and settings in a keyspace.",
      "description_length": 388,
      "index": 881,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.TagResource",
      "library": "smaws-clients.keyspaces",
      "description": "Performs tagging operations on AWS Keyspaces resources using a context and request structure. It handles adding or updating tags for specified resources, returning either a success response or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. This module is used when managing metadata for AWS Keyspaces tables or keyspaces directly through tagging APIs.",
      "description_length": 386,
      "index": 882,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.RestoreTable",
      "library": "smaws-clients.keyspaces",
      "description": "Performs a table restore operation by sending a restore request with the provided context and parameters. It handles responses and specific error cases such as access denial, conflicts, internal server errors, and validation issues. This module is used when recovering a table from a backup or point-in-time snapshot in a database service.",
      "description_length": 339,
      "index": 883,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces.ListTagsForResource",
      "library": "smaws-clients.keyspaces",
      "description": "This module handles the `ListTagsForResource` operation for Amazon Keyspaces, allowing retrieval of tags associated with a specified resource. It works with AWS context and request/response structures specific to tag listing, including error types like `ResourceNotFoundException` and `ValidationException`. A concrete use case includes fetching metadata tags for billing or resource management purposes.",
      "description_length": 404,
      "index": 884,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.GetTable",
      "library": "smaws-clients.keyspaces",
      "description": "This module issues requests to retrieve table metadata from Amazon Keyspaces, handling responses and specific error conditions like access denial, resource absence, and validation failures. It operates on AWS context and structured request/response types defined for table retrieval. Use this when querying configuration details of a specific table in a Keyspaces keyspace.",
      "description_length": 373,
      "index": 885,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Keyspaces.ListTables",
      "library": "smaws-clients.keyspaces",
      "description": "Sends a request to list tables in a specified keyspace, handling errors such as access denial, resource not found, and validation failures. Works with AWS Keyspaces list tables requests and responses, including error types specific to AWS services. Useful for retrieving table metadata from a Cassandra-compatible database in AWS Keyspaces.",
      "description_length": 340,
      "index": 886,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Keyspaces",
      "library": "smaws-clients.keyspaces",
      "description": "This module provides operations for managing database resources in a Cassandra-like service, including creating, modifying, and deleting keyspaces and tables with configurations for replication, encryption, and auto-scaling. It works with structured types representing database entities (keyspaces, tables, ARNs), schema definitions (partition/clustering columns), and settings like throughput, TTL, and tags. Specific use cases include configuring multi-region replication, defining auto-scaling policies for dynamic workloads, managing data retention via TTL, and restoring tables from backups while enforcing security through encryption settings.",
      "description_length": 649,
      "index": 887,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.UnpeerVpc",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the unpeering of a Lightsail VPC from a user's AWS account, accepting a context and an unpeer VPC request to initiate the operation. It works with Lightsail-specific request and result types, along with a variety of error types indicating possible failure conditions such as invalid input, access denial, or service issues. It is used when disconnecting a managed VPC from a Lightsail instance to stop network traffic between resources.",
      "description_length": 456,
      "index": 888,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.ResetDistributionCache",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to reset the cache of a content delivery distribution, targeting specific distributions by name. It handles responses and potential errors from the underlying service, including cases like invalid inputs, access denials, and resource not found. A concrete use case is clearing cached content for a website hosted on a managed service after updating static assets.",
      "description_length": 391,
      "index": 889,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateLoadBalancerTlsCertificate",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create TLS certificates for load balancers, handling certificate configuration and validation. It works with context and request/response structures specific to AWS Lightsail's certificate creation API. Use it to programmatically provision HTTPS certificates on Lightsail load balancers, handling common AWS service errors like invalid inputs or access denials.",
      "description_length": 392,
      "index": 890,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.StopGUISession",
      "library": "smaws-clients.lightsail",
      "description": "This module handles stopping a GUI session by sending a request to terminate an active session, returning a result indicating success or a specific error. It operates on a context and a stop GUI session request, producing a stop GUI session result or an error such as access denied, invalid input, or service exception. It is used when ending a remote GUI session on a cloud instance, ensuring proper cleanup and state updates.",
      "description_length": 427,
      "index": 891,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDiskFromSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of a disk from a snapshot in AWS Lightsail, providing a `request` function that takes a context and a request object to initiate the operation. It works with disk and snapshot identifiers, along with configuration parameters required by the Lightsail API. Use this module when automating disk restoration from existing snapshots in a Lightsail environment.",
      "description_length": 389,
      "index": 892,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.RebootRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "Reboots a specified relational database in Lightsail, triggering a restart of the database service. Works with the `reboot_relational_database_request` and `reboot_relational_database_result` types to send the reboot command and return the outcome. Useful when applying configuration changes or recovering from a failed state without modifying the database data.",
      "description_length": 362,
      "index": 893,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.IsVpcPeered",
      "library": "smaws-clients.lightsail",
      "description": "Performs a request to check if a Lightsail instance's VPC is peered with another VPC. Works with AWS context and Lightsail-specific request/response structures. Used to validate VPC peering status for network configuration in cloud infrastructure management workflows.",
      "description_length": 268,
      "index": 894,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.SetResourceAccessForBucket",
      "library": "smaws-clients.lightsail",
      "description": "Performs an operation to set resource access permissions for a bucket in a cloud environment. It accepts a context and a request object specifying the bucket and access settings, returning a result that indicates success or a specific error. This is used to control which resources can access a storage bucket, such as allowing a virtual machine to read from or write to it.",
      "description_length": 374,
      "index": 895,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBlueprints",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving blueprint information from AWS Lightsail by sending a structured request and parsing the response. It works with context and request types specific to the Lightsail service, returning either a result containing blueprint data or a detailed error. Concrete use cases include querying available virtual machine images or application templates for deployment automation.",
      "description_length": 398,
      "index": 896,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBucketBundles",
      "library": "smaws-clients.lightsail",
      "description": "This module handles requests to retrieve Lightsail bucket bundles, providing structured access to bundle configurations and metadata. It processes responses from the Lightsail API, returning parsed results or typed errors such as invalid input or access denied. Use it to list available bucket plans or validate bundle identifiers when provisioning storage.",
      "description_length": 357,
      "index": 897,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.OpenInstancePublicPorts",
      "library": "smaws-clients.lightsail",
      "description": "This module handles opening public ports on a Lightsail instance by sending a request to AWS. It works with context and request data types specific to the Lightsail service, returning either a success result or a detailed error. Concrete use cases include configuring firewall settings to allow inbound traffic on specified ports for applications like web servers or databases.",
      "description_length": 377,
      "index": 898,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributionLatestCacheReset",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to retrieve the latest cache reset timestamp for a specified Lightsail distribution. It processes the query using context and request parameters, returning either a result with the timestamp or an error indicating issues like invalid input, access denial, or service failure. A concrete use case is verifying when a distribution's cache was last cleared to determine if content updates have been propagated.",
      "description_length": 436,
      "index": 899,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DisableAddOn",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the request to disable an add-on for a resource, sending the operation to the target service and returning the result. It works with context and request data structures specific to the Lightsail service, including detailed error types for failure handling. It is used to programmatically manage add-on lifecycle operations in cloud infrastructure setups.",
      "description_length": 374,
      "index": 900,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBucketMetricData",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve metric data for a specific Lightsail bucket. It accepts a context and a `get_bucket_metric_data_request` containing parameters like bucket name and metric type, returning a result with either the metric data or an error. It is used to monitor bucket performance metrics such as request rates or latency directly from AWS Lightsail.",
      "description_length": 371,
      "index": 901,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDomainEntry",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of domain entries in AWS Lightsail, providing a `request` function that sends a domain entry creation command and returns a result with either the created entry or a specific error. It works with domain entry request and result types defined in the Lightsail client, along with various error types representing failure scenarios. It is used to programmatically add DNS records to a domain hosted in Lightsail, such as when configuring custom domains for web services.",
      "description_length": 500,
      "index": 902,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_Lightsail.PutAlarm",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create or update an alarm in AWS Lightsail. It handles the input parameters and error responses specific to the alarm operation, including validation and service-level exceptions. Use it when configuring monitoring alarms for Lightsail resources like instances or databases.",
      "description_length": 305,
      "index": 903,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.StartInstance",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to start an Amazon Lightsail instance, handling authentication and communication with the AWS API. It works with a context containing credentials and configuration, along with a structured request specifying the instance name. The result is either a success indicating the instance start was initiated, or one of several error types indicating issues such as invalid input, missing resources, or service failures.",
      "description_length": 442,
      "index": 904,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributionMetricData",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve metric data for a Lightsail distribution, handling responses and errors from the AWS API. It works with context and request structures specific to Lightsail distributions, returning result types that include success data or typed error variants. Concrete use cases include querying bandwidth usage or request counts for a distribution to monitor performance or troubleshoot access issues.",
      "description_length": 428,
      "index": 905,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteCertificate",
      "library": "smaws-clients.lightsail",
      "description": "Deletes an SSL/TLS certificate from an AWS Lightsail resource. Accepts a context and a delete certificate request, returning a result indicating success or failure with specific error types. Useful for managing certificate lifecycle in Lightsail-based web services.",
      "description_length": 265,
      "index": 906,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateBucketAccessKey",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of bucket access keys by sending a request to the Lightsail service. It works with context and request data types specific to the Lightsail client, returning either a result containing the access key details or an error indicating failure. Concrete use cases include generating temporary credentials for secure access to object storage buckets in a cloud environment.",
      "description_length": 400,
      "index": 907,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributions",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve Lightsail distribution details, handling responses and specific AWS API errors. It operates on context and request structures to fetch distribution data, returning either a result or typed exceptions like `AccessDeniedException` or `NotFoundException`. Concrete use cases include querying CDN distribution status, configuration, or metadata from AWS Lightsail.",
      "description_length": 400,
      "index": 908,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AllocateStaticIp",
      "library": "smaws-clients.lightsail",
      "description": "Allocates a static IP address in AWS Lightsail, returning the result or an error indicating failure reasons such as invalid input, access denial, or service issues. Works with context and request/response types specific to the Lightsail API. Useful for provisioning fixed public IPs when setting up cloud resources like virtual machines or load balancers.",
      "description_length": 355,
      "index": 909,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteContainerService",
      "library": "smaws-clients.lightsail",
      "description": "Deletes an AWS Lightsail container service using the provided context and request parameters. It returns a result indicating success or a specific error such as invalid input, resource not found, or access denied. This function is used when managing containerized applications on Lightsail, such as removing outdated or unused services.",
      "description_length": 336,
      "index": 910,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBundles",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the `GetBundles` API request for Lightsail, sending a request and returning a result containing either the list of available bundles or an error indicating failure. It works with the `Context.t` type for authentication and configuration, and the `get_bundles_request` and `get_bundles_result` types for input and output. It is used to retrieve information about available instance bundles when provisioning or managing Lightsail resources.",
      "description_length": 459,
      "index": 911,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancer",
      "library": "smaws-clients.lightsail",
      "description": "Retrieves details of a specified Lightsail load balancer using a context and request structure. It handles errors related to permissions, input validation, and resource existence. Useful for monitoring or managing load balancer configurations in AWS Lightsail deployments.",
      "description_length": 272,
      "index": 912,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachDisk",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the attachment of disks to instances in AWS Lightsail. It provides a `request` function that takes a context and an attach disk request, returning a result with either the attachment outcome or specific error types like `AccessDeniedException` or `NotFoundException`. It is used to programmatically manage disk-instance relationships in cloud infrastructure setups.",
      "description_length": 385,
      "index": 913,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDiskSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of disk snapshots in AWS Lightsail, providing a `request` function that initiates the snapshot operation. It works with disk identifiers and contextual information required for authentication and configuration. Use this module to programmatically create backups of disk volumes in a Lightsail environment.",
      "description_length": 338,
      "index": 914,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateRelationalDatabaseSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create snapshots of relational databases in AWS Lightsail. It handles the input parameters and error responses specific to the snapshot creation operation, returning either a result or detailed error information. It is used when automating database backups or cloning database instances using point-in-time snapshots.",
      "description_length": 348,
      "index": 915,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachInstancesFromLoadBalancer",
      "library": "smaws-clients.lightsail",
      "description": "This module handles detaching instances from a Lightsail load balancer by sending a request to the AWS API. It works with context and request data types specific to Lightsail, returning either a result or a typed error. It is used when managing load balancer instance associations in AWS Lightsail deployments.",
      "description_length": 310,
      "index": 916,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContainerService",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of AWS Lightsail container services by sending a request with specified parameters and returning a result indicating success or a specific error. It works with the `Context.t` type for authentication and configuration, and the `create_container_service_request` and `create_container_service_result` types for input and output. Concrete use cases include provisioning new container services with defined resources and configurations on AWS Lightsail.",
      "description_length": 483,
      "index": 917,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseLogEvents",
      "library": "smaws-clients.lightsail",
      "description": "This module retrieves log events for a relational database by sending a request with a provided context and log event query parameters. It processes the response into a structured result containing log data or an error detailing issues like invalid input, access denial, or service failures. It is used to monitor and troubleshoot database operations by accessing real-time log entries.",
      "description_length": 386,
      "index": 918,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServiceMetricData",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve metric data for AWS Lightsail container services, handling errors such as access denial, invalid inputs, and service failures. It operates on container service identifiers and time-range-based metric queries. Use it to monitor resource usage like CPU and memory over specific intervals for individual container services.",
      "description_length": 360,
      "index": 919,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancers",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve load balancer information from AWS Lightsail. It handles responses and errors specific to load balancer retrieval, such as invalid inputs or access issues. It is used to inspect configured load balancers for monitoring or management workflows.",
      "description_length": 283,
      "index": 920,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetKeyPairs",
      "library": "smaws-clients.lightsail",
      "description": "Retrieves key pair information from AWS Lightsail. Works with context and request/response types specific to the Lightsail service. Useful for managing SSH key pairs associated with Lightsail instances.",
      "description_length": 202,
      "index": 921,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteKnownHostKeys",
      "library": "smaws-clients.lightsail",
      "description": "Deletes SSH known host keys for a specified Lightsail resource, such as an instance or a static IP. Works with request and result types specific to the Lightsail service, handling errors like invalid inputs or resource not found. Useful when rotating SSH keys or cleaning up stale entries after resource deletion.",
      "description_length": 313,
      "index": 922,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServicePowers",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving available container service power configurations from AWS Lightsail. It sends a request using context and returns a result containing either the list of powers or specific AWS error types. Use it to programmatically access power options when configuring or managing container services in Lightsail.",
      "description_length": 329,
      "index": 923,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachCertificateFromDistribution",
      "library": "smaws-clients.lightsail",
      "description": "This module handles detaching an SSL/TLS certificate from a Lightsail content delivery network (CDN) distribution. It accepts a context and a request object specifying the distribution name, returning a result that indicates success or a specific AWS error. It is used when managing CDN configurations, such as during certificate rotation or distribution reconfiguration.",
      "description_length": 371,
      "index": 924,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRegions",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve AWS Lightsail region information. It handles authentication and communication with the Lightsail API, returning region metadata or specific error types like `AccessDeniedException` or `ServiceException`. Use it to list available regions for deploying Lightsail resources such as instances or databases.",
      "description_length": 342,
      "index": 925,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetOperation",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to retrieve the status of a specific AWS Lightsail operation by ID. It accepts a context and a `get_operation_request` containing the operation ID, returning a result that includes either the completed `get_operation_result` or a detailed error variant. Concrete use cases include checking the progress of resource creation, deletion, or configuration changes in Lightsail instances.",
      "description_length": 412,
      "index": 926,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetSetupHistory",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve setup history data for AWS Lightsail resources, handling authentication and input validation. It processes a specific request type and returns either a result containing setup history or an error indicating issues like invalid input, resource not found, or access denial. Use this to audit or inspect past configuration changes for Lightsail instances or related services.",
      "description_length": 412,
      "index": 927,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDisk",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve disk information from AWS Lightsail, handling responses and specific error conditions. It operates on disk request and result types defined in the Lightsail protocol, including errors like `InvalidInputException` or `NotFoundException`. Use this module to fetch details about a specific disk by name in a Lightsail environment.",
      "description_length": 367,
      "index": 928,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateDistribution",
      "library": "smaws-clients.lightsail",
      "description": "Performs an update operation on a Lightsail distribution resource using a provided context and request configuration. It handles errors specific to distribution updates, such as invalid inputs, missing resources, or service failures, returning either a success result or a detailed error. This module is used to modify distribution settings like origin, cache behavior, or TLS configuration in AWS Lightsail.",
      "description_length": 408,
      "index": 929,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.PeerVpc",
      "library": "smaws-clients.lightsail",
      "description": "This module executes requests to manage VPC peering connections, handling operations like creating, deleting, or describing peer VPC relationships. It works with `peer_vpc_request` and `peer_vpc_result` types, which define the structure of input parameters and response data for these operations. Concrete use cases include establishing network connectivity between Lightsail instances and VPCs, or retrieving status and metadata about existing peering connections.",
      "description_length": 465,
      "index": 930,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetCloudFormationStackRecords",
      "library": "smaws-clients.lightsail",
      "description": "This module executes a request to retrieve CloudFormation stack records from AWS Lightsail, handling authentication and input validation. It processes the response into a structured result containing either the retrieved records or a specific error type. Use this to programmatically access stack details for infrastructure management tasks like monitoring or automated deployment validation.",
      "description_length": 392,
      "index": 931,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceMetricData",
      "library": "smaws-clients.lightsail",
      "description": "This module sends a request to retrieve metric data for a specific Lightsail instance, such as CPU utilization or network traffic, over a given time period. It works with timestamped metric data points and handles errors related to permissions, input validation, and service availability. A concrete use case is monitoring the performance of a virtual private server in real-time to trigger auto-scaling or alerting logic.",
      "description_length": 422,
      "index": 932,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateCertificate",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of SSL/TLS certificates in AWS Lightsail by sending a request with provided configuration and returning the result. It works with context and certificate request data types, producing either a certificate result or specific AWS error types. Use this module when automating certificate setup for Lightsail resources like load balancers or instances.",
      "description_length": 381,
      "index": 933,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.TagResource",
      "library": "smaws-clients.lightsail",
      "description": "This module handles tagging operations for AWS Lightsail resources, specifically allowing tags to be added to specified resources. It works with context and request data structures to perform the tagging and returns either a success result or detailed error information. It is used when managing metadata for Lightsail instances, disks, or other supported resources directly through the AWS API.",
      "description_length": 395,
      "index": 934,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDomainEntry",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the deletion of domain entries in AWS Lightsail, providing a `request` function that sends a deletion command and returns a result indicating success or a specific error. It works with domain entry request and result types defined in the Lightsail client library, along with various error types for precise failure handling. Use this module to remove DNS records from a Lightsail-hosted domain as part of domain management workflows.",
      "description_length": 453,
      "index": 935,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDomains",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve domain records from AWS Lightsail, handling responses and errors specific to domain retrieval operations. It works with context and request structures defined in the Smaws_Lib and Smaws_Client_Lightsail modules. A concrete use case is fetching a list of registered domains for managing DNS settings or domain-related resources in a Lightsail environment.",
      "description_length": 394,
      "index": 936,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CloseInstancePublicPorts",
      "library": "smaws-clients.lightsail",
      "description": "Closes public ports on a specified Lightsail instance, using a context and a structured request containing the instance name and port information. It returns a result indicating success or a specific error such as invalid input, resource not found, or access denied. This module is used to securely restrict external access to an instance by closing previously opened public ports.",
      "description_length": 381,
      "index": 937,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachDisk",
      "library": "smaws-clients.lightsail",
      "description": "This module handles detaching a disk from an instance in AWS Lightsail. It provides a `request` function that takes a context and a detach disk request, returning a result with either the detachment result or specific AWS Lightsail error types. It is used to manage disk resources in a Lightsail environment, such as when reassigning or removing storage from virtual servers.",
      "description_length": 375,
      "index": 938,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.TestAlarm",
      "library": "smaws-clients.lightsail",
      "description": "This module provides a function to simulate triggering an alarm in AWS Lightsail, accepting a context and a test alarm request. It returns a result indicating success or failure, with detailed error types for common AWS exceptions. Use this to verify alarm configurations or test monitoring setups in development environments.",
      "description_length": 326,
      "index": 939,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseParameters",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving parameter settings for a relational database by sending a request to the Lightsail service. It works with contextual configuration data and structured request/response types specific to database parameters. A concrete use case is fetching current configuration values for a database instance to validate or adjust settings like backup retention or performance thresholds.",
      "description_length": 402,
      "index": 940,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteInstanceSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "Deletes an instance snapshot in AWS Lightsail, accepting a context and a request object specifying the snapshot name. It returns a result indicating success or failure, with detailed error types for common AWS exceptions. This module is used to remove unused or outdated snapshots to manage storage and resources efficiently.",
      "description_length": 325,
      "index": 941,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.RegisterContainerImage",
      "library": "smaws-clients.lightsail",
      "description": "Registers a container image with AWS Lightsail, handling authentication, input validation, and communication with the Lightsail API. Works with container image metadata and AWS context data types. Used to deploy container images to Lightsail instances as part of application deployment workflows.",
      "description_length": 296,
      "index": 942,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateInstanceSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create snapshots of instances in AWS Lightsail, handling responses and errors specific to the operation. It works with context and request structures defined in `Smaws_Lib` and `Smaws_Client_Lightsail`, including detailed error types like `InvalidInputException` and `NotFoundException`. It is used when automating instance backup workflows or managing Lightsail instance lifecycle operations.",
      "description_length": 424,
      "index": 943,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseLogStreams",
      "library": "smaws-clients.lightsail",
      "description": "This module retrieves log streams for a specified Lightsail relational database using a structured request. It handles authentication, input validation, and error mapping to provide direct access to database log stream information. Use this module to monitor or analyze database logs directly from AWS Lightsail instances.",
      "description_length": 322,
      "index": 944,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceState",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve the state of a Lightsail instance, handling authentication and error responses. It processes a context and a `get_instance_state_request` to produce a result containing either the instance state or a specific AWS error. Use it to programmatically check the operational status of a cloud instance in Amazon Lightsail.",
      "description_length": 356,
      "index": 945,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDisk",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a disk in AWS Lightsail, taking a context and a delete disk request. Returns a result indicating success or specific error conditions like invalid input or resource not found. Useful for managing disk resources programmatically in cloud infrastructure workflows.",
      "description_length": 270,
      "index": 946,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDisk",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create disk resources in AWS Lightsail, handling responses and errors specific to disk creation. It operates on `create_disk_request` and `create_disk_result` types, representing input parameters and server responses. A concrete use case is provisioning storage volumes for virtual servers in cloud infrastructure automation workflows.",
      "description_length": 366,
      "index": 947,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteContainerImage",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a container image from an Amazon Lightsail container service. Accepts a context and a delete request, returning a result indicating success or failure with specific error types. Useful for managing container images in a serverless container environment.",
      "description_length": 261,
      "index": 948,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetAlarms",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve alarm information from AWS Lightsail, handling responses and errors specific to alarm retrieval. It operates on AWS Lightsail alarm configurations, returning structured alarm data or detailed error types like invalid input, access denial, or service failures. Use this module to programmatically monitor and manage alarm states for Lightsail resources such as instances and load balancers.",
      "description_length": 429,
      "index": 949,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetAutoSnapshots",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve automatic snapshot information for Lightsail resources. It processes a context and a structured request to fetch a result containing snapshot details, handling specific AWS service errors like access denial, invalid inputs, or resource not found. It is used to monitor or manage automated backup configurations for Lightsail instances.",
      "description_length": 375,
      "index": 950,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDistribution",
      "library": "smaws-clients.lightsail",
      "description": "Deletes an Amazon Lightsail content delivery network (CDN) distribution by name. Accepts a context and a distribution name, returning a result indicating success or a specific error such as not found, access denied, or invalid input. Useful for managing CDN resources programmatically in response to infrastructure changes or cleanup operations.",
      "description_length": 345,
      "index": 951,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteAlarm",
      "library": "smaws-clients.lightsail",
      "description": "Deletes an alarm on a Lightsail resource using the provided context and request parameters. Accepts a delete_alarm_request and returns a result indicating success or a specific error such as invalid input or resource not found. Used to remove configured alarms for monitoring metrics like CPU usage or network traffic on Lightsail instances.",
      "description_length": 341,
      "index": 952,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDiskSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to retrieve a disk snapshot from AWS Lightsail, handling authentication and input validation. It works with disk snapshot identifiers and returns detailed snapshot metadata or specific error types like `NotFoundException` or `InvalidInputException`. A concrete use case is fetching disk snapshot details to verify backups before initiating a server restore.",
      "description_length": 386,
      "index": 953,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachCertificateToDistribution",
      "library": "smaws-clients.lightsail",
      "description": "This module handles attaching an SSL/TLS certificate to a Lightsail content delivery network (CDN) distribution. It processes the request using a context and a specific Lightsail request structure, returning either a success result or a detailed error. Concrete use cases include configuring HTTPS for web applications hosted on Lightsail by associating certificates with distributions.",
      "description_length": 386,
      "index": 954,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateKeyPair",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of a key pair in AWS Lightsail, interacting with the service through a structured request and response mechanism. It works with specific AWS Lightsail data types such as `create_key_pair_request` and `create_key_pair_result`. Concrete use cases include generating SSH key pairs for secure access to virtual private servers and automating infrastructure setup workflows.",
      "description_length": 402,
      "index": 955,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateLoadBalancer",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of a Lightsail load balancer by sending a request with provided configuration parameters and returning a result indicating success or a specific AWS error. It works with the `create_load_balancer_request` type for input and produces a `create_load_balancer_result` on success, alongside various exception types for error handling. It is used when setting up a new load balancer in AWS Lightsail, such as during infrastructure provisioning or service deployment.",
      "description_length": 494,
      "index": 956,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancerTlsCertificates",
      "library": "smaws-clients.lightsail",
      "description": "This module executes requests to retrieve TLS certificates associated with a Lightsail load balancer. It processes the input request using the provided context and returns either the result containing certificate details or specific AWS service errors. Concrete use cases include validating certificate configurations and managing secure connections for load-balanced applications.",
      "description_length": 381,
      "index": 957,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstances",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve Lightsail instance information, handling errors such as invalid inputs, access denials, and service failures. It operates on AWS Lightsail instance data using context and request structures specific to the Lightsail API. A concrete use case is querying metadata or status of virtual private servers hosted on AWS Lightsail.",
      "description_length": 363,
      "index": 958,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContactMethod",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of contact methods in AWS Lightsail, specifically sending requests to configure email or SMS notifications. It works with context and request/response types defined in the Lightsail client library. Use this module to set up contact methods for receiving alerts about resource health or billing events directly in your OCaml application.",
      "description_length": 369,
      "index": 959,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetStaticIp",
      "library": "smaws-clients.lightsail",
      "description": "Retrieves information about a specific Lightsail static IP address using a context and request structure. It returns a result containing either the static IP details or an error indicating issues like invalid input, resource not found, or authentication failures. This function is useful when querying the status or configuration of a reserved static IP in AWS Lightsail.",
      "description_length": 371,
      "index": 960,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDistribution",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of a Lightsail distribution by sending a request and returning a result with either the distribution details or specific error types. It operates on context and request data structures to interact with the Lightsail service. Use this module to programmatically set up content delivery networks with custom configurations in AWS Lightsail.",
      "description_length": 371,
      "index": 961,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CopySnapshot",
      "library": "smaws-clients.lightsail",
      "description": "Handles copying Amazon Lightsail snapshots across regions. It takes a context and a copy request, returning a result with either the copied snapshot details or specific error types. This module is used to duplicate snapshots for backup or deployment purposes in different geographic regions.",
      "description_length": 291,
      "index": 962,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateCloudFormationStack",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create AWS CloudFormation stacks in Lightsail, handling the provisioning process and returning identifiers or error details. It works with context and request/response structures specific to Lightsail's CloudFormation API. Use it to automate stack creation for infrastructure deployment scenarios like setting up virtual private servers or databases.",
      "description_length": 381,
      "index": 963,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBuckets",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the retrieval of Amazon Lightsail bucket resources by sending a request and returning a result with either the bucket data or specific error types. It operates on context and request structures defined in related modules, producing a result that includes bucket details or exceptions like access denied, invalid input, or service errors. It is used to directly query and manage bucket information in a Lightsail environment.",
      "description_length": 444,
      "index": 964,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetBucketAccessKeys",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving access keys for a Lightsail bucket by sending a request with the necessary context and parameters. It processes the response into a result type that includes either the access key data or specific AWS error types like `AccessDeniedException` or `NotFoundException`. It is used when managing bucket access in AWS Lightsail, particularly for validating or rotating access credentials programmatically.",
      "description_length": 430,
      "index": 965,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDisks",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to retrieve disk information from AWS Lightsail, handling authentication and input validation. It processes a context and a `get_disks_request`, returning a result that either contains the `get_disks_result` or a specific Lightsail error type. It is used to programmatically access disk metadata, such as status and size, for managing cloud infrastructure resources.",
      "description_length": 395,
      "index": 966,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteContactMethod",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the deletion of contact methods in AWS Lightsail, providing a `request` function that sends a deletion command and returns a result indicating success or a specific error. It works with contact method identifiers and interacts with AWS Lightsail's API to perform the deletion. Concrete use cases include removing outdated email or SMS contact methods for notifications.",
      "description_length": 389,
      "index": 967,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteBucket",
      "library": "smaws-clients.lightsail",
      "description": "Deletes an Amazon Lightsail bucket using the provided context and request parameters. Handles errors related to permissions, invalid inputs, missing resources, and service issues. Useful for removing storage buckets when managing cloud infrastructure resources programmatically.",
      "description_length": 278,
      "index": 968,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteLoadBalancer",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the deletion of a Lightsail load balancer by sending a deletion request and returning a result with either the deletion outcome or a specific error. It operates on a context and a `delete_load_balancer_request`, producing a `delete_load_balancer_result` or one of several defined exception types. It is used to remove an existing load balancer resource in AWS Lightsail, handling failure cases such as invalid input, resource not found, or access issues.",
      "description_length": 474,
      "index": 969,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.ReleaseStaticIp",
      "library": "smaws-clients.lightsail",
      "description": "Releases a static IP address from an AWS Lightsail instance. Works with context and request/response types specific to the Lightsail service. Useful for deallocating unused static IPs to avoid resource conflicts or reduce costs.",
      "description_length": 228,
      "index": 970,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServiceDeployments",
      "library": "smaws-clients.lightsail",
      "description": "Retrieves deployments for a container service using a provided context and request configuration. It handles errors related to permissions, input validation, resource absence, and service issues. This function is used to inspect the current deployment state of a container service in AWS Lightsail.",
      "description_length": 298,
      "index": 971,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateInstanceMetadataOptions",
      "library": "smaws-clients.lightsail",
      "description": "This module handles updating instance metadata options for AWS Lightsail instances. It sends a request to modify metadata settings and returns a result indicating success or a specific AWS error. It works with context and request data types specific to the Lightsail service, enabling configuration changes like enabling or disabling metadata access.",
      "description_length": 350,
      "index": 972,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetExportSnapshotRecords",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the retrieval of export snapshot records from AWS Lightsail, providing a `request` function that sends a query to fetch these records based on the provided context and request parameters. It works with structured types representing AWS Lightsail export snapshot records, along with detailed error types for handling failure scenarios such as invalid input, access denial, or service unavailability. A concrete use case is retrieving metadata about snapshot exports for backup or auditing purposes in a Lightsail-based infrastructure.",
      "description_length": 553,
      "index": 973,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteBucketAccessKey",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a specific access key for an Amazon Lightsail bucket using the provided context and request parameters. It returns a result indicating success or failure, with detailed error types for common AWS exceptions. This operation is used when managing bucket access credentials programmatically, such as rotating keys or revoking access.",
      "description_length": 338,
      "index": 974,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerLog",
      "library": "smaws-clients.lightsail",
      "description": "This module handles requests to retrieve container logs from AWS Lightsail, providing structured error handling for common API failures. It operates on container log request and result types, interacting with AWS context and error protocols. Use this module to fetch logs for a specific container service when debugging deployment issues or monitoring application output.",
      "description_length": 371,
      "index": 975,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDomain",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to retrieve domain information from AWS Lightsail, handling authentication and input validation. It works with domain names and contextual configuration data to fetch DNS records and domain metadata. A concrete use case is retrieving DNS settings for a domain hosted in Lightsail to integrate with external services.",
      "description_length": 345,
      "index": 976,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteKeyPair",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a specified Lightsail key pair using the provided context and request parameters. Works with AWS Lightsail key pair identifiers and authentication data. Useful for managing SSH access keys in Lightsail instances during infrastructure cleanup or security rotation workflows.",
      "description_length": 281,
      "index": 977,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetCostEstimate",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to estimate AWS Lightsail costs based on provided parameters. It processes input configurations and returns cost projections along with potential error conditions tied to AWS service responses. Use it to calculate expected monthly costs for virtual private servers before provisioning or modifying resources.",
      "description_length": 336,
      "index": 978,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachStaticIp",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the attachment of static IP addresses to instances in AWS Lightsail. It provides a `request` function that takes a context and an attach static IP request, returning a result with either the attachment outcome or specific error types like `InvalidInputException` or `NotFoundException`. Concrete use cases include linking a reserved static IP to a compute instance to maintain a consistent public address for external services.",
      "description_length": 447,
      "index": 979,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteAutoSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "Deletes automatic snapshots for a specified resource in AWS Lightsail. Works with context and request data types to handle authentication and input parameters. Used to manage snapshot retention policies by removing specific automatic snapshots based on name or resource type.",
      "description_length": 275,
      "index": 980,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerImages",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving container images from AWS Lightsail by sending a structured request and parsing the response. It works with context and request data types specific to the Lightsail service, returning either a result with container image details or an error type indicating failure causes. Concrete use cases include fetching available container images for deployment or auditing purposes in a serverless environment.",
      "description_length": 431,
      "index": 981,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContainerServiceRegistryLogin",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of a container service registry login request, sending it to the AWS Lightsail service and returning the result. It works with context and request/response types specific to the Lightsail API, including handling errors like access denial, invalid input, and service exceptions. It is used to authenticate and configure registry logins for container services in AWS Lightsail.",
      "description_length": 408,
      "index": 982,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDomain",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the deletion of a domain in AWS Lightsail by sending a request to remove a specified domain and returning a result indicating success or a specific error. It works with the `delete_domain_request` type to specify the domain to delete and produces a `delete_domain_result` or one of several error types such as `InvalidInputException` or `NotFoundException`. A concrete use case is removing an unused domain entry from a Lightsail-hosted DNS configuration.",
      "description_length": 475,
      "index": 983,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.ImportKeyPair",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the import of SSH key pairs into AWS Lightsail, providing a `request` function that takes a context and a key pair import request. It works with key pair data structures, including public key material and key name, and manages errors such as invalid input, access denial, or service unavailability. It is used to set up or update SSH access for Lightsail instances programmatically.",
      "description_length": 402,
      "index": 984,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetKeyPair",
      "library": "smaws-clients.lightsail",
      "description": "Retrieves a Lightsail key pair by making an AWS API request using the provided context and key pair name. Works with AWS Lightsail key pair identifiers and returns detailed key pair information or specific AWS service errors. Useful for securely accessing Lightsail instances by retrieving stored SSH key metadata.",
      "description_length": 314,
      "index": 985,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateInstances",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create AWS Lightsail instances, handling the full lifecycle of the operation including error responses. It works with context and request data structures specific to instance creation, returning either a result or a typed error. Concrete use cases include provisioning virtual servers with specified configurations like instance type, SSH key, and networking settings.",
      "description_length": 399,
      "index": 986,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceAccessDetails",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving access details for a Lightsail instance, providing the `request` function to send a query and return structured access information or specific error types. It works with context and request/response types defined in the `Smaws_Lib` and `Smaws_Client_Lightsail` libraries. A concrete use case is fetching SSH connection details for a managed Lightsail server to enable programmatic access.",
      "description_length": 419,
      "index": 987,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetStaticIps",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve static IP addresses from AWS Lightsail, handling authentication and input validation. It processes a context and a structured request to return either a result containing static IP details or specific error types like `InvalidInputException` or `NotFoundException`. Use it to programmatically list or inspect static IPs allocated in a Lightsail account.",
      "description_length": 393,
      "index": 988,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateGUISessionAccessDetails",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of GUI session access details by sending a request to configure and retrieve secure access parameters for a target resource. It works with context and request/response data structures specific to the Lightsail service, including error types like access denied, invalid input, and service exceptions. It is used to establish secure, authenticated GUI sessions for remote resource management in cloud environments.",
      "description_length": 445,
      "index": 989,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseBlueprints",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving relational database blueprints by sending a request and returning a result with either the blueprint data or specific error types. It works with context and request structures to fetch database blueprint information. Concrete use cases include querying available database configurations for provisioning new instances.",
      "description_length": 349,
      "index": 990,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseMasterUserPassword",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving the master user password for a Lightsail relational database instance. It sends a request using the provided context and database identifier, returning the password or an error indicating issues like invalid input, access denial, or service unavailability. It is used to securely access database credentials for management or connection purposes.",
      "description_length": 377,
      "index": 991,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateContainerService",
      "library": "smaws-clients.lightsail",
      "description": "Performs updates to AWS Lightsail container services using a provided context and update request. It handles errors specific to container service operations, including validation, access control, and service failures. This module is used to modify the configuration of existing container services in AWS Lightsail, such as updating the container image or adjusting resource settings.",
      "description_length": 383,
      "index": 992,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseSnapshots",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving snapshots of relational databases from AWS Lightsail. It accepts a context and a request specifying parameters like database name, returning a result with the snapshots or an error indicating issues like invalid input or service failures. It is used to manage backup and restore operations for Lightsail database instances.",
      "description_length": 354,
      "index": 993,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetOperationsForResource",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving operations for a specific resource in AWS Lightsail. It sends a request using a provided context and returns either the result containing the list of operations or an error indicating failure. It works with AWS Lightsail resource identifiers and handles common service errors like invalid input, access denial, and resource not found.",
      "description_length": 365,
      "index": 994,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.StartRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "Starts a relational database instance that has been previously stopped. It takes a context and a request specifying the database name, returning a result with the operation status or an error if the start fails. This function is used to resume database services after maintenance or downtime.",
      "description_length": 292,
      "index": 995,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DownloadDefaultKeyPair",
      "library": "smaws-clients.lightsail",
      "description": "Downloads the default key pair for a Lightsail instance using the provided context and request parameters. It returns a result containing either the key pair data or a specific AWS error type. This module is used to securely retrieve SSH access keys for connecting to Lightsail virtual private servers.",
      "description_length": 302,
      "index": 996,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateDomain",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create DNS domains in AWS Lightsail, handling domain configuration and ownership setup. It operates on a context and a `create_domain_request` structure, returning a result with either domain creation details or specific AWS service errors. Concrete use cases include automating domain provisioning for new web services or integrating domain management into deployment pipelines.",
      "description_length": 410,
      "index": 997,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseEvents",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve events for a Lightsail relational database, handling authentication and input validation. It processes a context and a structured request to fetch event data, returning either a result with events or specific error types like `InvalidInputException` or `NotFoundException`. Concrete use cases include monitoring database maintenance, backups, and configuration changes.",
      "description_length": 409,
      "index": 998,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateDistributionBundle",
      "library": "smaws-clients.lightsail",
      "description": "This module handles updating a distribution bundle in AWS Lightsail by sending a request to modify an existing distribution's bundle configuration. It works with the `update_distribution_bundle_request` type to specify the distribution name and new bundle ID, returning a result that includes either the updated distribution details or specific AWS error types. Concrete use cases include resizing a distribution to a different bundle to adjust performance or cost settings.",
      "description_length": 474,
      "index": 999,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachLoadBalancerTlsCertificate",
      "library": "smaws-clients.lightsail",
      "description": "This module handles attaching a TLS certificate to a load balancer in AWS Lightsail. It provides a `request` function that takes a context and a certificate attachment request, returning a result with either the certificate details or specific AWS error types. It works directly with load balancer and TLS certificate configurations, used when securing web services behind a Lightsail load balancer.",
      "description_length": 399,
      "index": 1000,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerAPIMetadata",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve metadata about a Lightsail container API, including details like the API's ARN, created/updated timestamps, and public endpoint. It operates on context and request data types specific to the Lightsail service, returning either the metadata result or an error indicating issues like access denial or service failure. A concrete use case is fetching deployment information to validate the state of a container API after provisioning.",
      "description_length": 471,
      "index": 1001,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateBucketBundle",
      "library": "smaws-clients.lightsail",
      "description": "This module handles updating a bucket bundle in AWS Lightsail by sending a request to change the bundle associated with a specific bucket. It works with context and request data types specific to the Lightsail service, returning either an update result or detailed error information. Use this module to programmatically upgrade or downgrade storage and transfer capacity for existing buckets based on defined pricing bundles.",
      "description_length": 425,
      "index": 1002,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstancePortStates",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve the port state information for a specific Lightsail instance. It processes the input context and request parameters to return either the port states or a detailed error. It is used to determine which ports are open, closed, or filtered on a target instance.",
      "description_length": 297,
      "index": 1003,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseMetricData",
      "library": "smaws-clients.lightsail",
      "description": "This module executes requests to retrieve metric data for relational databases in AWS Lightsail, handling specific error conditions like access denial, invalid inputs, and service failures. It operates on contextual and request data structures defined in the Smaws_Lib and Smaws_Client_Lightsail modules. A concrete use case includes monitoring database performance metrics such as CPU utilization or disk I/O in a deployed Lightsail environment.",
      "description_length": 446,
      "index": 1004,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateBucket",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create Amazon Lightsail storage buckets, handling responses and errors from the AWS API. It operates on context and request data structures specific to the Lightsail service, returning either a creation result or typed error. Concrete use cases include provisioning isolated storage for application assets or backups in cloud infrastructure deployments.",
      "description_length": 384,
      "index": 1005,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.AttachInstancesToLoadBalancer",
      "library": "smaws-clients.lightsail",
      "description": "This module handles attaching EC2 instances to a Lightsail load balancer by sending the appropriate API request. It works with context and request data types specific to the Lightsail service, returning either a success result or a detailed error. Concrete use cases include managing load balancer configurations in cloud infrastructure automation workflows.",
      "description_length": 358,
      "index": 1006,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseBundles",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving relational database bundles by sending a request and returning a result with either the bundle data or specific AWS error types. It works with context and request structures defined in related modules to fetch database configuration options. A concrete use case is querying available database bundle specifications for provisioning a new relational database instance.",
      "description_length": 398,
      "index": 1007,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UntagResource",
      "library": "smaws-clients.lightsail",
      "description": "Removes tags from a specified Lightsail resource using the `request` function, which takes a context and an untagging request. It operates on resource identifiers and tag keys, returning a result indicating success or a specific AWS error. This module is used to manage resource metadata in AWS Lightsail, such as removing cost allocation tags from instances or storage volumes.",
      "description_length": 378,
      "index": 1008,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "Performs updates on a Lightsail relational database instance using a structured request. It accepts a context and an update request, returning a result that includes either the updated database details or a specific error. This module is used to modify settings like backup retention, database engine version, or access rules for a managed database.",
      "description_length": 349,
      "index": 1009,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create relational databases in AWS Lightsail, handling the full lifecycle of the operation. It works with context and request data structures specific to Lightsail, returning either a result or a precise error type. Concrete use cases include provisioning new PostgreSQL or MySQL databases with specified parameters like instance size, region, and backup settings.",
      "description_length": 395,
      "index": 1010,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteInstance",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a Lightsail instance using a provided context and request configuration, returning a result that includes either the deletion outcome or specific error conditions. Handles structured data types like `delete_instance_request` and `delete_instance_result`, along with detailed exception types for error handling. Useful for safely removing compute resources in AWS Lightsail environments while capturing actionable failure reasons.",
      "description_length": 437,
      "index": 1011,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.StartGUISession",
      "library": "smaws-clients.lightsail",
      "description": "Starts a GUI session for a cloud instance using AWS Lightsail, handling authentication and input validation. It takes a context and a session request, returning a result with the session details or specific error types. This module is used to initiate remote desktop sessions for managing virtual servers.",
      "description_length": 305,
      "index": 1012,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContactMethods",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving contact methods from AWS Lightsail, specifically supporting operations to request contact method details. It works with context and request/response types defined in the Smaws_Lib and Smaws_Client_Lightsail namespaces, including handling specific AWS error types. A concrete use case is fetching email or SMS contact information configured in a Lightsail account for notification purposes.",
      "description_length": 420,
      "index": 1013,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateBucket",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to update AWS Lightsail bucket configurations, handling responses and errors specific to bucket updates. It operates on context and request data structures that define the bucket's new settings, returning either a result or typed error. Concrete use cases include modifying bucket policies, adjusting storage capacity, or updating encryption settings in automated infrastructure workflows.",
      "description_length": 417,
      "index": 1014,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateRelationalDatabaseFromSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to create a relational database instance from a snapshot, handling the full lifecycle of the operation. It works with context objects and structured request/response types specific to the Lightsail service. Concrete use cases include restoring a database from an existing snapshot and automating database provisioning workflows.",
      "description_length": 356,
      "index": 1015,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateDomainEntry",
      "library": "smaws-clients.lightsail",
      "description": "Performs updates to domain entries in AWS Lightsail, handling DNS record modifications. Works with domain entry request and result types, along with various error types for precise failure handling. Used to manage DNS configurations programmatically, such as updating A records or CNAMEs for hosted domains.",
      "description_length": 307,
      "index": 1016,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.RebootInstance",
      "library": "smaws-clients.lightsail",
      "description": "Reboots a specified Lightsail instance using the provided context and request parameters. Works with `Smaws_Lib.Context.t` and `reboot_instance_request` types, returning a result that includes either a `reboot_instance_result` or a specific AWS error. Useful for remotely restarting a virtual private server when maintenance or recovery is needed.",
      "description_length": 347,
      "index": 1017,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteDiskSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a disk snapshot in Lightsail, taking a context and a request with the snapshot name. Returns a result indicating success or failure, with detailed error types for common AWS exceptions. Useful for cleaning up unused disk snapshots or automating resource management in cloud environments.",
      "description_length": 295,
      "index": 1018,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateInstancesFromSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of new instances from an existing snapshot in AWS Lightsail. It accepts a context and a request specifying parameters like instance names, bundle ID, and SSH key, then returns a result containing either the operation success or a specific AWS error. It is used to programmatically provision compute resources from pre-configured disk images in cloud infrastructure workflows.",
      "description_length": 408,
      "index": 1019,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetActiveNames",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve active resource names from AWS Lightsail, handling specific AWS error responses. It processes a context and a `get_active_names_request` to produce a result containing either the retrieved names or a detailed error. Concrete use cases include querying running instances or resources for management and monitoring tasks.",
      "description_length": 359,
      "index": 1020,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDistributionBundles",
      "library": "smaws-clients.lightsail",
      "description": "This module issues a request to retrieve distribution bundle information from AWS Lightsail. It processes the provided context and request parameters to fetch available distribution bundles, returning either the result or specific AWS Lightsail service errors. It is used to list predefined configurations for content delivery networks, such as bundle size, transfer allowance, and cost.",
      "description_length": 387,
      "index": 1021,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetDiskSnapshots",
      "library": "smaws-clients.lightsail",
      "description": "Retrieves disk snapshots from Lightsail, handling pagination and filtering by disk name or region. Works with disk snapshot records, returning metadata like creation time, status, and size. Useful for backup verification, snapshot management, and resource auditing.",
      "description_length": 265,
      "index": 1022,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateLoadBalancerAttribute",
      "library": "smaws-clients.lightsail",
      "description": "This module executes a request to update a specific attribute of an AWS Lightsail load balancer, handling authentication, input validation, and communication with the Lightsail service. It works with the `update_load_balancer_attribute_request` type to specify the load balancer name and attribute to update, and returns a result containing either the response data or a typed error. Concrete use cases include enabling or disabling load balancer attributes such as session stickiness or TLS policy.",
      "description_length": 499,
      "index": 1023,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabaseSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve snapshots of relational databases, handling errors such as invalid inputs, access denials, and service failures. It operates on relational database snapshot request and result structures defined in the Lightsail client library. A concrete use case is fetching a specific database snapshot to restore or analyze data at a point in time.",
      "description_length": 375,
      "index": 1024,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteLoadBalancerTlsCertificate",
      "library": "smaws-clients.lightsail",
      "description": "Deletes a TLS certificate from a Lightsail load balancer using the provided context and request parameters. Works with AWS Lightsail-specific request and response structures, handling errors like invalid inputs, resource not found, or service failures. Useful for managing SSL/TLS certificates during load balancer configuration updates or cleanup tasks.",
      "description_length": 354,
      "index": 1025,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.ExportSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "Exports an Amazon Lightsail snapshot to Amazon EC2. This module handles the request to convert a Lightsail snapshot into an EC2 AMI, working with snapshot identifiers and target EC2 settings. It is used when migrating virtual private server images to full EC2 instances.",
      "description_length": 270,
      "index": 1026,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetCertificates",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve Lightsail certificate information, handling authentication and input validation. It processes `get_certificates_request` values to produce certificate metadata or specific AWS service errors like `AccessDeniedException` and `NotFoundException`. Use it to query certificate details for domain validation or TLS configuration in cloud infrastructure workflows.",
      "description_length": 398,
      "index": 1027,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.StopInstance",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to stop AWS Lightsail instances, handling authentication and error responses. It processes a context and a stop instance request, returning a result with either the stop instance response or a specific AWS error. Use it to programmatically halt running Lightsail instances and handle failure cases like invalid input or resource not found.",
      "description_length": 367,
      "index": 1028,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "Sends a request to delete a relational database instance, handling authentication and input validation. Works with context and request/response types specific to the Lightsail service. Used to safely remove a database resource by name, ensuring it exists and the user has permissions.",
      "description_length": 284,
      "index": 1029,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.PutInstancePublicPorts",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the operation to open or close public ports for a Lightsail instance. It processes a request with port and protocol configurations, returning a result indicating success or a specific AWS error. It works directly with network configuration data types to manage firewall rules for cloud instances.",
      "description_length": 316,
      "index": 1030,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.SetupInstanceHttps",
      "library": "smaws-clients.lightsail",
      "description": "This module handles HTTPS setup for cloud instances by validating domain ownership and configuring SSL certificates. It works with domain names, certificate authorities, and instance identifiers. Concrete use cases include automating HTTPS configuration after instance provisioning and managing certificate validation records.",
      "description_length": 326,
      "index": 1031,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.StopRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "This module handles stopping a relational database instance in AWS Lightsail, providing the `request` function to send the stop command and return the result or specific error types. It works with the `Context.t` type for authentication and configuration, along with Lightsail-specific request and error types. A concrete use case is programmatically halting a running database instance during maintenance or cost-saving operations.",
      "description_length": 432,
      "index": 1032,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.SetIpAddressType",
      "library": "smaws-clients.lightsail",
      "description": "Performs an API operation to set the IP address type for a resource in Lightsail. It takes a context and a request structure specifying the target resource and desired IP type, returning a result that indicates success or a specific AWS error. This module is used to configure IPv4 or IPv6 settings for Lightsail instances or load balancers.",
      "description_length": 341,
      "index": 1033,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetOperations",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve operations data from the Lightsail service, handling authentication and input validation. It processes a context and a `get_operations_request` to produce a result containing either the retrieved operations or a specific error. Concrete use cases include querying the status of resource creation or modification tasks in a Lightsail environment.",
      "description_length": 385,
      "index": 1034,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstance",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve details of a specific Lightsail instance using contextual information and a structured request type. It handles responses by returning either the instance data or specific error types such as `InvalidInputException` or `NotFoundException`. It is used when querying AWS Lightsail for information about a named instance, such as checking its status or configuration.",
      "description_length": 404,
      "index": 1035,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve instance snapshot details from AWS Lightsail, handling specific error conditions like invalid inputs or resource not found. It operates on AWS Lightsail instance snapshot identifiers and returns structured result types indicating success or failure. Use this to fetch metadata or status of a specific instance snapshot within an AWS account.",
      "description_length": 381,
      "index": 1036,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.DeleteRelationalDatabaseSnapshot",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the deletion of relational database snapshots in AWS Lightsail. It provides a `request` function that sends a deletion command using a context and a structured request, returning a result with either a success response or specific error types like `NotFoundException` or `AccessDeniedException`. It is used to remove existing database snapshots programmatically, ensuring resource cleanup or data management workflows.",
      "description_length": 438,
      "index": 1037,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.CreateContainerServiceDeployment",
      "library": "smaws-clients.lightsail",
      "description": "This module handles the creation of container service deployments by sending a deployment request and returning a result with either the deployment details or specific error types. It works with context and request/response data structures defined in the Lightsail client library, including container service configurations and error responses. It is used to deploy containerized applications to AWS Lightsail services, handling validation, access control, and communication errors during deployment.",
      "description_length": 500,
      "index": 1038,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabases",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve information about Lightsail relational databases, handling authentication and error responses. It works with context and request structures specific to the Lightsail API, returning detailed database metadata or failure reasons. A concrete use case is querying the status and configuration of managed PostgreSQL or MySQL instances in AWS Lightsail.",
      "description_length": 387,
      "index": 1039,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetRelationalDatabase",
      "library": "smaws-clients.lightsail",
      "description": "This module executes requests to retrieve details of a specific Amazon Lightsail relational database instance. It processes a context and a `get_relational_database_request` input, returning either a `get_relational_database_result` or a precise error type indicating failure reasons such as invalid input, resource not found, or access issues. It is used to fetch configuration and status information for a named database in a Lightsail environment.",
      "description_length": 450,
      "index": 1040,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.UpdateRelationalDatabaseParameters",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to update parameters of a Lightsail relational database, handling the response and potential errors. It works with a context and a specific request structure for parameter updates, producing a result that includes either a success indicator or a detailed error. Concrete use cases include modifying database configuration settings like backup retention or performance parameters through the AWS Lightsail API.",
      "description_length": 437,
      "index": 1041,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancerMetricData",
      "library": "smaws-clients.lightsail",
      "description": "This module issues requests to retrieve metric data for a Lightsail load balancer, handling responses and errors from the AWS Lightsail service. It works with context and request structures specific to the Lightsail API, returning result types that encapsulate either metric data or detailed error information. Concrete use cases include monitoring load balancer performance metrics such as request count, latency, and HTTP error rates over specified time intervals.",
      "description_length": 466,
      "index": 1042,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetContainerServices",
      "library": "smaws-clients.lightsail",
      "description": "This module handles requests to retrieve container services from AWS Lightsail. It processes a context and a `get_container_services_request`, returning a result that includes either a `container_services_list_result` or specific AWS error types such as `AccessDeniedException` or `ServiceException`. It is used to programmatically access and manage containerized applications hosted on Lightsail.",
      "description_length": 397,
      "index": 1043,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.EnableAddOn",
      "library": "smaws-clients.lightsail",
      "description": "This module handles enabling add-ons for AWS Lightsail resources by sending a request to activate a specified add-on. It works with the `enable_add_on_request` type to configure the add-on and resource details, returning an `enable_add_on_result` on success or specific exception types on failure. Concrete use cases include enabling monitoring or auto-snapshot add-ons for Lightsail instances or databases.",
      "description_length": 407,
      "index": 1044,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Lightsail.SendContactMethodVerification",
      "library": "smaws-clients.lightsail",
      "description": "This module sends a verification request for a contact method in AWS Lightsail, triggering a confirmation process for communication channels. It handles the transmission of verification tokens and ensures the contact method is validated through the AWS API. Use this when enabling notifications or confirming ownership of an email or SMS channel for resource alerts.",
      "description_length": 366,
      "index": 1045,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.DetachStaticIp",
      "library": "smaws-clients.lightsail",
      "description": "This module handles detaching a static IP address from a Lightsail resource, providing the `request` function to execute the operation. It works with context and request data types specific to the Lightsail service, returning either a result or a typed error. A concrete use case is releasing a static IP from a Lightsail instance to reassign it elsewhere.",
      "description_length": 356,
      "index": 1046,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetLoadBalancerTlsPolicies",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving TLS policies for load balancers in AWS Lightsail. It processes requests using a context and specific input parameters, returning either a result with TLS policy details or an error indicating issues like invalid input or service failures. It is used when configuring or inspecting security settings for load-balanced applications in Lightsail environments.",
      "description_length": 387,
      "index": 1047,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail.GetInstanceSnapshots",
      "library": "smaws-clients.lightsail",
      "description": "This module handles retrieving instance snapshots from AWS Lightsail by sending a request and returning a result with either the snapshots data or specific error types. It works with context and request structures defined in related modules, along with common AWS error types. A concrete use case is listing available snapshots for a Lightsail instance to support backup or duplication workflows.",
      "description_length": 396,
      "index": 1048,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Lightsail",
      "library": "smaws-clients.lightsail",
      "description": "This module provides operations for configuring, managing, and maintaining AWS Lightsail resources, including relational databases, load balancers, container services, TLS certificates, and domain entries. It supports use cases like updating resource parameters, deploying and scaling containerized applications, managing DNS and SSL/TLS settings, and handling resource lifecycle tasks such as creation, deletion, and state monitoring. The module uses structured data types to represent resource configurations, operational statuses, and error conditions, enabling precise interactions with Lightsail services.",
      "description_length": 610,
      "index": 1049,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.GetRecords",
      "library": "smaws-clients.dynamodb-streams",
      "description": "Retrieves records from a DynamoDB stream using a provided iterator, handling errors such as expired iterators or resource not found. Works with DynamoDB stream input and output types, including error variants specific to stream operations. Useful for processing real-time data changes from DynamoDB tables in applications like event sourcing or data replication.",
      "description_length": 362,
      "index": 1050,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.ListStreams",
      "library": "smaws-clients.dynamodb-streams",
      "description": "This module issues requests to list DynamoDB streams, handling input parameters and error responses. It works with DynamoDB stream input and output structures, including error types like internal server error and resource not found. A concrete use case is retrieving a paginated list of DynamoDB streams for monitoring or processing changes in a DynamoDB table.",
      "description_length": 361,
      "index": 1051,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.GetShardIterator",
      "library": "smaws-clients.dynamodb-streams",
      "description": "This module handles retrieving a shard iterator from a DynamoDB stream, using a provided context and input parameters. It operates on DynamoDB stream data structures, specifically working with shard identifiers and stream ARNs. A concrete use case is initializing a shard iterator to start reading record sequences from a specific point in a DynamoDB table's stream.",
      "description_length": 366,
      "index": 1052,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams.DescribeStream",
      "library": "smaws-clients.dynamodb-streams",
      "description": "Handles requests to describe a DynamoDB stream by accepting a context and input parameters, returning metadata about the stream or specific errors. Works with DynamoDB stream identifiers and context objects to retrieve configuration and status details. Useful for checking stream properties like ARN, status, and shard information during application initialization or monitoring.",
      "description_length": 379,
      "index": 1053,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DynamoDBStreams",
      "library": "smaws-clients.dynamodb-streams",
      "description": "This module provides operations for retrieving shard iterators, reading stream records, describing stream metadata, and listing available streams, while handling data modeling and serialization for DynamoDB stream events. It works with structured types like `shard_iterator`, `stream_record`, `stream_description`, and `record_sequence`, capturing stream-specific details such as key schemas, operation types (inserts, updates, deletes), and shard relationships. These capabilities support real-time data processing pipelines, stream monitoring, and error-resilient applications consuming DynamoDB stream events.",
      "description_length": 612,
      "index": 1054,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.ExportCertificate",
      "library": "smaws-clients.acm",
      "description": "Exports an ACM certificate using the provided ARN, returning the certificate, private key, and chain. Works with AWS context and ACM-specific error types. Useful for retrieving certificate materials for deployment outside AWS services.",
      "description_length": 235,
      "index": 1055,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.RequestCertificate",
      "library": "smaws-clients.acm",
      "description": "This module issues requests to provision SSL/TLS certificates through AWS Certificate Manager. It handles certificate requests with domain validation options, tags, and ARN-based resource references, returning either a certificate ARN or specific AWS service errors. It is used to automate certificate provisioning for domains hosted in AWS environments.",
      "description_length": 354,
      "index": 1056,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.ListCertificates",
      "library": "smaws-clients.acm",
      "description": "This module handles the `ListCertificates` operation for the ACM service, sending requests to list SSL/TLS certificates and returning parsed responses or specific error types. It works with AWS JSON protocol errors, request/response structures, and context data for authentication and configuration. A concrete use case is retrieving a paginated list of certificates from AWS ACM to display in a management console or validate deployment targets.",
      "description_length": 446,
      "index": 1057,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.GetCertificate",
      "library": "smaws-clients.acm",
      "description": "Retrieves an ACM certificate using a provided ARN and context. Works with AWS JSON error types and ACM-specific exceptions. Useful for fetching certificate details in an automated deployment or validation workflow.",
      "description_length": 214,
      "index": 1058,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.RenewCertificate",
      "library": "smaws-clients.acm",
      "description": "This module handles certificate renewal requests in the AWS Certificate Manager service. It works with context and certificate request data types, returning result values that indicate success or specific error conditions. It is used to programmatically trigger certificate renewal operations using AWS infrastructure.",
      "description_length": 318,
      "index": 1059,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.ImportCertificate",
      "library": "smaws-clients.acm",
      "description": "This module handles the import of an ACM certificate into AWS, interacting directly with the ACM service. It processes requests to import certificates, managing errors such as invalid ARNs, parameter limits, and tag policies. Use it when programmatically importing SSL/TLS certificates into AWS Certificate Manager for deployment with services like ELB or CloudFront.",
      "description_length": 367,
      "index": 1060,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.PutAccountConfiguration",
      "library": "smaws-clients.acm",
      "description": "This module sends account configuration updates to AWS ACM, handling errors such as access denial, conflicts, throttling, and validation failures. It operates on context and configuration request data types specific to AWS ACM. Use this module to programmatically adjust account-level settings in AWS Certificate Manager.",
      "description_length": 321,
      "index": 1061,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.DescribeCertificate",
      "library": "smaws-clients.acm",
      "description": "This module handles the `DescribeCertificate` operation for AWS Certificate Manager, accepting a context and a request to retrieve certificate details. It works with AWS JSON error types and specific exceptions like `InvalidArnException` and `ResourceNotFoundException`. A concrete use case is fetching metadata about a specific SSL/TLS certificate using its ARN.",
      "description_length": 363,
      "index": 1062,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.AddTagsToCertificate",
      "library": "smaws-clients.acm",
      "description": "Adds tags to an ACM certificate using the provided context and request parameters. It handles errors related to invalid input, resource not found, and tag limits. This function is used to organize and manage certificates with metadata in AWS Certificate Manager.",
      "description_length": 262,
      "index": 1063,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.GetAccountConfiguration",
      "library": "smaws-clients.acm",
      "description": "Retrieves the account configuration for ACM in a given context. It requires no input parameters beyond the context and returns a result containing either the configuration response or an error such as access denied or throttling. This operation is used to check account-level settings specific to ACM, such as certificate quotas or account limits.",
      "description_length": 347,
      "index": 1064,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.ResendValidationEmail",
      "library": "smaws-clients.acm",
      "description": "Resends validation emails for domain certificates using ACM. Takes a context and request with certificate ARN and domain, returning unit or specific AWS errors. Useful for automating certificate validation retries after configuration updates.",
      "description_length": 242,
      "index": 1065,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.RemoveTagsFromCertificate",
      "library": "smaws-clients.acm",
      "description": "Removes specified tags from an ACM certificate using the provided ARN. Works with AWS context and ACM-specific error types. Useful for managing certificate metadata in automated AWS workflows.",
      "description_length": 192,
      "index": 1066,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.UpdateCertificateOptions",
      "library": "smaws-clients.acm",
      "description": "This module handles the request to update certificate options in AWS ACM, specifically validating and submitting the update with support for error handling. It works with AWS context and certificate request data types, including error types like invalid ARN or resource not found. It is used to modify certificate settings such as transparency logging.",
      "description_length": 352,
      "index": 1067,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM.DeleteCertificate",
      "library": "smaws-clients.acm",
      "description": "Deletes an ACM certificate using the provided ARN, handling errors such as access denial, resource not found, or conflicts. Works with AWS context and ACM-specific error types. Used to remove unused or expired certificates from AWS ACM.",
      "description_length": 236,
      "index": 1068,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ACM.ListTagsForCertificate",
      "library": "smaws-clients.acm",
      "description": "This module handles requests to list tags for an AWS Certificate Manager certificate. It accepts a context and a certificate ARN, returning either the list of tags or an error indicating issues like invalid ARNs or missing resources. It is used to retrieve metadata tags associated with specific certificates for management or auditing purposes.",
      "description_length": 345,
      "index": 1069,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ACM",
      "library": "smaws-clients.acm",
      "description": "This module supports certificate lifecycle management tasks such as requesting, renewing, and validating SSL/TLS certificates, along with tag and account configuration operations. It works with data structures like certificate ARNs, domain validation records, renewal summaries, and key-value tags, while handling nested metadata (e.g., validity periods, key usage) and structured error conditions. Specific use cases include automating certificate validation workflows, managing certificate tags for resource organization, and configuring account-level settings for AWS Certificate Manager.",
      "description_length": 591,
      "index": 1070,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetInstance",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles retrieving instance details from a service discovery system. It processes a request context and input parameters to fetch a specific instance, returning either the instance response or errors like invalid input, service not found, or instance not found. It is used when querying for metadata or health status of a registered instance in a distributed system.",
      "description_length": 378,
      "index": 1071,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListTagsForResource",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles listing tags for a specified resource in a service discovery system. It accepts a context and a request structure containing the resource identifier, returning either a response with the tags or an error indicating issues like invalid input or missing resources. It is used to retrieve metadata tags associated with service discovery resources like services or instances.",
      "description_length": 391,
      "index": 1072,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.RegisterInstance",
      "library": "smaws-clients.servicediscovery",
      "description": "Registers an instance with a service discovery service, handling duplicate requests, invalid inputs, resource limits, and service not found errors. Works with context and registration request/response types, including error variants for specific failure scenarios. Useful for dynamically adding instances to a service mesh or cloud environment where service discovery is required.",
      "description_length": 380,
      "index": 1073,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreatePrivateDnsNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the creation of a private DNS namespace in a cloud environment, validating input and managing resource constraints. It processes requests using context and returns either a successful response or specific error types like namespace duplication, invalid input, or tag limits. Use this when setting up isolated DNS domains for internal service discovery within a virtual network.",
      "description_length": 397,
      "index": 1074,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles requests to retrieve namespace information from a service discovery system. It works with context and request/response types specific to namespace queries, supporting error handling for invalid inputs or missing namespaces. A concrete use case is fetching configuration details for a specific namespace in a distributed system.",
      "description_length": 347,
      "index": 1075,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DeleteService",
      "library": "smaws-clients.servicediscovery",
      "description": "Deletes a specified service from the service discovery registry. It accepts a context and a delete service request, returning a result that indicates success or specific error conditions such as invalid input, resource in use, or service not found. This operation is used when removing an existing service registration to stop service discovery for that service.",
      "description_length": 362,
      "index": 1076,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreateHttpNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the creation of HTTP namespaces in a service discovery system. It provides a `request` function that takes a context and a create request, returning a result with either a namespace response or specific error types like `NamespaceAlreadyExists` or `InvalidInput`. It works directly with HTTP namespace configurations, tags, and AWS service discovery APIs.",
      "description_length": 375,
      "index": 1077,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DiscoverInstances",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles service instance discovery requests within a contextual environment. It processes a discovery request and returns either a response with discovered instances or specific error types such as invalid input, namespace not found, or service not found. It is used to locate running instances of a service in a namespace, typically for routing or monitoring purposes.",
      "description_length": 381,
      "index": 1078,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListServices",
      "library": "smaws-clients.servicediscovery",
      "description": "Performs service discovery by sending a request to list available services, handling responses or errors such as invalid input. It operates on context and request/response types defined in the service discovery protocol. This function is used to retrieve a list of registered services from a discovery endpoint in a distributed system.",
      "description_length": 335,
      "index": 1079,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdatePrivateDnsNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles updating a private DNS namespace in a service discovery system. It processes an update request and returns a result indicating success or specific error conditions like namespace not found or resource conflicts. The primary data types involved are the context, update request, and response structures specific to private DNS namespace operations.",
      "description_length": 366,
      "index": 1080,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdateHttpNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the `update_http_namespace` operation, sending requests to modify existing HTTP namespaces in AWS Service Discovery. It works with structured request and response types specific to namespace updates, including error handling for common failure scenarios. Concrete use cases include updating the description or configuration of an HTTP namespace within a service discovery setup.",
      "description_length": 398,
      "index": 1081,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DeleteNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the deletion of a namespace in a service discovery system. It takes a context and a deletion request, then returns a result indicating success or specific error conditions like namespace not found or resource in use. Concrete use cases include cleaning up unused namespaces and managing service registry resources.",
      "description_length": 334,
      "index": 1082,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdateService",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles service update requests by sending them to the appropriate endpoint and returning a result indicating success or a specific error such as duplicate request, invalid input, or service not found. It operates on `update_service_request` and `update_service_response` types, interacting with the service discovery system to modify service configurations. It is used when updating metadata or configuration of a registered service in a service discovery backend.",
      "description_length": 477,
      "index": 1083,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DiscoverInstancesRevision",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles service instance discovery requests, querying for revisions of instances registered in a service discovery namespace. It works with context and request/response types specific to service discovery, including error variants for common failure scenarios like invalid input or missing namespaces. It is used to retrieve up-to-date information about service instances in a distributed system.",
      "description_length": 408,
      "index": 1084,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListOperations",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the execution of list operations requests within a service discovery context. It works with contextual data and structured request/response types to retrieve operation records. A typical use case involves querying available operations from a service discovery endpoint to manage or monitor distributed services.",
      "description_length": 331,
      "index": 1085,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetService",
      "library": "smaws-clients.servicediscovery",
      "description": "Performs service discovery lookups by sending requests to resolve service names into endpoint information. Works with context objects and structured service request/response types that include endpoint addresses and metadata. Useful for dynamically locating internal services in distributed systems based on service identifiers and environment context.",
      "description_length": 352,
      "index": 1086,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreatePublicDnsNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the creation of a public DNS namespace in a service discovery system. It takes a context and a request object, then returns a result containing either a response object or specific error types like `NamespaceAlreadyExists` or `ResourceLimitExceeded`. It is used when setting up DNS-based service discovery to ensure unique namespace registration with proper tagging and input validation.",
      "description_length": 407,
      "index": 1087,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdatePublicDnsNamespace",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the updating of public DNS namespaces in AWS Service Discovery. It processes requests to modify existing public DNS namespaces and returns responses indicating success or specific error conditions such as namespace not found or resource in use. It works with AWS context, request, and response structures specific to DNS namespace updates.",
      "description_length": 359,
      "index": 1088,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UntagResource",
      "library": "smaws-clients.servicediscovery",
      "description": "Removes specified tags from a resource in AWS Service Discovery. Works with context and untag resource request/response types, handling errors like invalid input or missing resources. Useful for managing metadata on service discovery resources like services or instances.",
      "description_length": 271,
      "index": 1089,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.TagResource",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles tagging operations for AWS service discovery resources. It provides a `request` function that applies tags to a specified resource, returning a result with either a success response or specific error types like `InvalidInput` or `ResourceNotFoundException`. It works directly with AWS service discovery resource identifiers and tag collections.",
      "description_length": 364,
      "index": 1090,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetOperation",
      "library": "smaws-clients.servicediscovery",
      "description": "Performs a service discovery operation lookup by sending a request and returning a result with either the operation response or specific error types. It works with context, request, and response structures defined in the service discovery module. Used to retrieve details about a specific service discovery operation by ID or name.",
      "description_length": 331,
      "index": 1091,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.DeregisterInstance",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the deregistration of service instances in a service discovery system. It accepts a context and a deregistration request, returning a result that indicates success or specific error conditions such as instance not found or invalid input. It works directly with service discovery requests and responses, including detailed error types for precise failure handling.",
      "description_length": 383,
      "index": 1092,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListNamespaces",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the `ListNamespaces` operation for service discovery, sending requests to retrieve namespaces and returning either a response or specific errors like `InvalidInput`. It works with context, request, and response types defined in the service discovery protocol. A concrete use case is querying available namespaces in a service registry to manage or inspect services dynamically.",
      "description_length": 397,
      "index": 1093,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.UpdateInstanceCustomHealthStatus",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles updating the custom health status of an instance in a service discovery system. It accepts a context and a request containing instance health details, returning a result indicating success or specific error conditions. Use it to report custom health checks for instances registered in a service discovery service.",
      "description_length": 333,
      "index": 1094,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.ListInstances",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the `ListInstances` API operation for service discovery, sending requests to retrieve registered instances for a specified service. It works with input types like `list_instances_request` and produces either a `list_instances_response` or specific error types such as `InvalidInput` or `ServiceNotFound`. It is used to dynamically discover instances of a service in a distributed system, enabling client routing and load balancing decisions based on available endpoints.",
      "description_length": 490,
      "index": 1095,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.GetInstancesHealthStatus",
      "library": "smaws-clients.servicediscovery",
      "description": "This module issues requests to retrieve health status for instances registered in a service discovery system. It processes queries using context and request parameters, returning either health status responses or specific errors like instance not found, invalid input, or service not found. It is used to monitor and validate the health of registered instances in service discovery workflows.",
      "description_length": 392,
      "index": 1096,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery.CreateService",
      "library": "smaws-clients.servicediscovery",
      "description": "This module handles the creation of services within a discovery namespace, validating input and managing conflicts such as duplicate service names or namespace absence. It operates on service creation requests and responds with either a success confirmation or specific error types like `ServiceAlreadyExists` or `NamespaceNotFound`. Use this when registering new services in a distributed system that relies on service discovery for routing and availability.",
      "description_length": 459,
      "index": 1097,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_ServiceDiscovery",
      "library": "smaws-clients.servicediscovery",
      "description": "This module provides operations for managing service discovery configurations in AWS Cloud Map, focusing on DNS record manipulation (A, AAAA, CNAME, SRV), health check updates (HTTP, HTTPS, TCP), and service/namespace lifecycle management. It operates on structured types representing public/private DNS namespaces, HTTP namespaces, service instances, and resource tags, enabling use cases like dynamic instance registration, health status monitoring, and DNS configuration changes. Key workflows include modifying SOA records, propagating custom health checks, and filtering resources via status or metadata with pagination support.",
      "description_length": 633,
      "index": 1098,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMobileDeviceAccessEffect",
      "library": "smaws-clients.workmail",
      "description": "This module handles requests to determine the effective mobile device access settings for a user in an organization. It processes a request context and returns a result indicating whether mobile device access is allowed or denied, along with any associated error conditions. The module works directly with AWS JSON error types and custom exceptions related to organization state and invalid parameters.",
      "description_length": 402,
      "index": 1099,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateUser",
      "library": "smaws-clients.workmail",
      "description": "This module handles user creation in a WorkMail service, sending a request with provided user details and returning a result indicating success or failure. It works with context and request/response types specific to WorkMail, including detailed error types for common failure scenarios. It is used to programmatically provision new users within a WorkMail organization, handling errors such as invalid parameters, authentication failures, and name conflicts.",
      "description_length": 459,
      "index": 1100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetImpersonationRoleEffect",
      "library": "smaws-clients.workmail",
      "description": "This module issues a request to retrieve the effect of an impersonation role in a WorkMail organization, handling specific error cases like missing entities or invalid parameters. It operates on WorkMail-specific request and response structures, including error types tied to organizational and resource states. A concrete use case is checking the permissions granted by an impersonation role for a user or resource in a WorkMail environment.",
      "description_length": 442,
      "index": 1101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutEmailMonitoringConfiguration",
      "library": "smaws-clients.workmail",
      "description": "This module handles the configuration of email monitoring settings for an organization in AWS WorkMail. It accepts a context and a request object containing parameters like organization ID and monitoring configuration details, returning a result with either a success response or specific error types such as `InvalidParameterException` or `OrganizationNotFoundException`. It is used to enable or update email monitoring for compliance and auditing purposes within a managed AWS WorkMail environment.",
      "description_length": 500,
      "index": 1102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListGroupsForEntity",
      "library": "smaws-clients.workmail",
      "description": "This module handles requests to list groups associated with a specific entity in Amazon WorkMail. It accepts a context and a structured request containing entity and organization identifiers, returning a result with either the list of groups or specific error types like `EntityNotFoundException` or `InvalidParameterException`. It is used to retrieve group membership details for an entity within a WorkMail organization.",
      "description_length": 422,
      "index": 1103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateAvailabilityConfiguration",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of availability configurations for a WorkMail organization by sending a request with the provided context and configuration parameters. It works with types such as `Smaws_Lib.Context.t`, `create_availability_configuration_request`, and `create_availability_configuration_response`. Use this module when setting up or updating resource availability settings in a WorkMail environment, particularly after creating a new organization or modifying scheduling rules.",
      "description_length": 494,
      "index": 1104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateUser",
      "library": "smaws-clients.workmail",
      "description": "This module handles updating user details in WorkMail by sending a request with the provided context and update parameters, returning a result that either contains the response or a specific error. It works with structured data types like `update_user_request`, `update_user_response`, and various exception types for precise error handling. It is used when modifying user attributes such as name or state within a WorkMail organization.",
      "description_length": 437,
      "index": 1105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteUser",
      "library": "smaws-clients.workmail",
      "description": "Deletes a user from an Amazon WorkMail organization. It takes a context and a delete user request, returning a result that indicates success or a specific error such as invalid parameters, directory issues, or organization state problems. This module is used when managing user lifecycle in WorkMail, such as during account termination or organizational restructuring.",
      "description_length": 368,
      "index": 1106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateGroup",
      "library": "smaws-clients.workmail",
      "description": "This module issues requests to update group details in AWS WorkMail, handling responses and specific error conditions like entity not found or invalid parameters. It operates on AWS WorkMail group update requests and responses, integrating context for execution. Use this module to modify group attributes such as display name or email within an AWS WorkMail organization.",
      "description_length": 372,
      "index": 1107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateResource",
      "library": "smaws-clients.workmail",
      "description": "Sends a request to update a resource in Amazon WorkMail, handling configuration changes such as email addresses or resource names. Works with AWS context and structured request/response types specific to WorkMail resources. Used when modifying existing resources like rooms or equipment within a WorkMail organization.",
      "description_length": 318,
      "index": 1108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteResource",
      "library": "smaws-clients.workmail",
      "description": "Deletes a WorkMail resource using the provided context and request parameters. Handles responses and errors specific to resource deletion, including invalid parameters, organization state issues, and unsupported operations. Works directly with WorkMail resource identifiers and AWS JSON error types.",
      "description_length": 299,
      "index": 1109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.RegisterMailDomain",
      "library": "smaws-clients.workmail",
      "description": "Registers a mail domain for an organization in AWS WorkMail. It takes a context and a registration request, returning a result with the response or specific error types like `InvalidParameterException` or `MailDomainInUseException`. This module directly handles domain registration workflows, including validation and domain availability checks.",
      "description_length": 345,
      "index": 1110,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateResource",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of a new resource in AWS WorkMail by sending a request with the necessary configuration parameters. It works with structured data types representing resource creation requests and responses, along with detailed error types for failure handling. Concrete use cases include provisioning mailboxes or scheduling resources like conference rooms within an organization's email system.",
      "description_length": 412,
      "index": 1111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdatePrimaryEmailAddress",
      "library": "smaws-clients.workmail",
      "description": "Performs an email address update for a WorkMail user, requiring the new email, user identifier, and organization context. Works directly with AWS WorkMail entities such as users and organizations, handling validation and directory synchronization. Useful when migrating users to a new email domain or correcting user identity information within a managed WorkMail environment.",
      "description_length": 376,
      "index": 1112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeEntity",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `describe_entity` operation for WorkMail entities, sending requests to retrieve detailed information about a specific entity within an organization. It works with structured request and response types defined in the WorkMail client library, including error types for common failure scenarios like invalid parameters or missing entities. A typical use case involves querying metadata about users, groups, or resources in a WorkMail organization by providing the entity identifier and organization ID.",
      "description_length": 523,
      "index": 1113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMobileDeviceAccessOverride",
      "library": "smaws-clients.workmail",
      "description": "This module handles retrieving mobile device access overrides for users in an AWS WorkMail organization. It accepts a context and a request with parameters like user ID and device ID, returning either a response with override details or specific error types. Use it to check device access policies for mobile devices associated with WorkMail users.",
      "description_length": 348,
      "index": 1114,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteEmailMonitoringConfiguration",
      "library": "smaws-clients.workmail",
      "description": "Deletes an email monitoring configuration for a specific organization in AWS WorkMail. It takes a context and a request with the organization ID and configuration name, returning a result indicating success or an error such as invalid parameters or organization state issues. Useful when managing email monitoring setups for compliance or auditing in enterprise environments.",
      "description_length": 375,
      "index": 1115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutInboundDmarcSettings",
      "library": "smaws-clients.workmail",
      "description": "This module handles the configuration of inbound DMARC settings for an organization in WorkMail. It sends a request to update DMARC policies, accepting a context and a structured DMARC settings request, returning a result with either a success response or specific error types. It works directly with DMARC configuration data, targeting use cases like enforcing email authentication policies or adjusting organizational email security settings.",
      "description_length": 444,
      "index": 1116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMailboxExportJobs",
      "library": "smaws-clients.workmail",
      "description": "This module handles requests to list mailbox export jobs by interacting with the WorkMail service API. It processes input parameters such as organization ID and job state, and returns a response containing job details or specific error types. It is used to retrieve and monitor the status of mailbox export operations in a WorkMail environment.",
      "description_length": 344,
      "index": 1117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.AssumeImpersonationRole",
      "library": "smaws-clients.workmail",
      "description": "This module handles assuming an impersonation role in AWS WorkMail, providing the `request` function to send impersonation role requests. It works with context and request/response types specific to AWS WorkMail, including handling errors like invalid parameters or missing organizations. It is used to programmatically obtain temporary credentials for accessing WorkMail resources on behalf of a user.",
      "description_length": 402,
      "index": 1118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeMailboxExportJob",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `DescribeMailboxExportJob` operation for WorkMail, sending a request to retrieve details about a specific mailbox export job. It works with structured request and response types defined in the WorkMail API, including error types for handling failures like invalid parameters or missing entities. Use this to monitor or debug export jobs initiated through WorkMail, such as when exporting mailbox data to S3 for compliance or archival purposes.",
      "description_length": 467,
      "index": 1119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMobileDeviceAccessRules",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing mobile device access rules for an organization in AWS WorkMail. It processes requests to retrieve access rules and returns structured responses or specific AWS service errors. It is used to enforce device access policies in enterprise environments.",
      "description_length": 276,
      "index": 1120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMobileDeviceAccessOverrides",
      "library": "smaws-clients.workmail",
      "description": "This module handles requests to list mobile device access overrides for a given organization and user in Amazon WorkMail. It accepts a context and a structured request containing parameters like organization ID and user ID, returning either a response with the list of overrides or specific error types. Concrete use cases include retrieving device access rules to enforce security policies or audit device permissions for compliance.",
      "description_length": 434,
      "index": 1121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeUser",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `DescribeUser` operation for WorkMail clients, sending requests to retrieve detailed information about a specific user within an organization. It works with the `describe_user_request` type to specify the user and organization identifiers, and returns a `describe_user_response` containing user attributes or error details. Concrete use cases include fetching user metadata, verifying user existence, and retrieving email and display name information for administrative or integration purposes.",
      "description_length": 518,
      "index": 1122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateAlias",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of email aliases in AWS WorkMail by sending a request to associate an alias with a specific entity, such as a user or group. It works with structured request and response types defined in the `Smaws_Client_WorkMail` module, including detailed error types for handling failure scenarios like duplicate email addresses or invalid parameters. A typical use case involves integrating with an identity management system to automatically provision email aliases during user onboarding.",
      "description_length": 512,
      "index": 1123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteRetentionPolicy",
      "library": "smaws-clients.workmail",
      "description": "Deletes a retention policy from an Amazon WorkMail organization. The function takes a context and a request containing the organization ID and retention policy ID, returning a result indicating success or an error such as invalid parameters or organization state issues. It directly handles interactions with the WorkMail API to remove configured retention policies.",
      "description_length": 366,
      "index": 1124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMailboxPermissions",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing mailbox permissions in AWS WorkMail by sending a request to retrieve permissions associated with a specific entity and organization. It works with AWS context, mailbox permission requests, and responses containing permission lists or error types like entity not found and invalid parameters. A concrete use case is checking user access rights to a shared mailbox within an organization.",
      "description_length": 414,
      "index": 1125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeResource",
      "library": "smaws-clients.workmail",
      "description": "This module handles requests to describe a resource in Amazon WorkMail, interacting directly with the WorkMail API. It accepts a context and a `describe_resource_request` containing parameters like resource ID and organization ID, returning either a `describe_resource_response` with resource details or specific error types. It is used to retrieve information about a WorkMail resource, such as its email, name, or type, within a given organization.",
      "description_length": 450,
      "index": 1126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutMailboxPermissions",
      "library": "smaws-clients.workmail",
      "description": "This module handles setting mailbox permissions in AWS WorkMail by sending a request to configure access rights for a specific mailbox. It works with structured data types representing mailbox permission settings and handles responses including success states or specific AWS error conditions like invalid parameters or entity not found. A concrete use case is granting or revoking access for a user or group to a shared mailbox during onboarding or role changes.",
      "description_length": 463,
      "index": 1127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.TestAvailabilityConfiguration",
      "library": "smaws-clients.workmail",
      "description": "This module provides a function to test availability configuration settings for a WorkMail organization. It sends a request to validate the configuration and returns a result indicating success or specific error conditions. It works with configuration request and response types, handling errors like invalid parameters or missing resources.",
      "description_length": 341,
      "index": 1128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateOrganization",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of a new Amazon WorkMail organization by sending a request with provided configuration parameters. It processes responses and potential errors from the WorkMail service, including exceptions like directory conflicts, invalid inputs, or name availability issues. Use this module when setting up a WorkMail organization programmatically, ensuring proper directory association and domain configuration.",
      "description_length": 432,
      "index": 1129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListAliases",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing email aliases for a given entity in AWS WorkMail by sending a request and returning a result with either the response or specific error types. It operates on AWS WorkMail-specific data structures like `list_aliases_request` and `list_aliases_response`. A concrete use case is retrieving all aliases associated with a user or group within an organization for administrative management or auditing.",
      "description_length": 424,
      "index": 1130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.StartMailboxExportJob",
      "library": "smaws-clients.workmail",
      "description": "This module initiates a mailbox export job in AWS WorkMail, handling requests with parameters for mailbox and organization identifiers, and returns a result indicating success or specific error conditions like invalid parameters or resource not found. It works with AWS context and structured request/response types defined in the associated protocol libraries. Concrete use cases include exporting mailbox data for compliance, backup, or migration purposes.",
      "description_length": 458,
      "index": 1131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateAvailabilityConfiguration",
      "library": "smaws-clients.workmail",
      "description": "This module handles updating availability configurations for WorkMail organizations by sending requests with context and configuration parameters. It works with custom AWS JSON error types and structured request/response records specific to WorkMail. A concrete use case is modifying business hours or scheduling settings for a WorkMail organization in response to administrative changes.",
      "description_length": 388,
      "index": 1132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteGroup",
      "library": "smaws-clients.workmail",
      "description": "Deletes a WorkMail group by making an API request with the provided context and group details. It handles errors related to authentication, directory availability, invalid parameters, and organization state. This function is used when removing a group from an AWS WorkMail organization, ensuring the group is properly deregistered.",
      "description_length": 331,
      "index": 1133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateMailboxQuota",
      "library": "smaws-clients.workmail",
      "description": "This module handles updating a user's mailbox quota in AWS WorkMail by sending a request with the provided context and update parameters. It operates on the `update_mailbox_quota_request` type, returning either a success response or specific error types like `EntityNotFoundException` or `InvalidParameterException`. It is used to enforce storage limits for email accounts programmatically within an AWS environment.",
      "description_length": 416,
      "index": 1134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListGroupMembers",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing members of a WorkMail group by sending a request with a context and group identifier, returning a result that includes either the list of members or specific error types like `EntityNotFoundException` or `InvalidParameterException`. It operates on WorkMail group data structures, interacting with AWS WorkMail's API to retrieve membership details. A concrete use case is checking which users or groups are part of a specific WorkMail group for administrative or access control purposes.",
      "description_length": 514,
      "index": 1135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DisassociateMemberFromGroup",
      "library": "smaws-clients.workmail",
      "description": "This module handles the disassociation of a member from a group within a WorkMail organization. It accepts a context and a request containing identifiers for the member, group, and organization, then returns a result indicating success or a specific error. Concrete use cases include managing group membership changes in response to organizational updates or user removals.",
      "description_length": 373,
      "index": 1136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteAccessControlRule",
      "library": "smaws-clients.workmail",
      "description": "Deletes an access control rule for Amazon WorkMail, returning a result indicating success or failure with specific error types. It operates on a context and a delete access control rule request, handling responses with either a success response or errors like organization not found or organization state exceptions. This function is used to manage access policies in a WorkMail organization by removing outdated or unnecessary rules.",
      "description_length": 434,
      "index": 1137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListAccessControlRules",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing access control rules for an AWS WorkMail organization. It accepts a context and a request with the organization ID, returning either a response with the list of rules or specific error types like organization not found or state exceptions. It is used to retrieve and manage access policies applied to email clients connecting to a WorkMail service.",
      "description_length": 376,
      "index": 1138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.UntagResource",
      "library": "smaws-clients.workmail",
      "description": "Removes specified tags from a WorkMail resource. Works with AWS context and structured tag data to perform untagging operations. Useful for managing resource metadata in WorkMail environments.",
      "description_length": 192,
      "index": 1139,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetImpersonationRole",
      "library": "smaws-clients.workmail",
      "description": "This module handles retrieving an impersonation role configuration for a user in Amazon WorkMail. It sends a request using a provided context and returns either the role details or specific error types like `InvalidParameterException` or `ResourceNotFoundException`. It is used to manage access controls by fetching role assignments for user impersonation within a WorkMail organization.",
      "description_length": 387,
      "index": 1140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetAccessControlEffect",
      "library": "smaws-clients.workmail",
      "description": "This module handles retrieving the effective access control policy for a WorkMail resource by evaluating the permissions associated with an organization, user, or group. It works with AWS WorkMail access control requests and responses, specifically determining the effective access policy for a specified entity. Use this to programmatically assess access permissions for WorkMail entities such as users or groups within an organization.",
      "description_length": 437,
      "index": 1141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeregisterMailDomain",
      "library": "smaws-clients.workmail",
      "description": "This module handles the deregistration of a mail domain from an organization, interacting with the WorkMail service. It processes a request context and a deregistration payload, returning a result that includes either a success response or specific error types such as `InvalidParameterException` or `MailDomainInUseException`. It is used when removing a custom mail domain that is no longer needed or is being replaced, ensuring the domain is properly unlinked from the organization's configuration.",
      "description_length": 500,
      "index": 1142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListOrganizations",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing organizations by sending a request and returning a result with either the response or specific errors like invalid parameter exceptions. It works with context and request/response types defined in the Smaws_Client_WorkMail module. A concrete use case is retrieving organization data from AWS WorkMail in a result-safe manner.",
      "description_length": 353,
      "index": 1143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListResourceDelegates",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing delegates for a WorkMail resource, providing a `request` function that interacts with AWS WorkMail's API. It works with contexts and structured request/response types specific to WorkMail, including error types for common failure scenarios like missing entities or invalid parameters. Use this module to retrieve and manage delegate relationships for email resources in AWS WorkMail setups.",
      "description_length": 418,
      "index": 1144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListAvailabilityConfigurations",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing availability configurations for an organization in WorkMail. It takes a context and a request, returning a result with either the response or specific error types like organization not found or state exceptions. It is used to retrieve availability settings for calendars in a WorkMail organization.",
      "description_length": 326,
      "index": 1145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMailDomain",
      "library": "smaws-clients.workmail",
      "description": "This module handles retrieving mail domain information from AWS WorkMail by sending a request with a context and a get-mail-domain request. It processes responses and errors specific to mail domain queries, including invalid parameters, missing domains, and organization-related exceptions. Use it to fetch details about a specific mail domain within an AWS WorkMail organization.",
      "description_length": 380,
      "index": 1146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.AssociateDelegateToResource",
      "library": "smaws-clients.workmail",
      "description": "This module handles associating a delegate to a resource in AWS WorkMail by sending a request and returning a result with either a response or specific error types. It operates on AWS WorkMail request and response structures, including error types like `EntityNotFoundException` and `InvalidParameterException`. It is used to manage delegate-resource relationships in an AWS WorkMail organization, such as granting a user delegate access to a shared mailbox or calendar.",
      "description_length": 470,
      "index": 1147,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateMobileDeviceAccessRule",
      "library": "smaws-clients.workmail",
      "description": "This module handles updating mobile device access rules for an organization. It processes requests to modify device access policies, enforcing constraints on device types, models, operating systems, and user access. Use this module to restrict or permit mobile devices connecting to email services based on defined compliance criteria.",
      "description_length": 335,
      "index": 1148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteAvailabilityConfiguration",
      "library": "smaws-clients.workmail",
      "description": "Deletes an availability configuration for an organization in WorkMail. It takes a context and a request specifying the organization ID and domain name, returning a result indicating success or specific errors like organization not found or invalid state. This function is used to remove calendar availability settings for a domain in a WorkMail organization.",
      "description_length": 358,
      "index": 1149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.TagResource",
      "library": "smaws-clients.workmail",
      "description": "This module handles tagging operations for WorkMail resources by sending requests to associate tags with specified resources. It works with AWS WorkMail tag request and response structures, along with standard AWS error types. Use this module to programmatically manage metadata tags on WorkMail organizations, users, or mailboxes.",
      "description_length": 331,
      "index": 1150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteMobileDeviceAccessRule",
      "library": "smaws-clients.workmail",
      "description": "Deletes a mobile device access rule for an organization. Works with context and request/response types specific to the WorkMail service. Useful for managing device access policies in enterprise email environments.",
      "description_length": 213,
      "index": 1151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutRetentionPolicy",
      "library": "smaws-clients.workmail",
      "description": "This module handles the AWS WorkMail `PutRetentionPolicy` API operation, sending a request to set a retention policy for a WorkMail organization. It works with `Context.t` for authentication and `put_retention_policy_request` to define the policy and organization identifiers. It returns a result containing either the response confirming the policy update or specific AWS error types such as `InvalidParameterException` or `OrganizationNotFoundException`.",
      "description_length": 456,
      "index": 1152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListImpersonationRoles",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing impersonation roles for an Amazon WorkMail organization. It processes requests using a context and returns either a response with role details or specific error types like invalid parameters or organization state issues. It works directly with WorkMail's impersonation role data structures and is used to manage access controls in enterprise email environments.",
      "description_length": 389,
      "index": 1153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteOrganization",
      "library": "smaws-clients.workmail",
      "description": "Deletes an organization from AWS WorkMail, handling requests with parameters and returning a result that includes either a successful response or specific error types such as invalid parameter, organization not found, or organization state errors. Works with AWS context and WorkMail-specific request and response structures. Useful for managing organization lifecycle operations in AWS WorkMail integrations.",
      "description_length": 409,
      "index": 1154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeGroup",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `DescribeGroup` API operation for Amazon WorkMail, sending a request to retrieve details about a specific group within an organization. It works with the `describe_group_request` type to specify the group and organization identifiers, and returns a `describe_group_response` containing group metadata or an error. Concrete use cases include fetching group information for administrative reporting or validating group existence before performing membership operations.",
      "description_length": 491,
      "index": 1155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateMobileDeviceAccessRule",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of mobile device access rules for an organization's email service. It processes requests to define access policies based on device characteristics, user groups, and allowed device models. The module works directly with configuration data structures representing device access rules and integrates with the broader authentication and device management workflow.",
      "description_length": 393,
      "index": 1156,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeEmailMonitoringConfiguration",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `DescribeEmailMonitoringConfiguration` API request, retrieving email monitoring settings for a specified WorkMail organization. It accepts a context and a request object containing parameters like organization ID and resource ID, returning either a response with configuration details or an error indicating issues like invalid parameters or missing resources. Concrete use cases include auditing email monitoring policies or verifying configuration state for compliance purposes.",
      "description_length": 504,
      "index": 1157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutMobileDeviceAccessOverride",
      "library": "smaws-clients.workmail",
      "description": "This module handles requests to override mobile device access settings for a user in an organization. It sends a request to update device access rules based on provided parameters and returns a result indicating success or a specific error such as invalid parameters or missing entities. It works with context data, device access override requests, and produces responses or exceptions like `EntityNotFoundException` or `InvalidParameterException`.",
      "description_length": 448,
      "index": 1158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetMailboxDetails",
      "library": "smaws-clients.workmail",
      "description": "This module handles retrieving detailed information about a WorkMail mailbox by sending a request with a context and a structured query. It processes responses and potential errors related to mailbox entities, parameters, and organization states. Use this module to fetch specific mailbox attributes such as storage quotas, email aliases, and mailbox state in a WorkMail environment.",
      "description_length": 383,
      "index": 1159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListGroups",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing groups in an AWS WorkMail organization by sending a request and returning a result with either the response or specific error types. It works with AWS context, request, and response structures, along with custom error types like `EntityNotFoundException` and `InvalidParameterException. It is used to retrieve group information from a WorkMail directory, typically for administrative or integration purposes.",
      "description_length": 436,
      "index": 1160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteMailboxPermissions",
      "library": "smaws-clients.workmail",
      "description": "Deletes mailbox permissions for a specified entity in Amazon WorkMail, removing access for a user or group. Accepts a context and a request containing the organization ID, entity ID, and recipient ID. Returns a result indicating success or an error if the entity or organization is not found or in an invalid state.",
      "description_length": 315,
      "index": 1161,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeregisterFromWorkMail",
      "library": "smaws-clients.workmail",
      "description": "Handles deregistration of entities from WorkMail by sending a request with the provided context and parameters, returning a result that includes either a success response or specific error types. It operates on WorkMail deregistration requests and responses, which include identifiers for entities and organizations. This module is used when removing users or resources from a WorkMail organization, ensuring proper cleanup of associated email services.",
      "description_length": 453,
      "index": 1162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.AssociateMemberToGroup",
      "library": "smaws-clients.workmail",
      "description": "This module handles associating a member to a group within a WorkMail organization, issuing a request that takes a context and an association request object. It operates on data structures representing WorkMail entities such as members, groups, and organizations, and returns either a success response or a detailed error. Concrete use cases include managing group memberships in an AWS WorkMail directory, such as adding a user or another group to an existing group for email distribution or permissions purposes.",
      "description_length": 514,
      "index": 1163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CancelMailboxExportJob",
      "library": "smaws-clients.workmail",
      "description": "This module provides a function to cancel an ongoing mailbox export job by sending a cancellation request with the necessary context and job identifier. It handles responses from the service, including success outcomes and specific error conditions such as invalid parameters or missing entities. Use this module when you need to programmatically stop a mailbox export job in an AWS WorkMail environment.",
      "description_length": 404,
      "index": 1164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateImpersonationRole",
      "library": "smaws-clients.workmail",
      "description": "This module handles updating an impersonation role in a WorkMail organization. It accepts a context and a request with parameters like role ID, name, and access settings, returning a result indicating success or a specific error. Use it to modify existing impersonation roles when managing email access permissions in WorkMail.",
      "description_length": 327,
      "index": 1165,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListResources",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing resources within an AWS WorkMail organization by sending a structured request and returning a response with resource details or specific error types. It operates on AWS WorkMail resource data, including identifiers and configurations, and is used to retrieve resource information for management or auditing purposes. A concrete use case includes enumerating all resources in an organization to verify provisioning or to generate reports on resource allocation.",
      "description_length": 488,
      "index": 1166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.PutAccessControlRule",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation or updating of access control rules for email clients, specifically interacting with AWS WorkMail services. It processes requests to define access policies, returning responses or specific error types such as `InvalidParameterException` or `OrganizationStateException`. Use this module to enforce security rules when configuring email access in a managed AWS environment.",
      "description_length": 404,
      "index": 1167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ResetPassword",
      "library": "smaws-clients.workmail",
      "description": "This module handles password reset requests for WorkMail users, interacting with AWS services using context and request/response structures. It processes errors specific to authentication, directory availability, entity states, and password policies. Use this module to reset user passwords programmatically in a WorkMail environment, handling failures like invalid parameters or unavailable directories.",
      "description_length": 404,
      "index": 1168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteAlias",
      "library": "smaws-clients.workmail",
      "description": "Deletes an alias from an Amazon WorkMail organization. The operation takes a context and a delete alias request, returning a result that either contains the response or an error indicating issues like invalid parameters or missing entities. It works with WorkMail aliases and associated account and organization identifiers. Useful for managing email aliases in enterprise email systems.",
      "description_length": 387,
      "index": 1169,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeInboundDmarcSettings",
      "library": "smaws-clients.workmail",
      "description": "This module handles the retrieval of inbound DMARC settings for an organization in Amazon WorkMail. It processes a request to fetch DMARC configuration details and returns either the response with the settings or specific error types such as organization not found or organization state errors. It is used when managing email security policies to ensure proper domain authentication and email handling.",
      "description_length": 402,
      "index": 1170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.UpdateDefaultMailDomain",
      "library": "smaws-clients.workmail",
      "description": "This module handles updating the default mail domain for an organization in AWS WorkMail. It sends a request to set a specified domain as the default, returning a result that indicates success or a specific error condition. It works with AWS context, request, and response structures, along with custom error types for domain and organization state and parameter validation issues.",
      "description_length": 381,
      "index": 1171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteImpersonationRole",
      "library": "smaws-clients.workmail",
      "description": "This module provides a function to delete an impersonation role in Amazon WorkMail by sending a request with the role's identifier and organization ID. It operates on a context and a delete request structure, returning a result that includes either a success response or specific error types such as invalid parameter, organization not found, or organization state errors. A concrete use case is removing a deprecated impersonation role to enforce security policies within a WorkMail organization.",
      "description_length": 497,
      "index": 1172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListMailDomains",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing mail domains for an organization in AWS WorkMail by sending a request and returning a result with either the response or specific error types. It works with AWS context, request, and response structures, along with error types like `InvalidParameterException` and `OrganizationNotFoundException`. A concrete use case is retrieving configured mail domains to validate or manage email settings for a WorkMail organization.",
      "description_length": 448,
      "index": 1173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateGroup",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of a new group in Amazon WorkMail by sending a request to the service. It works with the `create_group_request` type to configure group details and returns a result containing either a `create_group_response` or specific error types like `NameAvailabilityException` or `OrganizationNotFoundException`. It is used when managing group resources in a WorkMail organization, such as setting up new groups with custom identifiers and display names.",
      "description_length": 476,
      "index": 1174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListUsers",
      "library": "smaws-clients.workmail",
      "description": "This module handles listing users in an AWS WorkMail organization by sending a request and returning a result with either the list of users or specific error types. It operates on AWS WorkMail list user requests and responses, interacting with organization identifiers and user data structures. A concrete use case is retrieving all users in a WorkMail organization to manage user access or permissions programmatically.",
      "description_length": 420,
      "index": 1175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DisassociateDelegateFromResource",
      "library": "smaws-clients.workmail",
      "description": "This module handles the disassociation of a delegate from a resource in AWS WorkMail, performing the necessary API request and returning a result with either a response or specific error types. It works with AWS WorkMail request and response structures, including error types like `EntityNotFoundException` and `InvalidParameterException`. It is used when managing email delegates in AWS WorkMail, such as removing a user's delegate access to a shared mailbox.",
      "description_length": 460,
      "index": 1176,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.DescribeOrganization",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `DescribeOrganization` API request for Amazon WorkMail, providing a function to retrieve detailed information about a specific organization. It works with the `describe_organization_request` type to send requests and returns either a `describe_organization_response` or specific error types like `InvalidParameterException` or `OrganizationNotFoundException`. Use this module to programmatically access organization metadata, such as directory ID or default mail domain, in an AWS WorkMail environment.",
      "description_length": 526,
      "index": 1177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.RegisterToWorkMail",
      "library": "smaws-clients.workmail",
      "description": "Registers an entity to Amazon WorkMail by sending a registration request with the provided context and request parameters. It handles responses and specific error cases such as authentication failures, duplicate email addresses, and invalid entity states. This function is used when setting up new users or resources in a WorkMail organization, ensuring they are correctly associated with the directory and email domain.",
      "description_length": 420,
      "index": 1178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.ListTagsForResource",
      "library": "smaws-clients.workmail",
      "description": "This module handles the `ListTagsForResource` operation for AWS WorkMail, sending a request to retrieve tags associated with a specified resource. It works with the `list_tags_for_resource_request` type to identify the resource and returns a response containing the tags or an error if the resource is not found. A concrete use case is retrieving metadata tags for a WorkMail organization or user to manage resource configurations or audit tags.",
      "description_length": 445,
      "index": 1179,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_WorkMail.GetDefaultRetentionPolicy",
      "library": "smaws-clients.workmail",
      "description": "This module handles retrieving the default retention policy for an Amazon WorkMail organization. It sends a request using the provided context and returns either the policy details or specific error types like `EntityNotFoundException` or `InvalidParameterException`. It is used to fetch retention settings for email data in a WorkMail environment.",
      "description_length": 348,
      "index": 1180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.DeleteMobileDeviceAccessOverride",
      "library": "smaws-clients.workmail",
      "description": "This module handles the deletion of mobile device access overrides for a user in an organization. It processes a delete request using a context and returns a result indicating success or specific error conditions such as invalid parameters or missing entities. It works directly with delete request and response types defined in the WorkMail client library.",
      "description_length": 357,
      "index": 1181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail.CreateImpersonationRole",
      "library": "smaws-clients.workmail",
      "description": "This module handles the creation of impersonation roles in AWS WorkMail by sending a structured request to the service. It works with context and request/response types specific to the WorkMail API, including detailed error types for handling failure cases. It is used to programmatically configure impersonation permissions for users or entities within a WorkMail organization.",
      "description_length": 378,
      "index": 1182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_WorkMail",
      "library": "smaws-clients.workmail",
      "description": "This module provides administrative operations for managing Amazon WorkMail configurations, including updating user roles, resource settings, and access control policies. It works with data structures representing entities like users, groups, resources, organizations, and domains, alongside configurations for mailbox quotas, device access rules, and impersonation roles. Specific use cases include setting domain verification records, managing group memberships, enforcing retention policies, and controlling mobile device access within AWS WorkMail organizations.",
      "description_length": 566,
      "index": 1183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.StartReplay",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the initiation of event replays by sending a request to start a replay operation. It works with context and replay request data types, returning either a replay response or specific error types. It is used to trigger replays of event archives within a system that integrates with event-driven architectures.",
      "description_length": 327,
      "index": 1184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListPartnerEventSourceAccounts",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles requests to list accounts associated with a partner event source in AWS EventBridge. It accepts a context and a `list_partner_event_source_accounts_request`, returning a result that includes either a response or specific AWS EventBridge errors. It is used when managing cross-account event routing for partner event sources.",
      "description_length": 344,
      "index": 1185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeEventBus",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeEventBus` operation for AWS EventBridge, allowing retrieval of details about a specific event bus. It works with the `describe_event_bus_request` and `describe_event_bus_response` data types, along with error types like `ResourceNotFoundException` and `InternalException`. A concrete use case is querying the configuration of an event bus to verify its existence or inspect its properties before managing rules or event sources.",
      "description_length": 461,
      "index": 1186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutEvents",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the low-level HTTP request to publish events to AWS EventBridge. It takes a context and a structured event request, then returns a result containing either the response from EventBridge or an error. It is used to send custom events to EventBridge for processing within serverless workflows or event-driven architectures.",
      "description_length": 340,
      "index": 1187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeConnection",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeConnection` operation for EventBridge, accepting a context and a request to retrieve details about a specific connection. It works with EventBridge connection identifiers and returns either a response with connection metadata or an error indicating failure. Use this to inspect the configuration or status of an existing EventBridge connection.",
      "description_length": 377,
      "index": 1188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateArchive",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles updating an EventBridge archive by sending a request with the archive's name and new configuration. It works with `update_archive_request` and `update_archive_response` data types, along with various error types for failure cases. A concrete use case is modifying the retention period or event pattern of an existing archive in response to infrastructure changes.",
      "description_length": 383,
      "index": 1189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeactivateEventSource",
      "library": "smaws-clients.eventbridge",
      "description": "This module provides a function to deactivate an event source in AWS EventBridge, handling errors such as concurrent modifications, invalid states, and missing resources. It operates on event source request data and returns a result indicating success or a specific error. A concrete use case is disabling an event source when it's no longer needed or when it's causing errors in event processing.",
      "description_length": 397,
      "index": 1190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListTagsForResource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `ListTagsForResource` operation for EventBridge, accepting a context and request to retrieve tags for a specified resource. It works with EventBridge-specific request and response types, including error variants like `ResourceNotFoundException`. A concrete use case is fetching metadata tags for an EventBridge rule or event bus to manage resource organization or cost allocation.",
      "description_length": 404,
      "index": 1191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListReplays",
      "library": "smaws-clients.eventbridge",
      "description": "Handles listing event bridge replays by sending a request with a provided context and replay parameters, returning a result that includes either the list of replays or an error. Works with AWS EventBridge replay data structures, specifically `list_replays_request` and `list_replays_response`. Useful for retrieving historical event replays in an AWS environment for debugging or analysis.",
      "description_length": 389,
      "index": 1192,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeApiDestination",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeApiDestination` operation for EventBridge, accepting a context and a request to retrieve details about a specific API destination. It works with EventBridge-specific data structures, including the request and response types for API destinations. A concrete use case is fetching configuration metadata for an API destination to validate its setup or integrate with external services.",
      "description_length": 415,
      "index": 1193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListConnections",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `ListConnections` API operation for EventBridge, sending requests to list event connections and returning parsed responses or errors. It works with AWS EventBridge connection data structures, including connection ARNs, names, and state details. A typical use case involves retrieving a list of existing event connections to monitor or manage their configuration within an AWS account.",
      "description_length": 408,
      "index": 1194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutPermission",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `PutPermission` operation for EventBridge by sending a request to add or update permissions for an event bus. It works with the `put_permission_request` type, which includes parameters like event bus name, action, principal, and statement ID. Use this module to manage cross-account event routing permissions programmatically.",
      "description_length": 350,
      "index": 1195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateApiDestination",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles updating API destinations in Amazon EventBridge by sending a request to modify an existing API destination configuration. It works with the `update_api_destination_request` type to specify changes and returns either a success response or specific AWS EventBridge error types like `ResourceNotFoundException` or `InternalException`. Use this module when adjusting API destination settings such as URL, authentication, or invocation rate limits.",
      "description_length": 463,
      "index": 1196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.TagResource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles tagging operations for EventBridge resources by sending tag assignment requests and returning responses or specific AWS service errors. It works with EventBridge tag request and response structures, along with context data for request execution. A concrete use case includes adding metadata tags to EventBridge rules or event buses for resource management and cost tracking.",
      "description_length": 394,
      "index": 1197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeReplay",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeReplay` operation for EventBridge, accepting a context and a describe replay request to return detailed information about a specific replay. It works with `describe_replay_request` and `describe_replay_response` types, along with error types like `internal_exception` and `resource_not_found_exception`. A concrete use case is retrieving the status and configuration of an ongoing or completed event replay in AWS EventBridge.",
      "description_length": 459,
      "index": 1198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListRuleNamesByTarget",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing rule names associated with a specific target in AWS EventBridge. It accepts a context and a request object containing the target ID, returning a result with either the list of rule names or an error. Concrete use cases include auditing event rules for a target or managing event-driven workflows in serverless applications.",
      "description_length": 351,
      "index": 1199,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutRule",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the core operation of sending a `put_rule` request to AWS EventBridge, managing the interaction with the service using context and structured request data. It works with types like `Smaws_Lib.Context.t`, `put_rule_request`, and `put_rule_response`, along with specific error types for handling AWS service responses. It is used when creating or updating EventBridge rules programmatically, particularly for handling event routing and automation scenarios in AWS infrastructure.",
      "description_length": 497,
      "index": 1200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ActivateEventSource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the activation of an event source in AWS EventBridge, sending a request to enable a specific event source and returning a result indicating success or a specific error. It works with the `Context.t` type for execution context and `activate_event_source_request` for request configuration. Concrete use cases include enabling partner event sources or resuming event ingestion after a pause.",
      "description_length": 409,
      "index": 1201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListTargetsByRule",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing targets for a specific rule in AWS EventBridge. It accepts a context and a request with the rule name, returning either a response with the list of targets or an error indicating failure. It works directly with AWS EventBridge rule targets, enabling retrieval for monitoring or management workflows.",
      "description_length": 327,
      "index": 1202,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeEndpoint",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeEndpoint` operation for EventBridge, sending a request to retrieve details about a specific endpoint and returning the response or an error. It works with `describe_endpoint_request` and `describe_endpoint_response` data types, which include endpoint identifiers and configuration details. A concrete use case is fetching endpoint metadata to verify its existence or inspect its settings during infrastructure management tasks.",
      "description_length": 460,
      "index": 1203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateConnection",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the creation of connections in Amazon EventBridge by sending a request to establish a connection with specified parameters. It works with AWS context and EventBridge-specific request and response structures, including error types like `InternalException` and `LimitExceededException`. A concrete use case is setting up an EventBridge connection to an external provider API for event-driven workflows.",
      "description_length": 420,
      "index": 1204,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListRules",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `ListRules` operation for EventBridge, sending requests to list rules associated with an EventBridge bus. It works with AWS EventBridge rule data structures, specifically handling responses that include rule metadata and potential errors like resource not found or internal exceptions. A concrete use case is retrieving all rules configured for a specific EventBridge event bus to manage or inspect routing logic.",
      "description_length": 437,
      "index": 1205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteRule",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deletion of an EventBridge rule by sending a request to remove a specified rule within a given context. It works with the `delete_rule_request` type, which includes parameters like the rule name and event bus name. The function returns a result indicating success or an error such as rule not found, concurrent modification, or internal service issues.",
      "description_length": 376,
      "index": 1206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribePartnerEventSource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribePartnerEventSource` operation for AWS EventBridge, accepting a context and a request to retrieve details about a specific partner event source. It works with AWS EventBridge's partner event source data structures, including request and response formats defined in the service's protocol. A typical use case involves querying metadata or configuration details of an existing partner event source registered in AWS EventBridge.",
      "description_length": 458,
      "index": 1207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.RemovePermission",
      "library": "smaws-clients.eventbridge",
      "description": "Removes permissions from an EventBridge rule by making a request to the AWS API. It takes a context and a structured request containing the rule and account ID. This function is used when revoking cross-account access to an event rule.",
      "description_length": 235,
      "index": 1208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateArchive",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the creation of an EventBridge archive by sending a request and returning a result with either a response or specific error types. It works with contexts, archive requests, and responses, along with various exception types for error handling. It is used when setting up or managing EventBridge archives programmatically, particularly in scenarios requiring precise control over archive configuration and error recovery.",
      "description_length": 439,
      "index": 1209,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateApiDestination",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the creation of API destinations in Amazon EventBridge by sending a request to configure endpoints with specified parameters. It works with AWS context, request, and response structures, along with error types like `InternalException` and `ResourceNotFoundException`. A concrete use case is setting up a new API destination for routing events to an external HTTP endpoint.",
      "description_length": 392,
      "index": 1210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateConnection",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles updating an EventBridge connection by sending a request with the provided context and update parameters, returning either a success response or specific error types like `ConcurrentModificationException` or `ResourceNotFoundException`. It operates on EventBridge connection data, including request and response structures defined in the `Smaws_Client_EventBridge` module. It is used when modifying existing EventBridge connections, such as updating authorization details or retry policies.",
      "description_length": 509,
      "index": 1211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListEndpoints",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing endpoints in AWS EventBridge by sending a request and returning a result with either the response or an error. It works with AWS EventBridge-specific data types, including context, request, and response structures. A concrete use case is retrieving configured endpoints for monitoring or managing event routing in AWS infrastructure.",
      "description_length": 361,
      "index": 1212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteArchive",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deletion of EventBridge archives by sending a request to remove a specified archive. It works with `delete_archive_request` to perform the operation and returns a result indicating success or failure with specific error types. Concrete use cases include removing outdated event archives or cleaning up resources after processing events.",
      "description_length": 360,
      "index": 1213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.EnableRule",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the enabling of EventBridge rules within a provided context. It takes an EventBridge enable rule request and returns a result indicating success or a specific error such as rule not found, concurrent modification, or internal failure. It is used when managing event routing by activating rules that trigger targeted actions in response to events.",
      "description_length": 366,
      "index": 1214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListEventBuses",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing event buses in AWS EventBridge by sending a request and returning a result with either the response or an error. It works with AWS EventBridge-specific data types, including event bus names and internal exceptions. A concrete use case is retrieving available event buses for monitoring or managing event-driven architectures in AWS.",
      "description_length": 360,
      "index": 1215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateEventBus",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles updating an EventBridge event bus by sending a request to modify its configuration. It works with AWS context data and structured request/response types specific to EventBridge. Use this when changing event bus settings like permissions or tags in AWS infrastructure code.",
      "description_length": 292,
      "index": 1216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UntagResource",
      "library": "smaws-clients.eventbridge",
      "description": "Removes specified tags from an EventBridge resource using the provided context and request parameters. Works with AWS EventBridge resources and handles tag management operations. Useful for maintaining resource metadata in serverless applications or event-driven architectures.",
      "description_length": 277,
      "index": 1217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreatePartnerEventSource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the creation of partner event sources in AWS EventBridge, providing a `request` function that sends a creation request and returns a result with either the response or specific error types. It works with AWS context, request, and response structures, along with custom error types for failure handling. It is used when setting up new event sources for partner services to stream events into EventBridge.",
      "description_length": 423,
      "index": 1218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListPartnerEventSources",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing partner event sources by sending a request to the EventBridge service. It works with `list_partner_event_sources_request` and returns either a `list_partner_event_sources_response` or an error type indicating failure. Concrete use cases include retrieving registered partner event sources for monitoring or integration purposes.",
      "description_length": 356,
      "index": 1219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.RemoveTargets",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the removal of targets from an EventBridge rule by sending a request to the AWS API. It works with EventBridge-specific data structures like `remove_targets_request` and `remove_targets_response`. Use this when managing event routing by removing specific targets from an EventBridge rule.",
      "description_length": 308,
      "index": 1220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeEventSource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeEventSource` operation for EventBridge, accepting a context and request to retrieve details about a specific event source. It works with the `describe_event_source_request` type and returns either a `describe_event_source_response` or specific error types such as `ResourceNotFoundException`. It is used to inspect the configuration and status of event sources connected to EventBridge, such as partner event sources or external providers.",
      "description_length": 472,
      "index": 1221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteApiDestination",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deletion of API destinations in AWS EventBridge by sending a deletion request and returning a result with either a success response or specific error types. It works with AWS EventBridge API destination identifiers and related exception types. A concrete use case is removing an API destination when it's no longer needed, handling errors like concurrent modifications or missing resources.",
      "description_length": 414,
      "index": 1222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutPartnerEvents",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the low-level HTTP request to publish partner events to AWS EventBridge, including request construction and response parsing. It operates on AWS context and event data structures, specifically sending batches of events and handling errors like invalid entries or service exceptions. It is used to integrate partner applications with AWS EventBridge by forwarding custom events programmatically.",
      "description_length": 414,
      "index": 1223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListArchives",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing EventBridge archives by sending a request and returning a result with either the list of archives or an error. It works with AWS EventBridge archive data structures, including request and response types specific to archive management. Use this to retrieve existing archives for monitoring, management, or integration with other AWS services.",
      "description_length": 369,
      "index": 1224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CancelReplay",
      "library": "smaws-clients.eventbridge",
      "description": "This module provides a `request` function to cancel a replay operation in EventBridge by sending a cancellation command with a specified replay name. It works with context and error types specific to the EventBridge client, handling failures like concurrent modifications or resource not found. Use it to programmatically stop an ongoing replay of events in AWS EventBridge.",
      "description_length": 374,
      "index": 1225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.TestEventPattern",
      "library": "smaws-clients.eventbridge",
      "description": "This module provides a function to validate whether an event matches a specified pattern in AWS EventBridge. It works with event patterns and test request/response structures defined in the EventBridge client library. A concrete use case is verifying event routing logic before deploying rules in a serverless application.",
      "description_length": 322,
      "index": 1226,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateEventBus",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the creation of an EventBridge event bus, issuing a request that returns a result indicating success or a specific error condition. It works with AWS context and EventBridge-specific request and response structures, including detailed error types like `ResourceAlreadyExistsException` or `LimitExceededException`. It is used when setting up new event buses in AWS EventBridge, particularly in infrastructure provisioning or event-driven architecture setup.",
      "description_length": 476,
      "index": 1227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteEventBus",
      "library": "smaws-clients.eventbridge",
      "description": "Implements the deletion of an EventBridge event bus, handling concurrency and internal errors. Works with AWS context and event bus request types. Used to remove event buses when managing event-driven architectures.",
      "description_length": 215,
      "index": 1228,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.PutTargets",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the core operation of sending a put targets request to AWS EventBridge, managing the addition or updating of targets for a specified rule. It works with structured data types representing EventBridge rules, targets, and associated AWS JSON error responses. Concrete use cases include configuring event-driven workflows by linking targets like Lambda functions to EventBridge rules, with detailed error handling for common AWS service exceptions.",
      "description_length": 465,
      "index": 1229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeauthorizeConnection",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deauthorization of a connection in the EventBridge service. It provides a `request` function that takes a context and a deauthorize connection request, then returns a result indicating success or specific service errors. It works directly with EventBridge connection identifiers and handles responses like resource not found or internal service errors.",
      "description_length": 376,
      "index": 1230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.UpdateEndpoint",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the request to update an EventBridge endpoint, sending the provided configuration and returning the updated endpoint details or specific AWS errors. It operates on `update_endpoint_request` and `update_endpoint_response` data types, which include endpoint configurations and response metadata. A concrete use case is modifying an existing EventBridge endpoint's routing or replication settings in response to infrastructure changes.",
      "description_length": 452,
      "index": 1231,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteConnection",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deletion of EventBridge connections by sending a request to remove a specified connection. It works with AWS EventBridge connection identifiers and manages responses including success, resource not found, concurrent modification, and internal errors. A concrete use case is removing an existing connection to an external partner event source when it's no longer needed.",
      "description_length": 393,
      "index": 1232,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeRule",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeRule` operation for EventBridge, accepting a context and a rule description request. It returns a result containing either the rule's details or specific error types like `ResourceNotFoundException`. Use it to retrieve configuration details of a specific EventBridge rule in AWS.",
      "description_length": 312,
      "index": 1233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DisableRule",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the disabling of an EventBridge rule by sending a request to AWS, managing errors such as concurrent modifications or missing resources. It operates on AWS context and EventBridge-specific request and error types. It is used when programmatically disabling event rules in AWS infrastructure.",
      "description_length": 311,
      "index": 1234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListEventSources",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles listing event sources in AWS EventBridge by sending a request and returning a result with either the response or specific error types. It works with AWS context, event source requests, and responses, including error handling for internal and operation-disabled exceptions. A concrete use case is retrieving registered event sources to manage event routing in serverless applications.",
      "description_length": 403,
      "index": 1235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.ListApiDestinations",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `ListApiDestinations` operation for EventBridge, sending requests to retrieve API destinations and returning paginated responses or errors. It works with AWS EventBridge API destination records, handling serialization and deserialization of request and response data. A typical use case involves listing configured API destinations to manage or monitor event routing in an AWS environment.",
      "description_length": 413,
      "index": 1236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeletePartnerEventSource",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deletion of partner event sources in AWS EventBridge by sending a request to disable and remove a specified event source. It works with the `delete_partner_event_source_request` type, which includes the name and ARN of the event source. Use this module when managing event sources for SaaS partners, ensuring they are properly deregistered and no longer trigger events.",
      "description_length": 393,
      "index": 1237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge.CreateEndpoint",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the creation of EventBridge endpoints by sending a request to AWS, using the provided context and endpoint configuration. It processes responses and errors specific to endpoint creation, including resource limits, internal errors, and duplicate resource exceptions. Use this module when configuring new EventBridge endpoints programmatically, such as during infrastructure setup or service deployment.",
      "description_length": 421,
      "index": 1238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DeleteEndpoint",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the deletion of an EventBridge endpoint by sending a request to remove a specified endpoint and returning a result with either a success response or specific error types. It works with the `delete_endpoint_request` type to identify the endpoint and produces a `delete_endpoint_response` or exceptions like `ResourceNotFoundException` if the endpoint doesn't exist. A concrete use case is removing outdated or unused endpoints to manage event routing efficiently.",
      "description_length": 482,
      "index": 1239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_EventBridge.DescribeArchive",
      "library": "smaws-clients.eventbridge",
      "description": "This module handles the `DescribeArchive` operation for EventBridge by sending a request to retrieve details about a specific archive. It works with `describe_archive_request` and `describe_archive_response` data types, along with handling specific AWS EventBridge errors like `ResourceNotFoundException` and `InternalException`. A concrete use case is querying the status or configuration of an existing EventBridge archive by its name.",
      "description_length": 437,
      "index": 1240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_EventBridge",
      "library": "smaws-clients.eventbridge",
      "description": "This module provides operations for configuring and managing AWS EventBridge resources, focusing on event routing, resource updates, and infrastructure integration. It works with data structures representing event buses, endpoints, connections, API destinations, and archives, along with authentication parameters, HTTP configurations, and metadata like ARNs and state timestamps. Specific use cases include setting up dead-letter queues for error handling, testing event patterns to validate routing logic, and managing connections with OAuth or API key authentication in event-driven architectures.",
      "description_length": 600,
      "index": 1241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the creation of custom vocabularies for speech transcription, sending requests and receiving responses with AWS Transcribe. It works with context, vocabulary request, and response data types, along with error types for handling failure cases. Concrete use cases include defining custom terminology for accurate transcription in domain-specific audio processing.",
      "description_length": 381,
      "index": 1242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteLanguageModel",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a custom language model by sending a deletion request with the model name. Works with AWS context and error types specific to the Transcribe service. Useful for removing outdated or unused language models to manage service quotas and resources.",
      "description_length": 252,
      "index": 1243,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateLanguageModel",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to create custom language models for transcription, handling responses and specific AWS service errors. It works with context and request/response types defined in the `Smaws_Client_Transcribe` module. A concrete use case is configuring a new language model for improving speech-to-text accuracy on domain-specific vocabulary.",
      "description_length": 354,
      "index": 1244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetCallAnalyticsCategory",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to retrieve call analytics categories from AWS Transcribe. It processes a context and a specific request structure, returning either a response with category details or an error indicating issues like invalid input, resource absence, or service failures. It is used to fetch configurations that define how call analytics jobs are categorized.",
      "description_length": 370,
      "index": 1245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteCallAnalyticsJob",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a call analytics job by name, interacting with the transcription service to remove the specified job. Works with call analytics job names and handles responses or errors from the deletion request. Useful for cleaning up completed or unnecessary call analytics jobs in a transcription workflow.",
      "description_length": 301,
      "index": 1246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteMedicalTranscriptionJob",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a medical transcription job by sending a request with the job name. Works with AWS context and transcription job request data types. Used to remove specific transcription jobs from the service, handling errors like invalid requests or system failures.",
      "description_length": 259,
      "index": 1247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListCallAnalyticsJobs",
      "library": "smaws-clients.transcribe",
      "description": "This module handles requests to list call analytics jobs, interacting with the transcription service using context and request parameters. It processes responses or error cases such as bad requests, internal failures, and limit exceedances. A typical use case involves querying the status or metadata of multiple call analytics jobs within a service.",
      "description_length": 350,
      "index": 1248,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateCallAnalyticsCategory",
      "library": "smaws-clients.transcribe",
      "description": "This module handles updating call analytics categories in AWS Transcribe by sending a request with the provided configuration and returning a result that includes either a successful response or specific error types. It operates on AWS context and request/response data structures defined in the Smaws_Client_Transcribe module. A concrete use case is modifying metadata or settings for a call analytics category used in processing call recordings.",
      "description_length": 447,
      "index": 1249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the transcription vocabulary update process by sending a request to modify existing vocabulary entries in a transcription service. It works with structured data types like `update_vocabulary_request` and `update_vocabulary_response`, along with various exception types for error handling. A concrete use case is updating custom speech recognition terms for improved transcription accuracy in specific domains.",
      "description_length": 429,
      "index": 1250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListMedicalScribeJobs",
      "library": "smaws-clients.transcribe",
      "description": "This module handles requests to list medical scribe jobs, interacting with the transcription service using a context and a specific request structure. It processes queries and returns a result containing either a list of job responses or various exception types such as bad request, internal failure, or limit exceeded. Use this module to retrieve job records for tracking, auditing, or managing medical transcription workflows.",
      "description_length": 428,
      "index": 1251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartMedicalTranscriptionJob",
      "library": "smaws-clients.transcribe",
      "description": "Starts a medical transcription job by sending a request with provided parameters. It handles errors related to invalid input, conflicts, internal failures, and rate limiting. This function is used to initiate transcription of medical audio files into text for healthcare applications.",
      "description_length": 284,
      "index": 1252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListCallAnalyticsCategories",
      "library": "smaws-clients.transcribe",
      "description": "This module handles requests to list call analytics categories in a transcription service. It works with context and request/response data types specific to the transcription API. A concrete use case is retrieving predefined categories for organizing call analytics data from a service.",
      "description_length": 286,
      "index": 1253,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateCallAnalyticsCategory",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the creation of call analytics categories in AWS Transcribe by sending a structured request and returning a categorized response. It works with AWS context, request, and response types, including specific error types like `BadRequestException` and `ConflictException`. Use this module to define and submit custom categories for analyzing call data, such as flagging specific speech patterns or events during transcription processing.",
      "description_length": 453,
      "index": 1254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetMedicalVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "This module handles retrieving medical vocabulary configurations from a transcription service. It processes a request using a context and returns either a response with the vocabulary details or specific error types like `BadRequestException` or `NotFoundException`. It is used to fetch predefined medical terms for enhancing transcription accuracy in healthcare-related audio processing.",
      "description_length": 388,
      "index": 1255,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DescribeLanguageModel",
      "library": "smaws-clients.transcribe",
      "description": "This module handles requests to describe a language model in a transcription service, sending a query with a context and receiving a response that includes details about the model or specific errors. It works with types like `describe_language_model_request`, `describe_language_model_response`, and various exception types for error handling. A concrete use case is retrieving metadata and status of a custom language model by its name or identifier in a transcription system.",
      "description_length": 477,
      "index": 1256,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteMedicalScribeJob",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a medical scribe job by sending a request with the job name. Works with AWS JSON error types and contextual configuration. Useful for removing completed or unnecessary medical transcription jobs from the service.",
      "description_length": 220,
      "index": 1257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateVocabularyFilter",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the creation of vocabulary filters for transcription services by sending requests and processing responses. It works with context and configuration data to manage filter setup, supporting use cases like restricting transcribed text to specific terms. It returns either a successful response or detailed error information for handling failures.",
      "description_length": 363,
      "index": 1258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetMedicalTranscriptionJob",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to retrieve medical transcription job details from AWS Transcribe, handling responses and specific error conditions like bad requests, internal failures, limit exceedances, and missing resources. It operates on medical transcription job identifiers within a contextual execution environment. Use this module to fetch the status or results of a specific medical transcription job in healthcare applications.",
      "description_length": 434,
      "index": 1259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteVocabularyFilter",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the deletion of a vocabulary filter in a transcription service by sending a request with the provided context and filter name. It works with error types specific to AWS JSON protocols and transcription service exceptions. A concrete use case is removing outdated or unused vocabulary filters to manage transcription accuracy and resource limits.",
      "description_length": 365,
      "index": 1260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteTranscriptionJob",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a transcription job by sending a request with the job name. Works with AWS context and transcription job request data types. Used to remove specific transcription jobs from AWS Transcribe, handling errors like invalid requests or service failures.",
      "description_length": 255,
      "index": 1261,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListTagsForResource",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the `list_tags_for_resource` operation, sending a request to retrieve tags associated with a specific AWS Transcribe resource. It works with the `list_tags_for_resource_request` type, which includes the resource ARN, and returns a response containing a list of tags or an error. A concrete use case is fetching metadata tags for billing or resource management purposes in AWS Transcribe services.",
      "description_length": 416,
      "index": 1262,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.UntagResource",
      "library": "smaws-clients.transcribe",
      "description": "Sends an untagging request to remove specified tags from a resource, handling responses and errors specific to the service. Works with context and untag resource request/response types, including error types like `BadRequestException` and `NotFoundException`. Used to manage tag removal operations on transcription resources in AWS.",
      "description_length": 332,
      "index": 1263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListLanguageModels",
      "library": "smaws-clients.transcribe",
      "description": "This module handles listing available language models for transcription services. It works with AWS context and request/response structures specific to model enumeration. A concrete use case is retrieving a paginated list of custom language models configured in AWS Transcribe.",
      "description_length": 277,
      "index": 1264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.TagResource",
      "library": "smaws-clients.transcribe",
      "description": "Handles tagging operations for AWS Transcribe resources by sending requests to associate or update tags on specific resources. It works with tag resource request and response data structures, along with various error types for handling failure scenarios. This module is used when managing metadata tags on AWS Transcribe services, such as adding or modifying tags for transcription jobs or medical vocabularies.",
      "description_length": 411,
      "index": 1265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a custom vocabulary from the transcription service. Works with context and request data types to handle deletion, returning unit on success or specific error types. Useful for managing custom vocabularies when reconfiguring transcription jobs or cleaning up unused resources.",
      "description_length": 283,
      "index": 1266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListMedicalTranscriptionJobs",
      "library": "smaws-clients.transcribe",
      "description": "This module handles requests to list medical transcription jobs, interacting with AWS services using context and request/response types specific to the transcription API. It works with structured data types like `list_medical_transcription_jobs_request` and `list_medical_transcription_jobs_response`, along with error types for handling failures. A concrete use case is retrieving a paginated list of medical transcription jobs filtered by status or time range for monitoring or processing purposes.",
      "description_length": 500,
      "index": 1267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListMedicalVocabularies",
      "library": "smaws-clients.transcribe",
      "description": "This module handles requests to list medical vocabularies in a transcription service, interacting with AWS JSON-based APIs. It processes input contexts and structured requests to retrieve vocabulary data, returning either a response or specific error types like `BadRequestException` or `LimitExceededException`. Use this module when querying available medical vocabularies for transcription customization or management.",
      "description_length": 420,
      "index": 1268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteCallAnalyticsCategory",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a call analytics category by name. Works with AWS context and request/response types specific to the Transcribe service. Useful for removing custom categories used in call analysis workflows.",
      "description_length": 199,
      "index": 1269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartTranscriptionJob",
      "library": "smaws-clients.transcribe",
      "description": "This module initiates a transcription job by sending a request with specified parameters, returning a result that indicates success or a specific AWS service error. It operates on transcription job request and response structures, handling exceptions like bad requests, conflicts, internal failures, and limit exceedances. Use this to start asynchronous audio-to-text conversions with AWS Transcribe, integrating error handling for service-specific failure scenarios.",
      "description_length": 467,
      "index": 1270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetMedicalScribeJob",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to retrieve medical scribe job details, handling responses and specific error conditions such as bad requests, internal failures, limit exceeded, and not found. It operates on medical scribe job identifiers within a contextual execution environment. A typical use case involves querying the status or metadata of a specific medical scribe job by its ID in healthcare transcription workflows.",
      "description_length": 419,
      "index": 1271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateMedicalVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "Handles requests to update a medical vocabulary in a transcription service. It sends an update request and returns the response or specific error types like `BadRequestException` or `NotFoundException`. Works directly with medical vocabulary request and response structures.",
      "description_length": 274,
      "index": 1272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartMedicalScribeJob",
      "library": "smaws-clients.transcribe",
      "description": "Starts a medical scribe job by sending a request with the provided context and job configuration. It processes audio input into transcribed text, returning a result that contains either the job response or specific error types such as `BadRequestException` or `LimitExceededException`. This function is used when initiating real-time transcription for medical documentation workflows.",
      "description_length": 384,
      "index": 1273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListVocabularies",
      "library": "smaws-clients.transcribe",
      "description": "This module handles listing vocabularies from a transcription service, sending requests and receiving responses with vocabulary data. It works with context and request/response types specific to vocabulary management. A concrete use case is retrieving a paginated list of custom vocabularies for managing speech-to-text transcription models.",
      "description_length": 341,
      "index": 1274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to retrieve vocabulary details from a transcription service, handling specific error cases like invalid inputs or missing resources. It works with context and request/response types defined in the `Smaws_Client_Transcribe` module. A concrete use case is fetching a custom vocabulary entry by name to inspect its content or configuration.",
      "description_length": 365,
      "index": 1275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetVocabularyFilter",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to retrieve vocabulary filters from a transcription service, handling specific error cases like missing resources or service failures. It works with context and request/response types defined in the `Smaws_Client_Transcribe` module. A concrete use case is fetching a custom vocabulary filter by name to manage speech-to-text transcription accuracy for specific terms.",
      "description_length": 395,
      "index": 1276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetTranscriptionJob",
      "library": "smaws-clients.transcribe",
      "description": "This module handles retrieving the status and details of a transcription job by sending a request to the transcription service. It works with context and request/response types specific to transcription jobs, including error types for common failure scenarios. Use this module to check the progress or outcome of a previously initiated transcription task.",
      "description_length": 355,
      "index": 1277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.StartCallAnalyticsJob",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the initiation of call analytics jobs by sending a request with the necessary context and parameters. It processes responses from the transcription service, returning either a successful result or specific error types like `BadRequestException` or `LimitExceededException`. It is used when analyzing call recordings for insights such as sentiment or speaker separation.",
      "description_length": 389,
      "index": 1278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.DeleteMedicalVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "Deletes a medical vocabulary from the transcription service. Works with context and request data types to handle deletion, returning unit on success or specific error types. Useful for managing custom medical vocabularies in transcription workflows.",
      "description_length": 249,
      "index": 1279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.GetCallAnalyticsJob",
      "library": "smaws-clients.transcribe",
      "description": "This module issues requests to retrieve call analytics job details from AWS Transcribe, handling responses and specific error conditions like job not found or service limits being exceeded. It works with call analytics job identifiers and AWS context configurations. A typical use case involves checking the status and results of a previously initiated call analytics job.",
      "description_length": 372,
      "index": 1280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe.UpdateVocabularyFilter",
      "library": "smaws-clients.transcribe",
      "description": "This module handles updating a vocabulary filter in a transcription service by sending a request with the provided context and filter configuration. It works with AWS-specific error types and structured request/response data types for transcription operations. A concrete use case is modifying a vocabulary filter to include or exclude specific terms during audio transcription processing.",
      "description_length": 389,
      "index": 1281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListTranscriptionJobs",
      "library": "smaws-clients.transcribe",
      "description": "This module handles listing transcription jobs by sending a request and returning a result with either a list of job summaries or an error. It works with AWS context, request, and response structures specific to transcription job management. Use it to retrieve existing transcription job statuses and metadata from AWS Transcribe.",
      "description_length": 330,
      "index": 1282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.ListVocabularyFilters",
      "library": "smaws-clients.transcribe",
      "description": "This module handles listing vocabulary filters for a transcription service, interacting with AWS JSON protocols. It processes requests to retrieve filters, returning either a list of filters or specific error types like `BadRequestException`. Use this when managing speech-to-text vocabulary filters in AWS Transcribe workflows.",
      "description_length": 328,
      "index": 1283,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Transcribe.CreateMedicalVocabulary",
      "library": "smaws-clients.transcribe",
      "description": "This module handles the creation of medical vocabularies for transcription services. It works with context and request/response data types specific to the transcription service, including error types for handling failure cases. It is used when setting up custom medical terminology to improve the accuracy of medical speech transcription.",
      "description_length": 338,
      "index": 1284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Transcribe",
      "library": "smaws-clients.transcribe",
      "description": "This module provides operations for managing speech transcription workflows, including vocabulary customization (standard, medical), call analytics configuration, and job lifecycle management. It works with structured data types like ARNs, URIs, time ranges, and JSON-based job configurations to handle tasks such as content redaction, sentiment filtering, and speaker labeling. Specific use cases include enhancing transcription accuracy for domain-specific language, applying real-time analytics to call recordings, and securely managing transcription resources with tagging and encryption settings.",
      "description_length": 601,
      "index": 1285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.DeleteMessage",
      "library": "smaws-clients.sqs",
      "description": "This module handles the deletion of a message from an SQS queue using a provided receipt handle. It works with AWS context and SQS-specific error types to ensure correct message removal. Use this when confirming successful message processing and needing to delete it from the queue.",
      "description_length": 282,
      "index": 1286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ListMessageMoveTasks",
      "library": "smaws-clients.sqs",
      "description": "Handles listing message move tasks in SQS, interacting with contexts and SQS-specific request/response types. It provides a `request` function that executes the operation, returning either a result or specific SQS error types. Useful for monitoring or managing message migration tasks between queues in SQS.",
      "description_length": 307,
      "index": 1287,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.GetQueueUrl",
      "library": "smaws-clients.sqs",
      "description": "Retrieves the URL of an existing SQS queue by name, handling errors such as queue not found, invalid credentials, or throttling. Works with AWS SQS queue identifiers and context for authentication. Useful for queue management tasks like message sending or polling.",
      "description_length": 264,
      "index": 1288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.TagQueue",
      "library": "smaws-clients.sqs",
      "description": "Adds tags to an Amazon SQS queue using a provided context and tag queue request. It handles errors such as invalid addresses, security issues, missing queues, throttled requests, and unsupported operations. This module is used to organize and manage SQS queue metadata in AWS environments.",
      "description_length": 289,
      "index": 1289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.CreateQueue",
      "library": "smaws-clients.sqs",
      "description": "This module issues SQS queue creation requests, handling responses and errors. It works with AWS context and SQS-specific request/response data types. Use it to create queues with custom attributes in AWS SQS, capturing detailed service errors like duplicate names or throttling.",
      "description_length": 279,
      "index": 1290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ChangeMessageVisibilityBatch",
      "library": "smaws-clients.sqs",
      "description": "This module handles batch updates to message visibility timeouts in an SQS queue. It accepts a context and a batch request containing multiple message entries, returning a result with either the batch update response or specific error types like duplicate entry IDs, invalid addresses, or queue absence. It is used to efficiently adjust visibility for multiple messages received from a queue, such as after a bulk processing operation.",
      "description_length": 435,
      "index": 1291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.ChangeMessageVisibility",
      "library": "smaws-clients.sqs",
      "description": "This module handles changing the visibility timeout of a specific message in an SQS queue. It accepts a context and a request containing the queue URL, receipt handle, and visibility timeout value. The operation is used to extend or shorten the period during which a message is hidden from other consumers after being received.",
      "description_length": 327,
      "index": 1292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.RemovePermission",
      "library": "smaws-clients.sqs",
      "description": "Removes a permission from a queue by making a request with a context and a remove permission request. It handles errors such as invalid addresses, security issues, missing queues, throttling, and unsupported operations. This module is used when revoking access rights to an SQS queue for specific AWS accounts or principals.",
      "description_length": 324,
      "index": 1293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.AddPermission",
      "library": "smaws-clients.sqs",
      "description": "Adds permissions to an Amazon SQS queue by making an API request with the provided context and permission configuration. It handles errors related to invalid addresses, security constraints, queue limits, and non-existent queues. This module is used to grant specific actions to AWS accounts or users for a queue.",
      "description_length": 313,
      "index": 1294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ListDeadLetterSourceQueues",
      "library": "smaws-clients.sqs",
      "description": "This module handles the AWS SQS operation to list dead-letter source queues by sending a request with a provided context and returning a result that includes either the list of source queues or specific SQS error types. It works with AWS SQS request and response structures, specifically `list_dead_letter_source_queues_request` and `list_dead_letter_source_queues_result`. A concrete use case is retrieving the set of queues that target a specific dead-letter queue for monitoring or debugging message flow issues in SQS-based systems.",
      "description_length": 536,
      "index": 1295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.SendMessageBatch",
      "library": "smaws-clients.sqs",
      "description": "This module sends batches of messages to an SQS queue, handling validation and error cases for batch operations. It works with batch request structures containing message entries and returns results with either success responses or specific error types. Use it to efficiently enqueue multiple messages in a single request while handling AWS service constraints and failures.",
      "description_length": 374,
      "index": 1296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.CancelMessageMoveTask",
      "library": "smaws-clients.sqs",
      "description": "This module handles the cancellation of a message move task in an SQS queue by sending a request with the necessary context and task identifiers. It operates on SQS-specific request and result types, including error variants for common AWS service responses. Use this module when managing message migration tasks in distributed systems that require precise control over SQS message handling.",
      "description_length": 391,
      "index": 1297,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.DeleteQueue",
      "library": "smaws-clients.sqs",
      "description": "Deletes an SQS queue using the provided context and request parameters. Works with AWS SQS queue identifiers and handles specific AWS error responses like queue not found or request throttling. Useful for managing SQS queue lifecycle and error handling in distributed systems.",
      "description_length": 276,
      "index": 1298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.DeleteMessageBatch",
      "library": "smaws-clients.sqs",
      "description": "This module handles the deletion of multiple messages from an SQS queue in a single batch request. It accepts a context and a batch delete request containing message receipt identifiers, returning a result that indicates success or specific error conditions such as duplicate entry IDs, invalid addresses, or queue absence. It is used to efficiently remove several messages from a queue, typically after they have been processed successfully.",
      "description_length": 442,
      "index": 1299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.ReceiveMessage",
      "library": "smaws-clients.sqs",
      "description": "This module handles receiving messages from an SQS queue, providing a `request` function that takes a context and a receive message request. It works with SQS-specific types like `receive_message_request` and `receive_message_result`, along with various error types representing SQS service responses. Concrete use cases include polling messages from a queue with visibility timeout settings and handling errors such as queue not found or request throttling.",
      "description_length": 458,
      "index": 1300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.GetQueueAttributes",
      "library": "smaws-clients.sqs",
      "description": "This module issues requests to retrieve attributes of an SQS queue, handling responses and errors specific to queue metadata retrieval. It operates on SQS queue URLs and attribute names, returning results like queue ARN, visibility timeout, or message retention period. Use it to inspect queue configuration details directly from AWS SQS.",
      "description_length": 338,
      "index": 1301,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.UntagQueue",
      "library": "smaws-clients.sqs",
      "description": "Removes specified tags from an Amazon SQS queue. Works with AWS context and SQS-specific error types. Use to manage queue metadata by deleting tags based on their keys.",
      "description_length": 168,
      "index": 1302,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.SendMessage",
      "library": "smaws-clients.sqs",
      "description": "Sends a message to an SQS queue with support for encryption and delay settings. Works with AWS SQS request and error types to handle message delivery and validation failures. Used to enqueue tasks or events for distributed processing in serverless architectures.",
      "description_length": 262,
      "index": 1303,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.ListQueueTags",
      "library": "smaws-clients.sqs",
      "description": "This module handles the AWS SQS operation to list tags associated with a specific queue. It accepts a context and a list queue tags request, returning either a result with the queue's tags or an error indicating issues like invalid credentials, non-existent queues, or throttled requests. It works directly with SQS queue URLs and tag structures, making it suitable for managing metadata on message queues in distributed systems.",
      "description_length": 429,
      "index": 1304,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.ListQueues",
      "library": "smaws-clients.sqs",
      "description": "Makes an API request to list SQS queues, handling authentication and error responses. Works with AWS context and SQS-specific request/response structures. Used to retrieve a paginated list of queue URLs from a specific AWS region.",
      "description_length": 230,
      "index": 1305,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SQS.StartMessageMoveTask",
      "library": "smaws-clients.sqs",
      "description": "This module provides a function to initiate a message move task in SQS, handling errors related to permissions, resource existence, and request throttling. It operates on SQS-specific request and result types, including structured error types for common AWS SQS failure scenarios. It is used to move messages between queues in SQS while handling task lifecycle and error conditions directly.",
      "description_length": 391,
      "index": 1306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.SetQueueAttributes",
      "library": "smaws-clients.sqs",
      "description": "This module handles setting attributes for an SQS queue, such as visibility timeout, message retention period, and access policies. It sends a request to update these attributes and returns a result indicating success or a specific error. Use it when configuring queue behavior or permissions in an SQS-based messaging system.",
      "description_length": 326,
      "index": 1307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS.PurgeQueue",
      "library": "smaws-clients.sqs",
      "description": "PurgeQueue sends a request to empty all messages from a specified SQS queue, handling errors such as queue not found or purge already in progress. It operates on SQS queue URLs and integrates with AWS authentication and context management. This module is used to reset a queue's state during testing or to clear stuck messages in production workflows.",
      "description_length": 351,
      "index": 1308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SQS",
      "library": "smaws-clients.sqs",
      "description": "This module provides operations for managing message queues, sending and receiving messages (including batch processing), modifying queue attributes and visibility settings, and handling tags, permissions, and errors specific to AWS SQS. It works with data structures such as queue URLs, message attributes, receipt handles, and metadata, supporting use cases like distributed system coordination, batched message ingestion pipelines, and queue configuration management with robust error handling for service-specific conditions.",
      "description_length": 529,
      "index": 1309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetPerformanceAnalysisReport",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to retrieve performance analysis reports, handling responses and specific error conditions such as authorization failures or invalid inputs. It operates on context and request/response types defined in the Smaws_Client_PI module, returning result values that encapsulate either success or error details. A typical use case involves querying a backend service for performance metrics tied to specific identifiers or time ranges.",
      "description_length": 455,
      "index": 1310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetDimensionKeyDetails",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to retrieve detailed information about dimension keys in a monitoring service. It processes queries using a context and request structure, returning either a response with dimension key details or specific error types. It is used to fetch metadata for metrics dimensions in systems like AWS CloudWatch.",
      "description_length": 330,
      "index": 1311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.DescribeDimensionKeys",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to describe dimension keys for performance insights, handling responses and errors from the AWS service. It works with context and request/response types specific to the performance insights API. Use it to retrieve metadata about dimension keys used in performance analysis.",
      "description_length": 302,
      "index": 1312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetResourceMetrics",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to retrieve resource metrics from a service, handling responses and specific error conditions such as authorization failures or invalid inputs. It operates on context and request/response types defined in related modules, enabling precise querying and error handling. A concrete use case is fetching performance metrics for a specific resource in an automated monitoring workflow.",
      "description_length": 408,
      "index": 1313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.GetResourceMetadata",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to retrieve metadata about AWS resources, handling responses and specific error conditions like invalid arguments or lack of authorization. It operates on context and request/response types defined in related modules, enabling precise interaction with AWS services. A concrete use case includes fetching metadata for a specific resource to validate its existence or configuration within an AWS environment.",
      "description_length": 434,
      "index": 1314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.CreatePerformanceAnalysisReport",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to generate performance analysis reports, handling responses and errors from the service. It works with context and request/response data structures defined in related modules. A typical use case involves sending a report generation request with specific parameters and handling the result or error returned.",
      "description_length": 336,
      "index": 1315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.ListPerformanceAnalysisReports",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to list performance analysis reports, handling responses and errors from the underlying service. It operates on context and request/response types specific to the performance analysis reporting API. Use it to retrieve and process performance data from a monitoring system in a structured format.",
      "description_length": 323,
      "index": 1316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.ListAvailableResourceDimensions",
      "library": "smaws-clients.pi",
      "description": "This module handles requests to list available resource dimensions for monitoring metrics in AWS services. It works with context and request/response types specific to the AWS CloudWatch API. A concrete use case is retrieving dimension keys for querying CloudWatch metrics, such as instance IDs or availability zones, to filter and aggregate metric data.",
      "description_length": 354,
      "index": 1317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.ListTagsForResource",
      "library": "smaws-clients.pi",
      "description": "This module handles listing tags for a specified resource by sending a request and returning a result with either the tag response or an error. It works with AWS context, resource request, and response data types, along with specific AWS service error types. A concrete use case is retrieving metadata tags for cost allocation or resource management in AWS services.",
      "description_length": 366,
      "index": 1318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.ListAvailableResourceMetrics",
      "library": "smaws-clients.pi",
      "description": "This module issues requests to list available resource metrics for AWS services, handling responses and specific error conditions like invalid arguments or authorization issues. It operates on AWS context and request/response data structures defined in the Smaws_Client_PI module. A concrete use case is retrieving metric metadata for monitoring resources in an AWS environment.",
      "description_length": 378,
      "index": 1319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.UntagResource",
      "library": "smaws-clients.pi",
      "description": "Removes specified tags from a resource within a given context. Works with AWS JSON error types and structured request/response formats. Useful for managing resource metadata in AWS services by directly modifying tag associations.",
      "description_length": 229,
      "index": 1320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.TagResource",
      "library": "smaws-clients.pi",
      "description": "Handles tagging of AWS resources by sending a tagging request with a list of key-value pairs. Works with AWS context and tagging request/response structures, specifically for resource metadata management. Used when applying tags to cloud resources like EC2 instances or S3 buckets for cost allocation or organization.",
      "description_length": 317,
      "index": 1321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_PI.DeletePerformanceAnalysisReport",
      "library": "smaws-clients.pi",
      "description": "Deletes performance analysis reports using a provided context and request parameters. It handles errors related to authorization, invalid arguments, and internal service issues, returning a result with the deletion response or an error. This module is used when removing specific performance analysis data from a service.",
      "description_length": 321,
      "index": 1322,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_PI",
      "library": "smaws-clients.pi",
      "description": "This module provides operations for managing resource tags and querying performance data in cloud environments, focusing on AWS services like RDS and DOCDB. It handles structured types such as resource metrics, dimension keys, and analysis reports, enabling tasks like filtering metrics by dimensions, retrieving metadata, and tracking resource feature statuses. Specific use cases include monitoring database performance, analyzing resource utilization trends, and managing tag-based resource organization for cost allocation or compliance.",
      "description_length": 541,
      "index": 1323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.DeleteHypervisor",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the deletion of a hypervisor in a backup gateway environment. It takes a context and a hypervisor deletion input, returning a result that either confirms successful deletion or indicates specific failure conditions. It works directly with hypervisor input and output structures, along with error types like access denied, conflict, and resource not found. Use this module when removing a hypervisor resource and handling potential errors during the deletion process.",
      "description_length": 486,
      "index": 1324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.AssociateGatewayToServer",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles associating a backup gateway with a server by sending a request using the provided context and input parameters. It works with the `associate_gateway_to_server_input` and `associate_gateway_to_server_output` data types, along with handling specific errors like `ConflictException`. A concrete use case is linking a backup gateway to a target server within a cloud infrastructure management system.",
      "description_length": 417,
      "index": 1325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UpdateGatewayInformation",
      "library": "smaws-clients.backup-gateway",
      "description": "Performs an update operation on gateway information using a provided context and input parameters, returning either a success result or specific error types such as conflict or resource not found. It works with input and output structures defined in the BackupGateway module, along with error types from the AwsJson protocol. This operation is used when modifying metadata or configuration of a backup gateway resource in AWS.",
      "description_length": 426,
      "index": 1326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetBandwidthRateLimitSchedule",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles retrieving the bandwidth rate limit schedule for a specified gateway, interacting with the BackupGateway service. It processes requests using a context and input parameters, returning either the schedule details or specific errors like resource not found. Use this to manage and monitor data transfer rates in backup operations.",
      "description_length": 348,
      "index": 1327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListVirtualMachines",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the `ListVirtualMachines` operation for the BackupGateway service, sending requests to list virtual machines and returning the output or an AWS JSON error. It works with input and output structures specific to the BackupGateway service, including virtual machine metadata. Use this module to retrieve a list of registered virtual machines from BackupGateway within a given context.",
      "description_length": 401,
      "index": 1328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListHypervisors",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the `ListHypervisors` operation for the BackupGateway service, sending requests to list configured hypervisors. It works with input and output structures defined in `Smaws_Client_BackupGateway`, including error handling in the result type. A concrete use case is retrieving a list of registered hypervisors for monitoring or management purposes.",
      "description_length": 365,
      "index": 1329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.DeleteGateway",
      "library": "smaws-clients.backup-gateway",
      "description": "Deletes a backup gateway by its ARN, returning a result indicating success or failure. It operates on input containing the gateway ARN and produces output confirming deletion or an error if the gateway is not found. Useful for removing unused or decommissioned backup gateways in AWS environments.",
      "description_length": 297,
      "index": 1330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetHypervisor",
      "library": "smaws-clients.backup-gateway",
      "description": "This module issues requests to retrieve hypervisor details from the BackupGateway service. It handles input parameters and context to fetch specific hypervisor information, returning either the hypervisor data or an error if the resource is not found. A concrete use case is retrieving configuration details of a registered VMware vSphere hypervisor for monitoring or management purposes.",
      "description_length": 388,
      "index": 1331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.PutHypervisorPropertyMappings",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the mapping of hypervisor properties by sending a request to update these mappings. It works with input data specifying hypervisor identifiers and their associated properties, returning a result that indicates success or a specific error such as access denial, conflict, or missing resource. It is used when configuring or updating hypervisor metadata in a backup gateway setup.",
      "description_length": 398,
      "index": 1332,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.TagResource",
      "library": "smaws-clients.backup-gateway",
      "description": "Sends a tagging request to associate metadata tags with a specified backup resource. It accepts a context and an input structure containing the resource ARN and tags, returning a result indicating success or failure with specific error types. This operation is used to organize and manage backup resources using key-value metadata.",
      "description_length": 331,
      "index": 1333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.StartVirtualMachinesMetadataSync",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles initiating a virtual machine metadata synchronization operation. It sends a request to start syncing metadata for virtual machines, returning either a success result or specific error types like access denied or resource not found. It works with context and input/output structures defined in the BackupGateway protocol, used in backup orchestration scenarios.",
      "description_length": 380,
      "index": 1334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetVirtualMachine",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles retrieving details of a specific virtual machine in a backup gateway environment. It accepts a context and an input structure containing identifiers, returning either the virtual machine's details or an error indicating failure. It is used to fetch virtual machine metadata for monitoring or management tasks.",
      "description_length": 329,
      "index": 1335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.DisassociateGatewayFromServer",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the disassociation of a backup gateway from a server, sending a request to detach the specified gateway from its linked server resource. It works with input and output structures specific to the backup gateway service, including identifiers for gateways and servers. Use this module when managing infrastructure to cleanly sever the connection between a backup gateway and the server it's associated with, such as during decommissioning or reconfiguration.",
      "description_length": 476,
      "index": 1336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.CreateGateway",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the creation of a backup gateway by sending a request to the AWS Backup service. It works with input and output structures specific to gateway creation, including configuration parameters and error responses. A concrete use case is setting up a new backup gateway with specified settings in an AWS environment.",
      "description_length": 330,
      "index": 1337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.PutBandwidthRateLimitSchedule",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the scheduling of bandwidth rate limits for backup gateways. It provides a `request` function that configures bandwidth rate limits using a given context and input parameters. The function works with input and output types specific to the BackupGateway service, and it returns either a success result or an error indicating failure conditions such as a missing resource. A concrete use case is setting bandwidth limits during specific time windows to control data transfer rates in backup operations.",
      "description_length": 520,
      "index": 1338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UpdateHypervisor",
      "library": "smaws-clients.backup-gateway",
      "description": "Sends a request to update hypervisor configuration using provided input data. Works with context and hypervisor update input types, returning updated hypervisor details or specific error types. Used to modify hypervisor settings in backup gateway environments.",
      "description_length": 260,
      "index": 1339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.TestHypervisorConfiguration",
      "library": "smaws-clients.backup-gateway",
      "description": "Performs a hypervisor configuration test by sending a request with the provided context and input parameters. It processes the input to validate and simulate the configuration setup, returning either a success result with output details or an error variant indicating specific failure conditions. This function is used to verify hypervisor connectivity and configuration prior to backup operations.",
      "description_length": 398,
      "index": 1340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ImportHypervisorConfiguration",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles the import of hypervisor configurations into a backup gateway by sending a structured request to configure hypervisor details. It operates on input and output types specific to hypervisor configuration, including connection parameters and error responses. A concrete use case is automating the setup of VMware or Hyper-V hypervisors for backup services in AWS environments.",
      "description_length": 393,
      "index": 1341,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UpdateGatewaySoftwareNow",
      "library": "smaws-clients.backup-gateway",
      "description": "Performs an immediate software update on a specified backup gateway. Takes a context and input parameters, returning a result with either the update response or an error indicating failure, including if the gateway is not found. Useful for triggering in-place software upgrades on backup infrastructure without scheduling delays.",
      "description_length": 329,
      "index": 1342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetHypervisorPropertyMappings",
      "library": "smaws-clients.backup-gateway",
      "description": "This module issues a request to retrieve hypervisor property mappings for a specified resource, using a provided context and input parameters. It operates on AWS context and input/output structures specific to the BackupGateway service. A concrete use case is fetching property mappings for a hypervisor to integrate with backup management systems.",
      "description_length": 348,
      "index": 1343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.PutMaintenanceStartTime",
      "library": "smaws-clients.backup-gateway",
      "description": "This module defines a function `request` that sends a maintenance start time update to a backup gateway service. It takes a context and an input record containing parameters like gateway ARN and time settings, returning a result with either a success response or specific error types such as `ConflictException` or `ResourceNotFoundException`. It is used to configure scheduled maintenance windows for backup gateways in cloud infrastructure management.",
      "description_length": 453,
      "index": 1344,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_BackupGateway.UntagResource",
      "library": "smaws-clients.backup-gateway",
      "description": "Removes specified tags from a resource in the BackupGateway service. Works with context and input/output types specific to the BackupGateway, handling errors like missing resources. Useful for managing metadata on backup resources like gateways or backup vaults.",
      "description_length": 262,
      "index": 1345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListGateways",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles listing gateways in a backup service by sending a request and returning a result with either gateway data or an error. It works with context and input/output types specific to the backup gateway service. Use it to retrieve gateway information from the service using a structured input and handle potential errors directly.",
      "description_length": 342,
      "index": 1346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.ListTagsForResource",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles listing tags for a specified resource in the BackupGateway service. It accepts a context and an input structure containing the resource ARN, returning a result with the output tags or specific errors like `ResourceNotFoundException`. It is used to retrieve metadata tags associated with backup gateway resources for management or auditing purposes.",
      "description_length": 368,
      "index": 1347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway.GetGateway",
      "library": "smaws-clients.backup-gateway",
      "description": "This module handles retrieving gateway details by sending a request with a context and input parameters, returning either the gateway output or specific errors like `ResourceNotFoundException`. It works with context types and gateway input/output structures defined in the BackupGateway service. A concrete use case is fetching configuration details of a specific backup gateway resource in AWS Backup.",
      "description_length": 402,
      "index": 1348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_BackupGateway",
      "library": "smaws-clients.backup-gateway",
      "description": "This module enables configuring hypervisors, managing AWS resource tags, and synchronizing virtual machine metadata, primarily operating on gateways, hypervisors, and virtual machines. It supports backup infrastructure management through maintenance scheduling, bandwidth rate limiting, and error handling for configuration validation and access control, with specific integration between VMware and AWS tagging systems. Key use cases include importing hypervisor configurations, managing resource associations, and ensuring consistent metadata synchronization for cloud backups.",
      "description_length": 579,
      "index": 1349,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.GetDirectoryLimits",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to retrieve directory service limits from AWS, handling responses and specific error conditions such as client errors, entity not found, and service failures. It operates on AWS context and request/response structures defined for directory service limits. A concrete use case is querying current AWS Directory Service quotas for monitoring or provisioning automation.",
      "description_length": 395,
      "index": 1350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UnshareDirectory",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the unsharing of directories in a distributed system, providing a `request` function that initiates the unshare operation using a context and a directory unshare request. It works with directory service data types including unshare request parameters and various error types for failure handling. Concrete use cases include removing shared access to a directory from a specific principal or account.",
      "description_length": 419,
      "index": 1351,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RemoveRegion",
      "library": "smaws-clients.directory-service",
      "description": "Removes a region from a directory service using a provided context and request configuration. It returns a result indicating success or a specific error such as `AccessDeniedException` or `DirectoryDoesNotExistException`. This operation is used when managing multi-region directory setups, allowing administrators to decommission or reconfigure directory regions programmatically.",
      "description_length": 380,
      "index": 1352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeCertificate",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to describe a certificate in a directory service, handling responses and specific error conditions like missing certificates or directories. It operates on certificate and directory identifiers within a service context. Use this to retrieve certificate details in a directory service integration.",
      "description_length": 324,
      "index": 1353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeClientAuthenticationSettings",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe client authentication settings for a directory service. It takes a context and a request object, then returns a result containing either the authentication settings or specific error types like `AccessDeniedException` or `DirectoryDoesNotExistException`. It is used to retrieve and validate authentication configurations for clients connecting to a directory.",
      "description_length": 400,
      "index": 1354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RegisterEventTopic",
      "library": "smaws-clients.directory-service",
      "description": "Registers an event topic for a directory in AWS Directory Service. It takes a context and a request object containing the directory ID and topic name, returning a result that indicates success or a specific AWS error. This function is used to enable SNS notifications for directory events like domain controller creation or deletion.",
      "description_length": 333,
      "index": 1355,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RemoveTagsFromResource",
      "library": "smaws-clients.directory-service",
      "description": "Removes tags from a specified resource in the directory service. It takes a context and a request object containing the resource identifier and tag keys, returning a result that indicates success or a specific error condition such as invalid parameters or a missing entity. This operation is useful when managing metadata for directory service resources like directories or organizational units.",
      "description_length": 395,
      "index": 1356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RemoveIpRoutes",
      "library": "smaws-clients.directory-service",
      "description": "Removes IP routes from a directory in AWS Directory Service. It takes a context and a request specifying the directory ID and IP routes to remove, returning a result indicating success or an error. This module is used when managing network configurations for directories, such as updating allowed IP ranges for domain controllers.",
      "description_length": 330,
      "index": 1357,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateComputer",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the creation of a computer in a directory service, providing a `request` function that takes a context and a create-computer request, returning a result with either the creation response or a specific error. It works with types such as `Smaws_Lib.Context.t`, `create_computer_request`, and `create_computer_result`, along with a range of exception types for error handling. It is used when integrating a new computer into a managed directory, handling validation, existence checks, and communication failures with precise error reporting.",
      "description_length": 558,
      "index": 1358,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateMicrosoftAD",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to create a Microsoft AD directory in AWS Directory Service. It handles the input configuration and sends the necessary API call, returning either the directory creation result or specific error types like parameter validation failures or service limits being exceeded. It works directly with AWS context, request parameters, and error response types for directory creation workflows.",
      "description_length": 412,
      "index": 1359,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableClientAuthentication",
      "library": "smaws-clients.directory-service",
      "description": "This module handles disabling client authentication for a directory service by sending a request with the provided context and authentication disable parameters. It operates on directory identifiers and authentication states, returning either a success result or specific error types like `AccessDeniedException` or `DirectoryDoesNotExistException`. It is used when managing directory service configurations in AWS environments where client authentication needs to be programmatically disabled.",
      "description_length": 494,
      "index": 1360,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeDomainControllers",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe domain controllers in a directory service, providing detailed information about their configuration and status. It works with domain controller request and result types, including error types for invalid parameters, entity not found, and service issues. Concrete use cases include retrieving domain controller metadata for monitoring, troubleshooting, or integration with other infrastructure management tools.",
      "description_length": 451,
      "index": 1361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AddIpRoutes",
      "library": "smaws-clients.directory-service",
      "description": "This module handles adding IP routes to a directory service by sending a request with a context and an `add_ip_routes_request` structure, returning a result that includes either a success response or specific error types. It operates on network configuration data, including IP route details and directory identifiers. Use this module to programmatically manage IP routing configurations in a directory service, such as when setting up or modifying network access rules for directory-aware resources.",
      "description_length": 500,
      "index": 1362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeEventTopics",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe event topics for a directory service, interacting with AWS JSON-based APIs. It processes input requests and returns results or specific error types like `ClientException` or `ServiceException`. Use it to retrieve event topic configurations for a given directory identifier.",
      "description_length": 314,
      "index": 1363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateTrust",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the creation of trust relationships between directories in a directory service. It provides the `request` function to initiate a trust creation operation, which takes a context and a trust request configuration, returning a result indicating success or a specific error. It works with directory trust requests and responses, handling errors such as duplicate trusts, invalid parameters, and unsupported operations.",
      "description_length": 434,
      "index": 1364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateDirectorySetup",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to update the setup configuration of a directory service, handling responses and errors specific to directory modification operations. It works with directory setup request and result types, along with a variety of exception types that represent failure scenarios such as invalid parameters, access denial, or directory unavailability. A concrete use case is modifying an existing directory's settings when reconfiguring authentication or organizational structure in a cloud environment.",
      "description_length": 515,
      "index": 1365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeDirectories",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe directories in a directory service, providing detailed information about their configuration and status. It works with `describe_directories_request` and `describe_directories_result` data types, along with various error types for handling failure scenarios. A concrete use case is retrieving metadata about existing directories for monitoring or management purposes.",
      "description_length": 408,
      "index": 1366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ResetUserPassword",
      "library": "smaws-clients.directory-service",
      "description": "This module handles password reset operations for users in a directory service. It accepts a context and a password reset request, then returns a result indicating success or a specific error such as invalid password, user not found, or service issues. It works directly with directory service entities and is used in scenarios like user account recovery or administrative password management.",
      "description_length": 393,
      "index": 1367,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListSchemaExtensions",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to list schema extensions in a directory service, interacting with the AWS JSON protocol to send queries and receive structured results. It processes inputs like pagination tokens and directory identifiers to retrieve extension details. Use this to programmatically access schema extension metadata, such as during directory audits or configuration management.",
      "description_length": 389,
      "index": 1368,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableRadius",
      "library": "smaws-clients.directory-service",
      "description": "This module handles disabling RADIUS authentication for a directory service. It sends a request to disable RADIUS using a provided context and returns a result indicating success or a specific error such as client exception, entity not found, or service failure. It works with directory identifiers and RADIUS configuration data. A typical use case is when an administrator needs to switch from RADIUS to another authentication method or decommission RADIUS integration.",
      "description_length": 470,
      "index": 1369,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeUpdateDirectory",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe the status of a directory update in a cloud environment. It takes a context and a structured request, then returns either a result with update details or specific error types like `AccessDeniedException` or `DirectoryDoesNotExistException`. It is used to monitor the progress and outcome of directory configuration changes.",
      "description_length": 364,
      "index": 1370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableLDAPS",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the enabling of LDAPS for a directory service by sending a request to configure LDAPS settings. It works with context and request/response types specific to the directory service, including handling a variety of error conditions related to directory state, permissions, and configuration. It is used when securely enabling LDAP support in a cloud directory environment.",
      "description_length": 389,
      "index": 1371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeConditionalForwarders",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe conditional forwarders for a directory service, interacting with AWS JSON-based APIs. It processes input contexts and structured requests to retrieve conditional forwarder configurations, returning either a result or specific error types like `ClientException` or `EntityDoesNotExistException`. It is used to query DNS forwarding settings for a directory in AWS Directory Service.",
      "description_length": 421,
      "index": 1372,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeTrusts",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe trust relationships in a directory service, providing detailed information about existing trusts. It works with directory service identifiers and trust configuration data types, allowing filtering and pagination through request parameters. Concrete use cases include retrieving trust metadata for auditing, monitoring trust status between domains, or validating cross-domain configurations.",
      "description_length": 431,
      "index": 1373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AcceptSharedDirectory",
      "library": "smaws-clients.directory-service",
      "description": "Accepts a shared directory invitation using a provided context and request parameters. It handles errors such as invalid parameters, missing entities, and directory sharing conflicts. This function is used when a directory service client needs to programmatically accept an invitation to a shared directory from another AWS account.",
      "description_length": 332,
      "index": 1374,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteLogSubscription",
      "library": "smaws-clients.directory-service",
      "description": "Deletes a log subscription for a directory service, handling errors such as missing entities or unsupported operations. Works with context and request/response types specific to the directory service's log subscription deletion. Useful when removing logging configurations from a directory in cloud infrastructure management workflows.",
      "description_length": 335,
      "index": 1375,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableLDAPS",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to disable LDAPS for a specified directory, handling responses and errors specific to the LDAPS disable operation. It works with directory identifiers and LDAPS configuration data types, targeting AWS Directory Service. A concrete use case is programmatically managing directory security settings by disabling LDAPS when reconfiguring directory authentication methods.",
      "description_length": 396,
      "index": 1376,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListLogSubscriptions",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the `ListLogSubscriptions` operation for the Directory Service, sending requests to retrieve log subscription details and returning results or specific error types. It works with AWS context, request, and result structures, including error types like `ClientException` and `ServiceException`. A concrete use case is retrieving log subscriptions for a directory to monitor or audit logging activity in AWS environments.",
      "description_length": 438,
      "index": 1377,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CancelSchemaExtension",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the cancellation of schema extensions in a directory service. It provides a `request` function that sends a cancellation request and returns a result with either the extension ID or an error. It works with context, request, and error types specific to directory service schema management.",
      "description_length": 308,
      "index": 1378,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DisableSso",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to disable SSO for a directory in AWS Directory Service. It takes a context and a disable SSO request, returning a result that either contains the response or an error specific to authentication, client, entity, permissions, or service issues. It is used when managing directory configurations to remove single sign-on access for a specific AWS directory.",
      "description_length": 383,
      "index": 1379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RegisterCertificate",
      "library": "smaws-clients.directory-service",
      "description": "Registers an X.509 certificate for a directory service using the provided context and request parameters. It handles errors such as certificate limits, invalid input, and directory availability issues. This operation is used when configuring secure communication for a directory in AWS.",
      "description_length": 286,
      "index": 1380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListTagsForResource",
      "library": "smaws-clients.directory-service",
      "description": "This module handles listing tags for a specified resource in a directory service, providing the `request` function to send the query and return either a result or specific error types. It works with directory service resource identifiers and tag data structures. A typical use case involves retrieving metadata tags for resource management or billing tracking in cloud environments.",
      "description_length": 382,
      "index": 1381,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeSharedDirectories",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe shared directories in a directory service, providing detailed information about their configuration and status. It works with context and request/response data types specific to directory service operations. Use this module to retrieve shared directory details, including metadata and error states, when managing directory service resources in a cloud environment.",
      "description_length": 405,
      "index": 1382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateTrust",
      "library": "smaws-clients.directory-service",
      "description": "This module handles updating trust relationships in a directory service by sending a request with the provided context and trust update parameters. It works with structured data types including the update trust request, result, and various error types such as client exceptions or invalid parameter errors. A concrete use case is modifying an existing trust relationship between directories in an AWS environment.",
      "description_length": 413,
      "index": 1383,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListIpRoutes",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the `ListIpRoutes` operation for querying IP route information in a directory service. It sends a request using a context and returns a result containing either the list of IP routes or specific error types like `ClientException` or `InvalidParameterException`. It is used to retrieve and manage IP routing configurations for a directory in AWS.",
      "description_length": 365,
      "index": 1384,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.VerifyTrust",
      "library": "smaws-clients.directory-service",
      "description": "Verifies trust relationships between directories by sending a verification request. It processes the provided trust configuration and returns the result of the verification, including any errors related to invalid parameters, entity existence, or service issues. This function is used when establishing or validating cross-directory trust in AWS Managed Microsoft AD environments.",
      "description_length": 380,
      "index": 1385,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RestoreFromSnapshot",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to restore directory service resources from snapshots, handling specific error conditions like invalid parameters or missing entities. It operates on directory service restoration requests and responses, interacting with AWS JSON protocols. Use it to programmatically recover directory states from existing snapshots in AWS environments.",
      "description_length": 365,
      "index": 1386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteSnapshot",
      "library": "smaws-clients.directory-service",
      "description": "Deletes a directory snapshot by sending a request with the snapshot identifier. Works with AWS directory service data types, handling errors like invalid parameters or missing entities. Useful for managing directory service resources in cloud environments.",
      "description_length": 256,
      "index": 1387,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateConditionalForwarder",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to create conditional forwarders for directory service configurations. It handles the validation and submission of forwarder settings, returning success or detailed error results. Use it to integrate DNS forwarding rules into directory service management workflows.",
      "description_length": 293,
      "index": 1388,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeSnapshots",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the `DescribeSnapshots` API request for a directory service, retrieving snapshot information based on provided parameters. It works with context and request data types specific to the directory service, returning either a result containing snapshots or an error indicating issues like invalid parameters or missing entities. Concrete use cases include querying directory snapshots for monitoring, backup verification, or recovery workflows.",
      "description_length": 460,
      "index": 1389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateSnapshot",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to create directory service snapshots, handling responses and errors from the AWS API. It works with context and request/response types specific to the directory service, including error types like `InvalidParameterException` and `SnapshotLimitExceededException`. Use it to trigger and manage snapshot creation operations in a directory service environment.",
      "description_length": 385,
      "index": 1390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeSettings",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to describe directory service settings, handling responses and errors from the AWS Directory Service API. It works with context and request/response types specific to directory service operations. Use it to retrieve detailed configuration information for a directory, such as settings related to multi-factor authentication or domain controllers.",
      "description_length": 374,
      "index": 1391,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeregisterCertificate",
      "library": "smaws-clients.directory-service",
      "description": "This module provides a `request` function to deregister an X.509 certificate from a directory service, handling errors such as missing certificates, in-use certificates, or unavailable directories. It operates on types like `deregister_certificate_request`, `deregister_certificate_result`, and various exception types representing failure conditions. A concrete use case is removing an expired or revoked certificate from a managed Microsoft AD directory to maintain secure LDAP configurations.",
      "description_length": 495,
      "index": 1392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.StartSchemaExtension",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to start schema extensions in a directory service. It handles the input context and request structure, returning a result that includes either the schema extension result or specific error types like invalid parameters or service exceptions. It is used when applying schema changes to a directory, such as adding new object classes or attributes.",
      "description_length": 374,
      "index": 1393,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteDirectory",
      "library": "smaws-clients.directory-service",
      "description": "Deletes a directory service directory, removing all associated data and configurations. Works with AWS context and directory service request/response types. Used when decommissioning directory resources in cloud infrastructure management workflows.",
      "description_length": 248,
      "index": 1394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeregisterEventTopic",
      "library": "smaws-clients.directory-service",
      "description": "Handles deregistration of event topics for a directory service by sending a request with the provided context and input parameters. Works with AWS directory service configurations, specifically managing event topic subscriptions. Used to remove SNS topic notifications from a specific directory when no longer needed.",
      "description_length": 317,
      "index": 1395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateSettings",
      "library": "smaws-clients.directory-service",
      "description": "This module handles updating directory service settings by sending a request with provided configuration parameters and returning a result indicating success or a specific error type. It works with structured data types including context, update settings requests, and various error exceptions defined in related modules. A concrete use case is modifying directory service configurations in response to administrative changes or automated workflows.",
      "description_length": 449,
      "index": 1396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateConditionalForwarder",
      "library": "smaws-clients.directory-service",
      "description": "Performs an update operation on a conditional forwarder in a directory service. It takes a context and a request object containing parameters like directory ID, remote domain name, and DNS IP addresses. This module is used to modify DNS forwarding configurations in AWS Directory Service.",
      "description_length": 288,
      "index": 1397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateRadius",
      "library": "smaws-clients.directory-service",
      "description": "Performs an update operation for RADIUS settings in a directory service using a provided context and request structure. It modifies authentication configurations for a specified directory, such as changing the RADIUS server or timeout settings. This function is used when reconfiguring directory-level identity provider integrations that rely on RADIUS protocols.",
      "description_length": 363,
      "index": 1398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableSso",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to enable SSO for a directory in AWS Directory Service. It handles the input request type `enable_sso_request` and returns either a result indicating success or a detailed error such as authentication failure or insufficient permissions. It is used when integrating a directory with AWS SSO to manage user access and permissions programmatically.",
      "description_length": 374,
      "index": 1399,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableRadius",
      "library": "smaws-clients.directory-service",
      "description": "Performs an operation to enable RADIUS authentication for a directory service. It sends a request with a context and configuration parameters, returning a result that indicates success or a specific error such as invalid parameters, entity existence issues, or service failures. This is used when configuring directory services to integrate with external authentication systems.",
      "description_length": 378,
      "index": 1400,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateDirectory",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to create directories in a directory service, handling specific error conditions like parameter validation failures, service outages, and account limits. It operates on context and request data structures tailored for directory creation, including directory type, name, and settings. Use it to programmatically provision new directories in AWS Managed Microsoft AD or Simple AD services.",
      "description_length": 415,
      "index": 1401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateLogSubscription",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to create log subscriptions for directory service entities, handling responses and specific error conditions. It operates on context and request structures tailored to log subscription creation, including parameters like directory identifiers and log group details. Use this to configure logging for directory service resources in AWS environments.",
      "description_length": 376,
      "index": 1402,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ConnectDirectory",
      "library": "smaws-clients.directory-service",
      "description": "This module handles the connection of a directory to a AWS directory service, managing authentication and configuration. It operates on directory service request and result types, with support for handling specific error conditions like invalid parameters or service limits. Use this module when integrating a directory with AWS services that require directory authentication or user management.",
      "description_length": 395,
      "index": 1403,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteTrust",
      "library": "smaws-clients.directory-service",
      "description": "Deletes a trust relationship in a directory service, handling errors such as invalid parameters, missing entities, or unsupported operations. Works with context and request/response types specific to directory service trust management. Useful for managing federated identity configurations or cross-domain trust relationships in cloud environments.",
      "description_length": 348,
      "index": 1404,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.CreateAlias",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to create directory service aliases, handling responses and specific error conditions such as entity existence conflicts or invalid parameters. It operates on directory service alias request and result types, along with various exception types for error reporting. A typical use case involves integrating with AWS Directory Service to manage alias creation while handling service-specific failure scenarios.",
      "description_length": 435,
      "index": 1405,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.RejectSharedDirectory",
      "library": "smaws-clients.directory-service",
      "description": "Rejects a shared directory invitation using the provided context and request parameters. It handles errors such as invalid parameters, non-existent entities, and directory sharing state conflicts. This operation is used when a directory consumer wants to decline a shared directory from a provider.",
      "description_length": 298,
      "index": 1406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DeleteConditionalForwarder",
      "library": "smaws-clients.directory-service",
      "description": "Performs deletion of a conditional forwarder in a directory service. It takes a context and a delete request, returning a result that either contains the deletion outcome or an error indicating failure reasons such as invalid parameters or service issues. This operation is used when managing DNS forwarding configurations in cloud directory services.",
      "description_length": 351,
      "index": 1407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeLDAPSSettings",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to describe LDAP over SSL settings for a directory service, handling responses and errors specific to that operation. It works with context objects and structured AWS Directory Service request and response types. Use this to retrieve and validate LDAPS settings for a directory, such as certificate information and LDAPS status.",
      "description_length": 356,
      "index": 1408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.EnableClientAuthentication",
      "library": "smaws-clients.directory-service",
      "description": "This module handles enabling client authentication for a directory service by sending a request to configure client authentication settings. It works with context and request/response types specific to the directory service, including handling errors like access denied, directory not found, or missing certificates. It is used to manage client authentication state in a directory service, ensuring clients can authenticate using available certificates.",
      "description_length": 453,
      "index": 1409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.DescribeRegions",
      "library": "smaws-clients.directory-service",
      "description": "This module handles requests to describe regions in a directory service, returning region details or specific error types like `AccessDeniedException` or `InvalidParameterException`. It operates on `describe_regions_request` and `describe_regions_result` data types, which include parameters and responses structured for AWS directory service interactions. A concrete use case is retrieving region-specific metadata to configure or audit directory service deployments in AWS environments.",
      "description_length": 488,
      "index": 1410,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ListCertificates",
      "library": "smaws-clients.directory-service",
      "description": "This module handles listing certificates in a directory service by sending a request and returning a result with either the certificates or specific error types. It works with context, request, and result types defined in the Smaws_Client_DirectoryService module, along with standard error variants. It is used to retrieve certificate information from a directory service, handling pagination and various error conditions such as invalid parameters or missing directories.",
      "description_length": 472,
      "index": 1411,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AddTagsToResource",
      "library": "smaws-clients.directory-service",
      "description": "This module handles adding tags to a resource in a directory service. It takes a context and a request with resource and tag details, returning a result indicating success or specific errors like invalid parameters or tag limits. It works with directory service resources and tag data structures.",
      "description_length": 296,
      "index": 1412,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.GetSnapshotLimits",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to retrieve snapshot limits for directory service resources. It processes a context and a structured request to return a result containing either snapshot limit data or specific error types like client exceptions or service errors. It is used to enforce or monitor constraints on directory service snapshots in cloud infrastructure management scenarios.",
      "description_length": 381,
      "index": 1413,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.ShareDirectory",
      "library": "smaws-clients.directory-service",
      "description": "This module handles sharing a directory with another AWS account by sending a request that specifies the directory ID and the target account. It works with the `share_directory_request` type to define sharing parameters and returns a result indicating success or specific error conditions like access denial or invalid parameters. Concrete use cases include enabling cross-account access to directories in AWS Managed Microsoft AD.",
      "description_length": 431,
      "index": 1414,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.AddRegion",
      "library": "smaws-clients.directory-service",
      "description": "Performs an API call to add a region to a directory in a cloud environment, handling authentication and error responses. It works with context objects and structured request/response types specific to directory service operations. This function is used when expanding a directory's presence to a new geographic region within a cloud infrastructure.",
      "description_length": 348,
      "index": 1415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_DirectoryService.UpdateNumberOfDomainControllers",
      "library": "smaws-clients.directory-service",
      "description": "This module issues requests to adjust the number of domain controllers in a directory service. It handles the input context and request parameters, returning either a result indicating success or a specific error type such as `DomainControllerLimitExceededException` or `InvalidParameterException`. It is used when scaling directory infrastructure up or down in response to workload demands.",
      "description_length": 391,
      "index": 1416,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_DirectoryService",
      "library": "smaws-clients.directory-service",
      "description": "This module provides operations for managing trust relationships, directory configurations, and authentication protocols in a cloud-based directory service. It works with data structures like directory IDs, trust IDs, VPC settings, RADIUS/LDAPS configurations, and domain controller metadata, supporting use cases such as scaling domain controllers, verifying cross-domain trust, and configuring SSO/RADIUS authentication. The functionality emphasizes structured updates, error handling for distributed systems, and lifecycle management of directory resources like snapshots, schema extensions, and conditional DNS forwarders.",
      "description_length": 626,
      "index": 1417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetSyncBlockerSummary",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues requests to retrieve summaries of sync blockers for code connections, handling errors such as access denial, invalid input, and resource not found. It operates on input and output types specific to sync blocker summaries, using a context for execution. A typical use case involves querying the status of sync operations to identify and analyze blocking issues in code connections.",
      "description_length": 399,
      "index": 1418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListSyncConfigurations",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles listing sync configurations by sending a request to retrieve synchronization settings, including details like repository sources and target environments. It works with input and output structures specific to CodeConnections, handling errors such as invalid inputs or resource not found. A concrete use case is retrieving existing sync configurations to display or modify in a CI/CD management interface.",
      "description_length": 423,
      "index": 1419,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateHost",
      "library": "smaws-clients.codeconnections",
      "description": "Performs an HTTP request to update host information in a code connection service. It takes a context and an input structure specifying host details, returning a result with either the updated host data or specific error types like conflict or resource not found. This function is used when modifying existing host configurations in a version-controlled code repository setup.",
      "description_length": 375,
      "index": 1420,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UntagResource",
      "library": "smaws-clients.codeconnections",
      "description": "Removes tags from a specified resource by sending an untagging request. Works with AWS context and structured input/output types specific to resource tagging operations. Useful for managing metadata on AWS resources like EC2 instances or S3 buckets.",
      "description_length": 249,
      "index": 1421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteHost",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles the deletion of a host in the CodeConnections service by sending a delete request. It operates on input and output types specific to the delete host operation, including error handling for resource not found and resource unavailable scenarios. It is used when managing host resources in AWS CodeConnections, ensuring proper cleanup or removal of hosts within the service.",
      "description_length": 391,
      "index": 1422,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateHost",
      "library": "smaws-clients.codeconnections",
      "description": "Handles the creation of a host resource by sending a request with provided input parameters and returning a result that either contains the output data or an error, such as when a system limit is exceeded. Works directly with context, input, and output types defined in the CodeConnections module. Used when provisioning new hosts in a cloud environment where AWS integration is required.",
      "description_length": 388,
      "index": 1423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateSyncConfiguration",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles updating synchronization configurations by sending a request with the provided context and input parameters, returning either a success result or a specific error based on AWS service responses. It works with structured input and output types defined in `Smaws_Client_CodeConnections`, including detailed error types for handling failure scenarios. It is used to modify existing sync configurations in a remote system, ensuring correct handling of concurrency, permissions, and input validation.",
      "description_length": 515,
      "index": 1424,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetRepositorySyncStatus",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues requests to retrieve the sync status of a repository connection, handling errors such as access denial, invalid input, and resource not found. It operates on input and output types specific to repository sync status queries, using a context for execution. A typical use case involves checking whether a connected repository is in sync with its external source.",
      "description_length": 379,
      "index": 1425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListRepositorySyncDefinitions",
      "library": "smaws-clients.codeconnections",
      "description": "Handles listing repository sync definitions by sending a request to retrieve configured sync definitions for a repository. Works with context and input/output types specific to repository sync configurations. Used to fetch existing sync definitions for monitoring or management purposes.",
      "description_length": 287,
      "index": 1426,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetRepositoryLink",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues a request to retrieve a repository link, handling input and output specific to that operation. It works with context data and structured input/output types defined in related modules. Use this to fetch repository link details from a service, handling errors like access denial, invalid input, or resource not found.",
      "description_length": 334,
      "index": 1427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteSyncConfiguration",
      "library": "smaws-clients.codeconnections",
      "description": "Deletes a sync configuration for a specified resource, handling errors such as access denial, invalid input, or resource limits. Works with input and output structures specific to sync configurations, along with context for authentication and region. Useful when removing outdated or unused sync configurations to manage resource synchronization in AWS CodeConnections.",
      "description_length": 369,
      "index": 1428,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListRepositoryLinks",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues requests to list repository links, handling input and output structures specific to that operation. It works with context data, repository link inputs, and produces results or detailed error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used to retrieve repository link data from a service, with explicit error handling for common failure scenarios.",
      "description_length": 395,
      "index": 1429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateConnection",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles the creation of a connection by sending a request with provided input parameters and returning a result that includes either the output of the connection creation or specific error types. It works with context data, connection input and output structures, and error types such as limit exceeded, resource not found, and resource unavailable exceptions. It is used when establishing new connections in a system that requires handling AWS-style API errors.",
      "description_length": 474,
      "index": 1430,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteRepositoryLink",
      "library": "smaws-clients.codeconnections",
      "description": "Deletes a repository link in CodeConnections, handling authentication and request validation. Works with context and input/output types specific to the CodeConnections service. Useful for removing outdated or unused repository integrations programmatically.",
      "description_length": 257,
      "index": 1431,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetResourceSyncStatus",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles retrieving the synchronization status of a resource in a CodeConnections context. It sends a request using a context and input parameters, returning either the sync status output or specific AWS-related errors. It is used to check whether a resource is in sync with its source repository.",
      "description_length": 308,
      "index": 1432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListConnections",
      "library": "smaws-clients.codeconnections",
      "description": "Handles listing connections in AWS CodeConnections by sending a request to retrieve connections, filtering by parameters like repository name. Works with input and output structures defined in the `Smaws_Client_CodeConnections` module, including error types for missing resources. Useful for retrieving existing connections to external repositories like GitHub or Bitbucket.",
      "description_length": 374,
      "index": 1433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateSyncConfiguration",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues requests to create a synchronization configuration for a connection, handling input validation and conflict resolution. It works with structured input and output types specific to synchronization setup, including error types for common failure scenarios. Use this when configuring how data synchronizes between connected services, such as setting up periodic sync intervals or conflict resolution rules.",
      "description_length": 422,
      "index": 1434,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetConnection",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles retrieving connection details by sending a request to fetch a specific connection's information. It works with input and output types defined in the `Smaws_Client_CodeConnections` module, including structured error types for missing or unavailable resources. It is used to programmatically access metadata about a connection, such as its configuration or status, within a given context.",
      "description_length": 406,
      "index": 1435,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetSyncConfiguration",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues requests to retrieve sync configuration details for code connections, handling specific AWS service errors. It operates on context and input/output types defined in the `Smaws_Client_CodeConnections` module. A typical use case involves fetching configuration data for a specific code connection resource by ID or name.",
      "description_length": 337,
      "index": 1436,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.TagResource",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles tagging operations for AWS CodeConnections resources, providing a `request` function to associate tags with a resource using the AWS JSON protocol. It works with input and output types specific to tagging, including tag key-value pairs and resource identifiers. The function returns a result indicating success or failure, with detailed error types for common AWS exceptions like resource not found or limit exceeded.",
      "description_length": 437,
      "index": 1437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.CreateRepositoryLink",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles the creation of repository links by sending a request to establish a connection between resources. It works with input and output structures specific to repository linking, along with various error types for failure handling. It is used when integrating code repositories with external services that require link creation as part of setup or deployment workflows.",
      "description_length": 383,
      "index": 1438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListTagsForResource",
      "library": "smaws-clients.codeconnections",
      "description": "Handles requests to list tags for a specified resource in AWS CodeConnections. Works with input containing the resource ARN and outputs a list of tags or an error if the resource is not found. Useful for retrieving metadata associated with a specific CodeConnections resource.",
      "description_length": 276,
      "index": 1439,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateSyncBlocker",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues requests to update sync blockers in a code connection system. It handles input and output data specific to sync blocker updates, including detailed error cases like invalid input, resource not found, and throttling. It is used when modifying sync blocker configurations in response to system events or user actions.",
      "description_length": 334,
      "index": 1440,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.GetHost",
      "library": "smaws-clients.codeconnections",
      "description": "This module handles retrieving host information by sending a request with a given context and input parameters, returning either the host data or specific error types such as resource not found or resource unavailable. It operates on input and output types defined in the `Smaws_Client_CodeConnections` module, including context, input records, and error variants. A concrete use case is querying host details in a system that integrates with AWS CodeConnections, handling expected failure scenarios explicitly.",
      "description_length": 511,
      "index": 1441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.ListHosts",
      "library": "smaws-clients.codeconnections",
      "description": "Handles listing hosts in a CodeConnections context by sending a request and returning a result with either host data or an AWS JSON error. Works with input and output structures defined in the CodeConnections protocol, including host metadata and connection details. Useful for retrieving configured hosts to manage or inspect connections within AWS services.",
      "description_length": 359,
      "index": 1442,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_CodeConnections.UpdateRepositoryLink",
      "library": "smaws-clients.codeconnections",
      "description": "This module issues a request to update a repository link in a code connections context, handling specific error conditions like access denial, invalid input, and resource not found. It operates on input and output structures defined in the `Smaws_Client_CodeConnections` module, including context and exception types. A concrete use case is modifying an existing link between a repository and a connection in a version-controlled infrastructure setup.",
      "description_length": 451,
      "index": 1443,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections.DeleteConnection",
      "library": "smaws-clients.codeconnections",
      "description": "Deletes a connection by sending a request with the provided context and input parameters, returning a result that indicates success or failure. It works with `delete_connection_input` for specifying the connection to delete and handles errors like `ResourceNotFoundException`. This module is used when removing an existing connection resource in a service that integrates with AWS CodeConnections.",
      "description_length": 397,
      "index": 1444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_CodeConnections",
      "library": "smaws-clients.codeconnections",
      "description": "This module supports operations for creating, updating, and managing code synchronization configurations, repository links, hosts, and tags in AWS CodeConnections. It works with structured data types like ARNs, VPC configurations, sync status enums, and repository definitions to handle tasks such as resolving sync blockers, tracking deployment states, and configuring provider integrations (e.g., GitHub, GitLab) in CI/CD pipelines. Specific use cases include establishing secure repository connections, managing sync triggers across AWS services, and organizing resources with tags for cloud infrastructure workflows.",
      "description_length": 620,
      "index": 1445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartAutomationExecution",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to start automation executions in AWS Systems Manager, handling specific errors related to automation definitions, parameters, and execution limits. It works with context and request/response structures defined in the Smaws_Client_SSM library. Use this module to programmatically trigger SSM automations, such as patching instances or running custom workflows, while handling failure scenarios like missing definitions or invalid targets.",
      "description_length": 466,
      "index": 1446,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListCommands",
      "library": "smaws-clients.ssm",
      "description": "Handles requests to list commands executed on instances in AWS Systems Manager. It processes `list_commands_request` inputs, returning results or specific errors like invalid command IDs or instance IDs. Useful for retrieving command execution details filtered by instance or command identifiers.",
      "description_length": 296,
      "index": 1447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RemoveTagsFromResource",
      "library": "smaws-clients.ssm",
      "description": "Removes tags from a specified resource in AWS Systems Manager. Works with AWS context and SSM-specific request/response types, handling errors like invalid resource IDs or types. Useful for managing metadata on SSM resources such as documents or managed instances.",
      "description_length": 264,
      "index": 1448,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeEffectiveInstanceAssociations",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe effective instance associations in AWS SSM, providing a function to send the request and receive a result. It works with context and request data types specific to SSM, returning either a result or specific SSM errors. It is used to retrieve association details for EC2 instances, such as configuration and compliance data.",
      "description_length": 364,
      "index": 1449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstancePatchStates",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to retrieve patch state information for instances in AWS Systems Manager. It processes input contexts and patch state requests, returning results that include patch compliance data or specific AWS SSM errors. It is used to query the status of software patches on managed instances within an AWS environment.",
      "description_length": 336,
      "index": 1450,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAssociationExecutions",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe association executions in AWS SSM, providing a function to retrieve execution details based on an association ID and optional filters. It works with AWS SSM-specific request and response data structures, including error types like `AssociationDoesNotExist` and `InvalidNextToken`. A concrete use case is querying the status and metadata of SSM association runs for monitoring or troubleshooting purposes.",
      "description_length": 445,
      "index": 1451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteResourceDataSync",
      "library": "smaws-clients.ssm",
      "description": "Deletes a Resource Data Sync configuration in AWS Systems Manager. Works with context and request/response types specific to SSM. Useful for removing outdated or misconfigured sync definitions directly via the AWS API.",
      "description_length": 218,
      "index": 1452,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CancelCommand",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to cancel specific commands executed on AWS instances via the SSM service. It handles responses and errors related to command cancellation, including invalid IDs and server issues. It operates on AWS context and SSM-specific request/response data types.",
      "description_length": 281,
      "index": 1453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeDocumentPermission",
      "library": "smaws-clients.ssm",
      "description": "Handles requests to retrieve permissions for a Systems Manager document, returning access control details or specific errors like invalid document or permission type. Works with SSM document identifiers and permission configurations. Used to enforce and audit document access policies in AWS environments.",
      "description_length": 305,
      "index": 1454,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeSessions",
      "library": "smaws-clients.ssm",
      "description": "This module handles the `DescribeSessions` API operation for AWS SSM, allowing retrieval of session details based on filters and pagination. It processes requests using a context and a structured input request, returning either a response with session data or specific error types. Concrete use cases include querying active sessions, filtering by instance ID or session status, and handling paginated results in automation workflows.",
      "description_length": 434,
      "index": 1455,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstanceInformation",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe instance information in AWS Systems Manager, providing a function to query instance details with filtering capabilities. It works with context and request/response data types specific to SSM instance information. Concrete use cases include retrieving metadata about managed instances, filtering by instance IDs or tags, and handling paginated results with next tokens.",
      "description_length": 409,
      "index": 1456,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteActivation",
      "library": "smaws-clients.ssm",
      "description": "Deletes an activation in AWS Systems Manager, handling requests with context and returning a result with either a success or specific error types. Works with activation identifiers and contextual runtime information. Useful for managing instance activation lifecycle in distributed systems.",
      "description_length": 290,
      "index": 1457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.PutComplianceItems",
      "library": "smaws-clients.ssm",
      "description": "Handles submitting compliance item data to AWS Systems Manager by sending structured requests and processing responses. Works with compliance item records, resource identifiers, and error types specific to SSM compliance operations. Used to report compliance status for managed resources like EC2 instances or Lambda functions.",
      "description_length": 327,
      "index": 1458,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetPatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve patch baseline configurations from AWS Systems Manager. It processes queries using context and request parameters, returning results or specific error types like `DoesNotExistException` or `InvalidResourceId`. It is used to fetch patch compliance settings for managed instances in AWS environments.",
      "description_length": 338,
      "index": 1459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetDeployablePatchSnapshotForInstance",
      "library": "smaws-clients.ssm",
      "description": "Retrieves patch snapshot details for a specific instance using a context and request configuration. It processes `get_deployable_patch_snapshot_for_instance_request` inputs and returns either a result containing patch snapshot data or an error indicating issues like internal server errors, unsupported features, or operating systems. This function is used to determine applicable patches for an instance in automated patch management workflows.",
      "description_length": 445,
      "index": 1460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateResourceDataSync",
      "library": "smaws-clients.ssm",
      "description": "Sends a request to create a resource data sync configuration, handling validation and synchronization setup with AWS Systems Manager. Works with context and request/response types specific to resource data sync operations. Used to establish continuous data synchronization for inventory or compliance data across AWS accounts and regions.",
      "description_length": 338,
      "index": 1461,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowTargets",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe maintenance window targets in AWS SSM, providing a `request` function that takes a context and a request object, returning a result with either the target data or specific error types. It works with AWS SSM maintenance window identifiers and target configurations. A concrete use case is retrieving registered targets for a specific maintenance window to verify or manage automation targets in an AWS environment.",
      "description_length": 454,
      "index": 1462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeEffectivePatchesForPatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to retrieve effective patches for a patch baseline in AWS Systems Manager. It processes input contexts and structured requests, returning either a result containing patch details or specific error types like `DoesNotExistException` or `UnsupportedOperatingSystem`. It is used to programmatically assess patch compliance for managed instances based on configured baselines.",
      "description_length": 401,
      "index": 1463,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.SendAutomationSignal",
      "library": "smaws-clients.ssm",
      "description": "Sends automation signals to manage execution steps in AWS Systems Manager. It handles requests to resume, retry, or terminate automation executions, working with context and signal request data types. Use this module to control automation workflows programmatically based on custom logic or event triggers.",
      "description_length": 306,
      "index": 1464,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListOpsItemEvents",
      "library": "smaws-clients.ssm",
      "description": "Handles requests to list events associated with OpsItems in AWS Systems Manager. It processes `list_ops_item_events_request` inputs and returns either a `list_ops_item_events_response` or specific error types like `OpsItemNotFoundException`. Useful for retrieving event history for tracking or auditing purposes.",
      "description_length": 312,
      "index": 1465,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAutomationExecutions",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to describe automation executions in AWS Systems Manager, handling responses and specific error cases like invalid filters or tokens. It operates on context and request data structures to retrieve execution details. Use it to query the status and metadata of automated operations triggered in SSM.",
      "description_length": 325,
      "index": 1466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateAssociation",
      "library": "smaws-clients.ssm",
      "description": "This module handles the creation of SSM associations by sending a request with a context and association parameters, returning a result that includes either the association details or specific error types. It works with SSM-related data structures such as association requests, error variants, and result payloads. Concrete use cases include setting up document-to-target associations in AWS SSM, handling errors like invalid documents, instance IDs, or schedules during association creation.",
      "description_length": 492,
      "index": 1467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowExecutionTaskInvocation",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving the status and details of a specific task invocation within a maintenance window execution. It sends a request using a context and a structured input type, returning either the result with task details or an error indicating issues like non-existence or server problems. It is used to monitor or troubleshoot individual task runs in automated maintenance workflows.",
      "description_length": 396,
      "index": 1468,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteParameters",
      "library": "smaws-clients.ssm",
      "description": "Deletes parameters from AWS Systems Manager Parameter Store. Works with context and delete parameters request/response types. Useful for removing sensitive or outdated configuration values during service shutdown or maintenance.",
      "description_length": 228,
      "index": 1469,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListComplianceSummaries",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list compliance summaries for AWS Systems Manager, processing filters and pagination tokens. It works with compliance summary requests and produces results containing summary data or specific AWS SSM errors. Use it to retrieve aggregated compliance status across managed resources in AWS SSM.",
      "description_length": 324,
      "index": 1470,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowTask",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving maintenance window task details from AWS Systems Manager. It processes a context and a specific request type to fetch task information, returning either a result with the task data or an error indicating issues like task non-existence or server errors. It is used when managing automated tasks scheduled during maintenance windows in AWS infrastructure.",
      "description_length": 384,
      "index": 1471,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.PutResourcePolicy",
      "library": "smaws-clients.ssm",
      "description": "This module handles the low-level request to associate a resource policy with a Systems Manager (SSM) resource. It sends an AWS JSON protocol request and decodes potential error responses specific to resource policy operations. Concrete use cases include setting access control policies for SSM parameters or documents, and managing cross-account sharing policies.",
      "description_length": 364,
      "index": 1472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListTagsForResource",
      "library": "smaws-clients.ssm",
      "description": "This module handles the `ListTagsForResource` operation for SSM, sending a request to retrieve tags associated with a specific resource. It works with SSM resource identifiers and returns either a list of tags or specific AWS SSM errors such as invalid resource ID or type. Use this when querying metadata tags for SSM-managed resources like documents or instances.",
      "description_length": 365,
      "index": 1473,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListResourceComplianceSummaries",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list resource compliance summaries, interacting with AWS Systems Manager (SSM) to retrieve compliance data for managed resources. It processes input filters, pagination tokens, and returns structured compliance results or specific SSM errors. Use this module to query compliance status across EC2 instances or other SSM-managed resources in AWS environments.",
      "description_length": 390,
      "index": 1474,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListDocumentMetadataHistory",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to retrieve document metadata history from AWS SSM. It accepts a context and a list document metadata history request, returning either a response with the history data or an error indicating issues like invalid document versions or tokens. It works directly with AWS SSM document metadata structures and common AWS JSON errors.",
      "description_length": 357,
      "index": 1475,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowExecutionTaskInvocations",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to describe task invocations for a specific maintenance window execution in AWS SSM. It processes the input context and request parameters to retrieve invocation details, returning either a result or specific AWS SSM errors. It is used to track the status and details of automated tasks run during maintenance windows.",
      "description_length": 346,
      "index": 1476,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateMaintenanceWindowTask",
      "library": "smaws-clients.ssm",
      "description": "This module handles updating AWS Systems Manager maintenance window tasks by sending requests with provided context and task parameters, returning either a success result or specific AWS error types. It operates on maintenance window task configurations, including targets, task ARNs, and scheduling details. Use this module to modify existing maintenance window tasks in AWS SSM, such as updating task parameters or adjusting schedule settings.",
      "description_length": 445,
      "index": 1477,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateOpsMetadata",
      "library": "smaws-clients.ssm",
      "description": "This module handles updating operational metadata by sending requests to modify metadata associated with specific resources. It works with structured data types like `update_ops_metadata_request` and processes responses into either a success result or detailed error types such as `internal_server_error` or `ops_metadata_not_found_exception`. It is used when managing metadata keys and values for systems like AWS Systems Manager.",
      "description_length": 431,
      "index": 1478,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve AWS Systems Manager maintenance window details, handling responses and specific error conditions like missing resources or server issues. It operates on context and request data structures tailored for SSM maintenance window queries. Use it to fetch configuration details of a named maintenance window in AWS SSM.",
      "description_length": 353,
      "index": 1479,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListCommandInvocations",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list command invocations in AWS SSM, providing a `request` function that sends a query and returns either a result or specific SSM-related errors. It works with AWS SSM command invocation data, including filters, instance IDs, and pagination tokens. Use this module to retrieve detailed status and output of remotely executed commands across managed instances.",
      "description_length": 392,
      "index": 1480,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetParametersByPath",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve parameters from AWS Systems Manager by path. It handles parameter filtering and pagination, returning structured results or specific AWS SSM error types. It is used to fetch hierarchical parameter values from SSM Parameter Store in AWS environments.",
      "description_length": 289,
      "index": 1481,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterTaskFromMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "Handles the deregistration of a task from an AWS Systems Manager maintenance window. It accepts a context and a request object, returning a result that either contains the deregistration response or an error indicating failure. This module is used when managing SSM maintenance windows to remove scheduled tasks programmatically.",
      "description_length": 329,
      "index": 1482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateManagedInstanceRole",
      "library": "smaws-clients.ssm",
      "description": "Performs an update operation for a managed instance role in AWS SSM. It accepts a context and an update request, returning a result that either contains the update response or an error indicating failure reasons such as invalid instance ID or internal server issues. This module is used when modifying IAM roles associated with specific SSM-managed instances.",
      "description_length": 359,
      "index": 1483,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteAssociation",
      "library": "smaws-clients.ssm",
      "description": "Deletes an association between a Systems Manager document and a target, such as an instance or resource group. Accepts a context and a delete association request, returning a result that indicates success or a specific error like missing association or invalid document. Useful for managing configuration state in automated infrastructure workflows.",
      "description_length": 349,
      "index": 1484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterDefaultPatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "Registers a specified patch baseline as the default for an AWS account. Works with patch baseline IDs and AWS context data. Used when configuring patch management settings to ensure a baseline applies to all instances unless overridden.",
      "description_length": 236,
      "index": 1485,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateDocument",
      "library": "smaws-clients.ssm",
      "description": "This module handles the core operation of updating a document in the SSM service, sending a request and returning a result with either the updated document details or specific error types. It works directly with `update_document_request` and `update_document_result` data structures, along with a range of documented error types for precise failure handling. It is used when modifying existing SSM documents, ensuring content updates are applied correctly and validating against known constraints like size or version limits.",
      "description_length": 525,
      "index": 1486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StopAutomationExecution",
      "library": "smaws-clients.ssm",
      "description": "Stops an automation execution by sending a request with the provided context and stop request parameters. It handles errors related to missing executions, internal server issues, and invalid status updates. This function is used to halt ongoing automation processes in systems like AWS Systems Manager.",
      "description_length": 302,
      "index": 1487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateDocumentDefaultVersion",
      "library": "smaws-clients.ssm",
      "description": "This module handles updating the default version of a document in AWS Systems Manager. It processes a request with a context and document version parameters, returning either a success result or specific document-related errors. It works directly with document identifiers and version strings, targeting use cases like document version management in configuration workflows.",
      "description_length": 374,
      "index": 1488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetCalendarState",
      "library": "smaws-clients.ssm",
      "description": "Retrieves the current state of a calendar by sending a request with a context and a structured query. It processes responses into a result type that includes either the calendar state data or specific error types like invalid document or internal server errors. This function is used to check calendar availability or scheduling conflicts in a system integrating with AWS services.",
      "description_length": 381,
      "index": 1489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchGroupState",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to retrieve the state of a patch group in AWS Systems Manager, specifically returning patch compliance data. It processes input contexts and structured requests to fetch results like patch baseline IDs and compliance statuses. Use this to integrate patch group state checks into automation workflows or monitoring tools.",
      "description_length": 349,
      "index": 1490,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetResourcePolicies",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving resource policies for SSM (Systems Manager) resources by sending a request to the AWS API. It works with SSM-specific request and response types, including error variants like internal server errors or resource not found exceptions. A concrete use case is fetching IAM policies attached to an SSM document to verify access controls.",
      "description_length": 363,
      "index": 1491,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateDocument",
      "library": "smaws-clients.ssm",
      "description": "This module handles the creation of SSM documents by sending a request with provided content and metadata, returning a result that indicates success or a specific error such as document size limits, schema issues, or duplicate entries. It operates on SSM document definitions and contextual runtime information. It is used when deploying new automation or configuration documents to AWS Systems Manager.",
      "description_length": 403,
      "index": 1492,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetServiceSetting",
      "library": "smaws-clients.ssm",
      "description": "Retrieves the current value of a service setting in AWS Systems Manager. Works with `Context.t` and `get_service_setting_request` to fetch a `get_service_setting_result`, handling errors like internal server errors or missing settings. Useful for dynamically accessing service configuration values during runtime.",
      "description_length": 313,
      "index": 1493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteDocument",
      "library": "smaws-clients.ssm",
      "description": "Deletes a Systems Manager document by ID, handling errors such as invalid document state or associations. Works with SSM document identifiers and structured error types. Useful for cleaning up unused documents or enforcing document lifecycle policies.",
      "description_length": 251,
      "index": 1494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowSchedule",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to describe AWS SSM maintenance window schedules. It processes input contexts and request parameters to retrieve schedule details, returning either a result or specific AWS SSM error types. It is used to query when and how maintenance windows are set to execute across managed instances.",
      "description_length": 315,
      "index": 1495,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchGroups",
      "library": "smaws-clients.ssm",
      "description": "Works with AWS Systems Manager to retrieve information about patch groups, including their configuration and associated patch baselines. Handles requests and responses for patch group details using SSM-specific data structures. Useful for inventorying patch groups or validating patch management configurations in AWS environments.",
      "description_length": 331,
      "index": 1496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowsForTarget",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe maintenance windows targeting specific systems. It sends a query to retrieve maintenance window details for a given target and returns either the result or an error, such as an internal server error. It is used when managing scheduled maintenance tasks in AWS Systems Manager.",
      "description_length": 317,
      "index": 1497,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteOpsItem",
      "library": "smaws-clients.ssm",
      "description": "Deletes an OpsItem in AWS Systems Manager by sending a deletion request with the provided identifier. Works with AWS context and OpsItem request/response structures, handling errors like invalid parameters or internal server issues. Useful for automating cleanup of operational items in SSM workflows.",
      "description_length": 301,
      "index": 1498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstanceProperties",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve properties of instances managed by AWS Systems Manager. It processes filters, instance IDs, and pagination tokens to fetch configuration and status details. Use it to inspect instance compliance, association states, or inventory data directly from SSM.",
      "description_length": 292,
      "index": 1499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListComplianceItems",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list compliance items by resource ID and type, applying filters and pagination tokens. It processes AWS SSM compliance data, returning structured results or specific error types for invalid inputs. Use it to retrieve compliance status details for managed resources in AWS environments.",
      "description_length": 317,
      "index": 1500,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAssociation",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to describe a Systems Manager association, retrieving configuration details for a specific instance and document. It handles responses and errors from the AWS SSM service, including cases like missing associations or invalid versions. Use it to inspect SSM association status and parameters for managed instances.",
      "description_length": 341,
      "index": 1501,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAvailablePatches",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to retrieve information about available patches for managed instances, specifically by sending a query to the relevant service and parsing the response. It works with structured data types representing patch details, including metadata like patch IDs, classifications, and availability dates. A concrete use case is enabling system administrators to programmatically check for security updates applicable to their infrastructure.",
      "description_length": 458,
      "index": 1502,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListResourceDataSync",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list resource data synchronization configurations in AWS Systems Manager. It processes input contexts and synchronization requests, returning either a list of synchronization results or specific error types like invalid tokens or configuration issues. It is used to retrieve and manage synchronization status across resources in SSM.",
      "description_length": 365,
      "index": 1503,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchProperties",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe patch properties in a system management context. It processes input parameters and returns either patch property details or an error, supporting operations like querying patch baselines. Use cases include retrieving patch metadata for compliance checks or inventory management.",
      "description_length": 318,
      "index": 1504,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstancePatches",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve patch compliance details for EC2 instances, handling responses and specific AWS SSM errors. It works with context and request structures to fetch patch state information. Use this to query installed patches, filter by classification or severity, and paginate results for a specific instance.",
      "description_length": 331,
      "index": 1505,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetInventory",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve inventory data from the SSM service, handling responses and specific error conditions such as invalid filters, tokens, or type names. It operates on AWS context and inventory request structures, returning either inventory results or typed errors. It is used to query system inventory attributes like software or hardware details across managed instances.",
      "description_length": 394,
      "index": 1506,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateActivation",
      "library": "smaws-clients.ssm",
      "description": "This module handles the creation of SSM activations by sending a request to AWS Systems Manager. It processes the activation parameters and returns either a successful result with activation details or an error indicating failure. It is used to register on-premises servers or virtual machines with AWS SSM for management.",
      "description_length": 322,
      "index": 1507,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateOpsItem",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to create operations items in AWS Systems Manager. It processes a context and a create-ops-item request, returning a result with either a response or specific SSM-related error variants. It directly handles SSM operations item creation, targeting use cases like incident management or automated workflow tracking within AWS.",
      "description_length": 352,
      "index": 1508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterTaskWithMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "Registers a task with a maintenance window in AWS Systems Manager. It takes a context and a registration request, returning a result that includes either the registration response or specific SSM-related errors. This function is used to schedule automated tasks for managed instances, such as patching or configuration updates.",
      "description_length": 327,
      "index": 1509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindows",
      "library": "smaws-clients.ssm",
      "description": "This module handles the `DescribeMaintenanceWindows` API request, sending a query to AWS SSM to retrieve information about configured maintenance windows. It processes the response into a structured result, returning either the list of maintenance windows or an error such as internal server failure. It is used to programmatically audit or manage scheduled maintenance events in AWS environments.",
      "description_length": 397,
      "index": 1510,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateResourceDataSync",
      "library": "smaws-clients.ssm",
      "description": "This module handles the execution of resource data sync updates in AWS Systems Manager, sending requests to configure or modify sync settings. It works with structured request and result types specific to SSM resource data sync operations, including error types for configuration conflicts, invalid settings, and missing resources. It is used to manage synchronization of inventory data across AWS accounts and regions, ensuring consistent configuration state.",
      "description_length": 460,
      "index": 1511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UnlabelParameterVersion",
      "library": "smaws-clients.ssm",
      "description": "Removes a label from a specific version of a parameter in the AWS Systems Manager Parameter Store. Works with parameter names and version labels to target updates, returning success or detailed error information. Useful for managing labeled versions of configuration parameters during deployment or rollback scenarios.",
      "description_length": 318,
      "index": 1512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowExecution",
      "library": "smaws-clients.ssm",
      "description": "This module executes requests to retrieve the status and details of a specific Systems Manager maintenance window execution. It handles the retrieval of execution results, including task statuses and error information, using a provided context and request configuration. Concrete use cases include monitoring the outcome of automated maintenance tasks and diagnosing execution failures.",
      "description_length": 386,
      "index": 1513,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "This module handles the creation of maintenance windows in AWS Systems Manager by sending a request to the SSM service. It processes the response and returns either a result containing the ID of the created maintenance window or an error indicating failure. It works with context and request/response types specific to SSM maintenance window operations.",
      "description_length": 353,
      "index": 1514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterTargetFromMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "Handles the deregistration of a target from an AWS Systems Manager maintenance window. It accepts a context and a request with target and window identifiers, returning a result that indicates success or specific AWS errors. This module is used when managing maintenance window configurations by removing outdated or unused targets.",
      "description_length": 331,
      "index": 1515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartChangeRequestExecution",
      "library": "smaws-clients.ssm",
      "description": "This module executes a function to start an SSM automation change request, handling specific AWS SSM errors related to automation definitions, parameters, and execution limits. It works with context and request data types to produce a result containing either a successful execution response or a detailed error. Concrete use cases include initiating automated workflows in AWS SSM while managing failure scenarios like invalid parameters or unapproved automation definitions.",
      "description_length": 476,
      "index": 1516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowExecutionTasks",
      "library": "smaws-clients.ssm",
      "description": "This module handles the execution of requests to describe maintenance window tasks in AWS SSM. It processes input using the `describe_maintenance_window_execution_tasks_request` type and returns either a result containing task details or specific error types like `DoesNotExistException`. It is used to retrieve information about tasks executed during a maintenance window, such as status, start and end times, and task type.",
      "description_length": 425,
      "index": 1517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetOpsSummary",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve operational summary data from AWS Systems Manager, handling responses and specific error conditions. It processes `get_ops_summary_request` inputs and returns either a `get_ops_summary_result` or a detailed error type. It is used to query aggregated operational data across managed instances, such as compliance or patch status.",
      "description_length": 368,
      "index": 1518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.TerminateSession",
      "library": "smaws-clients.ssm",
      "description": "Handles session termination requests in the SSM protocol. It sends a termination command using a provided context and session request, returning a result that indicates success or an internal server error. This module is used to cleanly end active sessions in a remote system.",
      "description_length": 276,
      "index": 1519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAssociationExecutionTargets",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe targets for a specific association execution in AWS SSM. It accepts a context and a request object, returning a result that includes either the execution targets or specific SSM-related errors. It is used to retrieve detailed status information about individual targets of an association execution, such as instance IDs and execution statuses.",
      "description_length": 384,
      "index": 1520,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetConnectionStatus",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to check the status of a connection in a system management context. It takes a runtime context and a connection status request, returning either a response with the connection status or an error indicating failure. It is used to monitor whether a managed connection is active or has encountered issues.",
      "description_length": 330,
      "index": 1521,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CancelMaintenanceWindowExecution",
      "library": "smaws-clients.ssm",
      "description": "This module handles the cancellation of maintenance window executions in AWS Systems Manager. It provides a `request` function that takes a context and a cancellation request, returning a result with either the cancellation response or specific error types like `DoesNotExistException`. It works directly with SSM maintenance window execution IDs and is used when automating operational workflows that require stopping scheduled maintenance tasks.",
      "description_length": 447,
      "index": 1522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListDocuments",
      "library": "smaws-clients.ssm",
      "description": "This module handles document listing operations for an SSM service, providing a `request` function that sends a document list query to the service. It works with context and request/response types specific to SSM document management, including filters and pagination tokens. It is used to retrieve and manage lists of SSM documents, handling errors like invalid filters or server issues during the process.",
      "description_length": 406,
      "index": 1523,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstanceAssociationsStatus",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to retrieve the status of instance associations in AWS SSM. It processes input contexts and request parameters to fetch association status results, supporting error handling for invalid instance IDs, internal server errors, and pagination token issues. It is used to monitor compliance and execution status of configurations on EC2 instances.",
      "description_length": 371,
      "index": 1524,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetDocument",
      "library": "smaws-clients.ssm",
      "description": "Retrieves a document from AWS Systems Manager by sending a request with a context and document identifier, returning either the document content or specific error types such as invalid document version or internal server errors. It operates on AWS SSM document request and result types, handling errors explicitly through a result type. This function is used when querying SSM for automation documents or configuration data stored in the cloud.",
      "description_length": 444,
      "index": 1525,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "This module handles the deletion of AWS Systems Manager maintenance windows by sending a request to the AWS API. It works with the `Context.t` type for authentication and configuration, and the `delete_maintenance_window_request` type to specify which maintenance window to delete. A concrete use case is automating the cleanup of outdated maintenance windows in an AWS environment.",
      "description_length": 382,
      "index": 1526,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetParameter",
      "library": "smaws-clients.ssm",
      "description": "Retrieves a parameter value from AWS Systems Manager Parameter Store. It accepts a context and a parameter request, returning a result that includes either the parameter value or specific AWS SSM errors such as parameter not found or invalid key ID. This function is used to securely access configuration data stored in SSM Parameter Store during application runtime.",
      "description_length": 367,
      "index": 1527,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterPatchBaselineForPatchGroup",
      "library": "smaws-clients.ssm",
      "description": "Registers a patch baseline for a specified patch group in AWS Systems Manager. It accepts a context and a request object containing the patch group name and baseline ID, returning a result with the registration outcome or specific AWS SSM errors. This operation is used to associate patch compliance rules with a group of instances for automated patch management.",
      "description_length": 363,
      "index": 1528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetOpsItem",
      "library": "smaws-clients.ssm",
      "description": "Retrieves an OpsItem by ID, handling authentication and request formatting internally. Works with AWS SSM OpsItem identifiers and returns structured response data or specific error types like access denied or not found. Useful for directly querying operational items in AWS Systems Manager without manual request construction.",
      "description_length": 326,
      "index": 1529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreateOpsMetadata",
      "library": "smaws-clients.ssm",
      "description": "Handles the creation of OpsMetadata resources by sending requests to the SSM service. It works with context and request data to produce a result that includes either the created OpsMetadata details or specific error types. This module is used when initializing metadata for operational insights in systems management workflows.",
      "description_length": 327,
      "index": 1530,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.AddTagsToResource",
      "library": "smaws-clients.ssm",
      "description": "This module handles adding tags to a specified resource within AWS Systems Manager. It accepts a context and a request containing the resource ID, type, and tags, returning a result that indicates success or specific AWS errors. Concrete use cases include tagging SSM documents, managed instances, or automation executions for organizational or billing purposes.",
      "description_length": 362,
      "index": 1531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetMaintenanceWindowExecutionTask",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving details of a specific maintenance window execution task by sending a request to the SSM service. It works with context and SSM-specific request and result types, including handling errors like task not found or internal server errors. It is used to monitor or troubleshoot the status and output of individual tasks within a maintenance window execution.",
      "description_length": 384,
      "index": 1532,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateDocumentMetadata",
      "library": "smaws-clients.ssm",
      "description": "This module handles the updating of document metadata in AWS SSM by sending a request with context and a metadata update payload, returning a result that either contains the response or specific error types such as invalid document or internal server errors. It operates on AWS SSM document identifiers and version metadata, working with structured error types to ensure precise error handling. It is used when modifying document attributes like versions or operational settings in SSM workflows.",
      "description_length": 496,
      "index": 1533,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartSession",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to initiate a session with an AWS SSM target, handling responses and specific error conditions like connection failures or invalid documents. It operates on `start_session_request` and `start_session_response` types, interacting with AWS SSM service models. It is used to programmatically start interactive or automated sessions on managed instances via the SSM API.",
      "description_length": 394,
      "index": 1534,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateMaintenanceWindowTarget",
      "library": "smaws-clients.ssm",
      "description": "This module handles the request to update an SSM maintenance window target, sending the update to AWS and returning the result. It works with the context type and the update maintenance window target request and result types. A concrete use case is modifying the targets of a maintenance window in AWS Systems Manager to adjust which instances or resources are affected.",
      "description_length": 370,
      "index": 1535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListInventoryEntries",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list inventory entries from an AWS SSM service, using a provided context and request configuration. It processes the query and returns either a result containing inventory entries or specific error types such as invalid filter, instance ID, or server errors. It is used to retrieve and filter inventory data for managed instances in AWS environments.",
      "description_length": 382,
      "index": 1536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeDocument",
      "library": "smaws-clients.ssm",
      "description": "This module handles AWS SSM document description requests, validating and retrieving document details. It works with SSM document request and result types, along with specific AWS JSON errors. It is used to fetch and verify SSM document metadata and content in AWS integrations.",
      "description_length": 278,
      "index": 1537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterPatchBaselineForPatchGroup",
      "library": "smaws-clients.ssm",
      "description": "This module handles the deregistration of a patch baseline from a specific patch group in AWS Systems Manager. It processes the request using the provided context and returns either a success result or an error indicating issues like invalid resource IDs or internal server errors. It is used when managing patch compliance configurations by removing associations between patch baselines and target groups.",
      "description_length": 406,
      "index": 1538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeActivations",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe SSM activations, including filtering and pagination. It works with SSM-specific request and result types, along with standard AWS error handling. Use it to retrieve and process activation data from AWS Systems Manager.",
      "description_length": 259,
      "index": 1539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListDocumentVersions",
      "library": "smaws-clients.ssm",
      "description": "Handles requests to list versions of a document in AWS Systems Manager. It processes a context and a list document versions request, returning either a result with document versions or specific errors like invalid document or internal server issues. This module is used to retrieve version history for a specific SSM document, enabling version tracking and management.",
      "description_length": 368,
      "index": 1540,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetParameters",
      "library": "smaws-clients.ssm",
      "description": "Retrieves parameters from AWS Systems Manager Parameter Store by making a request with a given context and parameter names. It handles decryption of secure parameters and returns values along with metadata. This function is used to fetch configuration data or secrets stored in SSM Parameter Store for use in application runtime or initialization.",
      "description_length": 347,
      "index": 1541,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ResumeSession",
      "library": "smaws-clients.ssm",
      "description": "Handles resuming an existing session by sending a request with the session ID and receiving session metadata or error details. Works with session identifiers and server responses in AWS SSM format. Used to reconnect to an interrupted session for command execution or monitoring.",
      "description_length": 278,
      "index": 1542,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribePatchBaselines",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe patch baselines in AWS Systems Manager, providing a `request` function that takes a context and a patch baseline request, returning a result with either the baseline data or an error. It works with AWS-specific data types like `describe_patch_baselines_request` and `describe_patch_baselines_result`. A concrete use case is retrieving configured patch baselines for compliance and patch management workflows in cloud infrastructure.",
      "description_length": 473,
      "index": 1543,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListOpsMetadata",
      "library": "smaws-clients.ssm",
      "description": "This module handles the invocation of the list operations metadata request, interacting with AWS Systems Manager to retrieve metadata about operations. It processes the request within a given context and returns either a result containing metadata or specific error types such as invalid argument or internal server errors. It is used to query and manage operational metadata in AWS SSM environments.",
      "description_length": 400,
      "index": 1544,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.AssociateOpsItemRelatedItem",
      "library": "smaws-clients.ssm",
      "description": "This module handles associating related items with an OpsItem in AWS Systems Manager. It sends a request to link resources such as documents, incidents, or other OpsItems to a target OpsItem, using a structured input format. The function returns a result indicating success or a specific error such as conflict, invalid parameters, or item not found.",
      "description_length": 350,
      "index": 1545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeParameters",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to describe parameters in AWS Systems Manager, handling filters and pagination. It processes `describe_parameters_request` inputs and returns parameter details or specific AWS SSM errors. Use it to retrieve SSM parameter metadata, such as names and types, with optional filtering and token-based pagination.",
      "description_length": 335,
      "index": 1546,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteResourcePolicy",
      "library": "smaws-clients.ssm",
      "description": "Deletes a resource policy from AWS Systems Manager, handling errors such as missing policies, invalid parameters, or conflicts. Works with SSM resource policies identified by name or ARN. Useful when removing access controls for specific SSM resources like documents or parameters.",
      "description_length": 281,
      "index": 1547,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdatePatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "This module handles updating AWS Systems Manager patch baselines by sending requests to modify baseline configurations. It works with patch baseline identifiers and update parameters, returning the updated baseline details or specific error types like `DoesNotExistException`. Use this module to automate patch management workflows by adjusting approval rules or patch sources in SSM.",
      "description_length": 384,
      "index": 1548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.CreatePatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "This module handles the creation of patch baselines in AWS Systems Manager by sending a request with specified parameters and returning a result indicating success or a specific error. It works with AWS context data, patch baseline configurations, and error types such as idempotent parameter mismatches or resource limits. A concrete use case is automating the setup of patch management policies for EC2 instances with custom approval rules and schedules.",
      "description_length": 456,
      "index": 1549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInventoryDeletions",
      "library": "smaws-clients.ssm",
      "description": "Handles requests to describe inventory deletions in AWS Systems Manager. It accepts a context and a deletion description request, returning either deletion details or specific error types like invalid deletion ID or internal server errors. Useful for tracking deletion status or troubleshooting failed deletion operations.",
      "description_length": 322,
      "index": 1550,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeAutomationStepExecutions",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to describe automation step executions in AWS SSM, providing structured querying and result parsing. It works with automation execution identifiers, filters, and pagination tokens to retrieve detailed execution information. Concrete use cases include monitoring automation progress, auditing step outcomes, and troubleshooting failed executions.",
      "description_length": 374,
      "index": 1551,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListAssociationVersions",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving versions of a specific association in AWS Systems Manager. It accepts a context and a request with parameters like association ID and next token, returning either a list of versions or an error such as invalid token or missing association. It is used when managing configuration history for SSM associations, enabling version rollback or audit.",
      "description_length": 375,
      "index": 1552,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetCommandInvocation",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve the status and details of a command invocation on an AWS instance. It handles responses and errors from querying specific command executions, including invalid IDs or missing invocations. Use this to monitor or debug command execution outcomes in automated systems.",
      "description_length": 305,
      "index": 1553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeletePatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "Deletes a patch baseline from AWS Systems Manager, ensuring it is no longer used for patching operations. Works with patch baseline identifiers and handles errors such as resource in-use exceptions or internal server errors. Useful when cleaning up unused patch baselines before deploying new patch management configurations.",
      "description_length": 325,
      "index": 1554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetOpsMetadata",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving operations metadata from AWS Systems Manager by sending a request and returning a result with either the metadata or specific error types. It works with AWS context, request, and response data structures, including error types like internal server errors and invalid argument exceptions. A concrete use case is fetching operational metadata for a specific resource to monitor or manage system configurations in AWS environments.",
      "description_length": 459,
      "index": 1555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.RegisterTargetWithMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "Registers a target with a maintenance window by sending a request to the SSM service. It accepts a context and a register target request, returning a result that includes either the registration response or specific SSM service errors. This operation is used when configuring automated maintenance tasks for managed instances or resources.",
      "description_length": 339,
      "index": 1556,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateServiceSetting",
      "library": "smaws-clients.ssm",
      "description": "Performs updates to service settings in AWS Systems Manager, handling requests with contextual information and returning either a result or specific error types. It operates on service setting request and result types, including errors like internal server errors or setting not found. This module is used to modify configuration parameters for AWS services, ensuring settings are applied correctly within SSM.",
      "description_length": 410,
      "index": 1557,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetInventorySchema",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving inventory schema details from AWS Systems Manager by executing a `request` function that takes a context and a schema request, returning a result with either the schema response or specific error types. It works with AWS SSM-specific data structures like `get_inventory_schema_request` and `get_inventory_schema_result`, along with custom error variants such as `InvalidTypeNameException`. A concrete use case includes querying the schema of a custom inventory type to validate or inspect its structure before performing inventory operations.",
      "description_length": 573,
      "index": 1558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeOpsItems",
      "library": "smaws-clients.ssm",
      "description": "This module handles the `DescribeOpsItems` API request in AWS Systems Manager, retrieving operational items based on specified filters. It works with `Context.t` for authentication and `describe_ops_items_request` to define input parameters, returning either a `describe_ops_items_response` or an error. A concrete use case is querying open OpsItems related to specific AWS resources or events for monitoring and incident response.",
      "description_length": 431,
      "index": 1559,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DisassociateOpsItemRelatedItem",
      "library": "smaws-clients.ssm",
      "description": "This module handles the disassociation of related items from an OpsItem in AWS Systems Manager. It provides a `request` function that takes a context and a disassociate request, returning a result with either a response or specific SSM-related errors. It works with OpsItem identifiers and related item references, targeting scenarios like removing unwanted associations from operational items.",
      "description_length": 394,
      "index": 1560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateMaintenanceWindow",
      "library": "smaws-clients.ssm",
      "description": "This module handles the execution of maintenance window updates in AWS Systems Manager by sending a structured request and returning a result with either the updated window details or specific error types. It operates on the `update_maintenance_window_request` type and produces an `update_maintenance_window_result`, capturing errors such as missing resources or internal server issues. It is used to modify scheduled maintenance windows in SSM, ensuring precise control over update timing and duration.",
      "description_length": 504,
      "index": 1561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.PutInventory",
      "library": "smaws-clients.ssm",
      "description": "This module issues inventory data updates to AWS Systems Manager, handling schema validation and instance context checks. It processes structured inventory items and returns result status or specific error conditions like schema limits, content mismatches, or unsupported contexts. Use it to report custom inventory metadata from EC2 instances or on-premises servers to AWS SSM.",
      "description_length": 378,
      "index": 1562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeInstancePatchStatesForPatchGroup",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve patch state details for instances in a specified patch group. It processes queries using context and request parameters, returning results or specific AWS SSM errors like invalid filter or internal server error. It is used to monitor patch compliance across EC2 instances in AWS environments.",
      "description_length": 332,
      "index": 1563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteInventory",
      "library": "smaws-clients.ssm",
      "description": "Deletes custom inventory data from AWS Systems Manager using a provided context and request parameters. It handles errors related to invalid input, internal server issues, and configuration problems. This function is used to remove inventory entries by type name or specific items in AWS SSM.",
      "description_length": 292,
      "index": 1564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetPatchBaselineForPatchGroup",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving the patch baseline for a specified patch group in AWS Systems Manager. It processes a request using a context and returns either the patch baseline result or an error such as an internal server error. It works directly with AWS SSM-specific request and response structures defined in the Smaws_Client_SSM module.",
      "description_length": 343,
      "index": 1565,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateAssociation",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to update AWS Systems Manager associations, handling specific error cases like invalid documents, parameters, or schedules. It works with context and request/response types defined in the `Smaws_Client_SSM` module. A concrete use case is modifying the configuration of managed instances by updating their SSM association with new parameters or document versions.",
      "description_length": 390,
      "index": 1566,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.SendCommand",
      "library": "smaws-clients.ssm",
      "description": "Sends a command to AWS Systems Manager (SSM) to execute on a specified instance. It handles errors related to invalid parameters, document versions, instance IDs, and platform compatibility. This function is used to remotely trigger scripts or commands on EC2 instances via SSM.",
      "description_length": 278,
      "index": 1567,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.CreateAssociationBatch",
      "library": "smaws-clients.ssm",
      "description": "This module handles the creation of SSM association batches by sending a request to associate multiple instances with a document, supporting error handling for specific AWS SSM service constraints and input validation issues. It operates on SSM-specific data types including association batch requests, instance IDs, document versions, and target configurations. Concrete use cases include automating configuration management across fleets of EC2 instances or applying patches according to a schedule.",
      "description_length": 501,
      "index": 1568,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.StartAssociationsOnce",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to start AWS Systems Manager associations for specified instances. It handles the input context and association IDs, returning either a success result or specific errors like missing or invalid associations. It is used to trigger configuration management tasks on EC2 instances via SSM.",
      "description_length": 314,
      "index": 1569,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteOpsMetadata",
      "library": "smaws-clients.ssm",
      "description": "This module handles the deletion of OpsMetadata in AWS SSM by sending a request to remove specified metadata entries. It works with `delete_ops_metadata_request` to target specific metadata and returns a result indicating success or failure with detailed error types. Concrete use cases include cleaning up stale metadata or removing sensitive configuration data from managed instances.",
      "description_length": 386,
      "index": 1570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ModifyDocumentPermission",
      "library": "smaws-clients.ssm",
      "description": "This module handles modifying permissions for documents in the SSM service. It provides a `request` function that takes a context and a permission modification request, returning a result with either a success response or specific error types like `DocumentLimitExceeded` or `InvalidPermissionType`. It works directly with document permission requests and responses, targeting use cases such as updating user access to SSM documents programmatically.",
      "description_length": 450,
      "index": 1571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateAssociationStatus",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to update the status of a configuration association in AWS Systems Manager. It handles the specific input structure `update_association_status_request` and returns either a success result or one of several typed AWS SSM-specific errors. It is used to report the status of an association execution from an instance to the SSM service.",
      "description_length": 361,
      "index": 1572,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.LabelParameterVersion",
      "library": "smaws-clients.ssm",
      "description": "This module handles labeling specific versions of parameters in AWS Systems Manager. It provides a `request` function that takes a context and a label parameter version request, returning a result with either a success or detailed error such as parameter not found or label limit exceeded. It works directly with parameter version labels, supporting use cases like tracking configuration changes or managing environment-specific parameter versions.",
      "description_length": 448,
      "index": 1573,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetAutomationExecution",
      "library": "smaws-clients.ssm",
      "description": "This module issues requests to retrieve the status and details of an automation execution in AWS Systems Manager. It handles the specific operation of querying automation execution results using a context and request configuration. The module works with AWS SSM automation execution identifiers and returns structured results or specific error types like `AutomationExecutionNotFoundException`. A concrete use case is checking the outcome of a remote automation script triggered via SSM.",
      "description_length": 487,
      "index": 1574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeregisterManagedInstance",
      "library": "smaws-clients.ssm",
      "description": "Handles the deregistration of a managed instance from AWS Systems Manager. It processes a request with instance-specific details and returns a result indicating success or specific errors like invalid instance ID or internal server issues. This module directly supports managing instance lifecycle operations in SSM.",
      "description_length": 316,
      "index": 1575,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.ListOpsItemRelatedItems",
      "library": "smaws-clients.ssm",
      "description": "This module handles requests to list related items for an OpsItem in AWS Systems Manager. It processes `list_ops_item_related_items_request` inputs and returns either a `list_ops_item_related_items_response` or specific error types like `InternalServerError` or `OpsItemInvalidParameterException`. It is used to retrieve contextual data such as related incidents or resources tied to a specific OpsItem.",
      "description_length": 403,
      "index": 1576,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.GetParameterHistory",
      "library": "smaws-clients.ssm",
      "description": "Retrieves the history of changes for a specific parameter in AWS Systems Manager Parameter Store. It accepts a context and a request containing the parameter name, returning a result that includes the parameter's historical values or an error if the parameter is not found, the key is invalid, or a server error occurs. This function is useful for auditing parameter changes or recovering previous versions of a parameter.",
      "description_length": 422,
      "index": 1577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.PutParameter",
      "library": "smaws-clients.ssm",
      "description": "This module handles the core operation of sending a parameter put request to AWS SSM, returning a result with either the response data or specific error types. It works directly with `put_parameter_request` and `put_parameter_result` types, along with a range of SSM-specific error variants for precise failure handling. It is used when creating or updating parameters in AWS SSM Parameter Store, particularly in scenarios requiring strict validation, version control, or policy enforcement.",
      "description_length": 491,
      "index": 1578,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.GetDefaultPatchBaseline",
      "library": "smaws-clients.ssm",
      "description": "This module handles retrieving the default patch baseline configuration for AWS Systems Manager. It sends a request using context and returns either the baseline result or an error like internal server failure. Use it to programmatically access patch management settings in AWS SSM.",
      "description_length": 282,
      "index": 1579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.DeleteParameter",
      "library": "smaws-clients.ssm",
      "description": "Deletes a parameter from AWS Systems Manager Parameter Store. It takes a context and a delete parameter request, returning a result indicating success or specific errors like internal server error or parameter not found. This function is used to remove configuration values stored in SSM Parameter Store, such as sensitive credentials or application settings.",
      "description_length": 359,
      "index": 1580,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.UpdateOpsItem",
      "library": "smaws-clients.ssm",
      "description": "This module handles updating AWS Systems Manager OpsItems by sending a structured request and returning a result with either a response or specific error types. It works with the `update_ops_item_request` and `update_ops_item_response` data types, along with various error types representing different failure scenarios. Concrete use cases include modifying OpsItem details such as status, priority, or related resources in an automated workflow.",
      "description_length": 446,
      "index": 1581,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowExecutions",
      "library": "smaws-clients.ssm",
      "description": "This module executes requests to retrieve details about maintenance window executions in AWS SSM. It processes a context and a specific request structure, returning either a result containing execution details or an error indicating failure. It is used to programmatically access the status and metadata of scheduled maintenance tasks in AWS environments.",
      "description_length": 355,
      "index": 1582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ResetServiceSetting",
      "library": "smaws-clients.ssm",
      "description": "This module handles the resetting of service settings in AWS Systems Manager. It provides a `request` function that takes a context and a reset service setting request, returning a result with either the reset outcome or specific error types like internal server error, service setting not found, or too many updates. It is used to programmatically revert custom service settings to their default values within AWS SSM.",
      "description_length": 419,
      "index": 1583,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_SSM.ListAssociations",
      "library": "smaws-clients.ssm",
      "description": "Handles requests to list associations in AWS Systems Manager by taking a context and a specific request structure. It returns a result containing either the list of associations or an error such as internal server error or invalid next token. This module is used when retrieving associations for configuration items or managing resource links in SSM.",
      "description_length": 350,
      "index": 1584,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM.DescribeMaintenanceWindowTasks",
      "library": "smaws-clients.ssm",
      "description": "This module handles the `DescribeMaintenanceWindowTasks` API operation for SSM, accepting a context and request parameters to retrieve maintenance window task details. It works with SSM-specific data types like `describe_maintenance_window_tasks_request` and returns either a result containing `describe_maintenance_window_tasks_result` or specific error types such as `DoesNotExistException`. A concrete use case is querying AWS SSM to list tasks associated with a specific maintenance window ID.",
      "description_length": 497,
      "index": 1585,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_SSM",
      "library": "smaws-clients.ssm",
      "description": "This module provides operations for managing AWS Systems Manager (SSM) configurations, automation workflows, and compliance monitoring. It works with data structures representing patch baselines, maintenance windows, operational metadata (OpsItems), document associations, compliance summaries, and inventory entries, along with their associated parameters, filters, and error conditions. Specific use cases include automating infrastructure updates, enforcing compliance policies, orchestrating maintenance tasks across resources, synchronizing configuration data between regions, and tracking patch deployment states in AWS environments.",
      "description_length": 639,
      "index": 1586,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListQuerySuggestionsBlockLists",
      "library": "smaws-clients.kendra",
      "description": "This module handles querying AWS Kendra for a list of query suggestions block lists, returning either a response or specific AWS service errors. It operates with context and request/response types defined in the Smaws_Lib and Smaws_Client_Kendra modules. Use this module to retrieve block lists that filter unwanted query suggestions in a Kendra index.",
      "description_length": 352,
      "index": 1587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.Retrieve",
      "library": "smaws-clients.kendra",
      "description": "Performs document retrieval from an Amazon Kendra index using a provided query context. It sends a retrieval request and returns either the search results or specific error types indicating issues like access denial, resource conflicts, or validation failures. This module is used to fetch relevant documents or passages in response to natural language queries within an application.",
      "description_length": 383,
      "index": 1588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateAccessControlConfiguration",
      "library": "smaws-clients.kendra",
      "description": "This module issues requests to create access control configurations for a Kendra index, handling responses and specific AWS service errors. It works with context and request/response structures defined in the Kendra client library. Use this to configure document access permissions when indexing data sources in Amazon Kendra.",
      "description_length": 326,
      "index": 1589,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.AssociatePersonasToEntities",
      "library": "smaws-clients.kendra",
      "description": "This module handles associating personas to entities within a Kendra service, using a structured request format. It operates on context and request/response types specific to Kendra, enabling precise mapping of user personas to system entities. Use this module to enforce access control or personalize search results based on user roles in a Kendra index.",
      "description_length": 355,
      "index": 1590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateDataSource",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of a data source in Amazon Kendra by sending a request and returning a result with either a response or specific error types. It operates with context and request/response structures defined in the Smaws_Client_Kendra module, including detailed exception handling. It is used when integrating with Kendra to programmatically set up data sources while managing potential service errors.",
      "description_length": 418,
      "index": 1591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchPutDocument",
      "library": "smaws-clients.kendra",
      "description": "This module handles batch document ingestion into an indexing service, providing a `request` function that sends a batch of document operations and returns a result with either a success response or specific error types. It works with structured document requests and responses, including detailed exceptions like `AccessDeniedException` or `ValidationException`. It is used to efficiently index multiple documents in a single call, handling failures at the individual document level without rolling back the entire batch.",
      "description_length": 522,
      "index": 1592,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeAccessControlConfiguration",
      "library": "smaws-clients.kendra",
      "description": "This module handles the `DescribeAccessControlConfiguration` operation for Kendra, sending a request to retrieve access control configuration details for a specified resource. It works with Kendra-specific request and response structures, including error types like `AccessDeniedException` and `ResourceNotFoundException`. A concrete use case is retrieving access control settings for a Kendra index to audit or configure permissions.",
      "description_length": 434,
      "index": 1593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListThesauri",
      "library": "smaws-clients.kendra",
      "description": "This module handles listing thesauri in a Kendra index by sending a request and returning a result with either the response or specific error types. It works with context and configuration data types to interact with AWS Kendra's API. Concrete use cases include retrieving thesaurus configurations for search improvement and managing index-specific synonym rules.",
      "description_length": 363,
      "index": 1594,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribePrincipalMapping",
      "library": "smaws-clients.kendra",
      "description": "This module handles the `describe_principal_mapping` operation for Kendra, sending a request to retrieve principal mapping details for a specific index and data source. It works with Kendra-specific request and response types, including error variants like `AccessDeniedException` and `ResourceNotFoundException`. A concrete use case is checking which users or groups are mapped to specific documents in a Kendra index for access control auditing.",
      "description_length": 447,
      "index": 1595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListExperiences",
      "library": "smaws-clients.kendra",
      "description": "This module handles listing Kendra experiences by sending a request with context and returning a result that includes either a response or specific error types. It works with Kendra's list experiences request and response structures, along with common AWS error types like access denied, internal server errors, and validation exceptions. A concrete use case is retrieving a paginated list of Kendra experiences for monitoring or management purposes.",
      "description_length": 450,
      "index": 1596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListGroupsOlderThanOrderingId",
      "library": "smaws-clients.kendra",
      "description": "This module implements a single request operation to retrieve groups older than a specified ordering ID from a Kendra index. It processes the request using a context and returns either a response containing the list of groups or an error detailing the failure. Concrete use cases include synchronizing group data based on ordering IDs and managing incremental updates in Kendra index group structures.",
      "description_length": 401,
      "index": 1597,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ClearQuerySuggestions",
      "library": "smaws-clients.kendra",
      "description": "Clears query suggestions for an Amazon Kendra index by sending a request with the index identifier. It handles errors such as access denial, resource not found, and validation issues. This module is used when managing search query data in Kendra, such as after updating index content or user query behavior.",
      "description_length": 307,
      "index": 1598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListFeaturedResultsSets",
      "library": "smaws-clients.kendra",
      "description": "This module handles requests to list featured results sets in Amazon Kendra, providing a `request` function that sends a query to the service and returns either a response or a specific error type. It works with contextual information and Kendra-specific request/response structures to manage search result configurations. Use this module to retrieve curated result sets for search queries in Kendra index applications.",
      "description_length": 419,
      "index": 1599,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeDataSource",
      "library": "smaws-clients.kendra",
      "description": "This module handles the execution of a data source description request, returning detailed configuration and status of a specified data source. It operates on a context and a structured request type, producing a result that includes either a response with data source details or specific AWS service exceptions. Use this to retrieve metadata and operational state of an existing data source within an application.",
      "description_length": 413,
      "index": 1600,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateDataSource",
      "library": "smaws-clients.kendra",
      "description": "Performs an update operation on a data source within a Kendra index using a provided context and request configuration. It handles errors specific to data source updates, such as access issues, conflicts, and validation failures. This function is used to modify data source settings like synchronization schedules or document restrictions in Amazon Kendra.",
      "description_length": 356,
      "index": 1601,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.GetQuerySuggestions",
      "library": "smaws-clients.kendra",
      "description": "This module handles querying an AWS Kendra index for suggested search terms based on a partial input. It sends a request using a provided context and query parameters, returning either a list of suggested queries or an error indicating issues like access denial, resource not found, or validation failure. It is used to implement auto-complete or search suggestion features backed by AWS Kendra.",
      "description_length": 395,
      "index": 1602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateFaq",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of FAQ resources in Amazon Kendra by sending a structured request and returning a result with either a success response or specific error types. It operates on Kendra FAQ request and response data types, including detailed error cases like `ConflictException` or `ValidationException`. Use this module to programmatically add FAQs to a Kendra index, ensuring proper handling of input validation and service limits.",
      "description_length": 447,
      "index": 1603,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListIndices",
      "library": "smaws-clients.kendra",
      "description": "This module handles the invocation of the `list_indices` operation, sending requests to the Kendra service and returning a list of indices or specific errors. It works with the `list_indices_request` and `list_indices_response` types, along with various exception types for error handling. A concrete use case is retrieving a paginated list of search indices from AWS Kendra to display or manage within an application.",
      "description_length": 418,
      "index": 1604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchDeleteFeaturedResultsSet",
      "library": "smaws-clients.kendra",
      "description": "Deletes a set of featured results from an Amazon Kendra index, using a provided context and request configuration. Works with AWS Kendra's batch delete featured results set request and response types, handling errors such as access denial, resource not found, and validation failures. Useful when managing search result personalization by removing outdated or incorrect featured documents from a Kendra index.",
      "description_length": 409,
      "index": 1605,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteQuerySuggestionsBlockList",
      "library": "smaws-clients.kendra",
      "description": "This module handles the deletion of query suggestions block lists in Amazon Kendra by sending a request to remove a specified block list. It operates on a context and a delete request structure specific to Kendra's block list configuration. Use this module when managing search query restrictions in a Kendra index, such as removing outdated blocked terms.",
      "description_length": 356,
      "index": 1606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeQuerySuggestionsConfig",
      "library": "smaws-clients.kendra",
      "description": "This module handles the `DescribeQuerySuggestionsConfig` operation for Kendra, sending a request to retrieve the query suggestions configuration for a specific index. It works with Kendra's configuration data structures, including response types that represent query suggestion settings and error types for common AWS service exceptions. A concrete use case is checking the current query suggestion settings for an index to determine if they match desired values before applying updates.",
      "description_length": 487,
      "index": 1607,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.StopDataSourceSyncJob",
      "library": "smaws-clients.kendra",
      "description": "This module provides a function to stop an ongoing data source synchronization job in Amazon Kendra. It takes a context and a stop request, returning a result indicating success or a specific error such as access denied, internal server error, or resource not found. It is used when managing document index updates or halting sync operations in response to user actions or system events.",
      "description_length": 387,
      "index": 1608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DisassociateEntitiesFromExperience",
      "library": "smaws-clients.kendra",
      "description": "This module handles the disassociation of entities from a Kendra experience by sending a request with the necessary context and parameters. It works with custom AWS Kendra request and response types, including specific error variants for handling failure cases. Use this module to manage entity relationships in Kendra experiences, such as removing users or groups from access.",
      "description_length": 377,
      "index": 1609,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.PutPrincipalMapping",
      "library": "smaws-clients.kendra",
      "description": "This module handles the mapping of principals to data sources in Amazon Kendra, enabling access control configuration. It works with AWS context and Kendra-specific request/response types, including detailed error handling for common service exceptions. Use this module to programmatically assign or update user or group access to specific Kendra data sources.",
      "description_length": 360,
      "index": 1610,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.AssociateEntitiesToExperience",
      "library": "smaws-clients.kendra",
      "description": "This module handles associating entities to a Kendra experience by sending a request with the necessary parameters and returning a result that indicates success or a specific AWS error. It works with context data, association requests, and response types defined in the Kendra client library. Use this when configuring access control for users or groups in a Kendra index or experience.",
      "description_length": 386,
      "index": 1611,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListAccessControlConfigurations",
      "library": "smaws-clients.kendra",
      "description": "This module handles requests to list access control configurations in a Kendra service, interacting with context and request/response types specific to Kendra. It works with data types such as `list_access_control_configurations_request`, `list_access_control_configurations_response`, and various error types like `access_denied_exception` or `resource_not_found_exception`. A concrete use case is retrieving access control settings for Kendra indexes to manage document-level permissions programmatically.",
      "description_length": 507,
      "index": 1612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteExperience",
      "library": "smaws-clients.kendra",
      "description": "This module handles the deletion of a Kendra experience by sending a request with the provided context and delete experience parameters. It returns a result containing either the deletion response or specific error types such as `AccessDeniedException`, `ConflictException`, or `ResourceNotFoundException`. It is used when removing a previously created Kendra experience resource programmatically.",
      "description_length": 397,
      "index": 1613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DisassociatePersonasFromEntities",
      "library": "smaws-clients.kendra",
      "description": "This module handles disassociating personas from entities in a Kendra index by sending a structured request and returning a result with either a response or specific error types. It operates on Kendra-specific data structures, including the context, request, and response types tailored for the disassociate-personas-from-entities API operation. A concrete use case is managing user access to search entities by removing assigned personas programmatically during access revocation workflows.",
      "description_length": 491,
      "index": 1614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListExperienceEntities",
      "library": "smaws-clients.kendra",
      "description": "This module handles listing entities associated with a Kendra experience by sending a request and returning a result with either the response or specific AWS Kendra error types. It operates on a context and a list_experience_entities_request, producing a list_experience_entities_response on success. A concrete use case is retrieving a paginated list of user or group entities linked to a specific Kendra experience for access management or auditing.",
      "description_length": 451,
      "index": 1615,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeThesaurus",
      "library": "smaws-clients.kendra",
      "description": "Handles requests to describe a thesaurus in a Kendra index, returning configuration details or errors if the thesaurus is inaccessible or invalid. Works with `describe_thesaurus_request` and `describe_thesaurus_response` types, along with various error types for specific failure scenarios. Useful for retrieving the current state or configuration of a specific thesaurus resource in AWS Kendra.",
      "description_length": 395,
      "index": 1616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.StartDataSourceSyncJob",
      "library": "smaws-clients.kendra",
      "description": "This module issues requests to start a data source synchronization job, handling responses and specific error conditions such as access denial, resource conflicts, and validation failures. It operates on AWS Kendra data sources using the provided context and request structures. A concrete use case is triggering a sync job after updating a data source configuration to ensure indexed data is up to date.",
      "description_length": 404,
      "index": 1617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateIndex",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of a new index in Amazon Kendra by sending a request with specified configuration parameters. It processes responses and potential errors from the Kendra service, including conflicts, validation issues, and access constraints. Use this module when setting up a new search index with custom settings like name, description, and capacity units.",
      "description_length": 375,
      "index": 1618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListTagsForResource",
      "library": "smaws-clients.kendra",
      "description": "This module handles the `list_tags_for_resource` operation for AWS Kendra, sending a request to retrieve tags associated with a specified resource. It works with AWS Kendra resource ARNs and processes responses or specific AWS service errors like `AccessDeniedException` and `ResourceUnavailableException`. A concrete use case is auditing or managing metadata tags on Kendra indexes or data sources for cost tracking or resource organization.",
      "description_length": 442,
      "index": 1619,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeQuerySuggestionsBlockList",
      "library": "smaws-clients.kendra",
      "description": "Handles requests to retrieve details about a query suggestions block list in Amazon Kendra. It works with context and block list identifiers to fetch configuration and metadata. Use this when managing search query exclusions in Kendra index settings.",
      "description_length": 250,
      "index": 1620,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeFeaturedResultsSet",
      "library": "smaws-clients.kendra",
      "description": "This module handles requests to describe a featured results set in a Kendra index, interacting directly with AWS Kendra's API. It accepts a context and a `describe_featured_results_set_request`, returning a result that includes either the response data or specific AWS Kendra error types. It is used to retrieve details about a specific featured results set by identifier, typically for monitoring or configuration purposes.",
      "description_length": 424,
      "index": 1621,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteDataSource",
      "library": "smaws-clients.kendra",
      "description": "Deletes a data source in Amazon Kendra by sending a request with the provided configuration. It handles errors such as access denial, resource not found, and validation failures, returning a result indicating success or failure. This function is used when managing document indexing resources that need to be removed from a Kendra index.",
      "description_length": 337,
      "index": 1622,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListDataSourceSyncJobs",
      "library": "smaws-clients.kendra",
      "description": "This module handles listing data source sync jobs by sending a request and returning a result with either the sync job response or specific AWS error types. It works with context and request/response structures defined in the Smaws_Client_Kendra module. A concrete use case is retrieving the status of document synchronization jobs for a Kendra data source.",
      "description_length": 357,
      "index": 1623,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateThesaurus",
      "library": "smaws-clients.kendra",
      "description": "This module handles updating a thesaurus in a Kendra index by sending a structured update request. It works with context and configuration data to perform the operation, returning unit on success or specific error types on failure. Concrete use cases include synchronizing thesaurus changes with a Kendra index to improve search relevance.",
      "description_length": 339,
      "index": 1624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateQuerySuggestionsBlockList",
      "library": "smaws-clients.kendra",
      "description": "This module handles the submission of requests to update a query suggestions block list in Amazon Kendra, interacting directly with the service's API. It processes input contexts and structured requests to modify block lists, returning results that indicate success or specific error conditions like conflicts or validation failures. It is used when managing search query restrictions in Kendra index configurations.",
      "description_length": 416,
      "index": 1625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.SubmitFeedback",
      "library": "smaws-clients.kendra",
      "description": "Submits feedback to a Kendra index, allowing users to provide relevance feedback for search results. Works with AWS Kendra's feedback submission API using a context object and a structured feedback request. Useful for improving search accuracy by logging user interactions with search results.",
      "description_length": 293,
      "index": 1626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateQuerySuggestionsConfig",
      "library": "smaws-clients.kendra",
      "description": "Performs an update operation on query suggestions configuration for a Kendra index, handling validation, conflict, and access control errors. Works with AWS Kendra configuration requests and context data to modify suggestion settings. Useful for adjusting query suggestion behavior in search applications without rebuilding indexes.",
      "description_length": 332,
      "index": 1627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UntagResource",
      "library": "smaws-clients.kendra",
      "description": "Removes specified tags from an Amazon Kendra resource. Works with AWS context and Kendra-specific request/response structures, handling errors like access denial or resource unavailability. Useful for managing metadata tags on Kendra indexes or data sources during cleanup or reorganization tasks.",
      "description_length": 297,
      "index": 1628,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DeletePrincipalMapping",
      "library": "smaws-clients.kendra",
      "description": "Deletes principal mapping configurations in Amazon Kendra by sending a request with the provided context and parameters. It handles errors specific to Kendra, such as access denial, resource not found, and validation failures. This operation is used when managing user or group access to Kendra indexes by removing existing mappings.",
      "description_length": 333,
      "index": 1629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteFaq",
      "library": "smaws-clients.kendra",
      "description": "Deletes a FAQ resource from Amazon Kendra by sending a deletion request. Works with context and request data types specific to Kendra's API. Useful for removing outdated or unnecessary FAQs from an index programmatically.",
      "description_length": 221,
      "index": 1630,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateIndex",
      "library": "smaws-clients.kendra",
      "description": "This module issues requests to update an index in a document search service. It handles the full lifecycle of the request, including error mapping for specific failure conditions like quota limits or invalid configurations. It works directly with context and update request data structures to modify index settings or metadata.",
      "description_length": 327,
      "index": 1631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.TagResource",
      "library": "smaws-clients.kendra",
      "description": "This module handles tagging operations for AWS Kendra resources by sending requests to associate tags with specified resources. It works with AWS Kendra tag request and response structures, along with common AWS error types. Use this module when managing metadata tags on Kendra resources such as indexes or data sources.",
      "description_length": 321,
      "index": 1632,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteAccessControlConfiguration",
      "library": "smaws-clients.kendra",
      "description": "Deletes an access control configuration in Amazon Kendra. Works with context and request/response types specific to Kendra's access control. Useful for managing document-level security policies in search index configurations.",
      "description_length": 225,
      "index": 1633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.Query",
      "library": "smaws-clients.kendra",
      "description": "This module handles querying an AWS Kendra index by sending a structured request and returning a result or specific error. It works with contextual execution environments and Kendra-specific query requests and responses. Use this module to retrieve indexed documents or handle query-time exceptions like access denial or throttling.",
      "description_length": 332,
      "index": 1634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListFaqs",
      "library": "smaws-clients.kendra",
      "description": "This module handles listing FAQs from an AWS Kendra index by sending a request and returning a result with either the list of FAQs or an error. It works with context and request/response types specific to AWS Kendra's API. A concrete use case is retrieving all configured FAQs for a given Kendra index to display or manage them programmatically.",
      "description_length": 345,
      "index": 1635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateFeaturedResultsSet",
      "library": "smaws-clients.kendra",
      "description": "Performs an update operation on a featured results set in Amazon Kendra, handling requests and responses with precise error handling for conflicts, permissions, and validation. Works with Kendra-specific data structures including featured results set identifiers, item configurations, and error types. Useful for modifying curated search results in a Kendra index, such as updating pinned documents or result rankings.",
      "description_length": 418,
      "index": 1636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateFeaturedResultsSet",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of featured results sets in Amazon Kendra by sending a structured request and returning a result with either a success response or specific error types. It operates on context and request/response data types defined in the `Smaws_Lib` and `Smaws_Client_Kendra` modules, including detailed error variants for precise failure handling. It is used when integrating search features that require promoting specific documents or results in a Kendra index.",
      "description_length": 482,
      "index": 1637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchGetDocumentStatus",
      "library": "smaws-clients.kendra",
      "description": "This module issues requests to retrieve the status of multiple documents in a Kendra index, handling errors such as access denial, resource not found, and throttling. It operates on document identifiers and batch request structures defined in the Kendra client library. A concrete use case is checking the ingestion status of a set of documents after a bulk upload.",
      "description_length": 365,
      "index": 1638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateAccessControlConfiguration",
      "library": "smaws-clients.kendra",
      "description": "This module issues requests to update access control configurations in Kendra, handling responses and specific AWS service errors. It works with context and request/response structures defined for Kendra's access control updates. Concrete use cases include modifying permissions for data sources or indexes in Kendra based on user or group identities.",
      "description_length": 351,
      "index": 1639,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.ListDataSources",
      "library": "smaws-clients.kendra",
      "description": "This module handles the execution of list data sources requests within a context, returning either a response or specific AWS Kendra error types. It operates on `Smaws_Lib.Context.t` and `Smaws_Client_Kendra.list_data_sources_request` data structures. Use this module to retrieve a list of data sources from an AWS Kendra index, handling errors such as access denial, resource not found, or throttling.",
      "description_length": 402,
      "index": 1640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateQuerySuggestionsBlockList",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of query suggestions block lists in Amazon Kendra, providing a `request` function that sends a block list configuration to the service. It works with structured request and response types defined in the Kendra client library, including error types for handling specific AWS service exceptions. Use this module when configuring block lists to filter unwanted query suggestions in a Kendra index.",
      "description_length": 427,
      "index": 1641,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.GetSnapshots",
      "library": "smaws-clients.kendra",
      "description": "This module handles the retrieval of snapshots from a Kendra service by sending a structured request and returning a result with either the response data or specific error types. It works with AWS Kendra snapshot request and response types, including detailed error cases like access denial, internal server errors, invalid requests, and missing resources. It is used to programmatically access and manage Kendra index snapshots in an AWS environment.",
      "description_length": 451,
      "index": 1642,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeIndex",
      "library": "smaws-clients.kendra",
      "description": "This module handles the `DescribeIndex` operation for interacting with AWS Kendra, sending a request to retrieve detailed information about a specific index. It works with the `describe_index_request` type to specify the index identifier and returns a `describe_index_response` containing metadata like index status, document count, and configuration. Errors are returned as specific AWS Kendra exception types, such as `ResourceNotFoundException` or `ValidationException`, based on the outcome of the request.",
      "description_length": 510,
      "index": 1643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.BatchDeleteDocument",
      "library": "smaws-clients.kendra",
      "description": "Performs batch deletion of documents in a Kendra index by sending a structured request with document IDs and data source identifiers. It processes the response or returns specific error types such as `ResourceNotFoundException` or `AccessDeniedException`. This operation is used when removing multiple documents efficiently, such as during data cleanup or synchronization tasks.",
      "description_length": 378,
      "index": 1644,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeExperience",
      "library": "smaws-clients.kendra",
      "description": "This module handles the `DescribeExperience` operation for Kendra, sending a request to retrieve details about a specific experience resource. It works with Kendra's experience request and response types, including error variants like `ResourceNotFoundException` and `ValidationException`. A concrete use case is fetching configuration details of a Kendra experience to validate its setup or display its properties in a management interface.",
      "description_length": 441,
      "index": 1645,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.UpdateExperience",
      "library": "smaws-clients.kendra",
      "description": "Performs an update operation on a Kendra experience resource using a provided context and request configuration. It handles errors specific to Kendra, such as access denial, conflicts, and validation issues, returning a result with unit on success or an error variant. This function is used to modify settings of an existing Kendra experience, such as display name or configuration options.",
      "description_length": 390,
      "index": 1646,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteThesaurus",
      "library": "smaws-clients.kendra",
      "description": "Deletes a thesaurus from an Amazon Kendra index using the provided context and request parameters. Accepts a `delete_thesaurus_request` containing identifiers such as index ID and thesaurus ID. Returns a result indicating success or a specific error like `ResourceNotFoundException` or `AccessDeniedException`.",
      "description_length": 310,
      "index": 1647,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DescribeFaq",
      "library": "smaws-clients.kendra",
      "description": "Handles requests to describe a FAQ resource in Amazon Kendra, interacting with the service using a context and a structured request. It processes responses or specific error types like `ResourceNotFoundException` and `ThrottlingException`. Useful for retrieving metadata and configuration details of a specific FAQ within a Kendra index.",
      "description_length": 337,
      "index": 1648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateThesaurus",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of thesaurus resources in Amazon Kendra by sending structured requests and processing responses. It works with context and configuration data to define thesaurus properties, returning either a success response or specific error types like `ConflictException` or `ValidationException`. It is used when integrating custom thesaurus files to improve search relevance in Kendra index queries.",
      "description_length": 421,
      "index": 1649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.DeleteIndex",
      "library": "smaws-clients.kendra",
      "description": "Deletes a specified index in Amazon Kendra, handling errors such as resource not found, access denied, and throttling. Works with AWS context and Kendra-specific request/response types. Used to manage Kendra index lifecycle by removing unused or misconfigured indexes.",
      "description_length": 268,
      "index": 1650,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.ListEntityPersonas",
      "library": "smaws-clients.kendra",
      "description": "This module handles listing entity personas for Kendra, interacting with AWS Kendra's API to retrieve persona configurations. It works with context and request/response types specific to Kendra's entity personas, including error types like AccessDeniedException and ValidationException. A concrete use case is fetching a list of personas associated with a Kendra index to manage user access and roles.",
      "description_length": 401,
      "index": 1651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kendra.CreateExperience",
      "library": "smaws-clients.kendra",
      "description": "This module handles the creation of a Kendra experience by sending a request and returning a result with either a response or specific error types. It works with context and request/response structures defined in the Kendra client library. Use this module to programmatically set up new Kendra experiences while handling potential errors like conflicts, validation issues, or resource not found.",
      "description_length": 395,
      "index": 1652,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kendra",
      "library": "smaws-clients.kendra",
      "description": "This module provides operations for managing search index configurations, integrating external data sources, and customizing query behaviors in a document search system. It works with data structures like document metadata, access control policies, and data source configurations (e.g., S3, SharePoint, Salesforce) to handle tasks such as field mappings, filtering, and crawl scheduling. Specific use cases include automating document ingestion pipelines, tuning search relevance through thesaurus updates, and enforcing granular access permissions for search resources.",
      "description_length": 570,
      "index": 1653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.RemoveTagsFromStream",
      "library": "smaws-clients.kinesis",
      "description": "Removes tags from a Kinesis stream using the provided context and input parameters. Works with Kinesis stream identifiers and tag keys. Useful for managing metadata on streams, such as cleaning up deprecated tags or adjusting cost allocation labels.",
      "description_length": 249,
      "index": 1654,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DeregisterStreamConsumer",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the deregistration of a stream consumer in Kinesis, providing a `request` function that takes a context and input parameters. It works with error types like `InvalidArgumentException`, `LimitExceededException`, and `ResourceNotFoundException`, returning a result indicating success or failure. A concrete use case is removing a consumer from a Kinesis stream when it's no longer needed, such as during service shutdown or reconfiguration.",
      "description_length": 458,
      "index": 1655,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.StopStreamEncryption",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the request to stop stream encryption for a Kinesis stream, interacting with the provided context and input parameters. It works with the `stop_stream_encryption_input` type and returns a result indicating success or a specific AWS Kinesis error. A concrete use case is disabling encryption on a stream when compliance requirements change or when simplifying stream configuration.",
      "description_length": 400,
      "index": 1656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.MergeShards",
      "library": "smaws-clients.kinesis",
      "description": "This module handles merging two adjacent shards in a Kinesis data stream, using the `merge_shards` operation. It works with Kinesis stream configurations and shard identifiers to perform the merge, requiring a valid context and input parameters. Concrete use cases include reducing shard count during periods of low data throughput or reorganizing stream partitions for better load distribution.",
      "description_length": 395,
      "index": 1657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.AddTagsToStream",
      "library": "smaws-clients.kinesis",
      "description": "Adds tags to a Kinesis stream using the provided context and input parameters. Works with Kinesis stream identifiers and tag dictionaries. Useful for categorizing streams with metadata like environment or ownership.",
      "description_length": 215,
      "index": 1658,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListStreams",
      "library": "smaws-clients.kinesis",
      "description": "Makes an API request to list streams, handling input context and returning either a list of stream names or specific AWS Kinesis errors like expired tokens or invalid arguments. Works with context data, input parameters, and error types defined in the Kinesis client library. Used to retrieve available streams from AWS Kinesis in a structured, error-aware manner.",
      "description_length": 364,
      "index": 1659,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.UpdateShardCount",
      "library": "smaws-clients.kinesis",
      "description": "This module handles updating the shard count of a Kinesis stream, providing a `request` function that takes a context and input parameters to perform the update. It works with Kinesis stream configurations and handles specific AWS service errors such as access denial, invalid arguments, and resource not found. It is used when scaling the number of shards in a stream to adjust data throughput capacity.",
      "description_length": 404,
      "index": 1660,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListStreamConsumers",
      "library": "smaws-clients.kinesis",
      "description": "This module issues requests to list consumers of a Kinesis stream, handling pagination and specific AWS error responses. It operates on input and output structures defined for the Kinesis service, including error types like `ExpiredNextTokenException` and `ResourceNotFoundException`. A typical use case is retrieving and managing a paginated list of consumers for a given stream in an AWS environment.",
      "description_length": 402,
      "index": 1661,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.GetShardIterator",
      "library": "smaws-clients.kinesis",
      "description": "This module issues requests to retrieve a shard iterator from an Amazon Kinesis stream, working with AWS context and Kinesis-specific input/output types. It handles errors such as access denial, invalid arguments, throughput limits, and missing resources. Use this to start reading data records from a specific shard in a Kinesis stream.",
      "description_length": 337,
      "index": 1662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.RegisterStreamConsumer",
      "library": "smaws-clients.kinesis",
      "description": "Registers a consumer for a Kinesis data stream, handling input configuration and returning a result with either the consumer ARN or specific AWS service errors. Works with Kinesis stream identifiers and consumer configuration data. Used to enable real-time data processing applications to subscribe to and read from Kinesis streams.",
      "description_length": 332,
      "index": 1663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.SubscribeToShard",
      "library": "smaws-clients.kinesis",
      "description": "Handles subscribing to a Kinesis shard by sending a request with context and input parameters, returning a result that includes either the subscription output or specific Kinesis error types. Works with Kinesis shard identifiers, subscription input configurations, and error types like `AccessDeniedException` or `ResourceNotFoundException`. Used to establish real-time data subscriptions to Kinesis streams for processing record sequences from specific shards.",
      "description_length": 461,
      "index": 1664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DecreaseStreamRetentionPeriod",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the logic for decreasing the retention period of a Kinesis stream. It accepts a context and a decrease_stream_retention_period_input, returning a result indicating success or a specific AWS error. It is used when adjusting stream retention settings in response to operational requirements or cost management strategies.",
      "description_length": 339,
      "index": 1665,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.GetResourcePolicy",
      "library": "smaws-clients.kinesis",
      "description": "This module handles retrieving resource policies for Kinesis streams by sending requests to the AWS Kinesis service. It works with input and output structures specific to the `get_resource_policy` operation, including error types like `AccessDeniedException` and `ResourceNotFoundException`. A concrete use case is checking the IAM-based access policies applied to a specific Kinesis stream to enforce secure access controls.",
      "description_length": 425,
      "index": 1666,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.PutRecord",
      "library": "smaws-clients.kinesis",
      "description": "Sends a single data record to a Kinesis stream, handling errors related to permissions, stream configuration, and throughput limits. Works with raw binary data and structured exceptions tied to Kinesis-specific failure modes. Used to ingest individual events into a stream for real-time processing or storage.",
      "description_length": 309,
      "index": 1667,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.UpdateStreamMode",
      "library": "smaws-clients.kinesis",
      "description": "This module handles updating the stream mode of a Kinesis data stream, interacting with the provided context and input parameters. It works with stream configurations and error types specific to Kinesis, such as invalid arguments, resource not found, and limit exceeded exceptions. A concrete use case is switching a stream between on-demand and provisioned capacity modes in response to changing data throughput requirements.",
      "description_length": 426,
      "index": 1668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListTagsForStream",
      "library": "smaws-clients.kinesis",
      "description": "This module handles making a request to list tags for a Kinesis stream, accepting a context and input parameters. It returns a result containing either the list of tags or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used to retrieve metadata tags associated with a Kinesis stream for management or auditing purposes.",
      "description_length": 360,
      "index": 1669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeLimits",
      "library": "smaws-clients.kinesis",
      "description": "This module issues requests to describe AWS Kinesis service limits, handling input and output specific to the Kinesis API. It works with context and configuration data to query service limits, returning either the limit values or an error if the request fails. A concrete use case is checking Kinesis shard limits before provisioning resources to avoid exceeding account quotas.",
      "description_length": 378,
      "index": 1670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.ListShards",
      "library": "smaws-clients.kinesis",
      "description": "This module handles listing shards in a Kinesis stream by sending a request with context and input parameters, returning either a result containing shard information or specific error types. It operates on Kinesis stream data structures, specifically working with shard listings, next tokens, and associated metadata. A concrete use case is retrieving shard details for stream processing or monitoring, particularly when handling pagination or error conditions like expired tokens or invalid arguments.",
      "description_length": 502,
      "index": 1671,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.GetRecords",
      "library": "smaws-clients.kinesis",
      "description": "This module issues requests to retrieve records from a Kinesis stream using a provided shard iterator. It handles decoding the response into structured data and propagates any service-specific errors returned by the Kinesis API. Concrete use cases include consuming data from a Kinesis stream in real-time, such as processing log events or ingesting streaming telemetry data.",
      "description_length": 375,
      "index": 1672,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.SplitShard",
      "library": "smaws-clients.kinesis",
      "description": "Sends a request to split a shard in a Kinesis stream, using a provided context and input parameters. It operates on Kinesis stream names and shard identifiers, handling errors such as invalid arguments, resource not found, and limit exceeded. This function is used when scaling stream processing by increasing the number of shards for better throughput.",
      "description_length": 353,
      "index": 1673,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeStreamSummary",
      "library": "smaws-clients.kinesis",
      "description": "This module issues requests to retrieve summary information about an Amazon Kinesis stream, including its status, retention period, and shard count. It operates on input and output data structures defined in the Kinesis client library, handling errors such as access denial, invalid arguments, and resource not found. A typical use case involves checking the current state and configuration of a Kinesis stream before performing data ingestion or stream management operations.",
      "description_length": 476,
      "index": 1674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeStream",
      "library": "smaws-clients.kinesis",
      "description": "Handles requests to describe a Kinesis stream, returning metadata such as stream status, ARN, and shard count. Works with Kinesis stream names and AWS context for authentication and region configuration. Used to verify stream existence and configuration before performing operations like reading, writing, or scaling shards.",
      "description_length": 324,
      "index": 1675,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.StartStreamEncryption",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the encryption setup for a Kinesis stream by sending a request to enable server-side encryption using a specified KMS key. It works with the `start_stream_encryption_input` type, which includes the stream name and KMS key ID, and returns a result indicating success or a specific AWS error. It is used when configuring data-at-rest encryption for Kinesis streams in AWS.",
      "description_length": 390,
      "index": 1676,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DeleteResourcePolicy",
      "library": "smaws-clients.kinesis",
      "description": "Deletes a resource policy from a Kinesis stream. Works with Kinesis stream names and resource policies. Useful for removing permissions that allow cross-account access to a stream.",
      "description_length": 180,
      "index": 1677,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DeleteStream",
      "library": "smaws-clients.kinesis",
      "description": "Deletes a Kinesis stream by name, handling errors such as resource not found, access denied, or stream in use. Works with AWS Kinesis stream identifiers and context for authentication. Useful for cleaning up unused streams or managing stream lifecycle in data processing pipelines.",
      "description_length": 281,
      "index": 1678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.PutResourcePolicy",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the low-level request logic for applying resource policies to Kinesis streams, including error handling and response parsing. It works with AWS Kinesis resource policy input data and context objects to make authenticated API calls. A concrete use case is setting up fine-grained access controls on a Kinesis stream by sending a properly formatted policy document.",
      "description_length": 383,
      "index": 1679,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.PutRecords",
      "library": "smaws-clients.kinesis",
      "description": "Sends a batch of data records to a Kinesis stream using the provided context and input configuration. It handles errors related to permissions, stream limits, and KMS encryption issues. This module is used to efficiently ingest multiple records into Kinesis for real-time data processing workflows.",
      "description_length": 298,
      "index": 1680,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.CreateStream",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the creation of a Kinesis stream by sending a request with specified input parameters and returning a result indicating success or an error. It works with data types such as `Smaws_Lib.Context.t`, `create_stream_input`, and various error types like `InvalidArgumentException`, `LimitExceededException`, and `ResourceInUseException`. A concrete use case is setting up a new Kinesis stream with a defined shard count and stream name in an AWS environment.",
      "description_length": 473,
      "index": 1681,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Smaws_Client_Kinesis.DescribeStreamConsumer",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the `DescribeStreamConsumer` API request for Kinesis, accepting a context and input parameters to retrieve details about a stream consumer. It works with Kinesis-specific input and output types, including error types like `InvalidArgumentException`, `LimitExceededException`, and `ResourceNotFoundException`. A concrete use case is querying AWS Kinesis to check the status or configuration of a registered consumer for a specific data stream.",
      "description_length": 462,
      "index": 1682,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.DisableEnhancedMonitoring",
      "library": "smaws-clients.kinesis",
      "description": "This module handles the request to disable enhanced monitoring for a Kinesis stream. It takes a context and an input configuration, returning a result with either the monitoring output or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used when managing stream monitoring settings in AWS Kinesis.",
      "description_length": 337,
      "index": 1683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.EnableEnhancedMonitoring",
      "library": "smaws-clients.kinesis",
      "description": "This module handles enabling enhanced monitoring for Kinesis streams by sending a request to configure monitoring settings. It works with Kinesis stream input configurations and returns either a confirmation of monitoring activation or specific error types like `AccessDeniedException` or `ResourceNotFoundException`. It is used to programmatically enhance monitoring of Kinesis stream shards in AWS environments.",
      "description_length": 413,
      "index": 1684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis.IncreaseStreamRetentionPeriod",
      "library": "smaws-clients.kinesis",
      "description": "This module handles increasing the retention period of a Kinesis stream. It sends a request to modify the stream's retention settings, accepting a context and input parameters specifying the stream and new retention period. It returns a result indicating success or a specific AWS error type.",
      "description_length": 292,
      "index": 1685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smaws_Client_Kinesis",
      "library": "smaws-clients.kinesis",
      "description": "This module provides stream configuration, shard management, and event handling operations for AWS Kinesis, working with streams, shards, consumers, and encryption settings. It supports administrative tasks like adjusting shard counts, managing retention policies, and real-time data processing through consumer subscriptions, while handling AWS-specific errors for robust stream encryption, tagging, and throughput management.",
      "description_length": 427,
      "index": 1686,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1688,
    "meaningful_modules": 1687,
    "filtered_empty_modules": 1,
    "retention_rate": 0.9994075829383886
  },
  "statistics": {
    "max_description_length": 795,
    "min_description_length": 168,
    "avg_description_length": 383.69413159454655,
    "embedding_file_size_mb": 24.44264316558838
  }
}