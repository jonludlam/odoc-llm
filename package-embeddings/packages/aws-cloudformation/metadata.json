{
  "package": "aws-cloudformation",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 315,
  "creation_timestamp": "2025-08-18T19:16:40.957731",
  "modules": [
    {
      "module_path": "Aws_cloudformation.Types.AccountList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of AWS account strings in the context of CloudFormation operations. It provides functions to convert account lists to and from XML, JSON, and query formats, ensuring proper serialization and deserialization. Use this module when working with CloudFormation stack sets or organizations that require specifying multiple AWS account IDs.",
      "description_length": 360,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChangeDetails",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, converting, and serializing lists of resource change details in AWS CloudFormation. It works with XML nodes, JSON values, and query parameters, transforming them into structured resource change data. Use this module when processing CloudFormation stack change sets to inspect or manipulate resource-level modifications.",
      "description_length": 348,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeregisterTypeOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of a type deregistration operation in AWS CloudFormation. It defines a unit type and functions to create, parse, and convert the output to query parameters or JSON format. It is used when confirming the successful deregistration of a resource type.",
      "description_length": 279,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DifferenceType",
      "library": "aws-cloudformation",
      "description": "This module defines and manipulates three distinct difference types (`ADD`, `REMOVE`, `NOT_EQUAL`) for tracking changes in AWS CloudFormation resources. It provides conversions to and from strings, JSON, and XML, along with helper functions for serialization and parsing. Concrete use cases include comparing resource configurations during stack updates and generating human-readable change descriptions.",
      "description_length": 404,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeAccountLimitsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output response from describing AWS CloudFormation account limits. It provides constructors, parsers, and serializers for the `t` type, which contains a list of account limits and an optional pagination token. Use this module to process and manipulate responses when retrieving account limits from AWS CloudFormation.",
      "description_length": 341,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegionList",
      "library": "aws-cloudformation",
      "description": "This module handles a list of AWS region strings, providing functions to convert between XML, JSON, and query string formats. It includes parsing from XML nodes, serializing to JSON or query parameters, and extracting region lists from JSON values. It is used when working with AWS CloudFormation operations that require specifying multiple regions, such as cross-region stack set deployments.",
      "description_length": 393,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftStatusFilters",
      "library": "aws-cloudformation",
      "description": "Handles filtering of stack resource drift statuses in AWS CloudFormation by providing functions to parse, convert, and manipulate lists of drift status values. It supports operations like converting drift status lists to query parameters or JSON format, and parsing XML input into drift status lists. This module is used when querying or analyzing resource drift in CloudFormation stacks to filter results based on specific drift statuses.",
      "description_length": 439,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetType",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` representing the possible types of change sets in AWS CloudFormation, including `CREATE`, `UPDATE`, and `IMPORT`. It provides bidirectional conversions between strings and the variant type, along with standard serialization and deserialization functions for JSON, XML, and query parameters. This module is used when handling change set operations in AWS CloudFormation APIs, such as creating or inspecting change sets during stack updates or imports.",
      "description_length": 501,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountLimit",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing account limits in AWS CloudFormation, specifically with optional name and value fields. It provides functions to construct, parse, and serialize these structures to and from XML, JSON, and query formats. Use this module when retrieving or configuring account-specific resource limits in CloudFormation stacks.",
      "description_length": 363,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierProperties",
      "library": "aws-cloudformation",
      "description": "This module represents resource identifier properties as a hash table mapping string keys to string values. It provides functions to convert these properties to AWS query format, JSON, and back from JSON. Use this module when working with CloudFormation resource identifiers that need to be serialized or deserialized for API requests or responses.",
      "description_length": 348,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeVersionSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of a CloudFormation type version, including fields like type name, version ID, ARN, and creation time. It provides functions to construct, parse, and serialize these summaries to and from XML, JSON, and query formats. Use this module when managing or querying CloudFormation registry type versions via the AWS SDK.",
      "description_length": 374,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceToImport",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying resources to import into an AWS CloudFormation stack, including their type, logical ID, and identifier properties. It provides functions to construct, serialize, and parse these resource definitions in formats like JSON and query parameters. It is used when importing existing resources into CloudFormation stacks, ensuring correct mapping between physical and logical identifiers.",
      "description_length": 433,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftDetectionStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type representing the status of stack drift detection in AWS CloudFormation, with values for in-progress, failed, and completed states. It provides bidirectional conversion between string representations and the enumerated type, along with serialization to and from JSON and query formats. The module is used to interpret and transmit drift detection status in CloudFormation stack management workflows.",
      "description_length": 438,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOperationInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a CloudFormation stack set operation. It includes fields for the stack set name and operation ID, both as strings, and provides functions to construct, parse, and convert the structure to query or JSON formats. It is used when retrieving details about a specific stack set operation in AWS CloudFormation.",
      "description_length": 380,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOperationOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing a stack set operation in AWS CloudFormation. It provides functions to create, parse, and serialize the operation data, which includes an optional `StackSetOperation` record. Use this when retrieving details about a specific stack set operation, such as its status or configuration.",
      "description_length": 326,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationAction",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing actions that can be performed on AWS CloudFormation stack sets, including creation, update, deletion, and drift detection. It provides conversions to and from strings, JSON, and query formats, along with parsing from XML nodes. This module is used to specify and handle stack set operations in API requests and responses.",
      "description_length": 381,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListImportsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing imports in AWS CloudFormation, containing the export name and an optional next token for pagination. It provides functions to construct, parse, and serialize the input for API requests, supporting both XML and JSON formats. Use this module when querying CloudFormation for stacks that import a specific exported resource name.",
      "description_length": 378,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreatedButModifiedException",
      "library": "aws-cloudformation",
      "description": "This module defines a minimal exception type used to signal that a resource was created but subsequently modified. It includes operations to construct the exception, parse it from various formats, and convert it to JSON or query representations. It is typically used in error handling workflows when detecting unexpected changes during infrastructure deployment.",
      "description_length": 362,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperation",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing CloudFormation stack set operations, including fields like operation ID, stack set ID, action type, status, preferences, and timestamps. It provides functions to construct, parse, and serialize these operation records for use in managing multi-account AWS deployments. The module supports concrete workflows like tracking cross-account stack set updates, drift detection, and deployment preferences across organizations.",
      "description_length": 470,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeType",
      "library": "aws-cloudformation",
      "description": "This module defines a single type `t` representing the type of change in an AWS CloudFormation stack, specifically distinguishing resource changes. It includes functions to convert between string representations and the enumerated type, as well as serialization and deserialization routines for JSON, XML, and query string formats. This module is used when processing CloudFormation change sets to identify and handle modifications to infrastructure resources.",
      "description_length": 460,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, querying, and serializing lists of stack set operation summaries. It works with XML nodes, JSON values, and AWS query parameters to convert between these formats and the internal `StackSetOperationSummary.t` list structure. It is used when managing CloudFormation stack set operations, such as retrieving or sending batches of operation data to AWS services.",
      "description_length": 387,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing AWS CloudFormation stack sets, providing functions to create, parse, and serialize the data. It works with a list of stack set summaries and an optional next token for pagination. Use this module when retrieving and processing stack set information from AWS CloudFormation, particularly for handling paginated responses.",
      "description_length": 373,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterDeclarations",
      "library": "aws-cloudformation",
      "description": "This module handles parameter declarations for AWS CloudFormation templates. It provides functions to parse, convert to query format, serialize to JSON, and deserialize from JSON a list of parameter declarations. Use it when constructing or processing CloudFormation templates programmatically.",
      "description_length": 294,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe an AWS CloudFormation type, including optional fields like type name, ARN, version ID, and registry type. It provides functions to construct, serialize, and parse these inputs in various formats such as JSON and query strings. It is used when querying AWS CloudFormation for details about registered types, such as resource providers or modules.",
      "description_length": 420,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.HandlerErrorCode",
      "library": "aws-cloudformation",
      "description": "This module defines a set of error codes used to represent specific failure conditions in AWS CloudFormation handlers. It includes operations for converting between string representations and enumerated types, as well as parsing and serializing values to query parameters or JSON. These error codes are used to communicate precise error states during resource provisioning and updates, such as handling invalid requests, access denials, or service limits being exceeded.",
      "description_length": 470,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StaleRequestException",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` representing a stale request exception in the context of AWS CloudFormation operations. It includes functions to construct, parse, and convert the exception to various formats such as JSON and query parameters. It is used to handle and propagate errors related to outdated or invalid requests in CloudFormation workflows.",
      "description_length": 352,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of an AWS CloudFormation change set, including fields like stack ID, change set ID, execution status, and creation time. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when managing or inspecting CloudFormation change sets, particularly for retrieving metadata and status information during deployment workflows.",
      "description_length": 452,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeSummaries",
      "library": "aws-cloudformation",
      "description": "Handles parsing and serializing lists of type summaries in AWS CloudFormation. Works with XML nodes, JSON values, and query parameters. Useful for interacting with CloudFormation APIs that list resource types.",
      "description_length": 209,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistryType",
      "library": "aws-cloudformation",
      "description": "This module defines a single enumerated type representing the kinds of registries supported, with operations to convert between string representations and the enumerated values. It provides functions for parsing, serializing to JSON or query parameters, and converting to and from strings. This module is used when interacting with AWS CloudFormation registry types, such as when handling resource registration or type definitions.",
      "description_length": 431,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountGateResult",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing the result of an account gate operation in AWS CloudFormation, including optional status and status reason fields. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. This module is used to handle responses from account gate validation steps during CloudFormation stack operations.",
      "description_length": 388,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeregisterTypeInput",
      "library": "aws-cloudformation",
      "description": "This module defines a record type for input parameters used to deregister a CloudFormation type, including optional fields like ARN, type, type name, and version ID. It provides functions to construct, parse, and serialize these inputs into query or JSON formats. Concrete use cases include preparing deregistration requests for AWS CloudFormation custom types and handling versioned resource type removals.",
      "description_length": 407,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistrationTokenList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string-based registration tokens in AWS CloudFormation. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. Use this module when managing registration token responses or requests in CloudFormation integrations.",
      "description_length": 303,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SignalResourceInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for signaling the status of a resource in a cloud formation stack, including fields for the stack name, logical resource ID, unique ID, and status. It provides functions to construct the structure, parse it from XML, convert it to query parameters or JSON, and create it from JSON input. It is used to communicate resource signal states during stack operations, such as indicating success or failure of a custom resource.",
      "description_length": 458,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeRegistrationsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing CloudFormation type registrations, providing structured access to registration tokens and pagination tokens. It includes functions to construct, parse, and serialize the output data for use in API responses or further processing. Concrete use cases include retrieving registered CloudFormation resource types and handling paginated results when listing registrations.",
      "description_length": 409,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeVersionsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles output data for listing CloudFormation type versions, including summaries and pagination tokens. It provides constructors, JSON and XML parsers, and query builders for working with type version responses. Use it to process and serialize results from CloudFormation's ListTypeVersions API calls.",
      "description_length": 314,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackTriggers",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, formatting, and transformation of rollback trigger configurations for AWS CloudFormation. It works with lists of rollback trigger objects, supporting operations to convert between XML, JSON, and query parameter representations. It is used when managing stack rollback behavior in response to monitored events.",
      "description_length": 338,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceDetailedStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing detailed status states for a Stack Instance in AWS CloudFormation, including transitions like `PENDING`, `RUNNING`, `SUCCEEDED`, and `FAILED`. It provides direct conversions between string representations and the enumerated type, along with serialization to and from JSON and query formats. These functions support handling Stack Instance status responses in API interactions, particularly when parsing or constructing AWS CloudFormation service requests and responses.",
      "description_length": 526,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackEventsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output from describing CloudFormation stack events, providing structured access to a list of stack events and an optional pagination token. It includes functions to construct, parse, and serialize the output for use in API responses or further processing. Concrete use cases include retrieving and formatting event logs for a specific CloudFormation stack, especially when handling paginated results.",
      "description_length": 424,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of a CloudFormation stack instance, including fields like stack ID, status, region, and drift information. It provides constructors, serialization, and parsing functions to work with stack instance summaries in JSON, XML, and query formats. It is used to retrieve and manage per-instance status and metadata when working with CloudFormation stack sets across multiple accounts and regions.",
      "description_length": 449,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegisterTypeOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a CloudFormation resource registration operation. It includes functions to construct, serialize, and parse the output, which contains an optional registration token. Use this module when managing custom resource registration responses in AWS CloudFormation workflows.",
      "description_length": 331,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifiers",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string-based resource identifiers for AWS CloudFormation operations. It provides functions to convert these lists to and from XML, JSON, and query parameters, enabling seamless integration with AWS APIs. Use this module when managing resource dependencies or querying CloudFormation stacks with specific resource filters.",
      "description_length": 350,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Changes",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of CloudFormation change sets represented as lists of `Change.t`. It provides functions to convert between XML, JSON, and query string formats, enabling interaction with AWS CloudFormation APIs. Use this module when processing CloudFormation stack changes retrieved from AWS API responses or preparing changes for deployment.",
      "description_length": 398,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a stack creation operation in AWS CloudFormation, containing an optional stack ID. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when handling responses from CloudFormation stack creation requests, particularly to extract and work with the resulting stack ID.",
      "description_length": 404,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeploymentTargets",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying deployment targets in AWS CloudFormation, including accounts and organizational unit IDs. It provides functions to create, parse, and convert deployment target data to and from XML, JSON, and query formats. Use this module when configuring deployment targets for CloudFormation stack sets across multiple AWS accounts or organizational units.",
      "description_length": 394,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackResourcesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing resources in a CloudFormation stack, including the stack name and an optional token for pagination. It provides functions to construct, serialize, and parse this input from JSON or XML formats. Use this module when interacting with AWS CloudFormation to retrieve resource details for a specific stack, especially when handling paginated responses.",
      "description_length": 399,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterConstraints",
      "library": "aws-cloudformation",
      "description": "This module defines constraints for CloudFormation parameters, specifically restricting allowed values. It provides functions to construct, serialize, and deserialize these constraints using JSON and XML formats. Use this module when defining or validating CloudFormation template parameters with specific value restrictions.",
      "description_length": 325,
      "index": 45,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDrifts",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, querying, and serializing lists of stack resource drifts in AWS CloudFormation. It works with XML nodes, JSON values, and query parameters, converting between them and a list of `StackResourceDrift.t` values. It is used when retrieving and processing resource drift information from CloudFormation stacks, particularly in detecting configuration deviations.",
      "description_length": 386,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResource",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing an AWS CloudFormation stack resource, including metadata like resource type, status, and timestamps. It provides constructors, parsers, and serializers for working with stack resources in XML, JSON, and query formats. Concrete use cases include retrieving resource status details, tracking drift information, and converting resource data for API requests or logging.",
      "description_length": 416,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for summarizing AWS CloudFormation resource types, including their names, versions, ARNs, and metadata. It provides functions to construct, parse, and serialize these summaries to and from XML, JSON, and query formats. Use this module when retrieving or processing type information from the CloudFormation registry, such as displaying type details or managing resource versioning.",
      "description_length": 417,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PermissionModels",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` with two constructors, `SERVICE_MANAGED` and `SELF_MANAGED`, representing permission models in a cloud infrastructure context. It includes functions to convert between string representations and the `t` type, as well as serialization and deserialization routines for JSON, XML, and query parameters. This module is used to handle permission model values when interacting with cloud formation APIs, enabling precise configuration and validation of resource permissions.",
      "description_length": 519,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateSummaryInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to retrieve a CloudFormation template summary. It includes fields for specifying the template body, URL, stack name, or stack set name, supporting partial updates or lookups. Operations include creating instances, parsing XML input, and converting to query or JSON formats for API requests.",
      "description_length": 353,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PropertyDifferences",
      "library": "aws-cloudformation",
      "description": "This module handles lists of property difference records in AWS CloudFormation. It provides functions to parse, convert to query format, and serialize to and from JSON. Use it when processing stack drift detection results or comparing resource properties in CloudFormation deployments.",
      "description_length": 285,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeprecatedStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type with two values, `LIVE` and `DEPRECATED`, representing the status of a resource. It includes functions to convert between strings and the type, serialize to JSON or query parameters, and parse from XML or JSON. It is used to indicate whether a CloudFormation resource or type version is active or deprecated.",
      "description_length": 355,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegisterTypeInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for registering a CloudFormation resource type. It includes functions to construct, parse, and serialize the input data, which consists of type metadata, schema handler package, logging configuration, and execution role ARN. It is used when submitting a new resource type registration request to AWS CloudFormation.",
      "description_length": 381,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the various states a CloudFormation stack can be in, such as `CREATE_COMPLETE`, `UPDATE_IN_PROGRESS`, and `DELETE_FAILED`. It includes functions to convert between string representations and the variant type, as well as serialization and deserialization routines for JSON and XML. These capabilities are essential for interpreting and persisting CloudFormation stack status values in API interactions and event handling.",
      "description_length": 480,
      "index": 54,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistrationStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the status of a registration task with three possible states: `COMPLETE`, `IN_PROGRESS`, and `FAILED`. It provides functions to convert between string representations and the variant type, along with serialization to and from JSON and query formats. It is used to interpret and emit registration status values when interacting with AWS CloudFormation APIs, particularly during resource registration workflows.",
      "description_length": 469,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecuteChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for executing a CloudFormation change set, including the change set name, optional stack name, and optional client request token. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include preparing parameters to apply configuration changes to a CloudFormation stack or handling input/output during automated deployment workflows.",
      "description_length": 430,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackDriftDetectionStatusOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a stack drift detection status request in AWS CloudFormation. It includes fields for stack identifiers, drift status, detection status, timestamps, and metadata, with operations to construct, parse, and serialize the data. Use cases include monitoring stack consistency and retrieving drift detection results in programmatic workflows.",
      "description_length": 399,
      "index": 57,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the status of a stack set operation in AWS CloudFormation, with values like `SUCCEEDED`, `FAILED`, and `RUNNING`. It provides bidirectional conversions between these status values and strings, JSON, and XML, enabling seamless serialization and deserialization. It is used to interpret and emit operation statuses in API requests and responses, particularly when handling stack set operations across multiple accounts and regions.",
      "description_length": 489,
      "index": 58,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationPreferences",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying preferences during AWS CloudFormation stack set operations. It includes fields for controlling concurrency, failure tolerance, and region order, enabling precise management of deployment behavior across multiple regions. Operations include creating, serializing, and parsing these preferences for use in API requests or responses.",
      "description_length": 382,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceComprehensiveStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the comprehensive status of a CloudFormation stack instance, including an optional detailed status field. It provides functions to construct, parse, and convert the status to various formats like JSON and query parameters. It is used to interpret and manage stack instance status information when interacting with AWS CloudFormation services.",
      "description_length": 392,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a stack instance is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. It is used in error handling scenarios where the absence of a stack instance must be communicated across AWS CloudFormation interfaces.",
      "description_length": 363,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateTerminationProtectionOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output response for updating termination protection on a CloudFormation stack. It includes operations to construct, serialize, and parse the response containing the optional stack ID. It is used to interact with AWS CloudFormation's API for managing stack termination settings.",
      "description_length": 301,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EvaluationType",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration with two values, `Static` and `Dynamic`, representing evaluation types in AWS CloudFormation. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON, XML, and query parameters. It is used to specify how resource properties are evaluated during stack operations.",
      "description_length": 361,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the drift status of a cloud formation stack, with values like DRIFTED and IN_SYNC. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON and query formats. It is used to interpret and transmit stack drift status information in AWS CloudFormation workflows.",
      "description_length": 374,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Exports",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of CloudFormation export lists. It provides functions to convert between XML, JSON, and query formats and an internal list structure of `Export.t` values. It is used when managing stack exports, enabling programmatic access and transformation of exported resource data.",
      "description_length": 327,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilters",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, formatting, and conversion of stack instance filters for AWS CloudFormation. It works with lists of `StackInstanceFilter.t` records, supporting operations to convert them to AWS query format, JSON, and back from JSON or XML. It is used when managing stack instance filtering in CloudFormation operations like listing or describing stack instances.",
      "description_length": 376,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a stack set description operation in AWS CloudFormation. It includes functions to create, parse, and convert the structure to and from XML, JSON, and query formats. It is used to retrieve and process detailed information about a specific stack set.",
      "description_length": 312,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Replacement",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` with three variants (`True`, `False`, `Conditional`) and provides functions to convert between strings and this type. It includes operations for serializing to and deserializing from JSON, XML, and query parameters. Use cases include handling AWS CloudFormation replacement policies during resource updates, where precise control over resource replacement is required.",
      "description_length": 399,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceDriftsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing stack resource drifts in AWS CloudFormation, providing functions to create, parse, and serialize the response data. It works with `StackResourceDrifts.t` and an optional `next_token` for pagination. Use this module to process and manipulate drift detection results returned from the `DescribeStackResourceDrifts` API call.",
      "description_length": 367,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourcesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing AWS CloudFormation stack resources. It provides functions to create, parse, and serialize stack resource data, specifically working with `StackResources.t` structures. Use it to process responses from CloudFormation's `DescribeStackResources` API call, converting between XML, JSON, and query formats.",
      "description_length": 346,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.PhysicalResourceIdContextKeyValuePair",
      "library": "aws-cloudformation",
      "description": "This module defines a key-value pair structure for handling physical resource ID context in AWS CloudFormation. It provides functions to create, parse, and convert these pairs to and from XML, JSON, and query formats. It is used when managing resource provisioning context data that must be passed between CloudFormation and resource providers.",
      "description_length": 344,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstance",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a CloudFormation stack instance with fields for identifiers, status, parameters, and metadata. It provides functions to construct, parse, and convert stack instances to and from JSON, query format, and XML. Use this module when managing stack instances across multiple accounts and regions in AWS CloudFormation.",
      "description_length": 362,
      "index": 72,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling CloudFormation template output, including the template body and available stages. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. Use this when retrieving and processing CloudFormation templates in API responses.",
      "description_length": 319,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing the possible statuses of a change set in AWS CloudFormation, such as `CREATE_PENDING`, `CREATE_IN_PROGRESS`, and `FAILED`. It provides functions to convert between string representations and the enumerated values, along with serialization and deserialization routines for JSON, XML, and query parameters. These operations are used when interacting with AWS CloudFormation APIs to manage and track the lifecycle of infrastructure change sets.",
      "description_length": 498,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackEvent",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing events generated by AWS CloudFormation stacks, capturing details like resource status changes and timestamps. It provides functions to construct, serialize, and deserialize these events using JSON, query parameters, or XML input. Use this module to process CloudFormation event streams for monitoring or auditing specific stack operations.",
      "description_length": 389,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling AWS CloudFormation change set creation responses. It includes functions to construct, parse, and serialize the structure, which contains optional identifiers for the change set and associated stack. Use this module when managing infrastructure changes through CloudFormation APIs, particularly for capturing and processing the output of change set creation operations.",
      "description_length": 418,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationIdAlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton type `t` representing an exception raised when a duplicate operation ID is encountered in cloud formation operations. It provides functions to construct, parse, and convert the exception to query parameters, JSON, or other structured formats. Use this module to handle or propagate errors related to operation ID uniqueness in AWS CloudFormation workflows.",
      "description_length": 388,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and manipulation of AWS CloudFormation change set summaries. It works with lists of `ChangeSetSummary.t` records, supporting operations like XML parsing, JSON and query parameter conversion, and list construction. Use it when processing CloudFormation API responses or building requests involving change set summaries.",
      "description_length": 362,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackEventsInput",
      "library": "aws-cloudformation",
      "description": "This module defines input parameters for describing CloudFormation stack events, including optional stack name and pagination token. It provides functions to construct, serialize, and parse these inputs in various formats like JSON and query strings. Use this to configure requests when retrieving event logs for a specific CloudFormation stack.",
      "description_length": 345,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStacksInput",
      "library": "aws-cloudformation",
      "description": "This module defines input parameters for describing AWS CloudFormation stacks, including optional stack name and pagination token. It provides functions to construct, serialize, and parse these inputs in various formats like JSON and query strings. Concrete use cases include configuring API requests to retrieve stack details from AWS CloudFormation.",
      "description_length": 351,
      "index": 80,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for retrieving an AWS CloudFormation template, supporting optional fields like stack name, change set name, and template stage. It provides functions to construct, serialize, and parse the input for use in API requests. Concrete use cases include fetching templates during stack updates or inspecting templates from existing change sets.",
      "description_length": 377,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftDetectionDetails",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for tracking drift detection details of a CloudFormation stack set, including status, timestamps, and instance counts. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Concrete use cases include monitoring stack set drift status and reporting instance synchronization metrics in AWS CloudFormation automation tools.",
      "description_length": 416,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Imports",
      "library": "aws-cloudformation",
      "description": "This module handles list-based data structures for import operations, providing functions to parse, convert, and manipulate string lists. It includes operations for transforming data between XML, JSON, and query formats, specifically tailored for handling import-related input and output. Use cases include processing CloudFormation import resources from API responses and preparing them for further serialization or requests.",
      "description_length": 426,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AutoDeployment",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for configuring automatic deployment settings in cloud formation stacks, including whether auto-deployment is enabled and whether stacks should be retained when an account is removed. It provides functions to construct, serialize, and parse these settings to and from JSON, query parameters, and XML. Use this module when managing deployment policies for AWS CloudFormation stack sets across multiple accounts.",
      "description_length": 447,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackTrigger",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying rollback triggers in AWS CloudFormation, consisting of an ARN and a trigger type. It provides functions to construct, serialize, and deserialize these triggers for use in API requests and responses. Concrete use cases include configuring automatic rollback behavior for stack updates based on CloudWatch alarms.",
      "description_length": 363,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for deleting CloudFormation stack instances across specified accounts and regions. It includes functions to construct, parse, and serialize the input data, supporting precise control over stack retention and deployment targets. Concrete use cases include managing multi-account AWS resource teardown and orchestrating cross-region stack deletions with custom operation preferences.",
      "description_length": 436,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackConfiguration",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for configuring rollback behavior in deployment scenarios. It includes operations to create, parse, and serialize rollback configurations, supporting integration with XML, JSON, and query string formats. It is used to specify triggers and monitoring time during system rollbacks.",
      "description_length": 316,
      "index": 87,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidStateTransitionException",
      "library": "aws-cloudformation",
      "description": "This module handles the `InvalidStateTransitionException` error type, providing functions to construct, parse, and serialize the exception for use in API requests and responses. It works with unit type values, representing an error condition without additional data. Concrete use cases include signaling invalid state transitions in CloudFormation operations and integrating with AWS SDK error handling.",
      "description_length": 403,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Parameter",
      "library": "aws-cloudformation",
      "description": "This module defines a parameter type with optional key, value, previous value flag, and resolved value. It provides functions to construct, parse, and convert parameters to query format or JSON. It is used to manage CloudFormation stack parameters during deployment or updates.",
      "description_length": 277,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton type `t` representing an error condition where a change set is not found. It provides functions to construct, parse, and convert the error to query parameters or JSON format. Use this module when handling AWS CloudFormation API responses that indicate missing change sets, enabling consistent error handling and serialization.",
      "description_length": 358,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StopStackSetOperationInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for stopping a stack set operation in AWS CloudFormation, consisting of `stack_set_name` and `operation_id`. It provides functions to construct, parse, and serialize the structure to query or JSON formats, enabling direct interaction with AWS CloudFormation's stop operation API. Use this module when programmatically halting ongoing stack set operations in AWS infrastructure management workflows.",
      "description_length": 435,
      "index": 91,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing operations on a CloudFormation stack set. It includes fields for the stack set name, a token for pagination, and a maximum results limit. The module provides functions to construct, parse, and serialize the input for use in API requests, specifically when querying or processing JSON data in AWS CloudFormation workflows.",
      "description_length": 373,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourcesToSkip",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string values representing resources to skip in AWS CloudFormation operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. Use this module when configuring CloudFormation stack updates or deletions to specify resources that should not be modified.",
      "description_length": 350,
      "index": 93,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.EstimateTemplateCostOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of estimating template costs in AWS CloudFormation by providing a data structure with an optional URL field. It includes functions to construct, parse, and serialize the output in various formats such as JSON and query parameters. It is used to retrieve and process cost estimation results from CloudFormation templates.",
      "description_length": 351,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for creating a CloudFormation change set. It includes functions to construct, parse, and serialize the input data, which contains parameters like stack name, template body, capabilities, and tags. Use this module when configuring and submitting change set requests to AWS CloudFormation.",
      "description_length": 342,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OrganizationalUnitIdList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of organizational unit IDs in AWS CloudFormation operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. It is used when managing stack sets across multiple organizational units in AWS.",
      "description_length": 285,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for configuring a stack deletion request in a cloudformation service. It includes fields for specifying the stack name, resources to retain, role ARN, and a client request token, along with functions to construct, parse, and serialize the input for API calls. It is used when initiating a stack deletion with customizable options like retaining specific resources or assuming a role.",
      "description_length": 438,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing CloudFormation stack instances, including parameters like stack set name, filters, account, and region. It provides functions to construct, parse, and serialize the input for API requests. Use this module when querying AWS CloudFormation to retrieve stack instance details for a specific stack set across accounts or regions.",
      "description_length": 377,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateParameters",
      "library": "aws-cloudformation",
      "description": "This module handles template parameters for AWS CloudFormation by providing functions to parse, convert, and manipulate parameter lists. It works with XML nodes, JSON values, and query strings to facilitate interactions with CloudFormation templates. Use cases include preparing parameters for API requests, parsing responses, and converting between formats for deployment or inspection tasks.",
      "description_length": 393,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TokenAlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton exception type used to represent token conflicts in API operations. It provides functions to create, parse, and serialize the exception for use in error handling and API communication. The type works with standard OCaml values and integrates with AWS query and JSON formats for service interaction.",
      "description_length": 330,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing stack instances in AWS CloudFormation, providing structured access to summaries and pagination tokens. It includes functions to construct, parse, and convert the output to various formats like JSON and query parameters. Use this module when retrieving and processing stack instance data from CloudFormation API responses.",
      "description_length": 363,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type exception used to represent an \"AlreadyExists\" error in the context of cloud formation operations. It includes functions to construct the exception, parse it from various input forms, and convert it to query parameters or JSON format. It is typically used to handle duplicate resource creation attempts in cloud infrastructure management workflows.",
      "description_length": 380,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackDriftDetectionStatusInput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` containing a `stack_drift_detection_id` string and provides functions to construct, parse, and serialize this type to and from XML, JSON, and query formats. It is used specifically for handling input data when querying the status of a stack drift detection operation in AWS CloudFormation. The module enables direct interaction with AWS API requests by converting between wire formats and OCaml values.",
      "description_length": 445,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftInformation",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the drift status of a CloudFormation stack resource, including the drift status and an optional timestamp of the last check. It provides functions to construct, parse, and serialize this data for use in querying or analyzing resource drift in CloudFormation stacks. Concrete use cases include detecting configuration drift in deployed resources and reporting drift status to monitoring or compliance systems.",
      "description_length": 458,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationResultsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing stack set operation results in AWS CloudFormation. It provides functions to create, parse, and serialize the output, which includes summaries of operation results and an optional token for pagination. It works directly with XML, JSON, and query string formats for integration with AWS APIs and client-side processing.",
      "description_length": 370,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the drift status of a CloudFormation stack set, with values for drifted, in-sync, and not-checked states. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. This module is used to handle and interpret stack set drift status values when interacting with AWS CloudFormation APIs or processing drift detection results.",
      "description_length": 465,
      "index": 106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetStackPolicyOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing the output of a stack policy retrieval operation, containing an optional string field for the policy body. It provides functions to construct, parse, and serialize the data structure to and from XML, JSON, and query formats. This module is used specifically to handle AWS CloudFormation stack policy responses in API interactions.",
      "description_length": 382,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountGateStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing the status of an account gate in a deployment pipeline, with variants `SUCCEEDED`, `FAILED`, and `SKIPPED`. It includes functions to convert between string representations and the enumerated values, along with serialization and deserialization routines for JSON, XML, and query parameters. The module is used to handle status reporting and decision-making in deployment workflows based on gate outcomes.",
      "description_length": 460,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ContinueUpdateRollbackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for continuing an update rollback in a cloud formation service. It includes fields for the stack name, optional role ARN, resources to skip, and a client request token, with operations to create, parse, and serialize the input for API requests. It is used to handle rollback continuation parameters in CloudFormation updates, particularly during error recovery scenarios.",
      "description_length": 411,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.NameAlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton exception type used to signal that a requested name is already in use. It provides functions to create, parse, and serialize the exception in various formats, including JSON and AWS query format. It is typically used during resource creation workflows to handle naming conflicts in cloud infrastructure deployments.",
      "description_length": 347,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EstimateTemplateCostInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for estimating the cost of an AWS CloudFormation template. It includes functions to construct, parse, and serialize the input containing optional template body or URL and parameters. It is used to prepare and process cost estimation requests for CloudFormation stacks using either inline templates or remote URLs.",
      "description_length": 379,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SetTypeDefaultVersionInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and related operations for setting a default version of a CloudFormation type. It includes functions to construct, parse, and serialize the input data, which consists of optional ARN, type, type name, and version ID fields. It is used when configuring CloudFormation registry types to specify which version should be used by default.",
      "description_length": 373,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton error type `t` representing an operation not found exception. It includes functions to construct, parse, and convert the error to JSON or query formats. It is used to handle missing operation errors in API requests.",
      "description_length": 247,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of a stack set deletion operation in AWS CloudFormation. It defines a type `t` representing the result of the deletion, along with functions to construct, parse, and serialize the result to query parameters or JSON. It is used to manage the response when deleting a stack set, ensuring compatibility with AWS API request formats.",
      "description_length": 360,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateParameter",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for CloudFormation template parameters, including optional fields like parameter key, default value, description, and no-echo flag. It provides functions to construct, serialize, and parse these parameters to and from JSON, query strings, and XML. It is used to manage parameter definitions when deploying or modifying AWS CloudFormation stacks.",
      "description_length": 382,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackSetDriftOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` that represents the output of a stack set drift detection operation in AWS CloudFormation. It includes functions to construct, parse, and serialize the data structure to and from XML, JSON, and query formats. The primary use case is handling the response from initiating a stack set drift detection, which includes an optional operation ID for tracking the asynchronous operation.",
      "description_length": 423,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackDriftInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for detecting stack drift in AWS CloudFormation. It includes functions to construct, parse, and serialize the input containing a stack name and optional list of logical resource IDs. It is used to prepare and handle requests to check whether a stack's actual state differs from its expected template configuration.",
      "description_length": 380,
      "index": 117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackResourceDriftOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing the output of a stack resource drift detection operation in AWS CloudFormation. It includes functions to construct, parse, and serialize the drift output, which contains detailed information about a single drifted stack resource. Use cases include checking whether a specific resource has drifted from its expected configuration and retrieving the actual and expected property values.",
      "description_length": 438,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStacksInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing stacks in AWS CloudFormation, including optional pagination and filtering by stack status. It provides functions to construct, parse, and serialize the input for API requests, supporting operations like querying or transforming data to and from JSON. Concrete use cases include retrieving paginated lists of stacks filtered by specific statuses such as `CREATE_COMPLETE` or `DELETE_FAILED`.",
      "description_length": 442,
      "index": 119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeAction",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing actions that can be taken on AWS CloudFormation resources, such as adding, modifying, removing, or importing. It includes functions to convert between string representations and the variant type, as well as serialization and deserialization routines for JSON and XML formats. It is used to interpret and generate CloudFormation change sets during infrastructure deployment and management workflows.",
      "description_length": 458,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ProvisioningType",
      "library": "aws-cloudformation",
      "description": "This module defines a sum type with three variants representing provisioning types in AWS CloudFormation. It provides functions to convert between strings and the type, serialize to JSON and query formats, parse from XML nodes, and a helper to ignore values during construction. It is used to handle provisioning type values when interacting with CloudFormation resources and APIs.",
      "description_length": 381,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, querying, and serializing lists of stack instance summaries. It provides functions to convert between XML, JSON, and internal data representations for use in API requests and responses. The primary data type is a list of `StackInstanceSummary.t`, used when managing CloudFormation stack instances across multiple accounts and regions.",
      "description_length": 363,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilterName",
      "library": "aws-cloudformation",
      "description": "This module defines a single enumerated type `t` with the constructor `DETAILED_STATUS` and provides bidirectional conversions between strings and this type. It includes functions for parsing, serialization to JSON and query formats, and string conversion. This module is used to specify filter criteria when querying AWS CloudFormation stack instances, ensuring valid values are used for filtering operations.",
      "description_length": 410,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of an AWS CloudFormation stack set, including fields such as name, ID, status, and drift information. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include retrieving and processing stack set summaries from AWS API responses in deployment automation or monitoring tools.",
      "description_length": 414,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeRegistrationsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing type registrations in AWS CloudFormation, including fields like type, type name, type ARN, registration status, and pagination controls. It provides functions to construct, parse, and serialize the input for use in API requests, specifically supporting queries to retrieve registered resource types. Use cases include filtering and paginating through CloudFormation type registrations based on status or type identifiers.",
      "description_length": 473,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStacksOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output from AWS CloudFormation's `DescribeStacks` API call. It includes operations to create, parse, and convert the output to and from JSON and query formats. It works with a list of CloudFormation stacks and an optional pagination token.",
      "description_length": 263,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Export",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing CloudFormation export information, including the exporting stack ID, name, and value. It provides functions to construct, serialize, and deserialize this structure for use in API requests and responses. Concrete use cases include managing cross-stack references and retrieving exported values from CloudFormation templates.",
      "description_length": 377,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceSignalStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type with `SUCCESS` and `FAILURE` constructors, representing resource signal statuses in AWS CloudFormation. It provides bidirectional conversions between strings and the variant type, along with serialization to and from JSON, query parameters, and XML nodes. These functions are used to interpret and emit resource signal status values when interacting with AWS CloudFormation's API.",
      "description_length": 427,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling type not found errors in AWS CloudFormation. It includes operations for creating, parsing, and converting error data to query parameters or JSON format. Use cases include error handling and request/response processing in CloudFormation-related services.",
      "description_length": 323,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceAttribute",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing CloudFormation resource attributes such as Properties, Metadata, and Policies. It includes functions to convert between string representations and the variant type, supporting serialization to and from JSON, XML, and query formats. It is used to specify which resource attributes are affected during CloudFormation stack updates or inspections.",
      "description_length": 404,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeVersionsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for listing CloudFormation type versions. It includes fields like type name, ARN, maximum results, and deprecation status, supporting filtering and pagination. It is used to construct and serialize requests to retrieve registered CloudFormation type versions.",
      "description_length": 325,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ValidateTemplateOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for the output of validating a CloudFormation template, including parameters, description, capabilities, and declared transforms. It provides functions to construct, parse, and serialize the structure to query parameters or JSON. Use this module when handling responses from AWS CloudFormation's template validation API to inspect template properties and requirements.",
      "description_length": 405,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a set of status values for tracking the state of stack set operations, including RUNNING, SUCCEEDED, FAILED, STOPPING, STOPPED, and QUEUED. It provides direct conversions between these status values and strings, JSON, and XML, enabling straightforward serialization and parsing. These capabilities are essential for handling AWS CloudFormation API responses and requests that involve stack set operation statuses.",
      "description_length": 433,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Stack",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing an AWS CloudFormation stack with detailed metadata and configuration. It provides functions to construct, serialize, and deserialize stack instances, supporting operations like converting to and from JSON, query parameters, and XML parsing. Concrete use cases include managing stack state, processing CloudFormation events, and integrating with AWS APIs for deployment automation.",
      "description_length": 430,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilter",
      "library": "aws-cloudformation",
      "description": "This module defines a filter structure for stack instances, including name and value fields. It provides functions to construct, parse, and convert the structure to query parameters or JSON format. Use this module when filtering stack instances by specific attributes in API requests or responses.",
      "description_length": 297,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateSummaryOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a CloudFormation template summary retrieval. It includes fields for template parameters, description, capabilities, resource types, and metadata, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used to process and work with CloudFormation template metadata returned by the AWS API.",
      "description_length": 399,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecutionStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the execution status of cloud formation operations, with specific values like `EXECUTE_IN_PROGRESS` and `EXECUTE_COMPLETE`. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These functions are used to interpret and format execution status values when interacting with AWS CloudFormation APIs.",
      "description_length": 443,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for updating a CloudFormation stack set. It includes fields for configuration such as stack set name, template source, parameters, and deployment settings, supporting precise control over multi-account and multi-region deployments. Functions allow creating, parsing, and serializing the input for use with AWS API requests.",
      "description_length": 378,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ValidateTemplateInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for validating AWS CloudFormation templates using either a template body or a URL. It provides functions to create, parse, and convert the structure to query parameters or JSON format. Use this module when you need to validate a CloudFormation template directly by its content or from a remote location via a URL.",
      "description_length": 350,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetStackPolicyInput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` representing input parameters for retrieving an AWS CloudFormation stack policy, specifically containing the stack name. It provides functions to construct, serialize, and parse this data type to and from XML, JSON, and query formats. This module is used when interacting with AWS CloudFormation APIs to fetch the policy associated with a specific stack.",
      "description_length": 397,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "Handles the output response from updating CloudFormation stack instances. It provides functions to construct, parse, and serialize the response data, which includes an optional operation ID. This module is used to retrieve and manage the result of stack instance updates in AWS CloudFormation.",
      "description_length": 293,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackEvents",
      "library": "aws-cloudformation",
      "description": "Handles parsing and serialization of CloudFormation stack events. Works with XML nodes, JSON values, and query parameters to convert between stack event lists and external representations. Useful for processing CloudFormation API responses and constructing requests.",
      "description_length": 266,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChange",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing changes to AWS CloudFormation resources, including fields like action type, resource IDs, and change details. It provides functions to construct, parse, and convert resource change data for use in CloudFormation API interactions. Use cases include tracking updates to resources during stack changes and analyzing resource modifications in deployment plans.",
      "description_length": 406,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackInstanceInput",
      "library": "aws-cloudformation",
      "description": "This module defines a record type for input parameters used to describe a CloudFormation stack instance, including the stack set name, account, and region. It provides functions to construct, parse, and convert the input to query or JSON formats, as well as to create an instance from JSON data. Concrete use cases include preparing and handling requests to retrieve information about a specific stack instance in a given account and region.",
      "description_length": 441,
      "index": 144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CFNRegistryException",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling CloudFormation registry exceptions, primarily working with string and JSON data types. It provides functions to construct, parse, and serialize exception data for use in API interactions. Concrete use cases include error handling during CloudFormation resource registration and deserialization of exception responses from AWS services.",
      "description_length": 385,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and JSON conversion for a list of stack set operation result summaries. It works with XML nodes, JSON values, and query parameters, specifically processing collections of stack set operation results. It is used when managing AWS CloudFormation stack set operations, enabling interaction with AWS APIs through structured data formats.",
      "description_length": 377,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the possible status states of an AWS CloudFormation resource. It provides bidirectional conversions between status values and strings, along with serialization and deserialization functions for JSON and XML formats. Typical use cases include interpreting resource state changes during stack operations and mapping external status representations to internal logic for deployment workflows.",
      "description_length": 449,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetSummaries",
      "library": "aws-cloudformation",
      "description": "Handles parsing, querying, and serializing stack set summaries from AWS CloudFormation. Works with XML nodes, JSON values, and query parameters to convert between list representations of stack set summaries. Useful for interacting with CloudFormation APIs that list stack sets, enabling operations like displaying summaries or building requests.",
      "description_length": 345,
      "index": 148,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListImportsOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of listing imports in AWS CloudFormation, including a list of imports and an optional next token for pagination. It provides functions to construct, parse, and serialize the structure to query parameters or JSON format. Use this module when retrieving and processing import lists from CloudFormation, particularly for handling paginated results.",
      "description_length": 406,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountLimitList",
      "library": "aws-cloudformation",
      "description": "This module handles list operations for AWS CloudFormation account limits, including parsing XML input, converting to query format, and serializing to and from JSON. It works with lists of `AccountLimit.t` records, which represent individual account limits. Use this module when managing CloudFormation stack limits, such as retrieving or setting constraints on resource counts.",
      "description_length": 378,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateTerminationProtectionInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for updating termination protection settings on a CloudFormation stack. It includes operations to create, parse, and serialize the input for API requests, supporting Boolean and String types. Concrete use cases involve enabling or disabling termination protection when managing CloudFormation stacks programmatically.",
      "description_length": 357,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for deleting a CloudFormation change set. It includes functions to construct, parse, and serialize the input containing the change set name and optional stack name. It works directly with string types and integrates with AWS query and JSON formats for API interactions.",
      "description_length": 335,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterDeclaration",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing CloudFormation parameter declarations, including fields like parameter key, default value, type, and constraints. It provides functions to construct, parse, and convert these declarations to and from XML, JSON, and query formats. Use this module when working with AWS CloudFormation templates to define or manipulate parameters programmatically.",
      "description_length": 399,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.NotificationARNs",
      "library": "aws-cloudformation",
      "description": "This module handles list-based data for notification ARNs in AWS CloudFormation operations. It provides functions to convert, parse, and serialize string lists to and from XML, JSON, and query parameters. Use this when configuring or processing CloudFormation stack notifications with ARN values.",
      "description_length": 296,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RecordHandlerProgressInput",
      "library": "aws-cloudformation",
      "description": "This module defines a record type for input parameters used to report progress in a CloudFormation custom resource handler. It includes fields for operation status, status messages, error codes, and resource models, along with functions to construct, parse, and serialize the record to various formats like JSON and query strings. It is used to communicate handler progress and state changes back to the CloudFormation service during resource provisioning or updates.",
      "description_length": 467,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftInformationSummary",
      "library": "aws-cloudformation",
      "description": "This module handles stack drift information summaries by providing constructors, parsers, and serializers for the `t` type, which includes drift status and an optional last check timestamp. It works with XML, JSON, and query parameter formats for data interchange. Use this module to process or generate stack drift details when interacting with AWS CloudFormation APIs or logging drift status changes.",
      "description_length": 402,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceTypes",
      "library": "aws-cloudformation",
      "description": "This module handles lists of resource types in AWS CloudFormation, primarily through parsing, serialization, and conversion operations. It works with `Ezxmlm.nodes`, `Aws.Json.t`, and `Aws.Query.t` for data interchange in API interactions. Concrete use cases include converting resource type lists to JSON for API requests and parsing responses from CloudFormation into string lists.",
      "description_length": 383,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.PhysicalResourceIdContext",
      "library": "aws-cloudformation",
      "description": "This module handles the parsing, conversion, and serialization of physical resource ID context data, which is represented as a list of key-value pairs. It provides functions to convert this data to and from XML, JSON, and query formats, ensuring correct structure during AWS CloudFormation interactions. Use this module when constructing or interpreting resource context data for CloudFormation operations like stack creation or resource updates.",
      "description_length": 446,
      "index": 158,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Capabilities",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of AWS CloudFormation capability lists. It provides functions to convert capability lists to and from JSON and query formats, as well as parsing from XML nodes. Concrete use cases include preparing capability data for API requests and processing responses in AWS CloudFormation workflows.",
      "description_length": 361,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of creating a CloudFormation stack set, primarily consisting of an optional `stack_set_id`. It provides functions to construct, parse, and serialize the structure to common formats like JSON and query parameters. The module is used to retrieve and manage the identifier of a newly created stack set in AWS CloudFormation.",
      "description_length": 382,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for creating CloudFormation stack instances across specified accounts and regions. It includes functions to construct, serialize, and parse the input data, supporting precise configuration through parameters like `parameter_overrides` and `operation_preferences`. Concrete use cases include automating multi-account, multi-region stack deployments with customized settings and deployment targets.",
      "description_length": 462,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LogicalResourceIds",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string identifiers representing logical resources in cloud formation templates. It provides functions to convert these lists to and from XML, JSON, and query parameters, facilitating their use in API requests and responses. Use cases include managing resource dependencies and tracking created or updated resources during stack operations.",
      "description_length": 368,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.SetTypeDefaultVersionOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of API responses related to setting the default version of a CloudFormation type. It defines a unit type and functions to convert values to and from JSON and query formats. It is used when interacting with AWS CloudFormation to manage type versions programmatically.",
      "description_length": 324,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the status of an operation, with values like `PENDING`, `IN_PROGRESS`, `SUCCESS`, and `FAILED`. It includes functions to convert between string representations and the type, as well as serialization to and from JSON and query parameters. It is used to track and communicate the state of AWS CloudFormation operations such as stack creation or updates.",
      "description_length": 411,
      "index": 164,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.SetStackPolicyInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for setting a stack policy in CloudFormation. It handles parsing from XML, conversion to query parameters, and JSON serialization for API requests. It works with CloudFormation stack names and optional policy bodies or URLs, used when applying policies during stack updates.",
      "description_length": 342,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing stack sets in AWS CloudFormation, including optional parameters like next token, max results, and stack set status. It provides functions to construct, parse, and serialize the input for API requests, supporting operations like pagination and filtering by status. Concrete use cases include querying AWS for stack set resources with specific constraints or retrieving paginated results.",
      "description_length": 438,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` representing the output of a delete stack instances operation, containing an optional operation ID. It provides functions to construct, parse, and convert the data structure to query parameters, JSON, and XML formats. This module is used to handle responses from AWS CloudFormation when deleting stack instances across accounts or regions.",
      "description_length": 382,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackResourcesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing stack resources in AWS CloudFormation, providing functions to create, parse, and serialize the response data. It works with `stack_resource_summaries` and an optional `next_token` for pagination. Use this module to process results from `ListStackResources` API calls, including handling paginated responses and converting data to JSON or query format.",
      "description_length": 393,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of an AWS CloudFormation stack, including metadata like stack name, creation time, status, and optional fields such as template description and drift information. It provides functions to construct, serialize, and parse stack summaries to and from XML, JSON, and query formats. Concrete use cases include retrieving and processing stack information from AWS API responses in deployment and infrastructure management workflows.",
      "description_length": 486,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InsufficientCapabilitiesException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type exception used to signal missing capabilities when interacting with AWS CloudFormation APIs. It includes functions to construct, parse, and serialize the exception for use in API requests and responses. Concrete use cases include handling errors during stack creation or updates when required IAM capabilities are not provided.",
      "description_length": 359,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationInProgressException",
      "library": "aws-cloudformation",
      "description": "This module defines a minimal exception type used to represent an in-progress operation error. It includes functions to construct, parse, and convert the exception to query parameters or JSON format. It is typically used when handling AWS CloudFormation API responses that indicate an operation is still running.",
      "description_length": 312,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidChangeSetStatusException",
      "library": "aws-cloudformation",
      "description": "This module defines a minimal exception type used to represent invalid change set status errors. It includes operations to construct, parse, and convert the exception to query parameters or JSON format. It is typically used in error handling workflows when interacting with AWS CloudFormation APIs that involve change set validation.",
      "description_length": 333,
      "index": 172,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftInformationSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the drift status of a CloudFormation stack resource, including the drift status and an optional timestamp of the last check. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. This is used to track whether a resource's actual state matches its expected state in CloudFormation.",
      "description_length": 390,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSet",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a CloudFormation stack set, including fields for configuration such as template body, parameters, tags, and execution role. It provides functions to construct, serialize, and parse stack set data for use in AWS CloudFormation operations. These capabilities support managing multi-account, multi-region deployments through stack sets.",
      "description_length": 383,
      "index": 174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftDetectionStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type representing the possible states of a stack set drift detection operation. It includes functions to convert between string representations and enumerated values, along with serialization and deserialization routines for JSON, XML, and query parameters. It is used to interpret and communicate the status of drift detection operations in AWS CloudFormation stack sets.",
      "description_length": 407,
      "index": 175,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a specific resource within a CloudFormation stack. It includes operations to create, serialize, and convert instances to and from JSON and query formats. It is used when retrieving detailed information about a stack resource by its name and logical ID.",
      "description_length": 327,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationResultsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for listing results of a stack set operation in AWS CloudFormation. It includes functions to construct, parse, and serialize the input data, which consists of stack set name, operation ID, pagination token, and maximum results. It is used to retrieve detailed outcomes of a specific stack set operation across multiple accounts and regions.",
      "description_length": 406,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResources",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of CloudFormation stack resource data. It works with lists of `StackResource.t` values, supporting operations like converting to and from XML, JSON, and query formats. It is used when retrieving or processing the list of resources associated with a CloudFormation stack, such as during stack inspection or resource tracking.",
      "description_length": 397,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListChangeSetsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for listing change sets in a CloudFormation stack. It handles parsing from XML, converting to query parameters, and JSON serialization for API requests. It is used when retrieving a list of change sets associated with a specific stack name, optionally paginated using a next token.",
      "description_length": 349,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LimitExceededException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a request exceeds service limits. It provides operations to create, parse, and convert unit values to query parameters or JSON, primarily used in error handling scenarios. Concrete use cases include signaling limit exceeded errors in API responses without carrying additional data.",
      "description_length": 363,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RetainResources",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of a list of string resources, typically used to specify which AWS CloudFormation resources should be retained during stack updates or deletions. It provides functions to convert between XML, JSON, and query string representations of these resource lists. Use this module when working with CloudFormation stack policies or update operations that require explicit resource retention.",
      "description_length": 440,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for describing an AWS CloudFormation change set, including the change set name, optional stack name, and optional pagination token. It provides functions to construct, parse, and serialize the input for use in API requests, specifically supporting query parameters and JSON formats. Concrete use cases include preparing and submitting requests to retrieve details about a specific change set in a CloudFormation stack.",
      "description_length": 458,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Tag",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for key-value tags used in cloud formation resources, with operations to create, parse, and serialize tags to various formats. It works with XML nodes, JSON values, and AWS query parameters, enabling seamless integration with AWS CloudFormation APIs. Use this module when managing metadata tags for infrastructure-as-code deployments, such as tagging EC2 instances or S3 buckets during stack creation or updates.",
      "description_length": 449,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationStatusCheckFailedException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling operation status check failures in AWS CloudFormation. It includes operations for creating, parsing, and converting the unit value to query parameters, JSON, and back. Use this to signal and manage failed status checks during CloudFormation operations without carrying additional data.",
      "description_length": 355,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackInstanceOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing a CloudFormation stack instance. It provides functions to create, parse, and serialize the result, which includes an optional stack instance. Use it when retrieving details about a specific stack instance in a CloudFormation deployment.",
      "description_length": 281,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CancelUpdateStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for canceling a stack update in AWS CloudFormation. It includes fields for the stack name and an optional client request token, with operations to create, parse, and serialize the input for API requests. It is used when sending a cancel update action to AWS, converting the data into query parameters or JSON format for the CloudFormation service.",
      "description_length": 387,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourcesToImport",
      "library": "aws-cloudformation",
      "description": "This module handles lists of resource imports for CloudFormation, providing operations to convert between XML, JSON, and query formats. It works with `ResourceToImport.t` lists and supports parsing from XML nodes, serializing to AWS query format, and converting to and from JSON. Use this module when managing CloudFormation stack imports via the AWS SDK, particularly for handling resource import specifications in API requests and responses.",
      "description_length": 443,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChangeDetail",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing detailed information about a resource change in a CloudFormation stack update. It includes fields for the target resource, evaluation type, change source, and causing entity, along with functions to construct, serialize, and deserialize this data. It is used to analyze and track specific changes during CloudFormation stack updates, such as determining why a resource is being modified or replaced.",
      "description_length": 449,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecuteChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of executing a change set in AWS CloudFormation. It defines a unit type and functions to parse, convert to query format, serialize to JSON, and deserialize from JSON. It is used to represent and manipulate the result of a change set execution in CloudFormation workflows.",
      "description_length": 302,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackSetDriftInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to detect drift in AWS CloudFormation stack sets. It includes fields for the stack set name, optional operation preferences, and an optional operation ID, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used when initiating a stack set drift detection operation in AWS CloudFormation.",
      "description_length": 401,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing stack set operations in AWS CloudFormation. It provides functions to create, parse, and serialize the response data, which includes summaries of operations and an optional token for pagination. It works directly with XML, JSON, and query string formats for integration with AWS APIs.",
      "description_length": 325,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing the output of a stack update operation in AWS CloudFormation. It includes functions to construct, parse, and serialize the output, which contains an optional stack identifier. Use this module to handle responses when updating infrastructure stacks programmatically.",
      "description_length": 317,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PropertyDifference",
      "library": "aws-cloudformation",
      "description": "This module represents differences between expected and actual property values in a CloudFormation stack, capturing the property path, expected value, actual value, and type of difference. It provides functions to construct, serialize, and parse these difference records in various formats including JSON, query parameters, and XML. It is used to analyze and report discrepancies between deployed resources and their intended configurations.",
      "description_length": 441,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDrift",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the drift status of a CloudFormation stack resource, including details like expected and actual properties, drift status, and timestamps. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. Use this module to analyze resource drift in AWS CloudFormation stacks, particularly for detecting discrepancies between template definitions and actual deployed resources.",
      "description_length": 474,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListExportsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing CloudFormation exports, containing an optional `next_token` for pagination. It provides functions to construct, parse, and serialize the input for use with AWS CloudFormation's API operations. Use this module when interacting with CloudFormation's `ListExports` API to retrieve exported values across stacks.",
      "description_length": 360,
      "index": 195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListChangeSetsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing AWS CloudFormation change sets. It provides operations to create, parse, and serialize a list of change set summaries along with an optional pagination token. The module works directly with XML, JSON, and query parameter representations of this output data.",
      "description_length": 310,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Scope",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of resource attribute scopes in AWS CloudFormation. It works with lists of `ResourceAttribute.t` values, converting them to and from XML, JSON, and query formats. It is used when managing which resource attributes are affected by stack updates or drift detection.",
      "description_length": 336,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for creating a CloudFormation stack. It includes functions to construct, parse, and serialize the input parameters such as stack name, template body, parameters, and configuration options like rollback and timeout. It works directly with string, integer, boolean types and structured types like parameters, capabilities, and tags for configuring stack creation behavior.",
      "description_length": 425,
      "index": 198,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Outputs",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of CloudFormation output lists. It provides functions to convert between XML, JSON, and query formats and a list-based structure of output types. Use it when working with CloudFormation stack outputs in different data formats, especially during API interactions or template processing.",
      "description_length": 358,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a custom enumerated type representing the status of a CloudFormation stack instance, with values `CURRENT`, `OUTDATED`, and `INOPERABLE`. It provides bidirectional conversions between the type and strings, JSON, and XML, along with utilities for parsing and query parameter serialization. Concrete use cases include handling CloudFormation API responses, status comparisons, and request formatting.",
      "description_length": 418,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for holding the result of a stack resource description, primarily containing an optional `StackResourceDetail`. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. It is used when retrieving detailed information about a specific AWS CloudFormation stack resource.",
      "description_length": 362,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a type description in a cloud formation service. It includes fields like ARN, type name, version details, provisioning configuration, and timestamps, all optional. Operations include creating instances, parsing XML input, converting to query format or JSON, and constructing from JSON. Use cases involve retrieving and processing metadata about registered resource types in a cloud environment.",
      "description_length": 458,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TransformsList",
      "library": "aws-cloudformation",
      "description": "Handles transformations applied to AWS CloudFormation templates by converting string lists to and from XML, JSON, and query formats. Works with string lists representing transformation names. Used when processing CloudFormation stack creation or update requests involving SAM or macro transformations.",
      "description_length": 301,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackStatusFilter",
      "library": "aws-cloudformation",
      "description": "This module handles filtering of CloudFormation stack statuses by converting, parsing, and querying lists of stack status values. It supports operations to transform stack status lists into query parameters, JSON representations, and back, enabling precise status-based filtering in API requests. Use cases include building and interpreting AWS CloudFormation API calls that require filtering stacks by specific statuses like `CREATE_COMPLETE` or `DELETE_FAILED`.",
      "description_length": 463,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StopStackSetOperationOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a type and associated functions for handling the output of stopping a stack set operation in AWS CloudFormation. It provides parsing, query conversion, and JSON serialization functions, all operating on a unit type. Use this module when managing stack set operations to integrate with AWS SDK workflows.",
      "description_length": 323,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackDriftOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing the output of a stack drift detection operation, containing a unique identifier for the detection request. It provides functions to construct the type, parse it from XML, convert it to query parameters or JSON, and create it from JSON input. This module is used to handle responses from initiating stack drift detection in AWS CloudFormation, enabling tracking of the detection process using the provided ID.",
      "description_length": 460,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ContinueUpdateRollbackOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling the output of a CloudFormation continue update rollback operation. It includes functions for creating, parsing, and converting the output to query parameters or JSON format. Use this module when interacting with AWS CloudFormation's rollback continuation features, particularly for serializing or deserializing API responses.",
      "description_length": 395,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidOperationException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling invalid operation errors. It provides operations to construct, parse, and convert error values to query parameters, JSON, or from JSON. Use this when interacting with AWS CloudFormation APIs to manage error responses in a structured way.",
      "description_length": 307,
      "index": 208,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, querying, and serializing lists of resource identifier summaries, primarily used when working with CloudFormation stack resources. It provides operations to convert between XML, JSON, and internal data representations, facilitating interactions with AWS CloudFormation APIs. Use cases include retrieving and processing resource identifiers from CloudFormation stacks in a structured format.",
      "description_length": 419,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the status of a CloudFormation stack set, with specific values for active and deleted states. It provides bidirectional conversions between the type and strings, JSON, and XML, along with helper functions for parsing and query parameter serialization. It is used to handle stack set status values in API requests and responses, ensuring correct encoding and decoding across different data formats.",
      "description_length": 457,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summarized view of an AWS CloudFormation stack resource, including metadata like logical and physical IDs, resource type, status, and drift information. It provides functions to construct, serialize, and deserialize these summaries, primarily used when retrieving or processing stack resource details from AWS CloudFormation. The module is useful for tracking resource state changes and detecting configuration drift in deployed stacks.",
      "description_length": 488,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a CloudFormation stack set, specifically containing the stack set name. It provides functions to create, serialize, and parse this structure to and from XML, JSON, and query formats. It is used when making API calls to retrieve details about a specific CloudFormation stack set by name.",
      "description_length": 361,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeVersionSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles lists of type version summaries in AWS CloudFormation, primarily for parsing XML responses and converting data to and from JSON and query formats. It works with `TypeVersionSummary.t` records, organizing them into lists for batch processing. Use cases include handling API responses that list multiple type versions, such as when enumerating available versions of a CloudFormation resource type.",
      "description_length": 415,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Capability",
      "library": "aws-cloudformation",
      "description": "This module defines and manipulates capability values used in AWS CloudFormation operations, such as stack creation and updates. It supports conversion between string representations and enumerated types, along with serialization to and from JSON and query formats. It is used to specify capabilities like IAM resource management and automatic expansion when interacting with CloudFormation APIs.",
      "description_length": 396,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the summary of a stack set operation result in AWS CloudFormation, including fields like account, region, status, and organizational unit ID. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. It is used to track the outcome of operations across multiple accounts and regions in CloudFormation stack sets.",
      "description_length": 409,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListExportsOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of listing AWS CloudFormation exports, including a list of export values and an optional pagination token. It provides functions to construct, parse, and serialize the output for use in API responses or further processing. Use this module when retrieving and managing exported resources across CloudFormation stacks, particularly for cross-stack reference management.",
      "description_length": 428,
      "index": 216,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Tags",
      "library": "aws-cloudformation",
      "description": "Handles tag data for AWS CloudFormation resources by converting between XML, JSON, and query formats. It operates on a list of tag records, each representing a key-value pair. Used when managing resource metadata in CloudFormation stacks, such as tagging deployments or retrieving cost allocation tags.",
      "description_length": 302,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LoggingConfig",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for configuring logging in AWS CloudFormation, specifically capturing the role ARN and log group name. It provides functions to construct, serialize, and deserialize this configuration to and from JSON, query parameters, and XML. Use this module when setting up or managing CloudFormation stack logging destinations targeting CloudWatch or other AWS logging services.",
      "description_length": 404,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeAccountLimitsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for describing account limits in AWS CloudFormation, containing an optional `next_token` for pagination. It provides functions to construct, parse, and convert the input to query or JSON formats, as well as to create an instance from JSON data. Use this when making API calls to retrieve account limits, handling paginated results, or integrating with AWS SDKs that require structured input.",
      "description_length": 431,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing the output of an AWS CloudFormation stack set update operation, which includes an optional operation ID. It provides functions to construct, parse, and serialize this data structure to and from XML, JSON, and query formats. This module is used to handle responses from initiating updates to CloudFormation stack sets, enabling tracking of the resulting asynchronous operation.",
      "description_length": 428,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OnFailure",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing possible failure handling actions in a deployment system, with variants `DO_NOTHING`, `ROLLBACK`, and `DELETE`. It provides bidirectional conversions between strings and the enumerated type, along with functions to serialize and deserialize values to and from JSON, query parameters, and XML. These operations are used to interpret and persist failure policies in configuration management and cloud infrastructure workflows.",
      "description_length": 481,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StageList",
      "library": "aws-cloudformation",
      "description": "Handles parsing, serialization, and conversion of CloudFormation template stages. Works with lists of `TemplateStage.t` values, supporting operations like XML parsing, JSON and query parameter encoding. Used to process multi-stage CloudFormation templates during deployment workflows.",
      "description_length": 284,
      "index": 222,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for summarizing resource identifiers in AWS CloudFormation, including optional resource type, logical IDs, and resource identifiers. It provides functions to construct, parse, and serialize the structure to query parameters or JSON format. Use this module when handling CloudFormation stack resource data, particularly for tracking or querying resource identities across AWS services.",
      "description_length": 421,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a stack set is not found. It provides operations for creating, parsing, and converting unit values to query parameters, JSON, and back from JSON. It is used to represent and manage the absence of a stack set in API interactions.",
      "description_length": 310,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Change",
      "library": "aws-cloudformation",
      "description": "This module represents changes in AWS CloudFormation resources, capturing the type of change and associated resource modifications. It provides constructors, JSON and XML parsers, and query builders for handling stack change events. Use it to analyze or respond to infrastructure changes in CloudFormation stacks, such as tracking resource additions, removals, or updates during deployment previews.",
      "description_length": 399,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftInformation",
      "library": "aws-cloudformation",
      "description": "This module handles stack drift information in AWS CloudFormation by providing constructors, parsers, and serializers for stack drift status and timestamps. It works with XML, JSON, and AWS query formats to facilitate communication with CloudFormation APIs. Concrete use cases include checking drift status after stack updates and recording the time of the last drift check.",
      "description_length": 374,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetNotEmptyException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling the `StackSetNotEmptyException` in AWS CloudFormation. It provides operations to create an instance, parse from a value, and convert to query, JSON, and back from JSON. This is used specifically to represent and serialize exceptions indicating that a stack set is not empty during AWS API interactions.",
      "description_length": 372,
      "index": 227,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing CloudFormation types, containing summaries of types and an optional token for pagination. It provides functions to construct, parse, and serialize the output for use in API responses or further processing. Use this module when retrieving and handling lists of CloudFormation resource types from AWS.",
      "description_length": 352,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RequiresRecreation",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` with three variants (`Never`, `Conditionally`, `Always`) representing when a resource property change requires recreation. It provides functions to convert between strings and the type, serialize to JSON or query parameters, and parse from XML nodes. It is used to handle property update behavior in AWS CloudFormation resource definitions.",
      "description_length": 371,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type representing the drift status of a stack resource in AWS CloudFormation, with values like `IN_SYNC`, `MODIFIED`, and `DELETED`. It provides functions to convert between string representations and the enumerated type, along with serialization and deserialization for JSON and XML formats. It is used to track and manage configuration drift in CloudFormation stacks during deployment or inspection workflows.",
      "description_length": 446,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of a change set deletion operation in AWS CloudFormation. It defines a unit type and functions to construct, parse, and serialize the output into query parameters or JSON format. It is used to represent and process the result of deleting a change set, primarily for interaction with AWS APIs.",
      "description_length": 323,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourcesInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe AWS CloudFormation stack resources. It includes fields for filtering by stack name, logical resource ID, or physical resource ID, and provides functions to construct, serialize, and parse these inputs in various formats like JSON and XML. It is used when querying AWS CloudFormation to retrieve detailed information about specific resources within a stack.",
      "description_length": 431,
      "index": 232,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeRegistrationInput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing input for describing an AWS CloudFormation type registration. It includes operations to construct, parse, and serialize the input using XML, JSON, and query parameters. The module is used to retrieve the status of a CloudFormation type registration using a provided token.",
      "description_length": 324,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of AWS CloudFormation stack summaries. It provides functions to convert between XML, JSON, and query formats and a list of stack summary records. Use this module when processing responses or building requests for AWS CloudFormation list stack operations, particularly for handling multiple stack summaries in different data formats.",
      "description_length": 405,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSource",
      "library": "aws-cloudformation",
      "description": "This module defines a sum type representing the source of a change in AWS CloudFormation, such as `ResourceReference` or `DirectModification`. It includes functions to convert between string representations and the enumerated type, as well as serialization to and from JSON and query formats. It is used to interpret and generate change source information when managing CloudFormation stack updates.",
      "description_length": 399,
      "index": 235,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines a record type for input parameters used to update a CloudFormation stack, including stack name, template details, policies, and configuration options. It provides functions to construct, parse, and serialize these inputs for use in API requests. Concrete use cases include specifying updated templates, managing stack policies, and configuring rollback behavior during stack updates.",
      "description_length": 403,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input parameters for listing CloudFormation types, including filters like visibility, provisioning type, and deprecation status, along with pagination controls. It supports operations to construct, serialize, and parse these inputs in various formats such as JSON and query strings. It is used when querying AWS CloudFormation for available resource types, particularly in scenarios requiring filtering or paginated results.",
      "description_length": 448,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDetail",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing detailed information about an individual resource within a CloudFormation stack, including identifiers, status, metadata, and drift information. It provides functions to construct, serialize, and parse these resource details, primarily working with strings, timestamps, and custom types for status and drift. It is used to inspect and manage the state of CloudFormation resources programmatically, such as tracking updates or detecting configuration drift.",
      "description_length": 506,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of a CloudFormation stack set operation, including its ID, action type, status, and timestamps. It provides functions to construct, parse, and serialize these summaries to and from JSON and query formats. Use this module when managing CloudFormation stack set operations, such as tracking deployment statuses or auditing operation timelines.",
      "description_length": 401,
      "index": 239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for deleting a CloudFormation stack set, including the stack set name. It provides functions to create, parse, and serialize the input for use in API requests. The module works with XML, JSON, and query string formats for integration with AWS SDK components.",
      "description_length": 298,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackResourceDriftInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to detect drift in a specific resource within a CloudFormation stack. It includes functions to construct, serialize, and parse the input, which consists of a stack name and a logical resource ID. It is used when checking whether the actual state of a resource differs from its expected configuration in the stack template.",
      "description_length": 385,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceTargetDefinition",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the target definition of a resource in AWS CloudFormation, including optional fields for attribute, name, and recreation requirements. It provides functions to construct instances, convert to and from JSON and query formats, and parse from XML nodes. Concrete use cases include handling resource updates and tracking changes during stack operations.",
      "description_length": 399,
      "index": 242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for updating CloudFormation stack instances across specified accounts and regions. It includes functions to construct, serialize, and parse the input data, supporting precise configuration through parameters like `parameter_overrides` and `operation_preferences`. Concrete use cases include orchestrating updates to stack sets in multi-account AWS environments with controlled deployment options.",
      "description_length": 462,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and manipulation of AWS CloudFormation stack resource summaries. It works with lists of `StackResourceSummary.t` records, supporting operations like XML parsing, JSON and query parameter conversion. It is used to process and transmit resource summary data when interacting with AWS CloudFormation APIs.",
      "description_length": 346,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Visibility",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` with two values, `PUBLIC` and `PRIVATE`, representing visibility states. It includes functions to convert between strings and the `t` type, as well as serialization and deserialization routines for JSON, XML, and query parameters. This module is used to handle visibility settings in AWS CloudFormation resource definitions, ensuring correct string representations during API interactions.",
      "description_length": 440,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeRegistrationOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a type registration description in AWS CloudFormation. It includes fields for the registration progress status, description, and ARNs for the type and type version. Operations allow constructing instances, parsing XML responses, and converting to and from JSON and query formats for API interactions.",
      "description_length": 364,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStacksOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of listing AWS CloudFormation stacks, including a collection of stack summaries and an optional token for pagination. It provides functions to construct, serialize, and deserialize this output format, enabling interaction with AWS CloudFormation's API responses. Use this module when retrieving and processing lists of stacks, especially when handling paginated results.",
      "description_length": 431,
      "index": 247,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of creating stack instances in AWS CloudFormation. It includes functions to construct, parse, and serialize the output, which contains an optional operation ID. Use this module when managing multi-account or multi-region stack deployments through CloudFormation's stack sets.",
      "description_length": 336,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateStage",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type with two constructors, `Original` and `Processed`, representing stages of a CloudFormation template. It includes functions to convert between strings and the type, serialize to query parameters or JSON, and parse from XML nodes or JSON. It is used to distinguish between raw and processed template forms when interacting with AWS CloudFormation APIs.",
      "description_length": 397,
      "index": 249,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for creating a CloudFormation stack set, including required fields like stack set name and optional parameters such as description, template source, and deployment settings. It supports operations to construct, serialize, and parse stack set inputs using JSON, query parameters, or XML. Concrete use cases include configuring multi-account stack deployments with specific permissions, templates, and tags.",
      "description_length": 445,
      "index": 250,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RecordHandlerProgressOutput",
      "library": "aws-cloudformation",
      "description": "This module provides functions to handle progress output for a record operation, including creating, parsing, and converting output to query or JSON formats. It works with unit type values, indicating no specific data structure is involved. Use this module to manage progress reporting in workflows where status updates need to be serialized or transmitted.",
      "description_length": 357,
      "index": 251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AllowedValues",
      "library": "aws-cloudformation",
      "description": "This module defines a list of string values used to represent allowed values in AWS CloudFormation templates. It provides functions to convert these values to and from JSON and query formats, as well as parsing from XML nodes. It is used when specifying or validating parameter constraints in CloudFormation templates.",
      "description_length": 318,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Output",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing CloudFormation stack outputs, with optional fields for the output key, value, description, and export name. It provides functions to construct, serialize, and deserialize these output records, primarily working with XML, JSON, and query parameter formats. Concrete use cases include processing CloudFormation stack output data during deployment workflows or exporting output values for cross-stack references.",
      "description_length": 463,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceDriftsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for describing stack resource drifts in AWS CloudFormation. It includes functions to construct, parse, and serialize the input parameters, supporting interactions with the CloudFormation API. The module works with string, integer, and optional types to handle stack names, drift status filters, pagination tokens, and result limits.",
      "description_length": 398,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Parameters",
      "library": "aws-cloudformation",
      "description": "This module handles parameter lists for CloudFormation templates, providing functions to convert parameters to and from JSON and query formats. It supports parsing parameter nodes from XML and constructing parameter lists from JSON input. Concrete use cases include preparing CloudFormation stack parameters for API requests and processing parameter responses from AWS.",
      "description_length": 369,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a CloudFormation change set description, including metadata like creation time, status, and associated stack details. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. Use this module when retrieving and processing change set information from AWS CloudFormation, particularly for inspecting changes before deployment.",
      "description_length": 445,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Stacks",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of CloudFormation stack lists. It provides functions to convert between XML, JSON, and query formats and a list of Stack.t structures. Use this module when interacting with CloudFormation APIs that return or require multiple stacks, such as listing or retrieving stack details.",
      "description_length": 350,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackResourceDrift",
      "library": "aws-cloudformation",
      "description": "This module handles detecting drift in AWS CloudFormation stack resources by sending and receiving HTTP requests. It works with input and output types specific to the `DetectStackResourceDrift` operation, along with internal error types. It is used to encode requests into HTTP format, decode responses, and parse errors returned by the AWS CloudFormation service.",
      "description_length": 364,
      "index": 258,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ExecuteChangeSet",
      "library": "aws-cloudformation",
      "description": "This module executes a CloudFormation change set by sending a request to AWS, handling the conversion between native OCaml types and HTTP requests/responses. It works with `ExecuteChangeSetInput` to specify the change set name and stack name, and returns no output on success or an AWS-specific error on failure. Use this module to programmatically apply infrastructure changes defined in a CloudFormation change set within an OCaml application.",
      "description_length": 445,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateStack",
      "library": "aws-cloudformation",
      "description": "This module handles the creation of AWS CloudFormation stacks by defining input and output types for the `CreateStack` operation, along with functions to serialize requests and deserialize responses. It works directly with `CreateStackInput` and `CreateStackOutput` structures, encoding them into HTTP requests and decoding responses into structured results or errors. Concrete use cases include launching new CloudFormation stacks with specified templates and parameters, and handling the resulting AWS API responses including error conditions specific to stack creation.",
      "description_length": 572,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListExports",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation exports by converting input parameters into signed HTTP requests and parsing responses into structured outputs or errors. It works with `ListExportsInput` and `ListExportsOutput` types, along with internal error types for handling AWS-specific failures. Concrete use cases include querying exported stack values for cross-stack references and managing infrastructure dependencies programmatically.",
      "description_length": 444,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackInstance",
      "library": "aws-cloudformation",
      "description": "This module handles describing a CloudFormation stack instance by converting input parameters into an HTTP request and parsing the response. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML error responses. It is used to retrieve detailed information about a specific stack instance in a CloudFormation deployment.",
      "description_length": 385,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResourceDrifts",
      "library": "aws-cloudformation",
      "description": "This module handles describing resource drifts for a CloudFormation stack by converting input parameters into an HTTP request and parsing the response or errors. It works with input and output types specific to the `DescribeStackResourceDrifts` operation, along with internal error types. It is used to detect differences between actual and expected resource configurations in deployed stacks.",
      "description_length": 393,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackSetDrift",
      "library": "aws-cloudformation",
      "description": "This module handles detecting drift in AWS CloudFormation stack sets by providing functions to construct and interpret HTTP requests and responses for the `DetectStackSetDrift` API operation. It works with input and output types specific to stack set drift detection, including encoded query parameters and XML-based error parsing. Concrete use cases include initiating drift detection on a stack set and processing the resulting status and event data.",
      "description_length": 452,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles updating AWS CloudFormation stack sets by defining input and output types, error parsing, and HTTP request/response conversion. It works with CloudFormation-specific data structures like `UpdateStackSetInput` and `UpdateStackSetOutput`, along with internal error types. It is used to serialize stack set update requests into HTTP calls and deserialize responses, enabling precise control over multi-account, multi-region stack deployments.",
      "description_length": 459,
      "index": 265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSetOperations",
      "library": "aws-cloudformation",
      "description": "This module handles listing operations for CloudFormation stack sets by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation API, including structured error handling for failed operations. It is used when managing stack set operations across multiple accounts and regions, providing precise control over request formatting and error decoding.",
      "description_length": 434,
      "index": 266,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DeleteStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of AWS CloudFormation stack sets by providing functions to construct and interpret HTTP requests and responses. It works with the `DeleteStackSetInput` type to specify stack set deletion parameters and returns no output on success. Concrete use cases include initiating stack set deletions and processing the resulting HTTP responses or errors.",
      "description_length": 377,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles the creation of AWS CloudFormation stack sets by defining input and output types, request signing, and HTTP serialization. It works with structured data types representing stack set configurations and AWS error responses. Concrete use cases include sending properly signed HTTP requests to the CloudFormation API and parsing the XML responses into typed results or errors.",
      "description_length": 392,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles describing AWS CloudFormation stack sets by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the DescribeStackSet operation, along with error types defined in the CloudFormation API. Use this module to retrieve detailed information about a stack set, including its status, parameters, and associated accounts.",
      "description_length": 399,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListTypeVersions",
      "library": "aws-cloudformation",
      "description": "This module handles listing versions of a CloudFormation type by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, along with internal error types for handling failures. Concrete use cases include querying available versions of a CloudFormation resource type and handling pagination of results.",
      "description_length": 398,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DeleteChangeSet",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of AWS CloudFormation change sets by providing functions to construct and interpret HTTP requests and responses. It works with the `DeleteChangeSetInput` type for specifying which change set to delete and returns no output on success or an error if the deletion fails. Concrete use cases include removing a previously created change set before it is executed or cleaning up unused change sets in automated deployment workflows.",
      "description_length": 460,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of CloudFormation stack instances across specified accounts and regions. It provides functions to convert input parameters into signed HTTP requests and parse responses or errors from AWS, ensuring correct encoding and decoding of API calls. Concrete use cases include removing stack instances from a stack set in multi-account environments and managing cleanup operations after stack updates or failures.",
      "description_length": 438,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.RegisterType",
      "library": "aws-cloudformation",
      "description": "This module handles the registration of CloudFormation types by defining the input and output data structures, along with functions to serialize requests into HTTP format and deserialize HTTP responses. It works directly with CloudFormation type registration inputs, outputs, and internal errors, ensuring proper encoding and decoding of AWS API calls. Concrete use cases include submitting new type definitions to AWS CloudFormation and processing the resulting API responses or errors.",
      "description_length": 487,
      "index": 273,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeAccountLimits",
      "library": "aws-cloudformation",
      "description": "This module handles describing account limits for an AWS service by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to the DescribeAccountLimits operation, along with internal error types. Concrete use cases include querying account-level resource limits and handling AWS API responses with precise decoding and error parsing.",
      "description_length": 428,
      "index": 274,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ContinueUpdateRollback",
      "library": "aws-cloudformation",
      "description": "This module handles the rollback continuation operation for a cloud formation update. It works with `ContinueUpdateRollbackInput` and `error_response` types, encoding inputs into HTTP requests and decoding responses into results. It is used to resume a failed stack update rollback by sending the appropriate command to the AWS service endpoint.",
      "description_length": 345,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackDriftDetectionStatus",
      "library": "aws-cloudformation",
      "description": "This module handles the detection status of stack drift in AWS CloudFormation by providing functions to send and receive HTTP requests and responses. It works with input and output types specific to the `DescribeStackDriftDetectionStatus` operation, along with error handling tailored to this API call. It is used to programmatically check the status of a previously initiated stack drift detection operation, returning detailed results such as drift status, detection time, and any associated errors.",
      "description_length": 501,
      "index": 276,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Errors_internal",
      "library": "aws-cloudformation",
      "description": "This module defines a comprehensive set of error types representing specific failure conditions encountered in AWS CloudFormation operations, such as `InvalidParameter`, `StackSetNotFoundException`, and `Throttling`. It provides functions to convert errors to HTTP status codes, strings, and back from strings, enabling precise error handling and interoperability with HTTP interfaces. These operations are used to interpret and respond to service-specific errors during CloudFormation API interactions.",
      "description_length": 503,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CancelUpdateStack",
      "library": "aws-cloudformation",
      "description": "This module handles the cancellation of an in-progress stack update in AWS CloudFormation by providing functions to construct and interpret HTTP requests and responses. It works with the `CancelUpdateStackInput` type to specify the stack name and converts these inputs into properly signed HTTP requests targeting the CloudFormation service. The module is used to directly interact with the AWS CloudFormation API, enabling programmatic control over stack update operations.",
      "description_length": 474,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListChangeSets",
      "library": "aws-cloudformation",
      "description": "This module handles listing change sets for a CloudFormation stack by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation API, including encoded query parameters and XML error responses. It is used to retrieve and manage change set information directly from CloudFormation stacks.",
      "description_length": 373,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateChangeSet",
      "library": "aws-cloudformation",
      "description": "This module handles creating and managing change sets in AWS CloudFormation by providing functions to construct HTTP requests and parse responses specific to the `CreateChangeSet` operation. It works with input and output types defined in `Aws_cloudformation.Types`, along with internal error types for handling failures. Use this module when programmatically creating change sets to preview the impact of template updates on a CloudFormation stack.",
      "description_length": 449,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSetOperationResults",
      "library": "aws-cloudformation",
      "description": "This module handles listing results from AWS CloudFormation stack set operations by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to the `ListStackSetOperationResults` API call, along with internal error types for handling failures. Concrete use cases include querying the status and outcomes of stack set operations across multiple accounts and regions.",
      "description_length": 458,
      "index": 281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeChangeSet",
      "library": "aws-cloudformation",
      "description": "This module handles describing AWS CloudFormation change sets by converting input parameters into HTTP requests and parsing responses. It works with `DescribeChangeSetInput` and `DescribeChangeSetOutput` types, along with internal error types for handling failures. It is used to retrieve detailed information about a specific change set, such as its status, associated stack, and the changes it includes.",
      "description_length": 405,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetTemplate",
      "library": "aws-cloudformation",
      "description": "This module handles retrieving AWS CloudFormation templates by defining input and output types for the operation, along with functions to convert between HTTP requests/responses and native OCaml types. It works with CloudFormation stack identifiers as input and returns template data along with metadata. Use this module to fetch existing CloudFormation templates programmatically for inspection or reuse in deployment workflows.",
      "description_length": 429,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetTemplateSummary",
      "library": "aws-cloudformation",
      "description": "This module handles retrieving and parsing template summaries from AWS CloudFormation. It works with input and output types specific to the `GetTemplateSummary` operation, including structured error handling for failed responses. It is used to validate templates, extract metadata, and inspect template parameters before stack creation or updates.",
      "description_length": 347,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.RecordHandlerProgress",
      "library": "aws-cloudformation",
      "description": "This module handles the progress reporting for AWS CloudFormation resource handlers. It provides functions to convert input data into signed HTTP requests and parse responses or errors from the service. It works with CloudFormation's internal error types and structured input for progress updates.",
      "description_length": 297,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeType",
      "library": "aws-cloudformation",
      "description": "This module handles describing an AWS CloudFormation type by converting input parameters into an HTTP request and parsing the response. It works with `DescribeTypeInput` and `DescribeTypeOutput` types, along with internal error types for handling failures. It is used to retrieve information about registered CloudFormation extension types, such as their schema and configuration.",
      "description_length": 380,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListTypeRegistrations",
      "library": "aws-cloudformation",
      "description": "This module handles listing type registrations in AWS CloudFormation by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML error responses. Concrete use cases include querying registered resource types and handling paginated results from CloudFormation's API.",
      "description_length": 398,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles listing stack instances in AWS CloudFormation by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the `ListStackInstances` operation, along with error types defined in the CloudFormation API. It is used to query existing stack instances across accounts and regions for a given stack set.",
      "description_length": 377,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListImports",
      "library": "aws-cloudformation",
      "description": "This module handles the AWS CloudFormation `ListImports` API call, converting inputs to HTTP requests and parsing outputs or errors from responses. It works with `ListImportsInput` and `ListImportsOutput` types, along with internal error types for handling CloudFormation-specific failures. It is used to retrieve the imports associated with a specific CloudFormation stack, typically when managing cross-stack references or resource dependencies.",
      "description_length": 447,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackEvents",
      "library": "aws-cloudformation",
      "description": "This module handles describing stack events for a given AWS CloudFormation stack by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML responses. Concrete use cases include retrieving event logs for monitoring stack operations and diagnosing deployment issues.",
      "description_length": 399,
      "index": 290,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeTypeRegistration",
      "library": "aws-cloudformation",
      "description": "This module handles the conversion of inputs and outputs for an AWS CloudFormation type registration description call, encoding requests into HTTP queries and decoding responses. It works with input and output types specific to describing a type registration, along with internal error types for handling failures. It is used when querying the status or details of a CloudFormation type registration in AWS.",
      "description_length": 407,
      "index": 291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.SignalResource",
      "library": "aws-cloudformation",
      "description": "This module handles signaling resources in AWS CloudFormation by providing functions to construct and interpret HTTP requests for resource signaling operations. It works with `SignalResourceInput` to send signals to CloudFormation stacks, typically used to indicate success or failure of resource creation during stack updates. The module encodes inputs into signed HTTP requests and decodes responses, handling errors specific to the CloudFormation service.",
      "description_length": 458,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateTerminationProtection",
      "library": "aws-cloudformation",
      "description": "This module handles updating termination protection settings for AWS CloudFormation stacks by providing functions to construct and interpret HTTP requests and responses. It works with input and output types specific to termination protection updates, along with error types returned by the AWS API. Use this module when you need to programmatically enable or disable termination protection for a CloudFormation stack, ensuring safe handling of request signing, encoding, and response parsing.",
      "description_length": 492,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResource",
      "library": "aws-cloudformation",
      "description": "This module handles describing an individual resource within an AWS CloudFormation stack by translating native OCaml types to HTTP requests and parsing responses. It works with input and output types specific to the `DescribeStackResource` operation, along with internal error types for handling failures. Concrete use cases include querying the current state of a specific stack resource and decoding the result or error response from AWS.",
      "description_length": 440,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteStack",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of AWS CloudFormation stacks by providing functions to construct and interpret HTTP requests and responses. It works with `DeleteStackInput` to specify stack deletion parameters and returns no output on success, using `error` to capture failure details. Concrete use cases include programmatically removing infrastructure stacks and handling AWS-specific errors like invalid stack states or permissions issues.",
      "description_length": 443,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStacks",
      "library": "aws-cloudformation",
      "description": "This module handles describing AWS CloudFormation stacks by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the DescribeStacks operation, including encoded query parameters and XML responses. Concrete use cases include querying stack details like status, resources, and metadata from AWS CloudFormation.",
      "description_length": 374,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.StopStackSetOperation",
      "library": "aws-cloudformation",
      "description": "This module handles stopping an in-progress stack set operation in AWS CloudFormation by defining the input and output types, HTTP serialization, and error parsing for the API call. It works directly with the `StopStackSetOperationInput` type to specify the operation ID and account target, and processes responses into a unit result or structured error. Concrete use cases include canceling stack set updates or deletions across multiple accounts when manual intervention is required.",
      "description_length": 485,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.SetStackPolicy",
      "library": "aws-cloudformation",
      "description": "This module handles setting stack policies for AWS CloudFormation stacks by converting native inputs into HTTP requests and parsing responses. It works with `SetStackPolicyInput` to configure policy parameters and communicates with the CloudFormation service using signed HTTP requests. Concrete use cases include applying resource protection rules to running stacks and restricting update operations based on defined policies.",
      "description_length": 427,
      "index": 298,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListTypes",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation types by converting input parameters into signed HTTP requests and parsing responses into structured outputs or errors. It works with `ListTypesInput` and `ListTypesOutput` data types, along with internal error types for handling AWS-specific failures. It is used to query available CloudFormation resource types and their registration status within an AWS account.",
      "description_length": 412,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackResources",
      "library": "aws-cloudformation",
      "description": "This module handles listing resources associated with a specific AWS CloudFormation stack. It provides functions to convert input parameters into an HTTP request and parse the response or errors from the AWS service. The module works directly with `ListStackResourcesInput` and `ListStackResourcesOutput` types, along with internal error types for precise error handling.",
      "description_length": 371,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.EstimateTemplateCost",
      "library": "aws-cloudformation",
      "description": "This module handles estimating the cost of an AWS CloudFormation template by converting input parameters into an HTTP request and parsing the resulting response. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML error responses. It is used to send a cost estimation request to AWS and interpret the service's response or errors.",
      "description_length": 398,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.SetTypeDefaultVersion",
      "library": "aws-cloudformation",
      "description": "This module sets the default version for a CloudFormation type. It handles requests to update the default version of a registered CloudFormation extension, such as a resource type or module. The module works with `SetTypeDefaultVersionInput` to specify the type and version, and it produces no output on success.",
      "description_length": 312,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles updating stack instances across specified accounts and regions in AWS CloudFormation. It provides functions to convert input parameters into an HTTP request and parse responses or errors from the service. Use this module to propagate updated stack set configurations to target environments.",
      "description_length": 310,
      "index": 303,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DeregisterType",
      "library": "aws-cloudformation",
      "description": "This module handles the deregistration of CloudFormation types by providing functions to construct and process HTTP requests for type removal. It works with `DeregisterTypeInput` to specify which type to deregister and returns no output on success, using internal error types to report failures. Concrete use cases include removing custom resource providers or outdated type versions from a CloudFormation registry.",
      "description_length": 415,
      "index": 304,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types",
      "library": "aws-cloudformation",
      "description": "This module provides serialization, parsing, and format conversion operations for structured AWS CloudFormation data types, focusing on bidirectional transformations between OCaml representations and wire formats (JSON, XML, query parameters). It works with enumerations, records, and variants modeling infrastructure metadata like resource attributes, change tracking details, stack drift states, deployment configurations, and error codes. These capabilities enable programmatic management of CloudFormation stacks, resource lifecycle tracking, and integration with deployment pipelines through precise API request/response handling.",
      "description_length": 635,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStack",
      "library": "aws-cloudformation",
      "description": "This module handles updating AWS CloudFormation stacks by defining input and output types for the operation, along with error handling specific to stack updates. It provides functions to convert native input types to HTTP requests and parse HTTP responses into outputs or errors, ensuring correct encoding and decoding of API calls. Concrete use cases include initiating stack updates with new template configurations and handling responses or errors from the AWS CloudFormation service.",
      "description_length": 487,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackSetOperation",
      "library": "aws-cloudformation",
      "description": "This module handles describing a StackSet operation in AWS CloudFormation by converting input parameters into an HTTP request and parsing the response into a structured output or error. It works with input and output types specific to the DescribeStackSetOperation, along with internal error types for handling failures. Concrete use cases include querying the status of a StackSet operation across multiple accounts and regions, and handling operation-specific errors based on the HTTP response.",
      "description_length": 496,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStacks",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation stacks by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation API, including encoded query parameters and XML responses. Concrete use cases include querying stack summaries with custom filters and handling paginated results from AWS.",
      "description_length": 373,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ValidateTemplate",
      "library": "aws-cloudformation",
      "description": "This module validates AWS CloudFormation templates by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It handles template validation requests by encoding inputs into query format, setting appropriate action and version parameters, and determining the correct endpoint using the provided service name. The module decodes HTTP responses into either validated template outputs or specific CloudFormation errors based on the response content and status code.",
      "description_length": 510,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSets",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation stack sets by defining input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works with structured data types representing CloudFormation stack sets, including pagination and filtering parameters. It is used to query existing stack sets across accounts and regions, supporting automation workflows that manage multi-account infrastructure.",
      "description_length": 455,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetStackPolicy",
      "library": "aws-cloudformation",
      "description": "This module handles retrieving AWS CloudFormation stack policies by defining input and output types for the operation, along with functions to serialize requests and deserialize responses. It works with CloudFormation-specific data structures like `GetStackPolicyInput` and `GetStackPolicyOutput`. Use this module to fetch the current policy of a CloudFormation stack, typically to enforce governance rules or inspect resource protection settings.",
      "description_length": 447,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResources",
      "library": "aws-cloudformation",
      "description": "This module handles describing AWS CloudFormation stack resources by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML responses. Concrete use cases include retrieving resource details for a given stack, handling request signing, and decoding service-specific errors.",
      "description_length": 407,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackDrift",
      "library": "aws-cloudformation",
      "description": "This module handles detecting stack drift in AWS CloudFormation by providing functions to construct and interpret HTTP requests and responses for the `DetectStackDrift` API operation. It works with input and output types specific to stack drift detection, including stack identifiers and drift detection results. Concrete use cases include initiating drift checks on deployed stacks and processing the resulting status and drift information from AWS.",
      "description_length": 450,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles the creation of CloudFormation stack instances across multiple accounts and regions. It provides functions to convert input parameters into signed HTTP requests and parse responses or errors from AWS. The module works with input and output types specific to the CloudFormation API, including stack set names, account IDs, and region lists.",
      "description_length": 359,
      "index": 314,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 316,
    "meaningful_modules": 315,
    "filtered_empty_modules": 1,
    "retention_rate": 0.9968354430379747
  },
  "statistics": {
    "max_description_length": 635,
    "min_description_length": 209,
    "avg_description_length": 393.81904761904764,
    "embedding_file_size_mb": 4.5647478103637695
  }
}