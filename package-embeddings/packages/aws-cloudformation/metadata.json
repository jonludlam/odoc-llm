{
  "package": "aws-cloudformation",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 316,
  "creation_timestamp": "2025-07-16T00:04:01.600149",
  "modules": [
    {
      "module_path": "Aws_cloudformation.Types.InvalidStateTransitionException",
      "library": "aws-cloudformation",
      "description": "This module handles the `InvalidStateTransitionException` error type, providing functions to construct, parse, and serialize the exception for use in API requests and responses. It works with unit type values, converting them to and from query parameters, JSON, and association lists. Concrete use cases include handling invalid state transitions during cloud formation stack operations, such as when a stack is in an unexpected state for a given action.",
      "description_length": 454,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a CloudFormation change set description, including metadata like creation time, execution status, and associated stack details. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. Use this module when retrieving and processing change set information from AWS CloudFormation, particularly for inspecting pending changes before deployment.",
      "description_length": 463,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetNotEmptyException",
      "library": "aws-cloudformation",
      "description": "This module defines a minimal exception type used to signal that a stack set is not empty, typically during deletion operations. It provides basic serialization and deserialization functions to convert the exception to and from JSON and query formats. It is used in error handling workflows when interacting with AWS CloudFormation stack sets via the API.",
      "description_length": 355,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackResourcesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing stack resources in AWS CloudFormation. It provides operations to create, parse, and serialize stack resource summaries along with an optional next token for pagination. It works directly with XML, JSON, and query parameter representations for CloudFormation API responses.",
      "description_length": 325,
      "index": 3,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_cloudformation.Types.ContinueUpdateRollbackOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling the output of a continue update rollback operation in AWS CloudFormation. It provides functions to construct, parse, and serialize the output as a query or JSON, primarily used in API response handling. The unit type indicates that the operation does not return meaningful data beyond success or failure.",
      "description_length": 374,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetType",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the type of change set in AWS CloudFormation, with specific values for create, update, and import operations. It provides functions to convert between string representations and the variant type, along with serialization and deserialization functions for JSON and XML formats. It is used when managing change sets in CloudFormation stacks, such as during creation, modification, or import workflows.",
      "description_length": 459,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing the output of a stack update operation in AWS CloudFormation. It includes functions to construct, parse, and serialize the output, which contains an optional stack identifier. Use this module to handle responses when updating infrastructure stacks programmatically.",
      "description_length": 317,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CancelUpdateStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for canceling a stack update in AWS CloudFormation. It handles parsing and converting stack update cancellation requests between XML, JSON, and internal OCaml representations. It is used when sending a `CancelUpdateStack` API request, ensuring correct formatting of the stack name and optional client request token.",
      "description_length": 383,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of a change set deletion operation in AWS CloudFormation. It defines a unit type and functions to construct, parse, and serialize the output for use in API requests and responses. It is used to represent the result of deleting a change set, primarily for internal handling and response processing.",
      "description_length": 328,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilters",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, formatting, and querying AWS CloudFormation stack instance filters. It works with lists of `StackInstanceFilter.t` values, converting them to and from XML, JSON, and query string formats. It is used when managing stack instances across multiple accounts and regions, particularly in operations like listing or filtering by specific attributes.",
      "description_length": 372,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TransformsList",
      "library": "aws-cloudformation",
      "description": "Handles transformations applied to AWS CloudFormation templates by providing functions to convert string lists to and from JSON and query formats. Works with string lists representing transformation names. Useful for serializing and deserializing transformation data when interacting with AWS CloudFormation APIs.",
      "description_length": 313,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationInProgressException",
      "library": "aws-cloudformation",
      "description": "This module defines a minimal exception type to represent in-progress operations, with a unit type and associated conversion functions. It provides functions to construct, parse, and serialize the exception to query parameters or JSON. Use this when handling or signaling that an operation is already in progress, typically in API response handling or state validation.",
      "description_length": 369,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RetainResources",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of a list of string resources, typically used to specify which resources to retain during AWS CloudFormation stack operations. It provides functions to convert between XML, JSON, and query string formats, ensuring compatibility with AWS API requests and responses. Use this module when managing CloudFormation stack updates that require explicit resource retention.",
      "description_length": 423,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackDriftDetectionStatusOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a stack drift detection status request in AWS CloudFormation. It includes fields for stack identifiers, drift status, detection status, timestamps, and metadata, with operations to construct, parse, and serialize the data. Use cases include monitoring stack consistency and determining drift causes in deployed infrastructure.",
      "description_length": 390,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AutoDeployment",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for configuring automatic deployment settings in cloud formation stacks, including whether deployments are enabled and whether stacks should be retained when an account is removed. It provides functions to construct, serialize, and deserialize these settings to and from JSON, query parameters, and XML. These operations support integrating deployment policies with AWS CloudFormation APIs and configuration management tools.",
      "description_length": 462,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LimitExceededException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a request exceeds service limits. It provides operations to create, parse, and convert unit values to query parameters or JSON, primarily used in error handling scenarios when interacting with AWS services. Concrete use cases include signaling limit exceeded errors in API responses without carrying additional data.",
      "description_length": 398,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LogicalResourceIds",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string identifiers representing logical resources in cloud formation templates. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML nodes. Use this module when managing resource dependencies or tracking logical IDs during stack operations.",
      "description_length": 324,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RegisterTypeOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a CloudFormation resource type registration, primarily containing an optional registration token. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when managing custom resource type registrations in AWS CloudFormation to retrieve and handle registration tokens programmatically.",
      "description_length": 420,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ValidateTemplateInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for validating AWS CloudFormation templates using either a template body or a URL. It provides functions to construct, parse, and serialize the validation input for use with AWS API requests. Concrete use cases include validating JSON-formatted templates before deployment or referencing templates stored in S3 via a URL.",
      "description_length": 358,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of an AWS CloudFormation stack set, including fields such as name, ID, status, and drift information. It provides functions to construct, parse, and serialize stack set summaries to and from JSON, query format, and XML. Use this module when managing or inspecting CloudFormation stack sets, particularly for retrieving metadata and operational status in automated workflows or monitoring tools.",
      "description_length": 454,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListChangeSetsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing change sets in AWS CloudFormation, including the stack name and an optional token for pagination. It provides functions to construct, parse, and serialize the input for use in API requests. Use this module when interacting with CloudFormation's ListChangeSets operation to retrieve change sets associated with a specific stack.",
      "description_length": 379,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilterName",
      "library": "aws-cloudformation",
      "description": "This module defines a single enumerated type `t` with one value `DETAILED_STATUS` and provides bidirectional conversions between strings and this type. It includes functions for parsing, serialization to JSON and query formats, and string conversion. This module is used to specify filter criteria when querying AWS CloudFormation stack instances, particularly for filtering by detailed status information.",
      "description_length": 406,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeRegistrationsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for listing type registrations in a cloud formation service. It includes fields to filter by type, name, ARN, and registration status, along with pagination controls. The module provides functions to construct, parse, and serialize the input for use in API requests, specifically supporting JSON and query string formats.",
      "description_length": 387,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackResourceDriftOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of detecting resource drift in a CloudFormation stack. It provides functions to construct, parse, and serialize a `StackResourceDrift` result, specifically used when querying AWS for whether a resource's current state differs from its defined template. The module works directly with XML, JSON, and query string formats for input and output serialization.",
      "description_length": 386,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LoggingConfig",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for configuring logging in AWS CloudFormation, specifically capturing the role ARN and log group name. It provides functions to construct, serialize, and convert logging configurations to and from JSON and query formats. Use this module when setting up or modifying CloudFormation stacks that require custom logging destinations.",
      "description_length": 366,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a type description in a cloud formation service, containing fields such as ARN, type name, version info, and metadata. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when retrieving and handling type details from a cloud formation registry, such as during deployment or inspection workflows.",
      "description_length": 437,
      "index": 25,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeAccountLimitsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for describing account limits in AWS CloudFormation. It includes a `next_token` field for pagination and provides functions to create, parse, and serialize the input for API requests. It is used to handle paginated responses when querying account-specific resource limits in CloudFormation.",
      "description_length": 330,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegisterTypeInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for registering a CloudFormation resource type. It handles data types like strings, optional configurations, and JSON or XML parsing for interactions with AWS services. It is used to construct and process requests when registering custom resource providers in AWS CloudFormation.",
      "description_length": 347,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountLimitList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of AWS CloudFormation account limits, providing functions to convert these lists to and from JSON and query formats. It supports parsing from XML nodes and constructing empty lists. Use this module when interacting with AWS CloudFormation APIs that require or return account limit data, such as retrieving or setting account-level resource limits.",
      "description_length": 373,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecuteChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for executing a change set in AWS CloudFormation, including the change set name, optional stack name, and optional client request token. It provides functions to construct, parse, and serialize the input for use in API requests, specifically supporting operations like `execute_change_set`. The module works directly with XML, JSON, and query string formats for integration with AWS SDK components.",
      "description_length": 438,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the summary of a stack set operation result, including fields like account, region, status, and organizational unit ID. It provides functions to construct, parse, and serialize these summaries to and from JSON and query formats. It is used to track the outcome of AWS CloudFormation stack set operations across multiple accounts and regions.",
      "description_length": 391,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for deleting CloudFormation stack instances across specified accounts and regions. It includes functions to construct, parse, and serialize the input for API requests, supporting precise control over deployment targets, operation preferences, and stack retention. Concrete use cases include managing multi-account, multi-region stack instance deletions with customizable operation behavior.",
      "description_length": 456,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ValidateTemplateOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for the output of a CloudFormation template validation, including parameters, description, capabilities, and declared transforms. It provides functions to construct, parse, and serialize the structure to query or JSON formats. Use this when handling responses from AWS CloudFormation's template validation API to inspect template properties and requirements.",
      "description_length": 395,
      "index": 32,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListExportsOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of listing AWS CloudFormation exports, including a list of export objects and an optional pagination token. It provides functions to construct, parse, and serialize the structure to query parameters or JSON format. Use this module when retrieving and processing exported resources from AWS CloudFormation, particularly for paginated results.",
      "description_length": 402,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSet",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a CloudFormation stack set, including fields for configuration such as template body, parameters, tags, and execution role. It provides functions to construct, serialize, and parse stack set data for use in API requests and responses. Use this module when managing multi-account, multi-region CloudFormation deployments through AWS's API.",
      "description_length": 388,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a change set creation in AWS CloudFormation, consisting of optional `id` and `stack_id` fields. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. Use this module when managing infrastructure changes programmatically, such as tracking change set identifiers for deployment or rollback operations.",
      "description_length": 423,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceToImport",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for importing resources into an AWS CloudFormation stack, consisting of the resource type, logical ID, and identifier properties. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when programmatically managing CloudFormation resource imports using specific identifier details.",
      "description_length": 391,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifiers",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string-based resource identifiers for AWS CloudFormation operations. It provides functions to convert these lists to and from XML, JSON, and query parameters, enabling seamless integration with AWS API requests and responses. Use this module when working with CloudFormation resource identifiers in API calls or event data parsing.",
      "description_length": 360,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStacksOutput",
      "library": "aws-cloudformation",
      "description": "This module represents the output of a list stacks operation in AWS CloudFormation. It includes a list of stack summaries and an optional token for pagination. It provides functions to construct, parse, and convert the output to query parameters or JSON format.",
      "description_length": 261,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationResultsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing results of a stack set operation, including parameters like stack set name, operation ID, pagination token, and maximum results. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include querying AWS CloudFormation for the status of stack set operations and handling paginated responses.",
      "description_length": 400,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, querying, and serializing lists of stack resource summaries from AWS CloudFormation. It provides functions to convert between XML, JSON, and internal data representations of these summaries. Use it when processing CloudFormation stack resource data during infrastructure management or monitoring workflows.",
      "description_length": 335,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourcesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing stack resources in a CloudFormation service. It provides functions to construct, parse, and serialize stack resource data, which is represented as a list of resource details. Use this module when retrieving or processing information about AWS CloudFormation stack resources in API responses.",
      "description_length": 336,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceAttribute",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing CloudFormation resource attributes such as Properties, Metadata, and Policies. It includes functions to convert between strings and the variant type, along with serialization to and from JSON, query parameters, and XML. These capabilities are used when processing CloudFormation templates to handle attribute-specific logic during resource provisioning and updates.",
      "description_length": 425,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecutionStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the execution status of cloud formation operations, with specific values like `EXECUTE_IN_PROGRESS` and `EXECUTE_COMPLETE`. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON, query parameters, and XML. These functions are used to interpret and format execution status values when interacting with AWS CloudFormation APIs or processing deployment state information.",
      "description_length": 486,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationIdAlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton type `t` representing an exception raised when a duplicate operation ID is encountered in cloud formation operations. It provides functions to construct, parse, and convert the exception data to query parameters, JSON, or other structured formats. Use this module to handle or propagate errors related to operation ID conflicts during stack management.",
      "description_length": 384,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftInformation",
      "library": "aws-cloudformation",
      "description": "This module represents stack drift information in AWS CloudFormation, tracking the drift status and the last check timestamp. It provides functions to construct, parse, and serialize this information for API interactions. Use cases include checking whether a stack's actual state differs from its expected template configuration and recording when drift checks occur.",
      "description_length": 367,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling operation not found errors in AWS CloudFormation. It provides operations to convert unit values to query parameters, JSON objects, and back from JSON, always resulting in a unit value. This is used to represent and serialize empty error responses where no operation was found.",
      "description_length": 346,
      "index": 46,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.SetTypeDefaultVersionOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of API responses related to setting a default version for CloudFormation types. It works with unit type values, converting them to and from JSON and query string formats. Concrete use cases include processing AWS CloudFormation API calls that require version updates or status checks on type registrations.",
      "description_length": 364,
      "index": 47,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Tag",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling key-value tags in AWS CloudFormation, with operations to create, parse, and convert tags to and from JSON and query formats. It works with string-based keys and values, structured as an XML node list or JSON object. Concrete use cases include managing metadata tags for CloudFormation stacks during deployment or resource tagging operations.",
      "description_length": 391,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OnFailure",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` with values `DO_NOTHING`, `ROLLBACK`, and `DELETE`, representing possible actions on failure in a CloudFormation stack operation. It provides functions to convert between string representations and the enumerated type values, as well as serialization and deserialization to JSON and query formats. These operations are used when configuring or interpreting CloudFormation stack creation or update behaviors in AWS deployments.",
      "description_length": 470,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for listing stack instances in a CloudFormation stack set. It includes functions to construct, serialize, and parse the input parameters, supporting filtering by account, region, and custom criteria. Concrete use cases include querying specific stack instance deployments across multiple accounts or regions with pagination control.",
      "description_length": 398,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierProperties",
      "library": "aws-cloudformation",
      "description": "This module represents resource identifier properties as a hash table mapping string keys to string values. It provides functions to convert these properties to AWS query format, JSON, and back from JSON. Use this module when working with CloudFormation resource identifiers that need to be serialized or deserialized for API requests or responses.",
      "description_length": 348,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDetail",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing detailed information about an AWS CloudFormation stack resource, including identifiers, status, timestamps, and metadata. It provides functions to construct, serialize, and deserialize instances of this structure for use in querying and processing CloudFormation resource details. Use cases include tracking resource state changes, auditing resource configurations, and detecting drift in deployed stacks.",
      "description_length": 455,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EvaluationType",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` with two constructors, `Static` and `Dynamic`, representing evaluation types in AWS CloudFormation. It includes functions to convert between strings and the `t` type, along with serialization and deserialization functions for JSON, XML, and query parameters. This module is used to handle evaluation type values when interacting with AWS CloudFormation APIs, such as parsing responses or constructing requests.",
      "description_length": 461,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Stack",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing an AWS CloudFormation stack with detailed metadata and configuration. It provides functions to construct, serialize, and deserialize stack instances, supporting operations like converting to and from JSON, query parameters, and XML parsing. Concrete use cases include managing stack state during deployment, tracking stack drift, and handling rollback configurations in infrastructure-as-code workflows.",
      "description_length": 453,
      "index": 54,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreatedButModifiedException",
      "library": "aws-cloudformation",
      "description": "This module defines a minimal exception type used to signal that a resource was created but subsequently modified. It provides operations to construct, parse, and serialize the exception in various formats, including JSON and query strings. It is typically used in error handling during AWS CloudFormation stack operations to indicate partial success states.",
      "description_length": 358,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a stack instance is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. It is used in error handling scenarios where the absence of a stack instance needs to be represented uniformly across API interactions.",
      "description_length": 363,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EstimateTemplateCostInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for estimating the cost of an AWS CloudFormation template. It includes functions to construct, parse, and serialize the input containing optional template body or URL and parameters. It is used to prepare and process cost estimation requests for CloudFormation stacks using either inline templates or S3-stored templates.",
      "description_length": 387,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.NotificationARNs",
      "library": "aws-cloudformation",
      "description": "This module handles list-based data structures of string ARNs for notification purposes. It provides functions to convert ARNs to query parameters, JSON format, and back, as well as parsing from XML nodes. It is used when configuring or retrieving notification targets in AWS CloudFormation operations.",
      "description_length": 302,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecuteChangeSetOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of the output from executing a CloudFormation change set. It provides functions to convert unit values to query parameters, JSON objects, and back, ensuring compatibility with AWS API expectations. Use this when interacting with AWS CloudFormation to apply or inspect changesets programmatically.",
      "description_length": 354,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.NameAlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling the `NameAlreadyExistsException` in AWS CloudFormation. It provides operations to create an instance, parse from a value, and convert to query, JSON, and back from JSON formats. This is used specifically to represent and manage exceptions when attempting to create a resource with a name that already exists in the service.",
      "description_length": 393,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for updating a CloudFormation stack. It includes functions to construct, parse, and serialize the input parameters such as template body, stack policy, and resource types. It is used when initiating stack updates via the AWS CloudFormation API, supporting both direct template input and URL-based templates.",
      "description_length": 373,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a stack set is not found. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. It is used in error handling scenarios where the absence of a stack set needs to be represented uniformly across different data interchange formats.",
      "description_length": 370,
      "index": 62,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.SignalResourceInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for signaling the status of a resource in a cloud formation stack, including the stack name, logical resource ID, unique ID, and status. It provides functions to construct the structure, parse it from XML, convert it to query parameters or JSON, and create it from JSON input. It is used to communicate resource signal states to AWS CloudFormation during stack operations.",
      "description_length": 409,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, querying, and serializing lists of stack instance summaries. It provides functions to convert between XML, JSON, and internal data representations for stack instance summary lists. Use this module when working with AWS CloudFormation stack instance summary collections in API requests or responses.",
      "description_length": 327,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for holding the output of a CloudFormation template retrieval, including the template body and available stages. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when interacting with AWS CloudFormation's `GetTemplate` API to handle template responses in a structured way.",
      "description_length": 389,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateSummaryInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to retrieve a CloudFormation template summary. It includes fields for specifying the template body, URL, stack name, or stack set name, supporting precise template identification. Operations include creating input objects, parsing XML data, and converting to query or JSON formats for API requests.",
      "description_length": 361,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeprecatedStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` with two variants, `LIVE` and `DEPRECATED`, representing the status of a CloudFormation resource. It provides direct conversions between strings and the enumerated type, along with serialization and deserialization functions for JSON and XML. It is used to handle status values when interacting with AWS CloudFormation APIs, such as parsing API responses or constructing requests.",
      "description_length": 411,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Scope",
      "library": "aws-cloudformation",
      "description": "This module defines a type alias for a list of resource attributes and provides functions to convert between XML, JSON, and query formats. It includes operations for parsing XML nodes into resource attribute lists, serializing to JSON or query parameters, and constructing empty values. It is used when handling AWS CloudFormation resource attribute scopes in API requests and responses.",
      "description_length": 387,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegionList",
      "library": "aws-cloudformation",
      "description": "This module handles list operations for AWS region strings, including parsing from XML nodes, converting to query parameters, and serializing to and from JSON. It works with lists of `Aws.BaseTypes.String.t` values, representing AWS region names. Concrete use cases include processing region lists in CloudFormation templates, converting region data for API requests, and parsing responses containing region information.",
      "description_length": 420,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListChangeSetsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing AWS CloudFormation change sets. It provides operations to create, parse, and serialize a list of change set summaries along with an optional pagination token. The module works directly with XML nodes, JSON values, and AWS query parameters for data interchange and API communication.",
      "description_length": 335,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, formatting, and conversion of resource identifier summaries from AWS CloudFormation responses. It works with lists of `ResourceIdentifierSummary` records, transforming them between XML, JSON, and query parameter formats. It is used when processing output from CloudFormation operations like `ListStackResources` to extract and manipulate resource identifiers in different serialization formats.",
      "description_length": 423,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackSetDriftInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for detecting drift in a CloudFormation stack set. It includes fields for the stack set name, optional operation preferences, and an optional operation ID, along with functions to construct, parse, and serialize the input for API requests. It is used when initiating a stack set drift detection operation, where the data is formatted for query or JSON-based AWS SDK interactions.",
      "description_length": 419,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for describing an AWS CloudFormation change set, including the change set name, optional stack name, and optional pagination token. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include querying details of a specific change set by name and handling paginated results when retrieving large change sets.",
      "description_length": 406,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a stack creation operation in AWS CloudFormation, containing an optional `stack_id`. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when handling responses from CloudFormation stack creation requests, particularly to extract and manipulate the resulting stack identifier.",
      "description_length": 415,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of a CloudFormation stack set operation, including its ID, action type, status, and timestamps. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. It is used to track and manage the lifecycle of stack set operations in AWS CloudFormation.",
      "description_length": 360,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, converting, and manipulating lists of CloudFormation stack set summaries. It provides operations to convert summaries to JSON or query format, parse them from XML nodes, and construct or extract summary lists from JSON. It is used when managing CloudFormation stack sets, particularly for listing and inspecting summary metadata across accounts and regions.",
      "description_length": 386,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourcesToImport",
      "library": "aws-cloudformation",
      "description": "This module handles lists of resource imports for AWS CloudFormation, providing operations to convert between XML, JSON, and query formats. It works with `ResourceToImport.t` lists, enabling structured parsing and serialization for API interactions. Use this module when importing existing resources into a CloudFormation stack, particularly for handling batched import requests programmatically.",
      "description_length": 396,
      "index": 77,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_cloudformation.Types.TokenAlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton type `t` representing an exception raised when a token already exists. It includes functions to construct, parse, and convert the exception to query parameters, JSON, or from JSON. Use this module to handle duplicate token errors in API requests, particularly when interacting with AWS CloudFormation services.",
      "description_length": 342,
      "index": 78,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackInstanceOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a CloudFormation stack instance description, containing an optional `StackInstance` value. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when retrieving details about a specific stack instance in a CloudFormation deployment.",
      "description_length": 369,
      "index": 79,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing stack sets in AWS CloudFormation, including optional parameters like next token, max results, and status. It provides functions to construct, serialize, and parse this input for use in API requests. Concrete use cases include filtering stack sets by status and paginating through large result sets.",
      "description_length": 350,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Export",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing exported values in AWS CloudFormation, specifically capturing the exporting stack ID, name, and value of an export. It provides functions to construct, serialize, and deserialize this structure to and from XML, JSON, and query formats. It is used when managing cross-stack references, allowing retrieval and manipulation of exported output values from CloudFormation stacks.",
      "description_length": 428,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing stack instances in AWS CloudFormation. It provides operations to create, parse, and serialize a response containing stack instance summaries and an optional next token for pagination. The module works with XML, JSON, and query string formats, enabling seamless integration with AWS SDK components.",
      "description_length": 339,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Visibility",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` with constructors `PUBLIC` and `PRIVATE`, representing visibility states. It provides bidirectional conversions between strings and the `t` type, along with serialization and deserialization functions for JSON, XML, and query parameters. This module is used to handle visibility settings in AWS CloudFormation resource definitions, ensuring correct string representations during API interactions.",
      "description_length": 447,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing the possible statuses of a CloudFormation change set, such as `CREATE_PENDING`, `CREATE_COMPLETE`, and `FAILED`. It provides functions to convert between string representations and the enumerated values, along with serialization and deserialization routines for JSON, XML, and query parameters. These operations are used when interacting with AWS CloudFormation APIs to interpret and construct change set status values in requests and responses.",
      "description_length": 502,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterConstraints",
      "library": "aws-cloudformation",
      "description": "This module defines constraints for CloudFormation parameters, specifically restricting allowed values. It provides functions to construct, serialize, and parse these constraints to and from XML, JSON, and query formats. It is used when defining CloudFormation templates to enforce valid parameter inputs during stack creation or updates.",
      "description_length": 338,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for creating a CloudFormation stack set, including required and optional fields like stack name, description, template source, parameters, and deployment settings. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include configuring multi-account stack deployments with specific permissions, templates, and parameter overrides.",
      "description_length": 429,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Exports",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of CloudFormation export lists. It provides functions to convert between XML, JSON, and query formats and an internal list type representing CloudFormation exports. It is used when retrieving or sending export data to and from AWS CloudFormation APIs, particularly for stack outputs.",
      "description_length": 341,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeploymentTargets",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying deployment targets in AWS CloudFormation, including accounts and organizational unit IDs. It provides functions to create, parse, and serialize deployment target configurations for use in API requests. Concrete use cases include configuring stack set deployments across multiple AWS accounts or organizational units.",
      "description_length": 368,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AlreadyExistsException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type exception used to represent an \"AlreadyExists\" error in the context of cloud formation operations. It includes functions to construct the exception, parse it from various input forms, and convert it to query or JSON formats. This exception is typically used to signal that a resource being created already exists, providing a standardized way to handle such errors in API responses.",
      "description_length": 414,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftInformation",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the drift status of a CloudFormation stack resource, including the drift status and an optional timestamp of the last check. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. Concrete use cases include tracking configuration drift in deployed resources and determining when a drift check was last performed.",
      "description_length": 421,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOperationOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing a CloudFormation stack set operation. It provides functions to create, parse, and serialize the operation data, which includes an optional `StackSetOperation` record. Use this module when retrieving details about a specific stack set operation in AWS CloudFormation, particularly for handling responses from the `DescribeStackSetOperation` API call.",
      "description_length": 394,
      "index": 91,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StaleRequestException",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` representing an empty value, used to handle stale request exceptions in AWS CloudFormation. It includes functions to construct, parse, and convert the value to query, JSON, and other formats. Concrete use cases include signaling invalid or expired requests in API interactions.",
      "description_length": 308,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSource",
      "library": "aws-cloudformation",
      "description": "This module defines a sum type representing the possible sources of changes in a CloudFormation stack, such as resource references, parameter references, or direct modifications. It includes functions to convert between string representations and the enumerated type, as well as serialization and deserialization routines for JSON, query parameters, and XML. These operations support handling CloudFormation change sets and tracking the origin of configuration changes in deployed infrastructure.",
      "description_length": 496,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstance",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a CloudFormation stack instance with fields for identifiers, status, parameters, and metadata. It provides functions to construct, parse, and convert stack instances to and from XML, JSON, and query formats. Use this module when managing stack instances across multiple accounts and regions in AWS CloudFormation.",
      "description_length": 363,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of creating stack instances in AWS CloudFormation. It includes functions to construct, parse, and serialize the output, which contains an optional operation ID. Use this module when managing multi-account or multi-region stack deployments via AWS CloudFormation StackSets.",
      "description_length": 333,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles lists of change set summaries in AWS CloudFormation. It provides functions to parse XML input into change set summary lists, convert them to query parameters, and serialize to and from JSON. It is used when managing or retrieving summaries of change sets for CloudFormation stacks.",
      "description_length": 301,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateSummaryOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a CloudFormation template summary retrieval. It includes fields for template parameters, description, capabilities, resource types, and metadata, along with functions to construct, parse, and serialize the structure to query or JSON formats. It is used to process and inspect the summary information returned by the `GetTemplateSummary` API call.",
      "description_length": 410,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RequiresRecreation",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration with values `Never`, `Conditionally`, and `Always` to represent resource recreation requirements. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON, XML, and query parameters. It is used to determine whether a CloudFormation resource must be recreated during updates, based on property changes.",
      "description_length": 400,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateParameters",
      "library": "aws-cloudformation",
      "description": "Handles parsing, conversion, and serialization of CloudFormation template parameters. Works with XML nodes, JSON values, and query strings to manipulate parameter lists. Used when deploying or updating stacks with parameterized templates.",
      "description_length": 238,
      "index": 99,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Changes",
      "library": "aws-cloudformation",
      "description": "This module handles lists of change structures in AWS CloudFormation, providing direct conversions to and from XML, JSON, and query formats. It includes parsing from XML nodes and JSON input, as well as serialization for queries and JSON output. Use this module when processing CloudFormation change sets during stack updates or resource planning.",
      "description_length": 347,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of an AWS CloudFormation stack, including metadata such as stack name, creation and update times, status, and drift information. It provides functions to construct, serialize, and parse stack summaries from XML, JSON, and query formats. Use this module when retrieving or processing high-level stack information from AWS CloudFormation API responses.",
      "description_length": 410,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackEventsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for describing CloudFormation stack events, including optional stack name and pagination token. It provides functions to construct, serialize, and convert the input type to and from JSON and query formats. Use this module when configuring requests to retrieve CloudFormation stack event data, particularly for paginated results.",
      "description_length": 368,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceSignalStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` with two values, `SUCCESS` and `FAILURE`, representing the outcome of a resource signal in a cloud formation context. It includes functions to convert between strings and the `t` type, as well as serialization and deserialization routines for JSON, XML, and query parameters. This module is used to handle status signals from cloud resources during deployment or updates, ensuring correct interpretation and transmission of resource health states.",
      "description_length": 498,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of an AWS CloudFormation change set, including fields such as stack ID, change set ID, execution status, and creation time. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. It is used to manage and inspect pending or executed changes to CloudFormation stacks, such as tracking change set status or retrieving metadata for automation workflows.",
      "description_length": 465,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetStackPolicyInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for retrieving an AWS CloudFormation stack policy. It works with XML, JSON, and query string formats to convert between a stack name and a structured input type. Use this module when interacting with the CloudFormation API to fetch stack policies by name.",
      "description_length": 323,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing CloudFormation types, including optional filters like visibility, provisioning type, and deprecation status. It provides functions to construct, parse, and serialize the input for API requests, supporting pagination via `max_results` and `next_token`. Concrete use cases include querying CloudFormation type registries with specific constraints and handling paginated responses.",
      "description_length": 430,
      "index": 106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` representing the status of a CloudFormation stack set, with constructors `ACTIVE` and `DELETED`. It includes functions to convert between strings and the `t` type, as well as serialization and deserialization functions for JSON, query parameters, and XML. These operations are used when interacting with AWS CloudFormation APIs to manage and track stack set states.",
      "description_length": 416,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles lists of type summaries in AWS CloudFormation, providing functions to convert between XML, JSON, and query formats. It works with lists of `TypeSummary.t` records, which describe CloudFormation resource types. Use this module to serialize and deserialize type summary lists when interacting with CloudFormation APIs or processing responses.",
      "description_length": 360,
      "index": 108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of a stack set creation operation in AWS CloudFormation. It includes functions to construct, serialize, and deserialize the structure, primarily working with string and JSON types. It is used to handle responses from creating stack sets, enabling interaction with AWS services through query or JSON formats.",
      "description_length": 368,
      "index": 109,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling type not found errors in AWS CloudFormation. It includes operations for creating, parsing, and converting error values to query parameters, JSON, and back from JSON. Use this module when processing CloudFormation API responses that indicate missing types, allowing consistent error handling and serialization.",
      "description_length": 379,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Output",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing CloudFormation stack outputs, with optional fields like output key, value, description, and export name. It provides functions to construct, parse, and convert output objects to query parameters or JSON format. Use this module when managing CloudFormation stack outputs programmatically, such as retrieving exported values or generating output metadata for deployment tracking.",
      "description_length": 431,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationAction",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type `t` representing the possible actions that can be performed on AWS CloudFormation stack sets, including create, update, delete, and drift detection operations. It provides bidirectional conversions between the type and strings, as well as serialization to and from JSON and query formats. These functions are used when interacting with AWS CloudFormation APIs to specify or interpret stack set operation actions in a type-safe manner.",
      "description_length": 481,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListImportsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing imports in AWS CloudFormation, containing the export name and an optional next token for pagination. It provides functions to construct, parse, and serialize the input for API requests, specifically handling XML and JSON formats. Use this module when querying CloudFormation for resources that import a specific exported value, particularly in paginated responses.",
      "description_length": 416,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AllowedValues",
      "library": "aws-cloudformation",
      "description": "This module defines a list of string values used to specify allowed values in AWS CloudFormation templates. It provides functions to convert these values to and from JSON and query formats, ensuring proper serialization and deserialization during API interactions. Use this module when defining CloudFormation resource properties that require restricted string inputs.",
      "description_length": 368,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Outputs",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of CloudFormation output lists. It provides functions to convert between XML, JSON, and query formats, specifically working with lists of output records containing key-value pairs. Use this module when processing CloudFormation stack outputs in different data interchange formats.",
      "description_length": 353,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResources",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and querying of AWS CloudFormation stack resources. It operates on lists of `StackResource.t` values, supporting operations like converting to and from XML, JSON, and query parameters. It is used when retrieving or processing the list of resources in a CloudFormation stack, such as during status checks or resource audits.",
      "description_length": 379,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for creating CloudFormation stack instances across accounts and regions. It includes fields for specifying stack set names, target accounts, regions, parameter overrides, and operation preferences, with functions to construct, parse, and serialize the input for API requests. It is used to configure and deploy stack instances in multi-account or multi-region setups programmatically.",
      "description_length": 439,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilter",
      "library": "aws-cloudformation",
      "description": "This module defines a filter structure for stack instances, with optional name and values fields. It provides functions to construct, parse, and convert the structure to query parameters or JSON format. Use this when filtering stack instances by specific criteria in API requests or responses.",
      "description_length": 293,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeRegistrationOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a type registration description in AWS CloudFormation. It includes fields for registration progress status, description, and ARNs for the type and type version. Operations allow constructing instances, parsing XML responses, converting to query parameters or JSON, and deserializing from JSON.",
      "description_length": 357,
      "index": 119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the status of an operation, with values such as `PENDING`, `IN_PROGRESS`, `SUCCESS`, and `FAILED`. It includes functions to convert between strings and the type, serialize to JSON and query formats, and parse from XML and JSON. It is used to track and communicate the outcome of AWS CloudFormation operations like stack creation or updates.",
      "description_length": 400,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackDriftOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing the output of a stack drift detection operation in AWS CloudFormation. It includes functions to construct, serialize, and parse the output, specifically handling the `stack_drift_detection_id` string. It is used to retrieve and manage the identifier for a drift detection operation, enabling tracking and analysis of configuration drift in deployed stacks.",
      "description_length": 408,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateTerminationProtectionInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for updating termination protection on a CloudFormation stack. It includes functions to construct, parse, and serialize the input data, which consists of a boolean flag and a stack name. It is used when modifying the termination protection setting of a specific CloudFormation stack.",
      "description_length": 349,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of AWS account strings in the context of CloudFormation operations. It provides functions to convert account lists to and from JSON and query formats, as well as parsing from XML nodes. Use this module when working with CloudFormation stack sets or organizations that require specifying allowed or target accounts.",
      "description_length": 340,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing a stack resource in AWS CloudFormation. It provides functions to create, parse, and convert stack resource details to and from JSON and query formats. It works with XML nodes, JSON values, and AWS query types, specifically handling optional stack resource detail responses.",
      "description_length": 318,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.PermissionModels",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type with two constructors, `SERVICE_MANAGED` and `SELF_MANAGED`, representing permission models in a cloud formation context. It includes functions to convert between strings and the variant type, as well as serialization and deserialization functions for JSON, XML, and query parameters. This module is used to handle permission model values when interacting with AWS CloudFormation APIs, ensuring correct type representation across different data formats.",
      "description_length": 500,
      "index": 125,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a set of status values for tracking the state of stack set operations, including RUNNING, SUCCEEDED, FAILED, STOPPING, STOPPED, and QUEUED. It provides direct conversions between these status values and strings, JSON, XML, and query parameters, enabling seamless integration with AWS API requests and responses. These functions are used when handling operation status updates, checking deployment progress, or serializing/deserializing status data for logging or transmission.",
      "description_length": 496,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeAction",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing actions that can occur during a CloudFormation stack change, such as resource addition, modification, removal, or import. It includes functions to convert between string representations and the variant type, as well as serialization and deserialization routines for JSON, XML, and query parameters. It is used to interpret and generate CloudFormation change sets when managing infrastructure as code.",
      "description_length": 460,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackInstanceInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a CloudFormation stack instance. It includes fields for the stack set name, account ID, and region, and provides functions to construct, serialize, and parse these inputs in various formats like JSON and XML. It is used when querying AWS CloudFormation to retrieve details about a specific stack instance deployment.",
      "description_length": 391,
      "index": 128,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` that represents the output of an AWS CloudFormation stack set update operation, primarily containing an optional `operation_id` string. It provides functions to construct, parse, and convert the data structure to and from XML, JSON, and query formats. This module is used to handle responses from the AWS CloudFormation API when updating stack sets, enabling integration with other systems through standardized data interchange.",
      "description_length": 471,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Stacks",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of CloudFormation stack lists. It provides functions to convert between XML, JSON, and query formats and a list of Stack.t structures. It is used when interacting with AWS CloudFormation APIs to retrieve, send, or process multiple stack resources.",
      "description_length": 320,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateStage",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type with two constructors, `Original` and `Processed`, representing stages of a CloudFormation template. It includes functions to convert between strings and the type, serialize to query parameters or JSON, and parse from XML nodes or JSON. Concrete use cases include handling CloudFormation API requests and responses that distinguish between raw and processed template forms.",
      "description_length": 420,
      "index": 131,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for deleting a CloudFormation stack, including parameters like stack name, resources to retain, role ARN, and a client request token. It provides functions to construct, parse, and serialize the input for use in API requests. Concrete use cases include initiating stack deletion with specific resource retention policies or custom role configurations.",
      "description_length": 391,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines a record type and operations for constructing, serializing, and parsing input parameters used to create a CloudFormation change set. It includes fields for stack configuration, templates, parameters, capabilities, and metadata such as tags and ARNs. The module supports converting inputs to JSON or query format for API requests and parsing responses from XML or JSON.",
      "description_length": 388,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for retrieving an AWS CloudFormation template, including optional fields for stack name, change set name, and template stage. It provides functions to construct, serialize, and parse this input for use in API requests. Concrete use cases include querying a running stack's template or retrieving a staged template from a change set.",
      "description_length": 372,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.HandlerErrorCode",
      "library": "aws-cloudformation",
      "description": "This module defines a set of error codes used to represent failure reasons in cloud resource handling. It provides conversions between string representations and the enumerated type, along with serialization and deserialization functions for JSON, XML, and query parameters. These operations support error reporting and handling in cloud formation service interactions.",
      "description_length": 369,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftInformationSummary",
      "library": "aws-cloudformation",
      "description": "This module handles stack drift information summaries by providing constructors, parsers, and serializers. It works with stack drift status and optional timestamp data to represent drift state and last check time. Use it to process and format drift data returned from AWS CloudFormation API calls.",
      "description_length": 297,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a stack set description operation in AWS CloudFormation. It includes functions to construct, parse, and serialize the output, which contains an optional `StackSet` object representing a provisioned stack set. Use this module when retrieving details about a specific stack set, such as its configuration, status, or associated stacks.",
      "description_length": 397,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateTerminationProtectionOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of an update termination protection operation in AWS CloudFormation. It includes functions to construct, serialize, and parse the output, primarily working with a stack identifier as an optional string. It is used to handle responses when modifying termination protection settings for CloudFormation stacks.",
      "description_length": 368,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeregisterTypeInput",
      "library": "aws-cloudformation",
      "description": "This module defines a record type for input parameters used to deregister a CloudFormation type, including optional fields like ARN, type name, version ID, and type registry. It provides functions to construct, serialize, and parse these inputs in formats like JSON and query strings. Concrete use cases include preparing deregistration requests for AWS CloudFormation custom types and handling versioned type identifiers in deployment workflows.",
      "description_length": 446,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SetTypeDefaultVersionInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying input parameters to set the default version of an AWS CloudFormation type. It includes fields for the type's ARN, registry type, type name, and version ID, and provides functions to construct, parse, and serialize the input for use in API requests. The module is used when managing CloudFormation registry types, such as setting a specific version as the default for deployment stacks.",
      "description_length": 437,
      "index": 140,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidChangeSetStatusException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling the invalid change set status exception. It provides operations to construct, parse, and convert the exception to query parameters, JSON, and back from JSON. Use this when interacting with AWS CloudFormation APIs to manage and respond to invalid change set status errors programmatically.",
      "description_length": 358,
      "index": 141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackEvents",
      "library": "aws-cloudformation",
      "description": "This module handles the parsing, serialization, and manipulation of CloudFormation stack events. It works with lists of `StackEvent.t` records, providing functions to convert between XML, JSON, and query formats. Use this module to process CloudFormation event streams from AWS API responses or to construct event data for logging and auditing purposes.",
      "description_length": 353,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and manipulation of AWS CloudFormation stack set operation summaries. It works with lists of `StackSetOperationSummary.t` records, providing functions to convert between XML, JSON, and query formats. Use this module when processing CloudFormation stack set operation results from AWS API responses or when preparing requests to list or summarize operations.",
      "description_length": 401,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountGateStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing the status of an account gate in a deployment pipeline, with variants `SUCCEEDED`, `FAILED`, and `SKIPPED`. It provides bidirectional conversions between the type and strings, along with serialization to and from JSON and query formats. This module is used to handle status values when interacting with AWS CloudFormation's account gate operations, such as parsing responses or constructing requests.",
      "description_length": 457,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StopStackSetOperationOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a type and associated functions for handling the output of stopping a stack set operation in AWS CloudFormation. It provides functions to create, parse, and serialize the output as a query or JSON, all operating on a unit type. It is used specifically to manage the response when halting ongoing stack set operations in AWS.",
      "description_length": 344,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RecordHandlerProgressOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for record handler progress in cloud formation operations. It provides functions to convert unit values to query parameters, JSON objects, and back, facilitating communication with AWS services. Use it when implementing custom resource handlers that report progress to CloudFormation via JSON or query string formats.",
      "description_length": 358,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization, deserialization, and manipulation of AWS CloudFormation stack summaries. It works with lists of `StackSummary.t` records, converting them to and from XML, JSON, and query formats. It is used when retrieving and processing summaries of CloudFormation stacks from AWS API responses.",
      "description_length": 319,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PhysicalResourceIdContext",
      "library": "aws-cloudformation",
      "description": "This module handles the parsing, conversion, and serialization of physical resource ID context data in AWS CloudFormation. It operates on a list of key-value pairs representing context information, providing functions to convert between XML, JSON, and query formats. It is used when managing resource identifiers during CloudFormation stack operations, such as updates or deletions requiring contextual tracking.",
      "description_length": 412,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a specific resource within a CloudFormation stack. It includes functions to create, serialize, and parse instances of this structure, supporting interactions with AWS CloudFormation's API. The module works directly with string values for stack names and logical resource IDs, enabling precise querying and response handling.",
      "description_length": 399,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ProvisioningType",
      "library": "aws-cloudformation",
      "description": "This module defines a sum type with three variants representing provisioning behavior in cloud infrastructure. It provides bidirectional conversions between strings and the type, along with serialization to and from JSON, query parameters, and XML. These operations support handling provisioning type values in API requests and responses, specifically for services like AWS CloudFormation.",
      "description_length": 389,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftDetectionStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type representing the possible states of a stack set drift detection operation in AWS CloudFormation. It provides functions to convert between string representations and the enumerated type, as well as serialization and deserialization to and from JSON, XML, and query formats. It is used to interpret and communicate the status of drift detection operations in CloudFormation stack sets.",
      "description_length": 423,
      "index": 151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Parameters",
      "library": "aws-cloudformation",
      "description": "This module handles parameter lists for CloudFormation templates, providing functions to convert parameters to and from JSON and query formats. It supports parsing parameter lists from XML nodes and constructing parameter values. Use this module when deploying or managing CloudFormation stacks that require parameter input in different serialization formats.",
      "description_length": 359,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PropertyDifferences",
      "library": "aws-cloudformation",
      "description": "This module handles lists of property difference records in AWS CloudFormation. It provides functions to parse, convert to query format, and serialize to and from JSON. Use it when comparing stack differences, particularly for analyzing property-level changes in resource configurations.",
      "description_length": 287,
      "index": 153,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing stack set operations in AWS CloudFormation, providing structured access to operation summaries and pagination tokens. It works with XML, JSON, and query string formats for data interchange. Use this module to retrieve and process the results of stack set operations, including handling paginated responses.",
      "description_length": 348,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceDriftsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for describing stack resource drifts in AWS CloudFormation, including parameters like stack name, drift status filters, pagination token, and maximum results. It provides functions to construct, parse, and serialize the input for API requests, supporting operations like querying and JSON conversion. Concrete use cases include retrieving drift information for stack resources and handling paginated responses.",
      "description_length": 450,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for summarizing AWS CloudFormation type information, including fields like type name, ARN, default version, and update timestamp. It provides functions to construct, parse, and serialize these summaries to and from JSON, query parameters, and XML. Use this module when retrieving or processing metadata about registered CloudFormation resource types.",
      "description_length": 387,
      "index": 156,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeVersionsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and associated operations for listing type versions in a cloudformation registry. It includes fields like type, name, ARN, and pagination parameters, and supports conversion to and from JSON, query parameters, and XML parsing. It is used to interact with AWS CloudFormation's type version listing API endpoints.",
      "description_length": 351,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Change",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing changes in AWS CloudFormation, including the type of change and associated resource modifications. It provides functions to construct, serialize, and parse these changes to and from XML, JSON, and AWS query formats. Use this module when analyzing or generating CloudFormation change sets to track resource-level updates like additions, removals, or property changes.",
      "description_length": 416,
      "index": 158,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackTriggers",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and JSON conversion for a list of rollback trigger configurations. It works with XML nodes, JSON values, and AWS query parameters to manage deployment rollback conditions. Use this module when configuring or interpreting CloudFormation stack rollback triggers in API requests or responses.",
      "description_length": 333,
      "index": 159,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DifferenceType",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` representing the possible types of differences in resource configurations: `ADD`, `REMOVE`, and `NOT_EQUAL`. It provides functions to convert between strings and the `t` type, along with serialization and deserialization to JSON, query parameters, and XML. It is used to interpret and represent changes detected between cloud formation stacks during comparisons.",
      "description_length": 393,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListImportsOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of listing imports in AWS CloudFormation, including a list of imports and an optional next token for pagination. It provides functions to construct, parse, and serialize the output for use in API responses or further processing. Use this module when retrieving and managing import lists from CloudFormation stacks, particularly when handling paginated results.",
      "description_length": 421,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOperationInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a CloudFormation stack set operation. It includes fields for the stack set name and operation ID, both represented as strings. The module provides functions to construct, parse, and convert the structure to and from JSON and query formats, specifically for interacting with AWS CloudFormation APIs.",
      "description_length": 373,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeRegistrationInput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing input for describing an AWS CloudFormation type registration. It includes operations to construct, parse, and serialize the input using XML, JSON, and query parameters. The module is used specifically to handle registration status checks during CloudFormation type registration workflows.",
      "description_length": 340,
      "index": 163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInstancesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for updating CloudFormation stack instances across specified accounts and regions. It includes functions to construct, parse, and serialize the input data, supporting precise configuration through parameters and deployment targets. Concrete use cases involve orchestrating updates to stack sets in multi-account AWS environments.",
      "description_length": 384,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ContinueUpdateRollbackInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to continue an update rollback operation on a CloudFormation stack. It includes fields for the stack name, optional role ARN, resources to skip, and a client request token, with functions to create, parse, and serialize the structure to query or JSON formats. It is used when resuming a failed stack update to specify which resources should be skipped and under what context the operation is performed.",
      "description_length": 465,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChangeDetails",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, transforming, and serializing lists of resource change details in AWS CloudFormation. It works with XML nodes, JSON values, and query parameters, converting between them and a list of `ResourceChangeDetail.t` structures. It is used to process and manipulate detailed resource change information returned by CloudFormation during stack updates.",
      "description_length": 372,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Imports",
      "library": "aws-cloudformation",
      "description": "This module handles list-based data structures for import operations, providing functions to convert between XML, JSON, and query formats. It works with lists of base string types, primarily for serializing and deserializing import values in API requests and responses. Concrete use cases include processing CloudFormation stack import inputs from JSON or XML data and preparing them for query-based API calls.",
      "description_length": 410,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Capabilities",
      "library": "aws-cloudformation",
      "description": "This module handles the serialization and deserialization of AWS CloudFormation capability lists. It provides functions to convert capability lists to and from JSON, query parameters, and XML nodes. It is used when managing CloudFormation stack operations that require capability declarations, such as creating or updating stacks with IAM resources.",
      "description_length": 349,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypesOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing CloudFormation types, providing access to a list of type summaries and an optional pagination token. It supports parsing XML responses, converting to JSON or query formats, and constructing output values programmatically. It is used when retrieving and processing CloudFormation type information from AWS API responses.",
      "description_length": 372,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of a CloudFormation stack instance, including fields like stack ID, region, account, status, and drift information. It provides functions to construct, serialize, and deserialize this structure using JSON, query parameters, or XML input. Concrete use cases include managing and tracking the state of stack instances across multiple accounts and regions in AWS CloudFormation.",
      "description_length": 435,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackDriftInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for detecting stack drift in AWS CloudFormation. It handles parsing and converting stack names and optional logical resource IDs to query or JSON formats. It is used to prepare and process requests that check whether a stack's actual state differs from its expected template configuration.",
      "description_length": 357,
      "index": 171,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OrganizationalUnitIdList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of organizational unit IDs in AWS CloudFormation operations. It provides functions to convert these lists to and from JSON and query formats, and includes parsing from XML nodes. It is used when working with StackSet operations that involve organizational units.",
      "description_length": 288,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackEvent",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing CloudFormation stack events, including fields like stack ID, event ID, timestamps, and resource status. It provides functions to construct events, parse them from XML, convert them to query parameters or JSON, and create events from JSON input. Use this module to process and serialize CloudFormation event data for monitoring or logging stack changes.",
      "description_length": 406,
      "index": 173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing AWS CloudFormation stack sets, providing functions to create, parse, and serialize the response data. It works with XML, JSON, and query string formats, specifically managing a list of stack set summaries and an optional pagination token. Use this module when retrieving and processing stack set information from AWS CloudFormation, particularly for paginated results.",
      "description_length": 410,
      "index": 174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and JSON conversion for a list of stack set operation result summaries. It works with XML nodes, JSON values, and query parameters, specifically processing collections of stack set operation results. It is used when managing AWS CloudFormation stack set operations, enabling interaction with AWS APIs through structured data formats.",
      "description_length": 377,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeVersionSummaries",
      "library": "aws-cloudformation",
      "description": "This module handles lists of type version summary data from AWS CloudFormation. It provides functions to convert these lists to and from JSON and query formats, and to parse them from XML. Use this module when retrieving or processing multiple type version summaries in CloudFormation operations.",
      "description_length": 296,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceTargetDefinition",
      "library": "aws-cloudformation",
      "description": "This module defines a resource target structure with optional fields for attribute, name, and recreation requirements. It provides constructors, JSON and XML parsers, and query conversion for handling CloudFormation resource updates. It is used to specify which properties of a resource have been modified and whether a resource must be recreated.",
      "description_length": 347,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the status of a CloudFormation stack instance, with values `CURRENT`, `OUTDATED`, and `INOPERABLE`. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON and query formats. These operations support handling stack instance status values when interacting with AWS CloudFormation APIs or processing configuration data.",
      "description_length": 434,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe an AWS CloudFormation stack set. It includes functions to create, parse, and convert the structure to and from JSON and query formats. A concrete use case is retrieving details about a specific stack set by its name during CloudFormation operations.",
      "description_length": 324,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChangeDetail",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing detailed information about a resource change in a CloudFormation stack update. It includes fields for the target resource, evaluation type, change source, and causing entity, along with functions to construct, serialize, and deserialize instances. It is used to analyze and respond to specific changes detected during CloudFormation stack updates.",
      "description_length": 397,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CFNRegistryException",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing an exception from the CloudFormation registry, with operations to create, parse, and serialize the exception to various formats like JSON and query parameters. It works with structured exception data, primarily handling string messages. Concrete use cases include handling and transmitting CloudFormation registry errors in API responses or logging systems.",
      "description_length": 409,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResource",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a CloudFormation stack resource, including metadata like resource type, status, and timestamps. It provides functions to construct, serialize, and deserialize instances for use in querying or processing CloudFormation resource details. Use cases include tracking resource state changes and analyzing deployment drift.",
      "description_length": 367,
      "index": 182,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeVersionsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output structure for listing CloudFormation type versions, providing access to summaries of available type versions and a token for paginating subsequent requests. It works with XML, JSON, and query string representations of this output data. Use this module when retrieving and processing version information for CloudFormation resource types.",
      "description_length": 368,
      "index": 183,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the various states a CloudFormation stack can be in, such as creation, update, deletion, and rollback phases. It includes functions to convert between string representations and the variant type, as well as serialization and deserialization routines for JSON, XML, and query parameters. This module is used to interpret and manipulate CloudFormation stack status values when interacting with AWS APIs or processing stack events.",
      "description_length": 488,
      "index": 184,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftStatusFilters",
      "library": "aws-cloudformation",
      "description": "This module handles filtering of stack resource drift statuses in AWS CloudFormation by defining a list-based structure for drift status values. It provides functions to convert drift status lists to and from JSON and query formats, as well as parsing from XML nodes. It is used when retrieving or analyzing resource drift information for CloudFormation stacks, particularly in drift detection workflows.",
      "description_length": 404,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateParameter",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for CloudFormation template parameters, including optional fields like parameter key, default value, description, and no-echo flag. It provides functions to construct, serialize, and parse these parameters to and from JSON, query strings, and XML. Use this module when managing CloudFormation stack parameters programmatically, such as during template validation or deployment workflows.",
      "description_length": 424,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftInformationSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the drift status of a CloudFormation stack resource, including the drift status and an optional timestamp of the last check. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. It is used to track whether a resource's actual configuration has diverged from its expected template definition in AWS CloudFormation.",
      "description_length": 424,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountGateResult",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing the result of an account gate operation in AWS CloudFormation, including optional status and status reason fields. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include handling responses from CloudFormation account gate checks during deployment workflows.",
      "description_length": 394,
      "index": 188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationPreferences",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for specifying preferences during AWS CloudFormation stack set operations. It includes fields for controlling concurrency, failure tolerance, and region ordering, enabling precise management of deployment behavior across multiple regions. The module provides functions to construct, serialize, and parse these preferences to and from various formats like JSON and query parameters.",
      "description_length": 418,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for updating a CloudFormation stack set. It includes fields for configuration such as stack set name, template body or URL, parameters, capabilities, tags, and deployment settings like regions and accounts. It supports parsing from XML, conversion to query format or JSON, and construction with optional parameters, enabling precise control over stack set updates in AWS environments.",
      "description_length": 439,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceTypes",
      "library": "aws-cloudformation",
      "description": "This module handles lists of resource types in AWS CloudFormation by providing functions to parse, serialize, and convert them to and from JSON and query formats. It works with `Ezxmlm.nodes`, `Aws.Json.t`, and `Aws.Query.t` for data interchange. Use this module when interacting with CloudFormation APIs that require filtering or specifying resource types in requests or responses.",
      "description_length": 382,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetNotFoundException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling cases where a change set is not found in AWS CloudFormation operations. It provides functions to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this when interacting with CloudFormation APIs to represent and handle missing change set scenarios.",
      "description_length": 360,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountLimit",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing account limits in AWS CloudFormation, with optional name and value fields. It provides functions to construct, parse, and convert these structures to and from XML, JSON, and query formats. Use this module when managing CloudFormation stack limits programmatically, such as retrieving or setting constraints on resource counts.",
      "description_length": 380,
      "index": 193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a polymorphic variant type representing the possible statuses of AWS CloudFormation resources, such as `CREATE_COMPLETE` or `UPDATE_FAILED`. It includes functions to convert between string representations and the variant type, as well as serialization and deserialization routines for JSON, XML, and query parameters. These capabilities are used when interpreting or sending resource state information in CloudFormation stack operations.",
      "description_length": 457,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe a CloudFormation type, including optional fields like type name, ARN, and version ID. It provides functions to construct, serialize, and parse these inputs in formats such as JSON and query strings. It is used when querying AWS CloudFormation for details about registered types.",
      "description_length": 353,
      "index": 195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteChangeSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for deleting a CloudFormation change set. It handles parsing from XML, converting to query parameters, and JSON serialization for API requests. It is used when invoking the DeleteChangeSet operation in AWS CloudFormation.",
      "description_length": 289,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and operations for configuring and creating a CloudFormation stack. It includes functions to construct, parse, and serialize stack creation parameters such as stack name, template source, parameters, and deployment options. Concrete use cases include setting up infrastructure stacks from templates, managing rollback and timeout behavior, and specifying IAM roles and notifications during stack creation.",
      "description_length": 445,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Replacement",
      "library": "aws-cloudformation",
      "description": "This module defines a type `t` with three variants (`True`, `False`, `Conditional`) and provides bidirectional conversions between strings and this type. It includes functions for parsing from XML, serializing to JSON or query parameters, and converting to/from string representations. It is used to represent and manipulate replacement policies in CloudFormation resource definitions.",
      "description_length": 385,
      "index": 198,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceDetailedStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type `t` representing detailed status states for a stack instance, including values like `PENDING`, `RUNNING`, and `FAILED`. It provides functions to convert between strings and the enumerated type, serialize to JSON or query formats, and parse from XML or JSON input. Use cases include handling stack instance status in API requests and responses, and mapping external status representations to internal logic.",
      "description_length": 446,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistrationTokenList",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string-based registration tokens in AWS CloudFormation. It provides functions to convert token lists to and from JSON and query formats, as well as parsing from XML nodes. Use this module when managing registration token responses or requests in CloudFormation service interactions.",
      "description_length": 311,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterDeclarations",
      "library": "aws-cloudformation",
      "description": "This module handles parameter declarations for AWS CloudFormation templates. It provides functions to parse, convert to query format, and serialize to and from JSON. Use it when defining or processing CloudFormation template parameters in OCaml applications.",
      "description_length": 258,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` representing the output of a delete stack instances operation, containing an optional operation ID. It provides functions to construct, parse, and serialize the data structure to various formats including JSON, query parameters, and XML. This is used to handle responses from AWS CloudFormation when deleting stack instances across accounts or regions.",
      "description_length": 395,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackDriftDetectionStatusInput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type representing input for checking the status of a stack drift detection operation in AWS CloudFormation. It includes functions to construct the input from a drift detection ID, parse it from XML, and convert it to query or JSON formats for API requests. It is used specifically to retrieve the current status of a previously initiated stack drift detection.",
      "description_length": 394,
      "index": 203,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStacksInput",
      "library": "aws-cloudformation",
      "description": "This module defines input parameters for describing AWS CloudFormation stacks, including optional stack name and pagination token. It provides functions to construct, serialize, and parse these inputs in various formats like JSON and query strings. Use this module when configuring requests to retrieve stack details from the CloudFormation service.",
      "description_length": 349,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Parameter",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing CloudFormation stack parameters, including their keys, values, and resolution behavior. It provides functions to construct, serialize, and deserialize these parameters to and from JSON and XML formats. Concrete use cases include configuring stack deployments and handling parameter overrides in AWS CloudFormation workflows.",
      "description_length": 378,
      "index": 205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChange",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing changes to AWS CloudFormation resources, including fields like action, resource IDs, type, and replacement status. It provides functions to construct, parse, and convert these structures to and from XML, JSON, and query formats. Use this module when analyzing or modifying CloudFormation stacks to track individual resource changes during updates.",
      "description_length": 397,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Capability",
      "library": "aws-cloudformation",
      "description": "This module defines and manipulates capability values used in AWS CloudFormation operations, such as stack creation and updates. It provides direct conversions between string representations and enumerated types, along with serialization to and from JSON and query formats. Concrete use cases include handling IAM-related capabilities and expansion features when interacting with CloudFormation APIs.",
      "description_length": 400,
      "index": 207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the drift status of a CloudFormation stack, with values like `DRIFTED` and `IN_SYNC`. It provides conversions to and from strings, JSON, and XML, along with helper functions for serialization and parsing. Concrete use cases include tracking stack consistency in deployment workflows and integrating with AWS APIs that require drift status information.",
      "description_length": 403,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackResourcesInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing stack resources in AWS CloudFormation, including the stack name and an optional next token for pagination. It provides functions to construct, parse, and convert the input to query or JSON formats, facilitating API requests to retrieve stack resource details. Use this module when interacting with CloudFormation to list resources associated with a specific stack, especially when handling paginated responses.",
      "description_length": 462,
      "index": 209,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Tags",
      "library": "aws-cloudformation",
      "description": "This module handles the manipulation of tag lists for AWS CloudFormation resources. It provides functions to convert tags to and from JSON and query formats, as well as parsing from XML nodes. Use this module when working with CloudFormation resource tagging operations, such as attaching metadata to stacks or retrieving tag information from AWS responses.",
      "description_length": 357,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftDetectionStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the status of stack drift detection in AWS CloudFormation, with values for in-progress, failed, and completed states. It provides bidirectional conversions between strings and the enumerated type, along with serialization to and from JSON and query formats. The module is used to interpret and transmit stack drift detection status in CloudFormation API interactions.",
      "description_length": 419,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceComprehensiveStatus",
      "library": "aws-cloudformation",
      "description": "This module defines a single type `t` that represents the comprehensive status of a CloudFormation stack instance, including an optional `detailed_status` field. It provides functions to construct, parse, and serialize this type to and from XML, JSON, and query parameters. It is used when managing CloudFormation stack instance statuses, particularly in scenarios involving detailed status reporting and API interactions.",
      "description_length": 422,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterDeclaration",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for representing AWS CloudFormation parameter declarations, including fields like parameter key, default value, type, and constraints. It provides functions to construct, parse, and convert these declarations to and from XML, JSON, and query formats. Use this module when working with CloudFormation templates to define or manipulate parameters programmatically.",
      "description_length": 399,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the drift status of a CloudFormation stack set, with values for drifted, in-sync, and not-checked states. It provides bidirectional conversions between strings and the enumerated type, along with serialization and deserialization functions for JSON, XML, and query parameters. This module is used to handle drift status values when interacting with AWS CloudFormation APIs, particularly for detecting and managing configuration drift across stack instances.",
      "description_length": 509,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationResultsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing stack set operation results, providing structured access to summaries and pagination tokens. It works with XML, JSON, and query parameter representations for AWS CloudFormation's stack set operations. Use this module to retrieve and process results from stack set operations, including handling paginated responses.",
      "description_length": 357,
      "index": 215,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeregisterTypeOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a type and associated functions for handling the output of a type deregistration operation in a cloud formation service. It includes operations for creating a unit value, parsing input into a unit, and converting data to query parameters, JSON, or back from JSON. It is used specifically for representing empty responses when confirming the successful deregistration of a resource type.",
      "description_length": 406,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceDriftsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing stack resource drifts in AWS CloudFormation, providing functions to create, parse, and serialize the response data. It works with `StackResourceDrifts.t` and an optional `next_token` for pagination. Use this module to process and manipulate drift detection results returned from the `DescribeStackResourceDrifts` API call.",
      "description_length": 367,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackEventsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output from describing CloudFormation stack events, including parsing XML responses and converting to JSON or query formats. It works with stack event lists and optional pagination tokens. Use it to retrieve and process historical events from a CloudFormation stack, particularly when handling paginated results.",
      "description_length": 336,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackStatusFilter",
      "library": "aws-cloudformation",
      "description": "This module handles filtering of CloudFormation stack statuses by converting, parsing, and querying lists of stack status values. It provides operations to transform stack status lists into query parameters, JSON representations, and back, supporting precise status filtering in API requests. Use cases include constructing and interpreting CloudFormation API calls that require filtering stacks by specific status values.",
      "description_length": 422,
      "index": 219,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStacksOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for handling the output of a CloudFormation describe stacks operation, containing a list of stacks and an optional pagination token. It provides functions to construct, parse, and serialize the output in various formats such as JSON and query parameters. Concrete use cases include processing responses from AWS CloudFormation's `DescribeStacks` API call and handling paginated results.",
      "description_length": 423,
      "index": 220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackSetDriftOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a single data type `t` containing an optional string `operation_id` and provides functions to construct, parse, and serialize this type to and from XML, JSON, and query formats. It is used to represent the output of a stack set drift detection operation in AWS CloudFormation, specifically capturing the operation ID returned by the service. The module enables handling responses from initiating drift detection, allowing integration with AWS API requests and responses.",
      "description_length": 490,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistryType",
      "library": "aws-cloudformation",
      "description": "This module defines a single enumerated type representing the kinds of registries supported, with operations to convert between string representations and the enumerated values. It provides functions for parsing, serializing to JSON or query parameters, and converting to and from strings. This module is used when interacting with AWS CloudFormation registry types, such as when handling resource registration or type definitions.",
      "description_length": 431,
      "index": 222,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourcesToSkip",
      "library": "aws-cloudformation",
      "description": "This module handles lists of string resources to skip, primarily used when managing AWS CloudFormation stack operations. It provides functions to convert these lists to and from JSON and query formats, enabling seamless integration with AWS API requests. Use cases include specifying resource identifiers to exclude during stack updates or deletions.",
      "description_length": 350,
      "index": 223,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_cloudformation.Types.SetStackPolicyInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for setting a stack policy in AWS CloudFormation. It handles parsing from XML, conversion to query parameters, and JSON serialization for API requests. Concrete use cases include configuring stack protection policies during infrastructure deployment or updates.",
      "description_length": 329,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInstancesOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the output of updating stack instances in a cloud formation service. It includes functions to construct, serialize, and deserialize the structure, primarily working with string and JSON representations. It is used to handle operation identifiers returned after initiating stack instance updates.",
      "description_length": 345,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftDetectionDetails",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for tracking drift detection details of a CloudFormation stack set, including status, timestamps, and counts of stack instances in various states. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when managing stack set drift detection in AWS CloudFormation workflows.",
      "description_length": 385,
      "index": 226,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationStatusCheckFailedException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling operation status check failures in AWS CloudFormation. It includes operations for parsing, converting to query format, and serializing to and from JSON. Concrete use cases include error handling and response processing in CloudFormation API interactions.",
      "description_length": 324,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summarized view of an AWS CloudFormation stack resource, including metadata like logical and physical IDs, resource type, status, and drift information. It provides functions to construct, serialize, and deserialize these summaries, primarily working with XML, JSON, and query parameter formats. It is used to process and transmit resource state information when interacting with CloudFormation stacks, such as reporting drift status or resource health.",
      "description_length": 505,
      "index": 228,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeAccountLimitsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of describing AWS CloudFormation account limits, including parsing and serializing the response data. It works with account limit lists and optional pagination tokens to manage large result sets. Concrete use cases include retrieving and processing current account limits for CloudFormation resources and handling paginated responses from the AWS API.",
      "description_length": 382,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationsInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing operations on a CloudFormation stack set. It includes fields for the stack set name, pagination token, and maximum results, supporting requests to retrieve operation records. The module provides functions to construct, serialize, and parse these inputs to interact with AWS CloudFormation's API directly.",
      "description_length": 356,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StopStackSetOperationInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for stopping a stack set operation in AWS CloudFormation, consisting of `stack_set_name` and `operation_id`. It provides functions to create, parse, and serialize the structure to query parameters or JSON format. Concrete use cases include halting ongoing stack set operations programmatically via the AWS SDK.",
      "description_length": 347,
      "index": 231,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDrifts",
      "library": "aws-cloudformation",
      "description": "This module handles parsing, serialization, and JSON conversion for a list of stack resource drifts. It provides operations to convert drift data to and from XML, JSON, and query formats. Use this module when processing AWS CloudFormation stack resource drift information returned by API calls or when preparing drift data for further processing or output.",
      "description_length": 356,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeVersionSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a summary of a CloudFormation type version, including fields like type name, version ID, ARN, and creation time. It provides functions to construct, parse, and serialize these summaries to and from XML, JSON, and query formats. Use this module when managing or querying CloudFormation registry type versions via the AWS SDK.",
      "description_length": 374,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PhysicalResourceIdContextKeyValuePair",
      "library": "aws-cloudformation",
      "description": "This module defines a key-value pair structure for handling physical resource ID context in AWS CloudFormation. It provides functions to create, parse, and convert these pairs to and from XML, JSON, and query formats. It is used when managing resource provisioning context data that must be passed between CloudFormation and custom resources.",
      "description_length": 342,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierSummary",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for summarizing resource identifiers in AWS CloudFormation, including optional resource type, logical IDs, and resource identifiers. It provides functions to construct, parse, and serialize the structure to query or JSON formats. It is used when retrieving summaries of resources in a CloudFormation stack for analysis or reporting.",
      "description_length": 369,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidOperationException",
      "library": "aws-cloudformation",
      "description": "This module defines a unit type and associated functions for handling invalid operation exceptions. It provides operations to construct, parse, and convert values to query parameters, JSON, and back from JSON. Useful for validating and handling errors in API requests where no additional data is needed.",
      "description_length": 303,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeRegistrationsOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of listing type registration requests in AWS CloudFormation, specifically capturing registration tokens and pagination tokens. It provides functions to construct, parse, and serialize the output structure for API interactions. Use this module when managing custom resource type registrations and handling paginated responses from CloudFormation.",
      "description_length": 376,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InsufficientCapabilitiesException",
      "library": "aws-cloudformation",
      "description": "This module defines a singleton exception type used to signal missing capabilities in CloudFormation operations. It includes functions to construct, parse, and serialize the exception for integration with AWS API requests and responses. Commonly used in error handling when deploying or updating CloudFormation stacks that require specific capabilities.",
      "description_length": 353,
      "index": 238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetStackPolicyOutput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for holding the response from retrieving an AWS CloudFormation stack policy. It includes functions to construct, serialize, and parse the policy body, which is an optional string. Use this module when managing stack policies to enforce rules on stack updates.",
      "description_length": 296,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDrift",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing the drift status of a CloudFormation stack resource, including details like expected and actual properties, drift status, and timestamps. It provides functions to construct, parse, and serialize this structure to and from XML, JSON, and query formats. Concrete use cases include detecting configuration drift in deployed AWS resources and reporting discrepancies between template definitions and actual resource states.",
      "description_length": 469,
      "index": 240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackSetInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure and serialization functions for deleting a CloudFormation stack set. It works with a record type containing a `stack_set_name` string and provides operations to construct, parse, and convert the structure to query parameters, JSON, or XML. Concrete use cases include preparing API requests to delete a specific stack set by name in AWS CloudFormation.",
      "description_length": 391,
      "index": 241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourcesInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to describe AWS CloudFormation stack resources. It includes fields for filtering by stack name, logical resource ID, or physical resource ID, and provides functions to construct, serialize, and parse these inputs in various formats. It is used when querying AWS CloudFormation to retrieve detailed information about specific resources within a stack.",
      "description_length": 413,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackTrigger",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing a rollback trigger with fields for an ARN and a type. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include configuring CloudFormation stack rollback triggers based on specific Amazon Resource Names and trigger types.",
      "description_length": 351,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PropertyDifference",
      "library": "aws-cloudformation",
      "description": "This module represents differences between expected and actual property values in a structured format, capturing the property path, expected value, actual value, and type of difference. It provides functions to construct, serialize, and deserialize these difference records, supporting JSON and XML formats. It is used to report configuration drift or mismatches in infrastructure-as-code workflows.",
      "description_length": 399,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the drift status of a stack resource, with values like `IN_SYNC`, `MODIFIED`, and `DELETED`. It includes functions to convert between string representations and the enumerated type, as well as serialization to and from JSON and query formats. It is used to track and manage configuration drift in AWS CloudFormation stacks.",
      "description_length": 375,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StageList",
      "library": "aws-cloudformation",
      "description": "This module defines a list of template stages used in AWS CloudFormation operations. It provides functions to convert stage lists to and from JSON and query formats, as well as parsing from XML nodes. It is used when managing CloudFormation stack templates, particularly during inspection or transformation of template content.",
      "description_length": 327,
      "index": 246,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStacksInput",
      "library": "aws-cloudformation",
      "description": "This module defines the input structure for listing stacks in AWS CloudFormation, including optional pagination via a next token and filtering by stack status. It provides functions to construct, parse, and serialize the input for API requests, supporting both XML and JSON formats. Concrete use cases include querying CloudFormation stacks with specific status filters or handling paginated responses when retrieving large stack lists.",
      "description_length": 436,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperation",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure representing an AWS CloudFormation stack set operation, including fields for operation metadata, status, preferences, and execution details. It provides functions to construct, parse, and serialize these operations for use in querying or managing stack set deployments. Concrete use cases include tracking the progress of stack set updates, handling drift detection results, and configuring deployment targets and roles.",
      "description_length": 457,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackResourceDriftInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for input parameters used to detect drift in a specific resource within a CloudFormation stack. It includes functions to create, serialize, and parse instances of the structure, supporting both JSON and XML formats. Concrete use cases include checking whether a deployed resource's actual configuration matches its expected template definition during infrastructure validation workflows.",
      "description_length": 424,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackSetOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output representation for deleting a CloudFormation stack set. It defines a unit type with functions to construct, parse, and serialize the output in various formats. It is used to manage the response from a stack set deletion operation in AWS CloudFormation.",
      "description_length": 283,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumerated type representing the status of a stack set operation in AWS CloudFormation, with values like SUCCEEDED, FAILED, and RUNNING. It provides bidirectional conversions between the type and strings, along with serialization to and from JSON and query formats. These functions support handling operation statuses in API requests and responses, particularly when parsing XML responses or constructing JSON payloads for CloudFormation operations.",
      "description_length": 472,
      "index": 251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistrationStatus",
      "library": "aws-cloudformation",
      "description": "This module defines an enumeration type representing the status of a registration process, with values for completed, in-progress, and failed states. It provides bidirectional conversion between strings and the enumerated type, along with serialization to and from JSON and query formats. It is used to interpret and emit registration status values when interacting with AWS CloudFormation APIs, particularly during resource registration workflows.",
      "description_length": 448,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackConfiguration",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for configuring rollback behavior in deployment services. It includes operations to create, parse, and serialize rollback configurations, supporting integration with XML, JSON, and query string formats. Concrete use cases include setting up rollback triggers and specifying monitoring windows during infrastructure deployment.",
      "description_length": 363,
      "index": 253,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeType",
      "library": "aws-cloudformation",
      "description": "This module defines a single enumerated type representing categories of changes in a system, specifically distinguishing between resource-related changes. It provides functions to convert between string representations and the enumerated type, along with serialization to and from JSON, XML, and query parameters. This module is used when processing and categorizing changes in infrastructure definitions, particularly during deployment planning.",
      "description_length": 446,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RecordHandlerProgressInput",
      "library": "aws-cloudformation",
      "description": "This module defines a data structure for tracking the progress of a resource handler operation in AWS CloudFormation. It includes fields for operation status, status messages, error codes, and resource models, along with functions to construct, parse, and serialize the data for API requests. It is used to report intermediate results from custom resource handlers during deployment workflows.",
      "description_length": 393,
      "index": 255,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.EstimateTemplateCostOutput",
      "library": "aws-cloudformation",
      "description": "This module handles the output of estimating template costs in AWS CloudFormation by providing a data structure with an optional URL field. It includes functions to construct, parse, and convert the output to various formats like JSON and query parameters. Use this module when retrieving and processing cost estimation results from CloudFormation templates.",
      "description_length": 358,
      "index": 256,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListExportsInput",
      "library": "aws-cloudformation",
      "description": "This module defines a single type `t` with an optional `next_token` string field and provides functions to construct, parse, and serialize instances of this type. It supports working with CloudFormation's export listing input parameters by converting between XML, JSON, and query string formats. Use this module when making CloudFormation API requests to list exports with pagination support.",
      "description_length": 392,
      "index": 257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.CancelUpdateStack",
      "library": "aws-cloudformation",
      "description": "This module handles the cancellation of an in-progress stack update in AWS CloudFormation by providing functions to construct and interpret HTTP requests and responses. It works with the `CancelUpdateStackInput` type to specify the stack name and other parameters, and communicates with the AWS service using standard HTTP operations. Concrete use cases include halting failed stack updates and managing rollback procedures programmatically.",
      "description_length": 441,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSets",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation stack sets by defining input and output types, request signing, and HTTP serialization. It works with CloudFormation-specific input parameters, outputs containing stack set summaries, and AWS internal error types. Concrete use cases include querying existing stack sets across accounts and regions, and integrating with AWS CloudFormation's API for management and deployment workflows.",
      "description_length": 432,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles the creation of AWS CloudFormation stack instances across specified accounts and regions. It provides functions to convert input parameters into properly signed HTTP requests and parse responses or errors from the AWS API. Use this module to programmatically deploy stacks in multiple environments or integrate CloudFormation with deployment pipelines.",
      "description_length": 372,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of CloudFormation stack instances across specified accounts and regions. It provides functions to convert input parameters into signed HTTP requests and parse responses or errors from AWS, ensuring correct encoding and decoding of CloudFormation API calls. Concrete use cases include removing stack instances from multi-account environments and managing cleanup operations in automated deployment pipelines.",
      "description_length": 440,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackSetDrift",
      "library": "aws-cloudformation",
      "description": "This module handles detecting drift in AWS CloudFormation stack sets by providing functions to construct and interpret HTTP requests and responses. It works with input and output types specific to the `DetectStackSetDrift` operation, along with error types defined in the CloudFormation service. Concrete use cases include initiating a drift detection operation on a stack set and processing the resulting status or errors from the AWS API.",
      "description_length": 440,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStacks",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation stacks by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation API, including encoded query parameters and XML responses. Concrete use cases include querying stack summaries and handling pagination tokens for subsequent requests.",
      "description_length": 361,
      "index": 263,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DeleteStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of AWS CloudFormation stack sets by providing functions to construct and interpret HTTP requests and responses. It works with the `DeleteStackSetInput` type to specify parameters like stack set name and operation preferences, and returns a unit output on success or an error if the deletion fails. It is used to programmatically remove stack sets across multiple accounts and regions, ensuring proper cleanup of infrastructure resources.",
      "description_length": 470,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListTypeRegistrations",
      "library": "aws-cloudformation",
      "description": "This module handles listing type registrations in AWS CloudFormation by converting input parameters into signed HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML-decoded responses. Concrete use cases include querying registered CloudFormation types and handling paginated results from AWS.",
      "description_length": 430,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResourceDrifts",
      "library": "aws-cloudformation",
      "description": "This module handles the conversion of inputs and outputs for the AWS CloudFormation `DescribeStackResourceDrifts` API call, including HTTP serialization and deserialization. It works with structured input and output types defined in `Aws_cloudformation.Types`, along with error handling specific to this operation. It is used to programmatically retrieve information about resource drifts in a CloudFormation stack by preparing and interpreting API requests and responses.",
      "description_length": 472,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeregisterType",
      "library": "aws-cloudformation",
      "description": "This module handles deregistering a CloudFormation type by converting input parameters into an HTTP request and processing responses. It works with `DeregisterTypeInput` to construct requests and parses XML errors into specific CloudFormation errors. It is used to remove custom resource type registrations from AWS CloudFormation.",
      "description_length": 331,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeAccountLimits",
      "library": "aws-cloudformation",
      "description": "This module handles describing account limits for a cloudformation service by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It works with input and output types specific to the DescribeAccountLimits operation, along with error types defined in the cloudformation service. It is used to query and enforce account-level resource limits in AWS CloudFormation.",
      "description_length": 414,
      "index": 268,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeType",
      "library": "aws-cloudformation",
      "description": "This module handles describing an AWS CloudFormation type by converting input parameters into an HTTP request and parsing the response. It works with `DescribeTypeInput` and `DescribeTypeOutput` types, along with internal error types for handling failures. Use this module to retrieve information about registered CloudFormation extensions, such as their schema or configuration details.",
      "description_length": 387,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateTerminationProtection",
      "library": "aws-cloudformation",
      "description": "This module handles updating termination protection settings for AWS CloudFormation stacks by providing functions to construct and interpret HTTP requests and responses. It works with input and output types specific to termination protection updates, along with error types defined in the CloudFormation API. Concrete use cases include enabling or disabling termination protection for a stack and handling the corresponding API responses and errors.",
      "description_length": 449,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DetectStackDrift",
      "library": "aws-cloudformation",
      "description": "This module handles detecting unintended changes in AWS CloudFormation stacks by converting input parameters into HTTP requests and parsing responses. It works with `DetectStackDriftInput` and `DetectStackDriftOutput` types to send drift detection commands and interpret results. Use this module to programmatically check if a stack's actual state differs from its expected template configuration.",
      "description_length": 397,
      "index": 271,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.CreateStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles the creation of AWS CloudFormation stack sets by defining input and output types, request signing, and HTTP serialization. It works with structured data types representing stack set configurations and AWS errors. Concrete use cases include sending properly signed HTTP requests to the CloudFormation service and parsing responses or errors from stack set creation operations.",
      "description_length": 395,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles updating AWS CloudFormation stack sets by defining input and output types, request signing, and HTTP serialization. It works with CloudFormation-specific data structures like `UpdateStackSetInput` and `UpdateStackSetOutput`, along with internal error types. It is used to construct and send API requests to update stack sets across multiple accounts and regions, and to handle responses and errors from those updates.",
      "description_length": 437,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResources",
      "library": "aws-cloudformation",
      "description": "This module handles describing AWS CloudFormation stack resources by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML responses. Use this module to retrieve information about stack resources by specifying a stack name and logical ID, handling both successful outputs and error responses.",
      "description_length": 428,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListTypes",
      "library": "aws-cloudformation",
      "description": "This module handles listing CloudFormation resource types by converting input parameters into signed HTTP requests and parsing responses. It works with `ListTypesInput` and `ListTypesOutput` types, along with internal error types for handling failures. It is used to query AWS CloudFormation for available resource types, handling request signing, encoding, and response decoding.",
      "description_length": 380,
      "index": 275,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListStackSetOperations",
      "library": "aws-cloudformation",
      "description": "This module handles listing operations for CloudFormation stack sets by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation API, including structured error handling for failed responses. Concrete use cases include querying the status of stack set operations and retrieving operation history for auditing or monitoring purposes.",
      "description_length": 420,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListChangeSets",
      "library": "aws-cloudformation",
      "description": "This module handles listing change sets for an AWS CloudFormation stack by converting input parameters into signed HTTP requests and parsing responses. It works with `ListChangeSetsInput` and `ListChangeSetsOutput` types, along with internal error types for handling failures. It is used to retrieve summaries of change sets associated with a specific stack, typically to evaluate or track infrastructure changes before execution.",
      "description_length": 430,
      "index": 277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResource",
      "library": "aws-cloudformation",
      "description": "This module handles describing an individual resource within a CloudFormation stack by converting input parameters into an HTTP request and parsing the resulting response or error. It works with input and output types specific to the `DescribeStackResource` operation, along with internal error types for handling AWS responses. Concrete use cases include querying the current state of a specific resource in a deployed stack, such as checking the status of an EC2 instance or S3 bucket managed by CloudFormation.",
      "description_length": 513,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteStack",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of AWS CloudFormation stacks by providing functions to construct and interpret HTTP requests and responses. It works with the `DeleteStackInput` type to specify stack deletion parameters and returns no output on success. Concrete use cases include initiating stack deletion operations and handling AWS-specific errors returned by the CloudFormation service.",
      "description_length": 390,
      "index": 279,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.SetStackPolicy",
      "library": "aws-cloudformation",
      "description": "This module handles setting stack policies for AWS CloudFormation stacks by converting native inputs into HTTP requests and parsing responses. It works with `SetStackPolicyInput` to configure policy parameters and communicates with the CloudFormation service using signed HTTP requests. Concrete use cases include applying resource protection policies to running stacks and restricting update operations based on defined rules.",
      "description_length": 427,
      "index": 280,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.CreateStack",
      "library": "aws-cloudformation",
      "description": "This module handles the creation of AWS CloudFormation stacks by defining input and output types for the `CreateStack` API call. It provides functions to convert native input into HTTP requests and parse HTTP responses into outputs or errors, ensuring proper encoding and decoding of API data. Concrete use cases include deploying new CloudFormation stacks with specified templates and parameters, and handling the resulting API responses or errors.",
      "description_length": 449,
      "index": 281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ContinueUpdateRollback",
      "library": "aws-cloudformation",
      "description": "This module handles the continuation of an update rollback operation for AWS CloudFormation stacks. It provides functions to convert input parameters to HTTP requests and parse responses, specifically working with `ContinueUpdateRollbackInput` and unit output. It is used when resuming a failed stack update rollback, ensuring proper request signing and error handling.",
      "description_length": 369,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackSetOperation",
      "library": "aws-cloudformation",
      "description": "This module handles describing an AWS CloudFormation stack set operation by converting input parameters into an HTTP request and parsing the response. It works with input and output types specific to the `DescribeStackSetOperation` action, along with internal error types for handling failures. It is used to query the status and details of a stack set operation in AWS CloudFormation.",
      "description_length": 385,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStack",
      "library": "aws-cloudformation",
      "description": "This module handles the conversion and execution of AWS CloudFormation stack update requests. It translates native input types into properly signed HTTP requests and decodes responses into structured outputs or errors. It works directly with CloudFormation's input and output types to perform stack updates, error parsing, and HTTP serialization.",
      "description_length": 346,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.SetTypeDefaultVersion",
      "library": "aws-cloudformation",
      "description": "This module sets the default version for a CloudFormation type. It handles HTTP requests and responses for this specific operation, encoding inputs into query format and decoding outputs or errors from XML. It works directly with `SetTypeDefaultVersionInput` and returns no output on success, using custom error types for failure cases.",
      "description_length": 336,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.StopStackSetOperation",
      "library": "aws-cloudformation",
      "description": "This module handles stopping a StackSet operation in AWS CloudFormation by defining the input and output types, error handling, and HTTP request/response conversion. It works with CloudFormation's internal types and errors, specifically `StopStackSetOperationInput`. It is used to construct and sign HTTP requests to the CloudFormation service endpoint, and to parse responses or errors returned by the service.",
      "description_length": 411,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetStackPolicy",
      "library": "aws-cloudformation",
      "description": "This module handles retrieving AWS CloudFormation stack policies by defining input and output types, request signing, and HTTP serialization. It works with CloudFormation-specific data structures to encode requests and decode responses, including error handling. Use this module to fetch the policy associated with a specific CloudFormation stack, ensuring proper request formatting and response parsing.",
      "description_length": 404,
      "index": 287,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.GetTemplate",
      "library": "aws-cloudformation",
      "description": "This module handles retrieving CloudFormation templates by defining the input and output types for the operation, along with functions to convert between HTTP requests and native types. It works with CloudFormation-specific input parameters and output responses, including error handling tied to the service's API. Use this module to fetch existing CloudFormation templates programmatically, for example, to inspect or reuse template content during infrastructure automation tasks.",
      "description_length": 481,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSetOperationResults",
      "library": "aws-cloudformation",
      "description": "This module handles listing results from a StackSet operation in AWS CloudFormation by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including structured data for operation results and errors. Use this module to retrieve and process detailed outcomes of StackSet operations like creation or updates across multiple accounts and regions.",
      "description_length": 437,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeTypeRegistration",
      "library": "aws-cloudformation",
      "description": "This module handles the conversion of inputs and outputs for an AWS CloudFormation type registration description call, encoding requests into HTTP queries and decoding responses. It works with input and output types specific to describing a type registration, along with error types for handling failures. It is used when querying the status or details of a CloudFormation type registration in AWS.",
      "description_length": 398,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeChangeSet",
      "library": "aws-cloudformation",
      "description": "This module handles describing an AWS CloudFormation change set by converting input parameters into an HTTP request and parsing the response or errors. It works with input and output types specific to the DescribeChangeSet operation, along with internal error types. Use this module to retrieve details about a specific change set in a CloudFormation stack, such as its status, associated resources, and planned actions.",
      "description_length": 420,
      "index": 291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.RecordHandlerProgress",
      "library": "aws-cloudformation",
      "description": "This module handles the progress recording functionality for AWS CloudFormation custom resource handlers. It provides functions to convert input data into properly signed HTTP requests and parse responses or errors from the service. It works with CloudFormation's internal input and error types, specifically for tracking handler progress during resource provisioning.",
      "description_length": 368,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackResourceDrift",
      "library": "aws-cloudformation",
      "description": "This module handles detecting resource drift for AWS CloudFormation stacks by sending and receiving HTTP requests. It works with input and output types specific to the `DetectStackResourceDrift` operation, along with internal error types for handling failures. Concrete use cases include checking if a stack's actual resource state differs from its expected template configuration, and handling the corresponding API responses and errors.",
      "description_length": 438,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ValidateTemplate",
      "library": "aws-cloudformation",
      "description": "This module validates AWS CloudFormation templates by converting input parameters into HTTP requests and parsing responses into structured outputs or errors. It handles template validation requests using specific input and output types defined in the CloudFormation service, ensuring correct query encoding and response decoding. Concrete use cases include checking template syntax and validating resource configurations before deployment.",
      "description_length": 439,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackEvents",
      "library": "aws-cloudformation",
      "description": "This module handles describing stack events for a given AWS CloudFormation stack by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML responses. Concrete use cases include retrieving event logs for monitoring stack operations and diagnosing deployment issues.",
      "description_length": 399,
      "index": 295,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles listing stack instances in AWS CloudFormation by converting input parameters into signed HTTP requests and parsing responses into structured outputs or errors. It works with CloudFormation-specific input and output types, such as `ListStackInstancesInput.t` and `ListStackInstancesOutput.t`, along with internal error types for failure handling. It is used to query CloudFormation for existing stack instances across accounts and regions, typically for management or auditing purposes.",
      "description_length": 505,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackResources",
      "library": "aws-cloudformation",
      "description": "This module handles listing resources associated with a specific AWS CloudFormation stack. It provides functions to convert input parameters into signed HTTP requests and parse responses or errors from AWS, specifically dealing with stack resource data. Use this module to retrieve and manage information about resources in a CloudFormation stack programmatically.",
      "description_length": 364,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackSet",
      "library": "aws-cloudformation",
      "description": "This module handles describing an AWS CloudFormation stack set by converting input parameters into an HTTP request and parsing the response. It works with input and output types specific to the `DescribeStackSet` operation, along with internal error types for handling failures. Concrete use cases include querying the status and configuration of a deployed stack set across multiple accounts and regions.",
      "description_length": 405,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStacks",
      "library": "aws-cloudformation",
      "description": "This module handles describing AWS CloudFormation stacks by converting input parameters into HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, including encoded query parameters and XML responses. Concrete use cases include retrieving stack details like status, parameters, and outputs by sending properly signed HTTP requests to the CloudFormation endpoint.",
      "description_length": 422,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStackInstances",
      "library": "aws-cloudformation",
      "description": "This module handles updating stack instances across specified accounts and regions in AWS CloudFormation. It works with input and output types defined in the `Aws_cloudformation.Types` module, specifically `UpdateStackInstancesInput` and `UpdateStackInstancesOutput`. Use this module to propagate updated stack set configurations to targeted deployments, ensuring consistent infrastructure across multiple environments.",
      "description_length": 419,
      "index": 300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types",
      "library": "aws-cloudformation",
      "description": "This module provides core types for modeling AWS CloudFormation stack and resource changes, including metadata for drift detection, change set evaluation, and resource recreation requirements. It defines structured data types such as status enums, parameter lists, resource attribute dictionaries, and change set descriptions, enabling precise tracking of infrastructure state and transformation logic. Operations include constructing, parsing, and serializing these data structures to and from JSON, XML, and query formats, supporting use cases like validating template configurations, monitoring update impacts, and diagnosing provisioning failures. Submodules extend this functionality with specialized types for error handling (e.g., `InvalidStateTransitionException`, `StackSetNotEmptyException`), change set management (e.g., `ChangeSetType`, `ChangeSetStatus`), resource tracking (e.g., `StackResourceDrift`, `ResourceChangeDetail`), and deployment control (e.g., `DeploymentPreferences`, `AutoDeployment`). Together, these components enable robust infrastructure-as-code workflows, from template validation and stack creation to drift detection and rollback handling, with strong type safety and format interoperability across AWS CloudFormation APIs.",
      "description_length": 1259,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListImports",
      "library": "aws-cloudformation",
      "description": "This module handles the conversion of inputs and outputs for the ListImports API call in AWS CloudFormation. It defines the data types for input, output, and errors, and provides functions to serialize inputs into HTTP requests and deserialize HTTP responses into outputs or errors. It is used to interact with CloudFormation's API to list imports for a given stack, handling request signing and response parsing.",
      "description_length": 413,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.RegisterType",
      "library": "aws-cloudformation",
      "description": "This module handles the registration of CloudFormation resource types by defining input and output types for the `RegisterType` API call. It provides functions to convert between native OCaml types and HTTP requests/responses, including proper query parameter encoding and error parsing. Concrete use cases include submitting new resource type definitions to AWS CloudFormation and processing the resulting registration status or errors.",
      "description_length": 437,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.EstimateTemplateCost",
      "library": "aws-cloudformation",
      "description": "This module handles estimating template costs for AWS CloudFormation by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the `EstimateTemplateCost` operation, along with internal error types for handling failures. Concrete use cases include submitting template cost estimation requests and decoding the resulting HTTP responses or errors.",
      "description_length": 415,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteChangeSet",
      "library": "aws-cloudformation",
      "description": "This module handles the deletion of AWS CloudFormation change sets by providing functions to construct and interpret HTTP requests and responses. It works with the `DeleteChangeSetInput` type for specifying the change set and stack names, and returns a unit result upon success. Concrete use cases include programmatically removing pending change sets after they are no longer needed or after applying a different change set.",
      "description_length": 425,
      "index": 305,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackDriftDetectionStatus",
      "library": "aws-cloudformation",
      "description": "This module handles the HTTP communication for checking the status of a stack drift detection operation in AWS CloudFormation. It converts input parameters into an HTTP request and decodes the response into a structured output or error. It works with CloudFormation-specific input and output types, such as `DescribeStackDriftDetectionStatusInput` and `DescribeStackDriftDetectionStatusOutput`, and handles errors returned by the service. A concrete use case is retrieving the current status of a previously initiated stack drift detection to determine if a stack's actual state differs from its expected template configuration.",
      "description_length": 628,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateChangeSet",
      "library": "aws-cloudformation",
      "description": "This module handles creating and managing change sets in AWS CloudFormation by providing functions to construct HTTP requests and parse responses according to the CreateChangeSet API. It works with input and output types specific to change set creation, including parameters like stack name, template body, and change set type. Concrete use cases include automating infrastructure updates, validating template changes, and initiating change set execution in deployment pipelines.",
      "description_length": 479,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetTemplateSummary",
      "library": "aws-cloudformation",
      "description": "This module handles retrieving and parsing template summaries from AWS CloudFormation. It works with input and output types specific to the `GetTemplateSummary` operation, including encoded HTTP requests and responses. Use this module to fetch metadata about CloudFormation templates, such as parameter definitions and resource types, directly from AWS.",
      "description_length": 353,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ExecuteChangeSet",
      "library": "aws-cloudformation",
      "description": "This module executes a CloudFormation change set by sending a signed HTTP request to the AWS service endpoint. It handles input encoding into a query string format, response decoding, and error parsing specific to the CloudFormation API. Concrete use cases include applying planned infrastructure changes and managing stack updates programmatically.",
      "description_length": 349,
      "index": 309,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListTypeVersions",
      "library": "aws-cloudformation",
      "description": "This module handles listing versions of a CloudFormation type by converting input parameters into signed HTTP requests and parsing responses. It works with input and output types specific to the CloudFormation service, along with internal error types for handling failures. Concrete use cases include querying available versions of a CloudFormation resource type and handling paginated results from the CloudFormation API.",
      "description_length": 422,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListExports",
      "library": "aws-cloudformation",
      "description": "This module handles listing AWS CloudFormation exports by converting input parameters into signed HTTP requests and parsing responses into structured outputs or errors. It works with `ListExportsInput` and `ListExportsOutput` types, along with internal error types for handling AWS-specific failures. It is used to retrieve exported output values from CloudFormation stacks, typically for cross-stack referencing or infrastructure automation tasks.",
      "description_length": 448,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.SignalResource",
      "library": "aws-cloudformation",
      "description": "This module handles signaling resources in AWS CloudFormation by providing functions to construct HTTP requests and parse responses for resource signaling operations. It works with `SignalResourceInput` to send signals to CloudFormation stacks, typically used to indicate success or failure of resource creation during stack updates. The module encodes inputs into signed HTTP requests and decodes responses, handling errors specific to the CloudFormation service.",
      "description_length": 464,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackInstance",
      "library": "aws-cloudformation",
      "description": "This module handles describing a stack instance in AWS CloudFormation by converting input parameters into an HTTP request and parsing the response. It works with input and output types specific to the `DescribeStackInstance` operation, along with error types defined in the CloudFormation service. It is used to retrieve detailed information about a specific stack instance in a stack set, including its status and associated account and region.",
      "description_length": 445,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Errors_internal",
      "library": "aws-cloudformation",
      "description": "This module defines a comprehensive set of error types representing specific failure conditions in CloudFormation operations, such as `InvalidParameter`, `StackSetNotFoundException`, and `Throttling`. It provides functions to convert errors to HTTP status codes, strings, and back from strings, enabling precise error handling and serialization. These operations are used to interpret and respond to service-specific errors during CloudFormation API interactions.",
      "description_length": 463,
      "index": 314,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation",
      "library": "aws-cloudformation",
      "description": "This module provides low-level access to AWS CloudFormation's API, enabling programmatic management of stacks, stack sets, resources, and related infrastructure operations. It defines structured input and output types for each operation, handles HTTP request signing, serialization, and response parsing, supporting actions like stack creation, deletion, drift detection, update rollbacks, and change set management. Developers can use this module to automate infrastructure workflows, such as deploying stacks across multiple accounts, detecting configuration drift, or managing resource policies through precise API interactions.",
      "description_length": 631,
      "index": 315,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 316,
    "meaningful_modules": 316,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 1259,
    "min_description_length": 238,
    "avg_description_length": 396.6835443037975,
    "embedding_file_size_mb": 1.1483230590820312
  }
}