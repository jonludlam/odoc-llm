{
  "package": "aws-cloudformation",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 317,
  "creation_timestamp": "2025-06-18T17:04:26.690117",
  "modules": [
    {
      "module_path": "Aws_cloudformation.Types.RequiresRecreation",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including parsing and serialization. Works with `t` and standard data types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`. Used to transform data for API requests and XML/JSON processing.",
      "description_length": 270,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceAttribute",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings for attribute values. Works with `t` and standard data types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`/`Aws.Json.t`. Used to serialize and deserialize resource attributes in AWS API interactions and XML parsing workflows.",
      "description_length": 341,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSource",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse XML input into structured data and generate JSON or query string outputs for API interactions.",
      "description_length": 303,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EvaluationType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceTargetDefinition",
      "description": "Provides operations to construct, parse, serialize, and deserialize resource target definitions, including creating instances with attributes, names, and recreation requirements, and converting between XML, query, and JSON formats. Works with custom types such as ResourceAttribute.t, Aws.BaseTypes.String.t, and RequiresRecreation.t. Used to process and exchange resource configuration data in AWS-related workflows.",
      "description_length": 417,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DifferenceType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse XML input into structured data and serialize data for API requests.",
      "description_length": 276,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChangeDetail",
      "description": "Provides methods to construct, parse, serialize, and deserialize objects representing detailed changes to AWS resources, including setting target definitions, evaluation types, change sources, and causing entities. Works with custom types such as ResourceTargetDefinition, EvaluationType, ChangeSource, and AWS-specific string and JSON structures. Used to process and transmit resource change metadata in AWS-related workflows, such as tracking configuration updates or deployment changes.",
      "description_length": 489,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackTrigger",
      "description": "Provides operations to create, parse, and serialize objects representing AWS rollback triggers, including converting between XML nodes, query parameters, and JSON structures. Works with AWS ARN strings, trigger types, and structured data formats. Used to process and generate AWS CloudFormation rollback configurations from XML input and JSON output.",
      "description_length": 350,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountGateStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic variant type and string representations for status values. Used to parse and generate AWS-compatible status data from XML and JSON inputs.",
      "description_length": 289,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic initialization function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize status information in AWS-related contexts.",
      "description_length": 272,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.PhysicalResourceIdContextKeyValuePair",
      "description": "Provides functions to create, parse, serialize, and deserialize key-value pairs representing physical resource IDs, working with strings and XML or JSON data structures. Includes a constructor for building instances, a parser for XML nodes, and conversions to query parameters, JSON associations, and from JSON. Used to handle AWS resource identifier metadata in request and response payloads.",
      "description_length": 393,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PropertyDifference",
      "description": "Encapsulates discrepancies between expected and actual values in a structured format, including a path, both values, and a type of difference. Works with strings, XML nodes, and JSON structures for parsing and serialization. Used to generate structured reports for AWS resource validation checks.",
      "description_length": 296,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeAction",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and specific mappings for string and XML parsing. Used to transform and encode data for API interactions and configuration settings.",
      "description_length": 292,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Replacement",
      "description": "Provides functions to convert between a custom type `t` and strings, XML nodes, and JSON structures. Includes bidirectional mappings for string representation and utilities for serializing and deserializing to AWS query and JSON formats. Supports creating default instances and parsing XML content into the type.",
      "description_length": 312,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChangeDetails",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of resource change details. Works with XML nodes, AWS query parameters, and JSON structures. Used to process and convert resource change data between different formats in AWS-related workflows.",
      "description_length": 267,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Scope",
      "description": "Creates a value with a scoped context and provides parsing and serialization functions for resource attributes. Operates on XML nodes, AWS query structures, and JSON representations. Converts between attribute lists and query or JSON formats for API interactions.",
      "description_length": 263,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` that is instantiated with a specific value. Used to handle resource drift status data in AWS interactions, such as converting between XML responses and internal state representations.",
      "description_length": 365,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AllowedValues",
      "description": "Provides operations to create a value from a single element, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize from JSON. Works with lists of string-type values and JSON structures. Used to handle allowed value sets in AWS API requests and responses.",
      "description_length": 323,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceDetailedStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle detailed status information in AWS-related operations, such as translating between internal state representations and external data formats.",
      "description_length": 379,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Capability",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings via `str_to_t` and `t_to_str`. Works with `t` and standard data types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`/`Aws.Json.t`. Used to serialize and deserialize `t` in API requests and responses, and to map between internal representations and external formats.",
      "description_length": 380,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Output",
      "description": "Provides functions to construct, parse, and serialize output configurations, including creating instances with specific keys, values, descriptions, and export names. Works with XML nodes, query parameters, and JSON structures for data interchange. Used to generate structured output for AWS service responses and configuration exports.",
      "description_length": 335,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Parameter",
      "description": "Provides operations to construct, parse, serialize, and deserialize parameter objects with keys, values, and resolution flags. Works with string-based parameters and JSON/XML data formats. Used to handle AWS parameter store entries during configuration retrieval and deployment workflows.",
      "description_length": 288,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackTriggers",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of rollback triggers. Operates on XML nodes, AWS query structures, and JSON representations. Used to handle trigger configurations in AWS CloudFormation rollback operations.",
      "description_length": 244,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Tag",
      "description": "Provides operations to create, parse, and serialize tag structures, including converting between XML nodes, query parameters, and JSON representations. Works with string-based key-value pairs encapsulated in a record type. Used to handle AWS tag data in API requests and responses, such as attaching tags to resources or extracting tags from XML payloads.",
      "description_length": 355,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountGateResult",
      "description": "Provides methods to construct, parse, and serialize a structured result containing an account gate status and reason. Works with a record type containing optional status and status reason fields. Used to process XML responses from AWS services and convert them into JSON-compatible representations for API interactions.",
      "description_length": 319,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to handle status information in AWS-related data processing workflows.",
      "description_length": 294,
      "index": 25,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftInformationSummary",
      "description": "Provides operations to construct, parse, serialize, and deserialize stack drift information, including a status and optional timestamp. Works with a record type containing a stack drift status and an optional timestamp. Used to process and transmit stack drift data in AWS API interactions.",
      "description_length": 290,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible status data from XML and JSON inputs.",
      "description_length": 274,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PhysicalResourceIdContext",
      "description": "Provides functions to create a context from a value, parse XML nodes into a list of key-value pairs, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with XML node structures and AWS query and JSON representations. Used to process and encode physical resource ID contexts in cloud infrastructure interactions.",
      "description_length": 356,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.PropertyDifferences",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of property difference records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit discrepancies between resource configurations in cloud infrastructure tools.",
      "description_length": 273,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and serialization functions. Works with a polymorphic type `t` and specific string-based transformations. Used to parse and generate AWS-compatible query parameters, JSON representations, and XML node data.",
      "description_length": 310,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceChange",
      "description": "Provides methods to construct, parse, serialize, and deserialize resource change objects. Works with types such as ChangeAction.t, Replacement.t, Scope.t, and ResourceChangeDetails.t. Used to process AWS CloudFormation resource change data from XML, query parameters, or JSON representations.",
      "description_length": 292,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type that can represent various state configurations. Used to transform and interpret status data from XML or JSON inputs into a structured format for API interactions.",
      "description_length": 315,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecutionStatus",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a hidden type `t` and associated string mappings. Used to transform execution status values for API communication and data serialization.",
      "description_length": 302,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierProperties",
      "description": "Provides functions to create, parse, and serialize resource identifier properties between different representations. Works with hash tables mapping strings to strings, converting them to query parameters, JSON associations, and vice versa. Used to handle AWS resource metadata in API requests and responses.",
      "description_length": 307,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AutoDeployment",
      "description": "Provides operations to construct, parse, and serialize configuration data for automated deployment settings, including enabling features and retaining stacks. Works with a record type containing boolean flags for deployment behavior. Used to generate AWS API requests and handle JSON serialization during infrastructure setup.",
      "description_length": 326,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.PermissionModels",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` and associated string mappings. Used to transform status data for API requests and XML parsing workflows.",
      "description_length": 287,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistryType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values representing account identifiers. Used to handle AWS account lists in API requests and responses, such as processing XML input from AWS services or generating JSON payloads for API calls.",
      "description_length": 398,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OrganizationalUnitIdList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of string-based organizational unit identifiers. Works with lists of strings formatted according to AWS conventions. Used to handle XML input, generate query parameters, and exchange data in JSON format within AWS API interactions.",
      "description_length": 302,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftDetectionStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` and associated string mappings. Used to handle drift detection status data in AWS interactions, such as converting between XML responses and internal state representations.",
      "description_length": 354,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` and associated string mappings. Used to handle drift status data in AWS interactions, such as converting between XML responses and internal state representations.",
      "description_length": 342,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegionList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of strings, convert a list of strings to a query structure, serialize to JSON format, and deserialize from JSON. Operates on lists of string values. Used to handle region information in AWS API requests and responses.",
      "description_length": 289,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceStatus",
      "description": "Converts between string representations and an internal resource status type, including XML parsing and AWS query/json serialization. Works with a custom type `t` and string values, supporting bidirectional mapping. Used to process and encode resource states in API requests and responses.",
      "description_length": 289,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationAction",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type and XML node structures. Used to serialize and deserialize data for web service interactions and configuration parsing.",
      "description_length": 265,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be initialized with a value and converted to various data formats. Used to handle status information in AWS-related operations, enabling seamless data exchange and storage.",
      "description_length": 357,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftInformationSummary",
      "description": "Provides operations to construct, parse, and serialize data related to stack resource drift status, including timestamp tracking. Works with a record type containing a drift status and an optional timestamp. Used to generate query parameters, JSON representations, and to reconstruct objects from JSON in AWS-related workflows.",
      "description_length": 327,
      "index": 47,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilterName",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, including parsing and serialization. Works with a polymorphic type `t` and associated string representations. Used to transform and validate stack instance names in AWS query and JSON contexts.",
      "description_length": 269,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterConstraints",
      "description": "Provides operations to create, parse, serialize, and deserialize parameter constraints from XML, JSON, and query formats. Works with custom types representing allowed values and structured data for AWS interactions. Used to validate and encode parameters in API requests and responses.",
      "description_length": 285,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.LogicalResourceIds",
      "description": "Provides functions to create, parse, and serialize resource identifiers as lists of strings. Parses XML nodes into identifier lists, converts them to query parameters and JSON structures, and reconstructs them from JSON. Used to handle AWS resource IDs in API requests and responses.",
      "description_length": 283,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifiers",
      "description": "Provides operations to create, parse, and serialize resource identifiers as lists of strings. Converts between XML nodes, query parameters, and JSON structures, enabling integration with AWS services and data serialization formats. Supports constructing and deconstructing identifier lists for use in API requests and responses.",
      "description_length": 328,
      "index": 51,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceComprehensiveStatus",
      "description": "Provides operations to construct, parse, serialize, and deserialize stack instance status data. Works with a record type containing a detailed status field and a timestamp. Used to generate AWS API queries and JSON representations from XML nodes for cloud infrastructure monitoring.",
      "description_length": 282,
      "index": 52,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceStatus",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent stack instance statuses. Used to transform status values for API requests and responses, and to handle XML and JSON data in cloud infrastructure interactions.",
      "description_length": 348,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Capabilities",
      "description": "Creates and manipulates capability lists from XML, query parameters, and JSON. Processes XML nodes into structured capability data and converts between list representations and AWS query/json formats. Used to parse and serialize capabilities in API requests and responses.",
      "description_length": 272,
      "index": 54,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.NotificationARNs",
      "description": "Provides operations to create, parse, and serialize notification ARN lists. Works with lists of strings representing AWS ARNs and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into ARN lists and ensures type-safe handling of notification identifiers.",
      "description_length": 289,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Outputs",
      "description": "Provides functions to create output values, parse XML nodes into output lists, convert output lists to AWS query parameters, serialize outputs to JSON format, and deserialize JSON back into output lists. Works with XML node structures, AWS query and JSON representations, and lists of output records. Used to process and transform API response data into structured formats for further handling or transmission.",
      "description_length": 410,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Parameters",
      "description": "Provides functions to create, parse, and serialize parameter lists. Operates on XML nodes, JSON values, and AWS query structures. Used to convert between XML representations of query parameters and JSON-compatible formats for API interactions.",
      "description_length": 243,
      "index": 57,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RollbackConfiguration",
      "description": "Provides operations to construct, parse, and serialize configuration data for rollback mechanisms, including setting rollback triggers and monitoring time. Works with custom types representing configuration parameters and XML or JSON data structures. Used to initialize rollback settings from XML input and convert them into query parameters or JSON for API interactions.",
      "description_length": 371,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftInformation",
      "description": "Provides operations to construct, parse, and serialize stack drift information, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a stack drift status and an optional timestamp. Used to process and transmit details about AWS CloudFormation stack drift states in API interactions.",
      "description_length": 349,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Tags",
      "description": "Creates and manipulates tags for AWS resources, converting between XML nodes, query parameters, and JSON representations. Operates on lists of tag structures, each consisting of a name and value. Used to serialize and deserialize tags in API requests and responses.",
      "description_length": 265,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftInformation",
      "description": "Provides operations to construct, parse, and serialize stack resource drift information, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a drift status and an optional timestamp. Used to process and transmit AWS CloudFormation stack resource drift data in API interactions.",
      "description_length": 345,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultSummary",
      "description": "Provides operations to construct, parse, and serialize objects representing the outcome of AWS CloudFormation stack set operations, including account and organizational unit details, status, and reasons. Works with types such as strings, status indicators, and custom result structures. Used to process and transmit stack set operation results in AWS API interactions.",
      "description_length": 368,
      "index": 62,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountLimit",
      "description": "Provides operations to create, parse, and serialize account limit data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional name and value fields. Used to process and transmit account limit configurations in AWS API interactions.",
      "description_length": 310,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSummary",
      "description": "Provides operations to construct, parse, and serialize stack summary data, including timestamps, status, and drift information. Works with custom types such as stack status, date times, and string identifiers. Used to generate AWS API-compatible queries and JSON representations from stack metadata.",
      "description_length": 299,
      "index": 64,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDrift",
      "description": "Provides operations to construct, parse, and serialize stack resource drift data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with types such as stack IDs, resource IDs, property differences, and timestamps. Used to process and exchange detailed drift information between AWS API interactions and internal data handling.",
      "description_length": 374,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Change",
      "description": "Provides operations to construct, parse, and serialize change objects, including converting between XML nodes, query parameters, and JSON representations. Works with custom types such as ChangeType.t and ResourceChange.t to represent structured change data. Used to generate AWS API requests and process XML responses in cloud infrastructure workflows.",
      "description_length": 352,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetSummary",
      "description": "Encapsulates details of a CloudFormation change set, including identifiers, execution status, and timestamps. Parses XML nodes into structured data and serializes to query parameters, JSON, or deserializes from JSON. Used to process and transmit change set metadata in AWS interactions.",
      "description_length": 286,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Export",
      "description": "Provides functions to construct, parse, and serialize export configurations using XML nodes, query parameters, and JSON. Works with string-based identifiers and values, and a structured record type containing export details. Used to generate AWS-compatible query strings from export data and to convert between XML and JSON representations.",
      "description_length": 340,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceToImport",
      "description": "Provides operations to construct, parse, serialize, and deserialize resource objects using a logical ID, resource type, and identifier properties. Works with structured data including XML nodes, JSON values, and query parameters. Used to convert AWS resource definitions between formats for processing and transmission.",
      "description_length": 319,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateParameter",
      "description": "Encapsulates template parameters with key, default value, echo suppression, and description fields. Parses XML nodes into parameter structures and serializes to query strings and JSON formats. Used to construct and validate CloudFormation template parameters during deployment workflows.",
      "description_length": 287,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetSummary",
      "description": "Provides operations to construct, parse, and serialize stack set summary data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data containing stack set identifiers, statuses, descriptions, and timestamps. Used to process AWS CloudFormation stack set metadata in API responses and configuration files.",
      "description_length": 353,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeSummary",
      "description": "Provides operations to construct, parse, serialize, and deserialize type metadata objects. Works with structured data including type identifiers, ARNs, timestamps, and descriptions. Used to generate query parameters from type records and convert between XML and JSON representations.",
      "description_length": 283,
      "index": 72,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeploymentTargets",
      "description": "Provides methods to construct, parse, and serialize deployment target configurations, including building from account lists or organizational unit IDs, converting XML nodes to internal representations, and serializing to AWS query and JSON formats. Works with account lists, organizational unit IDs, and AWS-specific data structures like Query.t and Json.t. Used to prepare and process deployment targets for cloud infrastructure setup and configuration management.",
      "description_length": 465,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetDriftDetectionDetails",
      "description": "Provides methods to construct, parse, and serialize objects containing details about stack set drift detection, including drift status, instance counts, and timestamps. Works with custom types representing drift status, timestamps, and integer counts. Used to process and transmit AWS CloudFormation stack set drift detection data in API requests and responses.",
      "description_length": 361,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationPreferences",
      "description": "Provides operations to configure and serialize stack set preferences including region order, failure tolerance, and concurrency limits. Works with custom types representing AWS stack set configurations and XML/JSON data structures. Used to generate query parameters for AWS API calls and parse XML responses into structured preference settings.",
      "description_length": 344,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackEvent",
      "description": "Provides operations to construct, parse, serialize, and deserialize stack event records. Works with string-based identifiers, timestamps, and resource status information. Used to process AWS CloudFormation event data from XML and convert it to query and JSON formats for API interactions.",
      "description_length": 288,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeVersionSummary",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing AWS type versions, including setting attributes like type, version ID, ARN, and creation time. Works with custom record types containing string, boolean, and datetime fields, as well as JSON and query parameter representations. Used to process and exchange versioned type data in AWS service interactions.",
      "description_length": 394,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationSummary",
      "description": "Provides operations to construct, parse, and serialize stack set operation summaries with fields like operation ID, action, status, and timestamps. Works with custom record types and XML or JSON data formats. Used to convert between AWS API response structures and internal representations for processing stack set operations.",
      "description_length": 326,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceSummary",
      "description": "Provides operations to construct, parse, serialize, and deserialize stack resource summaries. Works with types including logical and physical resource IDs, timestamps, resource statuses, and drift information. Used to generate query parameters, JSON representations, and parse XML responses from AWS CloudFormation.",
      "description_length": 315,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilter",
      "description": "Provides operations to construct, parse, and serialize filter structures for stack instances, including creating with optional name and values, parsing XML nodes, and converting to query and JSON formats. Works with custom types for stack instance names and string values. Used to filter AWS CloudFormation stack instances in API requests and responses.",
      "description_length": 353,
      "index": 80,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterDeclaration",
      "description": "Encodes and decodes parameter configuration data with fields for key, default value, type, echo suppression, description, and constraints. Processes XML nodes into structured parameter objects and serializes them into query strings and JSON format. Used to handle AWS parameter store definitions in API requests and responses.",
      "description_length": 326,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierSummary",
      "description": "Provides methods to construct, parse, and serialize resource identifier data, including converting between XML nodes, query parameters, and JSON representations. Works with custom types for resource types, logical resource IDs, and resource identifiers. Used to process and encode AWS resource metadata in API requests and responses.",
      "description_length": 333,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceSummary",
      "description": "Provides operations to construct, parse, and serialize stack instance summaries with detailed status information. Works with types including stack identifiers, regions, accounts, status codes, and timestamps. Used to process and transmit AWS CloudFormation stack instance data in API requests and responses.",
      "description_length": 307,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Stack",
      "description": "Provides operations to construct, parse, and serialize stack data structures with detailed attributes like stack name, status, parameters, and timestamps. Works with custom types such as `Parameters.t`, `StackStatus.t`, and `Outputs.t` to represent cloud infrastructure configurations. Used to generate API requests, process XML responses, and convert stack data to JSON for storage or transmission.",
      "description_length": 399,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResource",
      "description": "Provides operations to construct, parse, serialize, and deserialize stack resource data. Works with types including strings, dates, resource status, and drift information. Used to handle AWS CloudFormation stack resource details in API requests and responses.",
      "description_length": 259,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateStage",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including parsing from XML and serializing to query parameters. Works with `t` and standard types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`/`Aws.Json.t`. Used to transform data structures for API requests and XML/JSON processing.",
      "description_length": 316,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDriftStatusFilters",
      "description": "Processes XML nodes into a list of stack resource drift status values, converts them to query parameters, and serializes/deserializes them to and from JSON. Operates on XML node sequences, JSON values, and lists of stack resource drift status enumerations. Used to handle AWS CloudFormation drift status data during API request construction and response parsing.",
      "description_length": 362,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationResultSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack set operation result summaries. Works with XML nodes, AWS query parameters, and JSON structures. Parses XML responses from AWS API calls and converts them into structured data for further processing.",
      "description_length": 278,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AccountLimitList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of account limit records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data from API responses and structured account limit data for processing.",
      "description_length": 267,
      "index": 89,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize stack summaries. Operates on lists of StackSummary.t values and XML nodes, converting them into query parameters and JSON structures. Used to process cloud stack data from XML responses and prepare it for API queries or storage.",
      "description_length": 292,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDrifts",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack resource drift records. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and exchange drift data between XML-based APIs and JSON serialization formats.",
      "description_length": 268,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackStatusFilter",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack status values. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and convert stack status data between different formats in API interactions.",
      "description_length": 257,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Changes",
      "description": "Provides operations to create a singleton list, parse XML nodes into a list of change records, convert change lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with XML nodes, AWS query structures, and JSON values. Used to process and transmit change data in API requests and responses.",
      "description_length": 326,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetSummaries",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of change set summaries. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and structured data for API interactions.",
      "description_length": 239,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Exports",
      "description": "Creates a value of a given type and returns a function that yields it. Parses XML nodes into a list of export records. Converts export records to AWS query parameters, JSON structures, and back from JSON. Works with XML nodes, AWS query and JSON representations, and a list of export records. Used to serialize and deserialize export data for API interactions and XML processing.",
      "description_length": 379,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.RetainResources",
      "description": "Provides functions to create a delayed value, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize JSON back to string lists. Works with XML nodes, string lists, and JSON structures. Used to process and retain resource identifiers from XML responses and prepare them for API queries or JSON serialization.",
      "description_length": 375,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceTypes",
      "description": "Provides operations to create a value from a single element, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize JSON back to string lists. Works with lists of string-type values and JSON structures. Used to process and format resource identifiers in AWS API interactions.",
      "description_length": 343,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourcesToImport",
      "description": "Provides functions to create, parse, and serialize resource data between XML, query, and JSON formats. Operates on lists of resource objects, each representing a structured data element. Used to convert XML input into query parameters for API calls and to handle JSON serialization for data exchange.",
      "description_length": 300,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourcesToSkip",
      "description": "Provides functions to create, parse, and convert a list of strings into query parameters, JSON lists, and from JSON. Operates on lists of string-type values, typically used for handling resource identifiers. Used to transform XML node data into structured query formats and serialize/deserialize resource lists in API interactions.",
      "description_length": 331,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TemplateParameters",
      "description": "Provides functions to create, parse, and serialize template parameters between XML, query, and JSON formats. Operates on lists of parameter objects, each containing a name and value. Used to convert XML input from templates into structured data for AWS requests and to generate JSON representations for API interactions.",
      "description_length": 320,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TransformsList",
      "description": "Provides functions to create a list from a single element, parse XML nodes into a list of strings, convert lists to query parameters, serialize lists to JSON, and deserialize JSON back into lists. Works with lists of string-type values and JSON structures. Used to process XML input for API requests and format data for JSON serialization in AWS-related workflows.",
      "description_length": 364,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstance",
      "description": "Provides operations to construct, parse, and serialize stack instance data, including handling parameters, status details, and timestamps. Works with custom types such as stack identifiers, status enums, and JSON/XML representations. Used to generate AWS API requests and process responses related to stack instances in cloud infrastructure management.",
      "description_length": 352,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack set summaries. Operates on XML nodes, JSON values, and AWS query parameters. Used to convert between XML responses from AWS API calls and internal data structures for processing and querying.",
      "description_length": 270,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of type summaries. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML input and structured data for API interactions.",
      "description_length": 226,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceDetail",
      "description": "Provides operations to construct, parse, serialize, and deserialize stack resource details, including stack names, IDs, logical and physical resource IDs, status, and timestamps. Works with custom types such as resource status, date-time, and drift information. Used to process AWS CloudFormation resource data from XML and JSON formats for monitoring and reporting.",
      "description_length": 366,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackDriftDetectionStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, including parsing and serialization. Works with a polymorphic type `t` and string representations, enabling data interchange and configuration handling. Used to transform and validate status information from XML or JSON sources into a structured format.",
      "description_length": 329,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistrationStatus",
      "description": "Converts between a custom type and string representations, XML nodes, and JSON or query parameters. Works with a polymorphic variant type and provides bidirectional mappings for serialization and deserialization. Used to process and encode registration status data in API requests and responses.",
      "description_length": 295,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperation",
      "description": "Provides functions to construct, parse, and serialize stack set operation data, including timestamps, status, and deployment preferences. Works with types such as datetime, boolean, and custom records for stack set details and drift detection. Used to generate API requests and process XML or JSON responses from AWS CloudFormation.",
      "description_length": 332,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackEvents",
      "description": "Provides functions to create, parse, serialize, and deserialize stack event data. Operates on XML nodes, JSON values, and lists of stack event records. Used to convert XML responses from AWS API calls into structured event lists and generate query parameters for API requests.",
      "description_length": 276,
      "index": 110,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSet",
      "description": "Provides functions to construct, parse, and serialize stack set configurations, including handling detailed attributes like status, parameters, and tags. Works with custom types such as `StackSetStatus.t`, `Parameters.t`, and `Tags.t` to represent AWS CloudFormation stack set data. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 365,
      "index": 111,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeprecatedStatus",
      "description": "Provides conversion between a status type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` and associated string mappings. Used to handle deprecated status values in API requests and responses.",
      "description_length": 277,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ProvisioningType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize values for XML and JSON formats in AWS-related operations.",
      "description_length": 281,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Visibility",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with `t`, strings, XML nodes, and AWS-specific data structures like `Query.t` and `Json.t`. Used to parse XML responses into internal representations and serialize data for API requests.",
      "description_length": 322,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeVersionSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of type version summaries. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between raw XML data from API responses and structured OCaml representations for further processing.",
      "description_length": 275,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.Imports",
      "description": "Provides functions to create a value from a single element, parse XML nodes into a list of strings, convert string lists to query structures, serialize to JSON lists, and deserialize from JSON to string lists. Works with lists of string-type values and JSON structures. Used to process and transform XML input into queryable and serializable formats for AWS interactions.",
      "description_length": 371,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetOperationSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack set operation summaries. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data from API responses and structured OCaml representations for further processing.",
      "description_length": 286,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResourceSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack resource summaries. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML responses from AWS APIs and structured OCaml data for further processing.",
      "description_length": 262,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.HandlerErrorCode",
      "description": "Provides conversion between error codes and strings, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` representing error codes and associated string mappings. Used to handle AWS error responses by converting between internal representations and external data formats.",
      "description_length": 325,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize status values in XML and JSON formats for API interactions.",
      "description_length": 282,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LoggingConfig",
      "description": "Provides operations to construct, parse, and serialize logging configuration data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing a log role ARN and log group name. Used to initialize logging settings from XML input and prepare them for API requests or storage.",
      "description_length": 336,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceFilters",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of stack instance filters. Operates on XML nodes, AWS query parameters, and JSON structures representing filter lists. Used to process and encode filter criteria for AWS stack instance queries.",
      "description_length": 264,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceSignalStatus",
      "description": "Converts between string representations and an internal state type, including XML parsing and JSON serialization. Handles bidirectional mapping between the type and its string form, as well as integration with AWS query and JSON formats. Supports creating default instances and safely parsing XML nodes into the type.",
      "description_length": 317,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ParameterDeclarations",
      "description": "Provides functions to create, parse, and serialize parameter declarations between XML, query, and JSON formats. Operates on lists of parameter declaration records and JSON structures. Used to convert XML input from API descriptions into structured data, and to generate query parameters or JSON representations for API requests.",
      "description_length": 328,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ResourceIdentifierSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of resource identifier summaries. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert XML responses from AWS APIs into structured data and back for API requests.",
      "description_length": 261,
      "index": 125,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceSummaries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stack instance summaries. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data from API responses and structured OCaml representations for further processing.",
      "description_length": 281,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.Stacks",
      "description": "Provides operations to create stacks from values, parse XML nodes into stack structures, convert stacks to AWS query parameters, serialize stacks to JSON, and deserialize JSON back into stacks. Works with XML node lists, AWS query structures, and JSON representations of nested associations. Used to process and transform stack data for API requests and data serialization.",
      "description_length": 373,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OnFailure",
      "description": "Provides conversion between a custom type and strings, including bidirectional mappings and serialization to and from JSON and query formats. Works with a polymorphic type that can represent various failure states. Used to encode and decode error information in API responses and logs.",
      "description_length": 285,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegistrationTokenList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing registration tokens. Used to handle token-based authentication data in API requests and responses.",
      "description_length": 318,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StackResources",
      "description": "Provides functions to create, parse, serialize, and deserialize stack resource data. Operates on XML nodes and JSON structures, converting them into lists of stack resource objects. Used to process cloud formation resource data for query generation and JSON serialization.",
      "description_length": 272,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StageList",
      "description": "Creates a singleton list from a single value and parses XML nodes into a list of template stages. Converts stage lists to AWS query parameters and JSON representations, supporting serialization and deserialization from JSON. Used to process and format stage configurations in AWS-related workflows.",
      "description_length": 298,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceDriftsInput",
      "description": "Provides operations to construct, parse, and serialize input for querying stack resource drift status, including filtering by status, pagination, and specifying stack names. Works with types such as stack names, status filters, tokens for pagination, and result limits. Used to generate API requests for AWS CloudFormation drift detection workflows.",
      "description_length": 349,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.NameAlreadyExistsException",
      "description": "Provides functions to create, parse, and serialize an exception type representing a duplicate name, working with unit types and AWS query structures. Includes conversion to and from JSON for interoperability. Used to handle name collision errors in system registration processes.",
      "description_length": 279,
      "index": 133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationResultsOutput",
      "description": "Provides operations to construct, parse, and serialize a structured result containing stack set operation summaries and pagination tokens. Works with custom types for summaries and AWS-specific data structures like query and JSON representations. Used to process and format responses from AWS CloudFormation stack set operations.",
      "description_length": 329,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeAccountLimitsOutput",
      "description": "Provides operations to construct, parse, and serialize account limit data, including converting between XML nodes, query parameters, and JSON representations. Works with `AccountLimitList.t` and AWS-specific types for handling API responses. Used to process and transmit account limit information from AWS API calls.",
      "description_length": 316,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackOutput",
      "description": "Creates a structured representation of a stack output, supporting initialization with an optional stack ID, XML parsing, query string generation, and JSON serialization and deserialization. Works with AWS-related types such as strings, XML nodes, and JSON values. Used to process and format stack output data for API responses and configuration files.",
      "description_length": 351,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackSetDriftOutput",
      "description": "Provides functions to construct, parse, and serialize a structure representing the output of a stack set drift detection operation. Works with a record type containing fields for operation ID and other drift-related data. Used to generate HTTP queries and JSON representations for API responses and to convert JSON input into structured data.",
      "description_length": 342,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceInput",
      "description": "Provides operations to construct, parse, and serialize data for describing a stack resource, including creating an instance from parameters, parsing XML nodes, and converting to query or JSON formats. Works with string-based stack names and logical resource IDs, and a structured type representing the input. Used to prepare and process requests for retrieving details about a specific resource within an AWS CloudFormation stack.",
      "description_length": 430,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateChangeSetOutput",
      "description": "Provides operations to construct, parse, and serialize a change set output structure, including creating an instance with optional identifiers, parsing XML nodes into the structure, and converting between JSON and query formats. Works with string-based identifiers and a structured record type containing optional fields. Used to generate and process AWS CloudFormation change set outputs in API interactions.",
      "description_length": 409,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStacksOutput",
      "description": "Provides operations to construct, parse, and serialize stack output data, including converting between XML nodes, query parameters, and JSON representations. Works with stack summaries and pagination tokens as part of AWS API responses. Used to process and format stack information for API requests and responses.",
      "description_length": 313,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceDriftsOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing stack resource drift information, including methods to convert between XML nodes, query parameters, and JSON. Works with custom types for stack resource drifts and string-based tokens for pagination. Used to process and transmit AWS CloudFormation drift detection results in API interactions.",
      "description_length": 376,
      "index": 141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateInput",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS CloudFormation template input parameters. Works with structured data including stack names, change set names, and template stages. Used to generate query parameters for API requests and convert between XML and JSON representations during template processing.",
      "description_length": 338,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInstancesOutput",
      "description": "Provides functions to construct, parse, and serialize a response structure containing an operation ID, supporting XML and JSON formats. Works with AWS query parameters and JSON objects, enabling integration with API responses. Used to handle output from stack instance deletion operations in AWS CloudFormation.",
      "description_length": 311,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStacksInput",
      "description": "Provides operations to construct, parse, and serialize stack input data, including handling next tokens and status filters. Works with AWS-specific types such as strings, query parameters, and JSON structures. Used to generate API requests and process XML responses for stack management operations.",
      "description_length": 298,
      "index": 144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StaleRequestException",
      "description": "Provides functions to create, parse, and serialize exceptions related to stale requests. Works with unit type and AWS query structures. Used to generate HTTP query parameters and JSON representations for error handling in request validation workflows.",
      "description_length": 251,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeAccountLimitsInput",
      "description": "Provides operations to construct, parse, and serialize account limit query parameters, including creating instances with optional pagination tokens, converting to HTTP query strings, and handling JSON serialization and deserialization. Works with AWS query and JSON data structures, as well as string-based pagination tokens. Used to prepare input for API calls that retrieve account-specific resource limits.",
      "description_length": 409,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeChangeSetOutput",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS CloudFormation change set outputs, including methods to convert between XML, query parameters, and JSON formats. Works with data types such as strings, dates, lists, and custom records for change set details, parameters, and status information. Used to process and transmit CloudFormation change set responses in API interactions and data serialization workflows.",
      "description_length": 442,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetStackPolicyInput",
      "description": "Provides operations to construct, parse, and serialize stack policy input data, including creating instances from a stack name, parsing XML nodes, and converting to query or JSON formats. Works with AWS stack names and structured data representations. Used to prepare and process inputs for retrieving stack policy configurations in AWS CloudFormation.",
      "description_length": 352,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetStackPolicyOutput",
      "description": "Provides operations to construct, parse, and serialize stack policy data from XML and JSON formats. Works with XML nodes and JSON values to convert between structured data and query parameters. Used to process AWS CloudFormation stack policy responses in API interactions.",
      "description_length": 272,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetsInput",
      "description": "Provides operations to construct, parse, and serialize data structures for AWS CloudFormation stack set inputs, including handling pagination tokens, result limits, and status filters. Works with custom types for AWS query parameters, JSON serialization, and XML parsing. Used to prepare and process input for API calls querying stack set details.",
      "description_length": 347,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackInstanceNotFoundException",
      "description": "Provides functions to create, parse, and serialize exceptions related to missing stack instances, working with unit types and AWS query structures. Converts between JSON and query formats for error handling in AWS interactions. Used to represent and manage stack instance absence errors in cloud infrastructure workflows.",
      "description_length": 321,
      "index": 151,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationNotFoundException",
      "description": "Provides functions to create, parse, and serialize an exception type representing undefined operations. Works with unit type and AWS query/json structures. Used to handle missing operation scenarios in API request processing.",
      "description_length": 225,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InsufficientCapabilitiesException",
      "description": "Provides a mechanism to create and handle exceptions related to insufficient capabilities, including parsing input into optional values, converting to AWS query format, serializing to JSON, and deserializing from JSON. Operates with unit type and generic input types. Used to manage error conditions in AWS-related operations where permissions or resources are lacking.",
      "description_length": 369,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOperationInput",
      "description": "Provides functions to construct, parse, and serialize data structures representing stack set operation inputs, including creating instances with names and operation IDs, converting to query parameters, and handling JSON serialization and deserialization. Works with string-based identifiers and structured data types for cloud infrastructure operations. Used to prepare and process inputs for stack set operations in AWS CloudFormation workflows.",
      "description_length": 446,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TypeNotFoundException",
      "description": "Provides functions to create, parse, and serialize error data related to missing type information. Works with unit type and AWS query/json structures. Used to handle and convert type not found scenarios in AWS service interactions.",
      "description_length": 231,
      "index": 155,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListChangeSetsOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing change sets, including methods to generate AWS query parameters, JSON representations, and parse XML nodes. Works with custom types for summaries and pagination tokens. Used to handle AWS service responses that include change set metadata and navigation tokens.",
      "description_length": 345,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationsInput",
      "description": "Provides operations to construct, parse, and serialize data structures representing stack set inputs, including name, pagination tokens, and result limits. Works with custom types encapsulating AWS stack set parameters and XML or JSON representations. Used to generate query parameters for API requests and to decode input from XML responses.",
      "description_length": 342,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListExportsOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS service export outputs. Works with custom types for exports and pagination tokens, and supports XML, query, and JSON formats. Used to generate HTTP requests and process API responses in AWS integration scenarios.",
      "description_length": 300,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInput",
      "description": "Provides operations to construct, parse, and serialize input for deleting a stack, including setting the stack name, retention preferences, role ARN, and client token. Works with AWS-specific types such as strings, JSON, and query parameters. Used to generate API requests for stack deletion in cloud infrastructure management workflows.",
      "description_length": 337,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationIdAlreadyExistsException",
      "description": "Provides functions to create, parse, and serialize an exception type representing a duplicate operation ID. Works with unit type and AWS query/json structures. Used to handle and encode errors in API operations where an ID conflict occurs.",
      "description_length": 239,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackInstancesInput",
      "description": "Provides operations to construct, parse, and serialize input for deleting stack instances, including setting stack set names, accounts, regions, and operation preferences. Works with types such as account lists, region lists, and boolean flags. Used to generate AWS API requests for stack deletion workflows.",
      "description_length": 308,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackSetInput",
      "description": "Provides operations to construct, parse, and serialize a structure representing a stack set deletion request, including converting between XML nodes, query parameters, and JSON. Works with a record type containing a stack set name. Used to prepare and process inputs for deleting a stack set in AWS CloudFormation.",
      "description_length": 314,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateChangeSetInput",
      "description": "Provides functions to construct, parse, and serialize a CloudFormation change set input, including setting stack name, template, parameters, and other configuration options. Works with types such as strings, booleans, lists, and custom records for parameters, capabilities, and resource types. Used to generate structured inputs for AWS CloudFormation API calls, particularly for creating or updating stacks with specific changes.",
      "description_length": 430,
      "index": 163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.AlreadyExistsException",
      "description": "Provides functions to create, parse, and serialize exceptions related to existing resources. Works with unit type and AWS query/json structures. Used to handle and convert conflict errors in API interactions.",
      "description_length": 208,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ContinueUpdateRollbackInput",
      "description": "Provides operations to construct, parse, and serialize input for handling continue, update, and rollback actions in AWS CloudFormation. Works with types such as stack names, ARNs, resource lists, and JSON structures. Used to generate query parameters and JSON payloads for API interactions during stack updates.",
      "description_length": 311,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackSetInput",
      "description": "Creates and manipulates a structured representation of stack set input parameters, including names, descriptions, templates, parameters, capabilities, tags, and roles. Works with specific types such as strings, lists of parameters, capabilities, tags, and enumerated permission models. Used to generate AWS API-compatible queries and JSON payloads for stack set operations.",
      "description_length": 373,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ValidateTemplateInput",
      "description": "Provides operations to construct, parse, and serialize template input data, including creating instances from optional string parameters, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with string-based template bodies and URLs, and a structured record type containing these values. Used to validate and prepare template inputs for AWS CloudFormation operations.",
      "description_length": 427,
      "index": 167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.CreatedButModifiedException",
      "description": "Provides functions to create, parse, and serialize exceptions representing \"created but modified\" states. Works with unit type and custom data structures for AWS query and JSON representation. Used to handle specific HTTP 200 responses where a resource is updated but not newly created.",
      "description_length": 286,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ValidateTemplateOutput",
      "description": "Provides operations to construct, parse, and serialize template output data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with types such as template parameters, capabilities, transforms, and string descriptions. Used to validate and prepare AWS CloudFormation template outputs for API requests and configuration files.",
      "description_length": 372,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackInstanceOutput",
      "description": "Provides operations to construct, parse, and serialize stack instance data, including converting between XML nodes, query parameters, and JSON representations. Works with the `StackInstance.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and format responses from AWS CloudFormation stack instance operations.",
      "description_length": 372,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CancelUpdateStackInput",
      "description": "Provides operations to construct, parse, and serialize input for canceling a stack update, including creating instances with a stack name and optional client token, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with AWS stack names, client request tokens, and XML or JSON data formats. Used to generate API requests for AWS CloudFormation stack updates.",
      "description_length": 419,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SetTypeDefaultVersionOutput",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and related JSON structures. Used to generate and process output representations in AWS-related workflows.",
      "description_length": 227,
      "index": 172,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetsOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing stack set outputs, including summaries and pagination tokens. Works with custom types for stack set summaries and AWS query/json formats. Used to generate HTTP requests and process XML responses in AWS CloudFormation interactions.",
      "description_length": 314,
      "index": 173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypesOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing list-type outputs, including handling type summaries and pagination tokens. Works with custom record types containing type summaries, next tokens, and structured data. Used to generate AWS query parameters from structured responses and to deserialize XML or JSON input into internal representations.",
      "description_length": 383,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourceOutput",
      "description": "Provides operations to construct, parse, and serialize a stack resource output structure, including converting between XML nodes, query parameters, and JSON representations. Works with the `StackResourceDetail.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format responses from AWS CloudFormation stack resource operations.",
      "description_length": 375,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStacksInput",
      "description": "Provides operations to construct, parse, and serialize stack input data, including creating instances with optional stack names and pagination tokens, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with AWS stack names, pagination tokens, and XML/JSON data structures. Used to process and prepare input for AWS stack-related API calls, such as retrieving stack details or managing resources.",
      "description_length": 456,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EstimateTemplateCostInput",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS CloudFormation template cost estimation inputs. Works with string-based template bodies or URLs and parameter mappings. Used to generate query parameters for API requests and convert data to and from JSON format.",
      "description_length": 292,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeRegistrationInput",
      "description": "Provides functions to construct, parse, and serialize a type registration input structure, including converting between XML nodes, query parameters, and JSON. Works with a record type containing a registration token and other associated data. Used to process and encode input for AWS type registration APIs.",
      "description_length": 307,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackDriftDetectionStatusOutput",
      "description": "Provides operations to construct, parse, and serialize objects representing the status of stack drift detection, including methods to convert between XML, query parameters, and JSON formats. Works with types such as stack IDs, drift status enums, timestamps, and integer counts. Used to process and exchange drift detection results in AWS CloudFormation integration workflows.",
      "description_length": 376,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeRegistrationsInput",
      "description": "Provides constructors and parsers for AWS service input parameters, including type registration filters and pagination. Works with custom types such as RegistryType.t, Aws.BaseTypes.String.t, and RegistrationStatus.t. Used to generate query strings and JSON representations for API requests related to resource type registration.",
      "description_length": 329,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackSetOutput",
      "description": "Creates a structured representation of a stack set output, supporting initialization with an optional stack set ID. Parses XML nodes into this structure and converts it to query parameters, JSON, or from JSON. Used to handle AWS CloudFormation stack set responses in a typed, serializable format.",
      "description_length": 296,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOperationOutput",
      "description": "Provides functions to construct, parse, and serialize operations related to stack sets, including converting between XML nodes, query parameters, and JSON representations. Works with the `StackSetOperation.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API responses and prepare data for AWS service interactions.",
      "description_length": 359,
      "index": 182,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ContinueUpdateRollbackOutput",
      "description": "Provides operations to create, parse, and serialize data structures into AWS query and JSON formats. Works with unit type and generic input values. Used to handle continuation tokens in AWS API responses, enabling stateful operations and rollback mechanisms.",
      "description_length": 258,
      "index": 183,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackEventsOutput",
      "description": "Provides operations to construct, parse, and serialize stack event data, including converting between XML nodes, query parameters, and JSON representations. Works with `StackEvents.t` and AWS-specific types for handling cloud formation stack events. Used to process and transmit detailed stack event information from AWS API responses.",
      "description_length": 335,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetOutput",
      "description": "Provides operations to construct, parse, and serialize stack set output data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data representing AWS CloudFormation stack sets. Used to process and transmit stack set information in API responses and configuration files.",
      "description_length": 325,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackDriftInput",
      "description": "Provides operations to construct, parse, and serialize input for detecting stack drift, including creating instances from a stack name and optional resource IDs, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with types such as stack names, logical resource IDs, XML nodes, and JSON structures. Used to prepare and process inputs for AWS CloudFormation stack drift detection workflows.",
      "description_length": 450,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypesInput",
      "description": "Provides operations to construct, parse, and serialize request parameters for AWS list operations, including visibility, provisioning type, deprecation status, pagination, and limits. Works with custom record types encapsulating AWS-specific data such as integers, strings, and enumerated status values. Used to generate query strings and JSON payloads for API requests, and to parse XML responses into structured data.",
      "description_length": 419,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeVersionsOutput",
      "description": "Provides functions to construct, parse, and serialize data structures containing type version summaries and pagination tokens. Works with custom types such as `TypeVersionSummaries.t` and AWS-specific string and query types. Used to generate HTTP query parameters and JSON representations for API responses involving type versions.",
      "description_length": 331,
      "index": 188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteChangeSetOutput",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON format. Works with the unit type to represent empty or void operations. Used to handle deletion confirmation responses in AWS API interactions.",
      "description_length": 237,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListImportsOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS service import responses. Works with custom types for imports and pagination tokens, and integrates with XML and JSON formats. Used to generate query parameters for API requests and process XML responses into structured data.",
      "description_length": 313,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.StopStackSetOperationInput",
      "description": "Provides operations to construct, parse, and serialize a structured input for stack set operations, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a stack set name and operation ID. Used to prepare and process inputs for AWS CloudFormation stack set actions in API requests.",
      "description_length": 347,
      "index": 191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInstancesInput",
      "description": "Provides functions to construct, parse, and serialize data structures for updating stack instances, including setting stack set names, accounts, regions, and operation preferences. Works with types such as account lists, region lists, parameters, and deployment targets. Used to generate AWS API requests for stack set updates and to convert between XML and JSON representations.",
      "description_length": 379,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ChangeSetNotFoundException",
      "description": "Provides functions to create, parse, and serialize error representations for missing change sets. Works with unit type and AWS query/json structures. Used to handle and encode absence of change sets in AWS operations.",
      "description_length": 217,
      "index": 193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidOperationException",
      "description": "Provides functions to create, parse, and serialize error representations, including converting to and from query parameters and JSON. Works with unit type and generic values for error handling. Used to generate HTTP query strings and JSON payloads for invalid operation responses.",
      "description_length": 280,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegisterTypeOutput",
      "description": "Provides operations to construct, parse, and serialize a structured data type representing AWS registration outputs. Works with XML nodes, JSON values, and query parameters to convert between external representations and an internal record type. Used to process and generate AWS API responses containing registration tokens and associated metadata.",
      "description_length": 348,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationsOutput",
      "description": "Provides operations to construct, parse, and serialize a structured representation of stack set operation outputs, including summaries and pagination tokens. Works with custom types for stack set operation summaries and AWS-specific data structures like query parameters and JSON. Used to generate HTTP requests and process XML responses in AWS CloudFormation interactions.",
      "description_length": 373,
      "index": 196,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeVersionsInput",
      "description": "Provides operations to construct, parse, and serialize request parameters for listing type versions, including setting type identifiers, pagination controls, and deprecation status. Works with custom types such as RegistryType.t, Aws.BaseTypes.String.t, and Aws.BaseTypes.Integer.t. Used to generate HTTP query strings and JSON payloads for API requests, and to parse XML responses into structured data.",
      "description_length": 403,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListImportsInput",
      "description": "Provides operations to construct, parse, and serialize input structures for list imports, including creating with an export name and optional token, parsing XML nodes, and converting to query parameters, JSON associations, and from JSON. Works with AWS string types and JSON data structures. Used to handle import listing requests in AWS SDK interactions.",
      "description_length": 355,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackResourcesOutput",
      "description": "Provides functions to construct, parse, and serialize a structure containing stack resource summaries and a next token. Works with custom types for stack resources and AWS query and JSON representations. Used to process and transmit responses from AWS CloudFormation list stack resources operations.",
      "description_length": 299,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackSetOperationResultsInput",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS CloudFormation stack set operation input, including stack set name, operation ID, pagination tokens, and result limits. Works with custom types for AWS operations and JSON/XML serialization. Used to prepare inputs for API calls related to stack set operations and to process responses from XML or JSON payloads.",
      "description_length": 398,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SetStackPolicyInput",
      "description": "Provides operations to construct, parse, and serialize data structures for AWS CloudFormation stack policy inputs, including creating instances with stack names and policy details, converting to query parameters, and handling JSON serialization and deserialization. Works with string-based stack names, policy bodies, and URLs, as well as XML nodes for parsing. Used to prepare and process stack policy configurations for deployment workflows.",
      "description_length": 443,
      "index": 201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeRegistrationOutput",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS service type registration outputs. Works with types such as RegistrationStatus.t and strings for ARN and description fields. Used to generate HTTP query parameters, JSON representations, and parse XML responses from AWS API calls.",
      "description_length": 309,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RecordHandlerProgressInput",
      "description": "Handles construction and parsing of input records for progress reporting in AWS Lambda handlers. Works with types such as bearer tokens, operation statuses, error codes, and resource models. Used to generate query parameters and JSON payloads for sending progress updates during long-running operations.",
      "description_length": 303,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackSetDriftInput",
      "description": "Provides operations to construct, parse, and serialize input for detecting drift in a stack set, including setting the stack set name, operation preferences, and operation ID. Works with AWS-specific types such as strings, query structures, and JSON representations. Used to generate request payloads for AWS CloudFormation stack set drift detection workflows.",
      "description_length": 360,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationInProgressException",
      "description": "Provides functions to create, parse, and serialize an exception type representing an ongoing operation. Works with unit type and AWS query/json structures. Used to signal and handle in-progress operations in API interactions.",
      "description_length": 225,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeInput",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS resource inputs, including methods to convert between XML, query parameters, and JSON formats. Works with custom types encapsulating AWS resource identifiers such as ARNs, type names, and version IDs. Used to process and encode input data for AWS API requests requiring structured resource metadata.",
      "description_length": 378,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StopStackSetOperationOutput",
      "description": "Provides operations to create, parse, and serialize unit values into query parameters and JSON. Works with the unit type and arbitrary input types for parsing. Used to handle output formatting for API responses and data serialization workflows.",
      "description_length": 244,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.EstimateTemplateCostOutput",
      "description": "Provides operations to construct, parse, and serialize a structured cost estimate output, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a URL string and other cost-related fields. Used to process and format cost data from AWS API responses for further analysis or display.",
      "description_length": 346,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListExportsInput",
      "description": "Provides operations to construct, parse, and serialize a structure representing input for listing exports, including creating with an optional next token, parsing XML nodes, and converting to query parameters, JSON, or from JSON. Works with a record type containing a next token and other relevant fields. Used to prepare and process requests for paginated export listings in AWS services.",
      "description_length": 389,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.TokenAlreadyExistsException",
      "description": "Provides functions to create, parse, and serialize an exception type representing a token conflict. Works with unit type and AWS query/json structures. Used to handle and encode token duplication errors in API responses.",
      "description_length": 220,
      "index": 210,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeTypeOutput",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS registry type outputs. Works with complex types including timestamps, ARNs, and custom enums like `RegistryType` and `ProvisioningType`. Used to generate API responses and handle XML/JSON deserialization for cloud resource metadata.",
      "description_length": 320,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeChangeSetInput",
      "description": "Provides operations to construct, parse, and serialize input for describing a change set, including creating with a name and optional stack name or token, converting to query parameters, and encoding/decoding from JSON. Works with string-based identifiers and structured data types for AWS CloudFormation interactions. Used to prepare and process requests for retrieving detailed change set information in AWS infrastructure management workflows.",
      "description_length": 446,
      "index": 212,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.OperationStatusCheckFailedException",
      "description": "Provides functions to create, parse, and serialize error states representing failed operations. Works with unit type and AWS query or JSON structures. Used to handle and convert operation failure signals in AWS-related workflows.",
      "description_length": 229,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.DeregisterTypeOutput",
      "description": "Provides operations to create a unit value, parse input into an optional unit, convert values to AWS query parameters, serialize to JSON, and deserialize from JSON. Works with the unit type and generic input types. Used to handle output from deregistering types in AWS services, ensuring proper formatting and parsing of responses.",
      "description_length": 331,
      "index": 214,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackInstancesInput",
      "description": "Provides operations to construct, parse, and serialize request parameters for listing stack instances, including setting the stack set name, pagination tokens, result limits, and filters. Works with string, integer, and custom filter types to represent query parameters. Used to generate HTTP queries and JSON payloads for API calls related to AWS CloudFormation stack instances.",
      "description_length": 379,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RegisterTypeInput",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS register type inputs, including creating instances with specific type definitions, handling XML parsing, and converting between query, JSON, and internal representations. Works with types such as RegistryType.t, Aws.BaseTypes.String.t, LoggingConfig.t, and Aws.Query.t. Used to generate structured input for AWS service operations, validate XML responses, and prepare data for API requests.",
      "description_length": 478,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackSetInput",
      "description": "Creates a structured input for describing a stack set, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on a record type containing a stack set name and other relevant parameters. Used to prepare and process requests for retrieving stack set details in AWS CloudFormation interactions.",
      "description_length": 333,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourcesInput",
      "description": "Provides operations to construct, parse, and serialize request parameters for describing stack resources, including methods to convert between XML, query, and JSON formats. Works with string-based identifiers such as stack names, logical and physical resource IDs. Used to generate structured input for AWS CloudFormation resource description queries.",
      "description_length": 351,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteChangeSetInput",
      "description": "Provides operations to construct, parse, and serialize a structure representing a change set deletion request, including converting between XML nodes, query parameters, and JSON. Works with string-based identifiers for change sets and stacks. Used to prepare and process inputs for deleting AWS CloudFormation change sets in API interactions.",
      "description_length": 342,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackResourceDriftInput",
      "description": "Provides operations to construct, parse, and serialize input for detecting resource drift in a cloud stack, working with string-based stack names and logical resource identifiers. Supports conversion to query parameters, JSON representations, and parsing from XML nodes. Used to prepare and process inputs for drift detection workflows in infrastructure monitoring.",
      "description_length": 365,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackDriftOutput",
      "description": "Provides operations to construct, parse, and serialize stack drift detection results, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as strings, JSON values, and query structures. Used to process and transmit stack drift detection outcomes in AWS API interactions.",
      "description_length": 336,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SignalResourceInput",
      "description": "Provides operations to construct, parse, serialize, and deserialize resource signal data. Works with string-based identifiers, status values, and JSON/XML representations. Used to process CloudFormation resource signals from incoming requests and prepare them for API interactions.",
      "description_length": 281,
      "index": 222,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInstancesOutput",
      "description": "Provides operations to construct, parse, and serialize instances of a stack update response, including converting between XML, query, and JSON formats. Works with AWS-specific data types such as strings, queries, and JSON structures. Used to process and transmit stack update results in AWS SDK interactions.",
      "description_length": 308,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateSummaryOutput",
      "description": "Provides operations to construct, parse, and serialize template summary data, including parameters, capabilities, resource types, and metadata. Works with types such as parameter declarations, capabilities, resource types, and JSON structures. Used to generate and process AWS CloudFormation template summaries in API responses.",
      "description_length": 328,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetNotFoundException",
      "description": "Provides operations to create, parse, and serialize exceptions related to missing stack sets, working with unit types and AWS query structures. Converts values into query parameters and JSON representations while handling optional parsing outcomes. Used to manage error responses in AWS infrastructure interactions.",
      "description_length": 315,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeleteStackSetOutput",
      "description": "Provides operations to create, parse, and serialize unit values into query parameters and JSON structures. Works with the unit type, representing the absence of a value. Used to handle AWS API responses that do not require additional data beyond a simple confirmation.",
      "description_length": 268,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DeregisterTypeInput",
      "description": "Provides operations to construct, parse, and serialize data for deregistering a type, including creating instances with optional ARN, type, type name, and version ID, and converting between XML, query, and JSON formats. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `RegistryType.t`. Used to prepare and process requests for removing type definitions from a registry system.",
      "description_length": 395,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecuteChangeSetOutput",
      "description": "Provides functions to create, parse, and convert a unit type into AWS query parameters and JSON format. Works with the unit type and arbitrary input types for parsing and serialization. Used to handle output from change set executions in AWS services, enabling structured data representation and transformation.",
      "description_length": 311,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackEventsInput",
      "description": "Provides operations to construct, parse, and serialize request parameters for retrieving stack events, including setting a stack name and pagination token. Works with string-based identifiers and AWS query and JSON formats. Used to generate HTTP requests and process XML responses from AWS CloudFormation.",
      "description_length": 305,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.SetTypeDefaultVersionInput",
      "description": "Provides operations to construct, parse, and serialize a structure representing input for setting a default version of a registry type, including methods to convert between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, registry types, and JSON structures. Used to prepare and process requests for updating a registry type's default version in API interactions.",
      "description_length": 402,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.StackSetNotEmptyException",
      "description": "Provides operations to create, parse, and serialize a unit type into query and JSON formats. Works with the unit type and related data structures. Used to handle stack presence checks in AWS request constructions.",
      "description_length": 213,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateTerminationProtectionOutput",
      "description": "Provides functions to construct, parse, and serialize a structure representing termination protection status for a stack, including converting between XML nodes, query parameters, and JSON representations. Works with AWS stack identifiers and structured data types for cloud resource management. Used to handle API responses and configuration updates in cloud infrastructure workflows.",
      "description_length": 385,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidStateTransitionException",
      "description": "Provides functions to create, parse, and serialize exception data for invalid state transitions. Works with unit type and AWS query/json structures. Used to generate error responses in state machine workflows and convert exceptions to query parameters or JSON format.",
      "description_length": 267,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackSetInput",
      "description": "Provides constructors and parsers for building and serializing AWS CloudFormation stack set update requests. Works with structured data including stack names, templates, parameters, tags, and deployment configurations. Used to generate API-compatible inputs for updating stack sets with specific accounts, regions, and permissions.",
      "description_length": 331,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateSummaryInput",
      "description": "Provides operations to construct, parse, and serialize request parameters for retrieving template summaries, including methods to convert between XML, query strings, and JSON formats. Works with string-based identifiers and AWS-specific types for templates and stacks. Used to prepare and process inputs for AWS CloudFormation template operations.",
      "description_length": 347,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackOutput",
      "description": "Provides operations to create, parse, and serialize stack output data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing stack ID and output values. Used to process and format AWS stack output for API responses and data exchange.",
      "description_length": 303,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackInstancesOutput",
      "description": "Provides operations to construct, parse, and serialize stack instance output data, including handling summaries and pagination tokens. Works with custom types for stack instance summaries and AWS query/json formats. Used to process and transmit AWS CloudFormation stack instance responses in API interactions.",
      "description_length": 309,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInstancesOutput",
      "description": "Provides functions to construct, parse, and serialize stack instance data, including creating instances with an operation ID, parsing XML nodes into structured data, and converting between JSON and query formats. Works with custom types representing stack instance outputs and standard AWS data structures. Used to process and format responses from AWS API calls involving stack instances.",
      "description_length": 389,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStacksOutput",
      "description": "Provides operations to construct, parse, and serialize stack-related data structures, including converting between XML nodes, query parameters, and JSON representations. Works with custom types representing stack configurations and pagination tokens. Used to process AWS API responses and prepare data for HTTP requests.",
      "description_length": 320,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.LimitExceededException",
      "description": "Provides functions to create, parse, and serialize exceptions related to rate limiting, working with unit types and AWS query/json formats. Includes a constructor for the exception and methods to convert between data representations. Used to handle API request limits in AWS integration scenarios.",
      "description_length": 297,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.RecordHandlerProgressOutput",
      "description": "Handles creation and conversion of progress tracking data, supporting parsing from arbitrary types, generating AWS query parameters, and serializing/deserializing to JSON. Operates on unit type and generic input types for flexible integration. Used to manage and exchange progress states in distributed processing workflows.",
      "description_length": 324,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackInput",
      "description": "Constructs a structured input for updating an AWS CloudFormation stack, incorporating parameters, templates, policies, and other configuration details. Operates on types such as strings, boolean flags, lists, and custom records for parameters, capabilities, and rollbacks. Used to generate query strings, JSON representations, and parse XML responses for stack update requests.",
      "description_length": 377,
      "index": 242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ExecuteChangeSetInput",
      "description": "Provides functions to construct, parse, and serialize a change set input structure, including creating instances with optional parameters, converting to query strings, and handling JSON serialization and deserialization. Works with string types for change set names, stack names, and client request tokens. Used to prepare input for executing a cloud formation change set by encoding parameters into a structured format suitable for API requests.",
      "description_length": 446,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackInstanceInput",
      "description": "Provides operations to construct, parse, and serialize a stack instance input structure containing a stack set name, account, and region. Works with string-based identifiers and JSON/XML data formats. Used to prepare input for stack instance operations in AWS CloudFormation.",
      "description_length": 275,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInput",
      "description": "Provides a constructor for creating AWS CloudFormation stack input configurations, including stack name, template, parameters, and advanced settings like rollback and termination protection. Works with structured data types such as parameters, notifications, tags, and configuration objects. Used to generate query and JSON representations for API requests, and to parse XML input into structured stack creation parameters.",
      "description_length": 423,
      "index": 245,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.ListTypeRegistrationsOutput",
      "description": "Provides operations to construct, parse, and serialize data structures containing registration tokens and pagination tokens. Works with custom types for registration token lists and string-based pagination tokens. Used to generate HTTP query parameters and JSON representations for API responses.",
      "description_length": 296,
      "index": 246,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.InvalidChangeSetStatusException",
      "description": "Handles exceptions related to invalid change set statuses, providing creation, parsing, and serialization functions. Works with unit type and AWS query/json structures. Used to manage error states in AWS API interactions where change set operations fail.",
      "description_length": 254,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CreateStackInstancesInput",
      "description": "Provides functions to construct, parse, and serialize stack instance creation parameters, including account lists, regions, and operation preferences. Works with types such as account lists, region lists, and parameter overrides. Used to generate AWS CloudFormation stack set instance requests from XML or JSON input.",
      "description_length": 317,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListChangeSetsInput",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS stack change sets, including creating instances with a stack name and optional token, parsing XML input, and converting between query, JSON, and internal representations. Works with AWS-specific types such as strings, JSON values, and query parameters. Used to process incoming XML payloads from AWS APIs and prepare data for API requests.",
      "description_length": 427,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.CFNRegistryException",
      "description": "Provides functions to create, parse, and serialize exception data structures, including converting between XML nodes, query parameters, and JSON representations. Works with custom exception types containing optional message fields. Used to handle and transmit AWS CloudFormation registry-related errors in API interactions.",
      "description_length": 323,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackResourcesOutput",
      "description": "Provides functions to construct, parse, and serialize stack resource data, including converting between XML nodes, JSON, and query parameters. Works with structured data representing AWS stack resources, including lists of resource details. Used to process and format responses from AWS CloudFormation API calls.",
      "description_length": 312,
      "index": 251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DetectStackResourceDriftOutput",
      "description": "Provides operations to construct, parse, and serialize a structure representing stack resource drift information, including converting between XML nodes, JSON, and query parameters. Works with the `StackResourceDrift.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit resource drift results from AWS CloudFormation stack evaluations.",
      "description_length": 406,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.ListStackResourcesInput",
      "description": "Provides operations to construct, parse, and serialize stack resource input data, including creating instances with a stack name and optional token, converting to query parameters, and encoding/decoding from JSON. Works with AWS string types and JSON structures. Used to prepare and process inputs for retrieving stack resource listings in AWS CloudFormation.",
      "description_length": 359,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.DescribeStackDriftDetectionStatusInput",
      "description": "Provides operations to construct, parse, and serialize a structure representing the status of stack drift detection, including converting between XML nodes, query parameters, and JSON. Works with string-based identifiers and structured data types for cloud resource tracking. Used to initialize and process drift detection status inputs in AWS-related workflows.",
      "description_length": 362,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.GetTemplateOutput",
      "description": "Provides functions to construct, parse, and serialize template output data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing template bodies and stage lists. Used to process and format template outputs for AWS API interactions.",
      "description_length": 300,
      "index": 255,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateTerminationProtectionInput",
      "description": "Provides operations to construct, parse, and serialize input for enabling or disabling termination protection on a stack. Works with boolean flags and stack names, and supports XML and JSON serialization formats. Used to prepare configuration data for cloud infrastructure management tasks.",
      "description_length": 290,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types.UpdateStackSetOutput",
      "description": "Provides functions to construct, parse, and serialize a stack set output structure, including creating instances with optional operation IDs, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS-specific types such as strings, JSON values, and XML nodes. Used to manage and transmit stack set output data in AWS CloudFormation interactions.",
      "description_length": 387,
      "index": 257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.CancelUpdateStack",
      "description": "Handles conversion between native input and HTTP requests for AWS stack cancellation, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into a unit output or specific error type based on AWS XML structure. Parses AWS error responses into internal error representations, validating status codes and error types.",
      "description_length": 370,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ContinueUpdateRollback",
      "description": "Handles AWS request signing and HTTP conversion for update rollback operations. Processes input structures to generate signed HTTP requests and decodes response bodies into native error or success states. Parses AWS error responses to map them to service-specific error types based on HTTP status and XML content.",
      "description_length": 313,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateChangeSet",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 359,
      "index": 260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.CreateStack",
      "description": "Converts AWS CreateStack input to HTTP requests, handling query encoding and setting action and version parameters. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into native error representations, validating against expected status codes and error definitions.",
      "description_length": 344,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateStackInstances",
      "description": "Converts input data into HTTP requests for AWS API calls, handling query encoding and setting action and version parameters. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Works with AWS service identifiers, request signing versions, and custom input/output types for stack instance operations.",
      "description_length": 360,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.CreateStackSet",
      "description": "Handles AWS CloudFormation stack set creation by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs or errors. Operates on specific input and output types representing stack set parameters and results, along with error types for AWS-specific failure cases. Processes request signing, query encoding, and XML error decoding for direct interaction with the CloudFormation API.",
      "description_length": 422,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteChangeSet",
      "description": "Handles conversion of input data into HTTP requests for AWS service operations, including proper query encoding and parameter setting. Processes HTTP responses, decoding them into native output or specific error types based on AWS standards. Parses AWS error responses into structured error representations for precise error handling.",
      "description_length": 334,
      "index": 264,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DeleteStack",
      "description": "Handles AWS CloudFormation stack deletion by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific input and output types, including error decoding from XML. Uses service-specific signing and endpoint determination for accurate request generation and error handling.",
      "description_length": 317,
      "index": 265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteStackInstances",
      "description": "Handles AWS CloudFormation stack instance deletion by converting input to HTTP requests and parsing responses. Processes query-encoded HTTP requests and responses for the 'DeleteStackInstances' API action, using specific input and output types. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 339,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeleteStackSet",
      "description": "Handles AWS CloudFormation stack set deletion by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with structured input and output types defined for stack set operations.",
      "description_length": 316,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DeregisterType",
      "description": "Handles conversion between native input and HTTP requests for AWS type deregistration, setting necessary parameters like Action and Version. Processes HTTP responses, decoding them into a unit output or specific error types. Parses AWS error responses into internal error representations based on HTTP status and XML content.",
      "description_length": 325,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeAccountLimits",
      "description": "Handles conversion between native input and HTTP requests for AWS account limit queries, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 399,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeChangeSet",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or error representations based on defined types. Parses AWS error responses into service-specific error types using HTTP status codes and XML content.",
      "description_length": 359,
      "index": 270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackDriftDetectionStatus",
      "description": "Converts input parameters into HTTP requests for AWS CloudFormation stack drift detection, encoding action and version parameters. Processes HTTP responses into structured outputs or specific error types based on AWS XML formatting. Parses AWS error codes and status codes into internal error representations for precise failure handling.",
      "description_length": 338,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackEvents",
      "description": "Handles conversion between native input and HTTP requests for AWS CloudFormation stack event retrieval, encoding parameters in query format and setting action-specific headers. Processes HTTP responses into structured outputs or error representations based on AWS XML deserialization. Parses AWS error responses into service-specific error types, validating status codes and error codes against defined specifications.",
      "description_length": 418,
      "index": 272,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackInstance",
      "description": "Handles AWS API requests for describing a stack instance by converting input to HTTP requests and parsing HTTP responses into structured outputs. Processes input containing stack instance identifiers and returns results with detailed stack information or specific error codes. Parses AWS error responses into native error types based on HTTP status and XML content.",
      "description_length": 365,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResource",
      "description": "Handles AWS CloudFormation stack resource description by converting input to HTTP requests and parsing responses. Processes query-encoded HTTP requests and responses for the 'DescribeStackResource' API action. Works with specific input and output types defined in the module's types and error handling for AWS-specific error responses.",
      "description_length": 335,
      "index": 274,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResourceDrifts",
      "description": "Converts AWS CloudFormation stack resource drift inputs to HTTP requests and parses HTTP responses into structured outputs or specific error types. Operates on input and output records representing stack resource drift data and AWS-specific error structures. Handles request signing, query encoding, and error decoding for interactions with the CloudFormation service.",
      "description_length": 368,
      "index": 275,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackResources",
      "description": "Handles conversion between native input and HTTP requests for AWS stack resource queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service identifiers and custom input/output types for stack resource operations.",
      "description_length": 362,
      "index": 276,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackSet",
      "description": "Handles conversion between native input and HTTP requests for AWS StackSet operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS API endpoints, requiring service-specific signing and error parsing.",
      "description_length": 373,
      "index": 277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeStackSetOperation",
      "description": "Handles conversion between native input and HTTP requests for AWS stack set operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS specifications. Works with input and output records defined in the associated types module, and error representations from the internal errors module.",
      "description_length": 409,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeStacks",
      "description": "Handles conversion between native input and HTTP requests for AWS DescribeStacks operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 372,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DescribeType",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, including query parameter encoding and signing configuration. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with service-specific input, output, and error types to enable precise API interaction.",
      "description_length": 339,
      "index": 280,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DescribeTypeRegistration",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters into query format and setting action and version. Decodes HTTP responses into native output or error structures, including parsing AWS-specific error messages against defined specifications. Works with input, output, and error types generated from AWS API definitions.",
      "description_length": 378,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackDrift",
      "description": "Converts AWS service inputs to HTTP requests and handles response decoding for stack drift detection, using specific input and output types tied to AWS CloudFormation. Parses AWS error responses into native error types based on HTTP status codes and predefined error structures. Operates with AWS service identifiers and request signing configurations to ensure accurate API interactions.",
      "description_length": 388,
      "index": 282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.DetectStackResourceDrift",
      "description": "Handles AWS CloudFormation stack resource drift detection by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs or errors. Operates on specific input and output types representing drift detection parameters and results, along with AWS error responses. Processes HTTP requests for the 'ec2' service, encoding actions and versions into query parameters for API calls.",
      "description_length": 419,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.DetectStackSetDrift",
      "description": "Converts AWS CloudFormation stack set drift detection inputs into HTTP requests and parses corresponding responses, handling query encoding and error decoding. Operates on structured input and output types representing stack set drift detection parameters and results. Processes HTTP status codes and XML error responses to map to service-specific error types.",
      "description_length": 360,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and back from strings. Works with an opaque error type `t` representing various error conditions. Used to standardize error handling and communication in API responses.",
      "description_length": 257,
      "index": 285,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.EstimateTemplateCost",
      "description": "Converts AWS service inputs to HTTP requests and handles response decoding, including parsing specific error formats based on HTTP status codes. Operates on structured input and output types representing template cost estimation data. Used to generate signed HTTP requests for AWS service calls and process their responses accurately.",
      "description_length": 334,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ExecuteChangeSet",
      "description": "Converts input data into an HTTP request with proper query encoding, setting Action and Version parameters. Parses HTTP responses into native output or error types, and maps AWS error XML to service-specific error representations. Works with AWS service identifiers, request signing configurations, and structured input/output types for change set execution.",
      "description_length": 358,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetStackPolicy",
      "description": "Handles AWS CloudFormation stack policy retrieval by converting input to signed HTTP requests and parsing HTTP responses. Operates on structured input and output types representing stack policy data and error responses. Processes AWS error codes and HTTP status codes to map to specific API errors.",
      "description_length": 298,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetTemplate",
      "description": "Converts AWS GetTemplate input to an HTTP request, encoding parameters and setting action and version. Parses HTTP responses into structured output or specific error types based on AWS XML format. Handles error validation by matching status codes with expected error structures.",
      "description_length": 278,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.GetTemplateSummary",
      "description": "Handles conversion of input data into HTTP requests for AWS service calls, including proper query encoding and setting action and version parameters. Processes HTTP responses, decoding them into structured output or specific error types based on AWS specifications. Works with AWS-specific input, output, and error types to facilitate interaction with the GetTemplateSummary API.",
      "description_length": 379,
      "index": 290,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListChangeSets",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters into query format and setting action and version. Decodes HTTP responses into native output or specific error types based on AWS XML structure. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 321,
      "index": 291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListExports",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or error representations specific to the API. Parses AWS error responses into typed error values based on HTTP status and XML content.",
      "description_length": 330,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListImports",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating against expected status codes and error types.",
      "description_length": 367,
      "index": 293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackInstances",
      "description": "Converts AWS API input to HTTP requests and parses HTTP responses into structured outputs, handling error decoding specific to the ListStackInstances operation. Operates on custom input and output types representing stack instance data and error responses from AWS. Used to interact with AWS CloudFormation by encoding request parameters and decoding results from HTTP endpoints.",
      "description_length": 379,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackResources",
      "description": "Converts AWS API input to HTTP requests and handles response decoding for stack resource listings. Processes structured input and output types specific to AWS CloudFormation, including error parsing based on HTTP status and XML content. Used to fetch and interpret resource lists from AWS API endpoints.",
      "description_length": 303,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSetOperationResults",
      "description": "Converts AWS service inputs to HTTP requests and handles decoding HTTP responses into structured outputs or specific error types. Operates on input and output records defined by the AWS CloudFormation API, including error representations from XML responses. Used to manage and interpret results from stack set operation queries, ensuring proper encoding and error handling.",
      "description_length": 373,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSetOperations",
      "description": "Converts AWS service requests into HTTP format and processes responses for stack set operations, handling encoding, decoding, and error parsing. Works with input and output types specific to AWS CloudFormation stack set operations and error responses from AWS. Used to generate signed HTTP requests for listing stack set operations and interpret server responses into structured data.",
      "description_length": 384,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListStackSets",
      "description": "Handles AWS API requests for listing stack sets by converting input to HTTP requests and parsing responses. Processes query-encoded HTTP requests and responses using specific input, output, and error types. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 301,
      "index": 298,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListStacks",
      "description": "Converts AWS service requests into HTTP format and processes responses for stack listings, handling encoding, decoding, and error parsing. Operates on input and output types specific to AWS CloudFormation stack operations. Parses HTTP responses to extract structured results or error details from AWS API calls.",
      "description_length": 311,
      "index": 299,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.ListTypeRegistrations",
      "description": "Handles conversion between native input and HTTP requests for AWS service interactions, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS specifications. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 371,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListTypeVersions",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters and setting action/version. Decodes HTTP responses into native output or specific error types based on AWS XML structure. Works with input, output, and error types defined for the ListTypeVersions API operation.",
      "description_length": 308,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ListTypes",
      "description": "Converts AWS service requests to HTTP format and parses responses, handling encoding, decoding, and error translation for specific API operations. Works with input, output, and error types defined for AWS service interactions. Processes HTTP requests and responses for services like EC2, ensuring proper request signing and error handling.",
      "description_length": 339,
      "index": 302,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.RecordHandlerProgress",
      "description": "Handles AWS request signing and HTTP conversion for record handler progress operations. Converts input data to HTTP requests with proper encoding and parses HTTP responses into native error or success states. Processes AWS error responses by mapping them to service-specific error types based on status codes and XML content.",
      "description_length": 325,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.RegisterType",
      "description": "Handles AWS request signing and serialization by defining signature methods, service identifiers, and converting between native input and HTTP requests. Processes HTTP responses by decoding them into structured outputs or specific error types. Parses AWS error responses into domain-specific error representations based on HTTP status and XML content.",
      "description_length": 351,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.SetStackPolicy",
      "description": "Handles AWS request signing and HTTP conversion for stack policy operations. Converts input data into signed HTTP requests and decodes response bodies into structured outputs or errors. Processes AWS error responses by mapping them to service-specific error types based on status codes and XML content.",
      "description_length": 302,
      "index": 305,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation.SetTypeDefaultVersion",
      "description": "Handles AWS request signing and encoding for the SetTypeDefaultVersion operation, using service-specific parameters and signature versions. Converts between native input types and HTTP requests, and decodes HTTP responses into structured outputs or errors. Parses AWS error responses into domain-specific error types based on HTTP status codes and XML content.",
      "description_length": 360,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.SignalResource",
      "description": "Handles AWS request signing and HTTP conversion for the SignalResource API. Converts input data to HTTP requests with proper encoding and parses HTTP responses into native output or error types. Processes AWS error responses by mapping them to service-specific error representations based on status codes and XML content.",
      "description_length": 321,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.StopStackSetOperation",
      "description": "Handles AWS API operations for stopping stack set actions by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific service and signing version parameters. Decodes HTTP responses into native error or unit output structures.",
      "description_length": 272,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.Types",
      "description": "The module provides comprehensive data conversion and serialization capabilities for custom types across XML, JSON, and AWS query formats, enabling seamless data interchange in cloud infrastructure workflows. It supports bidirectional mappings between `t` and standard types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`, with operations for parsing, serializing, and transforming data structures such as resource attributes, stack drift statuses, and parameter lists. Specific examples include converting XML input into structured resource data, serializing AWS CloudFormation stack configurations to JSON, and generating query parameters for API requests.",
      "description_length": 660,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStack",
      "description": "Handles conversion between native input and HTTP requests for AWS stack updates, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating against expected status codes and error lists.",
      "description_length": 367,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStackInstances",
      "description": "Converts AWS API input to HTTP requests and handles response decoding, including error parsing based on HTTP status and XML content. Operates on specific input and output types generated from the AWS API definition, along with internal error representations. Used to manage stack instance updates by encoding parameters into query strings and decoding server responses into structured outputs.",
      "description_length": 393,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateStackSet",
      "description": "Handles conversion between native input and HTTP requests for AWS CloudFormation stack set updates, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 380,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.UpdateTerminationProtection",
      "description": "Handles AWS API requests for updating termination protection settings by converting between native input and HTTP requests, and decoding HTTP responses into structured outputs or errors. Operates on specific input and output types representing AWS EC2 termination protection configurations and associated errors. Used to send and process API calls for managing instance termination policies in AWS.",
      "description_length": 398,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudformation.ValidateTemplate",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into service-specific error representations, validating status codes and error types.",
      "description_length": 370,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "aws-cloudformation",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as request configurations, HTTP methods, and AWS service-specific data structures. Used to interact with AWS S3 for object storage, DynamoDB for database operations, and EC2 for instance management.",
      "description_length": 363,
      "index": 315,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudformation",
      "description": "The module provides a unified interface for converting AWS CloudFormation operations into HTTP requests and processing responses, supporting actions like stack creation, deletion, updates, and resource management. It handles query encoding, request signing, and XML-based error parsing, with data types including structured inputs, outputs, and service-specific error representations. Examples include generating signed requests for stack set deletions, decoding XML error responses into typed errors, and converting stack resource data into HTTP-compatible formats.",
      "description_length": 566,
      "index": 316,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 317,
    "meaningful_modules": 317,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 660,
    "min_description_length": 208,
    "avg_description_length": 332.0567823343849,
    "embedding_file_size_mb": 1.1483020782470703
  }
}