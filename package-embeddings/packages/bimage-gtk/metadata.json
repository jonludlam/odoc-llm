{
  "package": "bimage-gtk",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:19.457853",
  "modules": [
    {
      "module_path": "Bimage_gtk.Window",
      "description": "Manages graphical windows with event handling for mouse clicks, key presses, and timers, and supports image updates and resizing. Operates on window identifiers and images represented as (int, Bimage.u8, Bimage.rgb) Bimage.Image.t. Used to create interactive visual interfaces, dynamically update displays, and manage window lifecycle events.",
      "description_length": 342,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bimage_gtk.Draw",
      "description": "Draw provides a function to render images using Cairo, accepting a drawing function and an image with pixel data in grayscale or RGB format. It operates on images structured with specific pixel types and dimensions. This module is used to generate visual output from image data, such as saving rendered images to files or displaying them in a graphical interface.",
      "description_length": 363,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "bimage-gtk",
      "description": "Provides functions for loading, saving, and manipulating images using bigarrays, including pixel-level operations and color space conversions. Works with image data in formats such as u8, u16, i32, i64, f32, f64, complex32, and complex64. Used for tasks like applying filters, adjusting brightness, and performing mathematical transformations on image pixels.",
      "description_length": 359,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Bimage_gtk",
      "description": "Handles window management and rendering for interactive graphical applications, using window identifiers and image data structured as (int, Bimage.u8, Bimage.rgb) Bimage.Image.t. Provides tools to draw images with Cairo, supporting grayscale and RGB pixel formats, and enables dynamic updates through event-driven interactions. Allows for real-time display adjustments, image rendering, and event-based control of visual elements. Examples include creating responsive image viewers, implementing custom drawing logic, and managing window resizing and redraws.",
      "description_length": 559,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 559,
    "min_description_length": 342,
    "avg_description_length": 405.75,
    "embedding_file_size_mb": 0.01493072509765625
  }
}