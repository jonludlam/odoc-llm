{
  "package": "ethernet",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:56:40.456206",
  "modules": [
    {
      "module_path": "Ethernet.Packet",
      "library": "ethernet",
      "description": "This module handles Ethernet frame parsing and construction, providing functions to encode and decode Ethernet headers with source and destination MAC addresses and ethertype fields. It operates on `Cstruct.t` buffers and `Macaddr.t` values, supporting protocol types like ARP, IPv4, and IPv6. Use cases include network packet inspection, crafting custom Ethernet frames, and protocol demultiplexing in network drivers or monitoring tools.",
      "description_length": 439,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ethernet.Make",
      "library": "ethernet",
      "description": "This module implements the Ethernet layer for sending and receiving frames over a network interface. It provides functions to write Ethernet frames with specified source and destination MAC addresses, handle incoming frames via protocol-specific callbacks for ARP, IPv4, and IPv6, and retrieve interface properties like MAC address and MTU. It works directly with `Cstruct.t` buffers for frame payloads, `Macaddr.t` for hardware addresses, and a network device provided by the `N` module. Use cases include encapsulating and decapsulating network layer protocols, managing Ethernet frame transmission within MTU limits, and interfacing with raw network hardware for low-level networking tasks.",
      "description_length": 693,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ethernet",
      "library": "ethernet",
      "description": "This module handles Ethernet frame parsing, construction, and transmission, providing functions to encode/decode headers with MAC addresses and ethertype fields, send/receive frames over a network interface, and manage protocol-specific callbacks for ARP, IPv4, and IPv6. It operates on `Cstruct.t` buffers for frame data, `Macaddr.t` for hardware addresses, and interacts with a network device to handle low-level transmission. Concrete use cases include crafting custom Ethernet frames, implementing network drivers, and performing protocol demultiplexing in packet capture tools.",
      "description_length": 582,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 693,
    "min_description_length": 439,
    "avg_description_length": 571.3333333333334,
    "embedding_file_size_mb": 0.043865203857421875
  }
}