{
  "package": "httpun-lwt-unix",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-07-15T23:05:54.930736",
  "modules": [
    {
      "module_path": "Httpun_lwt_unix.Client.TLS",
      "library": "httpun-lwt-unix",
      "description": "This module implements TLS-secured HTTP client connections using Lwt for asynchronous I/O. It provides functions to create and manage TLS sockets, send HTTP requests with response and error handlers, and gracefully shut down or upgrade connections. Concrete use cases include making secure API calls over HTTPS and handling bidirectional communication with web servers using ALPN-upgraded TLS streams.",
      "description_length": 401,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_lwt_unix.Server.SSL",
      "library": "httpun-lwt-unix",
      "description": "Handles HTTPS server connections using Lwt and Unix sockets, providing functions to create secure connection handlers with custom or default SSL configurations. Works with SSL sockets, Unix addresses, and file descriptors, supporting certificate and private key loading from files. Used to set up TLS-encrypted HTTP servers that process incoming requests with custom logic and error handling.",
      "description_length": 392,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix.Client.SSL",
      "library": "httpun-lwt-unix",
      "description": "This module implements SSL/TLS HTTP client connections using Lwt for asynchronous I/O. It provides functions to create secure connections from sockets or file descriptors, send HTTP requests with custom handlers, and manage connection lifecycle through shutdown and close checks. Use this to build asynchronous HTTPS clients that require fine-grained control over request/response handling and connection upgrades.",
      "description_length": 414,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_lwt_unix.Server.TLS",
      "library": "httpun-lwt-unix",
      "description": "This module implements TLS-based HTTP server connections using Lwt for asynchronous I/O. It provides functions to create secure connection handlers that process incoming requests over TLS, accepting a socket or file descriptor along with certificate and key files for secure communication. Concrete use cases include serving HTTPS endpoints with custom request and error handling logic, such as building secure API servers or web services.",
      "description_length": 439,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_lwt_unix.Client",
      "library": "httpun-lwt-unix",
      "description": "This module manages HTTP/1.x client connections over Lwt-based Unix sockets, handling request/response cycles, connection state, and stream writing with support for protocol upgrades and optional TLS/SSL encryption. It provides core types like HTTP requests and response handlers, operations for asynchronous request sending and connection management, and works directly with file descriptors and runtime implementations from Gluten. The TLS and SSL submodules extend this functionality to secure communications, enabling HTTPS API calls, ALPN-upgraded streams, and low-level control over encrypted client connections. Specific use cases include asynchronous HTTP clients, secure bidirectional communication, and custom connection lifecycle management with TLS/SSL fallbacks.",
      "description_length": 775,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_lwt_unix.Server",
      "library": "httpun-lwt-unix",
      "description": "This module manages HTTP and HTTPS server connections over Unix sockets using Lwt for asynchronous I/O, offering functions to create connection handlers that process requests and errors. It directly handles `Unix.sockaddr`, `Lwt_unix.file_descr`, and `Httpun.Reqd.t` for HTTP, while child modules extend support to TLS-encrypted connections with SSL sockets, certificate loading, and secure request handling. You can build lightweight, asynchronous HTTP servers with custom logic, or secure HTTPS services using default or custom TLS configurations. Examples include serving API endpoints over Unix sockets and hosting encrypted web services with per-request customization.",
      "description_length": 673,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix",
      "library": "httpun-lwt-unix",
      "description": "This module provides asynchronous HTTP/1.x client and server implementations over Unix sockets using Lwt, supporting both plaintext and TLS/SSL-encrypted communication. It offers core data types such as HTTP requests, responses, and connection handlers, along with operations for managing connection state, sending requests, handling upgrades, and securing streams with ALPN and SSL. You can build custom HTTP clients with connection pooling, implement lightweight Unix socket-based API servers, or host HTTPS services with fine-grained TLS control and per-request logic. Specific capabilities include secure bidirectional communication, runtime socket management, and low-level stream manipulation for protocols like WebSockets.",
      "description_length": 729,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 775,
    "min_description_length": 392,
    "avg_description_length": 546.1428571428571,
    "embedding_file_size_mb": 0.025850296020507812
  }
}