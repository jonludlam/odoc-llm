{
  "package": "httpun-lwt-unix",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:02:41.646779",
  "modules": [
    {
      "module_path": "Httpun_lwt_unix.Client.SSL",
      "library": "httpun-lwt-unix",
      "description": "This module implements SSL/TLS-secured HTTP client connections over Lwt-based Unix sockets. It provides functions to establish secure connections, send HTTP requests with custom error and response handlers, and manage connection lifecycle operations like shutdown and closure checks. Concrete use cases include building asynchronous HTTP clients for secure web APIs, handling HTTPS communication with client-side TLS, and integrating with low-level network operations using file descriptors.",
      "description_length": 491,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix.Server.TLS",
      "library": "httpun-lwt-unix",
      "description": "This module implements TLS-based HTTP server connections using Lwt for asynchronous I/O. It provides functions to create secure connection handlers that process incoming requests over TLS, accepting configuration for certificates and keys directly. It works with Unix socket addresses and file descriptors, handling encrypted communication with clients using provided request and error handlers.",
      "description_length": 395,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix.Client.TLS",
      "library": "httpun-lwt-unix",
      "description": "This module implements TLS-secured HTTP client connections using Lwt for asynchronous I/O. It provides functions to create and manage TLS sockets, send HTTP requests with customizable handlers, and control connection lifecycle operations like shutdown and closure checks. Concrete use cases include building asynchronous HTTP clients that require secure communication over TLS, such as API clients or web scrapers with HTTPS support.",
      "description_length": 433,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_lwt_unix.Server.SSL",
      "library": "httpun-lwt-unix",
      "description": "This module implements SSL/TLS HTTP server functionality using Lwt for asynchronous I/O. It provides functions to create secure connection handlers that process incoming requests over encrypted sockets, supporting custom SSL configurations and certificate management. Typical use cases include serving HTTPS endpoints with client request handling and managing secure network communications in web services.",
      "description_length": 406,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix.Client",
      "library": "httpun-lwt-unix",
      "description": "This module implements asynchronous HTTP client connections over Lwt-based Unix sockets, providing functions to create connections, send requests with custom handlers, and manage connection state with operations like shutdown and closure checks. It works directly with file descriptors, runtime configurations, and HTTP request/response types to enable low-level network communication. Concrete use cases include building lightweight HTTP clients for interacting with web APIs, handling streaming responses, and integrating with event-driven network applications.",
      "description_length": 563,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix.Server",
      "library": "httpun-lwt-unix",
      "description": "This module implements HTTP server functionality over Unix sockets using Lwt for asynchronous I/O. It provides functions to create connection handlers that process incoming HTTP requests and handle errors, working directly with Unix socket addresses and file descriptors. Concrete use cases include building lightweight HTTP servers that handle client requests over plain sockets, with support for custom request processing and error reporting logic.",
      "description_length": 450,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_lwt_unix",
      "library": "httpun-lwt-unix",
      "description": "This module implements HTTP client and server functionality over Unix sockets using Lwt for asynchronous I/O. It provides functions to create and manage HTTP connection handlers, send requests, process responses, and handle errors, working directly with file descriptors and HTTP request/response types. Concrete use cases include building lightweight HTTP servers and clients for low-level network communication, handling streaming responses, and integrating with event-driven applications.",
      "description_length": 491,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 563,
    "min_description_length": 395,
    "avg_description_length": 461.2857142857143,
    "embedding_file_size_mb": 0.10186386108398438
  }
}