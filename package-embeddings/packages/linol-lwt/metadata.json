{
  "package": "linol-lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:48:58.102292",
  "modules": [
    {
      "module_path": "Linol_lwt.Jsonrpc2.IO",
      "description": "Provides asynchronous I/O operations using a monadic style, including reading from and writing to standard input/output, handling errors, and sequencing actions. Works with channels, bytes, strings, and exceptions within an environment context. Enables non-blocking file operations and exception-safe resource management.",
      "description_length": 321,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Linol_lwt.Jsonrpc2.Req_id",
      "description": "Generates and manipulates unique request identifiers used in JSON-RPC communication. Operates on values of type Jsonrpc.Id.t, converting them to string representations. Used to track and correlate requests with their corresponding responses in distributed systems.",
      "description_length": 264,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Linol_lwt.IO_lwt",
      "description": "Provides monadic operations for sequencing I/O actions, including binding, lifting, and combining computations. Works with Lwt-based I/O channels, byte buffers, and string data. Enables asynchronous reading from standard input, writing to standard output, and error handling in non-blocking I/O workflows.",
      "description_length": 305,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "linol-lwt",
      "description": "Provides methods for handling JSON-RPC communication using Lwt and Eio, with support for object-oriented overrides of protocol methods. Works with LSP base types and message structures defined by the protocol. Enables custom implementation of language server interactions with asynchronous I/O.",
      "description_length": 294,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Linol_lwt",
      "description": "The module provides a framework for managing asynchronous I/O operations using Lwt, enabling non-blocking read and write actions on standard input and output. It defines monadic operations for sequencing and combining I/O computations, along with support for byte buffers and string data. Examples include reading input asynchronously, writing output without blocking, and handling errors in I/O pipelines.",
      "description_length": 406,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 388,
    "meaningful_modules": 5,
    "filtered_empty_modules": 383,
    "retention_rate": 0.01288659793814433
  },
  "statistics": {
    "max_description_length": 406,
    "min_description_length": 264,
    "avg_description_length": 318.0,
    "embedding_file_size_mb": 0.01858806610107422
  }
}