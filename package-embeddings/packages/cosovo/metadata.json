{
  "package": "cosovo",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:18.765306",
  "modules": [
    {
      "module_path": "Cosovo.Lexer",
      "library": "cosovo",
      "description": "This module offers functionalities to parse integers, floats, strings (with single/double quotes and escape sequences), and manage lexing state, primarily operating on `Lexing.lexbuf` structures. It includes robust error handling for numeric overflows and formatting issues, alongside utilities for file-based tokenization and debugging output. These capabilities are suited for tasks like processing configuration files, scripting languages, or compiler frontends where structured text analysis is required.",
      "description_length": 508,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cosovo.Parser",
      "library": "cosovo",
      "description": "This module defines a set of token types used to represent parsed elements of a structured text format, including strings, integers, floats, and punctuation. It provides parsing functions for converting lexed input into structured data types such as `row` and `header`. These functions are used to process lines of a CSV-like format, handling both data rows and optional header rows with specific field interpretations.",
      "description_length": 419,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cosovo.Types",
      "library": "cosovo",
      "description": "This module defines core data types for representing structured numerical and textual data, including dense and sparse rows, headers, and optional values. It provides variants for handling both dense lists of values and sparse associations of indices with values, along with EOF signaling. Concrete use cases include parsing and processing tabular data where missing values and varying formats are present.",
      "description_length": 406,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cosovo.IO",
      "library": "cosovo",
      "description": "This module parses structured data rows and headers from input channels or strings, handling errors with detailed location information. It supports both dense and sparse row formats, mapping them to typed values like integers, floats, and strings. Use it to read CSV-like data with precise error reporting for malformed syntax, unterminated strings, or numeric overflows.",
      "description_length": 371,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cosovo",
      "library": "cosovo",
      "description": "This module processes structured text data by combining lexing, parsing, and data representation components. It operates on input using `Lexing.lexbuf`, converts tokens into structured types like `row` and `header`, and handles both dense and sparse numerical or textual data with support for missing values. It enables reading and validating CSV-like formats with precise error reporting for malformed syntax, unterminated strings, and numeric overflows. Example uses include parsing configuration files, scripting language tokens, or tabular data with optional headers and mixed value types.",
      "description_length": 593,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 593,
    "min_description_length": 371,
    "avg_description_length": 459.4,
    "embedding_file_size_mb": 0.018583297729492188
  }
}