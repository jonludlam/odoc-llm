{
  "package": "dkml-dune-dsl-show",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:44:14.522050",
  "modules": [
    {
      "module_path": "DkmlDuneDslShow.I",
      "library": "dkml-dune-dsl-show",
      "description": "This module enables constructing and manipulating Dune DSL elements like stanzas, rules, and actions through type-safe abstract syntax tree (AST) operations parameterized by phantom types such as `[ `Dep ]` and `[< `Executable | `Library ]`. It handles data structures including ordered sets, virtual modules, and installation directives while supporting use cases like generating OCaml library/executable configurations, defining shell-based build actions, and creating parameterized Dune files with Mustache JSON templating. Key applications include type-safe dependency declaration, preprocessing setup, and structured installation rule composition for OCaml projects.",
      "description_length": 671,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "DkmlDuneDslShow",
      "library": "dkml-dune-dsl-show",
      "description": "This module provides functions to render Dune DSL expressions as human-readable or colorized Dune files, using Mustache JSON templating for parameterization. It operates on structured data types including Mustache JSON objects for parameters and S-expressions with layout for Dune syntax elements. Concrete use cases include generating valid Dune files from parameterized templates, displaying build configurations with or without color output, and handling empty parameter sets in automated build tooling.",
      "description_length": 506,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 671,
    "min_description_length": 506,
    "avg_description_length": 588.5,
    "embedding_file_size_mb": 0.029420852661132812
  }
}