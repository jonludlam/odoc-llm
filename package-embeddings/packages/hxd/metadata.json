{
  "package": "hxd",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:29:38.777089",
  "modules": [
    {
      "module_path": "Hxd.Fmt",
      "description": "Sets the output style of a formatter using predefined color and style types, including ANSI and none modes. Works with color and style types such as standard, bright, bit8, bit24, grayscale, and custom styles. Used to format terminal output with specific visual attributes in command-line applications.",
      "description_length": 302,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Hxd.Make",
      "description": "Provides functions to construct, transform, and deconstruct values of type 'a t, including mapping over contained values and combining them with custom logic. Operates on monadic-like structures, enabling sequential computation and error handling. Used to build complex data transformations in parsing pipelines and configuration loading workflows.",
      "description_length": 348,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "hxd",
      "description": "Outputs colored hexdumps of binary data or files, with options to generate OCaml code representing the input as byte sequences. Works with byte arrays, input streams, and file paths. Used to embed protocol samples into OCaml tests, enabling easy verification of network traffic like Git protocol exchanges.",
      "description_length": 306,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Hxd_string",
      "description": "Formats and manipulates hexadecimal string representations based on configuration. Processes strings with absolute or relative offset annotations and outputs formatted results. Used to generate human-readable hex dumps and validate string formatting against specific layout rules.",
      "description_length": 280,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Hxd_lwt",
      "description": "Generates formatted output from input data using a configuration, processing each item as a string with associated integers. It operates on input sources that yield optional tuples of strings and integers, and output sinks that accept similar tuples. This is used for streaming and transforming data in real-time applications with Lwt-based concurrency.",
      "description_length": 353,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Hxd",
      "description": "Controls output formatting with color and style options, and enables manipulation of abstract data structures through transformation and combination functions. Supports ANSI, grayscale, and custom styles for terminal display, and offers monadic operations for processing values within wrapped contexts. Can generate colored hexdumps or transform nested data structures into serialized forms. Examples include applying color schemes to debug outputs or chaining data parsing steps with error propagation.",
      "description_length": 503,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Hxd_unix",
      "description": "Generates formatted output based on a configuration, reading from an input channel and writing to an output channel, with options for absolute or relative positioning. It processes data using a custom configuration type and outputs to a formatter. This function is used to produce structured logs or reports with precise formatting control.",
      "description_length": 340,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 503,
    "min_description_length": 280,
    "avg_description_length": 347.42857142857144,
    "embedding_file_size_mb": 0.025873184204101562
  }
}