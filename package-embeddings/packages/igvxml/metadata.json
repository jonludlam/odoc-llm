{
  "package": "igvxml",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:50.618706",
  "modules": [
    {
      "module_path": "Igvxml.Transform",
      "library": "igvxml",
      "description": "Converts parsed IGV XML data into a list of XML signals suitable for output. Works with the `pgv_result` type from the `Igvxml` module, which represents structured genomic data. Enables serialization of analysis results into XML format for visualization or further processing.",
      "description_length": 276,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Igvxml",
      "library": "igvxml",
      "description": "This module processes structured genomic visualization configurations, tracking BAM files, VCFs, and run metadata while supporting transformations to adjust paths, URLs, or annotations. It includes operations for modifying and serializing genomic datasets, with a core `pgv_result` type that captures analysis outputs. The child module converts parsed XML data into XML signals, enabling serialization of structured genomic results for visualization or batch processing. Together, they support customizing IGV session files and transforming genomic data pipelines.",
      "description_length": 564,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 564,
    "min_description_length": 276,
    "avg_description_length": 420.0,
    "embedding_file_size_mb": 0.007685661315917969
  }
}