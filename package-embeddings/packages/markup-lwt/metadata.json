{
  "package": "markup-lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:06.741376",
  "modules": [
    {
      "module_path": "Markup_lwt.Encoding",
      "description": "Decodes character streams into encoded values using a specified encoding scheme, with optional error reporting. It processes streams of characters and produces streams of integers representing encoded data. This is used to handle asynchronous text decoding in markup processing pipelines.",
      "description_length": 288,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "markup-lwt",
      "description": "Parses byte streams into structured signals using HTML5 and XML parsing logic, supporting incremental processing of incomplete data. Processes raw byte sequences and emits events as input is received. Enables real-time handling of network data and large files without requiring full input upfront.",
      "description_length": 297,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Markup_lwt_unix",
      "description": "Provides functions to create streams from I/O channels and files, and to write streams to channels and files. Operates on Lwt_io channels, file paths, and character streams. Enables asynchronous reading from and writing to files or network streams in a non-blocking manner.",
      "description_length": 273,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Markup_lwt",
      "description": "Provides asynchronous character stream decoding with support for various encoding schemes, producing integer-encoded outputs. It handles error reporting and integrates with Lwt for non-blocking I/O operations. Functions allow processing of text data in markup pipelines, enabling efficient handling of large or streaming content. Examples include decoding UTF-8 input into code points or transforming XML character references into their corresponding values.",
      "description_length": 458,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 458,
    "min_description_length": 273,
    "avg_description_length": 329.0,
    "embedding_file_size_mb": 0.014935493469238281
  }
}