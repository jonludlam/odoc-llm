{
  "package": "irc-client-tls",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:52.218970",
  "modules": [
    {
      "module_path": "Irc_client_tls.Io",
      "library": "irc-client-tls",
      "description": "This module handles network communication over TLS for IRC clients. It provides functions to establish secure connections to IRC servers using a TLS configuration and to send and receive encrypted messages. It works with IPv4/IPv6 addresses as strings and TLS client configurations.",
      "description_length": 282,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Irc_client_tls",
      "library": "irc-client-tls",
      "description": "This module implements IRC client functionality over TLS, connecting to servers securely and handling message exchange with automatic ping responses. It manages connection state through `connection_t` and structured IRC messages via `Irc_message.t`, supporting commands like JOIN, PRIVMSG, and PONG. The child module handles the underlying TLS communication, enabling secure message transmission and reception using IPv4/IPv6 addresses and custom TLS configurations. Example uses include building bots that maintain persistent, encrypted connections to IRC channels and respond to chat events in real time.",
      "description_length": 606,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 606,
    "min_description_length": 282,
    "avg_description_length": 444.0,
    "embedding_file_size_mb": 0.0076961517333984375
  }
}