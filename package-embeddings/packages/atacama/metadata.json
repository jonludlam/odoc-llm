{
  "package": "atacama",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 8,
  "creation_timestamp": "2025-08-14T23:05:54.520110",
  "modules": [
    {
      "module_path": "Atacama.Transport.Tcp",
      "library": "atacama",
      "description": "This module implements TCP client and server communication with configurable timeouts for sending and receiving data. It works with TCP sockets and handles connection setup, data transmission, and error handling. Concrete use cases include building networked services that require reliable, stream-based communication with precise timeout control.",
      "description_length": 347,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Atacama.Handler.Default",
      "library": "atacama",
      "description": "This module provides default implementations for connection lifecycle and data handling hooks, including handling of incoming data, errors, connection setup, and shutdown events. It operates on connection state, byte strings, and message types, returning updated state or error results. These functions serve as a starting point for building custom handlers, allowing incremental overrides without requiring full implementation of all handler hooks.",
      "description_length": 449,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Atacama.Transport.Ssl",
      "library": "atacama",
      "description": "This module implements secure network communication by combining TCP and TLS protocols. It provides functions to configure and establish encrypted connections using TCP as the underlying transport and TLS for encryption. Concrete use cases include setting up HTTPS servers or secure client-server communication with certificate-based authentication.",
      "description_length": 349,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Atacama.Transport",
      "library": "atacama",
      "description": "This module provides functions to create transport layers for network communication, supporting both TCP and SSL protocols. It works with socket-based data structures and handles connection setup, data transfer, and encryption with configurable timeouts and security settings. Concrete use cases include implementing HTTP servers, secure API endpoints, and reliable network clients with custom transmission parameters.",
      "description_length": 418,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Atacama.Handler",
      "library": "atacama",
      "description": "This module defines the behavior for handling connections through specific hooks: preparing connection state, processing incoming data, managing errors, and handling closure. It works with connection state values, byte strings for data transmission, and error types, allowing handlers to return updated state or error information. Concrete use cases include implementing custom protocols, managing session state during network communication, and defining how incoming data is parsed and responded to.",
      "description_length": 500,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Atacama.Telemetry",
      "library": "atacama",
      "description": "Handles telemetry events related to network connections, such as logging accepted connections, connection starts, and listening socket initialization. Works with network address and socket types from the Riot.Net module. Used to monitor and log low-level network activity in server applications.",
      "description_length": 295,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Atacama.Connection",
      "library": "atacama",
      "description": "This module handles bidirectional communication over network connections using the `t` type to represent active connections. It provides operations to send and receive byte strings with optional timeouts and size limits, retrieve peer addresses, check protocol negotiation details, and manage connection timestamps. Use it to implement network clients and servers requiring precise control over message transmission and connection metadata.",
      "description_length": 440,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Atacama",
      "library": "atacama",
      "description": "This module implements network communication servers with precise control over connection handling, data transmission, and protocol behavior. It supports TCP and SSL transports, custom protocol handlers, and detailed telemetry for monitoring network activity. Use it to build secure HTTP servers, API endpoints, and network clients requiring fine-grained transmission control.",
      "description_length": 376,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 500,
    "min_description_length": 295,
    "avg_description_length": 396.75,
    "embedding_file_size_mb": 0.11629962921142578
  }
}