{
  "package": "zarith-ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-07-15T23:04:30.732308",
  "modules": [
    {
      "module_path": "Zarith_ppx",
      "library": "zarith_ppx",
      "description": "This module provides syntactic transformation and AST node construction for numeric literals, enabling their programmatic manipulation during compilation. It processes string representations of integers, floats, and big integers, converting them into typed OCaml AST expressions through custom parsing and mapping logic. This facilitates use cases like embedding arbitrary-precision arithmetic by rewriting integer literals into specialized types via compiler-recognized syntax extensions.",
      "description_length": 489,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 489,
    "min_description_length": 489,
    "avg_description_length": 489.0,
    "embedding_file_size_mb": 0.0040683746337890625
  }
}