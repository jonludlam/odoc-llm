{
  "package": "scad_ml",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 9,
  "creation_timestamp": "2025-07-15T23:06:54.333057",
  "modules": [
    {
      "module_path": "Scad_ml.Scad.Infix",
      "library": "scad_ml",
      "description": "This module defines infix operators for transforming OpenSCAD objects using 3D vectors. The `|>>` operator translates a shape by a given vector, while `|@>` rotates it by the vector's components. These operators provide a concise way to apply spatial transformations directly to 3D models.",
      "description_length": 289,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Scad_ml.Quaternion",
      "library": "scad_ml",
      "description": "This module implements quaternion arithmetic, interpolation, and rotation operations using 4-tuple float representations (`t`). It supports 3D orientation transformations through functions like spherical linear interpolation (`slerp`), vector rotation, and alignment-based quaternion generation, working with `Vec3.t` for directional data and `MultMatrix.t` for transformation composition. These capabilities enable smooth rotational animations, articulated object manipulation, and coordinate system transformations in geometric modeling workflows.",
      "description_length": 549,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.RotMatrix",
      "library": "scad_ml",
      "description": "This module implements 3\u00d73 rotation matrices represented as private float array arrays. It supports operations like matrix multiplication, addition, subtraction, scalar arithmetic, transposition, and element-wise mapping. Functions construct matrices from row/column lists, align vectors, convert to Euler angles, and compute traces, primarily serving 3D object transformations in OpenSCAD modeling workflows.",
      "description_length": 409,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.MultMatrix",
      "library": "scad_ml",
      "description": "This module implements affine transformation matrices as 4x4 float arrays, supporting operations like matrix multiplication, addition, subtraction, scalar arithmetic, and transposition. It provides functions to construct matrices from row lists, apply transformations, and convert matrices to strings. These matrices are used to represent and combine geometric transformations such as translation, rotation, and scaling in 3D space.",
      "description_length": 432,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Scad_ml.Color",
      "library": "scad_ml",
      "description": "This module defines a variant type representing colors in RGB format or by name, supporting conversion to string for use in OpenSCAD code generation. It includes named variants for common web and CSS color names alongside hexadecimal and RGB triples. Functions enable direct color specification in 3D models, such as setting object hues or material properties.",
      "description_length": 360,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Text",
      "library": "scad_ml",
      "description": "This module defines types and conversion functions for configuring text rendering in 3D models. It includes alignment, direction, and text properties that map directly to OpenSCAD text parameters. Use this module to specify text appearance when generating labels or annotations in geometric designs.",
      "description_length": 299,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Vec3",
      "library": "scad_ml",
      "description": "The module supports 3D vector arithmetic, component-wise division, and transformations including axis-aligned rotations, scaling, mirroring, and quaternion-driven rotations around arbitrary points. It operates on 3D coordinates as float tuples, enabling geometric computations, spatial manipulations, and precise object repositioning in 3D modeling workflows. These capabilities align with OpenSCAD-like transformation patterns for tasks such as CAD design or procedural geometry generation.",
      "description_length": 491,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Scad",
      "library": "scad_ml",
      "description": "This module represents OpenSCAD objects using a recursive, dimension-parameterized type, enabling the construction and manipulation of 2D and 3D geometries through primitive shapes, affine transformations, and Boolean operations. It supports extrusion, projection, and file import/export, allowing complex models to be built via functional composition or converted from 2D profiles into 3D forms. Child modules enhance spatial manipulation with infix operators like `|>>` for translation and `|@>` for rotation, streamlining the positioning and orientation of 3D objects. Examples include combining cubes and cylinders with union/difference operations, rotating a translated shape using vector-based operators, or exporting a model to STL for 3D printing.",
      "description_length": 755,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml",
      "library": "scad_ml",
      "description": "This module provides a comprehensive toolkit for 3D geometric modeling, integrating quaternion-based rotations, 3\u00d73 and 4\u00d74 matrix transformations, 3D vector arithmetic, and affine operations to enable precise spatial manipulations. It supports key data types such as quaternions (`t`), 3D vectors (`Vec3.t`), rotation matrices, and affine transformation matrices, along with operations like `slerp`, vector rotation, matrix multiplication, and transformation composition. Color and text configuration modules facilitate visual annotation and material specification, while a recursive geometry type enables the construction of complex 3D models through Boolean operations, extrusion, and file export. Example workflows include animating smooth rotational transitions, composing multi-step object transformations, generating labeled 3D-printable models, and procedurally building intricate CAD designs using functional composition and infix operators.",
      "description_length": 950,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 950,
    "min_description_length": 289,
    "avg_description_length": 503.77777777777777,
    "embedding_file_size_mb": 0.033111572265625
  }
}