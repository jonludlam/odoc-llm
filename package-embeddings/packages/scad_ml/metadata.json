{
  "package": "scad_ml",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 9,
  "creation_timestamp": "2025-08-14T23:09:42.178912",
  "modules": [
    {
      "module_path": "Scad_ml.Scad.Infix",
      "library": "scad_ml",
      "description": "This module defines infix operators for transforming OpenSCAD objects using 3D vectors. The `|>>` operator translates an object by a given vector, while the `|@>` operator rotates it by Euler angles specified in a vector. These operators directly manipulate the recursive `t` type representing OpenSCAD scenes, enabling concise scene construction with positional and rotational transformations.",
      "description_length": 394,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Text",
      "library": "scad_ml",
      "description": "This module defines types and conversion functions for text alignment, direction, and configuration in OpenSCAD. It includes enumerations for horizontal and vertical alignment, text direction, and a record type `t` that represents text object parameters like font size, spacing, and language. These types are used to construct and customize text geometry in 3D models, such as labeling parts or generating engraved text.",
      "description_length": 420,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Quaternion",
      "library": "scad_ml",
      "description": "This module implements operations for composing rotations, spherical linear interpolation (slerp), and rotating or aligning vectors in 3D space. It works with quaternions (represented as four floats) and `Vec3.t` vectors, enabling smooth rotation transitions, precise vector transformations, and conversion to rotation matrices for broader geometric applications.",
      "description_length": 363,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Scad",
      "library": "scad_ml",
      "description": "The module provides operations for constructing and manipulating 2D and 3D geometric models using a polymorphic recursive type `t`, which supports primitive shapes (cubes, spheres, polygons), affine transformations (translation, rotation, scaling), and Boolean operations (union, intersection, difference). It works with dimension-specific types `d2` and `d3` to enforce correctness in planar and volumetric operations, alongside extrusion, projection, and file import capabilities. This enables use cases like parametric design, procedural model generation, and conversion of functional OCaml logic into OpenSCAD scripts for 3D printing or CAD workflows.",
      "description_length": 655,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Vec3",
      "library": "scad_ml",
      "description": "This module supports 3D vector arithmetic, including component-wise operations, norms, dot and cross products, and geometric transformations like rotation (around axes or arbitrary points), translation, scaling, and mirroring. It operates on 3D vectors represented as tuples of three floats, enabling precise spatial manipulations and compatibility with workflows requiring geometric consistency, such as 3D modeling or animation. Additional quaternion-based rotations and projection utilities facilitate advanced tasks like gimbal-lock-free orientation adjustments and spatial averaging in simulations.",
      "description_length": 603,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.MultMatrix",
      "library": "scad_ml",
      "description": "This module implements affine transformation matrices as 4x4 float arrays, supporting operations like matrix multiplication, addition, subtraction, transposition, and scalar arithmetic. It provides functions to construct matrices from row lists, apply element-wise transformations, and convert matrices to strings. These matrices are used directly with OpenSCAD's `multmatrix` to perform geometric transformations in 3D space.",
      "description_length": 426,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Scad_ml.Color",
      "library": "scad_ml",
      "description": "This module defines a variant type for representing colors in OpenSCAD, supporting RGB values, hex strings, and named colors. It includes a function to convert color values to their string representations. Use this module when specifying colors for 3D models in OpenSCAD, such as setting material colors or exporting scenes with specific color schemes.",
      "description_length": 352,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Scad_ml.RotMatrix",
      "library": "scad_ml",
      "description": "This module implements 3\u00d73 rotation matrices, supporting construction from row or column vectors, alignment of vectors, conversion to Euler angles, matrix arithmetic, and scalar operations. It works with 3D vectors (`Vec3.t`) and represents matrices as arrays of arrays. Use cases include rotating OpenSCAD objects, transforming vectors, and composing rotations with precise control over orientation in 3D space.",
      "description_length": 412,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Scad_ml",
      "library": "scad_ml",
      "description": "This module provides geometric modeling capabilities using a polymorphic recursive type for 2D and 3D shapes, supporting transformations and Boolean operations. It works with dimension-specific types to ensure correct planar and volumetric manipulations, enabling parametric design and procedural model generation for 3D printing. Use cases include constructing complex models from primitives, applying affine transformations, and exporting to OpenSCAD scripts.",
      "description_length": 461,
      "index": 8,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 9,
    "meaningful_modules": 9,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 655,
    "min_description_length": 352,
    "avg_description_length": 454.0,
    "embedding_file_size_mb": 0.1308612823486328
  }
}