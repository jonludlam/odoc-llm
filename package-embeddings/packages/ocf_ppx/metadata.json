{
  "package": "ocf_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:56.105499",
  "modules": [
    {
      "module_path": "Ocf_ppx.Ppx_ocf.SMap",
      "library": "ocf_ppx",
      "description": "This module implements ordered string-keyed maps with polymorphic values, supporting functional transformations like merging, filtering, and bidirectional sequence conversions. It provides ordered traversal operations (`find_first_opt`, `to_rev_seq`), value transformations (`mapi`, `filter_map`), and structural comparisons, optimized for scenarios requiring key ordering guarantees. Typical applications include configuration management, ordered dictionary operations, and processing string-indexed data with sequence-based workflows.",
      "description_length": 536,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocf_ppx.Ppx_ocf",
      "library": "ocf_ppx",
      "description": "This module transforms OCaml type declarations into executable code by generating value bindings and manipulating AST nodes for expressions and attributes. It processes `type_declaration`, `structure_item`, and `value_binding` structures, integrating OCF-specific attributes and located values to derive defaults, build wrappers, and embed type definitions into code during PPX processing. Its child module provides ordered string-keyed maps with polymorphic values, enabling functional transformations like merging, filtering, and sequence conversion while supporting ordered traversal and structural comparison. Together, they facilitate code generation and data manipulation tasks such as deriving configuration-aware types and building ordered, attribute-driven data structures.",
      "description_length": 782,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ocf_ppx",
      "library": "ocf_ppx",
      "description": "This module processes OCaml type declarations to generate executable code, transforming AST nodes and integrating OCF-specific attributes to derive defaults, build wrappers, and embed type definitions. It provides data types like `type_declaration`, `structure_item`, and `value_binding`, along with operations for attribute manipulation, value binding generation, and AST traversal. The module also includes ordered string-keyed maps with polymorphic values, supporting transformations such as merging, filtering, and sequence conversion. Examples include generating configuration-aware types and constructing ordered, attribute-driven data structures during PPX processing.",
      "description_length": 675,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 3,
    "filtered_empty_modules": 1,
    "retention_rate": 0.75
  },
  "statistics": {
    "max_description_length": 782,
    "min_description_length": 536,
    "avg_description_length": 664.3333333333334,
    "embedding_file_size_mb": 0.011325836181640625
  }
}