{
  "package": "opus",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:24.446035",
  "modules": [
    {
      "module_path": "Opus.Decoder",
      "description": "Checks if an Ogg packet is valid, creates a decoder instance with specified audio properties, and extracts metadata such as comments and channel count. Processes audio data using float arrays or Bigarrays, supporting optional FEC decoding. Applies control commands to manage decoding behavior during playback or analysis.",
      "description_length": 321,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Opus.Encoder",
      "description": "Encodes audio data into Ogg Vorbis format using specified sampling rates, channels, and application types. It processes float arrays and Bigarrays, generating header packets and control signals for stream management. It supports encoding with customizable frame sizes and handles metadata through comment packets.",
      "description_length": 313,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "opus",
      "description": "Provides functions for encoding and decoding audio streams using the opus and vorbis formats, along with utilities for managing audio buffers and stream metadata. Works with raw byte sequences, audio sample arrays, and structured metadata records. Used to integrate audio processing pipelines in multimedia applications and streaming services.",
      "description_length": 343,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Opus",
      "description": "Processes audio data by validating Ogg packets, extracting metadata, and decoding using float arrays or Bigarrays, with support for FEC and control commands. Encodes audio into Ogg Vorbis, generating headers and managing streams with customizable frame sizes and metadata. Operations include decoding with specified audio properties and encoding with defined sampling rates and channels. Examples include analyzing audio streams for metadata and converting raw audio data into compressed Ogg Vorbis format.",
      "description_length": 506,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Opus_decoder",
      "description": "Provides functions to retrieve the decoder's sample rate and register the decoder with the Ogg demuxer. Works with integer values representing audio sample rates and internal decoder state. Used to initialize and configure the decoder for audio stream processing.",
      "description_length": 263,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 506,
    "min_description_length": 263,
    "avg_description_length": 349.2,
    "embedding_file_size_mb": 0.01857471466064453
  }
}