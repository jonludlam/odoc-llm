{
  "package": "opus",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:53:09.627193",
  "modules": [
    {
      "module_path": "Opus_decoder",
      "library": "opus.decoder",
      "description": "This module implements an Opus audio decoder for use with the `Ogg_demuxer` module, handling the decoding of Opus-encoded audio streams. It provides a reference to the decoder's sample rate and a function to register the decoder for use in demuxing pipelines. Concrete use cases include playing back Opus audio from Ogg containers or converting Opus streams to raw PCM data.",
      "description_length": 374,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Opus.Decoder",
      "library": "opus",
      "description": "This module decodes Opus audio streams from OGG packets into floating-point PCM data, supporting both standard and forward-error-correction decoding. It manages decoder state, channel count, and gain control via `apply_control`, and works directly with Ogg packets and Bigarray-based sample buffers. Use it to extract and process multi-channel audio from Opus-encoded streams in formats like .ogg or .opus.",
      "description_length": 406,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Opus.Encoder",
      "library": "opus",
      "description": "This module implements an Opus audio encoder for real-time streaming and file encoding. It supports configuration through control commands like setting bitrate, signal type, and VBR mode, and works with PCM audio data in both regular and bigarray formats. It encodes audio frames into an Ogg stream, producing packets that conform to the Opus in Ogg bitstream specification.",
      "description_length": 374,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Opus",
      "library": "opus",
      "description": "This module handles Opus audio encoding and decoding with specific support for OGG containers. It provides types for bandwidth selection and direct control over encoder and decoder parameters through control commands. The Decoder module converts Opus streams into PCM data, while the Encoder module prepares audio for streaming or storage using configurable bitrate and signal settings.",
      "description_length": 386,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 406,
    "min_description_length": 374,
    "avg_description_length": 385.0,
    "embedding_file_size_mb": 0.05844593048095703
  }
}