{
  "package": "choice",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:27:26.904346",
  "modules": [
    {
      "module_path": "Choice.Enum",
      "description": "Provides operations to manipulate and combine enumerations, including adding elements to the front, zipping two enumerations, and counting distinct values. Works with custom types 'a t and 'a item to represent enumerations and their elements. Used to generate all possible combinations from two sequences or convert enumerations into list structures.",
      "description_length": 350,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Choice.List",
      "description": "Generates all suffixes of a list, enumerates all permutations of its elements, and produces combinations of a specified size. Works with lists and enumerated sequences. Useful for generating all possible sublists, exploring arrangement possibilities, and selecting subsets of a fixed size.",
      "description_length": 289,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Choice.Array",
      "description": "Generates all unique permutations of an array's elements as an enumeration. Produces combinations of a specified size from the array's elements, also as an enumeration. These functions enable efficient exploration of ordered and unordered subsets for combinatorial tasks.",
      "description_length": 271,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "choice",
      "description": "Provides operations for handling computations with multiple possible outcomes, including binding, mapping, and lifting. Works with the `option` and `result` types to manage success and failure cases explicitly. Enables safe composition of functions that may fail or return no value.",
      "description_length": 282,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Choice",
      "description": "provides a framework for generating and manipulating enumerations of possible values, supporting combinatorial exploration through operations like zipping, suffix generation, permutations, and combinations. It works with custom types 'a t and 'a item to represent sequences and their elements, enabling tasks such as generating all possible pairs from two lists or extracting unique permutations of an array. Functions allow for converting enumerations to lists, counting distinct values, and selecting subsets of specific sizes. This supports applications in constraint solving, exhaustive search, and combinatorial analysis.",
      "description_length": 626,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 626,
    "min_description_length": 271,
    "avg_description_length": 363.6,
    "embedding_file_size_mb": 0.018619537353515625
  }
}