{
  "package": "combinaml",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:43:54.594597",
  "modules": [
    {
      "module_path": "Combinaml.Input",
      "library": "combinaml",
      "description": "This module manages input parsing state with a string and position, providing direct access to characters and substrings. It supports operations like advancing the position, checking remaining length, extracting substrings, and testing input content. Concrete use cases include implementing custom parsers, tokenizers, and string processing logic that require efficient, low-level input manipulation.",
      "description_length": 400,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Combinaml",
      "library": "combinaml",
      "description": "This module provides functional combinators for constructing parsers through composition, sequencing, and failure handling over input parsing state and streams, enabling structured text parsing tasks. It includes character and string validation primitives, repetition and delimiter-aware combinators like `many` and `sep_by`, and recursion support via `fix`, suitable for applications such as data format parsing, recursive grammar implementations, and input validation workflows.",
      "description_length": 480,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 480,
    "min_description_length": 400,
    "avg_description_length": 440.0,
    "embedding_file_size_mb": 0.02943897247314453
  }
}