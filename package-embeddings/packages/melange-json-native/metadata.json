{
  "package": "melange-json-native",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:51.071179",
  "modules": [
    {
      "module_path": "Melange_json.To_json",
      "library": "melange-json-native",
      "description": "This module constructs JSON values from OCaml primitives and data structures, converting types like strings, integers, floats, lists, arrays, options, and results into corresponding JSON representations. It supports direct encoding of values into extensible JSON variants, handling special cases like `null` for unit and wrapping results in lists. Use it to serialize OCaml data for APIs, configuration files, or data interchange formats.",
      "description_length": 438,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Melange_json.Of_json",
      "library": "melange-json-native",
      "description": "Converts JSON values into OCaml values, handling primitive types like strings, integers, floats, and booleans, as well as structured types like lists, arrays, options, and results. Works directly with `Yojson.Basic.t` values, extracting and transforming data according to expected types. Useful for parsing JSON responses from APIs or configuration files into strongly-typed OCaml data.",
      "description_length": 386,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Melange_json.Primitives",
      "library": "melange-json-native",
      "description": "This module converts between JSON values and OCaml primitives, handling types like strings, booleans, numbers, and collections. It supports parsing JSON into typed OCaml values and serializing OCaml values into JSON structures. Use it to decode JSON inputs into native data types or encode OCaml data for JSON output, such as processing API responses or serializing application state.",
      "description_length": 384,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Melange_json",
      "library": "melange-json-native",
      "description": "This module enables type-safe conversion between JSON data and OCaml values, using `Yojson.Basic.t` to represent JSON trees and offering operations for parsing, validation, and pretty-printing. It supports encoding OCaml primitives, lists, options, and results into JSON, and decoding JSON into typed OCaml values with error resilience. You can serialize application state to JSON, parse API responses into structured data, or map complex nested JSON into OCaml models with strong typing guarantees. Submodules handle low-level encoding and decoding of specific data types, making it suitable for tasks like configuration management and data interchange.",
      "description_length": 654,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 4,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 654,
    "min_description_length": 384,
    "avg_description_length": 465.5,
    "embedding_file_size_mb": 0.014934539794921875
  }
}