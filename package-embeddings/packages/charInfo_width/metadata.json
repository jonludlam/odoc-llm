{
  "package": "charInfo_width",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:36.906078",
  "modules": [
    {
      "module_path": "CharInfo_width.String",
      "library": "charInfo_width",
      "description": "This module calculates the column width of a string, returning either the width or the position of the first unprintable character. It works with strings represented as `US.t`, which is typically a Unicode string type. A concrete use case is validating and measuring the display width of text in a terminal or layout engine, where knowing the exact rendering size or identifying invalid characters is critical.",
      "description_length": 410,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "CharInfo_width.UnicodeString_mini",
      "library": "charInfo_width",
      "description": "This module provides direct access to Unicode characters within a string through the `get` function, which retrieves a character at a specified index, and `length`, which returns the total number of characters. It operates on the abstract type `t`, representing a Unicode string. Concrete use cases include efficient character inspection and iteration in Unicode text processing tasks such as parsing, formatting, or encoding validation.",
      "description_length": 437,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "CharInfo_width.Cfg",
      "library": "charInfo_width",
      "description": "This module processes configuration files that define character width mappings for terminal display. It parses files into a `widthTable` record containing character sets for unprintable, combining, and fixed-width characters from 2 to 6 columns. Functions include loading configurations from a string or file path and merging multiple configurations.",
      "description_length": 350,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "CharInfo_width",
      "library": "charInfo_width",
      "description": "This module computes the display width of Unicode characters and strings, using configurable rules for unprintable, combining, and fixed-width characters. It provides direct operations on Unicode characters through indexing and length functions, and supports parsing and merging of width configuration files that define custom display rules. Functions like `width` and `width_exn` calculate per-character width, while the string-level counterpart handles full-width measurement and error reporting on invalid characters. Use cases include terminal rendering, text layout, and Unicode-aware string validation with configurable display semantics.",
      "description_length": 644,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 644,
    "min_description_length": 350,
    "avg_description_length": 460.25,
    "embedding_file_size_mb": 0.01495361328125
  }
}