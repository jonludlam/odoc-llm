{
  "package": "aws-rds",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 677,
  "creation_timestamp": "2025-06-18T17:19:50.377100",
  "modules": [
    {
      "module_path": "Aws_rds.Types.MinimumEngineVersionPerAllowedValue",
      "description": "Provides functions to construct, parse, serialize, and deserialize a structure representing a minimum engine version associated with an allowed value. Works with string-based engine versions and allowed values, using a record type to encapsulate these values. Used to enforce version constraints in AWS-related configurations, such as validating database engine compatibility.",
      "description_length": 376,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupMembership",
      "description": "Provides functions to construct, parse, and serialize security group membership data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional fields for security group names and status. Used to process and transmit security group association data in AWS API interactions.",
      "description_length": 348,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionSetting",
      "description": "Provides methods to construct, parse, serialize, and deserialize configuration settings with attributes like name, value, description, and data type. Works with structured data including strings, booleans, and JSON representations. Used to generate AWS API requests and process XML responses containing setting definitions.",
      "description_length": 323,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.VpcSecurityGroupMembership",
      "description": "Provides functions to construct, parse, and serialize objects representing VPC security group membership data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with structured data containing optional VPC security group IDs and status information. Used to process and transmit AWS VPC security group association details in API interactions.",
      "description_length": 389,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AvailabilityZone",
      "description": "Provides operations to construct, parse, and serialize availability zone data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional name information. Used to process and transmit availability zone details in AWS API interactions.",
      "description_length": 309,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.Outpost",
      "description": "Creates and manipulates AWS resource identifiers using ARN strings, parsing XML nodes into structured data, and converting between query parameters, JSON, and internal representations. Operates on XML node lists, JSON values, and query parameters to represent AWS resources. Used to construct and deserialize AWS resource objects from API responses and configuration data.",
      "description_length": 372,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.MinimumEngineVersionPerAllowedValueList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of minimum engine version per allowed value structures. Operates on XML nodes, AWS query parameters, and JSON data structures. Used to process and encode configuration constraints in AWS-related data exchanges.",
      "description_length": 283,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DoubleRange",
      "description": "Provides operations to create, parse, serialize, and deserialize a range of double-precision floating-point numbers. Works with a structured type containing optional start and end values. Used to handle HTTP query parameters and JSON representations of numerical ranges in API interactions.",
      "description_length": 290,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.Range",
      "description": "Provides methods to create, parse, and serialize range structures with start, end, and step values. Works with integer-based ranges and JSON/XML representations. Used to generate query parameters from range definitions and reconstruct ranges from XML or JSON input.",
      "description_length": 265,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReadersArnList",
      "description": "Provides functions to create a list from a single element, parse XML nodes into a list of strings, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values representing AWS resource identifiers. Used to process and format ARN lists for API requests and responses.",
      "description_length": 342,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.WriteForwardingStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to handle status information in AWS requests and responses, ensuring consistent encoding and decoding.",
      "description_length": 324,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupMembershipList",
      "description": "Handles conversion and parsing of security group membership data. Accepts XML nodes to generate lists of security group memberships, constructs AWS query parameters, and serializes/deserializes data to and from JSON format. Used to process and transmit security group associations in cloud infrastructure interactions.",
      "description_length": 318,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionSettingConfigurationList",
      "description": "Provides functions to create a configuration list from a default value, parse XML nodes into a list of option settings, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with XML node sequences, AWS query structures, and JSON values, along with a list of option settings. Used to process and represent configuration data in API requests and responses.",
      "description_length": 404,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.VpcSecurityGroupMembershipList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of VpcSecurityGroupMembership records. Operates on lists of VpcSecurityGroupMembership.t and XML or JSON data structures. Used to process security group membership data from AWS API responses and prepare queries for API requests.",
      "description_length": 299,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AuthScheme",
      "description": "Provides conversion between a custom type `t` and strings, including bidirectional mappings, parsing from XML nodes, and serialization to AWS query and JSON formats. Works with the abstract type `t` and associated string representations. Used to encode and decode authentication schemes in XML, query parameters, and JSON payloads for AWS interactions.",
      "description_length": 352,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.IAMAuthMode",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including parsing from XML and serializing to query parameters. Works with the `t` type, which represents authentication modes, and supports bidirectional mapping to string representations. Used to transform authentication mode data for XML parsing, HTTP query encoding, and JSON serialization.",
      "description_length": 374,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.Subnet",
      "description": "Provides methods to construct, parse, and serialize subnet data, including converting between XML nodes, query parameters, and JSON representations. Works with custom types such as subnet identifier, availability zone, outpost, and status. Used to process and transmit subnet information in AWS API interactions.",
      "description_length": 312,
      "index": 16,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.LogTypeList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values, typically used for handling AWS query parameters. Used to transform XML input from API responses into structured data and prepare data for JSON-based API requests.",
      "description_length": 378,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ProcessorFeature",
      "description": "Provides operations to construct, parse, serialize, and deserialize processor feature data. Works with a record type containing optional name and value fields. Used to handle XML and JSON representations of processor features in AWS API interactions.",
      "description_length": 250,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupOptionSetting",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structured configuration option with attributes like name, description, default value, apply type, allowed values, and modifiability. Works with custom types including strings, booleans, and a list of engine version mappings. Used to handle AWS option group settings in API requests and responses.",
      "description_length": 367,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionVersion",
      "description": "Provides functions to create, parse, and serialize versioned options with optional default flags. Works with a record type containing a string version and a boolean default indicator. Used to handle AWS API versioning in query parameters and JSON payloads.",
      "description_length": 256,
      "index": 20,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DoubleRangeList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of double ranges. Works with XML nodes, AWS query parameters, and JSON structures. Used to handle range-based filtering in API requests and responses.",
      "description_length": 221,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RangeList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of range objects. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of ranges and AWS-compatible data formats.",
      "description_length": 240,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ApplyMethod",
      "description": "Provides functions to convert between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings and serialization to AWS query format. Works with the abstract type `t` and related AWS data structures. Used to parse XML responses, generate JSON payloads, and handle string representations in API interactions.",
      "description_length": 335,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EngineModeList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values. Used to handle AWS mode configurations in XML and JSON formats.",
      "description_length": 271,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.RecurringCharge",
      "description": "Provides functions to construct, parse, serialize, and deserialize recurring charge data. Works with a record type containing optional amount and frequency fields. Used to handle AWS recurring charge configurations in API requests and responses.",
      "description_length": 245,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AttributeValueList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values, typically used in AWS request parameters. Used to handle attribute values in API requests, ensuring proper formatting and conversion between XML, query, and JSON representations.",
      "description_length": 393,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PendingMaintenanceAction",
      "description": "Provides operations to construct, parse, and serialize objects representing pending maintenance actions, including setting action type, dates for auto-apply and forced apply, opt-in status, and descriptions. Works with custom types for strings, dates, and JSON structures. Used to process and transmit maintenance action data in AWS API interactions.",
      "description_length": 350,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StringList",
      "description": "Provides functions to create empty lists, parse XML nodes into string lists, convert lists to query parameters, serialize to JSON lists, and deserialize from JSON. Operates on lists of strings wrapped in a custom type. Used to handle AWS query parameters and JSON serialization of string arrays.",
      "description_length": 295,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TargetHealthReason",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TargetState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CharacterSet",
      "description": "Provides operations to create, parse, and serialize character set data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing name and description fields for character sets. Used to process and transmit character set configurations in AWS API interactions.",
      "description_length": 326,
      "index": 31,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.Timezone",
      "description": "Provides functions to create, parse, and serialize timezone data, including converting between XML nodes, query parameters, and JSON representations. Works with a custom type representing timezone information, derived from AWS base types. Used to handle timezone data in API requests and responses, particularly in AWS-related applications.",
      "description_length": 340,
      "index": 32,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.UpgradeTarget",
      "description": "Represents an upgrade target for a service, supporting creation with engine, version, description, and upgrade settings. Parses XML nodes into this structure and converts it to query parameters, JSON representations, and from JSON. Used to configure and serialize upgrade configurations for cloud service management.",
      "description_length": 316,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.GlobalClusterMember",
      "description": "Provides operations to construct, parse, and serialize objects representing global cluster members, including setting database cluster ARN, reader ARN list, write status, and forwarding status. Works with types such as string, boolean, and custom records for cluster and reader ARNs. Used to generate AWS API queries and JSON representations from parsed XML data.",
      "description_length": 363,
      "index": 34,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.Option",
      "description": "Provides functions to construct, parse, serialize, and deserialize option configurations, including setting names, descriptions, persistence flags, ports, and security group memberships. Works with custom types such as string, boolean, integer, and lists of security group memberships. Used to generate and process AWS option data structures in API requests and responses.",
      "description_length": 372,
      "index": 35,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.Tag",
      "description": "Provides operations to create, parse, and serialize tag structures with key-value pairs. Works with string-based key and value fields, and supports XML, query, and JSON serialization formats. Used to construct and process tags in AWS API requests and responses.",
      "description_length": 261,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.UserAuthConfigInfo",
      "description": "Represents user authentication configuration with methods to construct, parse XML, and serialize to query parameters, JSON, and deserialize from JSON. Works with string-based identifiers, authentication schemes, and IAM authentication modes. Used to generate AWS API requests requiring user-specific authentication details.",
      "description_length": 323,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceRole",
      "description": "Provides operations to construct, parse, and serialize objects representing database instance roles, including setting role ARN, feature name, and status. Works with a record type containing string fields for role information. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 307,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceStatusInfo",
      "description": "Provides functions to construct, parse, serialize, and deserialize instances representing database instance status information. Works with structured data including status type, boolean flags, and status messages. Used to convert between XML node structures and JSON representations for API interactions.",
      "description_length": 304,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupStatus",
      "description": "Provides operations to construct, parse, and serialize data structures representing database parameter group statuses, including converting between XML, query strings, and JSON formats. Works with string-based identifiers and status indicators for database parameters. Used to process and transmit parameter group state information in AWS API interactions.",
      "description_length": 356,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.SubnetList",
      "description": "Handles creation of subnet lists from a default value, parses XML nodes into structured subnet data, converts subnet lists to AWS query parameters, serializes to JSON format, and deserializes from JSON back into subnet lists. Operates on lists of Subnet.t values and AWS-specific data types like Query.t and Json.t. Used to process and transmit subnet information in cloud infrastructure workflows.",
      "description_length": 398,
      "index": 41,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DomainMembership",
      "description": "Provides methods to construct, parse, and serialize domain membership data, including handling AWS-specific fields like domain, status, FQDN, and IAM role name. Works with structured data types containing string fields and JSON/Query representation functions. Used to process and transmit domain membership information in AWS API interactions.",
      "description_length": 343,
      "index": 42,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupMembership",
      "description": "Provides operations to construct, parse, and serialize option group membership data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional fields for option group names and status. Used to handle AWS option group membership information in API requests and responses.",
      "description_length": 345,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PendingCloudwatchLogsExports",
      "description": "Provides operations to construct, parse, and serialize configuration for cloudwatch logs exports, including enabling and disabling specific log types. Works with custom types for log type lists and AWS query/json representations. Used to generate AWS API requests and process XML responses for log export settings.",
      "description_length": 314,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ProcessorFeatureList",
      "description": "Provides functions to create a list of processor features, parse XML nodes into a list of processor feature objects, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query parameters, and JSON values. Used to process and transmit processor feature data in API requests and responses.",
      "description_length": 367,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AvailableProcessorFeature",
      "description": "Provides methods to construct, parse, and serialize processor feature configurations, including converting between XML, query parameters, and JSON formats. Works with string-based names, default values, and allowed value lists for AWS processor features. Used to handle AWS API responses and generate request parameters for processor-related operations.",
      "description_length": 353,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterMember",
      "description": "Provides operations to construct, parse, and serialize data structures representing database cluster members, including instance identifiers, writer status, parameter group status, and promotion tiers. Works with custom record types encapsulating AWS-specific data fields. Used to process and transmit cluster member details in API requests and responses.",
      "description_length": 355,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterOptionGroupStatus",
      "description": "Provides operations to construct, parse, and serialize data structures representing the status of a DB cluster option group, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and status values, encapsulated in a record type. Used to process and transmit DB cluster option group status information in API interactions.",
      "description_length": 373,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterRole",
      "description": "Provides operations to construct, parse, and serialize objects representing database cluster roles, including setting role ARN, status, and feature name. Works with structured data types containing string fields and JSON representations. Used to generate AWS API queries and handle JSON input from external sources.",
      "description_length": 315,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EC2SecurityGroup",
      "description": "Provides operations to construct, parse, and serialize EC2 security group data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data representing security group attributes such as name, ID, owner ID, and status. Used to process AWS API responses and generate request parameters for EC2 security group interactions.",
      "description_length": 366,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.IPRange",
      "description": "Provides operations to construct, parse, serialize, and deserialize IP range data structures, including methods to convert between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional status and CIDR IP fields. Used to process network range information in AWS API interactions, such as validating or transmitting IP range configurations.",
      "description_length": 388,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupOptionSettingsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of option group settings. Operates on lists of `OptionGroupOptionSetting.t` values and XML nodes. Used to convert between XML input, query parameters, and JSON representations for AWS option group configurations.",
      "description_length": 282,
      "index": 52,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupOptionVersionsList",
      "description": "Provides functions to create a list of option versions, parse XML nodes into such a list, convert the list to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of `OptionVersion.t` values and AWS-specific data structures. Used to handle versioned options in API requests and responses, such as when processing configuration updates or retrieving historical data.",
      "description_length": 404,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionsConflictsWith",
      "description": "Provides functions to create a value from a string, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize from JSON. Operates on lists of strings and AWS-specific string types. Used to handle configuration options that conflict by converting between XML, query, and JSON formats.",
      "description_length": 348,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionsDependedOn",
      "description": "Provides functions to create a value from a single element, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize from JSON to string lists. Works with lists of string-type values and JSON structures. Used to handle AWS query parameters and JSON representations of string lists in API interactions.",
      "description_length": 367,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.FilterValueList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of string values, converting them to and from XML nodes, query strings, and JSON representations. Used to handle AWS API request parameters that require list formatting in various serialization formats.",
      "description_length": 329,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ValidStorageOptions",
      "description": "Provides methods to construct, parse, and serialize storage configuration options with specific constraints on storage type, size, provisioned IOPS, IOPS-to-storage ratio, and autoscaling support. Works with custom types such as range lists, double range lists, and boolean flags to represent valid storage parameters. Used to validate and encode storage settings for AWS API requests.",
      "description_length": 385,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.VpnDetails",
      "description": "Provides functions to construct, parse, and serialize VPN details data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based fields such as VPN ID, tunnel IP, gateway IP, pre-shared key, and state. Used to process and transmit VPN configuration data in AWS-related workflows.",
      "description_length": 338,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.Parameter",
      "description": "Provides operations to construct, parse, serialize, and deserialize parameter objects with specific attributes like name, value, description, source, apply type, data type, and engine compatibility. Works with string, boolean, and list types, as well as custom types like ApplyMethod.t and EngineModeList.t. Used to generate AWS-compatible parameter configurations for database engine settings and configuration management.",
      "description_length": 423,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RecurringChargeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of recurring charge objects. Operates on lists of `RecurringCharge.t` values and XML or JSON representations. Parses XML input into a list of charges, converts to AWS query parameters, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 327,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotAttribute",
      "description": "Provides functions to construct, parse, and serialize objects representing attributes of a database cluster snapshot, including setting attribute names and values. Works with string-based attribute names and lists of attribute values. Used to prepare data for API requests and to process XML or JSON responses from database management services.",
      "description_length": 344,
      "index": 61,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.PendingMaintenanceActionDetails",
      "description": "Handles creation, parsing, and serialization of maintenance action details. Operates on lists of `PendingMaintenanceAction.t` values, converting them to XML, query parameters, and JSON formats. Used to process and transmit maintenance action data in AWS API interactions.",
      "description_length": 271,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ConnectionPoolConfigurationInfo",
      "description": "Provides functions to construct, parse, and serialize connection pool configuration data, including setting maximum and idle connection percentages, borrow timeouts, session filters, and initialization queries. Works with custom types such as integers, strings, and lists for configuration parameters. Used to generate AWS query parameters and JSON representations for database connection settings.",
      "description_length": 398,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TargetHealth",
      "description": "Encapsulates target health status with state, reason, and description, supporting XML parsing and JSON serialization. Works with custom types for health state and reason, along with string descriptions. Used to construct and convert health reports for AWS API interactions.",
      "description_length": 273,
      "index": 64,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.TargetType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, including bidirectional mappings and serialization to AWS query parameters. Works with a polymorphic type `t` that can represent various target identifiers. Used to parse XML responses, generate JSON payloads, and handle string-based configuration in AWS-related workflows.",
      "description_length": 349,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.FeatureNameList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to a query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values. Used to process and encode feature names from XML input for API requests and to decode them from JSON responses.",
      "description_length": 329,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SupportedCharacterSetsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of character sets. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit supported character set configurations in API requests and responses.",
      "description_length": 253,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SupportedTimezonesList",
      "description": "Handles timezone data conversion and serialization, offering parsing from XML nodes to timezone lists, conversion to AWS query parameters, and JSON encoding/decoding. Operates on lists of timezone values represented as `Timezone.t`. Used to generate AWS-compatible query strings and process JSON responses containing timezone information.",
      "description_length": 338,
      "index": 68,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ValidUpgradeTargetList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of upgrade target objects. Operates on lists of `UpgradeTarget.t` and XML nodes, converting them into AWS query parameters and JSON structures. Used to process and transmit upgrade target data in API requests and responses.",
      "description_length": 293,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventCategoriesList",
      "description": "Provides operations to create, parse, and serialize a list of string-based event categories. Works with lists of strings and AWS-specific types for query and JSON formatting. Parses XML nodes into category lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 299,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.GlobalClusterMemberList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of global cluster members. Operates on lists of `GlobalClusterMember.t` values and XML or JSON representations. Used to generate AWS query parameters from member lists and reconstruct them from JSON responses.",
      "description_length": 279,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionsList",
      "description": "Provides functions to create a list of options, parse XML nodes into a list of options, convert the list to an AWS query structure, serialize to a JSON list format, and deserialize from JSON back to a list of options. Works with XML node structures, AWS query parameters, and JSON values. Used to process and encode command-line or configuration options in API requests and data serialization workflows.",
      "description_length": 403,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AvailabilityZones",
      "description": "Provides functions to create, parse, and serialize availability zone data. Operates on lists of strings representing zone names and converts them to query parameters, JSON lists, and vice versa. Used to handle AWS availability zone information in API requests and responses.",
      "description_length": 274,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TagList",
      "description": "Creates and manipulates lists of tags, supporting initialization, XML parsing, query construction, and JSON serialization/deserialization. Operates on lists of `Tag.t` values and JSON structures representing such lists. Used to convert XML data into tag lists, generate AWS query parameters, and handle tag data in JSON format.",
      "description_length": 327,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SourceIdsList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing source identifiers. Used to handle AWS source ID data during XML parsing, query construction, and JSON serialization workflows.",
      "description_length": 347,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupNameList",
      "description": "Provides functions to create, parse, and serialize a list of security group names. Operates on a type representing a list of strings, specifically for AWS security group names. Parses XML nodes into a list, converts to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 288,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionSettingsList",
      "description": "Provides functions to create a singleton list, parse XML nodes into a list of option settings, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with lists of `OptionSetting.t` values and AWS-specific data types. Used to handle configuration options in API requests and responses.",
      "description_length": 326,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.VpcSecurityGroupIdList",
      "description": "Provides functions to create, parse, and serialize lists of VPC security group IDs. Operates on lists of string-type identifiers representing AWS security groups. Used to convert between XML node structures, query parameters, and JSON representations in AWS API interactions.",
      "description_length": 275,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotAttribute",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing database snapshot attributes, including setting attribute names and values. Works with types such as strings, lists of attribute values, and JSON structures. Used to process AWS API responses and generate query parameters for database snapshot management.",
      "description_length": 344,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to transform internal state into formats suitable for API requests and data interchange.",
      "description_length": 292,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.UserAuthConfigInfoList",
      "description": "Creates and manipulates lists of user authentication configuration entries. Processes XML nodes into structured data, converts between list formats and query parameters, and handles JSON serialization and deserialization. Used to manage user authentication settings in API requests and responses.",
      "description_length": 296,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceRoles",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of database instance roles. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML responses from AWS APIs and internal role representations for processing and transmission.",
      "description_length": 278,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceStatusInfoList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of database instance status information. Operates on lists of `DBInstanceStatusInfo.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle responses from AWS API calls involving database instance statuses.",
      "description_length": 316,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupStatusList",
      "description": "Provides functions to create, parse, and serialize lists of database parameter group status objects. Operates on XML nodes, AWS query structures, and JSON values. Used to process and transmit parameter group status data from AWS API responses.",
      "description_length": 243,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroup",
      "description": "Constructs a structured representation of a database subnet group using parameters like name, description, VPC ID, and subnet list. Parses XML nodes into this structure and serializes it to query parameters, JSON, or deserializes from JSON. Used to manage and exchange subnet group configurations in AWS-related workflows.",
      "description_length": 322,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DomainMembershipList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of domain membership records. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between raw XML data and structured domain membership data for API interactions.",
      "description_length": 270,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.Endpoint",
      "description": "Provides operations to construct, parse, and serialize endpoint configurations, including methods to convert between XML nodes, query parameters, and JSON representations. Works with structured data containing address, port, and hosted zone ID fields. Used to process and encode DNS endpoint information for AWS service interactions.",
      "description_length": 333,
      "index": 87,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupMembershipList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of option group membership records. Operates on lists of `OptionGroupMembership.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS option group membership data in API requests and responses.",
      "description_length": 309,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PendingModifiedValues",
      "description": "Provides functions to construct, parse, and serialize objects representing modified database instance configurations, including storage, security, and performance settings. Works with structured data types such as strings, integers, booleans, and custom records for database parameters. Used to generate AWS API requests for updating database instances with specific attributes like allocated storage, engine version, and cloudwatch logs configuration.",
      "description_length": 452,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReadReplicaDBClusterIdentifierList",
      "description": "Provides functions to create, parse, and serialize lists of string-based DB cluster identifiers. Operates on lists of strings representing AWS database cluster identifiers. Used to handle query parameters and JSON representations in AWS API interactions.",
      "description_length": 254,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReadReplicaDBInstanceIdentifierList",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of string-based database instance identifiers. Operates on lists of strings representing identifiers, using XML and JSON formats for data exchange. Used to process and encode replica database instance identifiers in AWS API requests and responses.",
      "description_length": 318,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReplicaMode",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type `t` and string-based representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 273,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InstallationMediaFailureCause",
      "description": "Provides constructors and parsers for handling failure causes from installation media, including conversion to and from JSON and query formats. Works with AWS-specific types such as strings, JSON values, and XML nodes. Used to process and serialize error information from EC2 instance installation failures.",
      "description_length": 307,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreWindow",
      "description": "Provides functions to create, parse, and serialize window parameters for time-based operations, using datetime values and JSON/XML formats. Works with a structured type containing optional earliest and latest time constraints. Used to restore operations within specified temporal boundaries in AWS-related workflows.",
      "description_length": 316,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SourceType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and parsing capabilities. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize data for XML and JSON formats in AWS-related contexts.",
      "description_length": 291,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AvailabilityZoneList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of availability zone objects. Operates on lists of `AvailabilityZone.t` and XML or JSON representations. Used to process AWS availability zone data from XML responses and convert it into structured JSON for API interactions.",
      "description_length": 294,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AvailableProcessorFeatureList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of processor feature objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between XML input from API responses and structured data for further processing.",
      "description_length": 267,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ActivityStreamMode",
      "description": "Converts between string representations and a custom type `t` using bidirectional mappings, and supports parsing from XML nodes, serializing to query parameters, and encoding/decoding JSON. Works with XML node structures, query parameters, and JSON values to facilitate data interchange. Used to process and generate structured data from external formats like XML and JSON in API interactions.",
      "description_length": 393,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ActivityStreamStatus",
      "description": "Converts between a custom type and string representations, XML nodes, and JSON structures. Handles serialization and deserialization for query parameters and structured data. Supports parsing from XML and generating JSON-compatible outputs.",
      "description_length": 240,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterMemberList",
      "description": "Constructs a list of database cluster members from a single element. Parses XML nodes into a structured list of cluster members, serializes the list into query parameters, and converts between JSON representations and the internal list structure. Used to process and transmit cluster member data in AWS API interactions.",
      "description_length": 320,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterOptionGroupMemberships",
      "description": "Provides functions to create, parse, and serialize lists of DBClusterOptionGroupStatus values, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of structured status objects related to database cluster option group memberships. Used to process and transmit cluster option group data in API interactions.",
      "description_length": 355,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterRoles",
      "description": "Creates and manipulates lists of database cluster role configurations. Parses XML nodes into structured role lists, converts them to query parameters and JSON representations, and reconstructs them from JSON. Used for handling AWS RDS cluster role data in API interactions.",
      "description_length": 273,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ReadReplicaIdentifierList",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of string identifiers. Operates on lists of strings, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS read replica identifiers in request and response data.",
      "description_length": 267,
      "index": 103,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ScalingConfigurationInfo",
      "description": "Provides operations to construct, parse, and serialize configuration data for scaling settings, including minimum and maximum capacity, auto-pause behavior, and timeout actions. Works with integer and boolean values, XML nodes, and JSON structures. Used to generate AWS API requests and process responses from XML or JSON input.",
      "description_length": 328,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EC2SecurityGroupList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of EC2 security group objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process EC2 security group data from API responses and prepare it for request payloads.",
      "description_length": 265,
      "index": 105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.IPRangeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of IP range objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between XML input and structured data for network policy configurations.",
      "description_length": 250,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupOption",
      "description": "Creates and manipulates a structured representation of an option within an option group, including name, description, engine compatibility, port requirements, and dependencies. Works with string, boolean, integer, and custom types like OptionsDependedOn, OptionsConflictsWith, and OptionGroupOptionSettingsList. Used to construct and serialize option configurations for AWS RDS option groups.",
      "description_length": 392,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.Filter",
      "description": "Provides functions to construct, parse, and serialize filter objects from XML, JSON, and query parameters. Works with AWS-specific types such as `FilterValueList.t` and `Aws.Query.t` to represent and manipulate filter criteria. Used to generate structured filter data for API requests and to decode incoming filter information from XML or JSON responses.",
      "description_length": 354,
      "index": 108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ValidStorageOptionsList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of valid storage options. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and JSON output for storage configuration data.",
      "description_length": 246,
      "index": 109,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CustomAvailabilityZone",
      "description": "Provides methods to construct, parse, and serialize objects representing custom availability zones, including handling VPN details. Works with string-based identifiers, names, and statuses, as well as a structured VpnDetails type. Used to generate API queries and JSON representations from XML input for cloud infrastructure management.",
      "description_length": 336,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ParametersList",
      "description": "Provides functions to create a parameter list, parse XML nodes into a list of parameters, convert parameter lists to AWS query structures, serialize to JSON format, and deserialize from JSON. Works with XML node sequences, AWS query structures, and JSON values, using a list of parameter records as the core data structure. Used to process and transform configuration parameters from XML input into queryable and storable formats.",
      "description_length": 430,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstance",
      "description": "Provides operations to construct, parse, serialize, and deserialize a database reservation object with detailed attributes such as instance class, start time, duration, pricing, and recurring charges. Works with structured data including dates, integers, doubles, strings, and custom lists of recurring charges. Used to manage and exchange reserved DB instance configurations in AWS API interactions.",
      "description_length": 400,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotAttributeList",
      "description": "Handles conversion and parsing of cluster snapshot attributes between XML, query, and JSON formats. Operates on lists of `DBClusterSnapshotAttribute.t` values. Parses XML input into attribute lists, serializes attributes into query parameters, and converts between JSON representations and attribute lists.",
      "description_length": 306,
      "index": 113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ResourcePendingMaintenanceActions",
      "description": "Provides operations to construct, parse, and serialize objects representing resources with pending maintenance actions, including converting between XML nodes, query parameters, and JSON. Works with string identifiers and structured details of maintenance actions. Used to process AWS API responses and prepare data for HTTP requests.",
      "description_length": 334,
      "index": 114,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBProxyTargetGroup",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS target groups, including methods to convert between XML, query parameters, and JSON formats. Works with types such as strings, booleans, dates, and custom configurations for connection pools. Used to generate and process target group data in AWS API interactions.",
      "description_length": 343,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyTarget",
      "description": "Provides operations to construct, parse, and serialize a target configuration with attributes like ARN, endpoint, cluster ID, RDS resource ID, port, type, and health status. Works with custom record types and JSON/XML data formats. Used to generate query parameters for API requests and convert between XML responses and internal representations.",
      "description_length": 346,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBEngineVersion",
      "description": "Provides constructors and parsers for database engine version data, including engine details, character sets, log types, and feature support. Works with structured data types like character set lists, log type lists, and engine mode lists. Used to generate and parse AWS API-compatible representations for database engine configurations.",
      "description_length": 337,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventCategoriesMap",
      "description": "Provides operations to construct, parse, and serialize event category data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing optional source type and event categories lists. Used to process and transmit AWS event configuration details in API requests and responses.",
      "description_length": 338,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.GlobalCluster",
      "description": "Creates and manipulates objects representing AWS Global Clusters, including setting identifiers, ARNs, engine details, and encryption settings. Operates on types such as strings, booleans, and custom lists of cluster members. Used to construct and serialize cluster configurations for API interactions and data exchange.",
      "description_length": 320,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterParameterGroup",
      "description": "Provides operations to create, parse, and serialize data structures representing Amazon RDS cluster parameter groups, including handling names, families, descriptions, and ARNs. Works with custom record types containing string fields for cluster parameter group attributes. Used to generate HTTP queries and JSON representations for API interactions and to convert XML responses into structured data.",
      "description_length": 400,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBLogFilesDetails",
      "description": "Provides operations to construct, parse, and serialize log file details including file name, last write time, and size. Works with custom record types containing string and long data. Used to generate query parameters, JSON representations, and parse XML responses from AWS services.",
      "description_length": 283,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.Certificate",
      "description": "Provides operations to construct, parse, serialize, and deserialize certificate data, including fields like identifier, type, thumbprint, validity dates, ARN, and customer override flags. Works with custom types for strings, dates, and JSON structures. Used to process AWS certificate metadata from XML responses and prepare it for API requests.",
      "description_length": 345,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroup",
      "description": "Creates and manipulates option group configurations for AWS services, supporting operations like parsing XML, generating query parameters, and serializing/deserializing to JSON. Works with structured data including strings, booleans, lists, and AWS-specific types like `OptionsList.t`. Used to construct and validate option groups for database instances, enabling precise control over feature configurations.",
      "description_length": 408,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.UserAuthConfig",
      "description": "Provides operations to construct, parse, and serialize authentication configurations for user-based AWS services. Works with custom types representing user credentials, authentication schemes, and IAM modes. Used to generate query parameters and JSON payloads for API requests requiring user-specific authorization.",
      "description_length": 315,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SourceRegion",
      "description": "Provides operations to construct, parse, and serialize region information, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing region names, endpoints, and status strings. Used to process and encode AWS region configurations in API requests and responses.",
      "description_length": 325,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshot",
      "description": "Creates and manipulates database cluster snapshot objects with detailed attributes such as availability zones, snapshot time, engine, storage, and encryption status. Works with structured data including timestamps, strings, integers, and custom types like AvailabilityZones and TagList. Used to generate AWS API requests, parse XML responses, and serialize/deserialize data for storage or transmission.",
      "description_length": 402,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterEndpoint",
      "description": "Provides functions to construct, parse, and serialize a database cluster endpoint structure, including handling identifiers, endpoints, status, and member lists. Works with string-based identifiers, lists of strings, and JSON structures. Used to generate AWS API requests and process XML or JSON responses related to database cluster endpoints.",
      "description_length": 344,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventSubscription",
      "description": "Provides operations to construct, parse, and serialize event subscription data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data types such as strings, booleans, lists, and nested records representing AWS event subscriptions. Used to generate API requests for SNS subscriptions and process responses from AWS services.",
      "description_length": 380,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionConfiguration",
      "description": "Provides functions to construct, parse, and serialize configuration objects for AWS options, including setting names, ports, versions, and security group memberships. Works with custom types such as string, integer, and lists of security group names and option settings. Used to generate query parameters and JSON representations for API requests and to parse XML responses into structured configurations.",
      "description_length": 405,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshot",
      "description": "Provides functions to construct, parse, and serialize database snapshot data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data representing AWS RDS snapshots, including timestamps, integers, strings, and custom lists and records. Used to generate API requests, process XML responses, and serialize snapshot metadata for storage or transmission.",
      "description_length": 400,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotAttributeList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of database snapshot attributes. Operates on lists of `DBSnapshotAttribute.t` values and XML or JSON representations. Used to process and transmit snapshot attribute data in AWS API interactions.",
      "description_length": 268,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxy",
      "description": "Creates and manipulates database proxy configurations with fields like name, ARN, status, engine family, VPC settings, authentication details, and TLS requirements. Works with custom types such as `DBProxyStatus.t`, `StringList.t`, `UserAuthConfigInfoList.t`, and date/time representations. Used to generate API requests, parse XML responses, and serialize/deserialize data for AWS interactions.",
      "description_length": 395,
      "index": 132,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBInstance",
      "description": "Provides operations to construct, parse, and serialize database instance data, including detailed attributes like instance class, engine, status, security groups, and network configuration. Works with structured data types such as endpoints, lists of security groups, and status information. Used to process and exchange database instance metadata in API interactions and configuration files.",
      "description_length": 392,
      "index": 133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InstallationMedia",
      "description": "Provides operations to construct, parse, and serialize objects representing installation media for database engines, including setting engine-specific paths and status information. Works with structured data types containing string identifiers, paths, and status details. Used to generate API requests and process XML or JSON responses from cloud infrastructure services.",
      "description_length": 371,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ExportTask",
      "description": "Provides constructors and parsers for handling AWS export task data, including methods to build instances from parameters, parse XML nodes, and serialize/deserialize to query strings and JSON. Works with AWS-specific types such as strings, dates, integers, and lists, along with custom task attributes like ARNs and S3 paths. Used to process and exchange export task details in AWS integration workflows, such as tracking backup progress or logging failure reasons.",
      "description_length": 465,
      "index": 135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AccountQuota",
      "description": "Provides operations to construct, parse, and serialize account quota data, including converting between XML nodes, query parameters, and JSON representations. Works with numeric values representing used and maximum quotas, along with a quota name. Used to process AWS API responses and generate request parameters for quota-related actions.",
      "description_length": 340,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceAutomatedBackup",
      "description": "Provides functions to construct, parse, and serialize data structures representing automated database instance backups, including methods to convert between XML, query parameters, and JSON formats. Works with structured data containing attributes like instance ARN, region, creation time, engine details, and encryption settings. Used to process and transmit backup metadata in AWS-related workflows, such as generating API requests or parsing response data.",
      "description_length": 458,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroup",
      "description": "Provides functions to construct, parse, and serialize a database parameter group structure, including converting between XML, query strings, and JSON formats. Works with string-based attributes such as parameter group name, family, description, and ARN. Used to handle AWS RDS parameter group data in API requests and responses.",
      "description_length": 328,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.Event",
      "description": "Provides operations to construct, parse, serialize, and deserialize event data with specific fields like source identifier, message, date, and ARN. Works with custom types such as source type, event categories list, and date time. Used to convert XML event data into structured objects and generate query or JSON representations for API interactions.",
      "description_length": 350,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OrderableDBInstanceOption",
      "description": "Provides constructors and parsers for database instance options with detailed configuration parameters, including engine, version, class, availability, and storage settings. Works with custom types such as string, boolean, integer, double, and lists of availability zones, processor features, and engine modes. Used to generate and parse AWS API-compatible representations for database instance configurations.",
      "description_length": 410,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstancesOffering",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing AWS RDS reserved DB instances offerings. Works with structured data including strings, integers, booleans, and custom lists of recurring charges. Used to generate API requests and process XML or JSON responses from AWS RDS service endpoints.",
      "description_length": 330,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterBacktrack",
      "description": "Provides operations to construct, parse, and serialize objects representing database cluster backtrack settings, including identifiers, timestamps, and status. Works with datetime values, strings, and JSON structures. Used to generate API requests and process XML or JSON responses from database management systems.",
      "description_length": 315,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBCluster",
      "description": "Provides constructors and parsers for database cluster data, including methods to build, serialize, and deserialize cluster configurations. Works with structured data types such as strings, integers, dates, lists, and nested records representing cluster attributes. Used to generate AWS API-compatible queries and JSON representations for cluster management and state tracking.",
      "description_length": 377,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroup",
      "description": "Provides operations to construct, parse, and serialize security group data for database instances, including handling owner IDs, group names, descriptions, VPC IDs, EC2 security groups, IP ranges, and ARNs. Works with custom types such as string, lists of EC2 security groups and IP ranges, and JSON or query parameters. Used to generate API requests and process responses in AWS database-related workflows.",
      "description_length": 407,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupOptionsList",
      "description": "Provides functions to create, parse, and serialize lists of option group options. Works with XML nodes, AWS query parameters, and JSON structures. Parses XML into a list of options, converts them to AWS queries, and handles JSON serialization and deserialization.",
      "description_length": 263,
      "index": 145,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.FilterList",
      "description": "Provides functions to create, parse, serialize, and deserialize filter lists. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of filters and AWS-compatible query or JSON formats.",
      "description_length": 240,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SubnetIdentifierList",
      "description": "Provides operations to create, parse, and serialize lists of strings as subnet identifiers. Works with lists of strings representing network subnets and supports XML parsing, query string encoding, and JSON serialization. Used to handle subnet identifier data in AWS API requests and responses.",
      "description_length": 294,
      "index": 147,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ValidDBInstanceModificationsMessage",
      "description": "Provides operations to construct, parse, and serialize data related to valid modifications for a database instance, including storage options and processor features. Works with custom types for storage configurations and processor features, as well as XML and JSON representations. Used to generate AWS API requests and process responses for database instance configuration updates.",
      "description_length": 382,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CustomAvailabilityZoneList",
      "description": "Provides functions to create, parse, and serialize lists of custom availability zone objects. Operates on lists of `CustomAvailabilityZone.t` and supports XML parsing, query string generation, and JSON serialization/deserialization. Used to handle availability zone configurations in AWS-related data processing workflows.",
      "description_length": 322,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EngineDefaults",
      "description": "Provides operations to construct, parse, and serialize configuration objects using XML nodes, JSON, and query parameters. Works with structured data including string markers, parameter groups, and lists of parameters. Used to initialize and convert engine settings for AWS service interactions.",
      "description_length": 294,
      "index": 150,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstanceList",
      "description": "Handles creation, parsing, and serialization of lists of reserved DB instances. Operates on lists of `ReservedDBInstance.t` values, converting them to query parameters, JSON structures, and parsing XML nodes into structured data. Used to process API responses and prepare data for AWS service requests.",
      "description_length": 302,
      "index": 151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotAttributesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing Amazon RDS cluster snapshot attributes, including methods to convert between XML, query parameters, and JSON formats. Works with string identifiers and lists of attribute records specific to database cluster snapshots. Used to process and transmit snapshot attribute data in API interactions and data serialization workflows.",
      "description_length": 408,
      "index": 152,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.PendingMaintenanceActions",
      "description": "Handles creation, parsing, and serialization of pending maintenance actions for AWS resources. Operates on XML nodes and JSON structures, converting them into lists of resource-specific action records. Used to process and generate AWS API requests and responses related to maintenance scheduling.",
      "description_length": 296,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TargetGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of target groups. Operates on lists of `DBProxyTargetGroup.t` values and XML nodes. Parses XML input into target group lists, converts them to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 286,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TargetList",
      "description": "Creates and manipulates lists of database proxy targets, supporting parsing from XML, conversion to AWS query parameters, and serialization/deserialization to JSON. Operates on lists of `DBProxyTarget.t` records, enabling structured data handling. Used to process XML input into target lists, generate AWS API queries, and exchange data in JSON format.",
      "description_length": 352,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBEngineVersionList",
      "description": "Handles creation, parsing, and serialization of database engine version lists. Operates on lists of `DBEngineVersion.t` values, converting them to query parameters, JSON structures, and vice versa. Parses XML nodes into version lists for API interactions.",
      "description_length": 255,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventCategoriesMapList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of event category maps. Operates on lists of `EventCategoriesMap.t` values and XML nodes. Used to convert between XML input, query parameters, and JSON representations for event category data.",
      "description_length": 265,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ScalingConfiguration",
      "description": "Provides operations to create, parse, and serialize scaling configuration data, including minimum and maximum capacity, auto-pause settings, and timeout actions. Works with integer, boolean, and string values structured in a record type. Used to generate AWS API requests and process XML or JSON responses from scaling service configurations.",
      "description_length": 342,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CloudwatchLogsExportConfiguration",
      "description": "Provides functions to construct, parse, and serialize configuration objects for exporting CloudWatch Logs, including enabling and disabling specific log types. Works with `LogTypeList.t` for specifying log types and AWS query/json formats for serialization. Used to generate AWS API requests and process XML responses for log export settings.",
      "description_length": 342,
      "index": 159,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.GlobalClusterList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of global cluster objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data and structured cluster representations for API interactions.",
      "description_length": 260,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterParameterGroupList",
      "description": "Handles conversion and parsing of database cluster parameter group data. Parses XML nodes into a list of parameter group records, serializes them into query parameters or JSON format, and reconstructs the list from JSON. Used to process and transmit parameter group information in AWS API interactions.",
      "description_length": 302,
      "index": 161,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBLogFilesList",
      "description": "Provides functions to construct, parse, and serialize lists of database log file details, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of structured log file data encapsulated in a dedicated record type. Used to process and format responses from database logging services for API consumption.",
      "description_length": 349,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CertificateList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of certificates, convert certificate lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of Certificate.t values and AWS-specific data types. Used to process XML certificate data from API responses and prepare it for AWS requests or JSON serialization.",
      "description_length": 374,
      "index": 163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of option groups. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML representations of option groups and structured data for API interactions.",
      "description_length": 252,
      "index": 164,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.UserAuthConfigList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of user authentication configurations. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert configuration data between external formats and internal list structures for API interactions.",
      "description_length": 290,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SourceRegionList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of source region objects, convert the list to an AWS query structure, serialize to a JSON list, and deserialize from JSON. Works with XML node structures and AWS query and JSON representations. Used to process and transmit source region data in cloud infrastructure configurations.",
      "description_length": 354,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotList",
      "description": "Handles conversion and parsing of database cluster snapshot data. Accepts XML nodes to generate a list of cluster snapshots, serializes them into query parameters or JSON format, and reconstructs the list from JSON input. Works with the DBClusterSnapshot.t type to manage collections of database cluster snapshots.",
      "description_length": 314,
      "index": 167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ConnectionPoolConfiguration",
      "description": "Provides operations to construct, parse, serialize, and deserialize connection pool configurations, including setting maximum and idle connection percentages, borrow timeouts, session pinning filters, and initialization queries. Works with custom types such as integers, strings, lists of strings, and JSON structures. Used to configure database connection pools in AWS-based applications by converting between XML, JSON, and internal representation.",
      "description_length": 450,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterEndpointList",
      "description": "Handles conversion and parsing of database cluster endpoint data. Accepts XML nodes to generate a list of endpoints, serializes endpoint lists into query parameters, and encodes/decodes them to and from JSON format. Processes structured endpoint information for API interactions and data exchange.",
      "description_length": 297,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventSubscriptionsList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of event subscriptions. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert raw XML data from API responses into structured event subscription lists and vice versa.",
      "description_length": 264,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionConfigurationList",
      "description": "Provides functions to create a configuration list, parse XML nodes into a list of option configurations, convert the list to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query parameters, and JSON values. Used to process and represent configuration data in AWS-compatible formats.",
      "description_length": 346,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionNamesList",
      "description": "Provides functions to create a list of strings, parse XML nodes into a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values, typically used for handling named options in AWS requests. Used to transform and encode option names for API interactions and data serialization.",
      "description_length": 347,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroups",
      "description": "Handles creation and conversion of database subnet group data. Parses XML nodes into a list of subnet group records, converts them to AWS query parameters or JSON structures, and reconstructs them from JSON. Used to process and serialize subnet group information for API interactions.",
      "description_length": 284,
      "index": 173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotList",
      "description": "Handles creation, parsing, and serialization of database snapshot lists. Operates on lists of DBSnapshot.t values, converting them to query parameters, JSON structures, and parsing XML nodes into structured data. Used to process and transmit snapshot data in AWS API interactions.",
      "description_length": 280,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotAttributesResult",
      "description": "Provides functions to construct, parse, and serialize data related to database snapshot attributes, including converting between XML, query parameters, and JSON formats. Works with string identifiers and lists of snapshot attributes. Used to process and transmit snapshot metadata in AWS API interactions.",
      "description_length": 305,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyList",
      "description": "Provides functions to create a list of DBProxy.t values, parse XML nodes into such a list, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Operates on lists of DBProxy.t records, which represent database proxy configurations. Used to process and transmit database proxy data in AWS API interactions.",
      "description_length": 341,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of database instances. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert raw XML responses from AWS into typed lists and generate query parameters for API requests.",
      "description_length": 269,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InstallationMediaList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of installation media objects. Operates on XML nodes and AWS query or JSON structures. Used to convert between XML input and JSON output for installation media configurations.",
      "description_length": 245,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ExportTasksList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of export tasks. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert task data between XML input, AWS API queries, and JSON representations for storage or transmission.",
      "description_length": 268,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AccountQuotaList",
      "description": "Handles creation, parsing, and serialization of account quota data. Processes XML nodes into a list of account quota records and converts between JSON and query formats. Works with `AccountQuota.t` records to manage cloud resource limits.",
      "description_length": 238,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceAutomatedBackupList",
      "description": "Handles creation, parsing, and serialization of a list of automated database instance backups. Operates on a list of `DBInstanceAutomatedBackup.t` records, converting them to query parameters, JSON structures, and parsing XML input into this list. Used to process AWS API responses and prepare data for HTTP requests.",
      "description_length": 317,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EngineFamily",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings via `str_to_t` and `t_to_str`. Works with `t`, `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t` to enable serialization and deserialization. Used to parse XML input into `t` and generate AWS query or JSON representations for API interactions.",
      "description_length": 354,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupList",
      "description": "Handles creation, parsing, and serialization of a list of database parameter groups. Accepts XML nodes to construct a list of parameter group objects, converts them to AWS query parameters, and serializes/deserializes them to and from JSON format. Used to process and transmit parameter group data in API interactions.",
      "description_length": 318,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventList",
      "description": "Provides functions to create event lists, parse XML nodes into event lists, convert event lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of Event.t values and AWS-specific data types like Query.t and Json.t. Used to process XML event data from API responses and prepare it for HTTP requests or storage.",
      "description_length": 356,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OrderableDBInstanceOptionsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of database instance options. Operates on lists of `OrderableDBInstanceOption.t` values and XML or JSON representations. Used to process and transmit database configuration data in AWS API interactions.",
      "description_length": 272,
      "index": 185,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.KeyList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values, typically used for representing key lists in AWS requests. Used to process and format key-value pairs in API interactions, such as handling query parameters or JSON payloads.",
      "description_length": 382,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstancesOfferingList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of reserved DB instances offerings. Operates on lists of `ReservedDBInstancesOffering.t` values and XML or JSON representations. Used to process AWS API responses and generate query parameters for database reservation offerings.",
      "description_length": 301,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterBacktrackList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of database cluster backtrack records. Works with XML nodes, AWS query parameters, and JSON structures. Used to process API responses and generate query parameters for database management systems.",
      "description_length": 270,
      "index": 188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterList",
      "description": "Constructs and manipulates lists of DBCluster records through creation, XML parsing, query generation, and JSON serialization/deserialization. Operates on lists of DBCluster.t and XML node structures. Parses XML responses from AWS API calls and generates JSON representations for data exchange.",
      "description_length": 294,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroups",
      "description": "Handles creation, parsing, and serialization of security group data. Operates on XML nodes and JSON structures to convert between external representations and internal list-of-objects format. Used to process AWS API responses and generate query parameters for network security configurations.",
      "description_length": 292,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateGlobalClusterMessage",
      "description": "Constructs and manipulates a structured message for creating a global database cluster, supporting parameters like cluster identifier, source cluster, engine, and encryption settings. Operates on custom record types and JSON/XML data formats. Used to generate API requests and parse incoming data in cloud management systems.",
      "description_length": 325,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyOptionGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a data structure representing an option group message, including identifiers, descriptions, and tags. Works with string types for identifiers and descriptions, and a tag list for metadata. Used to generate AWS API requests and handle XML or JSON formatted input for option group configurations.",
      "description_length": 348,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceAutomatedBackupQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize error instances related to DB instance automated backup quota limits. Operates on a unit type to represent the absence of data. Used to handle and encode quota exceeded errors in AWS API interactions.",
      "description_length": 251,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBInstanceMessage",
      "description": "Deletes a specified DB instance by accepting the instance identifier, optional flag to skip final snapshot, optional final snapshot identifier, and a flag to delete automated backups. Works with string and boolean types to construct and serialize requests. Used to programmatically remove database instances while controlling snapshot behavior.",
      "description_length": 344,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PromoteReadReplicaMessage",
      "description": "Provides functions to construct, parse, and serialize a message for promoting a DB instance to a read replica, including setting backup retention and window parameters. Works with string and integer types for configuration and AWS-specific data structures for query and JSON formatting. Used to generate API requests for database replication tasks in cloud infrastructure workflows.",
      "description_length": 382,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.FailoverDBClusterResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a database cluster result structure. Works with DBCluster.t and AWS-specific data types like Query.t and Json.t. Used to process XML responses from AWS API calls and convert them into structured data for further handling.",
      "description_length": 289,
      "index": 196,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupOptionsMessage",
      "description": "Provides functions to construct, parse, and serialize options for an option group, including creating instances from XML nodes, converting to query parameters, and handling JSON encoding and decoding. Works with `OptionGroupOptionsList.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to generate and process request parameters for AWS RDS option group configurations.",
      "description_length": 387,
      "index": 197,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StartDBInstanceResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a database instance result, including converting between XML, JSON, and query parameters. Works with `DBInstance.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit the outcome of starting a database instance in AWS SDK interactions.",
      "description_length": 368,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBLogFilesMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB log files, including filtering by instance identifier, file name, last write time, size, and pagination parameters. Works with types such as strings, integers, longs, and custom filter lists. Used to generate HTTP queries and JSON payloads for API interactions with database logging systems.",
      "description_length": 373,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.BacktrackDBClusterMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster backtrack request, including setting the target timestamp and control flags. Works with string, date-time, and boolean data types, as well as JSON and query parameter structures. Used to generate API requests for database cluster recovery scenarios.",
      "description_length": 323,
      "index": 200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InsufficientStorageClusterCapacityFault",
      "description": "Provides functions to create, parse, and serialize error data related to insufficient cluster storage capacity. Works with unit type and AWS query/json structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 237,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StopActivityStreamResponse",
      "description": "Provides constructors and parsers for handling AWS Kinesis Firehose stop activity stream responses, including conversion to query parameters, JSON serialization, and deserialization. Works with string identifiers, status values, and structured data types related to Kinesis streams. Used to generate and process API responses in AWS integration workflows.",
      "description_length": 355,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AuthorizationNotFoundFault",
      "description": "Provides functions to create, parse, and serialize an authorization not found error, working with unit type and AWS query/json formats. Includes a constructor, a parser that returns an option, and methods to convert to and from JSON and query parameters. Used to handle AWS API responses where an authorization failure occurs.",
      "description_length": 326,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error instances related to database cluster quota limits. Works with the unit type to represent the absence of data. Used to handle and encode AWS API responses indicating resource limits have been exceeded.",
      "description_length": 259,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBSubnetGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a database subnet group configuration, including methods to convert between XML, JSON, and query parameters. Works with string-based identifiers, lists of subnet IDs, and tag lists. Used to prepare and process subnet group requests in AWS RDS API interactions.",
      "description_length": 315,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBSnapshotMessage",
      "description": "Provides operations to construct, parse, and serialize a database snapshot deletion request, including converting between XML nodes, query parameters, and JSON representations. Works with string identifiers for database snapshots and structured data types for AWS API interactions. Used to generate HTTP requests for deleting specific database snapshots in AWS RDS.",
      "description_length": 365,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyDBClusterParameterGroupResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster parameter group result, including conversion to query parameters and JSON format. Works with the DBClusterParameterGroup.t type and nested JSON structures. Used to handle responses from database cluster parameter group operations in AWS SDK interactions.",
      "description_length": 327,
      "index": 207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeValidDBInstanceModificationsResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing valid database instance modifications, including conversion to query parameters and JSON formats. Works with a record type containing a message about valid modifications and nested lists of modification details. Used to process and encode responses from database service APIs that validate instance configuration changes.",
      "description_length": 400,
      "index": 208,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateDBInstanceReadReplicaResult",
      "description": "Provides functions to construct, parse, and serialize a database instance read replica result, including converting between XML, JSON, and query parameters. Works with the DBInstance.t type and AWS-specific data structures for query and JSON formatting. Used to handle responses from database creation operations in cloud infrastructure workflows.",
      "description_length": 347,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBSubnetGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a database subnet group deletion request, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and structured data types for AWS API interactions. Used to generate HTTP requests and process responses for deleting subnet groups in cloud infrastructure management workflows.",
      "description_length": 380,
      "index": 210,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AddSourceIdentifierToSubscriptionResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing a subscription result with a source identifier. Works with `EventSubscription.t` and XML or JSON data formats. Used to generate AWS query parameters and JSON representations for subscription updates.",
      "description_length": 278,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeEventSubscriptionsMessage",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS event subscription queries, including setting subscription names, filters, record limits, and pagination markers. Works with string, integer, and list types, as well as AWS-specific data structures like FilterList and Query. Used to generate HTTP request parameters and process XML or JSON responses from AWS services.",
      "description_length": 398,
      "index": 212,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterRoleAlreadyExistsFault",
      "description": "Provides operations to create, parse, and serialize error representations for a database cluster role existence fault. Works with unit type and AWS query or JSON structures. Used to handle and transmit specific AWS API error responses related to duplicate cluster roles.",
      "description_length": 270,
      "index": 213,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeAccountAttributesMessage",
      "description": "Provides operations to create, parse, and serialize account attribute data, including converting between internal representations and query parameters or JSON. Works with unit type and generic input types for message handling. Used to generate HTTP query strings and process JSON responses in AWS API interactions.",
      "description_length": 314,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AddRoleToDBClusterMessage",
      "description": "Provides operations to construct, parse, and serialize a message representing the addition of a role to a database cluster, including converting between XML, query parameters, and JSON formats. Works with string identifiers for database clusters and IAM roles, and optional feature names. Used to generate API requests for database cluster configuration updates.",
      "description_length": 362,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error instances representing a missing database instance. Works with the unit type to encode error states. Used to generate AWS query parameters and JSON representations for handling missing instance scenarios.",
      "description_length": 262,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidS3BucketFault",
      "description": "Provides functions to create, parse, and serialize error data related to invalid S3 bucket configurations. Works with unit type and AWS query or JSON structures. Used to handle and convert S3 bucket validation errors in API responses.",
      "description_length": 234,
      "index": 217,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeGlobalClustersMessage",
      "description": "Provides operations to construct, parse, and serialize messages for describing global clusters, including setting identifiers, filters, record limits, and pagination markers. Works with string, integer, and filter list data types, as well as AWS query and JSON structures. Used to generate API requests for querying global cluster details in AWS services.",
      "description_length": 355,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.IamRoleNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for an IAM role not found scenario. Works with unit type and AWS query/json structures. Used to generate HTTP query parameters and JSON payloads for error responses in AWS API interactions.",
      "description_length": 262,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CustomAvailabilityZoneMessage",
      "description": "Provides operations to construct, parse, and serialize messages containing custom availability zone configurations. Works with string markers and lists of custom availability zones. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 262,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBSubnetGroupStateFault",
      "description": "Handles error state related to invalid DB subnet groups, providing creation, parsing, and serialization functions. Operates on unit type and AWS query/json structures. Used to construct and process error responses in AWS API interactions.",
      "description_length": 238,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBClusterSnapshotResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster snapshot result, including converting between XML, JSON, and a structured type. Works with the DBClusterSnapshot.t type and AWS query and JSON representations. Used to handle responses from deleting a database cluster snapshot in AWS SDK interactions.",
      "description_length": 324,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error data related to duplicate database snapshots. Works with the unit type to represent a specific fault condition. Used to handle and encode error responses in AWS API interactions.",
      "description_length": 235,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBInstanceResult",
      "description": "Provides operations to construct, parse, and serialize a database instance result, including converting between XML, JSON, and query formats. Works with the DBInstance.t type and a record type t containing database instance data. Used to process and transmit database instance responses in AWS API interactions.",
      "description_length": 311,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RemoveFromGlobalClusterResult",
      "description": "Provides a constructor for creating a result structure associated with removing a global cluster, a parser for XML nodes into this structure, and conversions to query parameters, JSON format, and from JSON. Works with the `GlobalCluster.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and serialize responses from AWS API calls related to global cluster management.",
      "description_length": 428,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBClusterSnapshotMessage",
      "description": "Provides operations to construct, parse, and serialize a request for deleting a DB cluster snapshot, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types for AWS API interactions. Used to generate API-compatible requests for snapshot deletion in database management workflows.",
      "description_length": 349,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBClusterFromS3Message",
      "description": "Provides operations to construct, parse, and serialize a database cluster restoration request from S3, including setting configuration parameters like engine, credentials, and S3 source details. Works with types such as availability zones, security group lists, JSON and query structures, and tag lists. Used to initialize a DB cluster restoration process with specific S3-based backup data and configuration.",
      "description_length": 409,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroupDoesNotCoverEnoughAZs",
      "description": "Provides operations to create, parse, and serialize error representations related to database subnet groups lacking sufficient availability zones. Works with unit type and AWS query structures. Used to handle and convert errors in network configuration validation workflows.",
      "description_length": 274,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBClusterMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster deletion request, including handling of the cluster identifier, final snapshot settings, and optional parameters. Works with string and boolean types for cluster identifiers and snapshot options. Used to generate HTTP query parameters and JSON payloads for API calls to delete a database cluster.",
      "description_length": 370,
      "index": 229,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DomainNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a missing domain, working with unit type and AWS query/json structures. Includes parsing from arbitrary types, conversion to AWS query parameters, and JSON serialization. Used to handle domain not found errors in AWS API interactions.",
      "description_length": 306,
      "index": 230,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidExportTaskStateFault",
      "description": "Provides operations to create, parse, and serialize error states related to invalid export task configurations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 240,
      "index": 231,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeEngineDefaultParametersResult",
      "description": "Provides functions to construct, parse, and serialize engine default parameters, including conversion to and from JSON and query formats. Works with the EngineDefaults.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process and transmit database engine configuration defaults in API responses.",
      "description_length": 326,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBSecurityGroupStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid database security group configurations. Works with the unit type to represent a specific fault condition. Used to generate AWS query parameters and JSON representations for error handling in cloud infrastructure interactions.",
      "description_length": 308,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PointInTimeRestoreNotEnabledFault",
      "description": "Provides operations to create, parse, and serialize a fault indicating point-in-time restore is not enabled. Works with unit type and AWS query or JSON structures. Used to handle errors in database restoration workflows where the feature is unavailable.",
      "description_length": 253,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeEngineDefaultClusterParametersMessage",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving default cluster parameters, including filtering, pagination, and JSON conversion. Works with string, integer, and list types, as well as AWS-specific data structures like FilterList and Query. Used to fetch database parameter group configurations from AWS services.",
      "description_length": 344,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ImportInstallationMediaMessage",
      "description": "Constructs a structured object with custom availability zone, engine, version, and installation paths for database media. Parses XML nodes into this object and serializes it to query parameters, JSON, or deserializes from JSON. Used to handle import installation media requests in AWS API interactions.",
      "description_length": 302,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for a specific AWS database cluster snapshot not found condition. Works with unit type and AWS query or JSON structures. Used to handle and convert error states in AWS API interactions.",
      "description_length": 258,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error representations for database subnet quota exceeded scenarios. Works with unit type and AWS query or JSON structures. Used to handle and convert error states in AWS-related network configuration workflows.",
      "description_length": 262,
      "index": 238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StorageTypeNotSupportedFault",
      "description": "Provides operations to create, parse, and serialize a fault type representing unsupported storage configurations. Works with unit type and arbitrary input to generate query parameters and JSON representations. Used to handle error responses in AWS service interactions where storage type validation fails.",
      "description_length": 305,
      "index": 239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.RemoveRoleFromDBInstanceMessage",
      "description": "Provides functions to construct, parse, and serialize a message representing the removal of a role from a database instance, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers, ARNs, and feature names encapsulated in a structured record type. Used to generate and process requests for updating database instance configurations in AWS services.",
      "description_length": 398,
      "index": 240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstanceMessage",
      "description": "Provides operations to construct, parse, and serialize data related to reserved DB instances, including setting a marker and a list of reserved instances. Works with types such as strings, lists of reserved DB instances, and JSON or query structures. Used to generate HTTP requests and process XML or JSON responses from database service APIs.",
      "description_length": 343,
      "index": 241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupDetails",
      "description": "Provides operations to construct, parse, and serialize data structures representing database parameter groups, including handling parameter lists and pagination markers. Works with custom types for parameter lists, strings for markers, and AWS-specific query and JSON formats. Used to generate HTTP query parameters for API requests and to convert between XML and JSON representations in AWS interactions.",
      "description_length": 405,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CustomAvailabilityZoneQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a unit type representing a custom availability zone quota exceeded error. Works with AWS query parameters and JSON structures. Used to handle and encode error responses in API interactions.",
      "description_length": 241,
      "index": 243,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_rds.Types.DeleteGlobalClusterResult",
      "description": "Provides operations to construct, parse, and serialize a global cluster deletion result, including converting between XML, JSON, and query formats. Works with the `GlobalCluster.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from AWS DynamoDB global cluster deletion APIs, enabling structured data processing and transmission.",
      "description_length": 399,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyCertificatesMessage",
      "description": "Provides operations to construct, parse, and serialize objects representing certificate modification messages, including setting a certificate identifier and toggling customer override removal. Works with string identifiers and boolean flags, and supports XML, query, and JSON serialization formats. Used to generate and process messages for updating certificate configurations in AWS services.",
      "description_length": 394,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ApplyPendingMaintenanceActionResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the outcome of applying pending maintenance actions. Works with a record type containing resource-specific pending maintenance actions. Used to generate AWS API responses and handle XML/JSON data during maintenance action processing.",
      "description_length": 313,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StopDBClusterMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster stop request, including converting between XML, query parameters, and JSON formats. Works with AWS string identifiers and structured data types for cloud infrastructure management. Used to generate API requests for stopping database clusters in cloud environments.",
      "description_length": 338,
      "index": 247,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InsufficientAvailableIPsInSubnetFault",
      "description": "Provides functions to create, parse, and serialize fault data related to insufficient IP addresses in a subnet, working with unit type and AWS query/json formats. Includes a constructor for the fault state and methods to convert between internal representations and AWS-compatible structures. Used to handle and communicate subnet IP allocation errors in cloud infrastructure workflows.",
      "description_length": 386,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SNSNoAuthorizationFault",
      "description": "Provides functions to create, parse, and serialize error instances representing an SNS no authorization fault. Works with the unit type and AWS query/json structures. Used to handle SNS API errors where authorization is missing or invalid.",
      "description_length": 239,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database cluster snapshot object, including converting between XML, JSON, and query parameters. Works with the DBClusterSnapshot.t type and AWS-specific data structures. Used to handle responses from database snapshot creation operations in AWS SDK interactions.",
      "description_length": 319,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateOptionGroupMessage",
      "description": "Creates and manipulates a structured representation of an option group message, including name, engine, version, and description, with optional tags. Works with string types, tag lists, and JSON/XML data formats. Used to generate API requests or parse responses in AWS-related workflows.",
      "description_length": 287,
      "index": 251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidVPCNetworkStateFault",
      "description": "Handles error state related to invalid VPC network configurations. Accepts unit values and converts them to query parameters, JSON representations, and back. Used in AWS API error handling for network-related exceptions.",
      "description_length": 220,
      "index": 252,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBProxyResponse",
      "description": "Provides operations to construct, parse, and serialize a database proxy deletion response. Works with `DBProxy.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate HTTP queries and JSON payloads for API interactions involving database proxy deletions.",
      "description_length": 305,
      "index": 253,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterSnapshotAttributesResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing Amazon RDS cluster snapshot attributes, including converting between XML, JSON, and query parameters. Works with structured data containing cluster snapshot attributes and metadata. Used to process API responses and prepare data for HTTP requests in AWS RDS interactions.",
      "description_length": 355,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.PendingMaintenanceActionsMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing pending maintenance actions, including creating instances with optional markers and converting between XML, query, and JSON formats. Works with custom types such as `PendingMaintenanceActions.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and transmit maintenance action messages in AWS API interactions.",
      "description_length": 430,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBSnapshotMessage",
      "description": "Provides functions to construct, parse, and serialize a database snapshot modification message, including setting the snapshot identifier, engine version, and option group name. Works with string-based identifiers and AWS-specific data structures like Query and Json. Used to prepare and process requests for modifying database snapshots in AWS RDS.",
      "description_length": 349,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CustomAvailabilityZoneNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing a custom availability zone not found error. Works with the unit type and AWS query and JSON structures. Used to handle and encode error responses in AWS API interactions.",
      "description_length": 247,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBProxyTargetGroupsResponse",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS DB proxy target groups, including methods to convert between XML, JSON, and query parameters. Works with custom types such as TargetGroupList.t and AWS-specific string and query representations. Used to process and format responses from AWS API calls related to database proxy configurations.",
      "description_length": 379,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBClusterFromS3Result",
      "description": "Provides operations to construct, parse, and serialize a database cluster restoration result, including converting between XML, JSON, and query parameters. Works with the DBCluster.t type and AWS-specific data structures for query and JSON formatting. Used to handle responses from restoring a DB cluster from an S3 bucket in AWS RDS.",
      "description_length": 334,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RegisterDBProxyTargetsResponse",
      "description": "Provides functions to construct, parse, and serialize a structure representing database proxy targets, including converting between XML nodes, query parameters, and JSON representations. Works with `TargetList.t` and AWS-specific types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and encode responses from database proxy target operations in AWS SDK interactions.",
      "description_length": 389,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AuthorizeDBSecurityGroupIngressMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing database security group ingress rules, including methods to convert between XML, query parameters, and JSON formats. Works with string-based identifiers for security groups and their associated CIDR ranges. Used to generate and process API requests for authorizing network access to database instances.",
      "description_length": 385,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterEndpointQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error data related to exceeding database cluster endpoint quotas. Works with a unit type to represent the absence of data. Used to handle and encode specific AWS API error responses in query and JSON formats.",
      "description_length": 260,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBInstanceAutomatedBackupResult",
      "description": "Provides functions to construct, parse, and serialize a database instance automated backup result, including conversion to query parameters and JSON format. Works with the DBInstanceAutomatedBackup.t type and AWS-specific data structures. Used to handle responses from deleting automated backups in cloud database management systems.",
      "description_length": 333,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBEngineVersionMessage",
      "description": "Provides functions to construct, parse, and serialize data related to database engine versions, including creating instances with optional marker and list of versions, parsing XML nodes, and converting to query parameters or JSON format. Works with types such as strings, lists of database engine versions, and JSON structures. Used to handle API responses and requests involving database engine version data.",
      "description_length": 409,
      "index": 264,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBInstanceAutomatedBackupStateFault",
      "description": "Provides operations to create, parse, and serialize error instances related to invalid database instance automated backup states. Works with unit type and AWS query or JSON structures. Used to handle and convert specific AWS API error responses into structured data.",
      "description_length": 266,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DownloadDBLogFilePortionDetails",
      "description": "Provides functions to construct, parse, and serialize data for downloading log file portions, including handling log file content, pagination markers, and data availability flags. Works with string-based log data, pagination tokens, and boolean indicators for additional data. Used to prepare and process requests for retrieving specific segments of log files from a database.",
      "description_length": 376,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBUpgradeDependencyFailureFault",
      "description": "Provides functions to create, parse, and serialize error states related to database upgrade dependencies. Operates on unit type and AWS query structures. Used to handle and convert dependency failure errors in AWS-related workflows.",
      "description_length": 232,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBClusterToPointInTimeMessage",
      "description": "Provides functions to construct, parse, and serialize a request to restore a DB cluster to a specific point in time. Works with string, boolean, integer, and datetime types, as well as lists and associations for configuration parameters. Used to generate API requests for database recovery operations with detailed restoration settings.",
      "description_length": 336,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBLogFileNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a missing database log file. Works with unit type and AWS query/json structures. Used to handle error responses in AWS API interactions where log files are expected but not found.",
      "description_length": 251,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventCategoriesMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing event categories mappings, including converting between XML nodes, query parameters, and JSON formats. Works with nested associative lists and JSON structures to represent event category configurations. Used to process and transmit event category data in AWS API interactions.",
      "description_length": 360,
      "index": 270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBSnapshotsMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing DB snapshots, including filtering and pagination. Works with string, integer, boolean, and custom filter list types. Used to generate AWS API queries and handle JSON representations for snapshot retrieval.",
      "description_length": 285,
      "index": 271,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidExportSourceStateFault",
      "description": "Provides operations to create, parse, and serialize error states related to invalid export source configurations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 242,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterCapacityInfo",
      "description": "Provides operations to construct, parse, and serialize data related to database cluster capacity, including setting identifiers, capacity values, timeout settings, and actions. Works with custom types representing cluster configuration details and XML or JSON data structures. Used to generate API requests and process responses in database management systems.",
      "description_length": 360,
      "index": 273,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CopyDBClusterSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database cluster snapshot result, including converting between XML, JSON, and query parameters. Works with the DBClusterSnapshot.t type and AWS-specific data structures. Used to handle responses from database snapshot copying operations in AWS SDK interactions.",
      "description_length": 318,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyDBClusterSnapshotMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster snapshot copy request, including setting identifiers, KMS key, pre-signed URL, tags, and copy flags. Works with string identifiers, boolean flags, and a list of tags. Used to generate API requests for copying database cluster snapshots in cloud infrastructure workflows.",
      "description_length": 344,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClustersMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB clusters, including filtering, pagination, and shared cluster inclusion. Works with string identifiers, integer limits, and custom filter lists. Used to generate HTTP queries and JSON payloads for API interactions with database cluster management systems.",
      "description_length": 337,
      "index": 276,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceRoleQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error instances related to database instance role quota limits. Works with the unit type to represent the absence of data. Used to handle and encode specific AWS API error responses in query and JSON formats.",
      "description_length": 260,
      "index": 277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroupQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error representations related to DB subnet group quota limits. Works with unit type and AWS query or JSON structures. Used to handle and convert quota exceeded errors in AWS API interactions.",
      "description_length": 243,
      "index": 278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterMessage",
      "description": "Constructs and serializes a database cluster configuration with parameters such as identifier, engine, availability zones, security groups, and encryption settings. Processes XML input into a structured representation and converts between JSON, query string, and internal formats. Used to generate AWS API requests for creating a DB cluster with custom settings.",
      "description_length": 362,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceAutomatedBackupNotFoundFault",
      "description": "Handles error scenarios where an automated DB instance backup is not found. Provides parsing, serialization, and conversion functions for error representations. Works with unit type to signal absence of backup data.",
      "description_length": 215,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBClusterParameterGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a database cluster parameter group modification request. Works with string identifiers and parameter lists, and supports XML and JSON serialization formats. Used to prepare and transmit parameter group updates in AWS RDS operations.",
      "description_length": 286,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyOptionGroupResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structure representing the result of modifying an option group. Works with `OptionGroup.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses and requests in AWS-related workflows, such as updating configuration settings in a database cluster.",
      "description_length": 373,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBSubnetGroupFault",
      "description": "Provides functions to create, parse, and serialize error representations related to invalid DB subnet groups. Operates on unit type and AWS query or JSON structures. Used to handle and convert error states in AWS API interactions.",
      "description_length": 230,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBInstanceMessage",
      "description": "Provides operations to construct, parse, and serialize a database instance modification request, including setting storage, instance class, security groups, and configuration parameters. Works with structured data types such as strings, integers, lists, and custom records representing database settings. Used to generate API requests for modifying AWS RDS instances with precise control over parameters like backup retention, maintenance windows, and security configurations.",
      "description_length": 476,
      "index": 284,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeReservedDBInstancesOfferingsMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing reserved DB instances offerings, including setting identifiers, instance classes, durations, and filters. Works with types such as strings, integers, booleans, and custom record types for database instance configurations. Used to generate HTTP query parameters and JSON payloads for API interactions with database reservation services.",
      "description_length": 418,
      "index": 285,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit type and generic input values. Used to handle missing option group scenarios in AWS API interactions.",
      "description_length": 217,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ResetDBClusterParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster parameter group reset request, including setting the parameter group name, resetting all parameters, and specifying individual parameters. Works with string, boolean, and custom parameter list types. Used to generate API requests for resetting database cluster configurations in cloud infrastructure systems.",
      "description_length": 382,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBClusterEndpointStateFault",
      "description": "Handles error state validation for database cluster endpoints, providing creation, parsing, and serialization functions. Operates on unit type and AWS query/json structures. Used to manage and convert invalid endpoint state errors in AWS API interactions.",
      "description_length": 255,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RegisterDBProxyTargetsRequest",
      "description": "Provides functions to construct, parse, and serialize request objects for registering targets with a database proxy. Works with string-based identifiers and lists of database instances or clusters. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 276,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error representations related to database parameter group quotas being exceeded. Works with unit type and AWS query or JSON structures. Used to handle and convert quota exceeded errors in AWS API interactions.",
      "description_length": 261,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBInstanceResult",
      "description": "Provides operations to construct, parse, and serialize a database instance modification result. Works with the DBInstance.t type and AWS query and JSON structures. Used to generate HTTP queries and JSON representations from modification outcomes.",
      "description_length": 246,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeEngineDefaultClusterParametersResult",
      "description": "Provides functions to construct, parse, serialize, and deserialize a structured representation of database engine default cluster parameters. Works with `EngineDefaults.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and exchange cluster parameter configurations in AWS API interactions.",
      "description_length": 340,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBSnapshotMessage",
      "description": "Creates a database snapshot by specifying the snapshot identifier and the instance identifier, with optional tags. Works with string identifiers and a list of tags. Used to generate API requests for creating snapshots in AWS RDS.",
      "description_length": 229,
      "index": 293,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DeregisterDBProxyTargetsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deregistering database proxy targets, including methods to convert between XML, query parameters, and JSON formats. Works with string identifiers for database proxies, instance groups, and clusters. Used to prepare API calls for removing specific database instances or clusters from a proxy's target group.",
      "description_length": 373,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyDBParameterGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a database parameter group copy request, including handling tags and JSON serialization. Works with string identifiers, tag lists, and AWS query and JSON formats. Used to generate API requests for copying parameter groups in AWS RDS.",
      "description_length": 287,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InsufficientDBInstanceCapacityFault",
      "description": "Provides functions to create, parse, and serialize error instances related to insufficient database instance capacity. Works with unit type and AWS query/json structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 244,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyGlobalClusterResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of modifying a global cluster, including converting between XML, JSON, and query formats. Works with the `GlobalCluster.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses and prepare data for transmission in AWS-compatible formats.",
      "description_length": 395,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeCertificatesMessage",
      "description": "Provides operations to construct, parse, and serialize request parameters for describing certificates, including setting identifiers, filters, record limits, and pagination markers. Works with string, integer, and list types, as well as AWS-specific types for queries and JSON. Used to generate structured API requests for certificate management systems.",
      "description_length": 354,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBSecurityGroupResult",
      "description": "Provides operations to construct, parse, and serialize a database security group result, including converting between XML, JSON, and query formats. Works with the DBSecurityGroup.t type and a result record type. Used to handle AWS RDS security group creation responses in API interactions.",
      "description_length": 289,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBSnapshotAttributesMessage",
      "description": "Provides operations to construct, parse, and serialize a database snapshot attributes message, including converting between XML nodes, query parameters, and JSON representations. Works with string identifiers and structured data types for database snapshots. Used to prepare and process requests for retrieving or modifying snapshot attribute details in AWS RDS.",
      "description_length": 362,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.GlobalClustersMessage",
      "description": "Provides operations to construct, parse, and serialize messages containing global cluster data, including methods to convert between XML, JSON, and query parameters. Works with types such as strings, lists of global clusters, and JSON structures. Used to generate HTTP requests and process responses in AWS SDK interactions involving global database clusters.",
      "description_length": 359,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBClusterToPointInTimeResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing the result of restoring a DB cluster to a specific point in time. Works with custom types for DB clusters and JSON/Query representations. Used to handle API responses and prepare data for HTTP requests in database management workflows.",
      "description_length": 319,
      "index": 302,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DeregisterDBProxyTargetsResponse",
      "description": "Provides functions to create, parse, and serialize responses for deregistering DB proxy targets, working with unit types and AWS query structures. Includes parsing from various input types, converting to AWS query parameters, and deserializing from JSON. Used in handling AWS RDS API responses where no additional data is returned.",
      "description_length": 331,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBSubnetStateFault",
      "description": "Handles error state when a DB subnet is invalid, providing creation, parsing, and serialization functions. Works with unit type and AWS query/json structures. Used to generate and process error responses in AWS API interactions.",
      "description_length": 228,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RebootDBInstanceResult",
      "description": "Provides functions to construct, parse, and serialize a database instance reboot result, working with `DBInstance.t` and JSON/XML data formats. Includes parsing from XML nodes, conversion to AWS query parameters, and serialization to and from JSON structures. Used to handle responses from AWS RDS API when rebooting a database instance.",
      "description_length": 337,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RemoveFromGlobalClusterMessage",
      "description": "Provides functions to construct, parse, and serialize messages for removing a DB cluster from a global cluster, using string identifiers. Operates on AWS-specific types including `Aws.BaseTypes.String.t` and JSON structures. Used to generate API requests and handle XML/JSON payloads in AWS SDK interactions.",
      "description_length": 308,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for a database parameter group not found scenario. Works with unit type and AWS query or JSON structures. Used to handle and transmit specific error states in AWS API interactions.",
      "description_length": 253,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBSecurityGroupMessage",
      "description": "Creates a structured request to delete a DB security group, accepting a group name and generating query or JSON representations. Operates on string-based identifiers and AWS-specific data formats. Used to construct API calls for database security group management in cloud infrastructure workflows.",
      "description_length": 298,
      "index": 308,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error instances representing an existing database instance. Works with the unit type to encode a specific fault condition. Used in AWS API interactions to handle and transmit errors when a database instance is already present.",
      "description_length": 277,
      "index": 309,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBInstanceAutomatedBackupMessage",
      "description": "Provides operations to construct, parse, and serialize a database instance automated backup message, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing a database instance resource ID. Used to handle AWS API requests and responses related to deleting automated backups of database instances.",
      "description_length": 364,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBProxiesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB proxies, including setting proxy names, filters, pagination markers, and record limits. Works with string, integer, and filter list data types, as well as AWS query and JSON structures. Used to generate HTTP requests for querying database proxy configurations in AWS RDS.",
      "description_length": 353,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBClusterSnapshotAttributeMessage",
      "description": "Provides operations to construct, parse, and serialize a message for modifying attributes of a database cluster snapshot, including adding and removing attribute values. Works with string identifiers, attribute names, and lists of attribute values. Used to update snapshot visibility settings or metadata in cloud database management systems.",
      "description_length": 342,
      "index": 312,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.SubscriptionNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a missing subscription, working with unit types and AWS query/json formats. Includes parsing from arbitrary types to optional units and conversion to AWS query structures. Supports deserialization from JSON to trigger fault handling.",
      "description_length": 305,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InstallationMediaNotFoundFault",
      "description": "Provides functions to create, parse, and serialize an error state representing missing installation media. Works with unit type and AWS query or JSON structures. Used to handle and encode errors in cloud deployment workflows.",
      "description_length": 225,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeValidDBInstanceModificationsMessage",
      "description": "Provides operations to construct, parse, and serialize a message representing valid modifications for a database instance, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types for database instance configurations. Used to validate and prepare modification requests for cloud database services.",
      "description_length": 366,
      "index": 315,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterBacktrackNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for database cluster backtrack not found faults. Operates on unit type and AWS query or JSON structures. Used to handle and convert specific error states in AWS API interactions.",
      "description_length": 251,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterParameterGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing Amazon RDS DB cluster parameter groups, including methods to convert between XML nodes, query parameters, and JSON representations. Works with types such as strings, lists of parameter groups, and JSON objects. Used to handle API responses and requests in AWS RDS interactions.",
      "description_length": 361,
      "index": 317,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceRoleAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a duplicate database instance role. Works with the unit type to encapsulate no value. Used to handle and transmit specific AWS API error responses during database role management operations.",
      "description_length": 270,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBLogFilesResponse",
      "description": "Provides operations to construct, parse, and serialize responses containing a list of DB log files, including converting between XML, query parameters, and JSON formats. Works with types such as DescribeDBLogFilesList.t and Aws.BaseTypes.String.t to manage pagination and response data. Used to process AWS API responses for database log file listings in a structured and interoperable way.",
      "description_length": 390,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SNSTopicArnNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations related to missing SNS topic ARNs. Operates on a unit type and converts between internal representations and query or JSON formats. Used to handle and transmit specific AWS SNS error cases in API interactions.",
      "description_length": 282,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON, with a dedicated deserialization function for JSON input. Works with the unit type and AWS query and JSON representations. Used to handle quota exceeded faults in AWS API interactions.",
      "description_length": 279,
      "index": 321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeReservedDBInstancesMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing reserved DB instances, including setting parameters like instance ID, class, duration, and filters. Works with string, boolean, integer, and custom types such as FilterList and Aws.Json.t. Used to generate API queries and handle JSON representations for interacting with database reservation services.",
      "description_length": 381,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterParameterGroupDetails",
      "description": "Provides operations to construct, parse, and serialize cluster parameter group details, including handling a list of parameters and a pagination marker. Works with custom types such as ParametersList.t and AWS-specific data structures like Query.t and Json.t. Used to generate HTTP requests and process XML or JSON responses from AWS RDS API.",
      "description_length": 342,
      "index": 323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyOptionGroupResult",
      "description": "Provides operations to construct, parse, and serialize option group results. Works with `OptionGroup.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to convert XML responses from AWS API calls into structured data and back for API requests.",
      "description_length": 287,
      "index": 324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RemoveSourceIdentifierFromSubscriptionResult",
      "description": "Removes a source identifier from an event subscription structure. Operates on XML nodes and AWS query parameters, constructing and parsing results for API interactions. Converts between JSON representations and internal state for seamless integration with AWS service responses.",
      "description_length": 278,
      "index": 325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBInstanceFromDBSnapshotMessage",
      "description": "Constructs and manipulates a request to restore a DB instance from a snapshot, incorporating parameters like instance identifier, snapshot identifier, instance class, port, availability zone, and tags. Operates on types such as strings, integers, booleans, lists, and custom records for AWS-specific data. Used to generate API requests for database restoration in cloud infrastructure workflows.",
      "description_length": 395,
      "index": 326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterRoleQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a database cluster role quota exceeded condition. Works with unit type and AWS query or JSON structures. Used to handle and convert quota-related errors in AWS SDK interactions.",
      "description_length": 257,
      "index": 327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateDBSecurityGroupMessage",
      "description": "Creates and manipulates a database security group configuration with a specified name and description, supporting optional tags. Operates on structured data types including strings, tag lists, and JSON representations. Used to generate API requests and parse responses in AWS database management workflows.",
      "description_length": 306,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PurchaseReservedDBInstancesOfferingResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing a reserved DB instances offering, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with the `ReservedDBInstance.t` type and AWS-specific data structures like `Ezxmlm.nodes` and `Aws.Json.t`. Used to process and encode responses from AWS RDS API related to reserved database instance offerings.",
      "description_length": 423,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBInstanceToPointInTimeResult",
      "description": "Provides functions to construct, parse, and serialize a database instance restoration result, including converting between XML, JSON, and query parameters. Works with `DBInstance.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle responses from restoring a database to a specific point in time.",
      "description_length": 331,
      "index": 330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ApplyPendingMaintenanceActionMessage",
      "description": "Provides operations to construct, parse, and serialize a message for applying pending maintenance actions, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers, action names, and opt-in types. Used to generate and process requests for applying maintenance updates to AWS resources.",
      "description_length": 348,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterParameterGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a database cluster parameter group configuration, including setting a name, parameter group family, description, and optional tags. Works with string types for names and descriptions, and a tag list for metadata. Used to generate API requests for creating parameter groups in database systems.",
      "description_length": 347,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteOptionGroupMessage",
      "description": "Creates and manipulates messages for deleting an option group, working with strings and XML/JSON data. Parses XML nodes into message structures and serializes them to query parameters, JSON objects, and back from JSON. Used to construct and process delete requests in AWS API interactions.",
      "description_length": 289,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBEngineVersionsMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing DB engine versions, including filtering, pagination, and character set/timezone information. Works with string, integer, boolean, and list types, as well as AWS-specific types like FilterList and Query. Used to fetch detailed engine version data from a database service, including supported parameters and configurations.",
      "description_length": 401,
      "index": 334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBInstanceFromS3Result",
      "description": "Provides operations to construct, parse, and serialize a database instance restoration result, including converting between XML, JSON, and query parameters. Works with `DBInstance.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit results from restoring a DB instance from an S3 backup.",
      "description_length": 354,
      "index": 335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SubscriptionAlreadyExistFault",
      "description": "Provides operations to create, parse, and serialize a fault type representing an existing subscription, working with unit type and AWS query/json structures. Includes a constructor for the fault, a parser to extract it from data, and functions to convert it to AWS query parameters or JSON. Used in error handling for subscription management systems to signal duplicate subscription attempts.",
      "description_length": 392,
      "index": 336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CertificateMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing TLS certificate messages, including methods to convert between XML nodes, query parameters, and JSON representations. Works with certificate lists and string markers to encode and decode message formats. Used to process and generate certificate exchange data in network protocols.",
      "description_length": 363,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBInstanceReadReplicaMessage",
      "description": "Provides functions to construct, parse, and serialize a request for creating a read replica database instance, including setting identifiers, configuration parameters, and optional attributes like availability zone, storage, and tags. Works with string, integer, boolean, and list types, as well as custom types like TagList, VpcSecurityGroupIdList, and ReplicaMode. Used to generate API requests for database replication in cloud infrastructure setups.",
      "description_length": 453,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AuthorizeDBSecurityGroupIngressResult",
      "description": "Provides functions to construct, parse, and serialize a database security group ingress result, working with `DBSecurityGroup.t` and AWS query/json formats. Includes a constructor for creating instances and methods to convert between XML, query parameters, and JSON representations. Used to handle responses from AWS API calls related to authorizing database security group ingress rules.",
      "description_length": 388,
      "index": 339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SourceNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a fault representing a missing source, working with unit type and AWS query/json formats. Includes a constructor, a parser that returns an option, and methods to convert to and from JSON and AWS queries. Used to handle errors in AWS service interactions where a required source is absent.",
      "description_length": 339,
      "index": 340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateCustomAvailabilityZoneMessage",
      "description": "Provides functions to construct, parse, and serialize a custom availability zone message, including creating with optional VPN parameters and converting to query or JSON formats. Works with string-based identifiers and structured data types for network configurations. Used to generate and process messages for custom availability zone setups in cloud infrastructure.",
      "description_length": 367,
      "index": 341,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ExportTaskAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing an existing export task, working with unit type and AWS query/json structures. Includes a constructor, JSON parsing, and conversion to AWS query format. Used to handle errors when an export task with the same identifier is detected.",
      "description_length": 309,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroups",
      "description": "Provides functions to construct, parse, and serialize option groups data, including parsing XML nodes into a structured format and converting between JSON and query parameters. Works with AWS-specific types such as `OptionGroupsList.t`, `Aws.BaseTypes.String.t`, and `Aws.Query.t`. Used to handle AWS option group configurations in API requests and responses.",
      "description_length": 359,
      "index": 343,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBParameterGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for querying DB parameter groups, including setting group names, filters, record limits, and pagination markers. Works with custom types such as strings, integers, and lists of filters, as well as AWS-specific query and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with database parameter group information.",
      "description_length": 421,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InsufficientDBClusterCapacityFault",
      "description": "Provides operations to create, parse, and serialize error instances related to insufficient database cluster capacity. Works with unit type and AWS query/json structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 244,
      "index": 345,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.PromoteReadReplicaDBClusterMessage",
      "description": "Provides functions to construct, parse, and serialize a message for promoting a DB cluster replica, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types representing database cluster configurations. Used to generate API requests for database management systems.",
      "description_length": 334,
      "index": 346,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a duplicate DB subnet group condition. Operates on a unit type to represent the absence of data. Used to handle AWS API responses where a subnet group already exists.",
      "description_length": 243,
      "index": 347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBInstanceResult",
      "description": "Provides operations to construct, parse, and serialize a database instance deletion result, including converting between XML, JSON, and query formats. Works with the DBInstance.t type and AWS-specific data structures. Used to handle responses from database management systems when deleting an instance.",
      "description_length": 302,
      "index": 348,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterSnapshotsMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing DB cluster snapshots, including filtering by identifier, snapshot type, and inclusion of shared/public snapshots. Works with string, integer, boolean, and list types, as well as AWS-specific data structures like FilterList. Used to generate HTTP queries and JSON payloads for API interactions with database snapshot management systems.",
      "description_length": 415,
      "index": 349,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBProxyRequest",
      "description": "Provides functions to construct, parse, and serialize request objects for modifying a database proxy, including setting proxy name, authentication configuration, TLS requirements, and timeout values. Works with types such as strings, integers, boolean flags, and lists for configuration parameters. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 377,
      "index": 350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyEventSubscriptionMessage",
      "description": "Provides operations to construct, parse, and serialize messages for modifying event subscriptions, including setting subscription names, SNS topic ARNs, source types, event categories, and enabled status. Works with custom types such as `EventCategoriesList` and AWS-specific data structures like `Query` and `Json`. Used to generate and process subscription update requests in AWS-based event handling workflows.",
      "description_length": 413,
      "index": 351,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SourceRegionMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing source region messages, including creating instances with optional markers and region lists, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with string markers, lists of source regions, and JSON/Query data formats. Used to process and transmit configuration data in AWS-related workflows, such as setting up region-specific resource allocations.",
      "description_length": 494,
      "index": 352,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.PurchaseReservedDBInstancesOfferingMessage",
      "description": "Provides functions to construct, parse, and serialize objects representing reserved DB instances offerings, including setting offering IDs, instance IDs, count, and tags. Works with string, integer, and tag list data types. Used to generate HTTP queries and JSON payloads for AWS RDS API interactions.",
      "description_length": 301,
      "index": 353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ExportTaskNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a missing export task, working with unit types and AWS query structures. Converts between internal representations and JSON formats for API interactions. Used to handle errors in export task workflows by generating standardized fault responses.",
      "description_length": 317,
      "index": 354,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBParameterGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a database parameter group message, including converting between XML, JSON, and query formats. Works with string-based identifiers, descriptions, and tag lists. Used to generate API requests for creating parameter groups in database systems.",
      "description_length": 295,
      "index": 355,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBParametersMessage",
      "description": "Provides operations to construct, parse, and serialize requests for querying database parameter groups, including setting parameter group names, filters, pagination limits, and markers. Works with string, integer, and list types, as well as AWS-specific data structures like FilterList and Query. Used to generate HTTP query parameters and JSON payloads for API interactions with database configuration services.",
      "description_length": 412,
      "index": 356,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StartDBClusterMessage",
      "description": "Creates a message for initiating a database cluster, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with string identifiers and structured data types for cloud infrastructure interactions. Used to generate and process cluster start requests in AWS-related workflows.",
      "description_length": 313,
      "index": 357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupNameMessage",
      "description": "Provides operations to construct, parse, and serialize a structure representing a DB parameter group name, including conversion to query parameters, JSON, and parsing from XML nodes. Works with string-based identifiers and JSON/XML data formats. Used to handle AWS RDS parameter group names in API requests and responses.",
      "description_length": 321,
      "index": 358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotMessage",
      "description": "Provides constructors and parsers for handling database cluster snapshot data, including building instances from XML nodes and converting to query parameters or JSON. Works with AWS-specific types such as strings, lists of cluster snapshots, and JSON structures. Used to construct and serialize responses in AWS API interactions involving database snapshots.",
      "description_length": 358,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ListTagsForResourceMessage",
      "description": "Provides operations to construct, parse, and serialize a request for listing tags associated with a specific resource, including support for filtering. Works with string-based resource names and filter lists, and converts data to and from query and JSON formats. Used to generate structured API requests for tag retrieval in AWS service interactions.",
      "description_length": 350,
      "index": 360,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeEngineDefaultParametersMessage",
      "description": "Provides operations to construct, parse, and serialize request parameters for querying default database parameter groups, including filtering, pagination, and JSON/XML conversion. Works with string, integer, and list types for filters and query parameters. Used to generate structured API requests for database configuration retrieval.",
      "description_length": 335,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InstanceQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error instances representing exceeded quotas. Works with unit type and AWS query/json formats. Used to handle and encode quota limit violations in API responses.",
      "description_length": 213,
      "index": 362,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateDBSubnetGroupResult",
      "description": "Provides operations to construct, parse, and serialize a database subnet group result, including converting between XML, JSON, and query formats. Works with the DBSubnetGroup.t type and AWS-specific data structures. Used to handle responses from AWS RDS when creating a subnet group, enabling integration with request and response handling pipelines.",
      "description_length": 350,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBClusterResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster modification result, working with `DBCluster.t` and AWS query/json formats. Includes parsing from XML nodes, conversion to AWS query parameters, and encoding/decoding with JSON. Used to handle responses from database cluster update operations in AWS SDK interactions.",
      "description_length": 340,
      "index": 364,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterEndpointsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB cluster endpoints, including setting identifiers, filters, and pagination parameters. Works with string, integer, and list types, as well as AWS-specific types for queries and JSON. Used to generate API-compatible requests for querying database cluster endpoint configurations.",
      "description_length": 359,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.IamRoleMissingPermissionsFault",
      "description": "Provides functions to create, parse, and serialize a fault representing missing permissions for an IAM role. Operates on a unit type and converts between internal representations and AWS query or JSON formats. Used to handle and transmit IAM-related error states in AWS interactions.",
      "description_length": 283,
      "index": 366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ModifyEventSubscriptionResult",
      "description": "Provides operations to construct, parse, and serialize event subscription results. Works with `EventSubscription.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from AWS API calls involving event subscription modifications.",
      "description_length": 290,
      "index": 367,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a duplicate database parameter group. Works with unit type and AWS query or JSON structures. Used to handle and convert AWS API error responses related to existing parameter groups.",
      "description_length": 258,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBProxyResponse",
      "description": "Provides operations to construct, parse, and serialize a database proxy response, including converting between XML nodes, query parameters, and JSON representations. Works with the DBProxy.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to generate and process responses in AWS SDK interactions involving database proxies.",
      "description_length": 352,
      "index": 369,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBClusterResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster deletion result, including conversion to query parameters and JSON format. Works with the DBCluster.t type and AWS-specific data structures. Used to handle responses from database management systems when removing a cluster.",
      "description_length": 296,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBInstanceAutomatedBackupsMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing automated backups of a database instance, including handling filters, pagination, and resource identifiers. Works with string identifiers, integer record limits, and filter lists to refine query results. Used to generate HTTP queries for API calls and to process XML or JSON responses from database management services.",
      "description_length": 399,
      "index": 371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBClusterSnapshotStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid DB cluster snapshot operations. Works with the unit type to represent a specific fault condition. Used to handle and encode error responses in AWS API interactions.",
      "description_length": 247,
      "index": 372,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterRoleNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations related to missing database cluster roles. Operates on unit type and AWS query or JSON structures. Used to handle and encode/decode specific AWS API error responses.",
      "description_length": 238,
      "index": 373,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBSecurityGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for querying DB security groups, including setting group names, filters, record limits, and pagination markers. Works with custom types such as string, integer, and filter lists, as well as AWS-specific query and JSON representations. Used to generate structured API requests for database security group information in cloud infrastructure management workflows.",
      "description_length": 425,
      "index": 374,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SharedSnapshotQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a shared snapshot quota exceeded condition. Works with unit type and AWS query or JSON structures. Used to handle and encode quota-related errors in AWS API interactions.",
      "description_length": 250,
      "index": 375,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database snapshot result, including converting between XML, JSON, and query formats. Works with `DBSnapshot.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit database snapshot responses in AWS API interactions.",
      "description_length": 336,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBProxyTargetGroupRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying a database proxy's target group, including setting a new name and connection pool configuration. Works with string identifiers and a connection pool configuration structure. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 330,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyQuotaExceededFault",
      "description": "Handles error state when a database proxy quota is exceeded. Provides parsing, serialization, and conversion to query parameters for error representations. Used to manage and transmit quota-related error responses in AWS API interactions.",
      "description_length": 238,
      "index": 378,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBSubnetGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize messages for querying DB subnet group information, including setting subnet group names, filters, record limits, and pagination markers. Works with custom types such as string, integer, and structured filter lists. Used to generate HTTP query parameters and JSON payloads for API requests related to database subnet groups.",
      "description_length": 378,
      "index": 379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstancesOfferingNotFoundFault",
      "description": "Handles error scenarios where a reserved DB instance offering is not found. Provides parsing, serialization, and query construction for error responses. Works with unit type to represent absence of data.",
      "description_length": 203,
      "index": 380,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidExportOnlyFault",
      "description": "Provides operations to create, parse, and serialize error structures into query and JSON formats. Works with unit type and generic input types for error handling. Used to generate AWS-compatible error responses and validate input data.",
      "description_length": 235,
      "index": 381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeCustomAvailabilityZonesMessage",
      "description": "Provides operations to construct, parse, and serialize requests for custom availability zone configurations, including setting custom availability zone IDs, filters, record limits, and pagination markers. Works with string, integer, and filter list data types, as well as JSON and query parameter structures. Used to generate API-compatible request payloads for cloud resource management systems.",
      "description_length": 396,
      "index": 382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterSnapshotAttributesMessage",
      "description": "Provides operations to construct, parse, and serialize a message for describing attributes of a DB cluster snapshot, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types for AWS API interactions. Used to prepare and process requests for retrieving detailed snapshot information in cloud infrastructure management workflows.",
      "description_length": 396,
      "index": 383,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterBacktracksMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing backtracks of a database cluster, including setting identifiers, filters, and pagination parameters. Works with string, integer, and list types, as well as AWS-specific types for queries and JSON. Used to generate API-compatible request structures for querying cluster backtrack information.",
      "description_length": 370,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.TagListMessage",
      "description": "Provides operations to construct, parse, and serialize a structured data container using a tag list. Works with XML nodes, AWS query parameters, and JSON structures containing nested associations and lists. Used to convert between XML representations of tagged messages and JSON-compatible formats for API interactions.",
      "description_length": 319,
      "index": 385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RebootDBInstanceMessage",
      "description": "Provides functions to construct, parse, and serialize a database instance reboot request, including setting the instance identifier and optional force failover flag. Works with string identifiers and boolean flags, and supports XML parsing and JSON serialization. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 342,
      "index": 386,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AuthorizationAlreadyExistsFault",
      "description": "Handles error creation and serialization for duplicate authorization scenarios. Accepts unit values and converts them to query parameters or JSON structures. Used to represent and transmit \"authorization already exists\" errors in API responses.",
      "description_length": 244,
      "index": 387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBClusterMessage",
      "description": "Constructs and manipulates a database cluster modification request with specific parameters such as cluster identifier, backup retention, security groups, and scaling configurations. Operates on types like strings, integers, booleans, and custom records representing AWS database cluster settings. Used to generate API requests for updating a database cluster's configuration in a cloud environment.",
      "description_length": 399,
      "index": 388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterParameterGroupNameMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster parameter group name, including converting between XML nodes, query parameters, and JSON representations. Works with string-based data and structured JSON objects. Used to handle AWS API responses and requests involving parameter group names in cloud infrastructure workflows.",
      "description_length": 350,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterSnapshotAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a database cluster snapshot that already exists. Works with the unit type to represent a specific fault condition. Used to handle AWS API responses where a duplicate snapshot is detected during operations.",
      "description_length": 282,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster result, including conversion to query parameters and JSON format. Works with the DBCluster.t type and AWS-specific data structures. Used to handle responses from database cluster creation operations in API interactions.",
      "description_length": 292,
      "index": 391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBInstanceFromS3Message",
      "description": "Provides functions to construct, parse, and serialize a database instance restoration request from S3, including setting parameters like database name, instance identifier, storage configuration, security groups, and S3 source details. Works with types such as strings, integers, lists, and custom records for database parameters, security settings, and S3 ingestion roles. Used to generate API requests for restoring a DB instance using S3 data, including specifying engine versions, backup settings, and encryption options.",
      "description_length": 525,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterEndpointMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing Amazon RDS cluster endpoints, including setting a pagination marker and a list of endpoints. Works with custom types such as `DBClusterEndpointList` and AWS-specific data formats like XML and JSON. Used to generate HTTP query parameters and JSON payloads for API interactions with RDS services.",
      "description_length": 377,
      "index": 393,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.EventSubscriptionsMessage",
      "description": "Provides operations to construct, parse, and serialize message structures containing event subscriptions, including converting between XML nodes, query parameters, and JSON representations. Works with custom types such as `EventSubscriptionsList.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle AWS EventSubscriptions responses in API interactions, enabling structured data exchange and processing.",
      "description_length": 437,
      "index": 394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AddSourceIdentifierToSubscriptionMessage",
      "description": "Provides operations to construct, parse, and serialize a message containing a subscription name and a source identifier. Works with string-based identifiers and XML or JSON representations. Used to generate and process subscription update notifications in AWS SNS interactions.",
      "description_length": 277,
      "index": 395,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.GlobalClusterAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error instances representing an existing global cluster. Works with the unit type to encapsulate no data. Used in AWS API interactions to handle conflicts when a global cluster already exists.",
      "description_length": 243,
      "index": 396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidSubnet",
      "description": "Provides operations to create, parse, and serialize invalid subnet data, including converting to AWS query format and JSON. Works with unit type and arbitrary input types for parsing. Used to handle invalid subnet representations in AWS request generation and data validation workflows.",
      "description_length": 286,
      "index": 397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyOptionGroupMessage",
      "description": "Provides functions to construct, parse, and serialize messages for modifying an option group, including adding or removing specific options and specifying apply behavior. Works with custom types such as option group names, lists of options, and boolean flags. Used to generate API requests for database parameter group modifications in AWS services.",
      "description_length": 349,
      "index": 398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterEndpointAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error instances related to duplicate database cluster endpoints. Works with the unit type to represent a specific exception condition. Used in AWS API error handling to manage endpoint duplication scenarios.",
      "description_length": 258,
      "index": 399,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AddTagsToResourceMessage",
      "description": "Provides operations to construct, parse, and serialize a resource tagging request, including creating an instance from a resource name and tag list, parsing XML nodes into the structure, and converting to query parameters or JSON. Works with AWS resource names, tag lists, and XML or JSON representations. Used to generate and process messages for adding tags to AWS resources in API interactions.",
      "description_length": 397,
      "index": 400,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidOptionGroupStateFault",
      "description": "Provides operations to create, parse, and serialize error states related to invalid option groups, including converting to and from JSON and query parameters. Works with unit type and generic input values. Used to handle AWS API error responses where invalid option group configurations are detected.",
      "description_length": 300,
      "index": 401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBSubnetGroupResult",
      "description": "Provides operations to construct, parse, and serialize a database subnet group result, including converting between XML, JSON, and query formats. Works with the DBSubnetGroup.t type and AWS-specific data structures. Used to handle responses from modifying a subnet group in an AWS API interaction.",
      "description_length": 297,
      "index": 402,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeInstallationMediaMessage",
      "description": "Provides operations to construct, parse, and serialize messages for describing installation media, including setting installation media IDs, filters, record limits, and pagination markers. Works with AWS-specific types such as strings, integers, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API requests related to installation media metadata.",
      "description_length": 380,
      "index": 403,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeSourceRegionsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing AWS source regions, including setting region names, record limits, pagination markers, and filters. Works with types such as strings, integers, and custom filter lists to represent query parameters. Used to generate HTTP query strings and JSON payloads for API interactions with AWS services.",
      "description_length": 371,
      "index": 404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBProxyStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid database proxy configurations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 242,
      "index": 405,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBProxyResponse",
      "description": "Provides functions to construct, parse, and convert between XML nodes, query parameters, and JSON representations of database proxy responses. Works with XML node structures, AWS query parameters, and JSON objects. Used to process and serialize database proxy response data from XML input or JSON payloads.",
      "description_length": 306,
      "index": 406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SubnetAlreadyInUse",
      "description": "Provides functions to create, parse, and serialize error instances related to subnet conflicts, working with unit type and AWS query/json formats. Includes a constructor for error objects, parsing logic for input data, and conversion to AWS query and JSON representations. Used to handle and communicate subnet conflict errors in AWS API interactions.",
      "description_length": 351,
      "index": 407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.GlobalClusterQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a global cluster quota exceeded condition. Works with the unit type to encapsulate no value. Used to handle AWS API responses where a quota limit is exceeded during cluster operations.",
      "description_length": 264,
      "index": 408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ProvisionedIopsNotAvailableInAZFault",
      "description": "Provides operations to create, parse, and serialize fault information related to unavailability of provisioned IOPS in an availability zone. Works with unit type and AWS query/json structures. Used to handle specific error conditions in cloud storage operations.",
      "description_length": 262,
      "index": 409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBInstanceToPointInTimeMessage",
      "description": "Constructs and manipulates a request to restore a DB instance to a specific point in time, supporting parameters like source and target instance identifiers, restore time, instance class, and network configuration. Operates on types such as strings, dates, integers, lists, and custom records for database settings and tags. Used to generate API requests for database recovery or testing environments.",
      "description_length": 401,
      "index": 410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBParameterGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a database parameter group modification message. Works with string-based parameter group names and structured parameter lists. Used to generate HTTP query parameters and JSON payloads for API requests modifying database configurations.",
      "description_length": 289,
      "index": 411,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SubscriptionCategoryNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault type representing an invalid subscription category, working with unit type and AWS query/json structures. Converts between internal representations and AWS-compatible formats. Used to handle errors in subscription management systems where category validation fails.",
      "description_length": 325,
      "index": 412,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a database subnet group message, including converting between XML, query parameters, and JSON formats. Works with AWS string types, subnet group lists, and JSON structures. Used to handle API responses and requests related to database subnet group configurations.",
      "description_length": 318,
      "index": 413,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ResourceNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a missing resource. Works with unit type and AWS query/json structures. Used to generate error responses in API interactions when resources are not found.",
      "description_length": 227,
      "index": 414,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterSnapshotMessage",
      "description": "Provides functions to construct, parse, and serialize a database cluster snapshot message, including methods to convert between XML, JSON, and query parameters. Works with string identifiers for database clusters and snapshots, along with a list of tags. Used to generate API requests for creating database cluster snapshots in AWS RDS.",
      "description_length": 336,
      "index": 415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstanceQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize error instances related to exceeding reserved DB instance quotas. Works with unit type and AWS query/json structures. Used to handle and transmit quota exceeded errors in AWS API interactions.",
      "description_length": 244,
      "index": 416,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateDBParameterGroupResult",
      "description": "Provides operations to construct, parse, and serialize a database parameter group result, including converting between XML, JSON, and query formats. Works with the DBParameterGroup.t type and a custom t type representing the result structure. Used to handle AWS RDS parameter group creation responses in API interactions.",
      "description_length": 321,
      "index": 417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyGlobalClusterMessage",
      "description": "Provides operations to construct, parse, and serialize a message for modifying a global cluster, including setting identifiers and deletion protection. Works with string and boolean types, as well as XML and JSON data structures. Used to generate HTTP query parameters and JSON payloads for API requests modifying database cluster configurations.",
      "description_length": 346,
      "index": 418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeExportTasksMessage",
      "description": "Provides operations to construct, parse, and serialize request parameters for exporting tasks, including setting identifiers, source ARNs, filters, pagination markers, and record limits. Works with string, integer, and list types, as well as AWS-specific data structures like `FilterList`. Used to generate HTTP query strings and JSON payloads for API interactions.",
      "description_length": 365,
      "index": 419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBSnapshotStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid database snapshot conditions. Works with unit type and AWS query/json structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 238,
      "index": 420,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBClusterEndpointMessage",
      "description": "Provides functions to construct, parse, and serialize a database cluster endpoint configuration, including setting the endpoint identifier, type, static and excluded members. Works with string identifiers, lists of strings, and JSON or query parameter representations. Used to generate AWS API requests for modifying database cluster endpoints.",
      "description_length": 344,
      "index": 421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBInstanceStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid database instance operations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in AWS API interactions.",
      "description_length": 241,
      "index": 422,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ModifyCertificatesResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize certificate modification results. Works with the Certificate.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to handle responses from certificate management systems, converting between XML, JSON, and internal representations.",
      "description_length": 323,
      "index": 423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DownloadDBLogFilePortionMessage",
      "description": "Provides functions to construct, parse, and serialize a request for downloading a portion of a database log file, including setting the instance identifier, log file name, marker, and line count. Works with string and integer types for configuration and JSON/Query representations. Used to fetch specific segments of log files from a database instance for analysis or troubleshooting.",
      "description_length": 384,
      "index": 424,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyTargetNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for database proxy target not found scenarios. Works with unit type and AWS query/json structures. Used to generate AWS-compatible error responses and handle deserialization from JSON.",
      "description_length": 258,
      "index": 425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterParameterGroupResult",
      "description": "Provides operations to construct, parse, and serialize a database cluster parameter group structure, including converting between XML, JSON, and query formats. Works with the DBClusterParameterGroup.t type and associated JSON and query representations. Used to handle AWS RDS parameter group responses in API interactions.",
      "description_length": 322,
      "index": 426,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterParameterGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for a database cluster parameter group not found scenario. Works with unit type and AWS query or JSON structures. Used to handle specific AWS API error responses in distributed database systems.",
      "description_length": 268,
      "index": 427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotMessage",
      "description": "Provides constructors and parsers for handling database snapshot data, including building instances from optional marker and snapshot list parameters, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with AWS-specific types such as strings, lists of database snapshots, and JSON structures. Used to process and serialize responses from AWS RDS API related to database snapshots.",
      "description_length": 441,
      "index": 428,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupNotSupportedFault",
      "description": "Provides functions to create, parse, and serialize error representations for unsupported security group operations. Works with unit type and AWS query/json structures. Used to handle and convert AWS API faults related to security group limitations.",
      "description_length": 248,
      "index": 429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateEventSubscriptionResult",
      "description": "Provides operations to construct, parse, and serialize event subscription results. Works with `EventSubscription.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate and process responses from event subscription APIs, including XML parsing and JSON serialization.",
      "description_length": 317,
      "index": 430,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBSnapshotAttributesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing DB snapshot attributes, including converting between XML, JSON, and query formats. Works with structured data containing attributes like authorizations and owner identifiers for database snapshots. Used to process responses from database management systems when retrieving snapshot metadata.",
      "description_length": 374,
      "index": 431,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBProxiesResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a list of database proxies, including converting between XML, JSON, and query parameters. Works with `DBProxyList.t` and AWS-specific types for handling API responses. Used to process and format API responses in AWS SDK interactions.",
      "description_length": 310,
      "index": 432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateEventSubscriptionMessage",
      "description": "Creates and manipulates messages for subscribing to SNS events, supporting structured data with subscription names, SNS topic ARNs, event categories, source types, source IDs, and tags. Operates on custom types like `EventCategoriesList`, `SourceIdsList`, and `TagList` to ensure precise event filtering. Used to generate HTTP query parameters and JSON representations for SNS subscription requests.",
      "description_length": 399,
      "index": 433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a duplicate security group condition. Works with unit type and AWS query/json structures. Used to handle AWS API responses indicating an existing security group during resource creation.",
      "description_length": 263,
      "index": 434,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize a database parameter group deletion request. Works with string-based parameter group names and AWS query/json formats. Used to generate API-compatible requests for removing parameter groups in cloud database systems.",
      "description_length": 271,
      "index": 435,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CustomAvailabilityZoneAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for a custom availability zone conflict, working with unit types and AWS query/json formats. Includes a constructor for the error state, a parser to detect the error from input, and methods to convert between data formats. Used in AWS API error handling to manage duplicate custom availability zone registrations.",
      "description_length": 386,
      "index": 436,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyDBClusterParameterGroupMessage",
      "description": "Provides functions to construct, parse, and serialize data structures for copying a DB cluster parameter group, including handling identifiers, descriptions, and tags. Works with string identifiers, parameter group descriptions, and tag lists. Used to generate API requests and process XML or JSON responses in database management workflows.",
      "description_length": 341,
      "index": 437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StartDBInstanceMessage",
      "description": "Provides operations to construct, parse, and serialize a database instance start request, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types for AWS database instances. Used to generate and process messages for initiating database instance operations in AWS SDK interactions.",
      "description_length": 350,
      "index": 438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBClusterFromSnapshotResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster restoration result, including converting between XML, JSON, and query parameters. Works with the DBCluster.t type and AWS-specific data structures for query and JSON representation. Used to handle responses from restoring a database cluster from a snapshot in AWS RDS interactions.",
      "description_length": 354,
      "index": 439,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBInstanceFromDBSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database instance restoration result, including converting between XML, JSON, and query parameters. Works with the DBInstance.t type and AWS-specific data structures for query and JSON formatting. Used to handle responses from restoring a database instance from a snapshot in AWS RDS interactions.",
      "description_length": 354,
      "index": 440,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.RestoreDBClusterFromSnapshotMessage",
      "description": "Provides functions to construct, parse, and serialize a database cluster restoration message from a snapshot, including setting attributes like engine, port, security groups, and tags. Works with types such as availability zones, string identifiers, integer ports, and structured configurations. Used to generate API requests for restoring a DB cluster in AWS RDS.",
      "description_length": 364,
      "index": 441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBInstancesMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing database instances, including setting instance identifiers, filters, record limits, and pagination markers. Works with string, integer, and list types, as well as AWS-specific data structures like Query and Json. Used to generate HTTP query parameters and JSON payloads for API interactions with database instance metadata.",
      "description_length": 402,
      "index": 442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StopDBClusterResult",
      "description": "Provides operations to construct, parse, and serialize a database cluster stop result, including converting between XML, JSON, and query formats. Works with the DBCluster.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to handle responses from stopping a database cluster in AWS RDS.",
      "description_length": 313,
      "index": 443,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateCustomAvailabilityZoneResult",
      "description": "Provides operations to construct, parse, and serialize a custom availability zone result, including converting between XML, JSON, and query formats. Works with the `CustomAvailabilityZone.t` type and a result structure `t`. Used to generate HTTP query parameters and JSON representations for API responses.",
      "description_length": 306,
      "index": 444,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBProxyTargetGroupsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB proxy target groups, including setting the DB proxy name, target group name, filters, pagination parameters, and record limits. Works with types such as strings, integers, and custom filter lists. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS RDS.",
      "description_length": 370,
      "index": 445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteEventSubscriptionResult",
      "description": "Provides operations to construct, parse, and serialize event subscription results. Works with `EventSubscription.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle the response from deleting event subscriptions in AWS API interactions.",
      "description_length": 289,
      "index": 446,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.GlobalClusterNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for a global cluster not found scenario. Works with unit type and AWS query/json structures. Used to handle and convert error states in distributed system interactions.",
      "description_length": 242,
      "index": 447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OptionGroupAlreadyExistsFault",
      "description": "Provides operations to create, parse, and serialize a fault type representing an existing option group, working with unit types and AWS query structures. Converts between internal representations and JSON format for API interactions. Used to handle errors when an option group already exists during AWS service requests.",
      "description_length": 320,
      "index": 448,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidEventSubscriptionStateFault",
      "description": "Provides operations to create, parse, and serialize error states related to invalid event subscription configurations. Works with unit type and AWS query or JSON structures. Used to handle and convert error representations in event-driven systems.",
      "description_length": 247,
      "index": 449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing database instance responses, including methods to convert between XML, query parameters, and JSON formats. Works with types such as strings, lists of database instances, and JSON associations. Used to process AWS API responses and prepare data for HTTP requests.",
      "description_length": 346,
      "index": 450,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CopyDBSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database snapshot result, including converting between XML, JSON, and query parameters. Works with `DBSnapshot.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from database snapshot copy operations in AWS SDK interactions.",
      "description_length": 346,
      "index": 451,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateOptionGroupResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structured data representation used in AWS API interactions. Works with XML nodes, JSON structures, and a custom record type containing optional group configurations. Used to convert between XML input and JSON output for API request formatting.",
      "description_length": 314,
      "index": 452,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InstallationMediaMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to installation media, including creating instances with optional marker and media lists, parsing XML nodes into message structures, and converting between query, JSON, and internal representations. Works with types such as strings, JSON values, and custom installation media lists. Used to handle AWS API responses and requests involving installation media metadata.",
      "description_length": 439,
      "index": 453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyTargetAlreadyRegisteredFault",
      "description": "Handles registration conflict errors by providing creation, parsing, and serialization functions. Works with unit type to represent a specific fault condition. Used to generate AWS query parameters and JSON representations for error responses in distributed systems.",
      "description_length": 266,
      "index": 454,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroupNotAllowedFault",
      "description": "Provides functions to create, parse, and serialize error representations for database subnet group restrictions. Operates on unit type and AWS query or JSON structures. Used to handle and transmit specific fault information in AWS-related error responses.",
      "description_length": 255,
      "index": 455,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ExportTasksMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS export tasks, including creating instances with optional marker and task lists, parsing XML nodes into task objects, and converting between query, JSON, and internal representations. Works with AWS-specific types such as strings, lists of export tasks, and JSON associations. Used to generate HTTP requests and process responses in AWS API interactions.",
      "description_length": 440,
      "index": 456,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyCurrentDBClusterCapacityMessage",
      "description": "Provides functions to construct, parse, and serialize a message for modifying the capacity of a database cluster, including setting the cluster identifier, desired capacity, timeout duration, and timeout action. Works with string and integer types for identifiers and configuration parameters, and supports XML and JSON serialization formats. Used to generate API requests for cloud database management systems.",
      "description_length": 411,
      "index": 457,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AccountAttributesMessage",
      "description": "Provides functions to construct, parse, and serialize account attribute data, including converting between XML nodes, query parameters, and JSON structures. Works with account quota lists and structured JSON representations. Used to generate and process AWS account attribute messages in API requests and responses.",
      "description_length": 315,
      "index": 458,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize error representations related to exceeding security group quotas. Works with unit type to represent a specific fault condition. Used to generate AWS query parameters and JSON structures for error responses in networking configurations.",
      "description_length": 286,
      "index": 459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBProxyTargetsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying DB proxy targets, including setting the DB proxy name, target group name, filters, pagination parameters, and record limits. Works with string, integer, and list types, as well as AWS-specific types for queries and JSON. Used to generate HTTP query parameters and JSON payloads for API interactions with database proxy target information.",
      "description_length": 415,
      "index": 460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StorageQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize a unit type representing a storage quota exceeded condition. Works with AWS query parameters and JSON structures. Used to handle and encode error responses in API interactions where storage limits are exceeded.",
      "description_length": 261,
      "index": 461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBClusterEndpointMessage",
      "description": "Provides operations to construct, parse, and serialize a database cluster endpoint deletion request, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types representing AWS database cluster endpoints. Used to generate HTTP requests for deleting specific cluster endpoints in AWS RDS.",
      "description_length": 354,
      "index": 462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ResetDBParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize messages for resetting a database parameter group, including setting the parameter group name, resetting all parameters, and specifying individual parameters. Works with string, boolean, and custom parameter list types. Used to generate API requests for database configuration updates in cloud infrastructure workflows.",
      "description_length": 374,
      "index": 463,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeOptionGroupsMessage",
      "description": "Provides functions to construct, parse, and serialize request parameters for describing option groups in AWS services, including setting names, filters, pagination, and engine versions. Works with custom types such as option group names, filters, markers, and engine versions. Used to generate HTTP queries and JSON payloads for API interactions with AWS RDS.",
      "description_length": 359,
      "index": 464,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBParameterGroupStateFault",
      "description": "Provides functions to create, parse, and serialize error states related to invalid database parameter groups. Works with unit type to represent a specific error condition. Used in AWS API interactions to handle and encode/decode error responses.",
      "description_length": 245,
      "index": 465,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing an existing database proxy. Works with the unit type and AWS query and JSON structures. Used to handle and convert error states in database operations.",
      "description_length": 228,
      "index": 466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteEventSubscriptionMessage",
      "description": "Creates a message for deleting an event subscription, supporting construction from a subscription name, parsing from XML nodes, and serialization to query parameters, JSON, and deserialization from JSON. Operates on a structured type containing a subscription name. Used to generate AWS API requests for removing event subscriptions.",
      "description_length": 333,
      "index": 467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceAutomatedBackupMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing automated DB instance backups, including methods to convert between XML, query parameters, and JSON formats. Works with types such as strings, lists of DB instance backups, and JSON associations. Used to process and transmit backup metadata in AWS API interactions.",
      "description_length": 349,
      "index": 468,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteCustomAvailabilityZoneResult",
      "description": "Provides functions to construct, parse, and serialize a custom availability zone result, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with the `CustomAvailabilityZone.t` type and a result structure `t`. Used to handle API responses for deleting custom availability zones in AWS interactions.",
      "description_length": 346,
      "index": 469,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StartActivityStreamResponse",
      "description": "Provides operations to construct, parse, and serialize objects representing the response from starting an activity stream, including setting KMS key ID, Kinesis stream name, status, mode, and apply immediately flag. Works with AWS base types, activity stream status and mode, and JSON or query format data. Used to generate API responses for AWS services that manage activity streams.",
      "description_length": 384,
      "index": 470,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBProxyTargetGroupNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for a missing target group in a database proxy. Operates on unit type and AWS query or JSON structures. Used to handle and convert error states in API interactions involving database target groups.",
      "description_length": 270,
      "index": 471,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBClusterSnapshotAttributeResult",
      "description": "Provides functions to construct, parse, and serialize a database cluster snapshot attribute result, including conversion to and from JSON and query parameters. Works with the DBClusterSnapshotAttributesResult type to manage snapshot attribute data. Used to handle responses from database snapshot attribute modification operations in AWS SDK interactions.",
      "description_length": 355,
      "index": 472,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.RevokeDBSecurityGroupIngressMessage",
      "description": "Provides functions to construct, parse, and serialize a message for revoking database security group ingress, including setting the security group name and optional CIDR IP or EC2 security group identifiers. Works with string-based data types and AWS-specific types for query and JSON formatting. Used to generate API requests for modifying database security group rules in AWS services.",
      "description_length": 387,
      "index": 473,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StopActivityStreamRequest",
      "description": "Provides operations to construct, parse, and serialize requests for stopping activity streams, including creating a request with a resource ARN and optional immediate application flag, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with AWS resource ARNs, boolean flags, and XML or JSON data formats. Used to generate API-compatible requests for stopping activity streams in AWS services.",
      "description_length": 456,
      "index": 474,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidGlobalClusterStateFault",
      "description": "Handles error state validation for global clusters, providing creation, parsing, and serialization functions. Works with unit type to represent specific fault conditions. Used to generate AWS query parameters and JSON representations for invalid cluster state errors.",
      "description_length": 267,
      "index": 475,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstanceAlreadyExistsFault",
      "description": "Handles error conditions when a reserved DB instance already exists. Provides parsing, serialization, and query construction for error responses. Used in AWS API interactions to manage and represent this specific fault.",
      "description_length": 219,
      "index": 476,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CopyDBSnapshotMessage",
      "description": "Provides operations to construct, parse, and serialize a database snapshot copy request, including setting identifiers, KMS key, tags, and custom availability zones. Works with string identifiers, tag lists, and boolean flags to configure the copy process. Used to generate API requests for copying database snapshots in cloud infrastructure workflows.",
      "description_length": 352,
      "index": 477,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.RevokeDBSecurityGroupIngressResult",
      "description": "Provides operations to construct, parse, and serialize a database security group ingress revocation result, including converting between XML, JSON, and query formats. Works with the `DBSecurityGroup.t` type and AWS-specific data structures. Used to handle API responses for revoking ingress rules in database security groups.",
      "description_length": 325,
      "index": 478,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterEndpointNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a missing database cluster endpoint. Works with the unit type to encapsulate no value. Used in AWS API interactions to handle and transmit specific error conditions.",
      "description_length": 245,
      "index": 479,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeEventsMessage",
      "description": "Provides operations to construct, parse, and serialize event description requests, including setting source identifiers, time ranges, duration, categories, and filters. Works with types such as date times, integers, strings, and custom lists for event parameters. Used to generate query parameters for API calls and to convert between XML and JSON representations of event filtering criteria.",
      "description_length": 392,
      "index": 480,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBClusterStateFault",
      "description": "Handles error state validation for database clusters by generating and parsing error representations. Works with unit type to signify absence of data. Used to construct and serialize error responses in AWS API interactions.",
      "description_length": 223,
      "index": 481,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CertificateNotFoundFault",
      "description": "Provides operations to create, parse, and serialize a fault representing a missing certificate, working with unit type and AWS query/json structures. Includes a constructor for the fault, a parser that returns an option, and functions to convert between internal and AWS formats. Used to handle certificate absence in AWS API interactions.",
      "description_length": 339,
      "index": 482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstanceNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error data related to missing reserved DB instances. Works with the unit type to represent the absence of a value. Used in AWS API interactions to handle and encode/decode not-found error responses.",
      "description_length": 249,
      "index": 483,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.StopDBInstanceResult",
      "description": "Provides operations to construct, parse, and serialize a database instance stop result, including converting between XML, JSON, and query parameters. Works with `DBInstance.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from stopping a database instance in AWS SDK interactions.",
      "description_length": 346,
      "index": 484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.AddRoleToDBInstanceMessage",
      "description": "Provides functions to construct, parse, and serialize a message representing the addition of a role to a database instance, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers, ARNs, and feature names encapsulated in a structured record type. Used to generate and process requests for associating IAM roles with database instances in AWS interactions.",
      "description_length": 419,
      "index": 485,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBSnapshotAttributeMessage",
      "description": "Provides functions to construct, parse, and serialize a database snapshot attribute modification request, including adding or removing specific attribute values. Works with string identifiers, attribute names, and lists of attribute values. Used to update snapshot visibility or configuration settings in AWS RDS.",
      "description_length": 313,
      "index": 486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterParametersMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB cluster parameters, including handling filters, pagination, and parameter group names. Works with string, integer, and list types, as well as AWS-specific data structures like FilterList and Query. Used to generate HTTP queries and JSON payloads for API interactions with database parameter configurations.",
      "description_length": 388,
      "index": 487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBProxyRequest",
      "description": "Provides operations to construct, parse, and serialize database proxy request data, including setting proxy name, engine family, authentication configuration, role ARN, and network settings. Works with types such as strings, lists, boolean flags, and custom records for AWS configuration. Used to generate structured requests for creating database proxies in AWS RDS.",
      "description_length": 367,
      "index": 488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteCustomAvailabilityZoneMessage",
      "description": "Provides operations to construct, parse, and serialize a message for deleting a custom availability zone, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing a custom availability zone ID. Used to generate API requests for removing custom availability zones in cloud infrastructure management.",
      "description_length": 365,
      "index": 489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RemoveRoleFromDBClusterMessage",
      "description": "Provides functions to construct, parse, and serialize a message for removing a role from a database cluster, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and ARNs, along with optional feature names. Used to generate API requests for database cluster role management in AWS services.",
      "description_length": 343,
      "index": 490,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidDBClusterCapacityFault",
      "description": "Provides functions to create, parse, and serialize error representations for invalid database cluster capacity scenarios. Works with unit type and AWS query or JSON structures. Used to handle and convert error states in AWS-related operations.",
      "description_length": 243,
      "index": 491,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PromoteReadReplicaDBClusterResult",
      "description": "Provides operations to construct, parse, and serialize a database cluster promotion result, including converting between XML, JSON, and query parameters. Works with the DBCluster.t type and AWS-specific data structures for query and JSON formatting. Used to handle responses from AWS RDS API when promoting a read replica cluster.",
      "description_length": 330,
      "index": 492,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.SnapshotQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize a fault type representing a snapshot quota exceeded error. Operates on unit type and AWS query or JSON structures. Used to handle and encode error responses in AWS API interactions.",
      "description_length": 232,
      "index": 493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBInstanceRoleNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a missing database instance role. Works with the unit type to encapsulate error states. Used in AWS API interactions to handle and transmit specific fault conditions.",
      "description_length": 246,
      "index": 494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBProxyTargetGroupResponse",
      "description": "Provides operations to construct, parse, and serialize a database proxy target group response, including converting between XML, JSON, and internal representations. Works with the `DBProxyTargetGroup.t` type and AWS query and JSON structures. Used to handle API responses in AWS RDS operations involving database proxies.",
      "description_length": 321,
      "index": 495,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DBClusterNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error instances representing a missing database cluster. Works with the unit type and AWS query or JSON structures. Used to handle and encode \"DBClusterNotFound\" errors in API responses.",
      "description_length": 237,
      "index": 496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribePendingMaintenanceActionsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing pending maintenance actions, including setting resource identifiers, filters, pagination parameters, and record limits. Works with AWS-specific types such as strings, integers, and JSON structures. Used to generate query parameters for API calls and to convert between XML and JSON representations of maintenance action requests.",
      "description_length": 408,
      "index": 497,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBClusterParameterGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize requests for describing DB cluster parameter groups, including filtering, pagination, and JSON conversion. Works with string, integer, and list types, as well as AWS-specific data structures like FilterList. Used to generate query parameters for API calls and to process XML or JSON responses from AWS services.",
      "description_length": 366,
      "index": 498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.PromoteReadReplicaResult",
      "description": "Provides operations to construct, parse, and serialize a database read replica result, including converting between XML, JSON, and query parameters. Works with `DBInstance.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit results from promoting a read replica in AWS RDS interactions.",
      "description_length": 353,
      "index": 499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CancelExportTaskMessage",
      "description": "Provides operations to construct, parse, and serialize a message representing a request to cancel an export task, using a string identifier. Works with XML nodes, query parameters, and JSON structures for message encoding and decoding. Used to generate HTTP requests and process incoming XML or JSON payloads in AWS interaction workflows.",
      "description_length": 338,
      "index": 500,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBInstanceMessage",
      "description": "Constructs and serializes a database instance configuration with detailed parameters such as instance identifier, storage, class, engine, and security settings. Operates on types like strings, integers, lists, and custom records representing AWS database parameters. Used to generate API requests for creating a DB instance with specific attributes and configurations.",
      "description_length": 368,
      "index": 501,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StartExportTaskMessage",
      "description": "Provides functions to construct, parse, and serialize a message containing export task details, including identifiers, ARNs, S3 buckets, and IAM roles. Works with string-based data types and list structures for optional parameters. Used to generate AWS API requests and handle XML/JSON serialization for task export configurations.",
      "description_length": 331,
      "index": 502,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSnapshotNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for database snapshot not found scenarios. Works with unit type and AWS query or JSON structures. Used to generate HTTP query parameters and JSON payloads for error responses in API interactions.",
      "description_length": 268,
      "index": 503,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database snapshot modification result. Works with `DBSnapshot.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from database snapshot modification APIs, converting between XML, JSON, and internal representations.",
      "description_length": 335,
      "index": 504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error instances representing an existing database cluster. Works with the unit type to encapsulate no value. Used in AWS API interactions to handle duplicate cluster creation attempts.",
      "description_length": 235,
      "index": 505,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.InvalidRestoreFault",
      "description": "Provides functions to create, parse, and serialize error states into query parameters and JSON format. Works with unit type and generic input values. Used to handle and convert invalid restore fault errors in AWS request processing.",
      "description_length": 232,
      "index": 506,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteGlobalClusterMessage",
      "description": "Creates a message for deleting a global cluster, using a string identifier. Processes XML nodes into the message structure, converts it to query parameters, and serializes/deserializes between JSON and internal representation. Used in AWS SDK interactions to construct and parse delete requests for global clusters.",
      "description_length": 315,
      "index": 507,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.FailoverDBClusterMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to database cluster failover actions. Works with string identifiers and structured data formats like XML, query parameters, and JSON. Used to generate and process messages for initiating failover operations in a database cluster.",
      "description_length": 301,
      "index": 508,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StartActivityStreamRequest",
      "description": "Provides operations to construct, parse, and serialize requests for starting an activity stream, including creating a request with resource ARN, mode, KMS key ID, and apply immediately flag. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate HTTP queries and JSON payloads for API interactions with AWS services.",
      "description_length": 356,
      "index": 509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBParameterGroupsMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing DB parameter groups, including creating instances with optional marker and group lists, parsing XML nodes into the structure, and converting between JSON and query formats. Works with types such as strings, lists of DB parameter groups, and JSON associations. Used to handle AWS RDS parameter group responses in API interactions.",
      "description_length": 413,
      "index": 510,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.InstallationMediaAlreadyExistsFault",
      "description": "Provides functions to create, parse, and serialize error representations for duplicate installation media. Works with unit type and AWS query/json structures. Used to handle and convert errors when duplicate media entries are detected during system setup.",
      "description_length": 255,
      "index": 511,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.CreateGlobalClusterResult",
      "description": "Provides operations to construct, parse, and serialize a global cluster result, including converting between XML nodes, query parameters, and JSON representations. Works with the `GlobalCluster.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from AWS API calls involving global cluster creation, enabling structured data exchange and processing.",
      "description_length": 417,
      "index": 512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CopyDBParameterGroupResult",
      "description": "Provides functions to construct, parse, and serialize a database parameter group result, including converting between XML, query, and JSON formats. Works with the DBParameterGroup.t type and AWS-specific data structures. Used to handle responses from database parameter group copy operations in AWS SDK interactions.",
      "description_length": 316,
      "index": 513,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeOptionGroupOptionsMessage",
      "description": "Provides operations to construct, parse, and serialize options for describing EC2 option groups, including setting engine names, versions, filters, and pagination parameters. Works with custom types such as engine names, version strings, filter lists, and pagination markers. Used to generate HTTP query parameters and JSON payloads for API requests related to EC2 option group descriptions.",
      "description_length": 391,
      "index": 514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventsMessage",
      "description": "Provides constructors and parsers for handling event-based messages, including creating instances from markers and event lists, parsing XML nodes into message structures, and converting between query, JSON, and internal representations. Works with types such as string, event lists, XML nodes, and JSON values. Used to process and serialize event data in AWS-related workflows.",
      "description_length": 377,
      "index": 515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBSubnetGroupMessage",
      "description": "Provides functions to construct, parse, and serialize a database subnet group configuration, including setting the subnet group name, optional description, and list of subnet IDs. Works with types such as string, list of subnet identifiers, and JSON or query parameters. Used to prepare and process requests for modifying a DB subnet group in AWS services.",
      "description_length": 356,
      "index": 516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupNotFoundFault",
      "description": "Provides functions to create, parse, and serialize error representations for a missing security group in a database context. Operates on unit type and AWS query or JSON structures. Used to handle and encode database-related security group absence errors in API responses.",
      "description_length": 271,
      "index": 517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBSnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a database snapshot deletion result, including converting between XML, JSON, and query formats. Works with the DBSnapshot.t type and AWS-specific data structures for query and JSON representation. Used to handle responses from AWS RDS when deleting a DB snapshot.",
      "description_length": 318,
      "index": 518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.SNSInvalidTopicFault",
      "description": "Provides operations to create, parse, and serialize error instances related to invalid SNS topics. Works with unit type and AWS query/json structures. Used to handle and convert SNS topic validation errors in API responses.",
      "description_length": 223,
      "index": 519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBClusterParameterGroupMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing a request to delete a DB cluster parameter group. Works with string-based identifiers and AWS query and JSON formats. Used to generate API requests for removing parameter groups in database management systems.",
      "description_length": 293,
      "index": 520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.OrderableDBInstanceOptionsMessage",
      "description": "Provides functions to construct, parse, and serialize a structured representation of database instance options, including setting a list of orderable instances and a pagination marker. Works with custom types for database instance options lists and AWS query and JSON formats. Used to generate HTTP requests and process XML responses in AWS SDK interactions.",
      "description_length": 358,
      "index": 521,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StopDBInstanceMessage",
      "description": "Provides operations to construct, parse, and serialize a database instance stop message, including converting between XML, query parameters, and JSON formats. Works with string identifiers for database instances and snapshots. Used to generate and process requests for stopping specific database instances in AWS services.",
      "description_length": 322,
      "index": 522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteInstallationMediaMessage",
      "description": "Creates a message to delete installation media using a specific ID. Handles XML parsing, query string generation, and JSON serialization/deserialization. Works with AWS query parameters, XML nodes, and JSON values to facilitate API interactions.",
      "description_length": 245,
      "index": 523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RemoveTagsFromResourceMessage",
      "description": "Provides operations to construct, parse, and serialize a structure representing AWS resource tags to be removed, including creating from a resource name and tag keys, parsing XML nodes, and converting to query and JSON formats. Works with AWS base string types, key lists, and JSON structures. Used to generate requests for removing specific tags from AWS resources in API interactions.",
      "description_length": 386,
      "index": 524,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.ModifyDBSnapshotAttributeResult",
      "description": "Provides functions to construct, parse, and serialize a database snapshot attribute result, including converting between XML, JSON, and query formats. Works with the DBSnapshotAttributesResult.t type to represent attribute configurations of a database snapshot. Used to handle AWS RDS response data when modifying snapshot attributes through API interactions.",
      "description_length": 359,
      "index": 525,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeDBProxyTargetsResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing a list of database proxy targets, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with a target list and a string marker to track pagination. Used to process and format API responses from services managing database connections.",
      "description_length": 355,
      "index": 526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBProxyNotFoundFault",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON format. Works with the unit data type to represent a specific fault condition. Used to handle and encode \"not found\" error scenarios in AWS API interactions.",
      "description_length": 251,
      "index": 527,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.KMSKeyNotAccessibleFault",
      "description": "Handles error conditions where a KMS key is not accessible, providing creation, parsing, and serialization functions. Operates on unit type and AWS query/json structures. Used to generate and process fault responses in AWS KMS interactions.",
      "description_length": 240,
      "index": 528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DeleteDBProxyRequest",
      "description": "Provides operations to construct, parse, and serialize a database proxy deletion request, including converting between XML, query, and JSON formats. Works with string-based proxy names and structured request data. Used to generate HTTP requests for deleting database proxies in AWS services.",
      "description_length": 291,
      "index": 529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DescribeEventCategoriesMessage",
      "description": "Provides operations to construct, parse, and serialize messages for describing event categories, including setting a source type and filters. Works with string types, filter lists, and AWS query and JSON structures. Used to generate HTTP requests and process XML responses in AWS API interactions.",
      "description_length": 297,
      "index": 530,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.AuthorizationQuotaExceededFault",
      "description": "Provides operations to create, parse, and serialize a quota exceeded fault representation. Works with unit type and AWS query or JSON structures. Used to handle API request limits in distributed systems.",
      "description_length": 203,
      "index": 531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSubnetGroupNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error data related to a missing database subnet group. Works with the unit type to represent the absence of a value. Used to handle AWS API responses where a subnet group is not found, enabling structured error handling in request processing.",
      "description_length": 294,
      "index": 532,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.DescribeOrderableDBInstanceOptionsMessage",
      "description": "Provides operations to construct, parse, and serialize a request for describing orderable DB instance options, including engine, version, class, license model, and availability zone settings. Works with string, boolean, integer, and custom filter list types. Used to generate API requests for querying available database instance configurations in a cloud environment.",
      "description_length": 368,
      "index": 533,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.CreateDBClusterEndpointMessage",
      "description": "Provides functions to construct, parse, and serialize a database cluster endpoint configuration, including methods to generate query parameters and JSON representations. Works with string identifiers, lists of members, and tag collections. Used to create and manage database endpoint definitions in AWS RDS operations.",
      "description_length": 318,
      "index": 534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.EventSubscriptionQuotaExceededFault",
      "description": "Provides functions to create, parse, and serialize a unit type representing an event subscription quota exceeded condition. Works with AWS query parameters and JSON structures. Used to handle and encode error responses in API interactions where subscription limits are breached.",
      "description_length": 278,
      "index": 535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.BackupPolicyNotFoundFault",
      "description": "Provides operations to create, parse, and serialize error representations for a missing backup policy, working with unit types and AWS query/json formats. Converts error states into query parameters and JSON structures for API interactions. Used to handle and represent \"backup policy not found\" errors in AWS service responses.",
      "description_length": 328,
      "index": 536,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.Types.StartDBClusterResult",
      "description": "Provides operations to construct, parse, and serialize a database cluster result, including converting between XML, JSON, and query parameters. Works with the DBCluster.t type and AWS-specific data structures like Query.t and Json.t. Used to process responses from AWS RDS API calls that return cluster information.",
      "description_length": 315,
      "index": 537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.ReservedDBInstancesOfferingMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS RDS reserved instance offerings, including methods to convert between XML, query parameters, and JSON formats. Works with types such as string markers, lists of reserved DB instance offerings, and JSON associations. Used to process and transmit AWS RDS reservation details in API requests and responses.",
      "description_length": 391,
      "index": 538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterBacktrackMessage",
      "description": "Provides functions to construct, parse, and serialize data structures representing database cluster backtrack information, including methods to convert between XML, query parameters, and JSON formats. Works with types such as strings, lists of database cluster backtrack objects, and JSON associations. Used to handle AWS API responses and requests related to database cluster backtrack operations.",
      "description_length": 398,
      "index": 539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBClusterMessage",
      "description": "Provides operations to construct, parse, and serialize data structures representing Amazon RDS cluster messages, including setting a pagination marker and cluster list. Works with custom types such as `DBClusterList.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process API responses and generate query parameters or JSON payloads for RDS cluster management.",
      "description_length": 410,
      "index": 540,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.RemoveSourceIdentifierFromSubscriptionMessage",
      "description": "Provides operations to construct, parse, and serialize a message structure that removes a source identifier from a subscription. Works with string-based subscription names and source identifiers, and handles XML and JSON serialization. Used to generate and process messages in AWS SNS subscription management workflows.",
      "description_length": 319,
      "index": 541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types.DBSecurityGroupMessage",
      "description": "Provides operations to construct, parse, and serialize objects representing DB security group messages, including setting a marker and security groups list. Works with types such as strings, custom DBSecurityGroups, and JSON or query structures. Used to generate API responses and handle XML or JSON input in database-related network interactions.",
      "description_length": 347,
      "index": 542,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.AddRoleToDBCluster",
      "description": "Handles AWS RDS operations by converting input parameters into signed HTTP requests for adding a role to a DB cluster. Processes HTTP responses to extract results or decode specific AWS error messages. Works with structured input types and returns no output, focusing on error handling and request formatting for API interactions.",
      "description_length": 330,
      "index": 543,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.AddRoleToDBInstance",
      "description": "Handles the conversion of input data into an HTTP request for adding a role to a DB instance, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Works with AWS-specific request and error types to interface with the EC2 service.",
      "description_length": 328,
      "index": 544,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.AddSourceIdentifierToSubscription",
      "description": "Handles conversion between native input and HTTP requests for adding a source identifier to an AWS subscription, encoding parameters into query format and setting required request fields. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Works with AWS service-specific signing, ensuring correct request formatting and error parsing for API interactions.",
      "description_length": 415,
      "index": 545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.AddTagsToResource",
      "description": "Handles conversion of input data into AWS HTTP requests for tagging resources, including setting action and version parameters. Processes HTTP responses to extract results or decode specific AWS error formats. Works with structured input messages and error responses tied to AWS API conventions.",
      "description_length": 295,
      "index": 546,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ApplyPendingMaintenanceAction",
      "description": "Handles AWS API requests for applying pending maintenance actions by converting input to HTTP requests and parsing responses. Operates on structured input and output types representing maintenance action messages and results, along with error types for AWS-specific failures. Used to send and process maintenance action updates for AWS resources like databases or instances.",
      "description_length": 374,
      "index": 547,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.AuthorizeDBSecurityGroupIngress",
      "description": "Handles AWS EC2 security group ingress rule authorization by converting input parameters into signed HTTP requests and parsing response data. Processes structured input containing security group details and returns results or specific error types based on API responses. Utilizes HTTP query encoding and decoding to interact with AWS API endpoints.",
      "description_length": 348,
      "index": 548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.BacktrackDBCluster",
      "description": "Handles AWS BacktrackDBCluster operations by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `Types.BacktrackDBClusterMessage.t` and produces output of type `Types.DBClusterBacktrack.t`, with error handling for AWS-specific error responses. Used to construct and interpret API calls for database cluster backtracking in AWS services.",
      "description_length": 409,
      "index": 549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CancelExportTask",
      "description": "Handles conversion between native input and HTTP requests for AWS export task cancellation, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 395,
      "index": 550,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CopyDBClusterParameterGroup",
      "description": "Handles the conversion of input parameters into HTTP requests for copying a DB cluster parameter group, including setting action and version parameters. Processes HTTP responses to extract result data or specific error information based on AWS XML formatting. Operates on structured input and output types defined for DB cluster parameter group operations.",
      "description_length": 356,
      "index": 551,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.CopyDBClusterSnapshot",
      "description": "Handles the conversion of input parameters into HTTP requests for copying a DB cluster snapshot, including setting action and version parameters. Processes HTTP responses to extract result data or specific error information based on AWS XML formatting. Operates on structured input and output types representing the copy operation's parameters and outcomes.",
      "description_length": 357,
      "index": 552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CopyDBParameterGroup",
      "description": "Handles conversion between native input and HTTP requests for copying a DB parameter group, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into internal error representations matching the API specification.",
      "description_length": 360,
      "index": 553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CopyDBSnapshot",
      "description": "Handles the conversion of input parameters into HTTP requests for copying a database snapshot, including setting action and version parameters. Processes HTTP responses to extract result data or specific error information based on AWS XML formatting. Works with structured input and output types representing database snapshot copy operations and internal error representations.",
      "description_length": 378,
      "index": 554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CopyOptionGroup",
      "description": "Handles conversion between native input and HTTP requests for AWS option group copying, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations matching the API specification.",
      "description_length": 333,
      "index": 555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateCustomAvailabilityZone",
      "description": "Handles conversion between native input and HTTP requests for creating a custom availability zone, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 404,
      "index": 556,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBCluster",
      "description": "Handles AWS request signing and HTTP conversion for database cluster creation. Processes input of type `Types.CreateDBClusterMessage.t` and produces HTTP requests with proper encoding, including Action and Version parameters. Decodes HTTP responses into `Types.CreateDBClusterResult.t` or specific error types from XML, validating against defined error codes.",
      "description_length": 359,
      "index": 557,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBClusterEndpoint",
      "description": "Handles conversion between native input and HTTP requests for creating a DB cluster endpoint, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS service conventions. Works with input containing endpoint configuration and outputs the created endpoint details, including error parsing for AWS-specific responses.",
      "description_length": 414,
      "index": 558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBClusterParameterGroup",
      "description": "Handles the conversion of input data into HTTP requests for creating a DB cluster parameter group, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Operates on structured input and output types defined for DB cluster parameter group creation.",
      "description_length": 345,
      "index": 559,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.CreateDBClusterSnapshot",
      "description": "Handles conversion between native input and HTTP requests for creating a database cluster snapshot, including encoding parameters and setting action/version. Processes HTTP responses to extract result data or specific error information based on AWS XML structure. Works with input containing snapshot details and output containing the resulting snapshot metadata.",
      "description_length": 363,
      "index": 560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBInstance",
      "description": "Handles AWS request signing and HTTP conversion for database instance creation. Converts input data into HTTP requests with proper encoding and parses HTTP responses into structured outputs or errors. Processes AWS error responses into native error types based on specified status codes and error definitions.",
      "description_length": 309,
      "index": 561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBInstanceReadReplica",
      "description": "Handles the conversion of input parameters into an HTTP request for creating a read replica of a DB instance, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Works with structured input and output types representing the creation request and result, and internal error representations.",
      "description_length": 388,
      "index": 562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBParameterGroup",
      "description": "Handles AWS request signing and HTTP conversion for database parameter group creation. Processes input of type CreateDBParameterGroupMessage.t and outputs CreateDBParameterGroupResult.t, with error handling for AWS-specific responses. Converts between HTTP requests and native types, including parsing error responses based on status codes and XML content.",
      "description_length": 356,
      "index": 563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBProxy",
      "description": "Handles conversion between native input and HTTP requests for AWS database proxy creation, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types.",
      "description_length": 365,
      "index": 564,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.CreateDBSecurityGroup",
      "description": "Handles AWS EC2 security group creation by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded HTTP requests and responses using specific input and output types derived from AWS API definitions. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 342,
      "index": 565,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBSnapshot",
      "description": "Handles AWS database snapshot creation by converting input parameters into signed HTTP requests and parsing response data. Operates on structured input and output types representing snapshot messages and results, along with error types for AWS-specific failures. Processes HTTP requests and responses for database snapshot operations in AWS services like RDS.",
      "description_length": 359,
      "index": 566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateDBSubnetGroup",
      "description": "Handles the conversion of input data into an HTTP request for creating a DB subnet group, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Operates on structured input and output types defined for DB subnet group creation, and parses AWS error responses into native error representations.",
      "description_length": 391,
      "index": 567,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateEventSubscription",
      "description": "Handles conversion between native input and HTTP requests for AWS event subscription operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 342,
      "index": 568,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateGlobalCluster",
      "description": "Handles the conversion of input data into AWS HTTP requests for creating a global cluster, including proper query encoding and setting action and version parameters. Processes HTTP responses to extract structured output or specific error information based on AWS XML formatting. Works with AWS-specific request and error types, enabling interaction with the AWS API for global cluster management.",
      "description_length": 396,
      "index": 569,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.CreateOptionGroup",
      "description": "Handles conversion between native input and HTTP requests for AWS option group creation, encoding parameters into query format and setting necessary request fields. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 408,
      "index": 570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteCustomAvailabilityZone",
      "description": "Handles the conversion of input parameters into an HTTP request for deleting a custom Availability Zone in AWS, encoding necessary query parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Works with structured input and output types representing the deletion request and its outcome.",
      "description_length": 347,
      "index": 571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBCluster",
      "description": "Handles the conversion of input parameters into HTTP requests for deleting a database cluster, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Operates on structured input and output types representing database cluster deletion messages and results.",
      "description_length": 353,
      "index": 572,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBClusterEndpoint",
      "description": "Handles AWS RDS cluster endpoint deletion by converting input to HTTP requests and parsing responses. Operates on structured input containing endpoint details and returns endpoint data or service-specific errors. Processes HTTP interactions for AWS service signing and response decoding.",
      "description_length": 287,
      "index": 573,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBClusterParameterGroup",
      "description": "Handles AWS API requests for deleting a DB cluster parameter group by converting input to HTTP requests and parsing responses. Operates on structured input containing parameter group identifiers and returns no output upon success. Processes AWS error responses, mapping them to internal error types based on HTTP status and XML content.",
      "description_length": 336,
      "index": 574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBClusterSnapshot",
      "description": "Handles the conversion of input parameters into HTTP requests for deleting a DB cluster snapshot, including encoding and setting necessary query parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Works with structured input and output types representing the deletion request and its outcome.",
      "description_length": 355,
      "index": 575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBInstance",
      "description": "Handles AWS database instance deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded requests and decodes XML responses into structured output or error types. Specifically used to manage interactions with AWS RDS services for instance removal.",
      "description_length": 305,
      "index": 576,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DeleteDBInstanceAutomatedBackup",
      "description": "Handles the conversion of input parameters into HTTP requests for deleting automated backups of database instances, including setting action and version parameters. Processes HTTP responses to extract result data or specific error information based on AWS service conventions. Operates with structured input and output types representing database backup deletion messages and results.",
      "description_length": 384,
      "index": 577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBParameterGroup",
      "description": "Handles AWS API requests for deleting a DB parameter group by converting input to HTTP requests and parsing responses. Operates on structured input representing the parameter group deletion request and returns no output on success. Parses AWS error responses into internal error types for precise error handling.",
      "description_length": 312,
      "index": 578,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DeleteDBProxy",
      "description": "Handles conversion of database proxy deletion requests into HTTP format and decodes responses. Processes input containing proxy identifiers and service-specific parameters, producing structured output or error details. Parses AWS error responses to map them to internal error types based on HTTP status and XML content.",
      "description_length": 319,
      "index": 579,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DeleteDBSecurityGroup",
      "description": "Handles AWS EC2 DB security group deletion by converting input parameters into signed HTTP requests and parsing response data. Operates on structured input representing the security group deletion message and returns no output upon success. Processes HTTP responses to detect and map AWS-specific error codes into internal error representations.",
      "description_length": 345,
      "index": 580,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DeleteDBSnapshot",
      "description": "Handles AWS RDS database snapshot deletion by converting input parameters into signed HTTP requests and parsing response data. Processes input of type `Types.DeleteDBSnapshotMessage.t` and returns results of type `Types.DeleteDBSnapshotResult.t`. Parses HTTP responses and AWS error messages into structured output or error types.",
      "description_length": 330,
      "index": 581,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteDBSubnetGroup",
      "description": "Handles the conversion of input parameters into an HTTP request for deleting a DB subnet group, including setting action and version parameters. Processes HTTP responses to extract results or decode specific AWS error messages. Operates on structured input types and returns no output upon successful execution.",
      "description_length": 311,
      "index": 582,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DeleteEventSubscription",
      "description": "Handles conversion between native input and HTTP requests for AWS event subscription deletion, encoding parameters in query format and setting action-specific headers. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Parses AWS error responses into domain-specific errors, validating status codes and error codes against defined specifications.",
      "description_length": 407,
      "index": 583,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteGlobalCluster",
      "description": "Handles AWS global cluster deletion by converting input to HTTP requests and parsing responses. Operates on structured input and output types representing cluster deletion messages and results. Parses AWS error responses into native error types for specific API validation.",
      "description_length": 273,
      "index": 584,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteInstallationMedia",
      "description": "Handles AWS request signing and HTTP conversion for deleting installation media, using specific input and output types tied to AWS EC2. Converts between native data and HTTP requests, including encoding parameters and parsing responses. Parses AWS error responses into internal error types based on HTTP status and XML content.",
      "description_length": 327,
      "index": 585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeleteOptionGroup",
      "description": "Handles AWS request signing and HTTP conversion for deleting an option group. Converts input parameters into signed HTTP requests and parses HTTP responses into success or error states. Processes AWS error responses into native error types based on specified conditions.",
      "description_length": 270,
      "index": 586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DeregisterDBProxyTargets",
      "description": "Handles AWS API requests for deregistering DB proxy targets by converting input to HTTP requests and parsing responses. Operates on structured input representing the deregistration request and returns no output. Processes HTTP responses to detect and translate AWS-specific errors into internal error types.",
      "description_length": 307,
      "index": 587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeAccountAttributes",
      "description": "Handles AWS request signing and HTTP conversion for account attribute operations. Converts input to HTTP requests with proper encoding and parses HTTP responses into structured account data or specific error types. Works with AWS signature versions, service names, and custom error parsing for API-specific responses.",
      "description_length": 317,
      "index": 588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeCertificates",
      "description": "Handles conversion between native input and HTTP requests for AWS certificate operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured outputs or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 336,
      "index": 589,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeCustomAvailabilityZones",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 custom availability zone operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes error responses by matching status codes and parsing XML into API-defined error representations.",
      "description_length": 378,
      "index": 590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBClusterBacktracks",
      "description": "Handles conversion between native input and HTTP requests for describing DB cluster backtracks, including setting action and version parameters. Processes HTTP responses into structured output or error types specific to the AWS API. Parses AWS error responses into internal error representations based on HTTP status and XML content.",
      "description_length": 333,
      "index": 591,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeDBClusterEndpoints",
      "description": "Handles conversion between native input and HTTP requests for describing DB cluster endpoints, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing endpoint filter criteria and outputs a list of endpoint details.",
      "description_length": 361,
      "index": 592,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBClusterParameterGroups",
      "description": "Handles conversion between native input and HTTP requests for querying DB cluster parameter groups, encoding parameters into query format and setting required action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing parameter group identifiers and outputs structured messages about DB cluster parameters.",
      "description_length": 401,
      "index": 593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBClusterParameters",
      "description": "Handles conversion between native input and HTTP requests for AWS database parameter queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input representing parameter group messages and output containing detailed parameter group information.",
      "description_length": 384,
      "index": 594,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeDBClusterSnapshotAttributes",
      "description": "Handles conversion between native input and HTTP requests for describing DB cluster snapshot attributes, including encoding query parameters and setting action/version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing snapshot identifiers and output returning detailed attribute information.",
      "description_length": 376,
      "index": 595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBClusterSnapshots",
      "description": "Handles conversion between native input and HTTP requests for querying DB cluster snapshots, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS API definitions. Works with input containing snapshot filters and outputs a message structure with snapshot details.",
      "description_length": 364,
      "index": 596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBClusters",
      "description": "Handles conversion between native input and HTTP requests for AWS database cluster queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against API specifications.",
      "description_length": 387,
      "index": 597,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBEngineVersions",
      "description": "Handles conversion between native input and HTTP requests for querying DB engine versions, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the DescribeDBEngineVersionsMessage and DBEngineVersionMessage modules.",
      "description_length": 381,
      "index": 598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBInstanceAutomatedBackups",
      "description": "Handles AWS RDS automated backup metadata retrieval by converting input parameters into signed HTTP requests and parsing response data. Processes input structured as a backup description message and returns output containing backup details or service-specific errors. Decodes HTTP responses into native error types based on defined AWS error codes and status codes.",
      "description_length": 365,
      "index": 599,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBInstances",
      "description": "Handles AWS RDS instance metadata retrieval by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls for services like EC2, using structured input and output types specific to database instance descriptions. Decodes error responses from AWS API calls into native error representations based on HTTP status and XML content.",
      "description_length": 383,
      "index": 600,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBLogFiles",
      "description": "Handles conversion between native input and HTTP requests for AWS database log file operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Utilizes service-specific signing and error parsing to ensure compatibility with AWS API expectations.",
      "description_length": 375,
      "index": 601,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeDBParameterGroups",
      "description": "Handles AWS API requests for describing DB parameter groups by converting input to HTTP requests and parsing HTTP responses. Processes input of type `DescribeDBParameterGroupsMessage.t` and produces output of type `DBParameterGroupsMessage.t`. Parses error responses from AWS into native error types based on HTTP status codes and XML content.",
      "description_length": 343,
      "index": 602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBParameters",
      "description": "Handles conversion between native input and HTTP requests for AWS database parameter operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS services like RDS, using defined message and error types for precise request and response handling.",
      "description_length": 413,
      "index": 603,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeDBProxies",
      "description": "Converts AWS request inputs to HTTP format and handles response decoding for database proxy operations. Processes structured request and response data specific to AWS database proxy APIs. Parses error responses from HTTP bodies and validates them against expected error codes and status codes.",
      "description_length": 293,
      "index": 604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBProxyTargetGroups",
      "description": "Handles conversion between native input and HTTP requests for describing DB proxy target groups, encoding parameters in query format and setting action and version. Processes HTTP responses to extract structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the DescribeDBProxyTargetGroupsRequest and DescribeDBProxyTargetGroupsResponse modules, and error types from Errors_internal.",
      "description_length": 447,
      "index": 605,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBProxyTargets",
      "description": "Handles conversion between native input and HTTP requests for AWS DB Proxy target operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the DescribeDBProxyTargetsRequest and DescribeDBProxyTargetsResponse modules, and internal error representations.",
      "description_length": 428,
      "index": 606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBSecurityGroups",
      "description": "Converts input parameters into an HTTP request for querying DB security group information, encoding necessary parameters and setting the appropriate action and version. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Handles error parsing to map AWS error responses to internal error types, ensuring accurate validation against expected error codes.",
      "description_length": 410,
      "index": 607,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBSnapshotAttributes",
      "description": "Handles conversion between native input and HTTP requests for describing DB snapshot attributes, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing snapshot attribute messages and output returning snapshot attribute results.",
      "description_length": 377,
      "index": 608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBSnapshots",
      "description": "Handles conversion between native input and HTTP requests for querying DB snapshots, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing snapshot filters and outputs a list of DB snapshots, with error parsing tied to AWS-specific error codes.",
      "description_length": 392,
      "index": 609,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeDBSubnetGroups",
      "description": "Handles conversion between native input and HTTP requests for describing DB subnet groups, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing subnet group identifiers and outputs structured subnet group information.",
      "description_length": 366,
      "index": 610,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeEngineDefaultClusterParameters",
      "description": "Handles conversion between native input and HTTP requests for AWS parameter description calls, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing parameter group messages and output yielding result structures, supporting error parsing for API-specific issues.",
      "description_length": 412,
      "index": 611,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeEngineDefaultParameters",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS specifications. Works with input, output, and error types defined for describing engine default parameters in AWS services.",
      "description_length": 371,
      "index": 612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeEventCategories",
      "description": "Handles AWS event category descriptions by converting input to HTTP requests and parsing HTTP responses. Processes input of type `Types.DescribeEventCategoriesMessage.t` and produces output of type `Types.EventCategoriesMessage.t`. Parses AWS error responses into service-specific errors using HTTP status codes and XML content.",
      "description_length": 328,
      "index": 613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeEventSubscriptions",
      "description": "Handles conversion between native input and HTTP requests for AWS event subscription operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Designed for use with AWS services like RDS, parsing and validating error responses according to API specifications.",
      "description_length": 390,
      "index": 614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeEvents",
      "description": "Handles conversion between native input and HTTP requests for AWS event-based APIs, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 357,
      "index": 615,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeExportTasks",
      "description": "Converts AWS DescribeExportTasks input to HTTP requests, handling query encoding and parameter setting. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into native error representations matching the API specification.",
      "description_length": 302,
      "index": 616,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeGlobalClusters",
      "description": "Handles AWS API requests for describing global clusters, including signing, encoding, and decoding HTTP interactions. Processes input of type `Types.DescribeGlobalClustersMessage.t` and produces output of type `Types.GlobalClustersMessage.t`. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 337,
      "index": 617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeInstallationMedia",
      "description": "Handles conversion between native input and HTTP requests for AWS installation media operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 342,
      "index": 618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeOptionGroupOptions",
      "description": "Handles AWS request signing and serialization for describing option groups, including setting the signing version and service name. Converts between native input and HTTP requests, and parses HTTP responses into structured outputs or errors. Processes AWS error responses into specific error types based on status code and XML content.",
      "description_length": 335,
      "index": 619,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeOptionGroups",
      "description": "Handles conversion between native input and HTTP requests for AWS option group operations, encoding parameters into query format and setting required action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service identifiers and custom input/output types to manage EC2 option group descriptions.",
      "description_length": 382,
      "index": 620,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeOrderableDBInstanceOptions",
      "description": "Handles conversion between native input and HTTP requests for querying AWS RDS orderable DB instance options, encoding parameters into query format and setting action/version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 382,
      "index": 621,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribePendingMaintenanceActions",
      "description": "Handles conversion between native input and HTTP requests for AWS maintenance action queries, encoding parameters in query format and setting action-specific headers. Processes HTTP responses into structured output or error types based on AWS API specifications. Parses AWS error responses into domain-specific error types, validating status codes and error codes against expected values.",
      "description_length": 388,
      "index": 622,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeReservedDBInstances",
      "description": "Handles AWS API requests for describing reserved DB instances by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `Types.DescribeReservedDBInstancesMessage.t` and produces output of type `Types.ReservedDBInstanceMessage.t`, with error handling for AWS-specific error responses. Uses defined signature versions and service names to ensure correct request signing and endpoint routing.",
      "description_length": 457,
      "index": 623,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeReservedDBInstancesOfferings",
      "description": "Handles AWS API requests to describe reserved DB instances offerings by converting input to HTTP requests and parsing HTTP responses into structured outputs. Operates on input containing filtering parameters and produces output with details about available DB instance offerings. Parses AWS error responses into internal error types for precise error handling.",
      "description_length": 360,
      "index": 624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DescribeSourceRegions",
      "description": "Handles conversion between native input and HTTP requests for AWS source region operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with input and output types representing source region messages and internal error representations.",
      "description_length": 374,
      "index": 625,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.DescribeValidDBInstanceModifications",
      "description": "Converts input parameters into an HTTP request for querying valid DB instance modifications, setting action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML format. Handles error decoding by matching HTTP status codes with expected error structures from the API specification.",
      "description_length": 337,
      "index": 626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.DownloadDBLogFilePortion",
      "description": "Handles AWS database log file downloads by encoding request parameters into HTTP format and decoding response data. Processes input containing log file identifiers and configuration, returning parsed log content or service-specific errors. Used to retrieve portions of database logs from AWS services like RDS, with error handling tailored to AWS XML responses.",
      "description_length": 361,
      "index": 627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and from strings, along with a list of common errors. Works with a custom error type `t` used to represent application-specific errors. Used to handle error serialization and mapping in API responses and logging.",
      "description_length": 301,
      "index": 628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.FailoverDBCluster",
      "description": "Converts native input data into HTTP requests with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error validation by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 326,
      "index": 629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ImportInstallationMedia",
      "description": "Handles conversion between native input and HTTP requests for AWS import operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Works with AWS service identifiers and request signing versions to ensure correct API interaction.",
      "description_length": 364,
      "index": 630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ListTagsForResource",
      "description": "Handles AWS resource tag listing by converting input to HTTP requests and parsing responses. Processes input of type `Types.ListTagsForResourceMessage.t` and returns output of type `Types.TagListMessage.t`. Parses AWS error responses into service-specific errors using HTTP status codes and XML content.",
      "description_length": 303,
      "index": 631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyCertificates",
      "description": "Handles conversion between native input and HTTP requests for AWS certificate modifications, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 366,
      "index": 632,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyCurrentDBClusterCapacity",
      "description": "Handles AWS RDS cluster capacity modification by encoding and decoding HTTP requests and responses. Processes input containing cluster capacity details and returns cluster information or specific error types. Converts AWS error responses into native error representations based on HTTP status and XML content.",
      "description_length": 309,
      "index": 633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBCluster",
      "description": "Handles AWS RDS cluster modification requests by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded API calls for database cluster configuration changes, using specific input and output types defined in the AWS RDS API. Parses error responses from AWS to identify and return service-specific error conditions.",
      "description_length": 388,
      "index": 634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBClusterEndpoint",
      "description": "Handles AWS RDS cluster endpoint modifications by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific signing versions and service identifiers, and maps AWS error responses to internal error types. Used to dynamically adjust database cluster endpoints in cloud infrastructure workflows.",
      "description_length": 380,
      "index": 635,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.ModifyDBClusterParameterGroup",
      "description": "Handles AWS RDS parameter group modifications by converting input data into HTTP requests and parsing responses. Operates on structured input containing parameter group details and produces output with updated group names. Processes HTTP interactions for API calls, including error decoding and validation against specified AWS error formats.",
      "description_length": 342,
      "index": 636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBClusterSnapshotAttribute",
      "description": "Handles the conversion of input parameters into HTTP requests for modifying a DB cluster snapshot attribute, including setting the appropriate action and version. Processes HTTP responses to extract results or specific error details based on AWS XML formatting. Operates with structured input and output types defined for the ModifyDBClusterSnapshotAttribute API operation.",
      "description_length": 373,
      "index": 637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBInstance",
      "description": "Handles conversion of input parameters for modifying a database instance into HTTP requests, including setting action and version parameters. Processes HTTP responses to extract result data or specific error information based on AWS XML formatting. Works with structured input and output types representing database instance modification messages and results.",
      "description_length": 359,
      "index": 638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBParameterGroup",
      "description": "Handles AWS DB parameter group modifications by converting input to HTTP requests and parsing responses. Processes structured input and output types specific to Amazon RDS parameter groups. Decodes error responses from AWS API calls into native error types for precise handling.",
      "description_length": 278,
      "index": 639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBProxy",
      "description": "Handles conversion between native input and HTTP requests for AWS database proxy modifications, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured outputs or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 342,
      "index": 640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBProxyTargetGroup",
      "description": "Handles conversion between native input and HTTP requests for modifying a DB proxy target group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Utilizes defined input, output, and error types to interact with AWS services like RDS.",
      "description_length": 365,
      "index": 641,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBSnapshot",
      "description": "Handles conversion between native input and HTTP requests for modifying a DB snapshot, including encoding parameters and setting action/version. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with structured input and output types defined in the AWS API for precise snapshot modification operations.",
      "description_length": 354,
      "index": 642,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBSnapshotAttribute",
      "description": "Handles the conversion of input data into HTTP requests for modifying DB snapshot attributes, including setting the appropriate signing method and service. Processes HTTP responses to extract structured output or specific error details based on AWS API definitions. Operates on native types representing the modify DB snapshot attribute message and result, as well as internal error representations.",
      "description_length": 399,
      "index": 643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyDBSubnetGroup",
      "description": "Handles conversion between native input and HTTP requests for modifying a DB subnet group, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing subnet group details and output reflecting modification results.",
      "description_length": 359,
      "index": 644,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyEventSubscription",
      "description": "Handles conversion between native input and HTTP requests for AWS event subscription modifications, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating against expected status codes and error types.",
      "description_length": 394,
      "index": 645,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ModifyGlobalCluster",
      "description": "Handles AWS API requests for modifying a global cluster by converting between native input and HTTP requests, and parsing HTTP responses into structured outputs or errors. Operates on specific AWS request and error types, including query-encoded HTTP requests and XML-decoded error responses. Used to send and process ModifyGlobalCluster API calls in AWS services like RDS.",
      "description_length": 373,
      "index": 646,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.ModifyOptionGroup",
      "description": "Handles conversion between native input and HTTP requests for AWS option group modifications, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Parses AWS error responses into internal error representations, validating against expected status codes and error types.",
      "description_length": 398,
      "index": 647,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.PromoteReadReplica",
      "description": "Handles conversion between native input and HTTP requests for promoting a read replica, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 370,
      "index": 648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.PromoteReadReplicaDBCluster",
      "description": "Converts AWS API input into HTTP requests and parses HTTP responses into structured outputs, handling error decoding based on specified HTTP status codes. Operates on native input and output types representing database cluster promotion messages and results. Used to interface with AWS RDS services for promoting read replicas through HTTP-based API calls.",
      "description_length": 356,
      "index": 649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.PurchaseReservedDBInstancesOffering",
      "description": "Converts input parameters into an HTTP request for purchasing a reserved DB instances offering, encoding necessary query parameters and setting the appropriate action and version. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Works with input and output types representing the purchase request and result, and internal error types for handling API-specific errors.",
      "description_length": 427,
      "index": 650,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RebootDBInstance",
      "description": "Handles the conversion of DB instance reboot requests into HTTP format and processes corresponding responses. Operates on input containing DB instance identifiers and output yielding reboot results, with error parsing tailored to AWS-specific XML responses. Used to issue reboot commands to AWS RDS instances and validate the resulting HTTP interactions.",
      "description_length": 354,
      "index": 651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RegisterDBProxyTargets",
      "description": "Handles conversion between native input and HTTP requests for AWS RDS operations, encoding parameters into query format and setting action and version. Decodes HTTP responses into native output or specific error types based on AWS XML structure. Processes error responses by matching status codes and parsing XML into API-specific error representations.",
      "description_length": 353,
      "index": 652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RemoveFromGlobalCluster",
      "description": "Handles conversion between native input and HTTP requests for removing a cluster from a global cluster, encoding parameters in query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 375,
      "index": 653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RemoveRoleFromDBCluster",
      "description": "Handles AWS RDS operations by converting input parameters into signed HTTP requests for removing a role from a DB cluster, and decoding HTTP responses into appropriate output or error types. Operates on structured input representing the cluster and role configuration, and returns no meaningful output upon success. Used to integrate with AWS RDS API for role management tasks in database systems.",
      "description_length": 397,
      "index": 654,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RemoveRoleFromDBInstance",
      "description": "Handles AWS RDS operations by converting input parameters into signed HTTP requests for removing a role from a DB instance. Processes HTTP responses to extract results or decode specific AWS error messages. Works with structured input types and returns no output upon success.",
      "description_length": 276,
      "index": 655,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RemoveSourceIdentifierFromSubscription",
      "description": "Handles conversion between native input and HTTP requests for removing a source identifier from an AWS subscription, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 425,
      "index": 656,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RemoveTagsFromResource",
      "description": "Handles conversion of input data into HTTP requests for AWS resource tag removal, setting necessary parameters like Action and Version. Processes HTTP responses, decoding them into a unit type or specific error structures. Parses AWS error responses into native error types based on HTTP status codes and predefined error specifications.",
      "description_length": 337,
      "index": 657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.ResetDBClusterParameterGroup",
      "description": "Handles AWS RDS parameter group resets by converting input to HTTP requests and parsing responses. Operates on structured input containing parameter group details and produces output with updated group names. Processes HTTP responses to extract success or error states specific to RDS cluster parameter modifications.",
      "description_length": 317,
      "index": 658,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.ResetDBParameterGroup",
      "description": "Handles AWS DB parameter group reset operations by converting input data into HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `Types.ResetDBParameterGroupMessage.t` and produces output of type `Types.DBParameterGroupNameMessage.t`. Parses error responses from AWS API calls into native error types based on HTTP status codes and XML content.",
      "description_length": 383,
      "index": 659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RestoreDBClusterFromS3",
      "description": "Converts input parameters into an HTTP request for restoring a DB cluster from S3, including setting action and version parameters. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 345,
      "index": 660,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RestoreDBClusterFromSnapshot",
      "description": "Handles the conversion of input parameters into HTTP requests for restoring an Amazon RDS DB cluster from a snapshot, including setting action and version parameters. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Works with input and output types representing the restore operation's parameters and results, and internal error representations for AWS service responses.",
      "description_length": 432,
      "index": 661,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RestoreDBClusterToPointInTime",
      "description": "Handles conversion between native input and HTTP requests for restoring a DB cluster to a specific point in time, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or error types based on AWS service conventions. Parses AWS error responses into domain-specific error representations for precise handling.",
      "description_length": 372,
      "index": 662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.RestoreDBInstanceFromDBSnapshot",
      "description": "Converts input parameters into an HTTP request for restoring a DB instance from a snapshot, including setting action and version parameters. Processes HTTP responses to extract result data or specific error structures defined by the API. Handles error parsing based on HTTP status codes and AWS error formats.",
      "description_length": 309,
      "index": 663,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RestoreDBInstanceFromS3",
      "description": "Converts input parameters into an HTTP request for restoring a DB instance from an S3 bucket, including setting action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML formatting. Handles error decoding by matching HTTP status codes with expected error structures from the API specification.",
      "description_length": 352,
      "index": 664,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RestoreDBInstanceToPointInTime",
      "description": "Handles AWS RDS restore operations by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific input and output types representing restore configurations and results, along with error types for AWS-specific failures. Used to initiate database instance restoration to a specific point in time via HTTP API interactions.",
      "description_length": 381,
      "index": 665,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.RevokeDBSecurityGroupIngress",
      "description": "Handles AWS RDS security group egress revocation by encoding and decoding HTTP requests and responses. Operates on structured input containing security group details and produces output with revocation results. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 289,
      "index": 666,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.StartActivityStream",
      "description": "Handles conversion between native input and HTTP requests for AWS activity stream operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Designed for direct interaction with AWS services requiring request signing and error parsing.",
      "description_length": 369,
      "index": 667,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_rds.StartDBCluster",
      "description": "Handles AWS request signing and HTTP conversion for database cluster operations. Converts input data into signed HTTP requests and parses HTTP responses into structured outputs or specific error types. Processes AWS error responses to map them to internal error representations based on HTTP status and XML content.",
      "description_length": 315,
      "index": 668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.StartDBInstance",
      "description": "Handles AWS API requests for starting a database instance by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific input and output types representing the start instance message and result, along with error types for AWS-specific error responses. Used to construct and interpret requests to the AWS RDS service, ensuring proper encoding and error handling.",
      "description_length": 422,
      "index": 669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.StartExportTask",
      "description": "Handles conversion of input data into AWS HTTP requests for export tasks, including encoding parameters and setting action/version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS conventions. Works with native input and output types representing export task messages and results.",
      "description_length": 333,
      "index": 670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.StopActivityStream",
      "description": "Handles conversion between native input and HTTP requests for stopping an activity stream, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS conventions. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 334,
      "index": 671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.StopDBCluster",
      "description": "Handles AWS RDS cluster termination by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on input containing cluster identifiers and output yielding cluster status updates, with error handling for AWS-specific response formats. Processes HTTP requests and responses for the StopDBCluster API action within the RDS service.",
      "description_length": 387,
      "index": 672,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.StopDBInstance",
      "description": "Handles AWS RDS instance termination by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on input containing instance identifiers and output containing termination status details. Processes AWS error responses, mapping them to internal error types based on HTTP status and XML content.",
      "description_length": 351,
      "index": 673,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds.Types",
      "description": "The module provides a cohesive set of utilities for constructing, parsing, and serializing various AWS-related data structures, including engine versions, security groups, configuration settings, availability zones, resource identifiers, and more. It supports structured types like records, lists, and custom types, with operations to convert between XML, JSON, and query parameters. Examples include validating engine version constraints, processing security group memberships, handling availability zone data, and serializing database parameter groups. These capabilities enable efficient data manipulation and API interaction for cloud infrastructure management.",
      "description_length": 665,
      "index": 674,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "aws-rds",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as HTTP headers, query parameters, and AWS-specific data structures like credentials and region identifiers. Used to interact with AWS S3 for object storage, DynamoDB for NoSQL queries, and EC2 for instance management.",
      "description_length": 383,
      "index": 675,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_rds",
      "description": "The module provides a cohesive set of utilities for constructing, parsing, and serializing AWS-related data structures, including engine versions, security groups, configuration settings, availability zones, and resource identifiers. It supports structured types like records, lists, and custom types, with operations to convert between XML, JSON, and query parameters. Examples include validating engine version constraints, processing security group memberships, handling availability zone data, and serializing database parameter groups. These capabilities enable efficient data manipulation and API interaction for cloud infrastructure management.",
      "description_length": 651,
      "index": 676,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 677,
    "meaningful_modules": 677,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 665,
    "min_description_length": 203,
    "avg_description_length": 332.20236336779914,
    "embedding_file_size_mb": 2.459657669067383
  }
}