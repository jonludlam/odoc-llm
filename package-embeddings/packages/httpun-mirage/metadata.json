{
  "package": "httpun-mirage",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:46.188310",
  "modules": [
    {
      "module_path": "Httpun_mirage.Server",
      "library": "httpun-mirage",
      "description": "Implements HTTP server logic for handling incoming connections over a MirageOS-compatible flow. It provides `create_connection_handler` to process HTTP requests and errors on a given socket, supporting custom configuration, request handlers, and error handling. Designed for use in MirageOS unikernels to serve HTTP traffic directly over network or conduit flows.",
      "description_length": 363,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_mirage.Client",
      "library": "httpun-mirage",
      "description": "This module implements HTTP/1.1 client connections over a MirageOS flow, handling request/response cycles and connection management. It provides functions to create connections, send requests with custom handlers, and manage connection state through shutdown and upgrade operations. Use it to build MirageOS applications that need to perform HTTP client operations over protocols like TCP or TLS.",
      "description_length": 396,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httpun_mirage",
      "library": "httpun-mirage",
      "description": "This module provides HTTP server and client implementations for MirageOS, leveraging Lwt for asynchronous I/O and integrating with Mirage-compatible network stacks. It enables building lightweight web servers, REST APIs, and HTTP clients within unikernels, supporting both incoming and outgoing HTTP/1.1 communication. The server submodule handles incoming connections with customizable request and error handlers, while the client submodule manages outgoing requests and connection state, including shutdown and protocol upgrades. Together, they allow serving and consuming HTTP services directly over TCP, TLS, or other Mirage flows.",
      "description_length": 635,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 635,
    "min_description_length": 363,
    "avg_description_length": 464.6666666666667,
    "embedding_file_size_mb": 0.011319160461425781
  }
}