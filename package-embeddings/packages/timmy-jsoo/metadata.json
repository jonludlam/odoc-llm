{
  "package": "timmy-jsoo",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:33:04.669348",
  "modules": [
    {
      "module_path": "Timmy_jsoo.Date",
      "description": "Encapsulates date-related values with support for day, month, and year components. Provides basic operations for manipulating and comparing date elements. Allows for straightforward handling of calendar dates through direct access to core components. Examples include extracting the day from a date or comparing two date values.",
      "description_length": 328,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Timmy_jsoo.Daytime",
      "description": "Provides a structured way to represent and manipulate time within a single day. Contains basic time operations and utilities for handling time-based logic. Examples include checking if a time falls within a specific range or comparing two time values. No significant data types or complex operations are available.",
      "description_length": 314,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Timmy_jsoo.Time",
      "description": "Provides a unified interface for working with points in time, leveraging Ptime_clock for system time. Includes basic operators and conversion functions from Ptime. Allows creation of time values and manipulation using standard arithmetic operations. Example: compute the difference between two timestamps or format a time value for output.",
      "description_length": 339,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Timmy_jsoo.Timezone",
      "description": "Provides functions to create timezones based on fixed GMT offsets or custom implementations, and to retrieve offset values from dates or timestamps. Works with date-time tuples, Unix timestamps, and IANA timezone names. Used to compute local time offsets for specific historical dates or system-aware time conversions.",
      "description_length": 318,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "timmy-jsoo",
      "description": "Converts Timmy objects to and from JavaScript values, including arrays, records, and closures. Handles type-safe serialization and deserialization of complex data structures like lists and variants. Enables seamless interaction between OCaml and JavaScript code in web applications.",
      "description_length": 282,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Clock",
      "description": "Provides a framework for handling time zones with core data types representing time zones and operations for manipulating them. Includes functions to convert between time zones, adjust time values, and retrieve zone-specific information. Example tasks include converting a UTC time to a local time zone or comparing time values across zones. Supports extension through additional modules for specialized time-related operations.",
      "description_length": 428,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Timmy_jsoo",
      "description": "Combines date, time, and timezone handling with system time support, enabling precise manipulation of temporal data. Offers operations to extract and compare date components, manage time ranges, compute timestamp differences, and determine timezone offsets. Supports conversions between date-time tuples, Unix timestamps, and IANA timezone names. Examples include calculating the duration between two timestamps or determining the local time offset for a historical date.",
      "description_length": 471,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 28,
    "meaningful_modules": 7,
    "filtered_empty_modules": 21,
    "retention_rate": 0.25
  },
  "statistics": {
    "max_description_length": 471,
    "min_description_length": 282,
    "avg_description_length": 354.2857142857143,
    "embedding_file_size_mb": 0.02583789825439453
  }
}