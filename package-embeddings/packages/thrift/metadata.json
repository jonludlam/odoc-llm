{
  "package": "thrift",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:18:37.303251",
  "modules": [
    {
      "module_path": "Thrift.Application_Exn",
      "library": "thrift",
      "description": "This module defines exception types and operations for handling application-level errors in Thrift communication. It includes functions to convert between integer codes and error types, create exceptions with messages, and read exceptions from a protocol stream. It is used to manage errors such as invalid method calls, protocol mismatches, and internal server issues during RPC execution.",
      "description_length": 390,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Thrift.Protocol",
      "library": "thrift",
      "description": "This module defines core Thrift protocol types and conversion functions for serialization and deserialization. It includes enumerated types for Thrift data types (`t_type`), message types (`message_type`), and exception types (`exn_type`), along with bidirectional conversion functions between these enums and integers. It is used to encode and decode Thrift RPC messages, handle type mismatches, and manage protocol-level errors during communication between services.",
      "description_length": 468,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Thrift.Transport",
      "library": "thrift",
      "description": "This module defines exceptions used to handle transport-layer errors in Thrift communication. It includes specific error types such as UNKNOWN, NOT_OPEN, ALREADY_OPEN, TIMED_OUT, and END_OF_FILE. These exceptions are used during network operations like opening connections, reading, and writing data.",
      "description_length": 300,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "TBinaryProtocol",
      "library": "thrift",
      "description": "This module handles low-level binary protocol operations for reading specific bytes and integers from memory buffers. It provides direct access to individual bytes within 32-bit and 64-bit integers and supports type conversion between protocol-specific type identifiers and their integer representations. These functions are used for efficient serialization and deserialization of binary data in network protocols or file formats.",
      "description_length": 430,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "TServer",
      "library": "thrift",
      "description": "Implements a minimal Thrift server that processes binary protocol messages using a provided handler function. Accepts a handler with methods to process incoming requests and send responses, and starts the server on a specified port. Useful for building simple Thrift-based RPC services without additional middleware.",
      "description_length": 316,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Thrift",
      "library": "thrift",
      "description": "This module implements Thrift's communication stack for RPC interactions, handling transport, protocol encoding, and error handling. It works with network transports, binary data streams, and Thrift-defined RPC structures like messages and exceptions. Used to serialize/deserialize Thrift service calls, manage transport errors, and propagate application-level faults across distributed systems.",
      "description_length": 395,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "TFramedTransport",
      "library": "thrift",
      "description": "This module handles frame size encoding and decoding for transport protocols. It operates on 32-bit integers and byte sequences, using a fixed mask value to process frame sizes. Concrete use cases include preparing data for transmission over framed transport layers and parsing incoming frame sizes in network communication.",
      "description_length": 324,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 31,
    "meaningful_modules": 7,
    "filtered_empty_modules": 24,
    "retention_rate": 0.22580645161290322
  },
  "statistics": {
    "max_description_length": 468,
    "min_description_length": 300,
    "avg_description_length": 374.7142857142857,
    "embedding_file_size_mb": 0.10184860229492188
  }
}