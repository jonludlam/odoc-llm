{
  "package": "gapi-ocaml",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 1156,
  "creation_timestamp": "2025-07-16T01:13:46.767608",
  "modules": [
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Details.Args",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing formatted rule result arguments in the PageSpeed Insights API, specifically handling typed values such as URLs, strings, integers, bytes, and durations. It includes functions to serialize and deserialize these arguments to and from JSON, ensuring proper data interchange with the API. Use cases include rendering diagnostic details for web performance rules and parsing API responses into structured argument values.",
      "description_length": 470,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Result.Args",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing formatted result arguments in the PageSpeed Insights API, specifically handling typed values such as URLs, strings, integers, bytes, and durations. It provides operations to access and modify the `_type` and `value` fields using lenses, along with functions to serialize to and deserialize from JSON. This structure is used to capture localized, typed parameter values within rule result URL blocks for reporting and analysis.",
      "description_length": 480,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Result",
      "library": "gapi-ocaml",
      "description": "This module represents formatted result messages in the PageSpeed Insights API, combining a format string with typed arguments that can be rendered into localized output. It supports operations to access and modify the format string, manipulate the argument list, and render the final message, while also handling JSON parsing and serialization. The child module enhances this by defining a structured type for individual arguments, supporting values like strings, integers, URLs, and durations, each with explicit typing and lens-based accessors. Together, they enable structured, type-safe construction and manipulation of rule result messages with support for localization and analysis.",
      "description_length": 689,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Details",
      "library": "gapi-ocaml",
      "description": "This module manages the structured formatting and parsing of localized diagnostic messages from PageSpeed Insights, using JSON models and format strings with positional placeholders. It supports operations to generate human-readable rule violation messages by substituting parameters such as URLs, integers, and durations, which are defined in its child module as typed argument values. The child module provides data types like URL, Int, and Duration, along with serialization functions to convert these values to and from JSON. Together, they enable precise message rendering and API response parsing for web performance diagnostics.",
      "description_length": 635,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Header.Args",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling localized argument values in formatted PageSpeed Insights results. It provides functions to access and modify the type and value fields of an argument, supporting types like URL, STRING_LITERAL, and DURATION. Use this module to extract or format localized rule result arguments when processing PageSpeed Insights API responses.",
      "description_length": 391,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls",
      "library": "gapi-ocaml",
      "description": "This module structures URL-specific performance data from the PageSpeed Insights API, combining a format string and typed arguments for rendering analysis results. It supports JSON serialization and includes optional detailed entries for extended diagnostics. The main types include format strings with positional placeholders and structured arguments like URLs, integers, and durations, which can be accessed and modified using lens-based operations. For example, it can generate localized diagnostic messages by substituting typed parameters into rule violation reports or parse API responses into structured diagnostic data.",
      "description_length": 627,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.ClientSpecificActorInfo.YoutubeActorInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the YouTube-specific actor information for a Google+ activity, specifically capturing the associated YouTube channel ID. It provides functions to access and modify the channel ID, render the data structure to JSON, and parse JSON into the structure. It is used to represent and manipulate YouTube actor details within Google+ API interactions.",
      "description_length": 363,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Thumbnails.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing image thumbnails in the Google+ API, with fields for height, width, URL, and media type. It includes lenses for accessing and modifying individual fields, functions to serialize and deserialize the structure to JSON, and an empty value for initialization. It is used to handle thumbnail metadata attached to activities in the Google+ API responses.",
      "description_length": 402,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Header",
      "library": "gapi-ocaml",
      "description": "This module processes structured header data from PageSpeed Insights API results, enabling the parsing and formatting of localized messages with placeholders. It operates on JSON data models and supports manipulation of format strings and argument lists, allowing substitution of placeholders with values such as URLs, string literals, and durations. The child module provides data structures and functions to access and modify argument types and values, facilitating precise extraction and formatting of localized rule result parameters. Use this module to generate readable performance recommendations by resolving placeholders in API response headers with actual contextual values.",
      "description_length": 684,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload.Protocols.Resumable",
      "library": "gapi-ocaml",
      "description": "This module defines the resumable media upload protocol configuration for API endpoints. It provides accessors to retrieve the upload path and determine if multipart media is supported, along with functions to serialize and deserialize the configuration to and from JSON. It is used to configure and manage resumable uploads in APIs that support this feature, particularly when integrating with services expecting structured JSON payloads.",
      "description_length": 439,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks",
      "library": "gapi-ocaml",
      "description": "This module organizes structured data for URL performance blocks from PageSpeed Insights, managing both a header and a list of URL entries with support for JSON serialization. It structures URL-specific diagnostics using format strings and typed arguments, allowing precise rendering of analysis results through lens-based access and modification. The header processing component handles localized messages with placeholders, enabling substitution of dynamic values like URLs and durations into formatted output. Use it to parse API responses into structured diagnostics, generate localized performance reports, or modify rule violation messages with contextual data.",
      "description_length": 667,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.SendAs.SmimeInfo",
      "library": "gapi-ocaml",
      "description": "This module manages S/MIME configurations for send-as aliases in a Gmail account. It supports operations to delete, retrieve, upload, list, and set default S/MIME settings, working with data types such as `SmimeInfo` and `ListSmimeInfoResponse`. Concrete use cases include configuring email signing and encryption settings for a user's send-as address.",
      "description_length": 352,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.ClientSpecificActorInfo.YoutubeActorInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing YouTube actor information within a Google+ activity. It includes functions to access the YouTube channel ID, render the data as JSON, and parse JSON into the structure. It is used to handle YouTube-specific actor details in Google+ API interactions.",
      "description_length": 299,
      "index": 12,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Auth.Oauth2.Scopes",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates OAuth2 scope descriptions within the API Discovery Service data model. It provides operations to create an empty scope, access and modify its description field, and convert scopes to and from JSON representations. Concrete use cases include parsing OAuth2 scope metadata from API discovery documents and serializing scope descriptions for storage or transmission.",
      "description_length": 399,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Embed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing embedded links within Google+ API activities, with fields for the media type and URL. It provides functions to create an empty embed object, render it into JSON format, and parse JSON data into an embed object. This structure is used to handle embedded content such as images, videos, or external links attached to social media posts.",
      "description_length": 388,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing thumbnail images of actors in Google+ activities. It includes functions to parse and render image data from JSON, and provides access to the image URL. It is used to handle actor profile thumbnails within the Google+ API v1 integration.",
      "description_length": 290,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.ClientSpecificActorInfo",
      "library": "gapi-ocaml",
      "description": "This module handles client-specific actor information for YouTube within Google+ API activities, providing core operations to create, serialize, and parse actor data. It centers around a data type representing a YouTube actor, which includes a channel ID, and supports conversion to and from JSON for integration with API responses. The module enables concrete tasks like extracting channel identifiers from YouTube actors and constructing actor info for serialization. Together with its submodules, it offers a focused interface for managing YouTube-specific actor details in social API workflows.",
      "description_length": 598,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.FullImage",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an image attachment within a Google+ activity, with fields for the image's height, width, media type, and URL. It provides functions to access and modify these fields using lenses, along with operations to serialize and deserialize the structure to and from JSON. It is used to manage full-size images attached to Google+ posts when interacting with the Google+ API v1.",
      "description_length": 419,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable.Rows.C",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a single cell in a Google Analytics API v3 data table row, containing a string value. It includes operations to create an empty cell, access and modify its value, and serialize or deserialize the cell to and from a JSON data model. It is used to process and construct individual cell data when interacting with Google Analytics API responses or requests.",
      "description_length": 408,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Thumbnails",
      "library": "gapi-ocaml",
      "description": "This module represents thumbnail metadata with a structure containing a description, image resource, and URL, along with lenses for field access and JSON serialization. Its image submodule extends this with a detailed thumbnail data structure including height, width, media type, and URL, supporting structured parsing and construction of image attachments in Google+ API activities. Operations include creating, modifying, and serializing thumbnails for use in API responses. Example usage includes extracting image dimensions from a thumbnail or generating JSON payloads for activity updates.",
      "description_length": 594,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.ClientSpecificActorInfo.YoutubeActorInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the YouTube-specific actor information for a comment in the Google+ API, specifically capturing the `channelId` of the actor's YouTube channel. It provides functions to access and modify the channel ID using a lens, create an empty instance, and serialize or deserialize the data to and from JSON. This is used when interacting with Google+ comments to identify and work with YouTube-linked user accounts.",
      "description_length": 425,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload.Protocols.Simple",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling simple media upload protocols in API endpoints. It includes fields to indicate multipart support and the upload path, along with functions to access and modify these fields, render the data to JSON, and parse JSON into the structure. It is used to configure and manage media upload settings for API methods that support direct or multipart uploads.",
      "description_length": 410,
      "index": 21,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Image",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates image attachment data within Google+ API activities. It provides accessors for image properties\u2014height, type, URL, and width\u2014and supports JSON serialization and deserialization. It is used to process and generate image metadata in Google+ activity streams.",
      "description_length": 292,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.Verification",
      "library": "gapi-ocaml",
      "description": "This module defines a verification structure used to represent ad-hoc verification data in activity streams. It includes fields and accessors for handling one-time or manual verification processes, specifically through the `adHocVerified` field. The module supports serialization to and parsing from JSON data models, enabling integration with API responses and requests involving actor verification.",
      "description_length": 400,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema.Variant.Map",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with JSON schema variant maps, specifically providing `empty` to create an empty variant map, `render` to convert a variant map to JSON data, and `parse` to update a variant map from JSON data. It operates on the `t` type, which contains `type_value` and `_ref` fields, and is used to model polymorphic JSON schema structures. Concrete use cases include serializing and deserializing JSON schema variants during API discovery and validation processes.",
      "description_length": 494,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.SiteSearchFilter",
      "library": "gapi-ocaml",
      "description": "This module defines a type with three variants (`Default`, `E`, `I`) to represent site search filtering behavior in a custom search API. It includes functions to convert these filter values to and from string representations. This module is used to specify whether search results should include or exclude specific sites, or use the default behavior, when making search requests.",
      "description_length": 379,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ValueRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering cell values in Google Sheets API responses, including formatted values, unformatted values, and raw formulas. It works with string representations of these options for API requests and responses. Use cases include specifying how to retrieve computed values or formulas from spreadsheet cells when interacting with the Sheets API.",
      "description_length": 371,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling actor profile images in Google+ API comments. It provides access to the image URL and supports JSON serialization and deserialization. Use this module to retrieve, modify, and format actor image data when interacting with Google+ API comment responses.",
      "description_length": 314,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Author.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling post author avatar images in the Blogger API (v2). It provides an avatar URL field, an empty image value, and functions to serialize and deserialize image data to and from JSON. It is used to manage author image metadata when interacting with blog posts via the Blogger API.",
      "description_length": 336,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Cover.CoverInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for handling cover image positioning data in the Google+ API. It provides accessors for `leftImageOffset` and `topImageOffset` using lenses, along with functions to serialize and deserialize cover info to and from JSON. It is used to manage the positional adjustments of cover images specifically for banner layout displays.",
      "description_length": 371,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Page.Author.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling page author avatar images in the Blogger API v2 data model. It provides an avatar URL field, along with functions to construct an empty image, render it to JSON, and parse it from JSON. It is used to manage author image data when retrieving or updating blog post metadata through the Blogger API.",
      "description_length": 358,
      "index": 30,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Adunits.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in an AdSense account. It works with AdSense data types such as `accountId`, `adClientId`, `adUnitId`, and returns a list of `CustomChannels`. A concrete use case is querying which custom channels an ad unit is part of to manage ad targeting and reporting configurations.",
      "description_length": 380,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor",
      "library": "gapi-ocaml",
      "description": "This module models the identity and presentation of actors in social activities, offering structured access to core attributes like ID, display name, profile links, and verification status through composable lenses and serialization functions. It supports direct manipulation of actor data and integrates with JSON for API communication, enabling tasks like extracting profile details or constructing valid actor payloads. The image submodule handles thumbnail rendering and parsing, the YouTube submodule extends functionality with channel-based actor representations, and the verification submodule adds support for ad-hoc verification workflows. Together, these components form a cohesive system for processing and transforming actor information across social platform integrations.",
      "description_length": 785,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.Verification",
      "library": "gapi-ocaml",
      "description": "This module defines a verification structure used to represent ad-hoc verification data in actor activities. It includes fields for one-time or manual verification strings and supports JSON serialization and deserialization. It is used when processing or generating activity data that includes actor verification information, such as parsing or rendering API responses containing verification details.",
      "description_length": 401,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.ForwardingAddresses",
      "library": "gapi-ocaml",
      "description": "This module manages forwarding addresses for a Gmail user account. It supports creating, deleting, retrieving, and listing forwarding addresses, each represented by a `ForwardingAddress.t` structure. Use cases include configuring email forwarding, verifying ownership of forwarding addresses, and managing multiple forwarding destinations for a single mailbox.",
      "description_length": 360,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Drafts.Format",
      "library": "gapi-ocaml",
      "description": "This module defines and converts string representations of draft formatting options in the Gmail API. It works with a polymorphic variant type representing format specifiers like `Full`, `Raw`, or `Minimal`. Concrete use cases include specifying the level of detail when retrieving or manipulating email drafts via the Gmail API.",
      "description_length": 329,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience.StateBasedAudienceDefinition.ExcludeConditions",
      "library": "gapi-ocaml",
      "description": "This module defines the conditions for excluding users from a remarketing audience based on state changes. It includes operations to set and retrieve exclusion duration (TEMPORARY or PERMANENT) and segment criteria that trigger exclusion. It is used to configure audience exclusion rules in Google Analytics API v3 when defining state-based remarketing audiences.",
      "description_length": 363,
      "index": 36,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.Filter",
      "library": "gapi-ocaml",
      "description": "This module defines a filter type for controlling duplicate content filtering in site-restricted searches. It provides `to_string` and `of_string` functions to convert between the filter variants (`Default`, `V0`, `V1`) and their string representations. It is used to configure search requests to either include or exclude duplicate content based on the specified filter value.",
      "description_length": 377,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.UrlDestinationDetails.Steps",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a step in a URL destination goal within the Google Analytics API v3. It includes fields for the step's name, number, and URL, along with lenses for accessing and modifying these fields. The module supports serialization to and from JSON format for integration with API requests and responses.",
      "description_length": 342,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgDominantColor",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing dominant image colors and provides bidirectional conversion between the type and string values. It supports color filtering in image search queries via the CustomSearch API, enabling searches restricted to specific dominant colors. Use cases include filtering image results by color in web or site-specific searches, such as retrieving only \"blue\" or \"white\" dominant images.",
      "description_length": 427,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.ImageMediaMetadata.Location",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for geographic coordinates, including latitude, longitude, and altitude, all as floating-point values. It provides functions to parse and render this data from and to JSON format, enabling integration with Google Drive API responses. It is used specifically to handle image metadata containing geolocation information returned by the Drive API.",
      "description_length": 381,
      "index": 40,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.Name",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a person's name with `familyName` and `givenName` fields, along with lenses for accessing and modifying those fields. It includes functions to serialize a name to JSON format and deserialize JSON data into a name structure. This module is used when handling actor information in Google+ API activities, such as extracting or formatting user names from API responses.",
      "description_length": 420,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.Safe",
      "library": "gapi-ocaml",
      "description": "This module defines and converts string representations of safe search filtering levels for a site-restricted custom search API. It works with a variant type representing safe search modes (`Default`, `High`, `Medium`, `Off`) and provides direct mappings to and from string values. Concrete use cases include configuring safe search settings when making search requests or parsing API responses that include safe search status.",
      "description_length": 427,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Mcf.SamplingLevel",
      "library": "gapi-ocaml",
      "description": "This module defines and converts sampling levels for Google Analytics API v3, specifically for the Mcf data resource. It works with a variant type representing sampling options: `Default`, `FASTER`, and `HIGHER_PRECISION`. These values control the trade-off between query speed and result accuracy when retrieving multi-channel funnel data.",
      "description_length": 340,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ResponseValueRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering cell values in Google Sheets API responses, such as formatted values, unformatted values, or raw formulas. It works with string representations of these options, enabling conversion between human-readable strings and the corresponding enumerated type. Concrete use cases include specifying how to retrieve cell data\u2014either as displayed currency, raw numbers, or formulas\u2014when querying spreadsheet content.",
      "description_length": 447,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Threads.Format",
      "library": "gapi-ocaml",
      "description": "This module defines thread formatting options for Gmail API requests, providing `to_string` and `of_string` functions to convert between string representations and the enumerated type values (`Default`, `Full`, `Metadata`, `Minimal`). It works directly with string and the `t` type to specify how email threads should be retrieved or displayed. Concrete use cases include setting the `format` parameter when fetching threads to control the level of detail returned by the Gmail API.",
      "description_length": 482,
      "index": 45,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.ClientSpecificActorInfo",
      "library": "gapi-ocaml",
      "description": "This module manages client-specific actor information for YouTube comments within the Google+ API, focusing on YouTube-specific metadata such as the actor's channel ID. It provides core operations to create empty actor info, render to JSON, and parse from JSON, enabling seamless integration with comment processing workflows. The child module enhances this functionality by defining a structured representation of YouTube actor data, offering lenses for accessing and modifying the `channelId`, and supporting serialization and deserialization for API interactions. Together, they allow developers to construct, manipulate, and exchange YouTube-linked user data in Google+ comment contexts.",
      "description_length": 691,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Plusoners",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the people who +1'd a Google+ activity, with fields for the self link and total count. It provides functions to parse and render this structure to and from JSON, along with an empty value for initialization. Use cases include retrieving and displaying the number of +1s and navigating to the list of users via the self link.",
      "description_length": 374,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgSize",
      "library": "gapi-ocaml",
      "description": "This module defines image size options for search queries, including values like `Large`, `Medium`, and `Xlarge`. It provides `to_string` and `of_string` functions to convert between string representations and the enumerated type. Use this module to specify image size filters when performing restricted site searches via the CustomSearch API.",
      "description_length": 343,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.Filters",
      "library": "gapi-ocaml",
      "description": "This module manages message filters for a Gmail user, providing operations to create, delete, get, and list filters. It works with `GapiGmailV1Model.Filter.t` for individual filters and `GapiGmailV1Model.ListFiltersResponse.t` for filter collections. Use this module to automate filter management, such as setting up email routing rules or retrieving existing filters for configuration audits.",
      "description_length": 393,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.MajorDimension",
      "library": "gapi-ocaml",
      "description": "This module defines an enumeration for specifying the major dimension of data operations in a Google Sheet, such as whether to read or write data row-wise or column-wise. It includes functions to convert between string representations and the enumerated type. It is used when interacting with the Sheets API to ensure correct orientation of data during read/write operations.",
      "description_length": 375,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ResponseDateTimeRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering date and time values in Google Sheets API responses. It supports converting date-time fields to either serial numbers or formatted strings based on spreadsheet locale. Use cases include controlling how date and time values are returned when reading cell data from a spreadsheet.",
      "description_length": 320,
      "index": 51,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.ContentHints.Thumbnail",
      "library": "gapi-ocaml",
      "description": "This module defines a thumbnail structure with Base64-encoded image data and MIME type, used to represent thumbnail metadata in Google Drive API v3. It includes functions to access and modify fields using lenses, render to JSON, and parse from JSON. This module is used to handle thumbnail information for files in Google Drive, enabling efficient transmission and storage of preview images.",
      "description_length": 391,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults",
      "library": "gapi-ocaml",
      "description": "This module represents structured data for performance rule results, including localized names, impact scores, and associated URL blocks, with support for lens-based access and JSON serialization. It enables parsing API responses into typed diagnostics, modifying rule metadata, and generating localized reports with dynamic message substitution. The URL block submodule structures performance diagnostics using headers and entries, supporting formatted messages and typed arguments for precise result rendering. Use it to process performance suggestions, update impact scores, or produce customized, localized output from analysis data.",
      "description_length": 637,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.ImageMediaMetadata.Location",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing geographic coordinates embedded in image metadata, specifically for handling altitude, latitude, and longitude values. It provides operations to access and modify these individual fields using lenses, and supports serialization to and parsing from JSON data models. It is used when working with geolocation data extracted from or written to image files in a Drive API context.",
      "description_length": 426,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service.UserinfoResource.V2.Me",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` function to retrieve the current user's extended profile information from Google's OAuth2 API. It operates on session data to authenticate the request and returns user details alongside the updated session. Concrete use cases include fetching user identity data, such as email and unique identifiers, for integration with Google services.",
      "description_length": 369,
      "index": 55,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.DateTimeRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering date and time values when retrieving data from Google Sheets. It supports converting date-time fields to either serial numbers or formatted strings based on the spreadsheet's locale. Use cases include handling date-time values in a way that is compatible with external systems or user interfaces expecting specific string or numeric formats.",
      "description_length": 383,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Customchannels.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all ad units within a specified custom channel for an AdSense account. It works with AdSense data types such as `AdUnits`, `Session`, and identifiers like `accountId`, `adClientId`, and `customChannelId`. A concrete use case is fetching ad unit details for reporting or managing ad placements within a specific custom channel.",
      "description_length": 380,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Reports.Saved",
      "library": "gapi-ocaml",
      "description": "This module provides operations to list saved reports and generate reports from saved configurations in an AdSense account. It works with AdSense account identifiers and saved report IDs to retrieve and execute stored reporting queries. Concrete use cases include automating report generation using predefined saved report IDs and enumerating available saved reports for management or auditing purposes.",
      "description_length": 403,
      "index": 58,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Adunits.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in an AdSense account. It works with AdSense data types such as `CustomChannels`, `Session`, and string identifiers for accounts, ad clients, and ad units. A concrete use case is querying which custom channels an ad unit is part of to manage ad targeting and reporting configurations.",
      "description_length": 393,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.SendAs",
      "library": "gapi-ocaml",
      "description": "This module manages send-as aliases and their associated S/MIME configurations for Gmail accounts. It provides operations to create, delete, retrieve, list, update, and verify send-as aliases using `SendAs.t` records, which include email, display name, and SMTP settings, while also supporting S/MIME operations such as uploading, deleting, and setting default signing and encryption configurations through `SmimeInfo` and `ListSmimeInfoResponse`. You can set up verified sender addresses with SMTP validation, programmatically manage email aliases, and configure S/MIME settings for secure email communication. The module integrates alias management with cryptographic settings to support both sender identity and message security workflows.",
      "description_length": 742,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgType",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type `t` representing image types for restricting search results in the CustomSearch API. It includes functions `to_string` and `of_string` for converting between the enumerated values and their string representations. Concrete use cases include specifying image type filters such as `photo`, `face`, or `lineart` when performing restricted searches on websites.",
      "description_length": 396,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgColorType",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing color options for image search restrictions, including color, grayscale, and monochrome. It provides conversion functions `to_string` and `of_string` to map between the type and string representations. This is used to filter image search results by color in the CustomSearch API.",
      "description_length": 331,
      "index": 62,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable.Cols",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates column metadata in a Google Analytics API v3 data table. It provides accessors for the column's `id`, `label`, and `_type`, along with functions to serialize to and deserialize from JSON. It is used to represent and process schema information returned by the Google Analytics API.",
      "description_length": 316,
      "index": 63,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling actor profile images in Google+ API activities. It provides access to the image URL and supports JSON serialization and deserialization. Use cases include retrieving and resizing actor profile photos for display or processing within activity streams.",
      "description_length": 312,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Ga.SamplingLevel",
      "library": "gapi-ocaml",
      "description": "This module defines and converts sampling levels for Google Analytics API v3 queries. It supports three sampling levels: `Default`, `Faster`, and `HigherPrecision`, each controlling the trade-off between query speed and result accuracy. These values are used to specify the desired sampling behavior when retrieving analytics data.",
      "description_length": 331,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.InsertDataOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for inserting data into Google Sheets, specifying whether new data should overwrite existing cells, insert rows, or use the default behavior. It works with string values to serialize or deserialize these options for API requests. Concrete use cases include configuring how data is added to a spreadsheet during batch updates or appending operations.",
      "description_length": 377,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages.Format",
      "library": "gapi-ocaml",
      "description": "This module defines and converts between message format options for Gmail API requests. It works with a variant type representing predefined message formats like `Full`, `Metadata`, and `Raw`. Use it to specify the desired format when retrieving or processing email messages via the Gmail API.",
      "description_length": 293,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.Verification",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates verification data for comment actors in the Google+ API. It includes fields for ad-hoc verification strings and provides functions to parse and render verification data to and from JSON. It is used to handle identity verification information associated with user comments.",
      "description_length": 308,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.ClientSpecificActorInfo",
      "library": "gapi-ocaml",
      "description": "This module manages YouTube-specific actor information within Google+ API activities, providing a data type `t` to represent actor details and operations to construct, parse, and serialize this data. It includes functions to create empty actor instances, convert data to and from JSON, and access specific fields like YouTube channel IDs. The child module enhances this functionality by defining structured accessors and rendering methods tailored to YouTube actor metadata. Together, they enable precise handling of actor data when interacting with Google+ activities originating from YouTube.",
      "description_length": 594,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.SearchType",
      "library": "gapi-ocaml",
      "description": "This module defines a polymorphic variant type `t` with two constructors, `Default` and `Image`, representing search types for a site-restricted search operation. It provides `to_string` and `of_string` functions for converting between the variant type and string representations. This module is used to specify the type of search (e.g., image search) when performing restricted searches on websites via the CustomSearch API.",
      "description_length": 425,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Auth.Oauth2",
      "library": "gapi-ocaml",
      "description": "This module manages OAuth 2.0 authentication metadata for API endpoints, focusing on scope handling and configuration parsing. It supports creating, modifying, and serializing scopes, along with integrating OAuth settings into API discovery and client configuration workflows. Key data types include scopes and JSON configuration structures, with operations for conversion, validation, and access. Examples include parsing scope metadata from discovery documents and configuring API clients with validated OAuth parameters.",
      "description_length": 523,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.Lr",
      "library": "gapi-ocaml",
      "description": "This module defines a set of language-specific search filters as enumerated values and provides bidirectional conversion between these values and their string representations. It supports restricting search results to specific languages by using predefined language codes. Concrete use cases include filtering web searches to return results in a particular language, such as English (`Lang_en`) or Japanese (`Lang_ja`), and dynamically converting user input into the appropriate language filter for API requests.",
      "description_length": 512,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload.Protocols",
      "library": "gapi-ocaml",
      "description": "This module organizes media upload protocols for API discovery, offering core data structures and utilities to define, manipulate, and serialize upload configurations. It supports two primary upload mechanisms through its submodules: resumable uploads with structured JSON handling and path configuration, and simple uploads with direct or multipart support. The main module provides operations to construct and interpret protocol settings, enabling integration with API endpoints that require flexible media upload strategies. For example, you can define a resumable upload configuration with a custom path and JSON serialization, or set up a simple upload with multipart support for direct transfers.",
      "description_length": 702,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.History.HistoryTypes",
      "library": "gapi-ocaml",
      "description": "This module defines types and conversion functions for Gmail API history events. It supports transforming history event types like `LabelAdded`, `LabelRemoved`, `MessageAdded`, and `MessageDeleted` to and from string representations. Use this module when processing mailbox change history from the Gmail API to interpret or serialize event types.",
      "description_length": 346,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ValueInputOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for how input values are interpreted when updating cells in a Google Sheet. It includes variants for raw input, user-entered input, and a default unspecified option. These values control whether data is stored as-is or parsed according to Google Sheets' input rules.",
      "description_length": 294,
      "index": 75,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages.InternalDateSource",
      "library": "gapi-ocaml",
      "description": "This module defines and converts between string representations of internal date sources for Gmail messages, such as `Default`, `DateHeader`, and `ReceivedTime`. It provides concrete mappings to and from string values for use when interacting with the Gmail API's message handling endpoints. These conversions are useful when specifying or interpreting the source of a message's internal date during API requests or responses.",
      "description_length": 426,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Ga.Output",
      "library": "gapi-ocaml",
      "description": "This module defines output formats for API responses, specifically supporting `DataTable` for Google Charts integration and `Json` for standard JSON serialization. It provides conversion functions `to_string` and `of_string` to map between string representations and the enumerated output types. Use cases include formatting analytics data for visualization or programmatic processing.",
      "description_length": 385,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.DirectoryList.Items.Icons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon URLs for API directory entries, specifically providing access to 32x32 and 16x16 icon URLs through lenses. It works with the `t` record type containing two string fields and integrates with JSON data models for serialization and deserialization. Use this module to extract, update, or construct icon URLs when processing API discovery responses.",
      "description_length": 386,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Replies",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling replies to an activity in the Google+ API v1. It provides accessors for the comment count and reply URL, along with functions to serialize and deserialize the data. It is used to manage and interact with reply metadata in activity feeds.",
      "description_length": 299,
      "index": 79,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments",
      "library": "gapi-ocaml",
      "description": "This module handles attachments in Google+ API activities, providing data structures and operations to manage content like images, videos, and links. It supports parsing and rendering JSON for attachments, enabling extraction of metadata and generation of previews. Key types include embeds, images, and thumbnails, with lenses for field access and functions for JSON serialization. Submodules refine these structures, offering detailed handling of image dimensions, thumbnail metadata, and embedded media URLs for use in API interactions.",
      "description_length": 539,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Resharers",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling resharer data in a Google+ activity. It provides lenses to access the `selfLink` and `totalItems` fields, functions to create an empty resharer object, and to serialize or deserialize resharer data to and from JSON. It is used to track and manage the list of users who have reshared a specific activity.",
      "description_length": 365,
      "index": 81,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Customchannels.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units within a specific custom channel of an AdSense account. It works with AdSense data structures such as `AdUnits`, `Session`, and query parameters like `accountId`, `adClientId`, and `customChannelId`. A concrete use case is fetching a paginated list of ad units for reporting or inventory management in an AdSense publisher's custom channel.",
      "description_length": 403,
      "index": 82,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person.Cover.CoverPhoto",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling cover photo data in the Google+ API v1. It provides accessors for the height, URL, and width of a cover photo image, along with functions to serialize and deserialize the data to and from JSON. It is used to retrieve and manipulate the visual properties of a user's cover photo in Google+ profiles.",
      "description_length": 360,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.EventDetails.EventConditions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates event conditions for Google Analytics goals, using fields like comparison type, comparison value, expression, match type, and condition type. It supports operations to create empty conditions, render them into JSON, and parse JSON into condition records. Concrete use cases include configuring event-based goals in Google Analytics by specifying criteria such as category, action, or label matches with given values.",
      "description_length": 452,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages.Attachments",
      "library": "gapi-ocaml",
      "description": "This module handles retrieval of message attachments from a user's Gmail mailbox. It provides the `get` function to fetch a specific attachment by ID, returning the attachment body along with the updated session state. Use this module when processing email attachments, such as extracting files or inline images from received messages.",
      "description_length": 335,
      "index": 85,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.About.AdditionalRoleInfo.RoleSets",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission role sets, specifically handling a primary role and a list of additional roles. It provides operations to access and modify these roles using lenses, construct empty role sets, and convert between JSON representations and internal data models. It is used to manage Drive API permission configurations where roles determine access levels for users or groups.",
      "description_length": 404,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.ContentAdsSettings.BackupOption",
      "library": "gapi-ocaml",
      "description": "This module defines a backup option configuration for AdSense content ads, supporting three types: blank, color, or URL-based fallbacks. It provides accessors for the `color`, `_type`, and `url` fields using lenses, along with functions to serialize (`render`) and deserialize (`parse`) the configuration from JSON. It is used to manage fallback display settings for ad units in AdSense API integrations.",
      "description_length": 404,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable.Rows",
      "library": "gapi-ocaml",
      "description": "This module represents rows of data in a Google Analytics API v3 response, enabling structured access and manipulation of row entries through the `c` lens. It supports serialization and deserialization via `render` and `parse`, working with lists of row data for analysis. A child module handles individual cells, offering creation, value access, and JSON conversion for cell-level operations. Together, they allow parsing API responses, modifying row and cell values, and reconstructing data models for further processing.",
      "description_length": 523,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.Rows.ConversionPathValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a single interaction in a conversion path from the Google Analytics API. It includes fields for the interaction type (e.g., CLICK, IMPRESSION) and the node value (e.g., source, medium), along with functions to access and modify these fields. It is used to process and build conversion path data returned by the API, enabling precise parsing and serialization to JSON.",
      "description_length": 417,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Author.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling comment author avatar URLs in the Blogger API v2. It provides functions to parse and render avatar URL data from JSON, along with an empty value for initialization. It is used to represent and manipulate the image URL of a comment author within the API's data model.",
      "description_length": 328,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.About.ExportFormats",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling export format mappings in the Drive API. It provides functions to specify source and target content types for conversion, supporting use cases like document format transformation (e.g., converting Google Docs to PDF or Word). The module works directly with JSON data models and string-based content type identifiers.",
      "description_length": 380,
      "index": 91,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdStyle.Colors",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates color settings for ad styles in the AdSense Management API. It provides accessors for individual color fields such as background, border, text, title, and url, along with functions to serialize and deserialize these settings to and from JSON. It is used to configure and persist the visual appearance of ads in web applications integrating AdSense.",
      "description_length": 384,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.MetadataResource.Metrics",
      "library": "gapi-ocaml",
      "description": "This module implements the `list` operation to retrieve metadata for metrics available to an AdSense account, working with `GapiService.StandardParameters` and `GapiConversation.Session` to manage request configuration and session state. It directly supports generating performance reports by providing structured metric metadata. A typical use case involves fetching metric definitions to construct valid reporting queries against the AdSense Management API.",
      "description_length": 459,
      "index": 93,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiment.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a Google Analytics view (profile) in the context of experiments. It includes fields for the link's URL (`href`) and its type, which is always \"analytics#profile\". The module provides operations to access these fields, create an empty instance, and convert to and from JSON for API communication.",
      "description_length": 362,
      "index": 94,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.RemarketingAudience",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage remarketing audiences in Google Analytics, including creating, retrieving, updating, and deleting individual audiences, as well as listing all audiences for a web property. It works with `GapiAnalyticsV3Model.RemarketingAudience.t` and `GapiAnalyticsV3Model.RemarketingAudiences.t` data structures, representing single and collections of remarketing audiences. Concrete use cases include configuring targeted marketing campaigns by defining audience segments based on user behavior data in Google Analytics.",
      "description_length": 549,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSource.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link in the Google Analytics API v3, specifically for custom data sources. It includes fields for a URL (`href`) and a type identifier (`_type`), along with operations to access these fields via lenses, create an empty instance, and serialize or deserialize the structure to and from JSON. It is used to navigate to daily uploads or general uploads associated with a custom data source.",
      "description_length": 444,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Drafts",
      "library": "gapi-ocaml",
      "description": "This module manages draft emails in a Gmail mailbox, supporting creation, deletion, retrieval, listing, sending, and updating of drafts using Gmail API v1 data structures such as `Draft.t`, `Message.t`, and `ListDraftsResponse.t`. It includes operations for working with draft content and session state, enabling tasks like composing, editing, and programmatically sending drafts. A child module handles string representations of draft formatting options through polymorphic variants like `Full`, `Raw`, or `Minimal`, which control detail levels when retrieving drafts. Together, these components allow precise manipulation of draft emails and their metadata within the Gmail API.",
      "description_length": 680,
      "index": 97,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.SearchAndReplaceDetails",
      "library": "gapi-ocaml",
      "description": "This module defines a filter configuration for search-and-replace operations in Google Analytics data processing. It includes fields for specifying the target field, search term, replacement term, case sensitivity, and custom dimension index. Use this to construct or modify filters that perform text substitution on specific dimensions in Analytics reports.",
      "description_length": 358,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.Response",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling API method response schemas. It includes functions to parse and render response data using a `_ref` field that references the schema ID. It is used to manage JSON-based API discovery responses in conjunction with the GapiJson module.",
      "description_length": 295,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages",
      "library": "gapi-ocaml",
      "description": "This module manages message operations in a Gmail mailbox, supporting creation, retrieval, modification, and deletion of messages using identifiers, label sets, and content structures. It provides direct access to message manipulation while integrating submodules for handling message formats, internal date sources, and attachments. Use it to automate email organization, import messages, or manage message states, leveraging submodules to specify retrieval formats, control date sources, or extract attachment data. Key operations include sending, labeling, batch updates, and attachment processing via the `get` function for file extraction.",
      "description_length": 644,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSource.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a web property in the Google Analytics API. It includes fields for the hyperlink (`href`) and the type identifier (`_type`), which is fixed to \"analytics#webproperty\". The module provides operations to create an empty instance, render it into JSON, and parse JSON into this structure.",
      "description_length": 351,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.SiteSearchFilter",
      "library": "gapi-ocaml",
      "description": "This module defines a site search filter type with `Default`, `Exclude`, and `Include` options, used to control whether search results include or exclude specific sites. It provides `to_string` and `of_string` functions for converting between the filter type and string representations. This is useful when constructing search queries that target specific websites or exclude unwanted domains.",
      "description_length": 393,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDimension.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link for a custom dimension in the Google Analytics API. It includes fields for the hyperlink reference (`href`) and the type of parent link (`_type`), which is typically \"analytics#webproperty\". The module provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure.",
      "description_length": 378,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.ProfileInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Google Analytics view (profile) metadata. It provides lenses to access and modify fields such as account ID, web property ID, profile ID, and profile name, along with functions to serialize and deserialize the data to and from JSON. It is used to manage and manipulate Analytics profile information during API interactions.",
      "description_length": 385,
      "index": 104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link to a web property in the Google Analytics API v3. It includes fields for the link's URL (`href`) and its type (`_type`), which is fixed to \"analytics#profiles\". The module provides operations to create an empty instance, render it into JSON, and parse JSON into this structure.",
      "description_length": 340,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.ProfileUserLinks",
      "library": "gapi-ocaml",
      "description": "This module manages user access to Google Analytics views by providing operations to add, remove, update, and list user links for a specific profile. It works with profile identifiers and user link data structures to control permissions at the view level. Concrete use cases include granting team members read or edit access to specific analytics profiles and revoking access when roles change.",
      "description_length": 394,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.ClientId",
      "library": "gapi-ocaml",
      "description": "This module provides the `hashClientId` function, which securely hashes a Client ID using the Google Analytics API. It works with `HashClientIdRequest.t` and `HashClientIdResponse.t` data structures, along with API standard parameters and session state. Use this to anonymize client identifiers before sending them to Google Analytics for privacy compliance.",
      "description_length": 358,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Blog.Pages",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling collections of pages in a blog. It provides accessors for the self-link URL and total item count, along with functions to serialize and deserialize the data to and from JSON. It is used when retrieving or updating page lists via the Blogger API.",
      "description_length": 307,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Provider",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing a service provider within an activity context. It provides functions to create an empty provider, set and retrieve the provider's title, and convert the provider to and from a JSON data model. It is used to model the entity responsible for an activity within the Google+ API data structure.",
      "description_length": 356,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData.ColumnHeaders",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling column headers in real-time data responses from the Google Analytics API v3. It provides functions to create, manipulate, and serialize column header records, which include properties such as column type (DIMENSION or METRIC), data type (e.g., INTEGER, DOUBLE), and column name. These operations are used when processing and interpreting real-time analytics data retrieved from the API.",
      "description_length": 448,
      "index": 110,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.Capabilities",
      "library": "gapi-ocaml",
      "description": "This component defines boolean capability flags and lenses for managing user permissions on Google Drive files, including actions like editing, copying, deleting, and sharing. It operates on a record type that encapsulates access control policies, particularly for shared drives, and supports serialization to JSON for integration with external systems or legacy data migration. Use cases include dynamically adjusting permission boundaries, enforcing content restrictions, and synchronizing Drive file policies with third-party authorization systems.",
      "description_length": 551,
      "index": 111,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload",
      "library": "gapi-ocaml",
      "description": "This module handles media upload configurations for API discovery, providing data structures to define protocols, maximum upload sizes, and MIME types. It supports resumable uploads with JSON serialization and path settings, and simple uploads with direct or multipart transfers. You can configure a resumable upload with a custom endpoint path or enable multipart encoding for direct file transfers. Core operations allow parsing, constructing, and rendering upload metadata for REST APIs requiring file uploads.",
      "description_length": 513,
      "index": 112,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.About.StorageQuota",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling storage quota information in the Google Drive API v3. It includes fields for storage limits and usage statistics, with lenses for accessing and modifying individual values. It is used to track and update storage metrics such as total usage, Drive usage, and trashed file usage for a user or organization.",
      "description_length": 366,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Urlchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve URL channels for a specific ad client and account in the AdSense Management API. It works with string identifiers for accounts and ad clients, along with session and parameter types for API communication. Use this module to fetch URL channel data for reporting or inventory management in AdSense publisher workflows.",
      "description_length": 370,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobList.Jobs",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing individual job records within a BigQuery job list. It provides lenses for accessing and modifying job properties such as configuration, state, and statistics, along with functions to serialize and deserialize job data to and from JSON. It works directly with `GapiBigqueryV2Model.JobList.Jobs.t` and `GapiJson.json_data_model`, enabling structured manipulation of job metadata in API responses.",
      "description_length": 438,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Sheets",
      "library": "gapi-ocaml",
      "description": "This module handles sheet-level operations within spreadsheets, specifically supporting the copying of sheets between spreadsheets. It works with spreadsheet identifiers, sheet IDs, and copy request payloads to perform targeted sheet duplication. A concrete use case is moving a sheet from one Google Sheets document to another while preserving its structure and data.",
      "description_length": 368,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.Query",
      "library": "gapi-ocaml",
      "description": "This module defines a query configuration for retrieving multi-channel funnel data from the Google Analytics API. It includes fields for specifying date ranges, dimensions, metrics, filters, and sorting, along with lenses for accessing and modifying individual fields. The `render` and `parse` functions convert query values to and from JSON for API requests.",
      "description_length": 359,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLink.Entity",
      "library": "gapi-ocaml",
      "description": "This module defines the structure of an entity user link in the Google Analytics API v3, encompassing references to account, view (profile), and web property resources. It provides operations to access and manipulate these references using lenses, along with functions to serialize and deserialize the entity to and from JSON data models. Concrete use cases include managing user permissions across Analytics entities and synchronizing user link data with external systems.",
      "description_length": 473,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.FeedAdsSettings",
      "library": "gapi-ocaml",
      "description": "This module defines settings for embedding ads within feeds, including ad position, frequency, minimum word count, and ad type. It provides lenses to access and modify individual fields of the `FeedAdsSettings` record, along with functions to serialize and deserialize the configuration to and from JSON. It is used to configure how and when ads are inserted into content feeds in AdSense.",
      "description_length": 389,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.User.Locale",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling user locale settings in the Blogger API. It provides accessors for country, language, and variant fields, along with functions to serialize and deserialize locale data to and from JSON. It is used to manage user-specific regional and linguistic preferences when interacting with Blogger API resources.",
      "description_length": 363,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.Rows",
      "library": "gapi-ocaml",
      "description": "This module processes structured data from Google Analytics Multi-Channel Funnels, focusing on conversion paths made up of sequences of interactions. It works with lists of `ConversionPathValue` elements and string-based metrics to represent and manipulate user interaction paths leading to conversions. The core functionality allows parsing, rendering, and analysis of MCF data, such as extracting the sequence of clicks or impressions that contributed to a conversion. A child module models individual interactions with type and node value fields, supporting operations like JSON serialization and path traversal for detailed funnel analysis.",
      "description_length": 644,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgColorType",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing color options for image search filters, including `Default`, `Color`, `Gray`, and `Mono`. It provides `to_string` and `of_string` functions for converting between string representations and the enumerated values. This is used to specify image color parameters in API requests for image search queries.",
      "description_length": 353,
      "index": 122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.File.IndexableText",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for text that can be indexed by the Drive API. It includes operations to set or retrieve the text content using a lens, render the data as JSON, and parse JSON input into the structure. It is used to manage searchable text metadata associated with files in Drive.",
      "description_length": 300,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData.Query",
      "library": "gapi-ocaml",
      "description": "This module defines a query structure for fetching real-time data from the Google Analytics API v3. It includes fields for specifying dimensions, metrics, filters, sorting, and result limits, along with lenses for accessing and modifying these fields. The module supports constructing and manipulating query parameters used to retrieve and process real-time analytics data.",
      "description_length": 373,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link to a list of goals for a Google Analytics view. It includes fields for the link's URL (`href`) and its type identifier (`_type`), which is fixed to \"analytics#goals\". The module provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure.",
      "description_length": 353,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive.BackgroundImageFile",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a background image configuration for a Team Drive in Google Drive API v3. It includes fields for specifying an image file ID, cropping coordinates, and width, along with lenses for accessing and modifying these fields. The module supports serialization to and parsing from JSON data models, enabling integration with API requests and responses.",
      "description_length": 394,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Blog.Locale",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing the locale settings of a blog, including country, language, and variant fields. It provides lenses for accessing and modifying these fields, functions for serializing to and deserializing from JSON, and an empty value for initialization. It is used to configure and exchange blog locale information with the Blogger API.",
      "description_length": 374,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllRequest.Rows",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for rows in a BigQuery table data insertion request. It provides lenses to access and modify the optional `insertId` and required `json` fields, which represent a unique row identifier and the row's data respectively. It supports constructing, rendering, and parsing row data for use in batch insertions into BigQuery tables.",
      "description_length": 374,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.User.Picture",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a user's profile picture in the Google Drive API v2. It includes operations to parse and render the picture data from and to JSON format, as well as an empty value for initialization. The primary data type is a record containing a `url` field that points to the picture's image resource.",
      "description_length": 341,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Dataset.Access",
      "library": "gapi-ocaml",
      "description": "This module defines access control settings for datasets in the BigQuery API. It includes fields to specify access by domain, group email, user email, or special groups, along with the role assigned. It supports operations to create, render, and parse access configurations, enabling precise management of dataset permissions.",
      "description_length": 326,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.DatasetList.Datasets",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates dataset entries within a dataset list response from the BigQuery API. It provides accessors via lenses to fields such as dataset reference, friendly name, ID, and resource type, and supports JSON serialization and deserialization. It is used to process and construct dataset list responses when interacting with BigQuery datasets programmatically.",
      "description_length": 383,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive.Capabilities",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage user permissions and capabilities within shared drives, including checking specific access rights (e.g., editing files, managing members), creating empty capability structures, and converting between JSON representations and in-memory models. It works with a record type containing boolean flags for distinct actions, paired with lenses for precise field manipulation. Typical use cases involve validating user permissions or updating access settings in Google Drive integrations.",
      "description_length": 522,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.ImageMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module structures image metadata manipulation through lenses for EXIF properties such as aperture, subject distance, and lens model, while supporting JSON serialization for API compatibility. It operates on a record type capturing technical image data like dimensions, camera settings, and EXIF details, enabling workflows such as photo analysis and metadata-driven organization. A child module handles geolocation data with floating-point latitude, longitude, and altitude, providing JSON parsing and rendering for integration with the Google Drive API. Together, they allow precise access and transformation of image metadata, both locally and in external systems.",
      "description_length": 671,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Plusoners",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for tracking users who have +1'd a comment in the Google+ API. It includes functions to parse and render JSON data, access the total count of +1s, and initialize empty instances. It is used to manage and serialize the plusoners count associated with a comment.",
      "description_length": 314,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Realtime",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` function to retrieve real-time analytics data for a specific view by querying the Google Analytics API. It works with string parameters for dimensions, filters, and metrics, along with session data to maintain conversation state. Use this module to fetch current user activity or live metrics from a Google Analytics profile for immediate insights.",
      "description_length": 379,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.ColumnHeaders",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling column headers in Google Analytics API (v3) responses. It provides lenses to access and modify `columnType`, `dataType`, and `name` fields of a column header, along with functions to serialize to and deserialize from JSON. It is used to interpret and construct column metadata when processing Analytics report data.",
      "description_length": 377,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.AdvancedDetails",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring advanced filter details in Google Analytics API requests. It provides lenses to manipulate fields like extraction expressions, input/output fields, and case sensitivity, along with functions to serialize and deserialize filter configurations. It is used to construct and process complex filters that combine two data fields using custom logic.",
      "description_length": 410,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.CalendarListResource.MinAccessRole",
      "library": "gapi-ocaml",
      "description": "This module defines access roles for calendar sharing, including `Owner`, `Writer`, `Reader`, and `FreeBusyReader`. It provides conversions between these roles and string representations. Use this module to manage permissions when sharing calendars or events with other users.",
      "description_length": 276,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.MetadataResource.Columns",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve all columns available for a specified report type in the Google Analytics API v3. It works with the `GapiAnalyticsV3Model.Columns.t` data structure and requires a session for authentication. Use this to programmatically access metadata about the columns that can be used in Analytics reports.",
      "description_length": 345,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Segments",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve segments accessible to a user in Google Analytics. It works with `GapiAnalyticsV3Model.Segments.t` and session data for authentication. Use it to fetch a paginated list of segments from Google Analytics for analysis or reporting.",
      "description_length": 282,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive.Restrictions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates restrictions applied to shared drives in the Google Drive API v3. It includes boolean flags to control permissions such as copying, domain access, and folder sharing, along with a field for download restrictions. Use cases include configuring access control policies and parsing or rendering restriction settings for API requests.",
      "description_length": 366,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Lr",
      "library": "gapi-ocaml",
      "description": "This module defines a type `t` representing language codes for search results, with variants for languages like Arabic, German, Spanish, and others. It includes `to_string` and `of_string` functions to convert between the type and string representations. Use this type to specify the desired language in search queries, ensuring results are filtered to that language.",
      "description_length": 367,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.ContentHints",
      "library": "gapi-ocaml",
      "description": "This module handles content hints for files in the Google Drive API, providing data structures and operations to manage indexable text and custom thumbnails. It supports creating, parsing, and rendering these hints in JSON, influencing file searchability and visual representation. The thumbnail submodule extends this functionality with Base64-encoded image data and MIME type handling, using lenses for field access and modification. Examples include setting searchable text snippets and attaching preview images when uploading or modifying files.",
      "description_length": 549,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.EventsResource.SendUpdates",
      "library": "gapi-ocaml",
      "description": "This module defines options for controlling notification behavior when updating calendar events. It provides conversions between string representations and enumerated types for specifying recipient policies. Use this when configuring whether event update notifications are sent to all guests, only external guests, or none.",
      "description_length": 323,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.MetadataResource.Dimensions",
      "library": "gapi-ocaml",
      "description": "This module implements the `list` operation to retrieve metadata for dimensions available to an AdSense account, working with `GapiService.StandardParameters` and `GapiConversation.Session` to manage request configuration and state. It directly handles interactions with the AdSense Management API v1.4, specifically for querying dimension metadata. Concrete use cases include retrieving dimension attributes and metadata for reporting and analytics customization within an AdSense publisher's inventory.",
      "description_length": 504,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Account.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link in the Google Analytics API v3, specifically for linking accounts to web properties. It includes fields for the URL (`href`) and the type of link (`_type`, fixed to \"analytics#webproperties\"). The module provides functions to construct an empty link, render it to JSON, and parse JSON into a link object, enabling interaction with the API's hierarchical data model.",
      "description_length": 428,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.FilesResource.Corpus",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing different file corpora in Google Drive, such as files owned by or shared to the user, and files shared to the user's domain. It includes functions to convert between the type and string representations. Use this type to specify the corpus when querying files in Google Drive, such as filtering files by ownership or domain sharing.",
      "description_length": 383,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.ShortcutDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling shortcut metadata in Google Drive API v3. It provides accessors (`targetId`, `targetMimeType`, `targetResourceKey`) to retrieve fields from a `ShortcutDetails` record and supports JSON serialization and deserialization via `render` and `parse`. It is used to manage shortcuts pointing to files, capturing target file information at creation time.",
      "description_length": 408,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.AgeRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing age ranges with optional upper and lower bounds, specifically used in the Google+ API v1. It provides functions to create an empty age range, access and modify `min` and `max` values via lenses, and convert between JSON and the internal representation. Concrete use cases include parsing and serializing age range data when interacting with Google+ API endpoints that require or return age-based filtering information.",
      "description_length": 472,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.Request",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a request schema reference within an API discovery document. It includes fields for the schema ID (`_ref`) and a parameter name, along with operations to access and modify these fields via lenses. The module supports serialization to and from JSON data models, enabling integration with API discovery workflows.",
      "description_length": 361,
      "index": 150,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiUrlshortenerV1Service.UrlResource.Projection",
      "library": "gapi-ocaml",
      "description": "This module defines a set of projection options for retrieving URL resource data from the URL Shortener API. It supports operations to convert these projection values to and from string representations. Use this module when specifying the level of detail needed for URL analytics, such as click counts, top string counts, or full analytics with timestamps.",
      "description_length": 356,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module manages custom channels within an AdSense account's ad client, offering `get` and `list` operations to retrieve individual or all custom channels for a given ad client. It works with the `CustomChannel.t` and `CustomChannels.t` data structures, enabling publishers to programmatically access and manage channel configurations. The child module extends this functionality by allowing the retrieval of all ad units within a specific custom channel using identifiers like `accountId`, `adClientId`, and `customChannelId`. Together, they support tasks such as reporting and managing ad placements across custom channels.",
      "description_length": 628,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.PeopleResource.Collection",
      "library": "gapi-ocaml",
      "description": "This module defines a collection of person lists with specific visibility and relationship criteria for use in Google+ API interactions. It supports operations to convert between string representations and enumerated types, facilitating API requests for retrieving people data. Concrete use cases include fetching lists of connected users, visible contacts, or activity participants based on +1s or reshares.",
      "description_length": 408,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema.Variant",
      "library": "gapi-ocaml",
      "description": "This module defines a variant schema structure for handling polymorphic JSON data in API discovery, using a discriminant field to determine the correct schema for parsing. It provides operations to create an empty variant schema, render it to JSON, and parse JSON data based on the configured discriminant and schema map. The child module focuses on variant maps, offering `empty`, `render`, and `parse` functions to manage mappings between type identifiers and schemas, supporting serialization and deserialization during API validation. Together, they enable modeling and manipulating JSON schemas that support multiple types distinguished by a specific field.",
      "description_length": 662,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Creator",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling event creators in the Calendar API (v3). It provides lenses to access and modify the `id`, `email`, `displayName`, and `self` fields of a creator, along with functions to serialize and deserialize creator data for API communication. It is used to represent and manipulate the creator information of calendar events, specifically for reading and writing event metadata in JSON format.",
      "description_length": 445,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.VisitTimeOnSiteDetails",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring time-on-site goals in Google Analytics. It includes fields to specify a comparison type (`LESS_THAN` or `GREATER_THAN`) and a numeric threshold value in seconds. These values determine whether a session duration meets the goal condition, enabling precise tracking of user engagement durations.",
      "description_length": 360,
      "index": 156,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.File.Labels",
      "library": "gapi-ocaml",
      "description": "This module defines a set of boolean flags that represent user-specific and system-defined metadata for files in the Drive API. It includes operations to access and modify individual label fields using lenses, render labels into JSON format, and parse JSON data into label records. These labels are used to track file state such as whether it is starred, trashed, or viewed, enabling precise control and synchronization of file metadata across client and server.",
      "description_length": 462,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive.Capabilities",
      "library": "gapi-ocaml",
      "description": "This module provides access control checks and capability flag manipulation for Team Drive permissions, using boolean fields to represent actions like file modification, member management, and restriction resets. It operates on a record type with lenses for precise field access, alongside JSON serialization for API communication and a default capability template. Common use cases include validating user permissions before performing Team Drive operations and synchronizing capability states with remote storage.",
      "description_length": 515,
      "index": 158,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Labels",
      "library": "gapi-ocaml",
      "description": "This module manages labels in a user's mailbox by providing operations to create, delete, retrieve, list, and update labels. It works with label identifiers, user identifiers, and label data structures defined in the Gmail API model. Use this module to organize emails with custom labels, modify label properties, or remove obsolete labels from a user's mailbox.",
      "description_length": 362,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Author",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates author data in the Blogger API v2, including display name, identifier, avatar, and profile URL, with lenses for field access and JSON serialization. Its avatar submodule handles image metadata, offering a URL field and empty image value alongside JSON conversion functions. Together, they support operations like extracting an author's display name, updating their profile URL, or rendering their avatar from API responses. The combined interface enables full management of author information and associated media when processing blog posts.",
      "description_length": 580,
      "index": 160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Ga",
      "library": "gapi-ocaml",
      "description": "This module retrieves Google Analytics data for a specified view using parameters like date range, dimensions, metrics, and filters. It operates on session state, output format, and sampling level, returning structured results that support reports on user activity, traffic sources, and conversion metrics. The child module on sampling levels allows control over query speed and accuracy with options like `Default`, `Faster`, and `HigherPrecision`, while the output format module enables serialization in `DataTable` for visualizations or `Json` for programmatic use. Example uses include generating time-bound analytics reports and integrating data with dashboards via structured output.",
      "description_length": 689,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Place.Address",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling physical addresses in the Google+ API data model. It provides functions to parse and render address data in JSON format, specifically working with a record type that includes a formatted address string. It is used to manage address information retrieved from or sent to the Google+ API, ensuring correct data representation during API interactions.",
      "description_length": 410,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.VideoMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for video metadata, including width, height, and duration in milliseconds. It provides functions to parse and render this metadata from and to JSON format. The module is used to handle video-specific metadata returned by the Google Drive API when accessing file properties.",
      "description_length": 310,
      "index": 163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLink.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines the permissions structure for a user linked to an entity in the Google Analytics API. It provides access to two lists of permissions: `effective`, which includes all permissions a user has through assignment, inheritance, or implication, and `local`, which contains only the permissions explicitly set at the current entity level. These permissions are used when managing user access to analytics data, allowing precise control over what a user can do at a specific level without including inherited or derived rights.",
      "description_length": 538,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Adclients",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve ad client information and generate ad code for AdSense accounts. It works with AdSense account identifiers and ad client resources, handling pagination for large result sets. Concrete use cases include fetching a list of ad clients for reporting and retrieving auto-generated ad code for a specific client.",
      "description_length": 350,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.LinkShareMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines metadata related to link sharing for files in the Google Drive API v3. It includes boolean fields indicating whether a file is eligible for security updates and whether security updates are enabled. These fields are accessed and modified using lenses, and the module supports parsing from and rendering to JSON data models.",
      "description_length": 343,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgSize",
      "library": "gapi-ocaml",
      "description": "This module defines image size options for search queries, including values like `Huge`, `Large`, and `Icon`. It provides conversions between these size values and their string representations. Use this module to specify image size filters when performing searches with the CustomSearch API.",
      "description_length": 291,
      "index": 167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.CustomchannelsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units associated with a specific custom channel in an AdSense account. It works with parameters such as `adClientId`, `customChannelId`, and pagination options to filter and control the result set. Concrete use cases include fetching ad unit data for reporting, inventory management, or integration with external systems that require detailed AdSense performance metrics.",
      "description_length": 428,
      "index": 168,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service.JobsResource.Projection",
      "library": "gapi-ocaml",
      "description": "This module defines projection options for job resources in the BigQuery API, controlling the amount of data returned in responses. It works with the `t` type, which includes `Default`, `Full`, and `Minimal` projections, and provides conversion functions `to_string` and `of_string`. Use this module when specifying the level of detail needed for job data retrieval, such as fetching full job configurations or minimal metadata.",
      "description_length": 428,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.UserDeletionResource.UserDeletionRequest",
      "library": "gapi-ocaml",
      "description": "This module handles user deletion requests in the Google Analytics API. It provides the `upsert` function to insert or update a user deletion request, working with `UserDeletionRequest.t` and session data. Use it to manage user data removal directly within Google Analytics.",
      "description_length": 274,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableList.Tables",
      "library": "gapi-ocaml",
      "description": "This module defines a record type representing a table in a BigQuery dataset, including fields such as `friendlyName`, `id`, `kind`, `tableReference`, and `_type`. It provides lenses for accessing and modifying these fields, along with functions to serialize and deserialize table data to and from JSON. It is used to manage metadata when listing or retrieving individual tables within a project.",
      "description_length": 396,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Auth",
      "library": "gapi-ocaml",
      "description": "This module defines and manages OAuth 2.0 authentication data, enabling the construction, serialization, and modification of credentials and scopes through lenses and JSON operations. It includes core types like authentication configurations and scopes, with functions to validate, convert, and access their properties, supporting workflows such as client setup and discovery document parsing. The child module enhances this by focusing on scope metadata handling, offering utilities to create, update, and serialize scopes alongside OAuth settings for API discovery and client integration. Together, they enable tasks like configuring API clients from validated OAuth parameters and extracting scope metadata from JSON discovery documents.",
      "description_length": 740,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling blog references within posts using the Blogger API v2. It provides an empty blog reference, parses and renders blog data from JSON, and accesses the blog identifier. It is used to associate posts with specific blogs by their numeric IDs.",
      "description_length": 299,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.ReportsResource.Saved",
      "library": "gapi-ocaml",
      "description": "This module handles operations for retrieving and listing saved AdSense reports. It works with `SavedReports` and `AdsenseReportsGenerateResponse` data types, interacting with the AdSense Management API to fetch report data based on saved report IDs. Concrete use cases include generating reports from existing saved report configurations and enumerating all saved reports available in an AdSense account.",
      "description_length": 405,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.SearchType",
      "library": "gapi-ocaml",
      "description": "This module defines the `SearchType` variant, which includes `Default` and `Image` for specifying search types in the CustomSearch API. It provides `to_string` and `of_string` functions to convert between string representations and the variant type. This is used to set the `searchType` parameter when making requests to differentiate between regular and image searches.",
      "description_length": 370,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.ImageMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module provides lens-based accessors and JSON serialization for structured image metadata, including camera settings, geolocation, and exposure parameters. It operates on a strongly-typed record with support for default values and bidirectional JSON conversion, enabling functional manipulation of fields like aperture and focal length. The geolocation submodule extends this functionality with specific handling for altitude, latitude, and longitude, allowing precise geographic data extraction and modification. Use cases include processing metadata from Google Drive API responses, transforming immutable metadata records, and embedding or reading spatial coordinates in image files.",
      "description_length": 691,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.AccountSummaries",
      "library": "gapi-ocaml",
      "description": "This module lists account summaries that include accounts, properties, and profiles accessible by the user, using parameters like `max_results` and `start_index` for pagination. It operates on `GapiAnalyticsV3Model.AccountSummaries.t` and session data to retrieve lightweight tree structures from Google Analytics. A typical use case involves fetching a paginated overview of all Google Analytics accounts a user can access, including associated properties and profiles.",
      "description_length": 470,
      "index": 177,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.Corpus",
      "library": "gapi-ocaml",
      "description": "This module defines corpus types for filtering files in the Drive API, specifically `Default`, `DEFAULT`, and `DOMAIN`. It provides conversions between these corpus types and strings using `to_string` and `of_string`. Use these functions when specifying or parsing corpus filters in file search or listing operations.",
      "description_length": 317,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.MakeMonadCombinators.Infix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for monadic composition, enabling sequential chaining of monadic actions. It works with any monad implementing the `m` type constructor and provides the `(>>=)` operator for binding values within a monadic context and `(>>)` for sequencing actions without binding. Concrete use cases include writing concise, readable code for asynchronous or effectful computations, such as handling optional values, error propagation, or I/O operations, by flattening nested monadic expressions.",
      "description_length": 516,
      "index": 179,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReport.CloudStorageDownloadDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Cloud Storage download details in Google Analytics API responses. It provides accessors for bucket and object IDs, along with functions to serialize and deserialize the data to and from JSON. It is used when retrieving or configuring storage locations for unsampled report data transfers.",
      "description_length": 350,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Organizations",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates organizational data associated with a person in the Google+ API. It provides accessors (lenses) for fields such as organization name, role title, start and end dates, and employment type, allowing precise updates and extraction of specific details. Use cases include parsing and rendering organization entries from API responses, tracking a user's work or educational history, and identifying a person's primary organization.",
      "description_length": 461,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search.SearchInformation",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates search metadata returned by the CustomSearch API, including formatted time, total results, and numeric search duration and counts. It provides lenses for accessing and modifying individual fields, functions to parse and render JSON data, and an empty value for initialization. Concrete use cases include extracting search statistics from API responses and serializing them for display or further processing.",
      "description_length": 443,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgDominantColor",
      "library": "gapi-ocaml",
      "description": "This module defines a set of color values used to filter image search results by dominant color. It provides conversion functions `to_string` and `of_string` for mapping between color variants and their string representations. Concrete use cases include specifying dominant color parameters in image search queries, such as restricting results to \"blue\" or \"white\" dominant images.",
      "description_length": 381,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Result.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing image metadata returned by the CustomSearch API, including properties like byte size, dimensions, and thumbnail links. It provides lenses for accessing and modifying individual fields, along with functions to serialize to and deserialize from JSON. It is used to process and manipulate image search results within API responses.",
      "description_length": 378,
      "index": 184,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.User.Blogs",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling a user's blog list in the Blogger API v2. It includes functions to parse and render blog data in JSON format, along with a lens for accessing the `selfLink` field. It is used to manage the URL pointing to a user's collection of blogs as part of API data exchange.",
      "description_length": 325,
      "index": 185,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service.JobsResource.StateFilter",
      "library": "gapi-ocaml",
      "description": "This module defines an enumeration for filtering job states in the BigQuery API, including `Default`, `Done`, `Pending`, and `Running`. It provides functions to convert these state filters to and from string representations. Use this module to specify job state criteria when interacting with BigQuery job management operations.",
      "description_length": 328,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Place.Position",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for geographic coordinates with `latitude` and `longitude` fields. It provides functions to create an empty position, render it into JSON format, and parse JSON data into a position record. It is used to represent and manipulate location data for places in the Google+ API.",
      "description_length": 310,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.AdditionalRoleInfo",
      "library": "gapi-ocaml",
      "description": "This module manages additional role information for Google Drive API v2, providing data structures and operations to parse, render, and manipulate role sets and content types. It includes lenses for accessing and modifying roles, along with utilities to convert between JSON and internal models. The child module focuses on permission role sets, handling a primary role and a list of additional roles, enabling precise control over Drive access configurations. Together, they support constructing and transforming complex permission structures for Drive content.",
      "description_length": 562,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.CustomChannel.TargetingInfo",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring ad targeting settings in the AdSense API. It includes fields for specifying where ads appear, their descriptions, geographic placement, and site language, using string-based enums for valid location values. Functions allow creating empty configurations, rendering them to JSON, and parsing JSON responses for content and mobile ad placements.",
      "description_length": 409,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience.StateBasedAudienceDefinition",
      "library": "gapi-ocaml",
      "description": "This module organizes state-based audience definitions for remarketing, combining core logic with exclusion rules to build dynamic targeting criteria. It supports operations to define audience inclusion based on user behavior or session data, while its child module handles exclusion conditions, including duration and segment-based triggers. You can use it to configure structured audience definitions in Google Analytics v3, such as creating temporary or permanent exclusion lists based on user state changes. Key data types include audience segments, state transition rules, and exclusion policies encoded in JSON models.",
      "description_length": 624,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Alerts",
      "library": "gapi-ocaml",
      "description": "This module handles alert management for AdSense accounts by providing operations to list and dismiss alerts. It works with string identifiers for accounts and alerts, along with session data for API communication. Concrete use cases include retrieving active alerts for a specific AdSense account and dismissing a specific alert by its ID.",
      "description_length": 340,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive.Restrictions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates restrictions applied to a Team Drive in the Google Drive API v3. It includes fields such as `copyRequiresWriterPermission`, `domainUsersOnly`, and `teamMembersOnly` to control access and sharing behaviors, along with lenses for accessing and modifying these fields. It is used to enforce policies like restricting downloads, limiting sharing capabilities, and managing user access based on domain or team membership.",
      "description_length": 452,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor",
      "library": "gapi-ocaml",
      "description": "This module represents actors in Google+ comments, capturing identity, display properties, and verification status. It provides lenses and operations to access and modify actor fields such as ID, display name, image, and URL, along with JSON parsing and rendering capabilities. The actor image submodule handles image URLs and their serialization, enabling retrieval and formatting of profile images. The YouTube-specific submodule manages channel IDs and client data, while the verification submodule supports identity verification strings, allowing full manipulation and exchange of actor metadata in comment workflows.",
      "description_length": 621,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.WebPropertyAdWordsLinks",
      "library": "gapi-ocaml",
      "description": "This module manages AdWords links associated with web properties in Google Analytics. It provides functions to create, retrieve, update, and delete specific web property-AdWords links, as well as list all links for a given web property. The operations work with `EntityAdWordsLink` and `EntityAdWordsLinks` data structures, representing individual links and collections of links, respectively. Use cases include integrating AdWords account data with Google Analytics web properties and managing link configurations programmatically.",
      "description_length": 532,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Promotion.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing image metadata in search results, with fields for height, source URL, and width. It provides functions to parse and render image data to and from JSON format. Use this module when handling image promotions from the CustomSearch API to extract or serialize image dimensions and source information.",
      "description_length": 350,
      "index": 195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Experiments",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage experiments in Google Analytics, including creating, retrieving, updating, and deleting experiments for a given account, web property, and profile. It works with experiment identifiers and experiment data models to perform operations within a session context. Concrete use cases include managing A/B testing configurations and tracking experiment changes in Google Analytics.",
      "description_length": 416,
      "index": 196,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Account.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission data for Google Analytics accounts, specifically tracking effective permissions as a list of strings. It provides operations to create an empty permission set, extract or update the effective permissions list, and serialize or deserialize the data to and from JSON. Concrete use cases include managing user access levels and validating permissions when interacting with Analytics account resources.",
      "description_length": 445,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.History",
      "library": "gapi-ocaml",
      "description": "This module retrieves chronological records of mailbox changes, supporting filters like history types, label IDs, and start history IDs, and returns structured responses with history entries and pagination tokens. It processes Gmail mailbox events such as message additions, deletions, and label changes, using types defined in its child module to represent and serialize event data. The child module handles conversion between string representations and typed values for history event types like `LabelAdded` or `MessageDeleted`. Together, they enable tracking and interpretation of user mailbox modifications over time.",
      "description_length": 621,
      "index": 198,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Gadget",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for embedding gadgets within calendar events, supporting fields like URL links, display modes, dimensions, and preferences. It provides lenses for accessing and modifying individual properties, along with functions to serialize and deserialize gadget data for API interactions. Use this module to attach interactive elements such as icons or external tools to calendar events, with support for HTTPS links and layout control.",
      "description_length": 462,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.App.Icons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon metadata for applications in the Drive API v2. It provides accessors for the icon's category, URL, and size, along with functions to serialize and deserialize icon data to and from JSON. It is used to represent and process icons associated with Drive applications, including distinguishing between application, document, and shared document icons.",
      "description_length": 388,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.Query",
      "library": "gapi-ocaml",
      "description": "This module defines a query structure for interacting with the Google Analytics API v3, allowing users to specify parameters such as dimensions, metrics, date ranges, filters, and sorting. It provides lenses for accessing and modifying individual fields, as well as functions to serialize and deserialize queries to and from JSON. It is used to construct and manipulate API requests for retrieving and analyzing web traffic data.",
      "description_length": 429,
      "index": 201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Endpoints",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with endpoint data structures that include location, deprecation status, description, and URL. It provides lenses for accessing and modifying individual fields, functions to parse and render endpoint data from and to JSON, and an empty value for initializing endpoints. Concrete use cases include processing API endpoint configurations from JSON responses and constructing endpoint objects for service discovery.",
      "description_length": 455,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Permission.TeamDrivePermissionDetails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission details specific to Team Drives in the Google Drive API v3. It includes fields such as `teamDrivePermissionType`, `inheritedFrom`, `role`, and `inherited`, along with lenses for accessing and modifying these fields. It is used to serialize and deserialize Team Drive permission data when interacting with the API, particularly during permission management operations.",
      "description_length": 414,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Reports",
      "library": "gapi-ocaml",
      "description": "This module generates AdSense performance reports with customizable parameters like date ranges, metrics, and filters, and supports report execution from saved configurations. It operates on account data to produce structured JSON or CSV output, enabling tasks like revenue analysis by ad unit or traffic source tracking. The main data types include report queries, account identifiers, and saved report references, with operations to list, execute, and export reports. Specific examples include exporting filtered performance data for external analysis and automating recurring reports using predefined saved configurations.",
      "description_length": 625,
      "index": 204,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Page.Author",
      "library": "gapi-ocaml",
      "description": "This module manages author information for a Blogger API page resource, combining core author data with support for nested structures like avatar images. It defines an author type with display name, identifier, avatar, and profile URL, along with lenses for field access and modification. The module includes functions to parse and render author data to and from JSON, enabling integration with the Blogger API. Specific operations include extracting an author's display name, updating their avatar URL, or serializing a full author object for API requests.",
      "description_length": 557,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceGettokenRequest.Site",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying a site resource in a token generation request. It includes fields for the site identifier (URL or domain name) and its verification type (SITE or INET_DOMAIN). The module supports serialization to JSON and deserialization from JSON, enabling integration with API requests that require site verification data.",
      "description_length": 372,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict",
      "library": "gapi-ocaml",
      "description": "This module enables precise, restricted searches within specific websites using the CustomSearch API, offering control over result types and content filtering. It supports operations like filtering by image type, size, and color, applying safe search settings, specifying languages, and managing duplicate content and site inclusion behavior. Data types include variants for search modes, filters, and image properties, each with conversions to and from string representations for API compatibility. Examples include retrieving large, high-resolution images from a specific site while excluding duplicates, enforcing strict safe search settings, or filtering results to a particular language or dominant image color.",
      "description_length": 716,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.MaxUploadSizes",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates records of maximum upload sizes for different file types in the Google Drive API v2. It provides accessors for the size and type fields, functions to create an empty record and convert it to or from JSON data. It is used to handle API responses that specify upload limits for specific file types.",
      "description_length": 332,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings",
      "library": "gapi-ocaml",
      "description": "This module manages user-specific Gmail settings, enabling configuration of auto-forwarding, IMAP, POP, and vacation responder features through structured data models like `AutoForwarding.t` and `VacationSettings.t`. It supports direct operations to retrieve and update settings, such as enabling forwarding to a verified address or configuring automatic vacation replies. Submodules handle forwarding address management, message filter automation, and send-as alias configuration with S/MIME support. Together, they allow tasks like setting up verified sender addresses with SMTP validation, managing email routing rules, and securing communications through cryptographic settings.",
      "description_length": 682,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Cover",
      "library": "gapi-ocaml",
      "description": "This module manages the structure and manipulation of a user's cover information in the Google+ API, including the cover image, metadata, and layout configuration. It provides lenses to access and modify components like `coverPhoto`, `coverInfo`, and `layout`, along with `render` and `parse` functions for serialization. The module supports retrieving a cover image URL, adjusting layout offsets, or updating metadata, with child modules handling specific aspects like image positioning and photo properties through JSON serialization.",
      "description_length": 536,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.ProfileFilterLinks",
      "library": "gapi-ocaml",
      "description": "This module manages profile filter links in Google Analytics accounts. It supports creating, retrieving, updating, and deleting individual links, as well as listing all links for a profile. The operations work with `ProfileFilterLink` and `ProfileFilterLinks` data structures, using session-based authentication and standard API parameters.",
      "description_length": 340,
      "index": 211,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOauth2V2Service.UserinfoResource.V2",
      "library": "gapi-ocaml",
      "description": "This module retrieves the current user's extended profile information from Google's OAuth2 API using session data for authentication. It provides the `get` function, which returns user details such as email and unique identifiers along with an updated session. Use it to integrate user identity data with Google services, such as personalizing user experiences or linking accounts. For example, calling `get` after a successful OAuth login can fetch the user's email to authenticate them within your application.",
      "description_length": 512,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.Version",
      "library": "gapi-ocaml",
      "description": "This module defines a `Version` type with `major` and `minor` integer fields to represent the version of the PageSpeed Insights API used in a result. It provides functions to access and modify these fields via lenses, construct an empty version, and convert to and from JSON data models. It is used to capture and process version metadata in PageSpeed Insights API responses.",
      "description_length": 375,
      "index": 213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema.Annotations",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates annotations related to JSON schema properties, specifically tracking which methods require a property in API requests. It works with the `t` type, which includes a list of required methods, and interacts with JSON data models for serialization and parsing. It is used to enforce request requirements when generating or processing API client code based on discovery documents.",
      "description_length": 411,
      "index": 214,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.About.DriveThemes",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates theme data for Google Drive, specifically handling theme ID, background image links, and RGB color values. It provides lenses for accessing and modifying individual fields of a theme record, along with functions to serialize and deserialize theme data to and from JSON. It is used to manage visual theme settings retrieved from or sent to the Google Drive API.",
      "description_length": 396,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.ActivitiesResource.Collection",
      "library": "gapi-ocaml",
      "description": "This module defines the `Collection` type used to specify activity collections in the Google+ API, with variants for default and public activities. It includes functions to convert between string representations and the enumerated type. Concrete use cases include filtering activities by visibility when making API requests to retrieve user-generated content.",
      "description_length": 359,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData.ProfileInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) with fields for account, web property, and profile identifiers and names. It provides lenses to access and modify individual fields, functions to parse and render JSON data, and an empty value for initialization. It is used to interact with the Google Analytics API v3 for real-time data queries, specifically handling metadata about views.",
      "description_length": 424,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Profiles",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage Google Analytics views (profiles), including creating, retrieving, updating, and deleting individual profiles as well as listing multiple profiles. It operates on data types such as `GapiAnalyticsV3Model.Profile.t` for single profiles and `GapiAnalyticsV3Model.Profiles.t` for collections, using session-based authentication. Concrete use cases include synchronizing profile configurations, automating profile creation for new properties, and building administrative tools for Analytics account management.",
      "description_length": 547,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.UnsampledReports",
      "library": "gapi-ocaml",
      "description": "This module manages unsampled reports in Google Analytics by providing functions to create, retrieve, list, and delete reports for specific account, web property, and profile combinations. It operates on data types including strings for identifiers and structured types like `UnsampledReport` and `UnsampledReports` for collections. Concrete use cases include generating unsampled reports for precise analytics data and managing report lifecycle within a session.",
      "description_length": 463,
      "index": 219,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.SessionM.Infix",
      "library": "gapi-ocaml",
      "description": "Implements monadic composition and sequencing for session-based computations. It provides the `>>=` (bind) and `>>` (sequence) operators to chain operations that return session monad values. This module is used to build complex workflows involving authentication, state management, and API calls in a linear, readable fashion.",
      "description_length": 326,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.AclRule.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines the scope of access control rules in the Calendar API, representing entities like users, groups, domains, or the public. It includes fields for the scope type and associated value, such as an email or domain name, and provides operations to construct, serialize, and deserialize scope data. Concrete use cases include setting permissions for calendar sharing and managing access at different levels, such as restricting events to specific users or domains.",
      "description_length": 476,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults",
      "library": "gapi-ocaml",
      "description": "This module organizes and manipulates structured performance analysis results from the PageSpeed Insights API, with a focus on localized rule outputs. It provides data types for rule results keyed by identifier, supporting operations to parse, modify, and render JSON data, including fields like `locale` and `ruleResults`. The module enables processing performance diagnostics, updating impact scores, and generating localized reports with dynamic message substitution. Submodules structure rule data with typed accessors and lenses, and organize URL-specific diagnostics using headers and entries for precise, customizable output.",
      "description_length": 632,
      "index": 222,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.Comment.QuotedFileContent",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling quoted file content within comments, specifically storing MIME type and plain text content. It provides operations to create an empty instance, access and modify fields via lenses, and serialize or deserialize the structure to and from JSON. Concrete use cases include managing inline comments on Google Drive files that reference specific text content.",
      "description_length": 403,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values",
      "library": "gapi-ocaml",
      "description": "This module manages cell value interactions in Google Sheets, supporting read, write, append, and clear operations with configurable rendering, formatting, and dimension settings. It includes types and functions for specifying value rendering (formatted, unformatted, formula), data orientation (rows or columns), date-time formatting, insertion modes, and input interpretation. For example, you can retrieve formatted currency values by row, log timestamped entries into a sheet with locale-aware date strings, or bulk replace a range with raw values without triggering formula recalculation. Submodules provide precise control over API behavior, ensuring data is processed and returned in the desired format during spreadsheet operations.",
      "description_length": 740,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module manages ad units within an AdSense account, offering operations to retrieve, list, and generate ad code for ad units using session data and identifiers. It supports direct interactions like fetching performance data, embedding ad code, and filtering ad units by status for reporting. The child module extends this functionality by allowing queries on custom channel associations for targeted ad management and reporting configurations. Together, they enable comprehensive ad unit and channel management within the AdSense ecosystem.",
      "description_length": 544,
      "index": 225,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Filter",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type with three variants (`Default`, `V0`, `V1`) representing filter settings for controlling duplicate content filtering in search results. It provides `to_string` and `of_string` functions for converting between the type and string representations. These values are used to configure the behavior of search queries by enabling, disabling, or using the default setting for duplicate content filtering.",
      "description_length": 436,
      "index": 226,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Reports",
      "library": "gapi-ocaml",
      "description": "This module provides the `generate` function to create and retrieve AdSense reports with parameters like date range, metrics, dimensions, and filters. It works with account identifiers, date strings, and report configuration options to fetch structured reporting data. Concrete use cases include generating revenue reports by ad unit, analyzing traffic sources via dimensions, or exporting performance metrics in CSV format.",
      "description_length": 424,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.CustomMetrics",
      "library": "gapi-ocaml",
      "description": "This module handles custom metric management within Google Analytics accounts, providing functions to retrieve, create, list, and update custom metrics. It operates on `CustomMetric.t` and `CustomMetrics.t` data structures, which represent individual metrics and collections of metrics, respectively. Use cases include configuring custom metric tracking, querying existing metrics, and modifying metric settings within a web property.",
      "description_length": 434,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Context.Facets",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with three string fields\u2014`anchor`, `label`, and `label_with_op`\u2014used to represent facet information in a custom search API response. It includes functions to create an empty instance, convert the structure to and from JSON, and access or modify individual fields using lenses. Concrete use cases include processing and serializing search facet metadata for web search interfaces or data analysis pipelines.",
      "description_length": 443,
      "index": 229,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Webproperties",
      "library": "gapi-ocaml",
      "description": "This module handles web property management within a Google Analytics account, providing operations to retrieve, create, list, and update web properties. It works with `Webproperty.t` and `Webproperties.t` data structures, along with session and standard API parameters. Concrete use cases include adding a new web property to an account, fetching specific properties by ID, and listing all accessible properties for a given account.",
      "description_length": 433,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Icons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon URLs for API discovery resources, specifically handling 32x32 and 16x16 icon sizes. It provides accessors for extracting or modifying these URLs within a JSON data model, along with functions to serialize and deserialize icon data. Use this module when working with API discovery responses that include icon metadata for display or processing purposes.",
      "description_length": 393,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Savedadstyles",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `list` functions to retrieve specific or all saved ad styles for a given AdSense account. It operates on `GapiAdsenseV1_4Model.SavedAdStyle.t` and `GapiAdsenseV1_4Model.SavedAdStyles.t` data structures, representing individual saved ad styles and collections of them. Use it to programmatically access and manage saved ad styles associated with an AdSense publisher account.",
      "description_length": 405,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.ContentAdsSettings",
      "library": "gapi-ocaml",
      "description": "This module structures and manages content ad configurations for AdSense, handling backup options, size, and type settings with JSON serialization. It provides direct accessors for ad unit properties and includes a backup configuration submodule that supports blank, color, or URL-based fallbacks with lenses for `color`, `_type`, and `url`. You can use it to define how content ads appear when served through the AdSense API, including specifying fallback display behavior when primary ads are unavailable. The combination of top-level settings and nested backup logic enables precise control over ad rendering and API integration.",
      "description_length": 632,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.Thumbnail",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing thumbnail images associated with files in the Drive API. It includes fields for the Base64-encoded image data and its MIME type, along with functions to construct, render, and parse these thumbnails from JSON. It is used to handle thumbnail metadata when interacting with file resources in Drive API v2.",
      "description_length": 357,
      "index": 234,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Post",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling posts associated with comments in the Blogger API v2. It includes functions to parse and render post data to and from JSON, along with an empty value for initialization. It is used to manage post identifiers when interacting with comment data in Blogger API responses and requests.",
      "description_length": 343,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.ImportFormats",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling file import formats in the Drive API. It includes functions to specify source and target content types for file conversions, along with parsing and rendering to and from JSON data models. It is used to determine valid conversions between file types during import operations.",
      "description_length": 336,
      "index": 236,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Result.Labels",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a label in a search result, with fields for display name, label operator, and name. It provides functions to parse and render label data to and from JSON, along with lenses for accessing and modifying individual fields. It is used to handle metadata labels returned by the CustomSearch API when processing and structuring search results.",
      "description_length": 387,
      "index": 237,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AdunitsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in the AdSense Management API. It works with `GapiAdsenseV1_4Model.CustomChannels.t` and requires parameters such as `adClientId`, `adUnitId`, and optional pagination settings. A concrete use case is fetching custom channel data for reporting or inventory management in an AdSense publisher's application.",
      "description_length": 414,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines the permissions associated with a Google Analytics web property, specifically capturing the effective permissions a user has. It provides operations to access, render, and parse these permissions as JSON data. Use this module when working with access control and user authorization in Google Analytics API integrations.",
      "description_length": 339,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.LowercaseDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling lowercase filters in the Google Analytics API v3. It provides functions to specify a field and its index for filtering, along with utilities to serialize and deserialize the filter data to and from JSON. It is used when configuring filters that convert field values to lowercase before processing.",
      "description_length": 359,
      "index": 240,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module enables interaction with AdSense inventory by retrieving and listing custom channels within an ad client context, using identifiers like `accountId`, `adClientId`, and `customChannelId`. It provides direct access to custom channel data and integrates with its child module to fetch ad units associated with a specific custom channel. Main data types include `CustomChannel`, `AdUnits`, and `Session`, supporting operations such as listing custom channels and retrieving their ad unit inventory. For example, it can enumerate all custom channels for reporting or fetch a paginated list of ad units within a given custom channel for inventory management.",
      "description_length": 664,
      "index": 241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdsenseReportsGenerateResponse.Headers",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling report headers in the AdSense Management API. It provides accessors to retrieve and modify the currency, name, and type fields of a header, along with functions to serialize and deserialize header data to and from JSON. It is used to process and generate report metadata returned by the API, such as column names and their associated metric types.",
      "description_length": 409,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Adclients",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all ad clients associated with a specific AdSense account. It works with `GapiAdsenseV1_1Model.AdClients.t` data structures, which represent collections of ad client resources. A concrete use case is fetching ad client information for reporting or inventory management within an AdSense publisher's application.",
      "description_length": 365,
      "index": 243,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.ModifiedDateBehavior",
      "library": "gapi-ocaml",
      "description": "This module defines behaviors for setting or preserving the `modifiedDate` field when updating files in the Drive API. It includes variants like `FromBody`, `Now`, and `NoChange` to control whether the date is taken from the request body, set to the current time, or left unchanged. These options are used directly when making file update requests to specify timestamp handling logic.",
      "description_length": 384,
      "index": 244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.CustomDimensions",
      "library": "gapi-ocaml",
      "description": "This module handles operations for managing custom dimensions in Google Analytics, including retrieving, creating, listing, and updating custom dimensions. It works with the `CustomDimension.t` and `CustomDimensions.t` data types, representing individual and collections of custom dimensions. Concrete use cases include adding new custom dimensions for tracking specific metrics, modifying existing dimensions, and fetching dimension configurations for a given web property.",
      "description_length": 474,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.WebpropertyUserLinks",
      "library": "gapi-ocaml",
      "description": "This module manages user access for web properties in Google Analytics by providing operations to add, remove, update, and list user links. It works with web property identifiers and user link data structures to control user permissions at the web property level. Concrete use cases include granting a new user access to a web property, revoking access for a specific user, or modifying existing user permissions.",
      "description_length": 413,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Urls",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates URL data associated with a Google+ profile, including label, type, and value fields. It provides lenses for accessing and modifying each field, along with functions to serialize to and deserialize from JSON. Typical use cases include processing user profile URLs retrieved from the Google+ API, such as website links or contributor sites.",
      "description_length": 374,
      "index": 247,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience.AudienceDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring audience inclusion conditions in Google Analytics remarketing. It provides functions to create an empty audience definition, set inclusion conditions using a lens, and serialize or deserialize audience definitions to and from JSON data models. It is used to define user segments for targeted marketing based on analytics data.",
      "description_length": 391,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Jwk.Keys",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates JSON Web Key (JWK) structures used in Google OAuth2 API responses. It provides lenses for accessing key properties such as algorithm (`alg`), exponent (`e`), key ID (`kid`), key type (`kty`), modulus (`n`), and usage (`use`), along with functions to serialize and deserialize these keys to and from JSON data models. It is used to process cryptographic keys retrieved from OAuth2 discovery endpoints for signature verification and token handling.",
      "description_length": 482,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.PeopleResource.OrderBy",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type for sorting people in the Google+ API, with options to order by default, alphabetical display name, or relevance to the viewer. It includes functions to convert between string representations and the enumerated values. This is used when querying people collections to specify the desired sort order in API requests.",
      "description_length": 354,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Permission.PermissionDetails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission details for Google Drive API items, including fields such as permission type, role, inheritance status, and source of inheritance. It provides lenses for accessing and modifying individual fields, functions to render or parse permission data to and from JSON, and an empty value for initialization. Concrete use cases include managing user access roles, checking inheritance in shared drives, and handling permission responses from Drive API operations.",
      "description_length": 500,
      "index": 251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReport.DriveDownloadDetails",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing details of a Google Drive file containing an unsampled report. It provides functions to access the document ID, create an empty instance, and convert to or from a JSON representation. It is used to retrieve and manipulate the file identifier when working with unsampled reports from the Google Analytics API.",
      "description_length": 358,
      "index": 252,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person.PlacesLived",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a person's place of residence in the Google+ API, with fields indicating whether it is the primary residence and the location value. It provides operations to access and modify these fields using lenses, as well as functions to serialize to and deserialize from JSON data models. It is used to manage and persist user location data within the Google+ API integration.",
      "description_length": 417,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines the permissions associated with a Google Analytics view (profile), specifically capturing the effective permissions a user has. It provides operations to access and manipulate these permissions, including retrieving the list of effective permissions, rendering them to JSON format, and parsing JSON data into a permissions structure. It is used to determine access levels such as VIEW or EDIT for a given profile.",
      "description_length": 433,
      "index": 254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Mcf",
      "library": "gapi-ocaml",
      "description": "This module retrieves Google Analytics Multi-Channel Funnels data for a specific view, enabling analysis of user journey paths and conversion attribution through queries that support date ranges, dimensions, filters, and sampling levels. It works with structured representations of MCF data to model marketing touchpoints and supports direct operations for data retrieval and manipulation. The child module handles sampling level configuration using a variant type with `Default`, `FASTER`, and `HIGHER_PRECISION` options, allowing control over query speed versus accuracy. Together, they enable precise and performant analysis of digital marketing campaign conversion paths.",
      "description_length": 675,
      "index": 255,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.DirectoryList.Items",
      "library": "gapi-ocaml",
      "description": "This module represents API entries in a directory list, with fields for name, version, documentation links, and icons. It provides lenses to access and modify individual fields, along with JSON serialization and deserialization functions. The bundled icon module specifically handles 32x32 and 16x16 icon URLs, allowing extraction, updating, and construction of icon data within API discovery responses. Together, they enable managing API metadata, querying endpoints, and handling visual assets as part of a service discovery workflow.",
      "description_length": 536,
      "index": 256,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Author",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates comment author data in the Blogger API v2, including display name, ID, avatar image, and profile URL. It provides lenses for field access and modification, along with JSON serialization and deserialization functions. The avatar submodule handles image URLs specifically, offering parsing, rendering, and initialization capabilities. Together, they enable complete management of author metadata, such as extracting an author's profile URL or updating their avatar image from JSON payloads.",
      "description_length": 527,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityAdWordsLink.Entity",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an AdWords link entity in the Google Analytics API. It includes operations to create an empty entity, access and modify its web property reference, and convert the entity to and from JSON format. It is used to associate AdWords accounts with Google Analytics web properties via the API.",
      "description_length": 336,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdStyle.Font",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates font configurations for AdSense ad styles, specifically handling font family and size as string fields. It provides operations to create an empty font configuration, render it into JSON format, and parse JSON data back into a font structure. Use cases include customizing the visual appearance of ads served through the AdSense Management API by specifying font properties programmatically.",
      "description_length": 426,
      "index": 259,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.Comment.Context",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the context of a comment in the Drive API v2, specifically capturing the MIME type and content snippet of the commented file segment. It provides functions to access and modify the type and value fields, create an empty context, and serialize or deserialize context data to and from JSON. This module is used to handle comment context data when interacting with file content in Drive API operations.",
      "description_length": 449,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.Visibility",
      "library": "gapi-ocaml",
      "description": "This module defines visibility settings for files in the Drive API, including `Default`, `DEFAULT`, and `PRIVATE`. It provides `to_string` and `of_string` functions to convert between these visibility values and their string representations. Use this module when setting or retrieving file visibility options during file creation or sharing operations.",
      "description_length": 352,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Accounts",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve a paginated list of Google Analytics accounts accessible by the authenticated user. It works with `GapiAnalyticsV3Model.Accounts.t` and session data to handle API requests and responses. A concrete use case is fetching account data to display in a management dashboard or to select a specific account for further API operations.",
      "description_length": 381,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.CommentsResource.SortOrder",
      "library": "gapi-ocaml",
      "description": "This module defines a polymorphic variant type for specifying comment sort order in the Google+ API, with values representing default, ascending (oldest first), and descending (newest first) sorting. It includes functions to convert between the variant type and string representations. This is used when querying comments to control the order in which they are returned by the API.",
      "description_length": 381,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable",
      "library": "gapi-ocaml",
      "description": "This module organizes Google Analytics API v3 response data into structured tables, with support for defining schema using `Cols.t` and populating data via `Rows.t`. It enables parsing raw API responses into typed columns and rows, modifying table entries, and rendering structured data back into JSON. The `Cols` submodule handles column metadata like `id`, `label`, and `_type`, while the `Rows` submodule provides tools for structured row manipulation, including cell-level access through its child module. Examples include transforming API responses into typed tables, updating specific cell values, and serializing modified tables for output or further analysis.",
      "description_length": 667,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.ListM.Infix",
      "library": "gapi-ocaml",
      "description": "Implements monadic bind and sequence operations for list computations. Works with list values wrapped in the ListM monad, enabling chaining of list-producing functions and combining list-based effects. Useful for handling non-deterministic computations where each step generates multiple possible results.",
      "description_length": 305,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines a blog identifier within a comment, containing the blog's unique ID as an `int64`. It includes operations to create an empty instance, extract or set the ID using a lens, and convert the structure to and from JSON format. It is used when handling comments that reference their associated blog in the Blogger API.",
      "description_length": 332,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeResponse.AccountSettings",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing account sharing settings in the Google Analytics API v3, specifically for managing permissions related to data sharing. It provides operations to set, retrieve, and modify boolean flags that control sharing with Google products, specialists, support teams, and anonymously with others. Concrete use cases include configuring account privacy settings and parsing or rendering these settings to and from JSON for API requests.",
      "description_length": 474,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.DeveloperMetadata",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and search developer metadata within a Google Sheets spreadsheet. It works with developer metadata identifiers and data filters to locate metadata entries associated with specific regions or properties in a spreadsheet. Concrete use cases include querying metadata by ID to access custom properties or searching across a spreadsheet's structure to find relevant metadata entries based on location or criteria defined in a `SearchDeveloperMetadataRequest`.",
      "description_length": 499,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Emails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates email address data for Google+ API (v1), specifically handling the type and value of each email entry. It provides operations to create an empty email object, render it into JSON format, and parse JSON data into an email object. Use cases include processing user profile data to extract or update email information when interacting with the Google+ API.",
      "description_length": 389,
      "index": 269,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllResponse.InsertErrors",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing errors encountered during a row insertion in the BigQuery API. It includes operations to access and modify the error list and row index, as well as functions to serialize and deserialize the data to and from JSON. It is used to handle per-row error reporting when inserting data into a BigQuery table.",
      "description_length": 351,
      "index": 270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.UppercaseDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling uppercase transformation filters in the Google Analytics API v3. It includes fields to specify which dimension to transform and its index, along with functions to create, render, and parse these filter configurations. It is used when applying uppercase formatting to custom dimensions within Analytics data processing rules.",
      "description_length": 386,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module manages ad units within an AdSense account, offering operations to list all ad units, retrieve individual units by ID, and filter by active or inactive status with support for pagination. It works with core data types like `accountId`, `adClientId`, and `adUnitId`, enabling tasks such as inventory management and performance reporting. The child module extends this functionality by allowing the retrieval of custom channels associated with a specific ad unit. This integration supports detailed ad targeting and reporting configurations based on both ad unit and custom channel data.",
      "description_length": 597,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.CustomChannel.TargetingInfo",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring ad targeting settings in the AdSense API. It includes fields for specifying where ads appear, their descriptions, geographic placement, and site language, using string-based enums for valid location values. Functions allow creating empty configurations, rendering them to JSON, and parsing JSON responses for custom channel targeting.",
      "description_length": 401,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link in the Google Analytics API v3, specifically associating a view (profile) with its web property. It includes operations to access the link's URL and type, ensuring correct serialization and deserialization to and from JSON. Use this module when working with profile hierarchies to retrieve or update associated web property information.",
      "description_length": 400,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Filters",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage filters in a Google Analytics account, including creating, retrieving, updating, patching, listing, and deleting filters. It works with `GapiAnalyticsV3Model.Filter.t` and `GapiAnalyticsV3Model.Filters.t` data structures, representing individual filters and filter collections. Concrete use cases include configuring data processing rules, modifying existing filters, and enumerating filters for a given account.",
      "description_length": 454,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ProjectList.Projects",
      "library": "gapi-ocaml",
      "description": "This module defines a project record with fields for name, ID, type, numeric ID, and reference, along with lenses for accessing and modifying each field. It includes functions to serialize a project to JSON and deserialize JSON into a project, ensuring compatibility with the BigQuery API's data format. It is used to manage and manipulate individual project entries within a project list response from the BigQuery v2 API.",
      "description_length": 423,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Safe",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing safe search filtering options for a custom search API, including states like `Active`, `Off`, and deprecated levels `High` and `Medium`. It provides direct conversions between these states and string representations. This module is used to configure safe search behavior when performing searches over websites or content collections via the API.",
      "description_length": 397,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.Features",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing API feature limits, with fields for the feature name and its query-per-second rate limit. It provides functions to create an empty feature, render it to JSON, and parse JSON into a feature object. This module is used to manage and serialize rate limit information returned by the Drive API.",
      "description_length": 340,
      "index": 278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search.Url",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with `template` and `_type` fields, representing URL templates in a search API. It provides operations to create an empty instance, render the structure to JSON, and parse JSON into the structure. This is used to manage URL templates for search results, enabling serialization and deserialization for API interactions.",
      "description_length": 355,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.Task.Links",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling task links in the Tasks API v1 data model. It provides functions to construct, parse, and render link data, which includes description, URL, and link type fields. Use this module when manipulating task links in JSON format, such as when creating or updating task resources with embedded link information.",
      "description_length": 348,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive.BackgroundImageFile",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying a background image and its cropping parameters in Google Drive. It includes fields for the image file ID, cropping coordinates, and width, with operations to create, render, and parse these parameters to and from JSON. It is used to configure background images for Drive UI elements, ensuring correct positioning and scaling.",
      "description_length": 377,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarListEntry.NotificationSettings",
      "library": "gapi-ocaml",
      "description": "This module manages notification settings for calendar entries, providing operations to access and modify a list of calendar notifications. It works with `CalendarNotification.t list` to store and retrieve notification configurations. Use this module to configure email or pop-up alerts for specific calendar events, such as reminders before scheduled meetings.",
      "description_length": 361,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.UrlDestinationDetails",
      "library": "gapi-ocaml",
      "description": "This module models URL destination goal configurations for Google Analytics v3, handling match types, case sensitivity, and funnel steps. It operates on records that define goal parameters and integrates a list of steps from its Steps submodule, enabling structured funnel construction. Main operations include building, serializing, and parsing goal definitions to and from JSON for API interactions. For example, it can construct a multi-step goal funnel with specific URLs and match criteria, then serialize it into a format suitable for API submission.",
      "description_length": 556,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AdunitsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in the AdSense Management API. It works with AdSense ad units and custom channel data structures, specifically handling relationships between ad units and their assigned custom channels. Use this module to programmatically access custom channel assignments for ad units, enabling inventory management or reporting workflows.",
      "description_length": 433,
      "index": 284,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.About.TeamDriveThemes",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for working with Team Drive themes in the Google Drive API v3. It includes fields for theme identifiers, background images, and color representations, along with lenses for accessing and modifying these fields. The module supports serialization to and from JSON for integration with API requests and responses.",
      "description_length": 361,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdsenseReportsGenerateResponse.Headers",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling report headers in the AdSense Management API. It provides functions to access and manipulate header fields such as `currency`, `name`, and `_type`, which represent metadata in report responses. Use this module to extract or construct header information when processing AdSense report data.",
      "description_length": 351,
      "index": 286,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.About.QuotaBytesByService",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing storage quota usage by service, with fields for the number of bytes used and the service name (e.g., \"DRIVE\", \"GMAIL\"). It provides functions to access and modify these fields via lenses, along with operations to serialize and deserialize the data to and from JSON. It is used to interpret per-service storage breakdowns returned by the Drive API.",
      "description_length": 397,
      "index": 287,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Payments",
      "library": "gapi-ocaml",
      "description": "This module handles retrieval of payment information for a specific AdSense account. It provides the `list` operation, which fetches a list of payments associated with the given account ID. The module works with `GapiAdsenseV1_4Model.Payments.t` and requires session and configuration parameters for API communication.",
      "description_length": 318,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Object",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling comments in the Google+ API v1 data model. It provides functions to access and modify comment fields such as `content`, `objectType`, and `originalContent` using lenses, and supports serialization and deserialization to and from JSON. It is used to create, update, and process comment data when interacting with Google+ API endpoints.",
      "description_length": 396,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.ProfileInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) with fields for account, web property, and profile identifiers along with the profile name and table ID. It provides lenses to access and modify individual fields, an empty value for initialization, and functions to serialize to and deserialize from JSON data models. It is used to interact with Google Analytics API v3 responses containing profile information.",
      "description_length": 445,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.VisitNumPagesDetails",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying conditions based on the number of pages visited in a Google Analytics goal. It includes fields for setting a comparison type (LESS_THAN, GREATER_THAN, EQUAL) and a numeric threshold value. These constructs are used to configure goal tracking rules within the Google Analytics API.",
      "description_length": 332,
      "index": 291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceResource.Site",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing verified sites in the Google Site Verification API, with fields for the site identifier and type. It provides functions to create an empty site, render a site to JSON, and parse JSON into a site object. These operations are used to manage site verification data, such as storing verified URLs or domains and serializing them for API requests.",
      "description_length": 396,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgType",
      "library": "gapi-ocaml",
      "description": "This module defines a polymorphic variant type representing image types for search queries, such as `Clipart`, `Face`, `Lineart`, `News`, and `Photo`. It includes functions to convert between the variant type and strings, enabling direct use in API requests. These conversions are used when specifying image search filters in the CustomSearch API.",
      "description_length": 347,
      "index": 293,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Reminders",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates event reminder settings for the Calendar API v3. It includes operations to set custom reminders and toggle the use of default calendar reminders, working with a list of `EventReminder` objects and a boolean flag. Use cases include configuring per-event reminders and serializing or deserializing reminder data for API requests.",
      "description_length": 363,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.MobileContentAdsSettings",
      "library": "gapi-ocaml",
      "description": "This module defines settings for mobile content ads, including markup and scripting languages, ad size, and type. It provides lenses to access and modify these fields, along with functions to serialize and deserialize the data for API communication. Concrete use cases include configuring ad units for mobile web content and parsing API responses into structured data.",
      "description_length": 368,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Urlchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all URL channels for a given ad client and account in the AdSense Management API. It works with string identifiers for accounts and ad clients, along with session and parameter types for API communication. Use this module to programmatically access and manage URL channel configurations in AdSense inventory.",
      "description_length": 362,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search.Spelling",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates spelling correction data returned by the CustomSearch API. It provides accessors for retrieving the corrected query and its HTML-formatted version, along with functions to serialize and deserialize the data to and from JSON. It is used to handle search query corrections in API responses, ensuring accurate query interpretation and display.",
      "description_length": 376,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object",
      "library": "gapi-ocaml",
      "description": "The module organizes activity data from the Google+ API into structured records with rich metadata, including content, attachments, and social interactions. It provides direct access to fields like `id`, `content`, and `url`, while submodules handle actors, +1s, replies, attachments, and reshares with JSON parsing, lenses, and composable transformations. Use cases include rendering activity feeds, extracting comment counts, managing reshared content, and processing embedded media with precise metadata. Lenses and serialization functions enable seamless data extraction, construction, and API communication across nested components.",
      "description_length": 637,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Blog.Posts",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling collections of blog posts in the Blogger API v2. It includes functions to parse and render post collections from JSON data models, along with lenses to access the self-link and total item count. It is used to manage metadata about a blog's post collection, such as when retrieving or navigating through a blog's posts.",
      "description_length": 380,
      "index": 299,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Source",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a source associated with a calendar event, containing a title and a URL. It provides functions to create an empty source, render it into JSON format, and parse JSON data into a source object. This structure is used to link events to external resources, such as web pages or email subjects, via their URLs.",
      "description_length": 355,
      "index": 300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Service.UsersResource.Blogs",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve a collection of blogs associated with a specific user from the Blogger API. It works with the `GapiBloggerV2Model.BlogList.t` data structure and requires a user ID and an active API session. A concrete use case is fetching all blogs owned by a user to display them in a management interface or process blog metadata for synchronization.",
      "description_length": 390,
      "index": 301,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling profile images in the Google+ API data model. It provides accessors for the image's URL and whether it is the default photo, along with functions to serialize and deserialize image data. It is used to manage user profile image metadata, including URL manipulation for resizing.",
      "description_length": 339,
      "index": 302,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person.Name",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling person names in the Google+ API data model. It provides lenses to access and modify individual name components\u2014such as family name, given name, and honorifics\u2014as well as functions to serialize and deserialize name data to and from JSON. It is used to construct, manipulate, and convert name data when interacting with Google+ API endpoints that require or return person name information.",
      "description_length": 449,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.ActivitiesResource.OrderBy",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing sort order options for activities in the Google+ API, with variants for default, relevance-based, and date-based sorting. It includes functions to convert between string representations and the enumerated values. This enables clients to specify activity query ordering in a type-safe manner when interacting with the API.",
      "description_length": 373,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Goals",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage goals within a Google Analytics profile, including retrieving, creating, listing, and updating goals. It works with the `Goal` and `Goals` data types, representing individual goals and collections of goals. Concrete use cases include configuring conversion tracking goals, retrieving goal statistics for reporting, and updating goal configurations in a Google Analytics account.",
      "description_length": 419,
      "index": 305,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.CustomDataSources",
      "library": "gapi-ocaml",
      "description": "This module handles listing custom data sources for a Google Analytics account and web property. It works with `GapiAnalyticsV3Model.CustomDataSources.t` and session data to retrieve and return custom data source information. A concrete use case is querying available custom data sources to integrate external data with Google Analytics.",
      "description_length": 337,
      "index": 306,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.PageStats",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for analyzing web page performance metrics. It provides typed access to statistics such as response sizes for CSS, JavaScript, HTML, and image resources, along with counts for resources, hosts, and static assets. These values are used to evaluate and optimize web page load efficiency based on actual HTTP traffic data.",
      "description_length": 370,
      "index": 307,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.Screenshot",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling screenshots returned by the PageSpeed Insights API, including base64 image data, dimensions, and MIME type. It provides lenses for accessing and modifying individual fields, functions to parse and render JSON data, and an empty value for initialization. Use this module to extract, manipulate, or serialize screenshot information from API responses.",
      "description_length": 399,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.ColumnHeaders",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling column headers in Google Analytics MCF data responses. It provides functions to access and modify fields such as `columnType`, `dataType`, and `name` using lenses, and supports serialization and deserialization to and from JSON. It is used to interpret and construct column metadata when processing multi-channel funnel reports from the Google Analytics API.",
      "description_length": 420,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.LabelInfo",
      "library": "gapi-ocaml",
      "description": "This module handles label information for files in the Google Drive API v3. It provides operations to access and manipulate a list of labels associated with a file, including parsing from and rendering to JSON data models. Use cases include retrieving and modifying file labels during interactions with Google Drive resources.",
      "description_length": 326,
      "index": 310,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.InReplyTo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a comment's parent reference in the Blogger API v2. It includes operations to create an empty parent reference, access its identifier, and convert it to and from JSON data models. It is used to associate comments with their parent comment in a thread.",
      "description_length": 301,
      "index": 311,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.File.VideoMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing video metadata, including duration, height, and width. It provides functions to access and modify these fields using lenses, along with operations to serialize to and parse from JSON. It is used to handle video-specific metadata when interacting with the Drive API, such as retrieving or updating video file properties.",
      "description_length": 369,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Service.PagespeedapiResource.Strategy",
      "library": "gapi-ocaml",
      "description": "This module defines and converts between strategies for analyzing web page performance, specifically targeting desktop or mobile device contexts. It works with the `t` type, which includes `Default`, `Desktop`, and `Mobile` variants. Use this module to specify the analysis target when making requests to the PageSpeed Insights API.",
      "description_length": 332,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiment.Variations",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates experiment variations for the Google Analytics API v3. It includes fields for name, status, URL, weight, and outcome, with operations to render and parse variation data to and from JSON. It is used to configure and track A/B test variations in analytics experiments.",
      "description_length": 302,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to an account in the Google Analytics API v3. It includes fields for the link's URL (`href`) and its type, which is fixed as \"analytics#account\". The module provides functions to construct, parse, and serialize these links for use in API requests and responses.",
      "description_length": 325,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Replies",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling replies to a blog post in the Blogger API v2. It includes fields for the URL to access the replies (`selfLink`) and the number of replies (`totalItems`). The module provides functions to parse and render reply data in JSON format, enabling interaction with API responses and requests.",
      "description_length": 346,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Uploads",
      "library": "gapi-ocaml",
      "description": "This module handles data uploads for custom data sources in Google Analytics. It provides functions to upload data, retrieve specific uploads, list existing uploads, and delete uploaded data. These operations work with Google Analytics accounts, web properties, and custom data sources, using identifiers to target specific resources. Use cases include managing data imports for analytics reporting and cleaning up obsolete uploads.",
      "description_length": 432,
      "index": 317,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.UserDeletionRequest.Id",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a user deletion request identifier, with fields for the user type and ID. It provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure. This is used specifically for handling user deletion requests in the Google Analytics API v3 integration.",
      "description_length": 345,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.AccountUserLinks",
      "library": "gapi-ocaml",
      "description": "This module manages user access to Google Analytics accounts by providing operations to add, remove, update, and list user links. It works with `EntityUserLink` and `EntityUserLinks` data structures to represent individual and collections of user-account relationships. Concrete use cases include granting a new user access to an account, revoking access, modifying user permissions, and retrieving a list of current users for an account.",
      "description_length": 438,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.EventDetails",
      "library": "gapi-ocaml",
      "description": "This module organizes event-based goal details for the Google Analytics API v3, offering data structures and operations to define and manage event conditions and related flags. It includes types for event conditions with fields like comparison type, comparison value, and match type, along with functions to create, serialize, and parse these conditions. The main module handles the overall goal configuration, while the child module focuses on the detailed logic of event matching. Example usage includes building and serializing event-based goals that trigger based on specific user actions, such as a button click or form submission, for API requests.",
      "description_length": 654,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.ExtendedProperties",
      "library": "gapi-ocaml",
      "description": "This module defines extended properties for calendar events, supporting separate private and shared key-value pairs. It provides operations to create empty property sets, render them into JSON, and parse JSON into property sets. These features are used to manage custom metadata in event copies that are either specific to a calendar or shared across attendees.",
      "description_length": 361,
      "index": 321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a link to a view (profile) in Google Analytics. It includes fields for the URL (`href`) and type identifier (`_type`), which is always \"analytics#profile\". The module provides functions to create an empty instance, render it as JSON, and parse it from JSON data.",
      "description_length": 312,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a Google Analytics account within a web property. It includes fields for the link's URL (`href`) and its type, which is fixed as `\"analytics#account\"`. The module provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure, facilitating integration with the Google Analytics API.",
      "description_length": 398,
      "index": 323,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.Projection",
      "library": "gapi-ocaml",
      "description": "This module defines file projection options for the Drive API, representing the level of detail returned in file metadata responses. It includes operations to convert projection values to and from strings, supporting integration with API requests. Use cases include specifying the `Default`, `BASIC`, or `FULL` projection when retrieving file metadata to control data verbosity.",
      "description_length": 378,
      "index": 324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.CustomchannelsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units associated with a specific custom channel in an AdSense account. It works with ad client identifiers, custom channel IDs, and session contexts to fetch paginated ad unit data. Use this module to programmatically access and manage ad units within a custom channel for reporting or inventory management purposes.",
      "description_length": 373,
      "index": 325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Threads",
      "library": "gapi-ocaml",
      "description": "This module manages email threads in a user's mailbox, offering operations to retrieve, list, modify, delete, trash, and restore threads using thread identifiers, user IDs, and session data. It integrates formatting controls through its child module, which defines how thread data is represented in API requests via enumerated options like `Default`, `Full`, `Metadata`, and `Minimal`. You can query threads by search terms or labels, adjust their format for detailed or minimal responses, and perform batch actions like moving multiple threads to trash or restoring them. Specific tasks include organizing threads under labels, permanently deleting unwanted messages, and customizing data retrieval for performance or clarity.",
      "description_length": 727,
      "index": 326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomMetric.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link for a custom metric in the Google Analytics API v3. It includes fields for the hyperlink reference (`href`) and the type of parent link (`_type`), which is typically set to \"analytics#webproperty\". The module provides functions to create an empty parent link, render it into JSON format, and parse JSON data into a parent link structure.",
      "description_length": 401,
      "index": 327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor",
      "library": "gapi-ocaml",
      "description": "This module organizes actor data from Google+ API activities into structured components, enabling manipulation of user identities through display names, profile links, and verification metadata. Core data types include actor details, verification tokens, structured names, and image references, with operations for JSON serialization, field access via lenses, and data construction. It supports tasks like parsing API responses to extract a user's given name and family name, verifying actor identities through ad-hoc tokens, or retrieving and formatting profile images for display. Submodules extend this functionality to handle specialized data such as YouTube-specific actor metadata, enhancing structured access and rendering of social media activity sources.",
      "description_length": 763,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Organizer",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for event organizer data in the Calendar API. It provides accessors to fields like `email`, `id`, and `displayName` using lenses, along with functions to serialize and deserialize organizer information. It is used to manage organizer details when creating or parsing calendar events.",
      "description_length": 344,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Page.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing a blog within a page resource in the Blogger API v2. It includes functions to parse and render blog data to and from JSON, along with a lens for accessing the blog's identifier. It is used to manage associations between pages and their parent blogs when interacting with the API.",
      "description_length": 345,
      "index": 330,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.EventsResource.OrderBy",
      "library": "gapi-ocaml",
      "description": "This module defines ordering options for calendar events, supporting sorting by default, start time, or update time. It provides `to_string` and `of_string` functions to convert between symbolic representations and string values. Use it when specifying sort criteria in event query parameters to control result ordering.",
      "description_length": 320,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeRequest.AccountSettings",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing account sharing settings for a Google Analytics API request, with boolean fields controlling data sharing permissions. It provides functions to set up, serialize, and update these settings from JSON data models. Concrete use cases include configuring account sharing options when creating or modifying Analytics accounts through the API.",
      "description_length": 387,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.InReplyTo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a reference to an activity that a comment replies to, containing its ID and URL. It provides functions to create an empty instance, parse and render JSON data, and access fields using lenses. Use this module when handling Google+ API comments that include replies, to manage the activity being replied to.",
      "description_length": 355,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Promotion.BodyLines",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with fields for HTML title, link, title, and URL, supporting the representation and manipulation of promotional content elements from the CustomSearch API. It includes functions to parse JSON data into structured records and render structured records back into JSON format. This module is used to handle specific components of search result promotions, such as displaying titles and links in a web interface.",
      "description_length": 445,
      "index": 334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.FilterAction",
      "library": "gapi-ocaml",
      "description": "This module defines operations for manipulating Gmail filter actions, specifically adding or removing labels and forwarding messages. It works with a record type containing lists of label IDs and a forward address string. Use this module to construct, modify, and serialize filter actions for interacting with the Gmail API.",
      "description_length": 324,
      "index": 335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for specifying candlestick charts in the Google Sheets API. It includes operations to set the domain (horizontal axis) and data series, supporting string or numeric domain values and a single candlestick data series. It provides functions to serialize and deserialize chart specifications to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 419,
      "index": 336,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceRequestStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the status of a conference creation request in the Calendar API, including operations to parse, render, and convert status data to and from JSON. It works with the `t` type representing status codes like \"pending\", \"success\", and \"failure\", and interacts with JSON data models for serialization and deserialization. It is used to track and manage the outcome of conference setup requests within calendar event workflows.",
      "description_length": 440,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.RepliesResource",
      "library": "gapi-ocaml",
      "description": "This module manages replies to comments on files in Google Drive. It provides operations to create, retrieve, update, patch, and delete individual replies, as well as list all replies for a specific comment. The module works directly with comment replies, file identifiers, and session data to interact with Drive API v2.",
      "description_length": 321,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.HistogramSeries",
      "library": "gapi-ocaml",
      "description": "This module defines a histogram series for a chart, including its data and visual properties. It provides accessors to manipulate the color style and data source of the series, along with functions to serialize and deserialize the structure to and from JSON. It is used to configure and interpret histogram chart data within Google Sheets API requests and responses.",
      "description_length": 366,
      "index": 339,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a user's calendar list in the Google Calendar API v3. It includes fields for paginated results, individual calendar entries, and metadata like ETags and resource types. It is used to retrieve and manage a user's list of calendars, supporting operations for synchronization and navigation through result pages.",
      "description_length": 359,
      "index": 340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdUnits",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling ad unit list responses in the AdSense Management API, including parsing and rendering JSON data models, accessing fields like `etag`, `items`, `kind`, and `nextPageToken`, and constructing or modifying ad unit lists. It works with ad unit list data structures, specifically `GapiAdsenseV1_1Model.AdUnits.t` and associated JSON data models. Concrete use cases include processing paginated ad unit responses, caching based on ETags, and converting between JSON and internal data representations.",
      "description_length": 537,
      "index": 341,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.HistoryLabelAdded",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the addition of labels to a Gmail message as part of a history record. It includes operations to access and modify the list of label IDs and the associated message, along with functions to serialize and deserialize the structure to and from JSON. It is used to track label changes in Gmail API history responses.",
      "description_length": 362,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.PaymentsResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieval of payment information for AdSense accounts. It provides the `list` operation to fetch a list of payments, returning them in a structured format. The module works directly with `GapiAdsenseV1_4Model.Payments.t` data structures, enabling publishers to programmatically access and process payment records from their AdSense account.",
      "description_length": 360,
      "index": 343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.BlogList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a list of blogs a user has access to, including operations to serialize and deserialize the structure to and from JSON. It provides lenses to access and modify the list of blogs and the entity kind, along with functions to convert between the internal representation and a JSON data model. Concrete use cases include processing API responses to retrieve a user's blog list and preparing blog list data for API requests.",
      "description_length": 473,
      "index": 344,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData",
      "library": "gapi-ocaml",
      "description": "This module organizes data structures and utilities for working with Multi-Channel Funnels analytics, combining query configuration, profile metadata, column headers, and conversion path processing into a unified system for handling paginated, sampled datasets with total metrics. Core types include query configurations with dimensions and metrics, profile metadata with account and property identifiers, column headers with type and name information, and conversion paths made of interaction sequences with associated metrics. Lenses allow precise field manipulation, and JSON serialization supports API integration, enabling tasks like constructing a query with date ranges and filters, retrieving paginated results, and analyzing conversion paths across marketing channels. Submodules refine these capabilities by handling specific aspects such as profile management, query rendering, column interpretation, and path traversal for detailed funnel analysis.",
      "description_length": 960,
      "index": 345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.CustomchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module manages custom channels in an AdSense account, offering operations to retrieve individual channels and lists of channels using `CustomChannel.t` and `CustomChannels.t` data structures. It supports key actions such as listing custom channels for an ad client and fetching associated ad units for performance reporting or inventory management. Specific use cases include segmenting ad performance data and managing ad placement groups via custom channel identifiers. The module also integrates with its child module to provide detailed ad unit listings filtered by custom channel and client IDs.",
      "description_length": 605,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating a filter view in a Google Sheets document. It includes functions to set or retrieve the filter properties and specify which fields to update, using a shorthand or explicit field list. The module is used when modifying existing filter views, ensuring only the relevant properties are sent in the API request.",
      "description_length": 369,
      "index": 347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationExtract",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for extracting data from a BigQuery table to Google Cloud Storage. It includes parameters such as compression type, file format, field delimiter, and destination URIs. It is used when initiating table export jobs to specify output settings and the source table reference.",
      "description_length": 309,
      "index": 348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.UrlHistory",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the structure of paginated URL history data returned by the URL Shortener API. It provides accessors (via lenses) to fields such as the list of URLs, pagination token, total item count, and page size, enabling precise data extraction and modification. It is used to process and serialize URL history responses for API interactions, supporting both parsing from and rendering to JSON data models.",
      "description_length": 431,
      "index": 349,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceTable",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring and manipulating data source tables in Google Sheets, including fields for column selection, filtering, sorting, and row limits. It provides lenses for accessing and modifying individual properties, as well as functions for serialization and deserialization to JSON. Use this module when building or interpreting data source table configurations for integration with Sheets API operations.",
      "description_length": 442,
      "index": 350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CopyPasteRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying copy-paste operations in a Google Sheets document. It includes fields for source and destination ranges, paste type, and orientation, enabling precise control over data transfer between grid regions. It is used to construct and manipulate requests for copying and pasting cell data within spreadsheets.",
      "description_length": 354,
      "index": 351,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.TextPosition",
      "library": "gapi-ocaml",
      "description": "This module defines a text position data structure with a horizontal alignment field. It provides functions to create an empty instance, convert to and from JSON data models, and render or parse the structure. Use this module to manage text alignment settings within Google Sheets API operations.",
      "description_length": 296,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants for accessing different levels of Google Analytics API (v3) functionality. It includes specific scopes for reading, editing, managing users, and provisioning accounts. These string values are used to request precise access permissions when authenticating API requests.",
      "description_length": 319,
      "index": 353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Message",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling individual email messages in the Gmail API v1. It includes fields like message ID, internal date, labels, and payload, along with lenses for accessing and modifying these fields. Functions support serialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 356,
      "index": 354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiClientLogin.Service",
      "library": "gapi-ocaml",
      "description": "This module defines a set of supported Google service identifiers and provides a conversion function to string representations. It works with the variant type `t` that enumerates specific Google services like `Calendar`, `Contacts`, `YouTube`, and others. Concrete use cases include selecting a service for Client Login authentication and passing the correct service identifier to authentication flows.",
      "description_length": 402,
      "index": 355,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateNamedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating named ranges in a Google Sheets document. It includes functions to set or retrieve the named range data and specify which fields to update, using lenses for precise field manipulation. The module works directly with `NamedRange.t` and JSON data models to serialize or deserialize update requests for the Sheets API.",
      "description_length": 377,
      "index": 356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.MessagePart",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates message parts in the Gmail API v1 data model, handling MIME structure components such as headers, body, attachments, and nested parts. It provides accessors via lenses for fields like `mimeType`, `filename`, and `headers`, and supports serialization and deserialization to JSON data models. Use cases include parsing and constructing email message structures with attachments or multipart content, and extracting specific parts of an email for processing or display.",
      "description_length": 502,
      "index": 357,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableCell",
      "library": "gapi-ocaml",
      "description": "This module defines a single data structure representing a cell in a BigQuery table, containing a string value. It provides functions to create an empty cell, convert the cell to and from JSON data models, and render or parse cell values from JSON. Concrete use cases include handling individual cell data when querying or inserting rows in BigQuery tables.",
      "description_length": 357,
      "index": 358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupSortValueBucket",
      "library": "gapi-ocaml",
      "description": "This module defines sorting behavior for pivot table groups based on specific value buckets. It includes functions to construct, serialize, and deserialize sort buckets that reference values by index and group them using `ExtendedValue` entries. It is used when configuring pivot table layouts to sort row or column groups according to aggregated values from specific columns or totals.",
      "description_length": 386,
      "index": 359,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.AccessproposalsResource",
      "library": "gapi-ocaml",
      "description": "This module handles access proposal management within Google Drive files, providing operations to retrieve, resolve, and list access proposals. It works with `AccessProposal.t`, `ResolveAccessProposalRequest.t`, and `ListAccessProposalsResponse.t` data structures, interacting with file-specific access control workflows. Concrete use cases include approving or denying access requests, fetching specific proposals by ID, and listing all pending proposals for a file where the user is an approver.",
      "description_length": 497,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Service.TasksResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage individual tasks within a task list, including creating, retrieving, updating, deleting, and reordering tasks. It works with task data structures defined in the `GapiTasksV1Model` module, such as `Task` and `Tasks`. Concrete use cases include synchronizing task data with a backend service, implementing task management features like marking tasks as completed, and organizing tasks hierarchically.",
      "description_length": 440,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.PropertyList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing a list of properties associated with a Drive API resource, including operations to access and manipulate fields like `etag`, `items`, `kind`, and `selfLink`. It works with JSON data models for serialization and deserialization, supporting direct integration with API responses. Concrete use cases include parsing property lists from API responses and constructing property lists to send in API requests.",
      "description_length": 453,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants used to request specific permissions when interacting with the Google+ API. It includes scopes for accessing user identity, email, profile information, and social connections. These values are directly used when constructing OAuth 2.0 authorization requests to control access to user data.",
      "description_length": 340,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.CommentList",
      "library": "gapi-ocaml",
      "description": "Handles structured retrieval and manipulation of blog post comment lists, including pagination tokens for navigating comment pages. Works with `CommentList.t` records containing comment arrays, kind identifiers, and page tokens. Used to serialize comment lists to JSON for API requests and deserialize responses into typed data structures for client processing.",
      "description_length": 361,
      "index": 364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataLabel",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for data labels in Google Sheets charts, including properties like label type, text formatting, placement, and custom label data. It works with JSON data models and supports serialization and deserialization for integration with the Sheets API. Use cases include configuring chart data labels with custom text and formatting, and ensuring label data aligns with series source ranges.",
      "description_length": 430,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.CalendarsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage calendar metadata, including creating, deleting, retrieving, and updating calendars. It operates on `GapiCalendarV3Model.Calendar.t` data structures and interacts with calendar identifiers and session state. Use cases include setting up secondary calendars, clearing primary calendars, and modifying calendar properties like title or time zone.",
      "description_length": 385,
      "index": 366,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "This module handles comment management for files in Google Drive, supporting creation, deletion, retrieval, listing, and updating of comments. It works with `Comment.t` for individual comments, `CommentList.t` for collections, and requires a `Session.t` for API interaction. Concrete use cases include adding user feedback to documents, removing outdated notes, fetching specific comment threads, paginating through all comments on a file, and modifying existing comment content.",
      "description_length": 479,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ValueRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a range of values in a Google Sheets spreadsheet, including the cell range in A1 notation, the major dimension (rows or columns), and the two-dimensional list of cell values. It provides functions to serialize and deserialize this data structure to and from JSON, as well as lenses for accessing and modifying individual fields. Use this module when reading or writing spreadsheet data via the Google Sheets API, particularly when specifying ranges and formatting input or output values according to the API's requirements.",
      "description_length": 577,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SheetProperties",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing sheet properties in a Google Sheets document. It includes fields for sheet metadata like title, index, visibility, and layout, along with lenses for accessing and modifying individual properties. Use this module to construct, update, or interpret sheet configurations when interacting with the Sheets API, such as setting grid dimensions, hiding sheets, or applying tab colors.",
      "description_length": 441,
      "index": 369,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiAnalyticsV3Model.Segment",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for Google Analytics API segments. It provides lenses to access and modify segment properties such as creation time, definition, ID, name, and type, along with functions to serialize and deserialize segments to and from JSON data models. It is used to work with both built-in and custom segments in the context of the Google Analytics API.",
      "description_length": 400,
      "index": 370,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSource",
      "library": "gapi-ocaml",
      "description": "This module provides a structured representation of Google Analytics custom data sources, including identifiers, metadata, and schema definitions, with support for precise field manipulation via lenses. It enables bidirectional conversion between these data structures and JSON, facilitating integration with API requests and responses for tasks like configuring analytics pipelines or updating schema definitions. Child modules model associated links, such as child links to uploads and parent links to web properties, each offering JSON serialization and deserialization for seamless navigation and metadata synchronization. Together, they allow programmatic management of data sources and their relationships within a Google Analytics account.",
      "description_length": 746,
      "index": 371,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Post",
      "library": "gapi-ocaml",
      "description": "This module manages blog post data structures with a focus on structured access and JSON serialization. It provides a central `Post` type containing author, content, metadata, and reply fields, along with lenses for precise field manipulation and functions to convert to and from JSON, making it ideal for handling Blogger API v2 payloads. The author submodule structures author data with display names, identifiers, and avatars, supporting operations like extracting profile URLs or rendering avatar images. The blog reference submodule links posts to blogs by ID, while the replies module handles reply counts and access URLs, enabling full interaction with post-related data in API responses.",
      "description_length": 695,
      "index": 372,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription",
      "library": "gapi-ocaml",
      "description": "This module enables functional manipulation of REST API metadata through lenses that access and modify endpoints, authentication settings, and schema definitions, with structured data support for nested modules. It provides JSON serialization and core operations for API discovery, dynamic client generation, and configuration management. Main data types include endpoints with location and deprecation status, OAuth 2.0 authentication configurations, and icon URLs for discovery resources. Examples include parsing endpoint data from JSON responses, configuring OAuth clients using validated scopes, and extracting or modifying icon URLs for API display purposes.",
      "description_length": 664,
      "index": 373,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing the Blogger API. It includes a value `blogger` representing the scope for managing a Blogger account. It is used to specify permissions when authenticating API requests to Blogger services.",
      "description_length": 245,
      "index": 374,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData",
      "library": "gapi-ocaml",
      "description": "This module processes Google Analytics API v3 data by parsing, querying, and serializing structured responses with typed access to metrics, dimensions, and metadata. It handles hierarchical data like rows, column headers, and pagination, with direct access to fields such as `totalResults` and `dataLastRefreshed`, supporting operations like report parsing and JSON conversion. Submodules structure column headers, API queries, and tabular responses, enabling schema definition, row manipulation, and cell-level access. It also includes typed representations of Analytics views for working with profile identifiers and table IDs during API interactions.",
      "description_length": 653,
      "index": 375,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module handles responses from updating cells in a Google Sheets document using a data filter. It provides accessors to retrieve details like the updated range, row and column counts, and the number of cells affected. It also includes functions to serialize and deserialize the response to and from JSON for integration with API requests.",
      "description_length": 342,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDuplicatesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to remove duplicate rows within a specified range in a Google Sheets document. It includes operations to specify the range and columns used for detecting duplicates, along with functions to serialize and deserialize the request for API communication. It works directly with grid ranges and dimension ranges to target specific sections of a spreadsheet for deduplication.",
      "description_length": 400,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.HashClientIdRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with fields for `clientId`, `kind`, and `webPropertyId`, and provides functions to serialize and deserialize instances to and from JSON data models. It supports creating empty records and accessing or modifying fields using lenses. Concrete use cases include preparing and parsing client ID hashing requests when interacting with the Google Analytics API v3.",
      "description_length": 392,
      "index": 378,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDimensionGroupResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from deleting a dimension group in a Google Sheets document. It stores a list of remaining dimension groups after deletion, providing access to the updated group structure of a sheet's row or column dimension. It is used to process and construct API responses when modifying grouped rows or columns in Sheets.",
      "description_length": 345,
      "index": 379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.User",
      "library": "gapi-ocaml",
      "description": "This module represents user information with a record containing display name, email, authentication status, kind, permission ID, and profile picture. It provides lenses for accessing and modifying each field, JSON serialization and deserialization functions, and an empty user value for initialization. The profile picture is handled by a sub-module that defines a record with a `url` field, along with JSON parsing and rendering operations. You can use this module to manage user data when interacting with the Drive API, such as retrieving user details or setting file permissions.",
      "description_length": 584,
      "index": 380,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiJson.StringDictionary",
      "library": "gapi-ocaml",
      "description": "This module implements an association list for string keys and values, with operations to convert between JSON data models and dictionary structures. It supports parsing JSON into string dictionaries, rendering dictionaries into JSON lists, and nested content rendering. Use cases include handling JSON key-value pairs in API responses and constructing JSON objects from string-based data.",
      "description_length": 389,
      "index": 381,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Model.Tasks",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing task collections in the Tasks API v1, including parsing and rendering task data to and from JSON format. It works with the `t` type, representing a collection of tasks with metadata like ETag, kind, and pagination tokens. Concrete use cases include handling API responses, constructing task lists, and navigating paginated results using the `nextPageToken`.",
      "description_length": 401,
      "index": 382,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiSheetsV4Model.TableColumnDataValidationRule",
      "library": "gapi-ocaml",
      "description": "This module defines data validation rules for table columns using a boolean condition that must be met by cell values. It works with JSON data models and boolean conditions, specifically enforcing constraints like \"one of a list\" for cell input. It is used to serialize and deserialize validation rules to and from JSON for integration with the Google Sheets API.",
      "description_length": 363,
      "index": 383,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataValidationRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates data validation rules for Google Sheets cells, including conditions, input messages, and UI behavior. It works with JSON data models and provides functions to serialize, deserialize, and modify validation rule fields. Concrete use cases include setting dropdown constraints, validating user input, and configuring error messages in spreadsheet cells.",
      "description_length": 386,
      "index": 384,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.SearchDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from searching developer metadata in a Google Sheets document. It provides access to a list of matched metadata entries and includes functions to convert the response to and from JSON data models. It is used to retrieve and process custom metadata associated with spreadsheet elements, such as cells or sheets, based on search criteria.",
      "description_length": 372,
      "index": 385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSources",
      "library": "gapi-ocaml",
      "description": "This module handles structured data for listing and navigating custom data sources in the Google Analytics API v3. It provides accessors and manipulators for properties like item lists, pagination links, and metadata through lenses. Key operations include parsing and rendering JSON data models, enabling efficient data exchange and traversal of paginated results.",
      "description_length": 364,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.RealtimeResource",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `update` functions to retrieve and replace the Realtime API data model of a Drive file as JSON. It operates on file identifiers and JSON data, enabling synchronization of collaborative document states. Use it to export or import structured data for real-time collaborative editing in applications like Google Docs or Sheets.",
      "description_length": 355,
      "index": 387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyCalendar",
      "library": "gapi-ocaml",
      "description": "This module represents calendar availability data in the Calendar API v3, specifically tracking busy time periods and computation errors. It provides operations to access and modify busy intervals and errors using lenses, and supports JSON serialization and deserialization. Concrete use cases include checking calendar availability for scheduling and handling API response data during event planning.",
      "description_length": 401,
      "index": 388,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ForwardingAddress",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling forwarding addresses in the Gmail API. It provides functions to create, parse, and render forwarding address data, which includes an email address and its verification status. Use this module to manage email forwarding configurations programmatically, such as setting up or verifying forwarding addresses for a Gmail account.",
      "description_length": 387,
      "index": 389,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.CreateDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating developer metadata in Google Sheets API requests. It includes functions to set metadata fields, convert the structure to and from JSON data models, and render or parse the data for API interactions. It is used when adding custom metadata to spreadsheet elements like sheets or cells via the Sheets API.",
      "description_length": 364,
      "index": 390,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for updating spreadsheet values using data filters in the Google Sheets API. It includes fields to specify how input values are interpreted, the data to apply, and options for rendering response values. Use this module to construct batch update requests that target specific ranges in a spreadsheet based on data filters, with control over response content and formatting.",
      "description_length": 412,
      "index": 391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.RepliesResource",
      "library": "gapi-ocaml",
      "description": "This module manages replies to comments in Google Drive. It supports creating, deleting, retrieving, listing, and updating replies using the Google Drive API v3. Operations interact with `GapiDriveV3Model.Reply.t` and `GapiDriveV3Model.ReplyList.t` types, requiring session state for API communication. Use cases include implementing comment threads, moderating user feedback, and synchronizing collaborative document annotations.",
      "description_length": 430,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperties",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and transformations for web properties in the Google Analytics API v3. It provides lenses to access and modify fields like items, pagination parameters, and links, along with functions to serialize and deserialize web property collections to and from JSON. Use this module when retrieving or processing lists of web properties from the API, such as when managing account resources or handling paginated responses.",
      "description_length": 449,
      "index": 393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.BlogsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations for retrieving blog data by identifier, handling HTTP requests and responses with the Blogger API. Works with blog identifiers and sessions to fetch structured blog information. Used to access specific blog details such as metadata and content in a typed format.",
      "description_length": 284,
      "index": 394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ProvisioningResource",
      "library": "gapi-ocaml",
      "description": "This module handles provisioning operations for account setup in Google Analytics API v3. It provides functions to create account tickets and provision accounts using session-based authentication. The module works with account ticket and account tree request/response data structures.",
      "description_length": 284,
      "index": 395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateSpreadsheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batched spreadsheet update requests, including a list of individual requests and response configuration options. It supports operations to specify whether to include spreadsheet data in the response, limit returned ranges, and control grid data inclusion. Use this module when sending multiple spreadsheet modifications in a single API call, ensuring atomic application of changes.",
      "description_length": 422,
      "index": 396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityAdWordsLink",
      "library": "gapi-ocaml",
      "description": "This module manages Google Analytics AdWords links through data structures and operations that handle linked accounts, profile IDs, and metadata like name and ID. It includes lenses for field access and modification, JSON serialization and deserialization, and an empty value for initialization, supporting tasks like creating and updating AdWords links and mapping web properties. The child module enhances this by providing specific operations to associate AdWords accounts with web properties, including creating empty entities and converting them to or from JSON. Together, they enable handling API responses and managing linked data directly through concrete actions like link creation and metadata manipulation.",
      "description_length": 717,
      "index": 397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from batch value clear operations in a Google Sheets API client. It includes functions to parse and render JSON data models, access and modify fields like `spreadsheetId` and `clearedRanges`, and create empty response objects. It is used to interpret API responses when clearing multiple ranges in a spreadsheet, ensuring correct handling of cleared range boundaries.",
      "description_length": 439,
      "index": 398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goals",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of Google Analytics goals, including parsing and rendering goal data to and from JSON. It provides lenses for accessing and modifying fields such as the list of goals, pagination parameters, and metadata like links and user information. Use cases include processing paginated goal responses from the Google Analytics API and constructing goal data models for API requests.",
      "description_length": 448,
      "index": 399,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddChartResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a chart in the Google Sheets API. It includes an embedded chart and functions to manipulate and convert the response to and from JSON data models. It is used to handle the result of chart creation operations within a spreadsheet.",
      "description_length": 277,
      "index": 400,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating developer metadata in Google Sheets by specifying filters, the updated metadata value, and the fields to update. It supports operations to serialize and deserialize the structure to and from JSON, and provides lenses for accessing and modifying individual fields. It is used to construct and manipulate requests that update developer metadata entries in a spreadsheet.",
      "description_length": 418,
      "index": 401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.UrlChannel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing URL channels in the AdSense Management API, including creating, parsing, and rendering URL channel data. It works with the `t` record type, which represents a URL channel with fields for its ID, kind, and URL pattern. Concrete use cases include serializing URL channel configurations to JSON for API requests and deserializing API responses into structured data for processing.",
      "description_length": 421,
      "index": 402,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DimensionProperties",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing dimension properties in a Google Sheets document. It provides functions to manipulate and serialize fields such as visibility, size, and metadata for rows or columns. Use cases include configuring row or column display settings, handling data source associations, and integrating with Sheets API operations.",
      "description_length": 371,
      "index": 403,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module handles comment resources with nested structures like actors, +1 counters, and reply relationships, centered around the `Comment.t` data model. It provides lenses for field access, JSON serialization, and operations to construct, parse, and transform comments, including managing social interactions such as +1s via the `Plusoners` module and actor metadata through submodules for identity, images, and verification. The `Object` module supports comment content and type manipulation, while `InReplyTo` manages references to replied activities using IDs and URLs. Use this module to create, update, and serialize comment data for integration with Google+ API endpoints, track user interactions, and manage nested reply chains.",
      "description_length": 738,
      "index": 404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.About",
      "library": "gapi-ocaml",
      "description": "This module provides tools to retrieve, manipulate, and serialize metadata about a user's cloud storage account, including storage quotas, UI themes, and team drive configurations. It centers around data types like `StorageQuota.t`, `TeamDriveThemes.t`, and color palette representations, with operations to access and modify their fields via lenses and convert them to and from JSON. For example, it enables displaying a user's remaining storage space, applying theme-aware styling to UI elements, or synchronizing team drive appearance settings with API responses. Submodules focus on specific aspects\u2014storage metrics, visual themes, and team drive themes\u2014each offering structured access and serialization for their respective data models.",
      "description_length": 741,
      "index": 405,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Uploads",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of Google Analytics uploads, including parsing and rendering upload data to and from JSON. It provides lenses for accessing and modifying fields like `items`, `itemsPerPage`, `nextLink`, and `startIndex`. Concrete use cases include processing paginated upload responses from the Google Analytics API and constructing upload data models for API requests.",
      "description_length": 409,
      "index": 406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.MessagePartBody",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling message part bodies in the Gmail API, including fields like `attachmentId`, `data`, and `size`. It provides functions to serialize and deserialize message part body data, enabling efficient handling of MIME part content and attachments. Use cases include extracting base64-encoded message content, managing external attachments via attachment IDs, and converting between JSON models and internal data representations.",
      "description_length": 479,
      "index": 407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdClients",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the structure of an Ad Clients list response from the AdSense Management API. It includes fields for caching (etag), result listing (items), response kind identification, and pagination (nextPageToken). Operations include parsing, rendering, and converting to/from JSON data models for API communication and local data handling.",
      "description_length": 364,
      "index": 408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Profile",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Gmail user profile, including fields for the user's email address, mailbox history ID, total message count, and total thread count. It provides lenses for accessing and modifying individual fields, functions for serializing to and from JSON data models, and utilities for creating and rendering profile instances. Concrete use cases include retrieving and updating mailbox metadata through the Gmail API, tracking mailbox statistics, and integrating profile data into larger JSON-based data pipelines.",
      "description_length": 553,
      "index": 409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource",
      "library": "gapi-ocaml",
      "description": "This module provides core search functionality for the CustomSearch API, centered around the `list` function that executes searches with rich filtering and configuration options. It works with a suite of submodules that define specific search parameters, including site filters, image color and size options, language codes, search types, duplicate content settings, safe search modes, and image properties like type and dominant color. These modules provide enumerated types and conversion functions that allow precise control over search queries, enabling operations like restricting image results to specific sizes and colors, filtering by language or site, and applying safe search settings. Example usage includes performing an image search for large, grayscale photos from a specific domain while excluding duplicates and enforcing strict content filtering.",
      "description_length": 863,
      "index": 410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDimensionGroupRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update the state of a dimension group in a Google Sheets document. It includes operations to set or modify the group's properties and specify which fields to update. The module works with `DimensionGroup.t` and string fields, and provides functions to serialize, deserialize, and manipulate the request data. Use cases include adjusting row or column group visibility or metadata in a spreadsheet via the Sheets API.",
      "description_length": 449,
      "index": 411,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListThreadsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling responses from listing email threads in the Gmail API. It includes fields for pagination, result size estimation, and a list of threads, along with functions to serialize, deserialize, and manipulate the data. Use this module when processing API responses to retrieve and navigate through collections of email threads.",
      "description_length": 368,
      "index": 412,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateBordersRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying border updates in a Google Sheets grid range. It includes fields for top, bottom, left, right, and internal horizontal and vertical borders, each represented using the `Border.t` type. The module supports serialization to and from JSON data models, enabling direct integration with the Google Sheets API for styling cell ranges.",
      "description_length": 380,
      "index": 413,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.GridData",
      "library": "gapi-ocaml",
      "description": "This module represents a section of data within a Google Sheets spreadsheet, capturing both cell values and dimensional metadata. It provides accessors to retrieve and modify the starting row and column indices, row and column metadata, and the actual row data. Concrete use cases include extracting or updating specific grid sections when interacting with the Sheets API, such as populating cells or adjusting row heights and column widths.",
      "description_length": 441,
      "index": 414,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartData",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling chart data in the Google Sheets API v4. It includes fields for specifying source ranges, column references, grouping rules, and aggregation types, along with functions to render and parse chart data to and from JSON. It is used to configure and manipulate data sources for charts within Google Sheets.",
      "description_length": 363,
      "index": 415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.DirectoryList",
      "library": "gapi-ocaml",
      "description": "This module represents a list of API directories discovered through the API Discovery Service, supporting operations to access and manipulate discovery version, kind, and individual directory entries. It includes JSON serialization and deserialization capabilities for integration with discovery workflows, and provides structured access to API metadata such as name, version, documentation links, and icons through its child module. The child module offers lenses for field manipulation and handles icon data at multiple resolutions, enabling precise updates and construction of API discovery responses. Together, they allow querying endpoints, managing metadata, and handling visual assets programmatically.",
      "description_length": 709,
      "index": 416,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Table",
      "library": "gapi-ocaml",
      "description": "This module provides operations to model and manipulate BigQuery table resources, including creating initialized instances and accessing metadata fields like schema, description, and timestamps via lenses. It supports bidirectional conversion between table data structures and JSON representations, facilitating data marshaling for API interactions. Typical use cases involve initializing tables, modifying metadata properties, and serializing/deserializing table configurations during BigQuery API operations.",
      "description_length": 510,
      "index": 417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteEmbeddedObjectRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting embedded objects in Google Sheets by specifying their object ID. It includes functions to create an empty request, render the request as JSON data, and parse or convert JSON data into a request object. Concrete use cases include removing charts or images from a spreadsheet by their unique identifier during API interactions.",
      "description_length": 375,
      "index": 418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Channel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing notification channels in the Calendar API v3, including creating, parsing, and rendering channel configurations. It works with the `t` record type representing channel properties like `id`, `address`, `expiration`, and delivery `params`. Concrete use cases include setting up webhook subscriptions, handling notification payloads, and converting between JSON data models and internal channel representations for API requests.",
      "description_length": 469,
      "index": 419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Account",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for managing AdSense account information, including fields like account ID, name, creation time, and sub-accounts. It provides lenses for accessing and modifying individual fields, functions for serialization and deserialization to JSON, and an empty value for initializing accounts. Concrete use cases include parsing API responses into account objects, building JSON payloads for API requests, and traversing hierarchical account structures with sub-accounts.",
      "description_length": 515,
      "index": 420,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Service.PagespeedapiResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `runpagespeed` function to analyze web page performance using the PageSpeed Insights API, supporting parameters like URL, strategy, and locale. It returns structured results with metrics and optimization suggestions, enabling automated performance evaluation. The integrated strategy module defines `t` with `Desktop` and `Mobile` variants, allowing analysis tailored to device contexts. Use this module to programmatically assess and optimize web pages based on real-world loading data and best practices.",
      "description_length": 531,
      "index": 421,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.GetSpreadsheetByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for retrieving spreadsheet data based on specified `DataFilter` rules. It includes operations to set or retrieve filters, control grid data inclusion, and manage table exclusion in banded ranges. Use this module when querying specific portions of a Google Sheets spreadsheet using the v4 API, particularly when partial data retrieval is needed based on structured filters.",
      "description_length": 412,
      "index": 422,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the request structure for duplicating a filter view in the Google Sheets API. It includes a single required field, `filterId`, representing the ID of the filter to duplicate. The module provides functions to serialize, deserialize, and manipulate this request data, specifically tailored for interacting with the Sheets API's filter duplication endpoint.",
      "description_length": 374,
      "index": 423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.MetadataResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve metadata for metrics and dimensions available in an AdSense account, using `GapiService.StandardParameters` and `GapiConversation.Session` to manage request configuration and session state. The primary data types include metric and dimension metadata structures, with operations to list these entities for reporting and analytics customization. It enables concrete use cases such as fetching metric definitions to construct valid reporting queries and retrieving dimension attributes to tailor analytics output. Example usage includes querying metric metadata to generate structured performance reports or customizing analytics dashboards based on available dimension data.",
      "description_length": 717,
      "index": 424,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Change",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a change event in a file system, with fields to track deletion status, file updates, identifiers, timestamps, and links. It provides lenses for accessing and modifying individual fields, functions for serializing to and from JSON, and an empty value for initialization. Concrete use cases include processing file change notifications, synchronizing file states, and managing audit logs for file modifications.",
      "description_length": 459,
      "index": 425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SortSpec",
      "library": "gapi-ocaml",
      "description": "This module defines sorting specifications for Google Sheets API operations, including fields like dimension index, sort order, and color-based sorting criteria. It provides lenses to access and modify individual properties of a sort specification and supports serialization to and from JSON data models. Use this module to configure and apply complex sorting rules to spreadsheet data, such as sorting rows by a specific column's values or by cell colors.",
      "description_length": 456,
      "index": 426,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartSeries",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and styling for waterfall chart series in Google Sheets API v4. It includes fields for specifying data, column styles for positive, negative, and subtotal values, custom subtotals, and data labels. Use this module to configure and serialize/deserialize waterfall chart series for integration with Sheets API operations.",
      "description_length": 353,
      "index": 427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SortRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a sort operation for a specified grid range in a Google Sheets document. It includes functions to set the range and sorting specifications, which determine the order of columns during sorting. The module is used to construct and manipulate sort requests before sending them to the Sheets API, enabling precise control over how data is organized in spreadsheets.",
      "description_length": 381,
      "index": 428,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Jwk",
      "library": "gapi-ocaml",
      "description": "This module manages JSON Web Key (JWK) structures used in OAuth2 authentication, particularly for interacting with Google's API. It provides core operations for parsing, serializing, and manipulating cryptographic keys, including access to properties like `alg`, `kid`, `kty`, and `use`, while supporting conversion between JSON and in-memory key representations. Child modules enhance this functionality with lenses and utilities for working with individual key parameters, enabling tasks such as validating tokens using public key sets retrieved from discovery endpoints. Example uses include extracting key metadata and constructing key sets for signature verification.",
      "description_length": 672,
      "index": 429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Response",
      "library": "gapi-ocaml",
      "description": "This module defines a record type for structured responses from Google Sheets API v4 operations, with fields representing outcomes of actions like adding named ranges, duplicating sheets, or applying find/replace. It includes lenses for accessing and modifying response fields, along with utilities to manage spreadsheet components such as slicers, data sources, and tables, and to convert between response objects and JSON representations. It is used to handle structured data mutations and metadata updates in spreadsheet documents programmatically.",
      "description_length": 551,
      "index": 430,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdsenseReportsGenerateResponse",
      "library": "gapi-ocaml",
      "description": "This module encapsulates the structured response from an AdSense report generation call, organizing data into headers, rows, totals, and warnings. It handles nested row data and typed values like `int64` for row counts, with string-based averages and totals for flexible metric representation. The header submodule provides accessors and serialization for report metadata, such as currency and column types, enabling precise parsing and generation of API responses. Together, they support extracting, processing, and rendering AdSense report data, including dimension values and metric aggregates.",
      "description_length": 597,
      "index": 431,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File",
      "library": "gapi-ocaml",
      "description": "This module organizes file metadata into a structured hierarchy rooted in `File.t`, enabling precise access and transformation of properties through lenses and JSON converters. It directly handles core file attributes while delegating specialized concerns\u2014like permissions, media metadata, and sharing policies\u2014to focused submodules that expose record types and accessors for boolean flags, numeric properties, and textual hints. For example, you can extract video dimensions, adjust sharing eligibility, or update a file's thumbnail using consistent lens-based operations across nested data. The integration of lenses with JSON parsing ensures seamless synchronization between in-memory models and Google Drive API representations.",
      "description_length": 732,
      "index": 432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ParentReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent reference in the Drive API v2, with fields for the parent ID, root status, kind, parent link, and self link. It provides functions to parse and render this structure to and from JSON data models, enabling serialization and deserialization for API interactions. Use cases include managing file and folder hierarchy relationships when interacting with Google Drive's API, such as retrieving or updating parent-child relationships between files and folders.",
      "description_length": 513,
      "index": 433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.EntryPoint",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling conference entry points in a calendar API, including fields like URI, access codes, and region codes. It provides functions to parse and render entry point data to and from JSON, along with lenses for accessing and modifying individual fields. Use cases include creating and managing conference call details with specific access credentials and endpoint types such as video, phone, or SIP.",
      "description_length": 453,
      "index": 434,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceData",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing conference information in a calendar event, including entry points, conference IDs, and solution-specific parameters. It provides lenses for accessing and modifying fields like `entryPoints`, `conferenceSolution`, and `createRequest`, along with functions to serialize and deserialize conference data to and from JSON. It is used to integrate and manage video or teleconferencing details such as Google Meet links or third-party conference systems within calendar events.",
      "description_length": 535,
      "index": 435,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty",
      "library": "gapi-ocaml",
      "description": "This module organizes structured access to Google Analytics web property metadata through lenses, enabling precise manipulation of configuration records that include account identifiers, retention settings, and hierarchical relationships. It supports JSON serialization and deserialization for API v3 compatibility, with nested modules handling child links to profiles, parent links to accounts, and permission scopes. The core module provides lenses for accessing and modifying fields like `account_id` and `retention_period`, while submodules manage link structures and user permissions as part of the property's composite configuration. Example uses include synchronizing property settings with remote API endpoints, transforming internal analytics configurations into API-compatible JSON, and auditing user access based on permission data.",
      "description_length": 843,
      "index": 436,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ListSendAsResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response containing a list of send-as aliases for a Gmail account. It provides functions to parse and render the list of send-as aliases from JSON data models, as well as access and manipulate the list using lenses. Concrete use cases include retrieving and managing alternative email addresses used for sending messages through the Gmail API.",
      "description_length": 368,
      "index": 437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for interacting with the URL Shortener API. It provides a `urlshortener` value representing the scope required to manage goo.gl short URLs. Use this scope when configuring OAuth2 credentials to authorize API requests for creating, reading, or deleting shortened URLs.",
      "description_length": 309,
      "index": 438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.EventsResource",
      "library": "gapi-ocaml",
      "description": "This module manages calendar events with operations for creating, updating, deleting, and querying events and their instances, working primarily with `Event.t` and `Events.t` data structures. It supports concrete actions like quick event creation, listing events within time ranges, and watching for changes, while integrating notification control and sorting options through its submodules. The first submodule handles notification policies, allowing configuration of recipient behavior during updates, and the second defines sort criteria such as by start or update time, enabling precise control over query result ordering. Together, these components facilitate tasks like synchronizing event data, handling recurring events, and transferring events between calendars with customizable notifications and sorting.",
      "description_length": 815,
      "index": 439,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickDomain",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring the domain axis of a candlestick chart in the Google Sheets API. It includes fields for specifying chart data and reversing the domain values' order, with functions to serialize, deserialize, and manipulate the domain configuration. It is used to define the horizontal axis behavior when rendering candlestick charts in Google Sheets.",
      "description_length": 387,
      "index": 440,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.PageList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling lists of blog pages in the Blogger API v2. It includes functions to parse and render page lists from and to JSON data models, as well as lenses to access and modify the list of pages and the entity kind. It is used to retrieve and manage collections of blog pages in API responses.",
      "description_length": 331,
      "index": 441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ListAccessProposalsResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response containing a list of access proposals and a continuation token for paginating through results in the Google Drive API v3. It provides functions to access and manipulate the `accessProposals` list and `nextPageToken`, as well as to convert between JSON data models and the native OCaml type. It is used when handling responses from API calls that retrieve access proposals, enabling structured parsing, rendering, and traversal of paginated data.",
      "description_length": 479,
      "index": 442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.CommentReply",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling comment replies in the Drive API v2, including fields like author, content, timestamps, and reply actions. It provides lenses for accessing and modifying individual properties of a comment reply, along with functions to serialize and deserialize replies to and from JSON. Use cases include creating, updating, and parsing comment replies with specific actions like resolving or reopening a comment.",
      "description_length": 462,
      "index": 443,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of labels in the Google Drive API v3, providing access to label data, pagination tokens, and metadata. It supports operations for parsing and rendering label lists to and from JSON data models, enabling interaction with API responses. Concrete use cases include retrieving and processing label collections from Drive, handling pagination, and converting between JSON and typed label list structures.",
      "description_length": 439,
      "index": 444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.ActivityFeed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a paginated feed of Google+ activities, including metadata such as ETag, next page token, and links. It provides operations to access and modify individual fields via lenses, convert to and from JSON data models, and construct or render activity feed data. Concrete use cases include processing API responses to retrieve user activity streams, handling pagination for large result sets, and serializing activity data for storage or transmission.",
      "description_length": 495,
      "index": 445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.AppsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list installed apps in Google Drive. It works with `GapiDriveV2Model.App.t` and `GapiDriveV2Model.AppList.t` data types, representing individual apps and collections of apps. Concrete use cases include fetching details of a specific app by ID or listing all apps installed by a user, optionally filtered by file extensions, MIME types, or language code.",
      "description_length": 401,
      "index": 446,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BandedRange",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates banded ranges in a Google Sheets document, specifying visual banding across rows or columns within a grid range. It includes functions to create, modify, and serialize banded range configurations using lenses for field access and update. Use cases include applying alternating row or column styles in spreadsheet UIs and programmatically managing banding properties via the Sheets API.",
      "description_length": 421,
      "index": 447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TreemapChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring treemap charts in the Google Sheets API. It includes fields for specifying label hierarchies, cell sizes, color mappings, and display options, all using `ChartData`, `Color`, `ColorStyle`, and `TextFormat` types. Key operations include setting data sources, color scales, and rendering or parsing the chart configuration to and from JSON.",
      "description_length": 401,
      "index": 448,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ChangesResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieving, listing, and subscribing to user-specific changes in a Drive API (v2) integration. It operates on change records, supporting filtering by deletion status, result limits, and starting change identifiers. Concrete use cases include syncing local storage with Drive changes, monitoring file activity in real-time, and paginating through large sets of historical changes.",
      "description_length": 399,
      "index": 449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Border",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring border properties in Google Sheets API requests. It includes fields for border style, width, and color (with support for both legacy and updated color representations), along with functions to serialize, deserialize, and manipulate border data. It is used when applying or retrieving border formatting in spreadsheet cells via the API.",
      "description_length": 400,
      "index": 450,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.ChannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `stop` function to terminate a channel used for watching resources in Google Drive API v3. It operates on a `Channel.t` type and interacts with a session to manage the termination process. A concrete use case is stopping push notifications for file changes in a user's Drive.",
      "description_length": 300,
      "index": 451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationQuery",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for a BigQuery SQL query job, including parameters like the query string, destination table, caching behavior, and execution priority. It supports operations to set or retrieve options such as whether to allow large results, use the query cache, or specify external data sources. Use this module when configuring and executing queries in BigQuery, especially when controlling output behavior, performance settings, or data source definitions.",
      "description_length": 480,
      "index": 452,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.DownloadRestriction",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates download restriction settings for Google Drive API v3. It provides functions to create, parse, and render a data structure that specifies whether downloading and copying are restricted for readers and writers. Use this module to enforce or modify access policies when interacting with Drive files, particularly in scenarios where content protection is required for shared documents.",
      "description_length": 418,
      "index": 453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateConditionalFormatRuleResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from updating a conditional format rule in Google Sheets API v4. It includes fields for the old and new conditional format rules and their indices, with lenses for accessing and modifying these fields. The module supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 402,
      "index": 454,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.ChangesResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieving and monitoring changes in Google Drive by providing functions to get a starting page token, list changes with various filters, and subscribe to change notifications using channels. It operates on data types such as `StartPageToken`, `ChangeList`, and `Channel`, and interacts with session state to manage API requests. Concrete use cases include syncing a local file system with Drive contents, tracking file modifications, and reacting to Drive events in real-time.",
      "description_length": 497,
      "index": 455,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource",
      "library": "gapi-ocaml",
      "description": "This module manages file operations in a cloud storage system, including creation, modification, deletion, and export, working with core data types like `File.t` for metadata, `GeneratedIds.t` for identifier handling, and change tracking mechanisms. It supports advanced operations such as copying documents with OCR settings, exporting files to specific MIME types, and filtering or projecting file listings using custom query parameters. The child modules define key enumerations and behaviors for corpus types, modified date handling, visibility settings, and metadata projections, each providing string conversion functions for seamless API integration. These components together enable precise control over file management workflows and API request customization.",
      "description_length": 768,
      "index": 456,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.CsvOptions",
      "library": "gapi-ocaml",
      "description": "This module defines configuration options for parsing CSV data in BigQuery, including settings for delimiters, quoting, encoding, and handling irregularities like missing columns or embedded newlines. It provides functions to construct, modify, and serialize these options, along with lenses for accessing individual fields. Use this module when configuring CSV data sources for BigQuery jobs, particularly when dealing with non-standard formatting or legacy data layouts.",
      "description_length": 472,
      "index": 457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUtils.Infix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for function composition and value piping. It supports operations to chain transformations and pass results between functions using `|>`, `-|`, and `|-`. These operators simplify sequential data processing, such as formatting API responses or transforming data streams in a linear, readable way.",
      "description_length": 331,
      "index": 458,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Setting",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing user settings in a calendar API, including parsing and rendering settings to and from JSON data models. It works with a record type containing fields like `id`, `value`, and `etag`, and uses lenses for accessing and modifying individual fields. Concrete use cases include retrieving user preferences, updating setting values, and serializing settings for API requests.",
      "description_length": 412,
      "index": 459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CutPasteRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying cut-and-paste operations in a Google Sheets document. It includes fields for the source grid range, destination coordinate, and paste type, along with lenses for accessing and modifying these fields. It supports serialization and deserialization to and from JSON data models for API interaction.",
      "description_length": 347,
      "index": 460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityAdWordsLinks",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of AdWords links in the Google Analytics API v3. It provides lenses for accessing and modifying fields such as items, pagination parameters, and navigation links, along with functions to serialize and deserialize to and from JSON data models. Use this module when retrieving, updating, or navigating through paginated AdWords link data from the API.",
      "description_length": 425,
      "index": 461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickData",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling candlestick chart data in the Google Sheets API. It includes fields for low, open, close, and high series values, each represented as a `CandlestickSeries.t` type, and provides functions to serialize and deserialize data to and from JSON format. It is used to construct and manipulate candlestick chart data for financial or time-series visualizations within Google Sheets.",
      "description_length": 435,
      "index": 462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.PermissionList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of permissions returned by the Google Drive API v3. It provides access to the list of permissions, a token for fetching the next page, and the resource kind. It is used to manage and paginate through permission records for files or folders in Google Drive.",
      "description_length": 296,
      "index": 463,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BooleanRule",
      "library": "gapi-ocaml",
      "description": "This module defines a boolean rule for conditional formatting in Google Sheets, consisting of a condition and a cell format. It provides functions to construct, manipulate, and serialize boolean rules using lenses and JSON data models. Use this module to create and modify conditional formatting rules that apply specific styles based on cell values.",
      "description_length": 350,
      "index": 464,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddNamedRangeResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a named range in the Google Sheets API. It includes a `namedRange` field that holds the added named range data, along with functions to serialize (`render`, `to_data_model`) and deserialize (`parse`, `of_data_model`) the response to and from JSON. It is used when handling API responses after creating a named range, allowing structured access to the returned data.",
      "description_length": 413,
      "index": 465,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AppendDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for appending rows or columns to a Google Sheet, with operations to set or retrieve the sheet ID, dimension type, and length. It supports JSON serialization and deserialization for API communication. Concrete use cases include constructing requests to expand a sheet's dimensions programmatically.",
      "description_length": 334,
      "index": 466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieval and management of Google+ activity comments, offering direct access to individual comments by ID and paginated listing capabilities. It supports sorting through a polymorphic variant type that allows results to be ordered by date in ascending or descending fashion. Operations include fetching structured comment data, listing comments with optional pagination, and specifying sort direction using type-safe values. Example uses include retrieving a single comment for display or enumerating all comments for an activity sorted by newest first.",
      "description_length": 574,
      "index": 467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying dimension ranges to delete in a Google Sheets document. It includes operations to create, parse, and render delete dimension requests using a `DimensionRange` type that represents the rows or columns to remove. Concrete use cases include programmatically removing specific rows or columns in a spreadsheet via the Google Sheets API.",
      "description_length": 384,
      "index": 468,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceSheetProperties",
      "library": "gapi-ocaml",
      "description": "This module defines properties for sheets connected to external data sources in the Google Sheets API. It includes operations to access and modify the data source ID, columns, and execution status, as well as functions to serialize and deserialize these properties to and from JSON. It is used when working with sheets that display data from external sources, enabling tracking and rendering of data state and structure.",
      "description_length": 420,
      "index": 469,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.MessagePartHeader",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing individual headers within a message part of the Gmail API. It provides functions to construct, parse, and render headers with their name-value pairs. Use cases include extracting metadata such as sender, recipient, or subject from email headers when processing Gmail API responses.",
      "description_length": 335,
      "index": 470,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelModification",
      "library": "gapi-ocaml",
      "description": "This module defines operations for modifying labels in the Google Drive API v3, including setting or removing label fields and toggling label presence on files. It works with the `LabelModification.t` record, which includes label identifiers, field modifications, and removal flags. Concrete use cases include updating metadata on Drive files by applying structured label changes during API requests.",
      "description_length": 400,
      "index": 471,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupValueMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines metadata for pivot group values in a Google Sheets API context, including their calculated values and collapsed state. It provides operations to construct, deconstruct, and manipulate these metadata records, along with serialization and deserialization to JSON data models. Use cases include handling pivot table state in spreadsheets, such as tracking which grouped data entries are expanded or collapsed.",
      "description_length": 426,
      "index": 472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.AutoForwarding",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring automatic email forwarding in the Gmail API. It provides functions to create, modify, and serialize forwarding settings, including setting the target email address, enabling or disabling forwarding, and specifying the message disposition. These operations work directly with the `t` type representing forwarding configurations, and integrate with JSON data models for API communication.",
      "description_length": 449,
      "index": 473,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Upload",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling uploads in the Google Analytics API v3, including parsing and rendering upload data to and from JSON models. It provides lenses for accessing and modifying fields such as account ID, custom data source ID, upload status, and time. Use cases include managing data import statuses, tracking upload errors, and converting upload records for API requests or storage.",
      "description_length": 406,
      "index": 474,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying a range of cells to delete in a Google Sheets document and the direction in which remaining cells should shift to fill the deleted area. It includes functions to construct, modify, and serialize this data structure, supporting operations like deleting rows or columns and adjusting the sheet layout accordingly. Concrete use cases include implementing batch updates that remove specific cell ranges and dynamically reorganizing spreadsheet content during API-driven edits.",
      "description_length": 524,
      "index": 475,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.AnalyticsSummary",
      "library": "gapi-ocaml",
      "description": "This module represents aggregated click analytics data for shortened URLs, with time-specific snapshots including two hours, day, week, month, and all-time periods. It provides accessors via lenses to manipulate and retrieve individual time window analytics and includes functions to serialize and deserialize the data to and from JSON. Use this module to analyze traffic patterns for shortened links, such as tracking recent popularity or long-term engagement.",
      "description_length": 461,
      "index": 476,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.MatchedValueRange",
      "library": "gapi-ocaml",
      "description": "This module represents a range of values in a Google Sheet that match a set of data filters. It provides operations to access and manipulate the matched value range and its associated filters, including parsing and rendering to and from JSON data models. It is used to process filtered data ranges in API responses when interacting with Google Sheets.",
      "description_length": 351,
      "index": 477,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateEmbeddedObjectPositionResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from updating the position of an embedded object in a Google Sheet. It provides functions to parse and render the response to and from JSON, access the new position using a lens, and construct or deconstruct instances. It is used to handle the result of moving embedded objects like charts or images within a spreadsheet document.",
      "description_length": 393,
      "index": 478,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyGroup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a group of calendars in the Google Calendar API's free/busy query response. It includes operations to access and modify the list of calendar IDs and any associated errors, along with functions to serialize and deserialize the structure to and from JSON data models. It is used to process and construct free/busy information for calendar scheduling across multiple calendars.",
      "description_length": 424,
      "index": 479,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdClients",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling a list of ad clients in the AdSense Management API. It provides functions to parse and render ad client data, access individual fields like `etag`, `items`, `kind`, and `nextPageToken` via lenses, and manage empty or serialized ad client list structures. Concrete use cases include processing API responses to retrieve ad client lists, paginating through results using `nextPageToken`, and converting between JSON data models and internal representations.",
      "description_length": 499,
      "index": 480,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Alerts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of AdSense alerts, including operations to access and manipulate the list of alerts and their metadata. It provides functions to convert between the alert list structure and JSON data models for serialization and deserialization. Use cases include processing and transmitting AdSense alert data in API requests and responses.",
      "description_length": 382,
      "index": 481,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.HistoryMessageAdded",
      "library": "gapi-ocaml",
      "description": "This module represents a history record indicating a message was added to a Gmail mailbox. It provides operations to construct, serialize, and deserialize history entries containing a Gmail message. Use this module to track or process message addition events in Gmail mailbox history.",
      "description_length": 284,
      "index": 482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.ListM",
      "library": "gapi-ocaml",
      "description": "This module provides a list monad for composing non-deterministic computations that produce multiple results. It includes core operations like `bind`, `return`, `mzero`, and `mplus` to chain and combine list-based functions, along with utilities such as `guard`, `mapM`, and `foldM` to control flow and filter results. The child module enhances these capabilities by implementing bind and sequence operations that work with list values wrapped in the monad, enabling complex combinations and transformations. For example, you can generate all pairs from two lists, filter them based on conditions, or fold over monadic list computations.",
      "description_length": 637,
      "index": 483,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ModifyLabelsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response structure for label modification operations in the Google Drive API. It includes fields for the list of modified labels and a fixed kind identifier. The module provides functions to parse, render, and convert between JSON data models and the response structure, enabling integration with API requests and responses.",
      "description_length": 346,
      "index": 484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.PermissionId",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing permission identifiers in the Drive API v2, including fields for the permission ID and its kind. It provides functions to serialize and deserialize permission ID data to and from JSON, ensuring compatibility with the API's expected format. Use this module when managing access permissions for files in Google Drive, such as retrieving or setting specific permission details.",
      "description_length": 428,
      "index": 485,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.ChangeList",
      "library": "gapi-ocaml",
      "description": "This module represents a list of changes returned by the Google Drive API, containing operations to access and manipulate the list, including retrieving individual changes, pagination tokens, and the resource kind. It works with structured data types such as `Change.t list` and JSON data models for serialization and deserialization. Concrete use cases include processing incremental changes to files and folders in Google Drive, handling pagination when fetching large change sets, and maintaining synchronization state across API requests.",
      "description_length": 542,
      "index": 486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ProjectReference",
      "library": "gapi-ocaml",
      "description": "This module defines a project reference structure with a required project ID field, supporting operations to parse, render, and convert project references to and from JSON data models. It works with the `t` record type containing a `projectId` string and interacts with `GapiJson.json_data_model` for serialization. Concrete use cases include constructing and serializing BigQuery project references for API requests and parsing responses containing project identifiers.",
      "description_length": 470,
      "index": 487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.PropertiesResource",
      "library": "gapi-ocaml",
      "description": "This module manages custom properties associated with files in Google Drive. It supports operations to add, retrieve, update, patch, list, and delete properties using their keys and file identifiers. These operations interact with `GapiDriveV2Model.Property.t` and `GapiDriveV2Model.PropertyList.t` data structures, enabling precise property manipulation for file metadata tracking or application-specific settings.",
      "description_length": 415,
      "index": 488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JsonValue",
      "library": "gapi-ocaml",
      "description": "This module provides utilities for string manipulation and binary data parsing, operating on immutable byte sequences and encoded character representations. It supports operations such as character transformation, substring extraction, UTF encoding/decoding, integer value extraction from byte sequences, and hash computation, primarily working with strings, bytes, and integer types. These functions are particularly useful for handling JSON-formatted data in BigQuery API interactions, including parsing encoded numerical values, normalizing string representations, and validating data integrity through hashing.",
      "description_length": 614,
      "index": 489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdUnit",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdUnit data structures used in the AdSense Management API. It provides functions to create, parse, and render ad unit records, including accessors for fields like `code`, `id`, `name`, `status`, and `kind`. These operations are used to interact with ad unit resources when retrieving or updating AdSense configuration data via the API.",
      "description_length": 379,
      "index": 490,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Event",
      "library": "gapi-ocaml",
      "description": "This module models calendar events with rich metadata, supporting structured records that include timestamps, recurrence rules, visibility settings, and nested components. It provides lenses and operations to access and modify event fields directly, while its submodules handle specialized data such as creator and organizer details, embedded gadgets, reminder settings, external sources, and extended properties. Use it to configure recurring events with custom reminders, attach interactive tools via HTTPS links, or manage event metadata across private and shared contexts using key-value pairs. The module integrates serialization and deserialization workflows for API communication, enabling full manipulation of event data in JSON format.",
      "description_length": 744,
      "index": 491,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddTableResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a table in the Google Sheets API, specifically capturing the newly added table data. It provides functions to serialize and deserialize the response to and from JSON, along with a lens for accessing the table field. Use this module when handling API responses that return a table after creation, allowing structured manipulation and extraction of table data.",
      "description_length": 412,
      "index": 492,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.DatasetsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage datasets in a BigQuery project, including creating, retrieving, updating, patching, listing, and deleting datasets. It works with dataset identifiers, project identifiers, and session state to interact with the BigQuery API. Concrete use cases include setting up new datasets for data storage, fetching dataset metadata, modifying dataset properties, and cleaning up datasets after data processing tasks.",
      "description_length": 446,
      "index": 493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Channel",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing notification channels in the Google Drive API v3. It includes fields for configuring delivery mechanisms, such as webhook addresses, resource identifiers, and optional parameters like tokens and expiration times. Operations allow constructing, serializing, and modifying channel configurations for use in change monitoring workflows.",
      "description_length": 383,
      "index": 494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ViewDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for BigQuery view definitions, including a required SQL query and optional user-defined function resources. It provides functions to create an empty view definition, render it to JSON, and parse or convert it from JSON data models. Use cases include configuring and serializing BigQuery views that reference custom functions.",
      "description_length": 374,
      "index": 495,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive",
      "library": "gapi-ocaml",
      "description": "This module orchestrates shared drive management by integrating permissions, restrictions, and visual configurations. It handles access control through capability records with boolean flags and lenses, enforces policy rules via restriction flags, and manages UI aesthetics using background image settings. You can validate user access, set domain-wide sharing limits, or apply cropped background images to Drive interfaces. Operations include JSON serialization, capability checks, and restriction enforcement across Google Drive integrations.",
      "description_length": 543,
      "index": 496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ClearValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a values-clearing operation in a spreadsheet API. It includes fields for the spreadsheet ID and the cleared range in A1 notation, along with functions to serialize, deserialize, and manipulate the data. It is used to interpret API responses when clearing cell values and to construct expected response models for testing or logging.",
      "description_length": 400,
      "index": 497,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartAxis",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates axis configurations for basic charts in the Google Sheets API. It includes fields for positioning, titling, text formatting, and view window settings, using associated data types like `TextFormat`, `TextPosition`, and `ChartAxisViewWindowOptions`. Use this module to construct or modify chart axes with specific visual and positional properties for API requests.",
      "description_length": 398,
      "index": 498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Link",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing hyperlinks within the Google Sheets API v4 integration. It includes operations to serialize and deserialize link data to and from JSON, enabling seamless data exchange with the API. Concrete use cases include managing cell hyperlinks and sheet-level link metadata in spreadsheet applications.",
      "description_length": 346,
      "index": 499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for referencing BigQuery tables using project, dataset, and table identifiers. It provides functions to construct, manipulate, and serialize table references to and from JSON data models. Use this module when working with table identifiers in BigQuery API operations, such as querying or managing tables.",
      "description_length": 341,
      "index": 500,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.TrimWhitespaceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for handling the result of a whitespace trimming operation in a Google Sheets API response. It includes functions to parse and render the count of cells affected by the operation, along with lenses for accessing and modifying the data. The primary use case is to track and serialize how many cells were modified when trimming whitespace in a spreadsheet.",
      "description_length": 406,
      "index": 501,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.ReportsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `generate` function to create and retrieve AdSense reports with parameters like date range, metrics, dimensions, and filters. It works with AdSense report data, handling queries against publisher inventory and returning results in JSON or CSV. Use it to programmatically analyze ad performance, revenue, and traffic metrics for specific time periods and account segments.",
      "description_length": 396,
      "index": 502,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.WatchRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring Gmail API push notifications. It includes fields to specify label filters, a list of label IDs to monitor, and a Pub/Sub topic for event delivery. It provides functions to construct, serialize, and parse this configuration for use with the Gmail API's push notification system.",
      "description_length": 330,
      "index": 503,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListHistoryResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response from listing Gmail history records, containing a list of history entries, a current history ID, and a page token for pagination. It provides accessors to retrieve and modify individual fields, as well as functions to serialize and deserialize the structure to and from JSON data models. It is used when processing incremental changes to a user's mailbox, such as tracking message additions or thread updates.",
      "description_length": 442,
      "index": 504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddSheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating a new sheet within a Google Sheets document via the API. It includes functions to manipulate sheet properties, generate JSON payloads for API requests, and parse or convert data models to and from JSON format. Concrete use cases include setting up new sheets with custom properties like titles, grid dimensions, or sheet IDs during spreadsheet automation tasks.",
      "description_length": 423,
      "index": 505,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceParameter",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for parameters used in data sources within Google Sheets, specifically handling named parameters, named range IDs, and grid ranges. It provides functions to serialize and deserialize these parameters to and from JSON, ensuring compatibility with the API's expected input formats. Concrete use cases include configuring data source connections that reference specific cells or named ranges in a spreadsheet for dynamic data retrieval.",
      "description_length": 470,
      "index": 506,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateTableRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update a table in the Google Sheets API, specifying the table data and fields to modify. It works with `Table.t` and string fields, using lenses for accessing and updating record components. Concrete use cases include constructing and serializing table update requests for API calls, or parsing responses into structured data.",
      "description_length": 359,
      "index": 507,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnits",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling ad unit list responses in the AdSense Management API. It provides functions to parse and render ad unit data, access individual fields like `etag`, `items`, `kind`, and `nextPageToken` via lenses, and manage pagination tokens for retrieving large sets of ad units. Concrete use cases include processing API responses to list ad units, constructing requests for subsequent pages, and extracting specific ad unit metadata for further processing.",
      "description_length": 487,
      "index": 508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableSchema",
      "library": "gapi-ocaml",
      "description": "This module defines the structure of a BigQuery table schema, including a list of field schemas. It provides operations to create an empty schema, render a schema to JSON data model format, and parse or convert JSON data into a schema object. Use this module when defining or manipulating table schemas for BigQuery operations, such as creating or updating tables with specific field definitions.",
      "description_length": 396,
      "index": 509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Promotion",
      "library": "gapi-ocaml",
      "description": "This module organizes data structures and utilities for managing search result promotions, integrating core types like titles, links, and images with JSON serialization and field accessors. Its main types represent promotional content and image metadata, enabling structured parsing and rendering of JSON data from the CustomSearch API. Operations include extracting dimensions and URLs from image promotions, and transforming HTML titles and links into display-ready components. Use it to process and render rich promotional content within web applications or indexing workflows.",
      "description_length": 580,
      "index": 510,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.AboutResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` operation to retrieve information about the current user and Drive API settings, such as storage quotas and capabilities. It works with the `About.t` data type, which contains user-specific Drive metadata. A concrete use case is fetching the current user's Drive storage usage and API limits to inform client-side decisions or display user-specific Drive information in an application interface.",
      "description_length": 426,
      "index": 511,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceFormula",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a data source formula in the Google Sheets API, including its associated data source ID and execution status. It provides functions to create an empty formula, render it to JSON, and parse or convert it from JSON data models. Use this module when working with data source formulas in spreadsheets, such as tracking external data integrations or query results.",
      "description_length": 413,
      "index": 512,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ConditionValue",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for condition values used in Google Sheets conditional formatting and data validation rules. It supports operations to specify relative dates or user-entered values, including formulas, as conditions. The module is used to construct and interpret condition values when applying or reading conditional formats or filters in a spreadsheet.",
      "description_length": 401,
      "index": 513,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for configuring how values are aggregated and displayed in a Google Sheets pivot table. It includes fields to specify source columns, summarization functions, custom formulas, and display formatting options like percentage of total. Functions allow constructing, modifying, and serializing pivot value configurations for use with the Google Sheets API.",
      "description_length": 404,
      "index": 514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.TablesResource",
      "library": "gapi-ocaml",
      "description": "This module handles table management within a dataset, providing operations to create, delete, retrieve, list, and modify tables. It works with table resources defined in the BigQuery API, specifically using `GapiBigqueryV2Model.Table.t` and `GapiBigqueryV2Model.TableList.t` for data representation. Concrete use cases include setting up new tables, removing obsolete tables, fetching table metadata, and updating table configurations.",
      "description_length": 436,
      "index": 515,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartAxisViewWindowOptions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart axis view window options for numeric range display in Google Sheets charts. It provides accessors for minimum and maximum values and the view window mode, along with functions to serialize and deserialize these options to and from JSON data models. It is used to configure how numeric axes are displayed in chart visualizations.",
      "description_length": 370,
      "index": 516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BandingProperties",
      "library": "gapi-ocaml",
      "description": "This module defines properties for banding rows or columns in a Google Sheets spreadsheet, specifying colors for headers, alternating bands, and footers using either direct color values or color styles. It provides lenses to access and modify individual color fields, along with functions to serialize and deserialize banding configurations to and from JSON data models. Concrete use cases include applying alternating row colors in a sheet view or customizing header/footer appearance with specific color styles.",
      "description_length": 513,
      "index": 517,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteTableRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a table in the Google Sheets API, containing the `tableId` field to specify which table to remove. It provides functions to serialize and deserialize the request to and from JSON data models, ensuring compatibility with API payloads. Use this module when constructing or processing delete table operations in Google Sheets API v4 integrations.",
      "description_length": 393,
      "index": 518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.MoveDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to move a range of rows or columns in a Google Sheets spreadsheet. It includes operations to specify the source dimension range and the destination index, along with functions to serialize and deserialize the request for API communication. It is used when reordering rows or columns in a sheet, such as shifting a group of rows to a new position within the same sheet.",
      "description_length": 398,
      "index": 519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Payment",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling payment information in the AdSense Management API. It provides lenses to access fields like payment amount, currency code, and date, along with functions to convert between JSON data models and native OCaml types. It is used to process and transmit payment details retrieved or updated via the AdSense API.",
      "description_length": 383,
      "index": 520,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore.PostData",
      "library": "gapi-ocaml",
      "description": "This module represents HTTP POST data payloads with support for form fields and raw body content. It handles string, file, and buffer-based body data with metadata like content type. Used to construct multipart/form-data or JSON requests with precise binary or textual payloads.",
      "description_length": 278,
      "index": 521,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Userinfoplus",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing extended user information returned by the Google OAuth2 API, including fields such as email, name, gender, and profile picture URL. It provides lenses for accessing and modifying individual fields, functions for converting to and from JSON data models, and an empty value for initialization. Concrete use cases include processing user profile data after authentication and serializing user info for storage or transmission.",
      "description_length": 473,
      "index": 522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Thread",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for a Gmail thread, including operations to access and modify thread properties such as `historyId`, `id`, `messages`, and `snippet`. It works with the `Thread.t` type, which represents a thread containing a list of messages, and interacts with JSON data models for serialization and deserialization. Concrete use cases include parsing API responses into thread objects, rendering threads into JSON for API requests, and updating thread data incrementally using lenses.",
      "description_length": 530,
      "index": 523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.HashClientIdResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling client ID hashing responses from the Google Analytics API v3. It includes fields for the original client ID, hashed client ID, resource kind, and web property ID, with lenses for accessing and modifying individual fields. The module supports serialization to and from JSON data models, enabling integration with API request/response handling.",
      "description_length": 392,
      "index": 524,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.EventAttachment",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates attachment data for calendar events, including properties such as file URLs, titles, and MIME types. It provides functions to convert between attachment records and JSON data models, supporting operations like parsing and rendering structured data. Concrete use cases include handling file attachments from Google Drive in calendar event workflows, and managing attachment metadata during event synchronization.",
      "description_length": 447,
      "index": 525,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.ReportingMetadataEntry",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling reporting metadata entries in the AdSense Management API, including compatibility and dependency relationships between dimensions and metrics. It provides functions to serialize and deserialize these entries to and from JSON, ensuring proper representation in API requests and responses. Use cases include validating report configurations and managing metadata for dynamic report generation.",
      "description_length": 441,
      "index": 526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceProperties",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates conference properties for calendar events, specifically handling allowed conference solution types such as \"eventHangout\", \"eventNamedHangout\", and \"hangoutsMeet\". It provides functions to parse, render, and convert between internal data models and JSON representations. Use cases include configuring calendar event settings and serializing/deserializing conference data for API requests.",
      "description_length": 424,
      "index": 527,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AdclientsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all ad clients in an AdSense account, returning paginated results when necessary. It works with `GapiAdsenseV1_1Model.AdClients.t` and session data for API interaction. A concrete use case is fetching ad client information to manage and monitor AdSense inventory across multiple sites or domains.",
      "description_length": 350,
      "index": 528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for the Google Site Verification API. It includes specific permissions for managing site ownership verifications and adding new sites. These scopes are used to control access when integrating with Google's API for domain verification workflows.",
      "description_length": 286,
      "index": 529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ChangeList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a paginated list of changes returned by the Drive API. It includes fields for accessing the list's metadata, such as the largest change ID, next page token, and links, along with the actual list of changes. It provides functions to serialize and deserialize the structure to and from JSON, and to construct or manipulate instances using lenses or predefined values like `empty`.",
      "description_length": 428,
      "index": 530,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.ErrorProto",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing errors returned by the BigQuery API, including fields for debugging information, error location, human-readable messages, and error codes. It provides functions to serialize and deserialize error data to and from JSON, enabling integration with API responses and logging systems. Use cases include parsing error responses from BigQuery queries and formatting them for debugging or user feedback.",
      "description_length": 449,
      "index": 531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Streamingbuffer",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the `Streamingbuffer` data structure, representing metadata about a BigQuery streaming buffer. It provides accessors (`estimatedBytes`, `estimatedRows`, `oldestEntryTime`) to retrieve specific fields, along with functions to serialize and deserialize instances to and from JSON data models. It is used to inspect the current state of a streaming buffer, including size estimates and the timestamp of the oldest data entry.",
      "description_length": 458,
      "index": 532,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Settings",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling user settings in a calendar API. It includes fields like `etag`, `nextPageToken`, `items`, `nextSyncToken`, and `kind`, along with lenses for accessing and modifying these fields. It supports parsing and rendering settings data to and from JSON, enabling synchronization and pagination of user-specific calendar configurations.",
      "description_length": 391,
      "index": 533,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response type for batch-clearing values in a Google Sheets spreadsheet using data filters. It includes fields for the spreadsheet ID and the list of cleared ranges in A1 notation, reflecting the actual bounds affected. Functions allow parsing, rendering, and converting the response to and from JSON data models for API interaction.",
      "description_length": 354,
      "index": 534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a batch update operation on a Google Sheets spreadsheet. It includes fields for the number of updated rows, columns, cells, and sheets, along with individual responses for each updated range. The module provides functions to serialize and deserialize this data to and from JSON, as well as accessors to manipulate its individual fields.",
      "description_length": 404,
      "index": 535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.PagesResource",
      "library": "gapi-ocaml",
      "description": "Implements operations to retrieve blog pages by ID or list pages for a blog, supporting optional filtering and metadata handling. Works with blog identifiers, page identifiers, and session state to interact with Blogger API endpoints. Useful for fetching specific blog pages or enumerating pages from a blog, with control over data retrieval parameters like body content inclusion.",
      "description_length": 381,
      "index": 536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListFiltersResponse",
      "library": "gapi-ocaml",
      "description": "Handles parsing and rendering of Gmail API filter lists in JSON format. Works with `Filter.t list` data structures to represent user-defined filters. Used to serialize and deserialize filter configurations for API requests and responses.",
      "description_length": 237,
      "index": 537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ChannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `stop` operation to terminate a channel used for watching Drive API resources. It works with `GapiDriveV2Model.Channel.t` and `GapiConversation.Session.t` to manage active subscriptions. A concrete use case is ending a notification channel when no longer monitoring file changes or updates in Google Drive.",
      "description_length": 331,
      "index": 538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.CommentList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing fields of a paginated list of Drive API comments. Works with `CommentList.t` records containing comment lists, pagination tokens, and links. Used to retrieve and navigate through collections of Drive file comments in API responses.",
      "description_length": 273,
      "index": 539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.PlusAclentryResource",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an access control list (ACL) entry for the Google+ API. It includes fields for display name, entry ID, and entry type, supporting operations to manipulate and serialize these entries to and from JSON. It is used to manage access permissions for resources like posts or profiles by specifying entities such as individuals, circles, or domains.",
      "description_length": 392,
      "index": 540,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model.Accounts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of AdSense accounts, including metadata like ETag, kind, and pagination tokens. It provides operations for parsing and rendering account data to and from JSON, as well as lenses for accessing and modifying individual fields. It is used to manage responses from the AdSense Management API when retrieving multiple accounts.",
      "description_length": 379,
      "index": 541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateEmbeddedObjectPositionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update the position of an embedded object in a Google Sheet. It includes operations to specify the object ID, set a new position with optional sheet creation, and define which fields to update. The module works with JSON data models and provides functions to serialize, deserialize, and manipulate the request structure for API interactions.",
      "description_length": 374,
      "index": 542,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GradientRule",
      "library": "gapi-ocaml",
      "description": "This module defines a gradient rule for conditional formatting in Google Sheets, consisting of start, mid, and end interpolation points. It provides functions to construct, serialize, and deserialize gradient rules to and from JSON data models. Use this module to apply multi-point color gradients based on cell values in spreadsheet conditional formatting rules.",
      "description_length": 363,
      "index": 543,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.LabelField",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates label fields in the Google Drive API v3, supporting operations to set, retrieve, and convert field values of specific types such as date strings, integers, selections, text, and users. It works with a record type that includes optional fields depending on the value type, along with lenses for accessing those fields and functions for JSON serialization and deserialization. Concrete use cases include constructing and parsing label field data when interacting with Drive's labeling system, such as setting a date-based field for document review or tracking user assignments.",
      "description_length": 611,
      "index": 544,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TimeOfDay",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing time-of-day values with precision down to nanoseconds, specifically tailored for use with the Google Sheets API. It includes functions to serialize and deserialize time values to and from JSON data models, ensuring compatibility with API requests and responses. Use cases include formatting time values for spreadsheet cell updates or interpreting time-based data retrieved from Sheets.",
      "description_length": 440,
      "index": 545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CreateDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from creating developer metadata in the Google Sheets API. It includes a `developerMetadata` field that holds the created metadata, alongside functions to parse, render, and convert the response to and from JSON data models. It is used when interacting with developer metadata operations in Sheets, such as associating custom data with spreadsheet elements.",
      "description_length": 393,
      "index": 546,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceObjectReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for referencing objects tied to data sources in Google Sheets, including sheet ID, chart ID, and grid coordinates for tables, pivot tables, and formulas. It provides lenses for accessing and modifying individual fields, along with serialization and deserialization functions for converting to and from JSON data models. It is used to manage and manipulate data source references within Sheets documents programmatically.",
      "description_length": 457,
      "index": 547,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiments",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates collections of Google Analytics experiments, including pagination and metadata. It provides lenses for accessing fields like the list of experiments, page size, navigation links, and user information. Use cases include parsing and rendering experiment data from API responses, handling paginated results, and constructing experiment collections from JSON models.",
      "description_length": 398,
      "index": 548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines string constants representing OAuth 2.0 scope values for the Google Drive API v3. It provides specific access levels for operations such as reading, editing, and managing files, metadata, and app-specific data in Google Drive. These scopes are used to request authorization for actions like accessing user files, modifying scripts, or viewing photos.",
      "description_length": 370,
      "index": 549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshSchedule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the refresh schedule configuration for data sources in a Google Sheets document. It supports operations to set and retrieve daily, weekly, and monthly refresh intervals, enable or disable the schedule, and determine the next scheduled run time. The module works directly with structured types representing refresh schedules and integrates with JSON data models for serialization and deserialization.",
      "description_length": 435,
      "index": 550,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.PostList",
      "library": "gapi-ocaml",
      "description": "Handles structured data for paginated blog post listings, providing access to post collections, navigation tokens, and metadata. Works with `Post.t` lists and JSON data models for serialization. Used to retrieve and manage multi-page blog post responses from the Blogger API.",
      "description_length": 275,
      "index": 551,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarNotification",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates calendar notification settings for the Google Calendar API v3. It provides functions to create, serialize, and deserialize notification configurations that specify delivery methods (e.g., email) and event triggers (e.g., event creation, cancellation). Use this module to configure and manage event-based notifications in a Google Calendar integration.",
      "description_length": 387,
      "index": 552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.PeopleResource",
      "library": "gapi-ocaml",
      "description": "This module retrieves and manages user profile data, supporting operations to fetch individual profiles with guaranteed fields like age range and language, list people in collections such as followers or circles, and perform public user searches using criteria like name or activity. It works with data types `Person`, `PeopleFeed`, and `Session`, and integrates visibility, relationship, and sorting controls from its submodules to refine API requests. The submodules enable converting string representations to enumerated types for person lists and sorting options, allowing precise control over data retrieval in Google+ API interactions. Example uses include fetching a user's visible contacts sorted alphabetically or retrieving activity participants ordered by relevance.",
      "description_length": 777,
      "index": 553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ResolveAccessProposalRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for resolving access proposals in the Google Drive API v3. It provides functions to set or retrieve the action, roles, view, and notification preferences when handling access requests. Use cases include accepting or denying access to Drive resources with specific role assignments and notification settings.",
      "description_length": 338,
      "index": 554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Draft",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for working with email drafts in the Gmail API v1. It provides accessors to retrieve or modify the immutable ID and message content of a draft, along with functions to serialize and deserialize draft data for API communication. Concrete use cases include creating, updating, and managing draft emails by interacting with their underlying JSON representation.",
      "description_length": 407,
      "index": 555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource",
      "library": "gapi-ocaml",
      "description": "This module orchestrates core spreadsheet lifecycle operations\u2014creating new spreadsheets, fetching structured data through range-based queries or filters, and executing batch updates atomically. It coordinates with sheet-level duplication, cell value manipulation, and developer metadata tracking to enable comprehensive spreadsheet management. Key data types include spreadsheet identifiers, batch update requests, and filtered range specifications, while operations span cross-sheet copying, formatted value reads/writes, and metadata searches. Example workflows include migrating sheets between documents, logging timestamped data with locale-aware formatting, and querying metadata to locate structured annotations within a spreadsheet.",
      "description_length": 740,
      "index": 556,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.ColorsResource",
      "library": "gapi-ocaml",
      "description": "This module retrieves color definitions for calendars and events in the Calendar API v3. It operates on color resources, returning predefined color mappings that can be used to categorize events and calendars visually. A typical use case involves fetching these color definitions to apply consistent color coding across calendar entries in a user interface.",
      "description_length": 357,
      "index": 557,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model.Account",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdSense account data, including creating empty account records, parsing and rendering JSON data models, and converting between account structures and JSON representations. It works with the `Account.t` type, which represents AdSense accounts with fields like `id`, `name`, and `subAccounts`, and interacts directly with `GapiJson.json_data_model` for serialization. Concrete use cases include deserializing AdSense account responses from API calls and constructing account data for API requests.",
      "description_length": 539,
      "index": 558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextToColumnsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to split text in a column into multiple columns using a specified delimiter. It includes fields for the source range, delimiter string, and delimiter type, ensuring the source spans exactly one column. It is used to format data in Google Sheets by splitting cell content into adjacent columns based on a delimiter.",
      "description_length": 344,
      "index": 559,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceResource",
      "library": "gapi-ocaml",
      "description": "This module represents verified web resources in the Google Site Verification API, managing data like identifiers, owners, and site metadata. It supports operations to serialize and deserialize resources, enabling integration with API responses and requests. The child module focuses on site-specific data structures, offering functions to create, parse, and render site objects in JSON for verified URLs or domains. Together, they facilitate managing site verification records by combining resource-level metadata with structured site data for API interactions.",
      "description_length": 562,
      "index": 560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ExplainQueryStep",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a step in a BigQuery execution plan, with fields for the machine-readable operation type and a list of human-readable substep descriptions. It provides functions to create, render, and parse this structure to and from JSON data models. Use this module when analyzing or debugging BigQuery job execution details, such as understanding query plan stages or displaying step-by-step execution information in a user interface.",
      "description_length": 471,
      "index": 561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDataSourceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from updating a data source in the Google Sheets API. It includes fields for the updated data source and its execution status, along with functions to serialize, deserialize, and manipulate these responses. It is used when interacting with external data sources connected to Google Sheets, enabling tracking of changes and execution states.",
      "description_length": 412,
      "index": 562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SlicerSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring slicer filters in Google Sheets, including properties like data range, filter criteria, column index, and visual styling. It provides lenses for accessing and modifying individual fields, as well as functions to serialize and deserialize slicer specifications to and from JSON. It is used when creating or manipulating slicers that filter data tables and optionally pivot tables in a spreadsheet.",
      "description_length": 459,
      "index": 563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiError.SingleError",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing individual server errors with fields like domain, reason, message, and location. It provides lenses for accessing and modifying each field, along with functions to parse and render error data to and from JSON. Use this module to handle and serialize detailed error information returned by a server, such as when validating API requests or processing failed responses.",
      "description_length": 421,
      "index": 564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AdclientsResource",
      "library": "gapi-ocaml",
      "description": "This module handles listing ad clients in an AdSense account, returning paginated results. It works with `GapiAdsenseV1_4Model.AdClients` and session data to maintain request context. A concrete use case is retrieving ad client identifiers and properties for reporting or account management tasks.",
      "description_length": 297,
      "index": 565,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDimensions",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and transformations for Google Analytics API v3 custom dimensions. It provides lenses for accessing and modifying fields like items, pagination parameters, and links, along with serialization and deserialization functions for JSON data models. It is used to process and manipulate API responses containing lists of custom dimensions.",
      "description_length": 369,
      "index": 566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DimensionRange",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates dimension range structures for Google Sheets API operations, supporting creation, parsing, and serialization to JSON. It works with records containing sheet identifiers, dimension types (rows or columns), and optional start/end indices. Concrete use cases include specifying row or column ranges for batch updates, formatting, or data retrieval in spreadsheet automation tasks.",
      "description_length": 413,
      "index": 567,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Filter",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for managing Gmail API filters, including criteria matching and actions. It provides functions to create, parse, and render filter configurations using JSON data models. Concrete use cases include setting up email filtering rules for automated message handling in Gmail.",
      "description_length": 317,
      "index": 568,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.ModifyLabelsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying file labels in Google Drive API v3. It includes operations to create an empty request, set or retrieve label modifications and the request kind, and convert the structure to or from JSON data models. It is used to apply label changes to files in Google Drive programmatically.",
      "description_length": 327,
      "index": 569,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.TableRowsProperties",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates row styling properties for Google Sheets tables, including header, alternating band, and footer row colors. It works with the `t` record type, which contains optional color styles for each row type, and uses `ColorStyle.t` for color definitions. Concrete use cases include setting custom banded row colors, adding or removing a footer row with specific styling, and serializing or deserializing these properties to and from JSON for API requests.",
      "description_length": 482,
      "index": 570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ReplyList",
      "library": "gapi-ocaml",
      "description": "Handles pagination and serialization of reply lists in the Google Drive API v3. It provides access to a list of replies, metadata about the resource kind, and a token for fetching subsequent pages. This module is used to process and construct paginated responses when retrieving comments or annotations from Google Drive resources.",
      "description_length": 331,
      "index": 571,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteBandingRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with a single integer field representing the ID of a banded range to delete. It includes functions to create an empty instance, convert to and from JSON data models, and access or modify the banded range ID. It is used to construct and manipulate delete banding requests when interacting with the Google Sheets API.",
      "description_length": 349,
      "index": 572,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model.CustomChannel",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates AdSense custom channels, combining core operations with targeting configuration capabilities from its child module. It supports data types like `custom_channel` and `targeting_info`, offering lenses for field access and JSON serialization for data interchange. You can create and modify custom channel settings, define targeting rules based on geography and language, and extract metadata for reporting or API integration. The module enables full lifecycle management of custom channel configurations, from creation to JSON rendering and response parsing.",
      "description_length": 594,
      "index": 573,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.CalendarListResource",
      "library": "gapi-ocaml",
      "description": "This module manages a user's calendar list with operations to list, retrieve, add, update, and remove calendars, using data structures like `CalendarList` and `CalendarListEntry`. It integrates access control through roles such as `Owner`, `Writer`, `Reader`, and `FreeBusyReader`, enabling fine-grained permission management for shared calendars. You can synchronize calendar lists, adjust visibility settings, and assign access roles when sharing calendars with others. The combination of direct list manipulation and access control provides a full interface for managing calendar collections and their permissions.",
      "description_length": 617,
      "index": 574,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.QueryResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from a BigQuery query execution, including fields like `jobReference`, `rows`, and `schema`. It provides accessors (lenses) to manipulate and retrieve specific parts of the response, such as `cacheHit`, `totalBytesProcessed`, and `pageToken`. Use this module to inspect query results, handle pagination via `pageToken`, and check job status with `jobComplete`.",
      "description_length": 396,
      "index": 575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying ranges in a Google Sheets document to be cleared of values. It provides functions to manipulate and serialize these range specifications, supporting operations like clearing multiple cell regions in A1 or R1C1 notation. Concrete use cases include resetting specific cells or ranges in a spreadsheet during batch updates.",
      "description_length": 372,
      "index": 576,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListSmimeInfoResponse",
      "library": "gapi-ocaml",
      "description": "Handles serialization and deserialization of a list of S/MIME certificate information in the Gmail API v1 data model. Works directly with `GapiGmailV1Model.SmimeInfo.t list` and JSON data structures. Used to convert between internal S/MIME info representations and their JSON wire format during API requests and responses.",
      "description_length": 322,
      "index": 577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating cell data in a Google Sheets document. It includes functions to specify the target range, starting coordinate, row data, and fields to update, along with utilities to serialize and deserialize the request to and from JSON. It is used to construct and manipulate requests that modify specific cell contents and properties in a spreadsheet.",
      "description_length": 400,
      "index": 578,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDimension",
      "library": "gapi-ocaml",
      "description": "This module models Google Analytics custom dimensions with core data structures that include account ID, activation status, creation time, and scope. It offers lenses for precise field access and mutation, along with JSON serialization and deserialization capabilities for seamless API integration. The parent link submodule enhances this functionality by representing relationships to web properties through `_type` and `href` fields, enabling structured navigation and reference within Google Analytics. Together, these components support programmatic management of custom dimension configurations, such as creating, updating, and parsing dimensions and their associated links in API workflows.",
      "description_length": 696,
      "index": 579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfiguration",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration options for BigQuery jobs, including operations for copying tables, extracting data, linking datasets, loading data, and executing queries. It works with structured data types representing job configurations, such as `JobConfigurationTableCopy`, `JobConfigurationExtract`, and related types. Concrete use cases include setting up data ingestion pipelines, validating query syntax without execution, and managing dataset exports.",
      "description_length": 466,
      "index": 580,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Acl",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing access control lists (ACLs) in the Google+ API v1. It provides functions to create, parse, and render ACL data, which includes descriptions, access entries, and resource kinds. Concrete use cases include configuring visibility settings for social media posts and managing user permissions in Google+ integrations.",
      "description_length": 375,
      "index": 581,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllResponse",
      "library": "gapi-ocaml",
      "description": "This module processes responses from bulk row insertions into BigQuery tables, capturing and organizing any errors that occur during the operation. It centers around a list of `InsertErrors` and a string resource type, enabling users to inspect failed insertions, retrieve row indices, and serialize or deserialize error data to JSON. With support for parsing and rendering error details, it facilitates robust error handling when streaming data into BigQuery. It integrates structured error reporting through its child module, which defines the `InsertErrors` type and provides utilities for error list manipulation and JSON conversion.",
      "description_length": 637,
      "index": 582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for constructing batch update requests to a spreadsheet API. It includes fields to specify input interpretation, cell values to update, and response formatting options for rendered values and dates. The module works with lists of `ValueRange` records to apply multiple updates in a single request and supports parsing and rendering to and from JSON data models.",
      "description_length": 410,
      "index": 583,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ScorecardChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring scorecard charts in the Google Sheets API. It includes fields for specifying key and baseline value data, formatting options, scaling factors, and number format sources, all tailored for visualizing performance metrics. Functions allow creating, rendering, and parsing scorecard chart specifications to and from JSON data models.",
      "description_length": 394,
      "index": 584,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCore.SignatureMethod",
      "library": "gapi-ocaml",
      "description": "This module defines the signature methods used for authenticating API requests, specifically supporting RSA-SHA1 and HMAC-SHA1 algorithms. It provides a conversion function `to_string` to obtain the string representation of each method. Used in generating and verifying signed OAuth requests.",
      "description_length": 292,
      "index": 585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module represents Google Drive API comments with a core `Comment` type that includes fields like anchor text, author metadata, content, and status, along with lenses for precise manipulation. It supports bidirectional conversion between Comment values and a generic JSON model, enabling serialization for API requests or storage. The associated context module captures MIME type and content snippets of commented file segments, providing functions to create, modify, and serialize comment contexts. Together, these components allow developers to build, parse, and manage Drive comment data, including its surrounding context, during API interactions or batch processing tasks.",
      "description_length": 681,
      "index": 586,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartSourceRange",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for specifying chart source ranges in Google Sheets API requests. It includes functions to create, manipulate, and serialize `ChartSourceRange` values, which consist of lists of grid ranges used for chart domains and series. Use this module when configuring chart data sources in spreadsheet automation tasks, such as defining input ranges for line or bar charts.",
      "description_length": 414,
      "index": 587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateBandingRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating banded ranges in a Google Sheets document. It includes functions to set or retrieve the banded range and fields to update, along with serialization and deserialization utilities for interacting with the API's JSON format. It is used when applying conditional formatting changes to spreadsheet ranges through the Google Sheets API.",
      "description_length": 392,
      "index": 588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddNamedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a named range to a Google Sheets document. It includes functions to create an empty request, set or retrieve a named range, and convert the request to or from JSON data models. It is used when programmatically defining named ranges in spreadsheets via the API.",
      "description_length": 320,
      "index": 589,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddSheetResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from adding a sheet in the Google Sheets API. It provides access to the properties of the newly added sheet, along with functions to serialize and deserialize the response to and from JSON data models. It is used to interpret API responses when creating new sheets and to construct or modify such responses programmatically.",
      "description_length": 396,
      "index": 590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReports",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of unsampled reports in the Google Analytics API v3. It includes fields for pagination (start index, items per page, total results), navigation links (next and previous), and metadata like kind and username. Functions allow parsing, rendering, and manipulating these report collections, specifically for interacting with the API's unsampled report endpoints.",
      "description_length": 434,
      "index": 591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.OverlayPosition",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for overlay positions in a Google Sheets document. It includes fields for anchoring cells, pixel offsets, and dimensions, along with lenses for accessing and modifying individual properties. It supports serialization and deserialization to and from JSON data models for integration with the Sheets API.",
      "description_length": 363,
      "index": 592,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Permission",
      "library": "gapi-ocaml",
      "description": "This module provides tools for manipulating access control entries in Google Drive, focusing on user/group permissions, roles, and metadata. It works with structured JSON data and typed representations of Drive permissions, enabling conversion between JSON models and OCaml types. Common use cases include managing file sharing configurations and auditing access controls programmatically.",
      "description_length": 389,
      "index": 593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.RevisionList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and manipulation of Google Drive API revision lists. Works with `t` records containing pagination tokens, resource kind, and revision lists. Used to process and traverse paginated revision data from Drive API responses.",
      "description_length": 247,
      "index": 594,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceSolution",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing conference solutions in a calendar API, including creating, parsing, and rendering conference solution data. It works with structured data types like `t` that include fields for icons, names, and unique keys, alongside JSON data models for serialization. Concrete use cases include integrating video conferencing tools into calendar events by associating them with specific solutions and keys.",
      "description_length": 437,
      "index": 595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.ChannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `stop` operation to terminate a channel used for watching calendar resources. It works with `GapiCalendarV3Model.Channel.t` and `GapiConversation.Session.t` to manage the lifecycle of event notifications. A concrete use case is unsubscribing from calendar event updates when no longer needed.",
      "description_length": 317,
      "index": 596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Place",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates place data from the Google+ API, with core fields like address, display name, identifier, kind, and geographic position. It provides JSON parsing and rendering, empty record creation, and field access via lenses. The Address submodule handles formatted address data, enabling structured representation and JSON conversion for physical locations. The Position submodule defines latitude and longitude storage, supporting creation, JSON output, and input parsing for geographic coordinates. Together, these components allow building, modifying, and serializing complete place records with nested address and position data.",
      "description_length": 659,
      "index": 597,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PointStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for customizing point styles in Google Sheets charts. It provides operations to set and retrieve point size and shape, render configurations into JSON data models, and parse or convert JSON data into point style configurations. Use cases include configuring scatter plot or line chart markers with specific sizes and shapes when interacting with the Sheets API.",
      "description_length": 408,
      "index": 598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates comment data in the Blogger API v2, including author, content, timestamps, and references to related blog posts and parent comments. It provides operations to parse, render, and update comment metadata, supporting full interaction with the API, such as retrieving comment threads or submitting new comments with associated blog and post identifiers. The post submodule handles JSON conversion and initialization of post references, the author submodule manages author metadata including display names and avatars, the blog identifier submodule tracks blog IDs, and the parent reference submodule links comments to their parent in threaded discussions. Use these components together to build, modify, and serialize comment data with full contextual information.",
      "description_length": 799,
      "index": 599,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiUrlshortenerV1Model.StringCount",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a labeled count entry, such as a country or browser with an associated click count. It provides functions to serialize and deserialize instances to and from JSON data models, as well as accessors for the label (`id`) and numeric value (`count`). It is used to represent top entries in URL shortener analytics, such as top countries or browsers by click volume.",
      "description_length": 410,
      "index": 600,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ColorStyle",
      "library": "gapi-ocaml",
      "description": "This module defines a color style type that can represent either an RGB color or a named theme color. It provides functions to construct, render, and parse color styles to and from JSON data models. Use this module when applying or retrieving color formatting in Google Sheets cells or ranges.",
      "description_length": 293,
      "index": 601,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelFieldModification",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying specific fields in a Google Drive label. It supports setting or unsetting values of various types\u2014text, date, integer, selection, user\u2014by field ID. Use cases include updating metadata on Drive items through the API, such as changing a document's status or due date.",
      "description_length": 316,
      "index": 602,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.SetBasicFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for setting a basic filter in a Google Sheets API request. It includes functions to create an empty filter request, render a filter request to JSON data, parse JSON data into a filter request, and convert between filter requests and JSON data models. The primary data structure is a record containing a `BasicFilter.t` value, which represents the filter criteria applied to spreadsheet data.",
      "description_length": 422,
      "index": 603,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.BatchDeleteMessagesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batch-deleting messages in the Gmail API by specifying a list of message IDs. It provides functions to create an empty request, render the request into JSON format, and parse or convert JSON data into a request object. Concrete use cases include sending a batch deletion command to Gmail's API with a list of specific message IDs to remove.",
      "description_length": 381,
      "index": 604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ImapSettings",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates IMAP settings for a Gmail account, including auto-expunge behavior, folder size limits, and expunge actions. It works with a record type containing boolean, string, and integer fields, along with lenses for accessing and modifying those fields. Use this module to configure IMAP behavior when interacting with Gmail, such as setting message deletion policies or folder size constraints.",
      "description_length": 422,
      "index": 605,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience",
      "library": "gapi-ocaml",
      "description": "This module structures data modeling for remarketing audiences in Google Analytics API v3, offering lenses to access and modify fields like account information, audience definitions, and timestamps. It provides JSON serialization via `render` and `parse` functions, alongside conversions between internal types and JSON representations, enabling integration with API endpoints for audience configuration. Supporting types include `StateBasedAudienceDefinition` and `AudienceDefinition`, allowing hierarchical data handling and structured payload generation for API interactions. You can use it to define dynamic remarketing criteria, such as temporary exclusion lists based on user behavior or session data, by configuring inclusion and exclusion rules through lenses and serializing them into API-compatible JSON payloads.",
      "description_length": 823,
      "index": 606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Colors",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling color palettes in a calendar API, specifically managing mappings of color IDs to their definitions for both calendars and events. It includes functions to parse and render color data to and from JSON, as well as lenses for accessing and updating specific fields like `calendar`, `event`, and `updated`. Use cases include retrieving and displaying predefined color options for calendar and event entries in a user interface.",
      "description_length": 485,
      "index": 607,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiError.RequestError",
      "library": "gapi-ocaml",
      "description": "This module defines a structured representation of server errors, including a list of individual errors, an error code, and a message. It provides operations to access and modify these fields using lenses, as well as functions to convert error data to and from a JSON data model. It is used to handle and serialize API error responses in a type-safe manner.",
      "description_length": 357,
      "index": 608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Acl",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing access control lists (ACLs) in a calendar system. It provides functions to parse, render, and manipulate ACL data structures that include lists of access rules, pagination tokens, and synchronization tokens. Concrete use cases include retrieving and updating calendar sharing permissions with specific rules and handling paginated or incremental ACL data synchronization.",
      "description_length": 415,
      "index": 609,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a data source to a Google Sheets document. It includes functions to create an empty request, set or retrieve the data source, and convert the request to and from JSON format. It is used when integrating external data sources into Google Sheets via the API.",
      "description_length": 316,
      "index": 610,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData",
      "library": "gapi-ocaml",
      "description": "This module organizes real-time analytics data from the Google Analytics API v3 into structured components, enabling precise access and transformation of query responses. It defines core types for query parameters, column headers, and view metadata, with lenses and serialization functions that support parsing, filtering, and display of real-time metrics like active users or session counts. Submodules refine this functionality: one handles query construction with dimensions, metrics, and filters, another manages column header properties for response interpretation, and a third models view identifiers for contextual data retrieval. Together, they enable building, processing, and rendering complete real-time analytics pipelines.",
      "description_length": 735,
      "index": 611,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema",
      "library": "gapi-ocaml",
      "description": "This module enables functional manipulation of JSON schemas through lenses, allowing precise updates to fields like `format`, `enum`, and validation rules within a structured record type. It supports bidirectional conversion between schema definitions and JSON data, facilitating tasks such as API input validation and documentation generation. One child module handles polymorphic data by using a discriminant field to select the correct schema, offering `empty`, `render`, and `parse` functions for variant schema maps. Another child module tracks property requirements across API methods, using a list of required methods to enforce request constraints during client code generation.",
      "description_length": 686,
      "index": 612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceSolutionKey",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling conference solution keys in the Calendar API v3. It provides functions to create an empty instance, parse and render JSON data, and convert between JSON models and internal data structures. The primary use case involves managing conference types like Google Meet or Hangouts within calendar events, ensuring correct handling of deprecated and new conference solutions.",
      "description_length": 430,
      "index": 613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to delete developer metadata in a Google Sheets document using a `DataFilter`. It includes operations to create an empty request, convert it to and from JSON data models, and access or modify the filter criteria. Concrete use cases include removing metadata entries matching specific conditions, such as those associated with a particular location or metadata key.",
      "description_length": 394,
      "index": 614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteProtectedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with a single field `protectedRangeId` representing the ID of a protected range to delete in a Google Sheets document. It includes functions to create an empty request, convert the request to and from JSON data models, and access or modify the `protectedRangeId` field using a lens. Concrete use cases include constructing and serializing delete protected range requests for interaction with the Google Sheets API.",
      "description_length": 448,
      "index": 615,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdClient",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdSense ad client data, including parsing and rendering ad client records to and from JSON data models. It provides lenses for accessing fields like `id`, `kind`, `productCode`, and `supportsReporting` on the `AdClient.t` type. Concrete use cases include serializing ad client data for API requests and extracting specific client properties for reporting or configuration.",
      "description_length": 416,
      "index": 616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.HistoryLabelRemoved",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the removal of labels from a Gmail message during a history update. It includes operations to access and modify label IDs and the associated message, as well as functions to serialize and deserialize the structure to and from JSON. It is used to track label removal events when synchronizing Gmail message state changes via the API.",
      "description_length": 382,
      "index": 617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.App",
      "library": "gapi-ocaml",
      "description": "This module provides functional lenses for manipulating immutable app records and JSON (de)serialization for data interchange, focusing on properties like name, MIME types, file extensions, and operational capabilities. It centers on a record type that models Google Drive application configurations with support for create, import, and offline operations. Typical use cases involve managing app metadata, handling file type associations, and synchronizing app settings through the Drive API's JSON payloads.",
      "description_length": 508,
      "index": 618,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Table",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for representing tables within a Google Sheets spreadsheet. It provides functions to create, modify, and serialize table metadata such as table ID, name, range, row properties, and column properties. Concrete use cases include building and manipulating table configurations for spreadsheet automation, and converting between in-memory table representations and JSON data models for API communication.",
      "description_length": 447,
      "index": 619,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.MakeMonadCombinators",
      "library": "gapi-ocaml",
      "description": "This module provides combinators for working with monadic values, enabling operations like lifting functions into monads, sequencing monadic actions, and folding over lists with monadic accumulation. It works with any monad implementation provided through the `M` parameter, allowing composition and manipulation of monadic computations. The included submodule defines infix operators for monadic composition, including `(>>=)` for binding and `(>>)` for sequencing, which simplify chaining asynchronous or effectful computations. Together, they support concrete tasks like error-handled API call chains, processing lists of monadic results, and building complex workflows from simpler components.",
      "description_length": 697,
      "index": 620,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.AppsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to retrieve and list installed apps for a user in Google Drive. It operates on app identifiers and session data, returning structured app information. Use cases include querying specific apps by ID or filtering apps by MIME types and extensions during user interactions.",
      "description_length": 301,
      "index": 621,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ExternalDataConfiguration",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the configuration for external data sources in BigQuery, supporting operations like specifying data format, schema, and source URIs. It works with structured data types such as CSV, JSON, and Google Cloud Datastore backups, including options like compression and error tolerance. Concrete use cases include configuring load jobs from Google Cloud Storage, validating data structure, and parsing or rendering configurations to and from JSON for API interactions.",
      "description_length": 497,
      "index": 622,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Accounts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling collections of Google Analytics accounts, including metadata like pagination and user information. It provides lenses for accessing and modifying individual fields such as the list of accounts, page size, and navigation links. Use this module to parse, render, and manipulate account collections when interacting with the Google Analytics API v3.",
      "description_length": 396,
      "index": 623,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeveloperMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates developer metadata for Google Sheets, including fields such as ID, key, value, location, and visibility. It provides lenses for accessing and modifying individual fields, functions for converting metadata to and from JSON data models, and an empty value for initialization. Use cases include attaching structured metadata to spreadsheet elements for application-specific logic or integrations.",
      "description_length": 429,
      "index": 624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module handles requests to clear cell values in Google Sheets using data filters. It provides functions to define, serialize, and parse a list of data filters that specify which ranges to clear. Use this when programmatically resetting specific sheet regions based on filter criteria, such as clearing cells matching a particular condition or range.",
      "description_length": 354,
      "index": 625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateProtectedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating protected ranges in a Google Sheets document. It includes functions to set or modify the `protectedRange` and `fields` properties, which specify the range and the subset of properties to update. The module supports serialization and deserialization to and from JSON data models, enabling integration with the Google Sheets API for managing protected ranges programmatically.",
      "description_length": 436,
      "index": 626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.RevisionsResource",
      "library": "gapi-ocaml",
      "description": "This module handles revision management for files in Google Drive, providing functions to delete, retrieve, list, and update file revisions. It works with `GapiDriveV2Model.Revision.t` and `GapiDriveV2Model.RevisionList.t` data structures, representing individual revisions and collections of revisions. Use cases include restoring previous file versions, tracking file changes, and managing revision metadata such as access permissions.",
      "description_length": 437,
      "index": 627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Label",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for working with Gmail labels in the v1 API. It includes functions to create, parse, and render label data, along with lenses for accessing and modifying individual label fields such as color, name, and visibility settings. Concrete use cases include managing user-defined labels, tracking unread message counts, and synchronizing label state with the Gmail web interface.",
      "description_length": 423,
      "index": 628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDuplicatesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure to represent the response from removing duplicate rows in a Google Sheets document. It provides functions to parse and render the count of removed duplicates as JSON data, along with an empty value for initialization. The primary use case is handling the result of a deduplication operation, specifically tracking how many duplicate rows were removed.",
      "description_length": 388,
      "index": 629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GridCoordinate",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing grid coordinates in a Google Sheets document, including sheet ID, row index, and column index. It provides functions to create, manipulate, and convert these coordinates to and from JSON data models. Use this module when working with cell ranges, updates, or batch operations that require precise grid positioning in Google Sheets API interactions.",
      "description_length": 402,
      "index": 630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteNamedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a named range in Google Sheets API v4. It includes operations to set the named range ID, convert the structure to JSON format for API requests, and parse JSON responses back into the structure. Concrete use cases include managing spreadsheet named ranges programmatically and integrating with Sheets API delete operations.",
      "description_length": 372,
      "index": 631,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.SmimeInfo",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling S/MIME certificate information in the Gmail API. It includes fields for certificate metadata like expiration, issuer, and encryption status, along with lenses for accessing and modifying individual properties. Functions support serialization to and from JSON data models, enabling integration with API requests and responses for managing email encryption settings.",
      "description_length": 428,
      "index": 632,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeResponse",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates response data for account creation in the Google Analytics API v3, including fields for the account, settings, resource kind, profile, and web property. It provides lenses for accessing and modifying these fields, along with JSON serialization and deserialization for API integration. The sharing settings submodule handles permission flags for data sharing with Google products, specialists, support, and anonymous entities. Use cases include parsing API responses, configuring account privacy, and synchronizing settings with JSON payloads.",
      "description_length": 581,
      "index": 633,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartCustomNumberFormatOptions",
      "library": "gapi-ocaml",
      "description": "This module defines chart number formatting options with optional prefix and suffix strings. It provides functions to construct, modify, and serialize these formatting options to and from JSON data models. It is used to customize numeric display formats in Google Sheets charts, such as adding currency symbols or percentage signs.",
      "description_length": 331,
      "index": 634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RowData",
      "library": "gapi-ocaml",
      "description": "This module represents a row of data in a Google Sheets spreadsheet, primarily working with lists of `CellData` values. It provides functions to construct an empty row, access or modify cell values via lenses, and serialize or deserialize rows to and from JSON data models. Concrete use cases include building or updating spreadsheet rows with typed cell data and converting between internal data structures and JSON representations for API communication.",
      "description_length": 455,
      "index": 635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Result",
      "library": "gapi-ocaml",
      "description": "This module organizes structured search result data from a custom API, offering direct access to titles, links, text snippets, cache identifiers, and MIME types, while supporting bidirectional JSON conversion for integration with web services and storage systems. Its submodules refine this structure with specialized data types: one handles image metadata including size, dimensions, and thumbnails using lenses and JSON serialization, and the other manages labels with display names, operators, and identifiers for enriched result metadata. Together, they enable tasks like rendering search outputs, extracting and modifying image properties, and processing labeled result metadata within JSON workflows. Direct APIs and submodule extensions work in tandem to support end-to-end handling of search results from retrieval to structured manipulation.",
      "description_length": 850,
      "index": 636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth2Devices.AuthorizationCode",
      "library": "gapi-ocaml",
      "description": "This module handles the parsing and manipulation of OAuth2 device authorization responses, specifically extracting and managing fields like device code, user code, verification URL, expiration time, and polling interval. It works directly with JSON data returned from the OAuth2 device flow endpoint, structuring it into a typed record for safe access. Concrete use cases include initializing device-based authentication flows, polling for token readiness using the device code, and displaying user instructions based on the verification URL and user code.",
      "description_length": 556,
      "index": 637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.AboutResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` function to retrieve detailed information about a user's Google Drive account, including user metadata, storage quotas, and system capabilities. It operates on the `GapiDriveV3Model.About.t` data type and interacts with a Google Drive API session. A concrete use case is fetching the current user's Drive storage usage and limits to display in a dashboard or monitor resource constraints during file operations.",
      "description_length": 442,
      "index": 638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotFilterSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying pivot table filters in Google Sheets API v4, including the column offset, data source reference, and filter criteria. It provides functions to create, modify, and serialize these filter specifications to and from JSON data models. Use this module when configuring or parsing pivot table filter settings in Sheets API requests or responses.",
      "description_length": 391,
      "index": 639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics3",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling job statistics specific to BigQuery load jobs. It includes fields for tracking input file size, number of input files, output data size, and row counts, all using 64-bit integers. The module provides functions to serialize and deserialize these statistics to and from JSON data models, as well as lenses for accessing and modifying individual fields.",
      "description_length": 414,
      "index": 640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CancelDataSourceRefreshResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for canceling data source refresh operations in the Google Sheets API. It includes a list of cancellation statuses for each data source specified in the request, enabling precise tracking of success or failure per data source. The module provides functions to serialize, deserialize, and access the cancellation statuses, ensuring accurate handling of batch update responses.",
      "description_length": 418,
      "index": 641,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.PermissionsResource",
      "library": "gapi-ocaml",
      "description": "This module manages file permissions in Google Drive, providing operations to create, read, update, and delete permissions, as well as retrieve permission IDs from email addresses. It works with data types such as `Permission`, `PermissionList`, and `PermissionId`, all tied to file and user identifiers. Concrete use cases include sharing files with specific users, revoking access, modifying permission settings, and looking up permissions by email.",
      "description_length": 451,
      "index": 642,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Padding",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying cell padding in a Google Sheets document, with individual fields for top, right, bottom, and left padding values. It provides functions to create an empty padding value, convert padding to and from a JSON data model, and render or parse padding values from JSON data. These operations are used when configuring or reading cell formatting options in the Google Sheets API.",
      "description_length": 423,
      "index": 643,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations to retrieve individual comments and filtered lists of comments for a specific blog post. Works with `GapiBloggerV2Model.Comment.t` and `GapiBloggerV2Model.CommentList.t` to represent single comments and collections. Useful for fetching and paginating through moderated or date-filtered comments on a blog post within a Blogger API integration.",
      "description_length": 365,
      "index": 644,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines specific authorization scopes for accessing Google Drive API v2. It includes operations to specify permissions ranging from full file management to read-only metadata or photos access. These scopes are used to request precise levels of access when authenticating API requests for file operations in Google Drive.",
      "description_length": 332,
      "index": 645,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.DriveList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing fields of a paginated list of Google Drive shared drives. Works with `t` records containing a next page token, resource kind, and a list of drives. Used to process API responses when listing shared drives, enabling pagination and JSON serialization.",
      "description_length": 291,
      "index": 646,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authorization scopes for interacting with Google BigQuery and related services. It includes specific permissions for data querying, insertion, and management in BigQuery, as well as read and write access to Google Cloud Storage and broader Cloud Platform resources. These scopes are used to configure authentication credentials when making API requests to BigQuery and connected services.",
      "description_length": 408,
      "index": 647,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDataSourceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a data source in the Google Sheets API. It includes operations to access and manipulate the created data source and its execution status. The module handles JSON serialization and deserialization for this response, enabling integration with API requests and data model conversions.",
      "description_length": 335,
      "index": 648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.StateMonad",
      "library": "gapi-ocaml",
      "description": "Implements stateful computations where each operation carries and modifies a state value. It provides functions like `get` to retrieve the current state and `put` to update it, enabling chaining of state-dependent actions. Useful for managing mutable state in a pure functional way, such as tracking parser positions or accumulating computation results.",
      "description_length": 353,
      "index": 649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UserRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a user reference in the Google Analytics API v3, with fields for email, user ID, and kind. It provides functions to create an empty user reference, convert between JSON data models and user references, and access or update individual fields using lenses. Use this module when interacting with user data in Google Analytics API responses, particularly for handling references to users within account or property resources.",
      "description_length": 471,
      "index": 650,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationTableCopy",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for copying tables in BigQuery jobs, including source and destination table references, create and write dispositions. It provides lenses for accessing and modifying fields like `sourceTable`, `destinationTable`, and `writeDisposition`, along with functions to serialize and deserialize configurations to and from JSON. It is used when setting up table copy operations in BigQuery, such as duplicating tables across datasets or merging data from multiple sources into a single destination.",
      "description_length": 527,
      "index": 651,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.MetadataResource",
      "library": "gapi-ocaml",
      "description": "This module enables programmatic access to metadata about available report columns in the Google Analytics API v3. It centers around the `list` function, which retrieves column metadata for a specified report type using a session for authentication. The primary data structure involved is `GapiAnalyticsV3Model.Columns.t`, representing the set of columns that can be used in Analytics reports. For example, it allows dynamically discovering which metrics and dimensions are available for constructing reports.",
      "description_length": 509,
      "index": 652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.FilterExpression",
      "library": "gapi-ocaml",
      "description": "This module defines a filter expression structure for the Google Analytics API v3, enabling precise data filtering based on fields such as page URLs, campaign parameters, geolocation, and custom dimensions. It supports operations to set and retrieve filter properties including match type, case sensitivity, and expression value, tailored for constructing API requests. Use cases include building and parsing filter expressions for querying analytics data with specific conditions on dimensions like traffic sources, user behavior, or e-commerce transactions.",
      "description_length": 559,
      "index": 653,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDimensionGroupRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to delete a dimension group in a Google Sheets document by specifying the range of the group. It includes operations to construct, serialize, and parse the request using a JSON data model. The primary data structure is a record containing a `DimensionRange.t` that identifies the group's range.",
      "description_length": 324,
      "index": 654,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ClearBasicFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to clear a basic filter on a specific sheet within a Google Sheets document. It includes operations to construct, serialize, and parse filter-clearing requests using JSON data models. The primary data structure is a record containing the `sheetId` where the filter should be removed.",
      "description_length": 313,
      "index": 655,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomMetric",
      "library": "gapi-ocaml",
      "description": "This module organizes functionality for working with Google Analytics custom metrics, combining direct manipulation of metric fields with structured handling of related entities. It provides lenses for accessing and modifying core metric properties like account ID, web property ID, metric scope, and value ranges, along with serialization and deserialization routines for JSON-based API communication. The child module enhances this by defining operations on parent links, enabling creation, JSON rendering, and parsing of link structures that connect metrics to their parent web properties. Together, they support complete management of custom metric definitions and their relationships within the Google Analytics API v3.",
      "description_length": 724,
      "index": 656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RandomizeRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to randomize the contents within a specified grid range of a Google Sheets document. It includes operations to construct, serialize, and deserialize the request using a grid range data structure. Concrete use cases include shuffling cell values in a defined area of a spreadsheet during automated sheet manipulation workflows.",
      "description_length": 356,
      "index": 657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.UrlchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve URL channels for a specified ad client in an AdSense account. It works with string identifiers and session data to fetch paginated results of URL channel information. A concrete use case is querying all URL channels under a specific ad client to analyze traffic sources or manage ad placements.",
      "description_length": 348,
      "index": 658,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartDomain",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring domains in waterfall charts within the Google Sheets API. It includes fields for specifying chart data and controlling the axis value order, with functions to serialize, deserialize, and manipulate domain configurations. Use this module when setting up or modifying waterfall chart domains in spreadsheet visualizations.",
      "description_length": 383,
      "index": 659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteSheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for deleting a sheet in the Google Sheets API. It includes functions to create, parse, and render a delete sheet request, which specifies the sheet ID to remove. The primary use case is to prepare and process API requests for sheet deletion, handling both standard and data source sheets.",
      "description_length": 342,
      "index": 660,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Model.TaskLists",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling multiple task lists in the Google Tasks API v1. It includes operations to access and modify individual fields like `etag`, `items`, `kind`, and `nextPageToken` through lenses, and supports serialization and deserialization to and from JSON data models. It is used to represent and manipulate collections of task lists retrieved from or sent to the API.",
      "description_length": 402,
      "index": 661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddBandingResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a banded range in a Google Sheets document. It provides operations to access and manipulate the `bandedRange` field, which contains the details of the newly added banded range. Functions include creating an empty response, converting to and from JSON data models, and parsing or rendering the response structure for API interactions.",
      "description_length": 381,
      "index": 662,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AlertsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage alerts in an AdSense account. It supports dismissing a specific alert by ID and listing all alerts, optionally filtered by locale. The module works with alert data structures defined in the GapiAdsenseV1_4Model module.",
      "description_length": 260,
      "index": 663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.AuthSub",
      "library": "gapi-ocaml",
      "description": "Handles parsing and extracting token information from AuthSub authorization responses. It provides lenses to access the target, scope, and secure flag fields of the `token_info` type. Useful when processing Google AuthSub tokens to retrieve specific authorization metadata for API access.",
      "description_length": 288,
      "index": 664,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateSpreadsheetResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from batch update requests to a Google Sheets spreadsheet. It provides accessors to retrieve the spreadsheet ID, list of replies corresponding to each update, and the updated spreadsheet data model. These functions support parsing and rendering JSON data for integration with the API, enabling precise manipulation and inspection of batch update results.",
      "description_length": 426,
      "index": 665,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.CommentFeed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a paginated collection of comments from the Google+ API, including metadata such as ETag, ID, title, and update timestamp. It provides functions to parse and render comment feeds to and from JSON data models, along with lenses for accessing and modifying individual fields. Concrete use cases include handling API responses, caching comment data, and paginating through large sets of comments using `nextPageToken` and `nextLink`.",
      "description_length": 480,
      "index": 666,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling paginated query results from the BigQuery API, including fields like `etag`, `kind`, `pageToken`, `rows`, and `totalRows`. It provides functions to serialize and deserialize this structure to and from JSON, as well as lenses for accessing and modifying individual fields. It is used to process and navigate through large datasets returned by BigQuery queries.",
      "description_length": 409,
      "index": 667,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileFilterLink",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing profile filter links in the Google Analytics API. It includes fields such as `filterRef`, `profileRef`, `rank`, and `selfLink`, with lenses for accessing and modifying individual components. Use this module to construct, parse, and serialize profile filter links when interacting with Google Analytics API endpoints that manage filter associations with views.",
      "description_length": 423,
      "index": 668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ExtendedValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing cell values in a Google Sheets document, supporting numeric, string, boolean, formula, and error types. It provides functions to access and modify each value type through lenses, along with serialization and deserialization routines for converting between JSON and the internal data model. Use this module when processing or constructing cell values for API requests and responses involving spreadsheet data.",
      "description_length": 462,
      "index": 669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CopySheetToAnotherSpreadsheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for copying a sheet to another spreadsheet in the Google Sheets API. It includes functions to create an empty request, set the destination spreadsheet ID, and serialize or deserialize the request to and from JSON data models. It is used when issuing copy sheet requests to the Sheets API, where the target spreadsheet is specified by its ID.",
      "description_length": 395,
      "index": 670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profiles",
      "library": "gapi-ocaml",
      "description": "This module handles data structures representing a collection of Google Analytics views (profiles), including metadata for pagination and navigation. It provides lenses for accessing fields like items, pagination links, and user information, along with functions to serialize and deserialize the data model to and from JSON. It is used to process and manipulate profile list responses from the Google Analytics API, supporting operations like traversal through paginated results and extraction of individual profile data.",
      "description_length": 521,
      "index": 671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobCancelResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure returned when canceling a BigQuery job. It includes fields for the final state of the canceled job and the resource type of the response. The module provides functions to construct, parse, and convert response data to and from JSON format for API interactions.",
      "description_length": 303,
      "index": 672,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.HistoryMessageDeleted",
      "library": "gapi-ocaml",
      "description": "This module represents a history record for a deleted message in the Gmail API. It provides operations to create an empty record, access the message field, and convert between the record and JSON data models. It is used to process and serialize message deletion events in Gmail API responses.",
      "description_length": 292,
      "index": 673,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Channel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing notification channels used to watch for changes to Drive API resources. It provides functions to create, parse, render, and modify channel data, including setting delivery addresses, expiration times, and resource identifiers. Concrete use cases include configuring push notifications for file changes and handling channel lifecycle events in Drive integrations.",
      "description_length": 406,
      "index": 674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.LabelColor",
      "library": "gapi-ocaml",
      "description": "This module defines color properties for Gmail labels using hex-encoded strings for background and text colors. It provides functions to create an empty color record, render colors into JSON data models, and parse or convert color data between JSON and OCaml representations. These operations are used when configuring or retrieving label color settings through the Gmail API.",
      "description_length": 376,
      "index": 675,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchGetValuesByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for retrieving spreadsheet values filtered by specific data filters. It includes operations to set or retrieve filters, specify dimension and value rendering options, and convert the request to or from JSON format. It is used to query Google Sheets data with custom filtering and formatting, such as fetching rows or columns that match certain criteria and controlling how cell values are returned.",
      "description_length": 438,
      "index": 676,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BooleanCondition",
      "library": "gapi-ocaml",
      "description": "This module defines a boolean condition structure used to represent conditional formatting rules in Google Sheets. It includes operations to set and retrieve the condition type and its associated values, supporting various condition types with specific value constraints. Use cases include creating and manipulating conditions for data validation or formatting based on cell values.",
      "description_length": 382,
      "index": 677,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring basic chart specifications in the Google Sheets API. It includes fields for chart type, axes, data domains, series, and visual properties like stacking and smoothing, along with lenses for accessing and modifying these fields. It supports creating, rendering, and parsing chart configurations to and from JSON data models.",
      "description_length": 387,
      "index": 678,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationLink",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for a BigQuery link job, specifying how to connect an external data source to a destination table. It includes fields for the source URI, destination table reference, and dispositions for table creation and write behavior. Key operations include rendering the configuration to JSON, parsing from JSON, and accessing or modifying individual fields using lenses.",
      "description_length": 398,
      "index": 679,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.InsertDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for inserting dimensions in a Google Sheets document, specifically managing the range and inheritance behavior of inserted rows or columns. It works with `DimensionRange.t` and boolean values to control property inheritance. Use this module to construct and manipulate requests for inserting rows or columns with specific styling or structural properties inherited from adjacent dimensions.",
      "description_length": 421,
      "index": 680,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiConversation.Session",
      "library": "gapi-ocaml",
      "description": "This module manages the session state during a conversation, including OAuth1 and OAuth2 authorization contexts, Curl state, library configuration, cookies, and ETag tracking. It provides lenses to access and modify specific fields within the session and authentication contexts, enabling precise updates to session data during API interactions. Concrete use cases include handling authenticated requests, managing token exchanges, and maintaining conversation state across multiple HTTP transactions.",
      "description_length": 501,
      "index": 681,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "GapiSheetsV4Model.DeveloperMetadataLocation",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the location context for developer metadata in a Google Sheets document. It supports operations to set and retrieve metadata targeting the entire spreadsheet, a specific sheet by ID, or a single row or column dimension range. Use cases include attaching metadata to specific spreadsheet elements for tracking, configuration, or integration purposes.",
      "description_length": 385,
      "index": 682,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.AdWordsAccount",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdWords account data in the Google Analytics API v3. It provides functions to create an empty AdWords account, render and parse account data to and from JSON, and convert between data models. The module works with a record type containing boolean and string fields, specifically for auto-tagging status, customer ID, and resource kind. Concrete use cases include preparing AdWords account payloads for API requests and processing API responses into structured data.",
      "description_length": 509,
      "index": 683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Error",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing errors returned by the Calendar API, with fields for the error domain and specific reason. It includes functions to serialize and deserialize error data to and from JSON, as well as lenses for accessing and modifying individual fields. The module is used to handle and interpret API-specific error responses during client interactions.",
      "description_length": 389,
      "index": 684,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.AclResource",
      "library": "gapi-ocaml",
      "description": "This module manages access control lists (ACLs) for calendar resources through operations like retrieving, creating, updating, and deleting individual rules. It works with calendar identifiers and ACL rule definitions to configure permissions for calendar data access. Use cases include restricting event visibility, granting user-specific access, and synchronizing calendar sharing policies.",
      "description_length": 392,
      "index": 685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PieChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring pie chart specifications in the Google Sheets API. It includes fields for setting the legend position, domain and series data, 3D rendering, and pie hole size, all working with `ChartData.t` and JSON data models. Use this module to create and manipulate pie chart configurations programmatically when interacting with Google Sheets.",
      "description_length": 397,
      "index": 686,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReport",
      "library": "gapi-ocaml",
      "description": "This module provides tools to construct, manipulate, and serialize unsampled report records containing analytics metadata such as account identifiers, date ranges, dimensions, and metrics. It operates on a record type `t` with lenses for precise field access and includes conversion functions to translate between JSON and internal data models, enabling high-precision report generation and storage configuration in Google Analytics API workflows. The module supports integration with Cloud Storage and Google Drive through submodules that handle storage location details and file identifiers, allowing users to configure transfer destinations and retrieve report files seamlessly. Specific operations include setting report parameters, serializing to JSON for API requests, and extracting bucket, object, or document IDs for downstream processing.",
      "description_length": 848,
      "index": 687,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.WebPropertyRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics web property reference, with fields for identifiers, links, and metadata. It provides functions to parse and render web property references from JSON data models, enabling integration with the Google Analytics API. Use cases include retrieving and manipulating web property information during API interactions, such as listing or selecting specific properties for data queries.",
      "description_length": 446,
      "index": 688,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiAdsenseV1_4Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing AdSense data, including full access and read-only permissions. It provides string constants used to specify authorization levels when making API requests. Concrete use cases include setting OAuth scopes for AdSense management and reporting operations.",
      "description_length": 307,
      "index": 689,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.EmbeddedObjectPosition",
      "library": "gapi-ocaml",
      "description": "This module defines the position of an embedded object within a Google Sheets document. It includes fields for specifying the sheet ID, overlay position on a grid, and whether the object should be placed on a new sheet. The module provides functions to construct, modify, and serialize these position settings for use when creating or updating embedded objects like charts or images in a spreadsheet.",
      "description_length": 400,
      "index": 690,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDimensionGroupRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating dimension groups in a Google Sheets document. It includes functions to set and retrieve a dimension range, serialize and deserialize the request to and from JSON, and construct or convert the request from a data model. It is used specifically to format API requests that group rows or columns in a spreadsheet.",
      "description_length": 372,
      "index": 691,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.PermissionsResource",
      "library": "gapi-ocaml",
      "description": "This module manages file and shared drive permissions in Google Drive API v3. It supports creating, deleting, retrieving, listing, and updating permissions with specific options like email notifications, ownership transfer, and domain admin access. Use cases include sharing files with users or groups, revoking access, and modifying permission roles or expiration settings.",
      "description_length": 374,
      "index": 692,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.File",
      "library": "gapi-ocaml",
      "description": "This module enables functional manipulation of file metadata through a lens-based API, supporting precise updates to immutable file records while integrating with JSON for compatibility with the Drive API. It handles media metadata like image and video properties, manages state flags such as trashed or starred, and supports structured text and thumbnail data for indexing and display. Specific operations include extracting and modifying geolocation from images, updating video dimensions, setting searchable text fields, and managing user-defined labels. Submodules extend this functionality with typed records and JSON conversions for media, thumbnails, and structured text, enabling end-to-end handling of file metadata across application logic and API interactions.",
      "description_length": 771,
      "index": 693,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTicket",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling account tickets in the Google Analytics API v3. It provides lenses to access and modify fields such as account, profile, web property, and redirect URI, along with functions to serialize and deserialize account ticket data to and from JSON. It is used to manage user access and configuration during account setup or migration workflows.",
      "description_length": 398,
      "index": 694,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceListResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of verified web resources, including operations to serialize and deserialize the list to and from JSON. It works with `SiteVerificationWebResourceResource.t` records, organizing them into a list within a response object. Concrete use cases include parsing API responses from Google Site Verification and constructing payloads for site verification requests.",
      "description_length": 414,
      "index": 695,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedReports",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of saved AdSense reports, including metadata such as ETag, kind, and pagination tokens. It provides functions to serialize and deserialize the structure to and from JSON, access and modify its fields using lenses, and construct or render instances for API communication. Concrete use cases include retrieving and managing saved reports from the AdSense API, handling pagination, and caching responses.",
      "description_length": 458,
      "index": 696,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.ContentRestriction",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing content restrictions in Google Drive API v3. It includes fields like `readOnly`, `reason`, and `restrictionTime`, along with lenses for accessing and modifying these fields, and functions for JSON serialization and deserialization. It is used to enforce and track restrictions on file content modifications, such as preventing edits or limiting who can modify a file.",
      "description_length": 431,
      "index": 697,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Query",
      "library": "gapi-ocaml",
      "description": "This module provides operations to construct, modify, and serialize search query parameters for the Google Custom Search API. It works with a record type representing query fields, offering lens-based accessors for precise manipulation of string and integer properties like search terms, result counts, and filters. These utilities are used to build API requests, adjust individual parameters dynamically, and convert query data to or from JSON for transmission.",
      "description_length": 462,
      "index": 698,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ParentsResource",
      "library": "gapi-ocaml",
      "description": "This module manages parent-child relationships between files and folders in Google Drive. It supports operations to add, remove, retrieve, and list parent folders for a given file using the Drive API v2. Concrete use cases include reorganizing file structures, maintaining folder hierarchies, and resolving parent paths for files.",
      "description_length": 330,
      "index": 699,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.GetQueryResultsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for handling responses from BigQuery's `getQueryResults` API call. It includes fields to track query status, results metadata, and schema, along with lenses for accessing and modifying individual fields. Use cases include checking if a query is complete, retrieving result rows, and handling pagination tokens for large result sets.",
      "description_length": 386,
      "index": 700,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshDailySchedule",
      "library": "gapi-ocaml",
      "description": "This module defines a daily schedule for refreshing data sources in Google Sheets, centered on a start time represented as a `TimeOfDay.t` value. It provides operations to construct, serialize, and deserialize this schedule, including functions like `empty`, `render`, `parse`, `to_data_model`, and `of_data_model`. Concrete use cases include configuring and persisting daily refresh intervals for external data sources within Google Sheets integrations.",
      "description_length": 454,
      "index": 701,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ListDraftsResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response from listing drafts in the Gmail API, containing a list of draft messages, a token for pagination, and an estimate of the total result size. It provides accessors to retrieve and modify individual fields, as well as functions to convert to and from JSON data models. It is used to process and construct draft listings when interacting with the Gmail API, enabling pagination and data extraction for further processing.",
      "description_length": 452,
      "index": 702,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateConditionalFormatRuleRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating conditional format rules in a Google Sheets document. It includes fields for specifying the rule, its new and current indices, and the sheet ID when reordering. Operations include creating an empty instance, parsing and rendering JSON data, and accessing or modifying fields using lenses.",
      "description_length": 338,
      "index": 703,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.EmbeddedChart",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for embedded charts in Google Sheets API v4. It includes operations to create, modify, and serialize chart data using lenses for `chartId`, `spec`, `position`, and `border`. The module works directly with JSON data models for parsing and rendering embedded chart configurations.",
      "description_length": 325,
      "index": 704,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CreateConferenceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for constructing and manipulating conference creation requests in the Calendar API. It provides functions to set and retrieve the request status, unique identifier, and conference solution key (e.g., Hangouts or Google Meet). These functions support building, serializing, and parsing request data for API interactions.",
      "description_length": 350,
      "index": 705,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Service.UrlResource",
      "library": "gapi-ocaml",
      "description": "This module manages shortened URLs through creation, retrieval, and listing operations, while its child module handles projection options for customizing the detail level of URL analytics. It works with data types representing URLs, metadata, and analytics, enabling actions like expanding a short link, generating a new short URL, or fetching a user's history. The projection submodule allows conversion between string representations and internal types for analytics queries, such as filtering by click counts or top referrers. Together, they support precise control over both URL management and detailed analytics access.",
      "description_length": 624,
      "index": 706,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddSlicerRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a slicer to a Google Sheets spreadsheet via the API. It includes functions to create an empty request, set or retrieve the slicer data, and convert the request to and from JSON format for API communication. The primary data type is a record containing a `Slicer.t` value, which represents the slicer configuration and placement.",
      "description_length": 388,
      "index": 707,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceSheetDimensionRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a dimension range in a Google Sheets data source, specifically identifying a sheet ID and associated columns. It provides functions to serialize and deserialize this structure to and from JSON data models, as well as lenses for accessing and modifying its components. It is used when interacting with Google Sheets API endpoints that require specifying data source ranges for queries or reports.",
      "description_length": 445,
      "index": 708,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.JobsResource",
      "library": "gapi-ocaml",
      "description": "This module manages BigQuery jobs with operations to cancel, retrieve, list, and submit jobs using identifiers and configuration parameters like timeouts and visibility filters. It supports data types such as job and project identifiers, and integrates with submodules that define job projection options (`Default`, `Full`, `Minimal`) and state filters (`Done`, `Pending`, `Running`) for refined data retrieval and job listing criteria. Use it to perform actions like checking job status, listing recent jobs with a specific state, or running synchronous queries with custom result limits. The module combines direct API methods with configurable filtering and projection options to tailor job management and inspection workflows.",
      "description_length": 730,
      "index": 709,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ListOperationsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response structure for listing operations, containing a list of operations and a next-page token. It provides accessors to retrieve or modify the operations list and token, along with functions to serialize and deserialize the structure to and from JSON data models. It is used when handling paginated responses from querying operations in the Google Drive API v3.",
      "description_length": 386,
      "index": 710,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BaselineValueFormat",
      "library": "gapi-ocaml",
      "description": "This module defines the formatting and styling options for baseline values in conditional formatting rules within Google Sheets. It includes fields to specify text formatting, positional alignment, comparison descriptions, and color indicators for positive or negative changes relative to a key value. These configurations are used when applying or interpreting data-driven visualizations such as color scales or text-based indicators in spreadsheet cells.",
      "description_length": 456,
      "index": 711,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service.ProjectsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all projects for which the user has any project role in BigQuery. It works with `GapiBigqueryV2Model.ProjectList.t` and session data types. A concrete use case is fetching a user's accessible projects to display in a management interface or for programmatic access control.",
      "description_length": 327,
      "index": 712,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a data source in the Google Sheets API. It includes operations to set the data source ID, convert the structure to JSON, and parse JSON into the structure. It is used when removing data sources from a spreadsheet via the API.",
      "description_length": 275,
      "index": 713,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.UrlChannel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling URL channels in the AdSense Management API, including creating, parsing, and rendering URL channel data. It works with the `t` record type representing URL channels and `GapiJson.json_data_model` for JSON serialization. Concrete use cases include converting URL channel data to and from JSON format for API requests and responses.",
      "description_length": 374,
      "index": 714,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Revision",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling file revisions in the Google Drive API v3. It includes fields like `id`, `mimeType`, `modifiedTime`, and `size` to represent metadata and content properties of a revision, along with lenses for accessing and updating these fields. Functions like `render`, `parse`, `to_data_model`, and `of_data_model` convert between revision records and JSON data models for API communication.",
      "description_length": 442,
      "index": 715,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiLens.StateInfix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for manipulating stateful values using lenses. It provides set and update operations for fields of records or data structures, supporting assignments and in-place modifications like incrementing integers or appending lists. These operations are designed for concise, imperative-style updates while maintaining immutability under the hood.",
      "description_length": 374,
      "index": 716,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobList",
      "library": "gapi-ocaml",
      "description": "This module processes and manages BigQuery job list responses, handling pagination, etag values, and JSON serialization of job list data. It operates on `t` records that bundle job collections with identifiers and metadata, supporting transformations and extraction across API interactions. The Jobs submodule enables fine-grained manipulation of individual job entries, exposing lenses and utilities to access and update job configurations, states, and statistics. Together, they facilitate structured parsing, modification, and transmission of job list payloads in JSON format.",
      "description_length": 579,
      "index": 717,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeRequest",
      "library": "gapi-ocaml",
      "description": "This module structures account tree requests for the Google Analytics API v3, handling creation, serialization, and manipulation of requests with fields like account name, profile name, timezone, and website URL. It includes operations to configure and update account settings, particularly for generating account tickets during setup or modification. The sharing settings submodule supports defining data sharing permissions through boolean flags, enabling fine-grained control over access and visibility in account configurations. Together, these components allow developers to programmatically manage account structures and sharing policies via the API.",
      "description_length": 656,
      "index": 718,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudiences",
      "library": "gapi-ocaml",
      "description": "This module handles data structures for managing remarketing audiences in Google Analytics API v3. It provides functions to parse, render, and manipulate collections of remarketing audience data, including pagination details and metadata. Use cases include retrieving and processing lists of remarketing audiences with support for navigation through paginated results.",
      "description_length": 368,
      "index": 719,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomMetrics",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of Google Analytics custom metrics, including pagination and metadata. It provides lenses for accessing fields like items, pagination links, and result counts, along with functions to serialize and deserialize metric data. Concrete use cases include processing API responses to list custom metrics, navigating paginated results, and converting between JSON and internal metric representations.",
      "description_length": 469,
      "index": 720,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.IncludeConditions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates conditions for including users in Google Analytics audiences. It provides accessors for fields like `daysToLookBack`, `membershipDurationDays`, and `segment`, and supports JSON serialization and deserialization. Use it to configure audience inclusion rules, such as specifying how long user behavior is evaluated or how long users stay in an audience.",
      "description_length": 387,
      "index": 721,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.SmtpMsa",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates SMTP configuration data for Gmail API operations. It provides accessors (lenses) for fields like host, password, port, security mode, and username, along with functions to serialize and deserialize instances for API requests and responses. It is used to configure and manage SMTP settings when setting up email sending accounts through the Gmail API.",
      "description_length": 386,
      "index": 722,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.ParentList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing a list of parent references in the Drive API v2, including operations to access and modify the list's `etag`, `items`, `kind`, and `selfLink` fields. It supports parsing and rendering parent lists from and to JSON data models, enabling integration with API responses and requests. Concrete use cases include handling file or folder parent relationships in Google Drive, such as retrieving or updating the parent folders of a specific file.",
      "description_length": 489,
      "index": 723,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SetDataValidationRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for setting or clearing data validation rules on a specified range in a Google Sheets document. It includes fields for the target range, the validation rule, and an optional flag to apply the rule to filtered rows. Operations allow constructing, modifying, and serializing validation requests for API interactions.",
      "description_length": 351,
      "index": 724,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListMessagesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling responses from listing messages in the Gmail API. It includes fields for a list of messages, a token for pagination, and an estimate of the total result size. Operations allow parsing, rendering, and accessing individual components of the response.",
      "description_length": 298,
      "index": 725,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource",
      "library": "gapi-ocaml",
      "description": "This module retrieves Google Analytics data for a specific view, supporting real-time analytics, historical reports, and Multi-Channel Funnels analysis. It operates on parameters such as dimensions, metrics, filters, and date ranges, with control over sampling levels (`Default`, `Faster`, `HigherPrecision`) and output formats (`DataTable`, `Json`). Use it to fetch live user activity, generate time-bound reports, or analyze marketing conversion paths with structured data representations. Example uses include dashboard integrations, marketing attribution modeling, and interactive visualizations.",
      "description_length": 600,
      "index": 726,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.AccessProposal",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling access proposals in the Google Drive API v3. It includes fields like `fileId`, `proposalId`, `requesterEmailAddress`, and `rolesAndViews`, along with functions to serialize, deserialize, and manipulate these structures. Use cases include processing incoming access requests, managing permission changes, and tracking proposal metadata such as creation time and messages.",
      "description_length": 434,
      "index": 727,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.BatchModifyMessagesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batch modifying messages in the Gmail API, supporting operations to add or remove labels from a list of message IDs. It provides functions to construct, serialize, and update batch modify requests, ensuring compatibility with the Gmail API's expected JSON format. Use this module when applying label changes to multiple messages in a single API call, such as marking emails as read or organizing messages into categories.",
      "description_length": 462,
      "index": 728,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiment",
      "library": "gapi-ocaml",
      "description": "This module manages A/B experiment configurations and metadata for Google Analytics, offering lenses for precise access to fields like status, variations, and timestamps, along with utilities for serialization, deserialization, and initialization. It works with structured experiment records that include nested variations and parent links, supporting workflows for lifecycle tracking and traffic allocation. The parent link submodule handles references to Google Analytics views with JSON conversion, while the variations submodule configures and tracks individual A/B test branches with fields like name, weight, and status. Example uses include syncing experiment states with API endpoints, adjusting objective metrics programmatically, and generating JSON payloads for variation updates.",
      "description_length": 791,
      "index": 729,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CellData",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior of individual cell data in a Google Sheets document, enabling precise manipulation of cell content, formatting, and metadata. It supports operations for setting and retrieving values, formats, notes, hyperlinks, data validation rules, and pivot or data source tables anchored at specific cells. Use this module when constructing or modifying spreadsheet cells with rich formatting, formulas, or data constraints programmatically.",
      "description_length": 476,
      "index": 730,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CancelDataSourceRefreshStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling the cancellation status of a data source refresh in the Google Sheets API. It provides accessors for the data source reference and cancellation status, along with functions to convert between JSON and the internal data model. It is used to manage and serialize the state of refresh cancellation requests for data sources.",
      "description_length": 383,
      "index": 731,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AppendCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for appending cell data to a Google Sheets document. It includes fields for specifying the target sheet or table ID, the row data to append, and which cell data fields to update. Functions allow creating, rendering, parsing, and converting the request to and from JSON data models.",
      "description_length": 330,
      "index": 732,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for refreshing data sources in a Google Sheets document. It includes fields to specify which data source objects to refresh, whether to refresh all objects, and options to force the refresh regardless of the current state. Functions allow creating, modifying, and serializing refresh requests for API interactions.",
      "description_length": 363,
      "index": 733,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.TeamdrivesResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage Team Drives in Google Drive API v3, including creating, deleting, retrieving, listing, and updating Team Drive resources. It operates on `GapiDriveV3Model.TeamDrive.t` and `GapiDriveV3Model.TeamDriveList.t` data structures, interacting with the API via `GapiConversation.Session.t`. Concrete use cases include synchronizing organizational team drive data, automating team drive management workflows, and integrating Drive team structure into third-party applications.",
      "description_length": 508,
      "index": 734,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.MatchedDeveloperMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling matched developer metadata in Google Sheets API responses. It includes fields for the matched metadata and associated data filters, supporting operations to parse, render, and convert metadata to and from JSON data models. It is used to process and manipulate metadata returned from Sheets API queries that involve filtering by developer-defined criteria.",
      "description_length": 405,
      "index": 735,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PivotFilterCriteria",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates pivot filter criteria for Google Sheets API v4, specifically handling field-level filtering in pivot tables. It works with a record type containing visibility values, a boolean condition, and a visibility default flag, along with functions to serialize, deserialize, and modify these fields. It is used to configure which rows or columns appear in a pivot table based on explicit values, dynamic conditions, or default visibility settings.",
      "description_length": 475,
      "index": 736,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.AnalyticsDataimportDeleteUploadDataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying uploads to delete in the Google Analytics API, containing a list of custom data import UIDs. It provides functions to serialize and deserialize the structure to and from JSON data models, enabling interaction with API endpoints that manage uploaded data. Use this module when constructing requests to delete specific uploads from a Google Analytics property.",
      "description_length": 410,
      "index": 737,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search",
      "library": "gapi-ocaml",
      "description": "This module structures and processes search data from the CustomSearch API, handling result items, metadata, and promotions. It provides core operations to parse, render, and convert search responses to and from JSON, enabling tasks like extracting result lists or transforming API output into usable formats. The first child module focuses on search metadata, offering lenses and JSON functions for time, count, and duration fields, allowing precise extraction and serialization of search statistics. The second child module manages URL templates with `_type` and `template` fields, supporting creation, parsing, and JSON rendering for consistent API link handling. The third child module handles spelling corrections, exposing accessors for corrected queries and HTML versions, and supports JSON serialization to ensure accurate query display and processing.",
      "description_length": 860,
      "index": 738,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile",
      "library": "gapi-ocaml",
      "description": "This module manages Google Analytics view configurations, offering operations to read and modify properties like tracking settings, timezone, and URL parameters using the `Profile.t` type. It supports immutable transformations via lenses, creation of default profiles, and serialization for API interactions, while integrating helper modules for goals, permissions, and hierarchical links. The goals module handles child links to view goals with JSON serialization, the permissions module captures and manipulates user access levels like VIEW or EDIT, and the parent link module associates views with web properties, enabling traversal and updates within the Google Analytics hierarchy. Example uses include constructing a profile with predefined permissions, linking to goals, and updating a view's associated web property through its parent link.",
      "description_length": 848,
      "index": 739,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataExecutionStatus",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the execution status of a data operation in the Google Sheets API, including state, error details, and refresh timestamps. It provides functions to serialize and deserialize this structure to and from JSON, as well as lenses for accessing and modifying individual fields. Use this module when handling data execution status responses from Google Sheets API calls, such as tracking errors or refresh times for data sources.",
      "description_length": 472,
      "index": 740,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshCancellationStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling the status of a canceled refresh operation in the Google Sheets API. It provides functions to serialize and deserialize the status data model, as well as accessors for the state and error code fields. It is used to interpret and construct responses when attempting to cancel a data refresh in Sheets.",
      "description_length": 362,
      "index": 741,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddSlicerResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a slicer in the Google Sheets API, specifically containing the newly added `Slicer` object. It provides functions to serialize and deserialize the response to and from JSON data models, ensuring compatibility with API requests and responses. Use this module when handling the result of a slicer creation operation to extract or manipulate the created slicer data.",
      "description_length": 417,
      "index": 742,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarListEntry",
      "library": "gapi-ocaml",
      "description": "This module handles calendar metadata and settings, including access roles, visibility, color schemes, reminders, and state flags like hidden or selected. It operates on structured records and their JSON equivalents, enabling bidirectional conversion for integration with systems like the Google Calendar API v3. The notification submodule provides direct access to `CalendarNotification.t list`, allowing configuration of event-based alerts such as email or pop-up reminders. Together, they support use cases like synchronizing calendar preferences, customizing display properties, and setting up event notifications programmatically.",
      "description_length": 635,
      "index": 743,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.Monad",
      "library": "gapi-ocaml",
      "description": "Implements core monadic operations for composing computations that carry context, such as error handling or state. Works with monadic types `'a t` that encapsulate values alongside effects. Enables chaining operations with `bind` and wrapping pure values with `return`, supporting use cases like sequential IO, optional values, or asynchronous workflows.",
      "description_length": 354,
      "index": 744,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.DrivesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage shared drives in Google Drive, including creating, deleting, retrieving, hiding, listing, unhiding, and updating shared drive metadata. It works with `Drive.t` and `DriveList.t` data structures, along with session and configuration parameters. Concrete use cases include managing organizational shared drives, enforcing drive policies, and integrating Drive data with external management tools.",
      "description_length": 436,
      "index": 745,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.AclRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates access control rules for calendar resources, combining rule metadata such as role, scope, identifier, and ETag with utilities for JSON serialization and deserialization. It supports setting and managing calendar permissions by integrating with the Scope submodule, which represents access targets like users, groups, and domains. Specific operations include creating rules to grant a user read access, parsing API responses to update access control lists, and restricting calendar visibility to specific domains. The combined interface enables precise control over calendar sharing and access policies in API-driven workflows.",
      "description_length": 662,
      "index": 746,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Accounts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of AdSense accounts, including metadata like ETag, kind, and pagination tokens. It provides operations to access and modify individual fields using lenses, and functions to serialize and deserialize the data to and from JSON. It is used to process and manage account data retrieved from the AdSense Management API, enabling pagination and caching.",
      "description_length": 404,
      "index": 747,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Account",
      "library": "gapi-ocaml",
      "description": "This module organizes Google Analytics account data with core types representing account metadata such as ID, name, creation time, and permissions, and supports field access via lenses, JSON serialization, and initialization. Its child modules enhance this structure by modeling linked web properties through typed URLs and managing effective permissions as string lists, enabling precise access control and API navigation. Operations include parsing API responses, updating account fields, serializing data for storage, constructing web property links, and validating user permissions. Together, these components support full lifecycle management of Analytics account resources within a hierarchical API context.",
      "description_length": 713,
      "index": 748,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.SavedadstylesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list saved ad styles associated with a user's AdSense account. It works with `SavedAdStyle.t` and `SavedAdStyles.t` data structures, representing individual and collections of saved ad styles. Concrete use cases include fetching a specific saved ad style by ID or enumerating all saved ad styles for configuration or display purposes.",
      "description_length": 382,
      "index": 749,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ProjectList",
      "library": "gapi-ocaml",
      "description": "This module organizes and manages lists of BigQuery projects, incorporating metadata such as pagination tokens and total item counts. It supports operations to access and modify fields like `etag`, `nextPageToken`, and `projects`, enabling efficient handling of paginated API responses. The included child module defines individual project records with fields for ID, name, and type, along with serialization functions for JSON conversion. Use this module to retrieve, process, and manipulate collections of BigQuery projects, especially when working with large or paginated datasets from the BigQuery v2 API.",
      "description_length": 609,
      "index": 750,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.CustomChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling lists of AdSense custom channels, including parsing and rendering JSON data models. It provides lenses for accessing fields like `etag`, `items`, `kind`, and `nextPageToken`, and supports serialization and deserialization to and from JSON. It is used to manage paginated responses when retrieving custom channel data from the AdSense API.",
      "description_length": 382,
      "index": 751,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.PostsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations to retrieve individual posts by ID and list collections of posts with optional filtering by date, result limits, and pagination. Works with blog identifiers, post identifiers, and session state to interact with the Blogger API. Useful for fetching specific blog content or generating paginated post listings from a given blog.",
      "description_length": 348,
      "index": 752,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result",
      "library": "gapi-ocaml",
      "description": "This module processes and transforms JSON data from the PageSpeed Insights API into structured OCaml types, offering lenses for field access and utilities for parsing and rendering. It handles hierarchical data including version metadata, performance statistics, rule diagnostics, and screenshots, enabling precise manipulation of API responses. You can extract load times, modify rule impact scores, generate localized reports, or analyze resource sizes for optimization. Submodules structure version info, rule results, performance metrics, and screenshots with typed accessors and JSON converters.",
      "description_length": 600,
      "index": 753,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive interface for defining and manipulating RESTful API methods, supporting HTTP operations, parameter binding, and scope management. It includes structured data models for endpoints with paths, request/response configurations, and media settings, enabling dynamic client configuration and JSON serialization for service integration. The response schema submodule manages schema references using `_ref` identifiers, while the media upload submodule configures file transfer protocols, including resumable and multipart uploads with customizable endpoints and MIME types. Additionally, the request schema submodule handles schema references with parameter binding, supporting JSON serialization and integration with discovery-driven API workflows.",
      "description_length": 779,
      "index": 754,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.OperationsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage long-running operations in Google Drive API v3, including listing, retrieving, deleting, and canceling operations. It works with operation resources, allowing clients to filter and paginate through lists of operations or interact with individual operations by name. Concrete use cases include polling for operation status, cleaning up unused operations, and attempting cancellation of ongoing processes.",
      "description_length": 444,
      "index": 755,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCore.AnnotatedTree",
      "library": "gapi-ocaml",
      "description": "This module represents hierarchical data structures with annotated nodes, supporting operations like `fold`, `xfold`, and `kfold` for traversing and transforming trees with context-aware accumulators. It works with tree structures where nodes have metadata (`'a`) and values (`'c`), enabling precise manipulation of nested data. Concrete use cases include parsing and processing JSON/XML documents with attached annotations such as source positions or type information.",
      "description_length": 469,
      "index": 756,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.User",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates user data for the Blogger API v2, offering lenses to access and update properties like display name, locale, and blog container. It supports serialization and deserialization to JSON, working with data that includes identifiers, timestamps, and links. The locale submodule handles regional and linguistic preferences through country, language, and variant fields, while the blogs submodule manages a user's blog list, including parsing, rendering, and accessing the `selfLink` URL. Together, these components enable detailed user configuration and interaction within the API.",
      "description_length": 614,
      "index": 757,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartSpec",
      "library": "gapi-ocaml",
      "description": "This module provides tools for constructing and modifying chart configurations, focusing on metadata, styling, and data integration for visualizations like histograms, treemaps, and scorecards. It operates on a structured type representing chart specifications, enabling precise field-level access via lenses, JSON serialization for API compatibility, and initialization of empty chart templates. Typical use cases include programmatically generating custom chart layouts with dynamic data sources or adapting existing configurations for Google Sheets API v4 requests.",
      "description_length": 568,
      "index": 758,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.TaskList",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing task lists in the Tasks API v1, including creating, parsing, and rendering task list data. It works with the `t` record type representing task lists, and `GapiJson.json_data_model` for JSON serialization. Concrete use cases include converting task list data to and from JSON format, accessing specific fields like title or ID using lenses, and initializing empty task list structures.",
      "description_length": 428,
      "index": 759,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Service.UsersResource",
      "library": "gapi-ocaml",
      "description": "This module handles user data retrieval by ID from the Blogger API, managing HTTP requests and responses using user identifiers and session contexts. It provides operations to fetch detailed user profiles for display or further API interactions, and includes a child module that retrieves a list of blogs associated with a user using the `GapiBloggerV2Model.BlogList.t` structure. A concrete use case involves fetching a user's blog list to populate a management interface or synchronize blog metadata. Together, these components enable efficient access and management of user-specific data within a Blogger system.",
      "description_length": 615,
      "index": 760,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceParameters",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling conference parameters in a calendar API. It includes operations to parse and render conference data to and from JSON, and provides an empty record for initializing conference parameters. It works with JSON data models and an add-on parameters type to support specific conference extensions.",
      "description_length": 367,
      "index": 761,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.ClientLogin",
      "library": "gapi-ocaml",
      "description": "Handles ClientLogin authorization responses by parsing and managing authentication tokens and CAPTCHA challenges. It provides functions to extract token and CAPTCHA data from response payloads. Useful for implementing authentication flows that require handling of CAPTCHA verification steps during login.",
      "description_length": 304,
      "index": 762,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AppendValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from appending values to a Google Sheets spreadsheet using the v4 API. It includes fields for the spreadsheet ID, the table range in A1 notation, and update metadata via an `UpdateValuesResponse`. These values are used to interpret the result of appending data, such as confirming the target sheet and understanding how the update was applied.",
      "description_length": 379,
      "index": 763,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateSheetResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from duplicating a sheet in the Google Sheets API. It includes operations to access and modify sheet properties, convert to and from JSON data models, and create or parse instances. It is used to handle the structured data returned after a sheet duplication operation in API interactions.",
      "description_length": 351,
      "index": 764,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartColumnStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the style configuration for columns in a waterfall chart, including label, color, and color style properties. It provides operations to create, render, and parse column style data to and from JSON format. Use this module when configuring visual properties of waterfall chart columns in Google Sheets API requests or responses.",
      "description_length": 346,
      "index": 765,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Job",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing BigQuery jobs, including fields like job configuration, status, and statistics. It provides lenses for accessing and modifying job properties, functions for parsing and rendering job data, and utilities for converting between job representations and JSON models. Concrete use cases include tracking job execution details, querying job status, and serializing job metadata for storage or transmission.",
      "description_length": 462,
      "index": 766,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing the Tasks API, including full access (`tasks`) and read-only access (`tasks_readonly`). It works with string values representing OAuth 2.0 scope identifiers. Use these scopes to authenticate API requests when managing or viewing task data in a user's account.",
      "description_length": 315,
      "index": 767,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PivotTable",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring and serializing pivot tables in the Google Sheets API. It includes fields for specifying data sources, row and column groupings, filters, and value aggregations, along with lenses for accessing and modifying these fields. Functions support JSON serialization and deserialization, enabling integration with API requests and responses for pivot table creation and updates.",
      "description_length": 435,
      "index": 768,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.EventReminder",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates event reminder configurations for the Google Calendar API v3. It provides operations to create, parse, and render reminders with specific methods (email or popup) and trigger times in minutes before an event. Use cases include setting up notifications for calendar events and converting between JSON data models and internal representations.",
      "description_length": 377,
      "index": 769,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiService.StandardParameters",
      "library": "gapi-ocaml",
      "description": "This module defines standard query parameters used across API requests, including data format, field selection, and authentication. It provides functions to convert parameter sets to key-value lists and merge optional parameter configurations. These operations support constructing and customizing HTTP requests with common API options like quotas, IP tracking, and response formatting.",
      "description_length": 386,
      "index": 770,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ModifyThreadRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying Gmail threads by adding or removing label IDs. It includes operations to create an empty request, update label fields, and convert the structure to and from JSON for API communication. Use this module when interacting with the Gmail API to batch update thread labels efficiently.",
      "description_length": 330,
      "index": 771,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response structure for deleting developer metadata in the Google Sheets API. It includes operations to access and manipulate a list of deleted metadata entries, supporting JSON serialization and deserialization. It is used to handle the result of a metadata deletion request, allowing inspection of the removed metadata.",
      "description_length": 342,
      "index": 772,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddFilterViewResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a filter view in the Google Sheets API. It contains a single field for the newly added filter view and provides operations to access, modify, and serialize this data. It is used when interacting with spreadsheet filter views, enabling integration with JSON parsing and rendering workflows.",
      "description_length": 337,
      "index": 773,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestResource",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing REST resources within an API discovery model. It provides functions to access and modify methods, sub-resources, and deprecation status of a resource using lenses, along with parsing and rendering to and from JSON data models. It is used to construct and manipulate hierarchical API structures based on discovery documents.",
      "description_length": 367,
      "index": 774,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Slicer",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for working with slicers in Google Sheets API v4. It includes operations to create, parse, and render slicer data, which consists of an ID, a specification, and a position on a sheet. Concrete use cases include integrating slicer controls into spreadsheets for filtering data like pivot tables or charts.",
      "description_length": 351,
      "index": 775,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.FilterView",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing filter views in a Google Sheets document. It includes fields for identifying the filter's range, sorting specifications, and filtering criteria, along with lenses for accessing and modifying these fields. Use cases include creating, updating, and serializing filter views for API requests or storage.",
      "description_length": 362,
      "index": 776,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDriveList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing data from Google Drive API v3 Team Drive list responses. It provides lenses to access the next page token, resource kind, and list of Team Drives, along with functions to convert to and from JSON data models. Used when paginating through Team Drive collections or processing API responses.",
      "description_length": 331,
      "index": 777,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ErrorValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing error values in the Google Sheets API, with fields for the error type and message. It provides functions to create an empty error value, convert error values to and from JSON data models, and access or update individual fields using lenses. Concrete use cases include parsing API responses containing errors and constructing error payloads for spreadsheet operations.",
      "description_length": 421,
      "index": 778,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Dataset",
      "library": "gapi-ocaml",
      "description": "This module manages dataset resources in the BigQuery API, handling metadata such as access control, location, and expiration. It provides operations to configure dataset policies, set lifecycle rules, and convert dataset specifications to and from JSON. The access control submodule enables fine-grained permission settings, allowing roles to be assigned based on user, group, or domain. Example uses include setting dataset access for specific email groups, defining default table expiration times, and exporting dataset configurations for auditing.",
      "description_length": 551,
      "index": 779,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BasicFilter",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring and manipulating basic filters in Google Sheets. It supports creating, parsing, and rendering filter configurations that specify sorting, column-based filtering, and data range selection. Concrete use cases include setting up dynamic data views by defining sort orders with `sortSpecs`, applying visibility rules per column with `filterSpecs`, and associating filters with specific grid ranges using `range`.",
      "description_length": 475,
      "index": 780,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.FileList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of files retrieved from the Drive API, providing access to metadata like the ETag, next page token, and links for pagination. It includes functions to convert between JSON data models and the `FileList` type, enabling parsing and rendering of API responses. It is used when handling responses from file listing operations, such as querying a user's Drive files.",
      "description_length": 401,
      "index": 781,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BigQueryQuerySpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying BigQuery queries within the Google Sheets API. It includes operations to serialize and deserialize query specifications to and from JSON data models. Use this module when configuring BigQuery data sources in Sheets, such as importing query results directly into spreadsheets.",
      "description_length": 327,
      "index": 782,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with a single integer field `filterId` and provides functions to manipulate and serialize this data structure. It includes operations for creating an empty instance, extracting or setting the `filterId`, and converting to or from a JSON data model. This module is used to construct or interpret requests to delete a specific filter view in the Google Sheets API by referencing its numeric identifier.",
      "description_length": 434,
      "index": 783,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.HistogramRule",
      "library": "gapi-ocaml",
      "description": "This module defines a histogram rule structure for configuring bucket intervals and boundaries in data visualization. It provides functions to create, serialize, and deserialize histogram rules, supporting integration with JSON-based data models. Use cases include setting up histogram buckets for numeric data ranges in Google Sheets visualizations.",
      "description_length": 350,
      "index": 784,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableFieldSchema",
      "library": "gapi-ocaml",
      "description": "This module defines the schema structure for fields in a BigQuery table, supporting nested records and specifying data types such as STRING, INTEGER, or RECORD. It includes functions to access and modify field properties like name, type, mode, and description, as well as serialize and deserialize schema definitions to and from JSON. Use cases include constructing and validating table schemas when interacting with the BigQuery API, particularly for defining nested and repeated fields.",
      "description_length": 488,
      "index": 785,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshDataSourceObjectExecutionStatus",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the execution status of a data source object refresh in the Google Sheets API. It includes fields for referencing the data source and tracking execution status, with operations to construct, render, and parse this data to and from JSON. It is used to monitor and update the status of data source refresh operations within a spreadsheet.",
      "description_length": 386,
      "index": 786,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartHistogramRule",
      "library": "gapi-ocaml",
      "description": "This module defines a histogram rule structure for configuring bucket ranges in chart data visualization. It provides functions to set and retrieve minimum and maximum values, interval size, and to serialize or deserialize the configuration to and from JSON data models. It is used to define how numerical data should be grouped into buckets for histogram charts in Google Sheets.",
      "description_length": 380,
      "index": 787,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteConditionalFormatRuleResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from deleting a conditional format rule in the Google Sheets API. It stores the deleted rule using the `rule` field and provides functions to serialize and deserialize the response to and from JSON data models. It is used to retrieve the deleted conditional format rule after an API call to remove it from a spreadsheet.",
      "description_length": 356,
      "index": 788,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Editors",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates access control settings for protected ranges in Google Sheets. It provides functions to set and retrieve lists of users and groups with edit permissions, as well as a flag for domain-wide access. Use cases include configuring protected ranges with specific editors or parsing JSON responses to extract editor information from the API.",
      "description_length": 370,
      "index": 789,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.NamedRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing named ranges in a Google Sheets document, including identifiers, names, and associated grid ranges. It provides functions to construct, serialize, and deserialize named range objects for use in API requests and responses. Concrete use cases include managing user-defined range names for spreadsheet automation and data extraction tasks.",
      "description_length": 390,
      "index": 790,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authorization scopes for accessing Google Calendar API resources. It includes specific permissions for managing calendars, events, and settings, such as full calendar access, event editing, and read-only settings. These scopes are used when authenticating API requests to control access levels for calendar data.",
      "description_length": 332,
      "index": 791,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Tokeninfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling OAuth2 token information, including fields like access type, audience, email, and scopes. It provides lenses for accessing and modifying individual fields, functions for parsing and rendering token data, and conversions to and from JSON data models. Concrete use cases include validating token details, extracting user information, and serializing tokens for storage or transmission.",
      "description_length": 445,
      "index": 792,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.AppIcons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon data for applications in the Google Drive API v3. It includes functions to construct, serialize, and deserialize icon records containing size, category, and URL fields. Use cases include handling application icon metadata in Drive integrations, such as displaying app-specific icons in file listings or UI elements.",
      "description_length": 356,
      "index": 793,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceColumn",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a calculated column in a Google Sheets data source, including its column reference and formula. It provides functions to create, manipulate, and serialize these column definitions to and from JSON data models. Use this module when configuring or modifying calculated columns in external data sources linked to Google Sheets.",
      "description_length": 378,
      "index": 794,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filters",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling collections of Google Analytics filters, including pagination metadata like `itemsPerPage`, `startIndex`, and `totalResults`, and links for navigating result pages. It provides lenses to access and modify individual fields, and functions to serialize and deserialize the structure to and from JSON data models. It is used to process and manipulate filter lists retrieved from or sent to the Google Analytics API.",
      "description_length": 462,
      "index": 795,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchGetValuesResponse",
      "library": "gapi-ocaml",
      "description": "Handles parsing and rendering batch value responses from the Google Sheets API, working with `ValueRange.t` lists and JSON data models. Provides accessors for spreadsheet ID and value ranges, along with serialization and deserialization functions. Used to retrieve and process multiple ranges of cell data from a specific spreadsheet.",
      "description_length": 334,
      "index": 796,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ThemeColorPair",
      "library": "gapi-ocaml",
      "description": "This module defines a theme color pair with operations to access and manipulate its color type and corresponding color value. It works with string identifiers and `ColorStyle.t` structures to represent themed colors in a spreadsheet. Use this module to serialize, deserialize, or modify theme color configurations within Google Sheets API interactions.",
      "description_length": 352,
      "index": 797,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLink",
      "library": "gapi-ocaml",
      "description": "This module manages user links to Google Analytics entities, handling creation, parsing, and rendering of links with associated permissions and metadata. It supports operations for access configuration and synchronization of user permissions across accounts, web properties, and views. The core data structures represent entity references and permission sets, with lenses for manipulation and JSON serialization for integration. Specific use cases include managing user access at different resource levels and distinguishing between effective and explicitly set permissions.",
      "description_length": 574,
      "index": 798,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.SpreadsheetTheme",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing spreadsheet themes, including font family and color pairs. It provides functions to serialize and deserialize theme data to and from JSON, enabling integration with the Google Sheets API. Use cases include applying consistent styling across spreadsheets and programmatically updating theme elements.",
      "description_length": 361,
      "index": 799,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupLimit",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates pivot group limits in the Google Sheets API v4 data model. It provides functions to set and retrieve the `countLimit` and `applyOrder` fields using lenses, and supports serialization and deserialization to and from JSON data models. Use this module when configuring pivot tables to restrict the number of items displayed in a group and control the order in which limits are applied.",
      "description_length": 418,
      "index": 800,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.ActivitiesResource",
      "library": "gapi-ocaml",
      "description": "This module manages interactions with user activities on the Google+ platform, allowing retrieval, listing, and searching of structured activity data using identifiers, collections, and sort options. It supports operations such as fetching a specific activity by ID, listing public posts for a user, or searching across activities with keyword and sorting criteria. The `Collection` type defines visibility filters like \"public\" or \"all\" for query refinement, while the `SortOrder` type enables type-safe specification of result sorting by relevance or date. Together, these components provide a cohesive interface for querying and organizing activity data from the API.",
      "description_length": 670,
      "index": 801,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.PopSettings",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for configuring POP access in the Gmail API. It includes fields to specify the message access window and post-fetch actions, along with functions to convert between POP settings and JSON data models. It is used to manage POP-specific configuration when interacting with Gmail accounts via the API.",
      "description_length": 361,
      "index": 802,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.UserDefinedFunctionResource",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with two mutually exclusive fields: `inlineCode` for embedding user-defined function code directly, and `resourceUri` for referencing code stored in Google Cloud Storage. It provides functions to construct, serialize, and parse this structure, enabling seamless conversion between OCaml records and JSON data models. Concrete use cases include configuring BigQuery UDFs with either inline logic or external code sources during query setup or deployment.",
      "description_length": 490,
      "index": 803,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal",
      "library": "gapi-ocaml",
      "description": "This module manages goal configurations in a web analytics system, supporting typed goal records like `Goal.t` with fields for status, timestamps, and type-specific details. It provides lenses for precise field updates and JSON converters for data interchange, enabling operations such as defining, updating, and serializing goals. Submodules handle specific goal types, including time-on-site thresholds, URL destination funnels with match criteria, page visit counts, event-based triggers, and profile links. These structures allow tracking user engagement metrics and conversions, with examples like building multi-step URL funnels or configuring event goals based on user actions.",
      "description_length": 684,
      "index": 804,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.RevisionList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling lists of file revisions retrieved from the Drive API, including metadata like ETags, pagination tokens, and self-links. It provides operations to access and modify individual fields such as `etag`, `items`, and `nextPageToken`, as well as functions to serialize and deserialize revision lists to and from JSON. It is used when paginating through revision history of a file or managing version control in a Drive integration.",
      "description_length": 474,
      "index": 805,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying data sources in Google Sheets API (v4), supporting BigQuery and Looker as source types. It provides lenses to access and modify individual fields (`bigQuery`, `looker`, `parameters`), along with functions to serialize and deserialize data source specifications to and from JSON. It is used when configuring or retrieving external data sources for Sheets, such as setting up queries with parameterized inputs or connecting to a Looker or BigQuery backend.",
      "description_length": 518,
      "index": 806,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.NumberFormat",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for specifying number formatting in Google Sheets API requests. It includes operations to create, serialize, and deserialize number format configurations using a type field and an optional pattern string. Concrete use cases include setting currency, date, or percentage formatting in spreadsheet cells through the Sheets API.",
      "description_length": 372,
      "index": 807,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.GeneratedIds",
      "library": "gapi-ocaml",
      "description": "This module handles the creation and manipulation of generated file IDs in the Drive API v2. It provides functions to parse and render JSON data models, access fields like `ids`, `kind`, and `space` via lenses, and manage empty or initialized structures. Concrete use cases include processing batch file creation responses and preparing file metadata for API requests.",
      "description_length": 368,
      "index": 808,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.GridProperties",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring grid layout in a Google Sheets document. It includes fields for setting row and column counts, frozen dimensions, gridline visibility, and grouping controls, using lenses for accessing and modifying individual properties. Functions are provided to convert grid configurations to and from JSON data models for API interactions.",
      "description_length": 391,
      "index": 809,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDimensionPropertiesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating dimension properties in a Google Sheets document, including the range of rows or columns to update, the associated data source sheet range, and the specific properties to apply. It provides lenses for accessing and modifying individual fields such as `range`, `dataSourceSheetRange`, `properties`, and `fields`, along with functions to serialize and deserialize the structure to and from JSON. It is used when making API requests to update row or column properties in Sheets, such as setting hidden status or pixel sizes.",
      "description_length": 571,
      "index": 810,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) reference, including fields such as account ID, profile ID, web property ID, and related metadata. It provides functions to serialize and deserialize this data to and from JSON, as well as lenses for accessing and modifying individual fields. It is used to manage references to Analytics profiles when interacting with the Google Analytics API, such as when retrieving or configuring reporting views.",
      "description_length": 484,
      "index": 811,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDimensionGroupResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a dimension group in the Google Sheets API. It stores a list of dimension groups, allowing retrieval and manipulation of grouped dimensions after an addition operation. It is used to process and construct API responses when managing row or column groups in a spreadsheet.",
      "description_length": 319,
      "index": 812,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateChartSpecRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating a chart's specification in the Google Sheets API. It includes functions to create, render, and parse update requests containing a chart ID and its new specification. It is used to modify chart configurations programmatically when interacting with spreadsheet chart objects.",
      "description_length": 335,
      "index": 813,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.ListMonad",
      "library": "gapi-ocaml",
      "description": "Implements monadic operations for list computations, including `return`, `bind`, `mzero`, `mplus`, and `guard`. Works with lists as the underlying data structure, enabling sequencing and combination of list-based effectful computations. Useful for generating and filtering combinations of values, such as in search algorithms or combinatorial problem solving.",
      "description_length": 359,
      "index": 814,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive",
      "library": "gapi-ocaml",
      "description": "This module manages Team Drives in the Google Drive API v3, offering data structures and operations for configuring metadata such as name, color, background image, and access restrictions. It includes types for background image settings, capability flags, and restriction policies, each with lenses for precise field manipulation and JSON serialization for API integration. You can create and update Team Drive themes, validate user permissions using capability checks, and enforce access rules like domain-only sharing or copy restrictions. Submodules handle specific aspects like image cropping, permission validation, and policy enforcement, all supporting seamless API communication through JSON encoding and decoding.",
      "description_length": 722,
      "index": 815,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableList",
      "library": "gapi-ocaml",
      "description": "This module provides a structured way to handle paginated lists of BigQuery tables, including metadata such as etag, kind, and pagination tokens, while also supporting operations to access and manipulate these lists and their elements. The core data type represents a table list with support for JSON serialization and deserialization, and child modules define table records with lenses for fields like `friendlyName`, `id`, and `tableReference`. It enables concrete operations such as retrieving paginated dataset tables, caching query results, and parsing API responses in BigQuery integrations. Together, the module and its submodules support both high-level list management and fine-grained table metadata manipulation.",
      "description_length": 723,
      "index": 816,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedReport",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling saved reports in the AdSense Management API, including creating an empty report, parsing and rendering JSON data, and converting between report objects and JSON data models. It works with the `t` record type, which includes fields like `id`, `kind`, and `name`, and uses lenses for accessing and modifying these fields. Concrete use cases include serializing saved report data for storage, or deserializing API responses into report objects for further processing.",
      "description_length": 508,
      "index": 817,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Context",
      "library": "gapi-ocaml",
      "description": "This module represents search context data for the CustomSearch API, including facets and a title, with support for JSON serialization and manipulation. It provides core operations to construct, modify, and convert search contexts, enabling tasks like parsing API responses or building custom query contexts. The facet submodule enhances this functionality by modeling facet metadata with fields like `anchor`, `label`, and `label_with_op`, allowing structured access to search facet information. Together, they support end-to-end handling of search context data, from API interaction to serialization and analysis.",
      "description_length": 615,
      "index": 818,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.FilterSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a column filter specification for Google Sheets API (v4), including the column index, data source reference, and filter criteria. It provides functions to construct, modify, and serialize filter specs to and from JSON data models. Use this module when configuring or parsing filters in spreadsheet automation tasks such as data validation or conditional formatting.",
      "description_length": 415,
      "index": 819,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.EventDateTime",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling event date and time information in the Calendar API v3. It provides functions to create, parse, and render event timestamps with optional time zones and all-day date support. Concrete use cases include managing event scheduling data with precise time and date formatting, and converting between JSON models and internal data representations.",
      "description_length": 403,
      "index": 820,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Alert",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling alerts in the AdSense Management API, including parsing and rendering alert data to and from JSON. It works with the `t` record type representing alerts, which includes fields like message, severity, and dismissibility. Concrete use cases include processing API responses to display user alerts or managing alert state in a client application.",
      "description_length": 387,
      "index": 821,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.User",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling user data returned by the Google Drive API v3. It includes fields such as display name, email address, and permission ID, along with lenses for accessing and modifying these fields. Use this module to parse and render user information when interacting with Drive permissions or user metadata.",
      "description_length": 354,
      "index": 822,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.OAuth1",
      "library": "gapi-ocaml",
      "description": "This module handles OAuth 1.0a authorization responses, providing structured access to request tokens, authorization tokens, and access tokens. It includes lenses for extracting token values, secrets, and verification data from authentication flows. Concrete use cases include parsing and accessing token data during OAuth 1.0a handshake steps, such as after obtaining a request token or exchanging a verifier for an access token.",
      "description_length": 430,
      "index": 823,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Service.WebResourceResource",
      "library": "gapi-ocaml",
      "description": "This module handles website and domain ownership verification through Google's Site Verification API. It provides operations to list verified sites, insert new verification attempts, retrieve verification tokens, and manage ownership details using patch and update semantics. Specific use cases include verifying site ownership by adding a token, retrieving current verification status, and updating owner information for existing sites.",
      "description_length": 437,
      "index": 824,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.AppList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and manipulation of a list of Drive API applications, including their default IDs, ETags, and metadata. Works with `AppList.t` records containing app entries, priority order, and API-specific fields like `selfLink`. Used to process and serialize app lists retrieved from or sent to the Drive API, enabling configuration of default app behaviors and app-specific metadata handling.",
      "description_length": 408,
      "index": 825,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Columns",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates column metadata returned by the Google Analytics API v3. It provides accessors for fields like `attributeNames`, `etag`, `items`, `kind`, and `totalResults`, and supports serialization and deserialization to and from JSON data models. It is used to process and work with the structure of report columns in Google Analytics API responses.",
      "description_length": 373,
      "index": 826,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupRule",
      "library": "gapi-ocaml",
      "description": "This module defines rules for grouping data in pivot tables, including manual, histogram, and date-time based grouping. It provides functions to construct, serialize, and deserialize these rules to and from JSON data models. Use this module when configuring pivot table groupings in Google Sheets API requests.",
      "description_length": 310,
      "index": 827,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.EventAttendee",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing event attendees in a calendar system. It includes fields for attendee details like email, response status, and role, with lenses for accessing and modifying each field. Functions support serialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 346,
      "index": 828,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.FindReplaceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for configuring find-and-replace actions in a Google Sheets document. It includes fields to specify the target value, replacement, sheet range, and matching behavior such as case sensitivity, regex support, and cell content matching. Use this module to construct and manipulate find-and-replace requests for programmatic editing of spreadsheet content.",
      "description_length": 404,
      "index": 829,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.FilterCriteria",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying filter criteria when interacting with the Gmail API, including fields like sender, recipient, message size, and search queries. It provides functions to construct, parse, and render filter criteria for use in API requests and responses. Use cases include filtering messages by sender, subject, or attachment status, and defining conditions for automated email processing rules.",
      "description_length": 429,
      "index": 830,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.SessionM",
      "library": "gapi-ocaml",
      "description": "This module implements a session monad for threading state through computations, offering `get`, `put`, and monadic combinators like `bind`, `mapM`, and `foldM` to manage and compose stateful operations. Its core functionality enables mutable state handling in pure code, useful for managing session data or configuration across sequences of actions. The included submodule enhances workflow construction by providing `>>=` and `>>` operators to chain authentication steps, API calls, or state transitions in a clear, linear style. Together, they support building structured, state-aware pipelines such as user session handling or multi-step form processing.",
      "description_length": 658,
      "index": 831,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource",
      "library": "gapi-ocaml",
      "description": "This module provides comprehensive tools for managing Google Analytics resources, including audiences, profiles, web properties, filters, goals, and user access controls. It supports operations like creating and updating remarketing audiences, configuring profile filters, managing AdWords links, and handling user permissions at various levels. Developers can use it to automate analytics setup, generate unsampled reports, manage experiments, and integrate external data sources. Specific tasks include hashing client IDs for privacy, listing accessible accounts, and synchronizing custom metrics and dimensions.",
      "description_length": 614,
      "index": 832,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ManualRule",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for organizing and managing groups of items in a Google Sheets document. It includes functions to serialize and deserialize group data, enabling integration with JSON-based APIs. Use this module to define custom grouping rules for sheet data, such as categorizing rows or columns based on specific values.",
      "description_length": 342,
      "index": 833,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchGetValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module handles parsing and rendering JSON responses from the Google Sheets API when retrieving values filtered by specific data filters. It works with the `t` record type, which includes the spreadsheet ID and a list of matched value ranges. Use this module to extract structured data from API responses or construct responses for testing and integration purposes.",
      "description_length": 369,
      "index": 834,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UnmergeCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for unmerging cells in a Google Sheets document. It provides functions to create, parse, and render an unmerge request based on a specified grid range. The primary use case is to represent and manipulate the data required to unmerge cells via the Google Sheets API v4.",
      "description_length": 317,
      "index": 835,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobReference",
      "library": "gapi-ocaml",
      "description": "This module defines a job reference structure with operations to access and modify job and project IDs. It provides functions to serialize and deserialize job references to and from JSON data models. It is used to uniquely identify and manage BigQuery jobs within a project.",
      "description_length": 274,
      "index": 836,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.TextFormatRun",
      "library": "gapi-ocaml",
      "description": "This module defines a text format run with a start index and a text format, both accessible via lenses. It supports creating, modifying, and serializing text formatting information for Google Sheets cells. Use cases include applying specific formatting to substrings within a cell's content, such as bolding or coloring particular words.",
      "description_length": 337,
      "index": 837,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiLens.Infix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for working with functional lenses, enabling concise get, set, and modify operations on deeply nested immutable data structures. It supports composition of lenses to access and update fields across multiple layers of data, as well as pseudo-imperative operators for integer-valued fields. Concrete use cases include efficiently updating specific fields in deeply nested records or tuples without boilerplate construction code.",
      "description_length": 462,
      "index": 838,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore.Header",
      "library": "gapi-ocaml",
      "description": "This module represents HTTP headers and status codes as discriminated unions, providing `to_string` for serializing header values and `parse` for converting string representations into typed headers. It works with string-based HTTP fields like content type, authorization, ETag, and custom key-value pairs. Use this module to handle HTTP message parsing and generation in APIs consuming or producing JSON/XML documents.",
      "description_length": 419,
      "index": 839,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing AdSense data, providing `adsense` for full read-write access and `adsense_readonly` for read-only access. It works with string values representing OAuth2 scope identifiers. Use these scopes to configure authorized API access when integrating with the AdSense Management API.",
      "description_length": 330,
      "index": 840,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyRequestItem",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing items in a free/busy request, specifically containing identifiers for calendars or groups. It provides functions to serialize and deserialize these items to and from JSON data models, ensuring compatibility with API requests. Use cases include constructing and parsing free/busy query parameters when checking calendar availability across multiple calendars or groups.",
      "description_length": 422,
      "index": 841,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "This module manages comments on files in Google Drive, providing functions to create, retrieve, update, and delete individual comments, as well as list all comments for a specific file. It works with `GapiDriveV2Model.Comment.t` for comment data and `GapiConversation.Session.t` to handle authenticated API interactions. Use this module to implement comment moderation, annotation systems, or collaborative feedback features directly within Drive files.",
      "description_length": 453,
      "index": 842,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.OrgChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring org charts in Google Sheets, including node appearance, labels, and hierarchical relationships. It provides lenses for accessing and modifying properties like node size, colors, labels, and tooltips, along with functions to serialize and deserialize the configuration to and from JSON. It is used to define how org chart data is displayed in a Google Sheets visualization.",
      "description_length": 435,
      "index": 843,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.ExplainQueryStage",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for analyzing BigQuery execution stages, including metrics like compute, read, wait, and write ratios, along with records processed. It works with stages in a query plan, each containing a list of steps, and provides functions to serialize, deserialize, and manipulate these stages. Concrete use cases include inspecting query performance, identifying bottlenecks, and visualizing execution plans.",
      "description_length": 448,
      "index": 844,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Reply",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling replies in the Google Drive API v3. It includes fields such as `id`, `action`, `author`, and `content`, along with lenses for accessing and modifying these fields. Functions like `render`, `parse`, `to_data_model`, and `of_data_model` handle conversion between reply objects and JSON data models for API communication.",
      "description_length": 382,
      "index": 845,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.WebPropertySummary",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a summary of a Google Analytics web property, including its ID, name, level, and associated profiles. It provides functions to serialize and deserialize the structure to and from JSON, as well as lenses for accessing and modifying individual fields. Use this module when interacting with the Google Analytics API v3 to manage or display web property data, such as listing properties or updating their metadata.",
      "description_length": 460,
      "index": 846,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.CommentReplyList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing lists of comment replies in the Google Drive API v2, including pagination metadata. It provides operations to access replies, navigate pages using tokens, and serialize or deserialize the structure to JSON. Concrete use cases include handling paginated responses when retrieving comment threads and constructing reply lists for API requests.",
      "description_length": 391,
      "index": 847,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.LinkedForeignAccount",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing linked foreign accounts in the Google Analytics API v3. It provides lenses for accessing and modifying account properties such as `linkedAccountId`, `status`, and `_type`, along with functions to serialize and deserialize account data to and from JSON. Use this module when integrating with Google Analytics to configure and retrieve foreign account links like AdWords or DBM.",
      "description_length": 440,
      "index": 848,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ModifyMessageRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying message labels in the Gmail API, supporting operations to add or remove labels by their IDs. It provides functions to create an empty request, render the request as JSON data, and parse or convert between the request type and JSON data models. Concrete use cases include updating message labels during API interactions, such as marking messages as read or applying custom labels.",
      "description_length": 430,
      "index": 849,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.TabledataResource",
      "library": "gapi-ocaml",
      "description": "This module handles direct data manipulation for BigQuery tables, providing two core operations: `insertAll` streams individual records into a table without requiring a load job, and `list` retrieves a paginated set of rows. It works with structured data models such as `TableDataInsertAllRequest.t` for input and `TableDataList.t` for output, interacting with BigQuery tables via project, dataset, and table identifiers. Concrete use cases include real-time data ingestion pipelines and on-demand querying of table contents with role-based access control.",
      "description_length": 556,
      "index": 850,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Calendar",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for working with calendar data in the Calendar API v3. It includes fields like `summary`, `id`, `timeZone`, and `conferenceProperties`, along with lenses for accessing and modifying individual properties. Functions support serialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 369,
      "index": 851,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.LookerDataSourceSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying Looker data sources within Google Sheets API operations. It includes fields for a Looker instance URL, model name, and explore name, along with lenses for accessing and modifying these fields. The module supports serialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 362,
      "index": 852,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates comments and their associated data in the Google Drive API v3, handling fields such as `id`, `content`, `author`, and `replies`. It supports parsing and rendering comments to and from JSON, and includes types like `t`, `Reply.t`, and `User.t` for managing comment threads and user information. A child module manages quoted file content within comments using MIME types and plain text, offering lenses for field access and JSON serialization. Together, these components enable operations like creating, modifying, and resolving document comments, including inline annotations referencing specific file content.",
      "description_length": 649,
      "index": 853,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataFilterValueRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying a range of values in a spreadsheet, including a data filter, major dimension, and 2D list of values. It provides accessors for manipulating individual fields, along with functions to serialize and deserialize the structure to and from JSON. It is used to define the target location and content when updating specific parts of a spreadsheet through the Google Sheets API.",
      "description_length": 422,
      "index": 854,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person",
      "library": "gapi-ocaml",
      "description": "This module organizes structured Google+ user profile data into a rich hierarchy of nested components, centered around a core record type (`t`) that exposes biographical, contact, and social metadata through functional lenses. It enables type-safe traversal and modification of nested data via submodules like `Name`, `Emails`, and `Organizations`, each providing precise accessors and JSON serialization for their respective domains. Operations include extracting or updating gender, URLs, or employment history, converting profile components to JSON for API transmission, and synchronizing remote data with local models. Submodules further handle specialized data like `AgeRange`, `Cover`, and `Image`, supporting fine-grained manipulation of profile aspects such as age filtering, cover layout, and image metadata.",
      "description_length": 817,
      "index": 855,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextFormat",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates text formatting properties for Google Sheets cells, including font style, size, color, and hyperlink settings. It works with structured data types such as `t` for text format configuration and `ColorStyle`, `Color`, and `Link` for associated attributes. Concrete use cases include setting bold or italic text, applying custom font sizes, configuring text colors, and embedding links into spreadsheet cells via the Google Sheets API.",
      "description_length": 468,
      "index": 856,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.ChildrenResource",
      "library": "gapi-ocaml",
      "description": "This module manages hierarchical relationships between files and folders in Google Drive. It provides operations to add, remove, retrieve, and list child files or folders within a specified parent folder. Use cases include organizing files into directories, navigating folder structures, and maintaining file hierarchies during synchronization or backup processes.",
      "description_length": 364,
      "index": 857,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Service.TasklistsResource",
      "library": "gapi-ocaml",
      "description": "This module handles operations on task lists including creation, deletion, retrieval, listing, and updating. It works with task list identifiers and `TaskList` data structures, along with session and configuration parameters. It is used to manage user task lists in a Tasks API service, such as adding new lists, fetching existing ones, or modifying list details.",
      "description_length": 363,
      "index": 858,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.GeneratedIds",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a list of file IDs generated by Google Drive API v3 for a specific user and space. It includes functions to parse and render these IDs from and to JSON data models, along with lenses for accessing the `ids`, `space`, and `kind` fields. It is used to handle batch ID generation responses from the Drive API, enabling creation of files in specific spaces with preallocated IDs.",
      "description_length": 425,
      "index": 859,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling job statistics in the BigQuery API. It includes fields for tracking job timestamps, byte processing totals, and nested statistics specific to job types like extract, load, and query operations. Use this module to parse, render, or manipulate job metadata for monitoring or logging purposes.",
      "description_length": 354,
      "index": 860,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore.HttpMethod",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing standard HTTP methods such as GET, POST, PUT, DELETE, PATCH, and HEAD. It includes a function to convert these method values to their string representations. This is used to specify the HTTP verb when making requests in the context of RESTful APIs or HTTP client implementations.",
      "description_length": 331,
      "index": 861,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshWeeklySchedule",
      "library": "gapi-ocaml",
      "description": "This module defines a weekly schedule for refreshing data sources in Google Sheets, specifying days of the week and a start time. It provides operations to create, parse, and render schedule data using JSON, with lenses for accessing and modifying individual fields. Concrete use cases include configuring recurring data refreshes at specific times and days for spreadsheet data sources.",
      "description_length": 387,
      "index": 862,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BigQueryDataSourceSpec",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates BigQuery data source specifications for Google Sheets, including project identifiers, query configurations, and table references. It supports creating, parsing, and serializing data source specifications to and from JSON for API interactions. Concrete use cases include configuring Sheets to pull data from BigQuery tables or execute custom queries against BigQuery datasets.",
      "description_length": 411,
      "index": 863,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.MonadCombinators-Infix",
      "library": "gapi-ocaml",
      "description": "Implements infix operators for monadic composition, including bind (`>>=`) and sequence (`>>`). Works with monadic types defined in the parent module, such as `'a m`. Enables chaining asynchronous or effectful computations in a concise, readable syntax without nested function calls.",
      "description_length": 283,
      "index": 864,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountSummaries",
      "library": "gapi-ocaml",
      "description": "This module handles structured data for Google Analytics API v3 account summaries, providing accessors and manipulators for fields like account lists, pagination parameters, and navigation links. It works with JSON data models and typed records to serialize and deserialize collection metadata and account summary entries. Concrete use cases include processing paginated API responses, extracting account summary lists, and managing navigation between result pages using next/previous links.",
      "description_length": 491,
      "index": 865,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdStyle",
      "library": "gapi-ocaml",
      "description": "This module structures and styles AdSense ad units by defining properties like colors, fonts, and corners, and provides tools to serialize and deserialize these settings into JSON for API use. It supports creating, parsing, and rendering ad styles programmatically, enabling dynamic configuration of ad appearance. The color submodule handles individual color fields\u2014background, border, text, title, and url\u2014allowing precise control over visual themes, while the font submodule manages font family and size settings for customizing ad typography. Together, these components offer a complete interface for defining and applying ad styles in web applications integrating the AdSense Management API.",
      "description_length": 696,
      "index": 866,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddProtectedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a protected range to a Google Sheets document. It includes functions to create, serialize, and deserialize the request payload, working primarily with the `ProtectedRange.t` type and JSON data models. Use this module when configuring protected ranges with specific permissions and settings in a spreadsheet.",
      "description_length": 367,
      "index": 867,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from updating cell values in a Google Sheets spreadsheet. It includes fields for the spreadsheet ID, updated range, counts of modified rows, columns, and cells, and optionally the updated cell values. The module provides functions to construct, parse, and serialize this response data for use in API interactions.",
      "description_length": 376,
      "index": 868,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshMonthlySchedule",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying monthly refresh schedules for data sources in Google Sheets. It includes operations to set and retrieve the start time and days of the month for refreshes, supporting precise control over recurring data updates. Use cases include configuring automated data refreshes on specific days of the month, such as refreshing financial reports on the 1st and 15th.",
      "description_length": 407,
      "index": 869,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JsonObject",
      "library": "gapi-ocaml",
      "description": "This module represents JSON objects as lists of key-value pairs and provides functions to convert between JSON data models and these object representations. It supports parsing JSON data into key-value lists, rendering key-value lists into structured JSON data, and transforming individual or nested JSON objects. Use cases include serializing BigQuery API resource configurations and deserializing API responses into structured data for query execution and management.",
      "description_length": 469,
      "index": 870,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SourceAndDestination",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a source range and its associated fill direction in a Google Sheets spreadsheet. It includes functions to set or retrieve the source grid range, the dimension to fill (rows or columns), and the length of the fill operation. These operations are used to programmatically extend data across rows or columns in a spreadsheet, based on an initial selection.",
      "description_length": 403,
      "index": 871,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AdunitsResource",
      "library": "gapi-ocaml",
      "description": "This module manages ad units within an AdSense account, offering operations to retrieve individual units, list all units in a client, and fetch ad code. It works with data types like `AdUnit`, `AdUnits`, and `AdCode`, enabling use cases such as dynamic ad placement management and embedding ad code in web pages. The module also includes a child module that lists custom channels for a specific ad unit, using `CustomChannels.t` and parameters like `adClientId` and `adUnitId`. This supports detailed reporting and inventory tracking by linking ad units to their associated custom channels.",
      "description_length": 590,
      "index": 872,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.UrlchannelsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations for managing URL channels within an AdSense ad client, primarily providing the `list` function to retrieve URL channel data. Works with `GapiAdsenseV1_1Model.UrlChannels` and session state to support querying and navigation. Useful for publishers needing to audit or manage URL-based ad placements in their AdSense inventory.",
      "description_length": 347,
      "index": 873,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AutoResizeDimensionsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying dimensions to auto-resize in a Google Sheets document, supporting both standard and data source sheet ranges. It includes functions to serialize and deserialize the structure to and from JSON, enabling integration with API requests. Use this module when programmatically adjusting row or column sizes based on content in Sheets API operations.",
      "description_length": 395,
      "index": 874,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling job status information in the BigQuery API. It provides accessors for retrieving error details, a list of encountered errors, and the current running state of a job. These functions support inspecting and serializing job statuses for monitoring and debugging purposes.",
      "description_length": 330,
      "index": 875,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountSummary",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Google Analytics account summaries, including parsing and rendering account data to and from JSON. It works with account summary records containing metadata like account ID, name, and starred status, along with associated web properties. It is used to manage and manipulate Analytics account data retrieved from or sent to the Google Analytics API.",
      "description_length": 410,
      "index": 876,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics2",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates job statistics for BigQuery API v2, specifically capturing billing and execution details of completed jobs. It provides lenses to access fields like billing tier, cache hit status, query plan stages, and byte counts for billing and processing. Use this module to inspect or serialize job performance metrics when querying or analyzing BigQuery job results.",
      "description_length": 392,
      "index": 877,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ClearValuesRequest",
      "library": "gapi-ocaml",
      "description": "This module represents a request to clear cell values in a Google Sheets document. It provides functions to serialize and deserialize the request to and from JSON data models. Use this module when constructing or processing API calls to reset cell content in a spreadsheet.",
      "description_length": 273,
      "index": 878,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickSeries",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing candlestick series in a Google Sheets chart. It provides functions to create an empty series, set or retrieve its data, and convert the series to and from JSON format for serialization or API interaction. It works with chart data models to support visualizing financial or time-series data in spreadsheet applications.",
      "description_length": 372,
      "index": 879,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceObjectReferences",
      "library": "gapi-ocaml",
      "description": "This module manages a list of data source object references within the Google Sheets API data model. It provides functions to create an empty reference list, render references to JSON data models, and parse or convert JSON data into structured references. Use this module when constructing or interpreting data source configurations for Google Sheets API operations involving external data sources.",
      "description_length": 398,
      "index": 880,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.MakeStateMonad",
      "library": "gapi-ocaml",
      "description": "Implements a state monad that threads a state value through a sequence of computations. It provides `return`, `bind`, `get`, and `put` to manipulate stateful values, where `get` retrieves the current state and `put` updates it. This module is used to manage mutable state in a purely functional way, enabling operations like parser combinators or configuration management that require tracking and updating state across steps.",
      "description_length": 426,
      "index": 881,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextRotation",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates text rotation settings for Google Sheets cells, specifically controlling the angle and vertical orientation of text. It works with a record type containing an integer angle and a boolean vertical flag, along with JSON data model conversion functions. It is used to configure text display in spreadsheet cells, such as rotating headers or creating vertical labels in tables.",
      "description_length": 409,
      "index": 882,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartGroupRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart group rules for time-based and histogram data in Google Sheets API v4. It provides accessors for `dateTimeRule` and `histogramRule`, along with serialization and deserialization functions for converting between `ChartGroupRule` and JSON data models. It is used to configure how data is grouped in charts, such as specifying time intervals or bucket sizes for histograms.",
      "description_length": 412,
      "index": 883,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileSummary",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics profile summary, with fields for the profile ID, name, type, kind, and starred status. It provides functions to parse and render profile data to and from JSON format, as well as lenses for accessing and modifying individual fields. It is used to interact with the Google Analytics API v3 when retrieving or configuring view profiles.",
      "description_length": 402,
      "index": 884,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.FilterRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a filter reference in the Google Analytics API v3, including fields such as account ID, link, filter ID, kind, and name. It provides functions to convert between this structure and JSON data models, enabling serialization and deserialization for API communication. Use cases include managing filter references when interacting with Google Analytics, such as retrieving, updating, or constructing filter data in API requests.",
      "description_length": 474,
      "index": 885,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.SendAs",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for managing send-as aliases in the Gmail API. It provides lenses to access and modify fields like display name, email address, and SMTP relay settings for each alias. Use this module to configure custom \"From\" addresses with specific signatures, reply-to addresses, and outbound SMTP relays when sending emails through Gmail.",
      "description_length": 390,
      "index": 886,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.CustomChannel",
      "library": "gapi-ocaml",
      "description": "This module provides a structured interface for managing AdSense custom channels, with core operations to parse, render, and convert custom channel data to and from JSON. It includes key data types representing channel metadata such as code, ID, kind, name, and targeting configuration, enabling manipulation of channel properties and integration with the AdSense API. The targeting submodule extends this functionality by defining placement rules, geographic targeting, and language settings using precise string enums, supporting creation, serialization, and parsing of targeting specs. Example usage includes converting a JSON API response into a custom channel object, modifying its targeting info, and serializing it back for API submission.",
      "description_length": 746,
      "index": 887,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddTableRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a table to a Google Sheets document. It includes functions to create an empty request, set or retrieve the table data, and convert the request to and from JSON format for API communication. It is used when programmatically inserting structured table data into a spreadsheet via the Google Sheets API.",
      "description_length": 360,
      "index": 888,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.InsertRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying a range insertion request in a Google Sheets document. It includes functions to set and retrieve the grid range and shift dimension, as well as serialization and deserialization to and from JSON data models. It is used to prepare requests that insert cells into a sheet, shifting existing cells either down or right.",
      "description_length": 380,
      "index": 889,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RepeatCellRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update a range of cells in a Google Sheet with specific cell data, targeting precise fields for modification. It operates on `GridRange`, `CellData`, and string fields to specify the area, content, and properties to update. Used when applying formatting or data changes across multiple cells in a spreadsheet.",
      "description_length": 342,
      "index": 890,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddChartRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a chart to a Google Sheets spreadsheet via the API. It includes functions to create, serialize, and deserialize chart requests, working with `EmbeddedChart.t` and JSON data models. Use this module when configuring and submitting new chart insertions, such as embedding a pie chart or line graph at a specific location in a spreadsheet.",
      "description_length": 395,
      "index": 891,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TableColumnProperties",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates table column properties for the Google Sheets API, including column index, name, type, and optional data validation rules. It provides lenses for accessing and modifying individual fields, functions to convert between JSON data models and internal representations, and an empty value for initialization. Concrete use cases include configuring table columns with validation rules for dropdowns and serializing column settings to JSON for API requests.",
      "description_length": 486,
      "index": 892,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateFilterViewResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from duplicating a filter view in the Google Sheets API. It contains a single field for the newly created `FilterView` and provides functions to serialize, deserialize, and manipulate the response data. Use this module when handling filter duplication operations to access the updated filter configuration.",
      "description_length": 342,
      "index": 893,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiJwtServiceAccount.JwtClaim",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing JWT claims specific to service account authorization, including fields for issuer, scope, audience, expiration, issued-at time, and subject. It provides lenses for accessing and modifying individual claim fields and functions to convert between the claim structure and JSON data models. This module is used to construct and manipulate JWT payloads for authenticating service accounts in API requests.",
      "description_length": 454,
      "index": 894,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Request",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive set of operations for modifying Google Sheets documents through structured mutation requests, including updates to spreadsheet properties, cell content, formatting, filters, charts, and metadata. It works with nested data structures encapsulated in the `Request.t` type, using lens-based access patterns to enable precise edits aligned with the Google Sheets API v4, suitable for building complex spreadsheet manipulations programmatically. The functions support use cases like automating data validation, configuring dynamic dashboards, and managing hierarchical spreadsheet elements through composable, type-safe operations.",
      "description_length": 663,
      "index": 895,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.OAuth2",
      "library": "gapi-ocaml",
      "description": "This module handles OAuth 2.0 authorization responses, providing access to tokens and related data. It works with `access_token` records containing token values, types, expiration times, and refresh tokens. Use it to extract and manipulate authentication credentials returned from OAuth 2.0 flows, such as during user login or API access setup.",
      "description_length": 344,
      "index": 896,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.CommentList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing fields of a paginated list of comments in the Google Drive API v3. Works with `t` records containing a list of comments, a kind identifier, and an optional next page token. Used to retrieve and process batches of comments from Drive files, handling pagination via the `nextPageToken` field.",
      "description_length": 332,
      "index": 897,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Color",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing RGBA colors with floating-point components in the Google Sheets API. It provides functions to manipulate color values, including setting and retrieving individual color channels using lenses, and converting colors to and from JSON data models. Use cases include configuring cell background or text colors in Google Sheets documents programmatically.",
      "description_length": 403,
      "index": 898,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ManualRuleGroup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for grouping items under a named category in a Google Sheets manual rule. It includes operations to create an empty group, set or retrieve the group name and items, and convert between the group structure and JSON data models. It is used to organize source data into distinct groups for processing within a spreadsheet's manual rule configuration.",
      "description_length": 384,
      "index": 899,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiUrlshortenerV1Model.Url",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a shortened URL with fields for the short ID, long URL, creation time, status, and analytics summary. It provides functions to parse and render URL data to and from JSON, access and modify fields using lenses, and create empty URL instances. Concrete use cases include managing short URL metadata, querying analytics, and serializing URL data for storage or transmission.",
      "description_length": 421,
      "index": 900,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CellFormat",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring cell formatting in Google Sheets API requests. It provides lenses to access and modify individual formatting properties like number format, background color, borders, text alignment, and rotation within a `CellFormat` record. Functions include creating empty formats, rendering formats to JSON, and parsing JSON responses into format objects.",
      "description_length": 409,
      "index": 901,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.UrlChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of URL channels in the AdSense Management API, including parsing and rendering URL channel data to and from JSON. It works with the `UrlChannels.t` type, which contains a list of `UrlChannel.t` items, along with metadata like `etag`, `kind`, and `nextPageToken`. Concrete use cases include processing API responses to list URL channels, paginating through results, and integrating with JSON serialization for HTTP communication.",
      "description_length": 484,
      "index": 902,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Spreadsheet",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for representing Google Sheets spreadsheets. It provides lenses for accessing fields like spreadsheet ID, properties, sheets, named ranges, and data sources, along with functions to serialize and deserialize spreadsheet data to and from JSON. It is used to construct, modify, and interpret spreadsheet data when interacting with the Google Sheets API.",
      "description_length": 412,
      "index": 903,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyResponse",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the structure of a free/busy response from the Calendar API, including time intervals and availability data for calendars and groups. It provides operations to access and modify fields such as `timeMin`, `timeMax`, `calendars`, and `groups`, as well as functions to serialize and deserialize the data to JSON. It is used to process and generate responses when querying calendar availability for scheduling purposes.",
      "description_length": 451,
      "index": 904,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TreemapChartColorScale",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring color scales in treemap charts within Google Sheets, specifying colors for min, mid, and max data values, as well as for missing data. It includes functions to set, retrieve, and manipulate these color values using lenses, and provides serialization and deserialization to and from JSON data models. Use cases include defining conditional color ranges for treemap visualization in spreadsheet reports and ensuring consistent color application across chart renditions.",
      "description_length": 520,
      "index": 905,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Status",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing API status responses, including error codes, developer-facing messages, and structured error details. It provides functions to serialize and deserialize status data to and from JSON, as well as accessors to manipulate individual fields. It is used to handle error reporting and status information when interacting with the Google Drive API.",
      "description_length": 394,
      "index": 906,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartDateTimeRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates date-time grouping rules for chart data in the Google Sheets API. It provides functions to serialize and deserialize the `_type` field, which specifies how date-time values should be grouped (e.g., by year, month, or day). Use this module when configuring chart axes or data aggregation settings that require structured date-time handling.",
      "description_length": 375,
      "index": 907,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UserDeletionRequest",
      "library": "gapi-ocaml",
      "description": "This module handles user deletion requests in the Google Analytics API v3 by defining a core data structure with fields such as deletion time, Firebase project ID, user ID, resource kind, and web property ID. It provides operations to serialize, deserialize, and manipulate these requests, enabling precise control over user data deletion. A child module enhances this functionality by managing request identifiers, supporting JSON conversion and parsing for accurate request tracking. Together, they allow developers to construct, process, and identify deletion requests programmatically within API integrations.",
      "description_length": 613,
      "index": 908,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateEmbeddedObjectBorderRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating the border of an embedded object in a Google Sheets document. It includes fields for specifying the object ID, the new border configuration, and which specific fields to update. Operations include serialization to and from JSON, as well as lenses for accessing and modifying individual fields.",
      "description_length": 343,
      "index": 909,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.Task",
      "library": "gapi-ocaml",
      "description": "This module manages hierarchical task structures with support for serialization, property access, and JSON conversion. It provides core operations for working with task objects that include metadata such as completion status, due dates, and parent-child relationships, while also enabling synchronization with external systems and construction of structured to-do lists. The included submodule handles task links, offering functions to build, parse, and format link data with description, URL, and type fields, making it suitable for modifying task resources with embedded JSON links. Example uses include converting task hierarchies to JSON for API transmission, updating task metadata, and embedding link information in task resources.",
      "description_length": 737,
      "index": 910,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdCode",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling AdSense auto ad code snippets, including standard and AMP variants. It provides lenses for accessing fields like `adCode`, `ampBody`, `ampHead`, and `kind`, along with functions to convert between JSON and the `t` record type. It is used to generate and parse ad code configurations for integration into web pages via the AdSense Management API.",
      "description_length": 422,
      "index": 911,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceGettokenRequest",
      "library": "gapi-ocaml",
      "description": "This module structures requests for generating site verification tokens, specifying the site identifier and verification method like FILE, META, or DNS. It supports creating, parsing, and rendering request data in JSON, facilitating interactions with the Google Site Verification API. The site resource submodule handles site details such as URL or domain name and verification type, with full JSON serialization and deserialization. Together, they enable constructing and processing token requests for domain or site verification workflows.",
      "description_length": 541,
      "index": 912,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About",
      "library": "gapi-ocaml",
      "description": "This module aggregates metadata about a Google Drive account, focusing on storage quotas, file format support, and user-specific settings. It centers on the `About.t` type, which captures quota usage, folder colors, and access permissions, and supports JSON serialization for API interactions. It enables retrieving account details for display, validating format conversions, and configuring policies based on API responses. Submodules handle format mappings, role sets, upload limits, import specifications, API rate limits, and per-service storage breakdowns, providing structured access to Drive's metadata model.",
      "description_length": 616,
      "index": 913,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Interval",
      "library": "gapi-ocaml",
      "description": "This module defines a time interval with optional start and end timestamps, used to specify time ranges in Google Sheets API operations. It provides functions to construct, parse, and serialize intervals for use in API requests and responses. Concrete use cases include filtering spreadsheet updates within a specific time window or scheduling batch operations.",
      "description_length": 361,
      "index": 914,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.IterativeCalculationSettings",
      "library": "gapi-ocaml",
      "description": "This module defines settings for controlling iterative calculations in spreadsheet models, specifically by setting the maximum number of iterations and the convergence threshold for result stability. It operates on a record type containing integer and float fields, with functions to construct, modify, and convert these settings to and from JSON data models. It is used when configuring spreadsheet calculation behavior where iterative evaluation is required, such as financial or engineering models that depend on repeated recalculations until stable results are achieved.",
      "description_length": 574,
      "index": 915,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateSpreadsheetPropertiesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update spreadsheet properties in the Google Sheets API, containing the new properties and specifying which fields to update. It works with `SpreadsheetProperties.t` and string fields, using lenses for accessing and modifying request components. Use this module to construct or manipulate update requests when changing spreadsheet metadata like locale or time zone.",
      "description_length": 397,
      "index": 916,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.Property",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates property records for the Drive API v2, including fields such as `etag`, `key`, `value`, and `visibility`. It provides lenses for accessing and modifying individual fields, functions to convert properties to and from JSON data models, and operations to render or parse property data. Concrete use cases include storing metadata on Drive resources and synchronizing property state with API responses.",
      "description_length": 434,
      "index": 917,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DateTimeRule",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying date-time grouping rules in the Google Sheets API. It includes operations to create, parse, and render date-time rules, primarily working with string-based type fields. It is used to configure how date-time values are grouped in spreadsheet data operations.",
      "description_length": 309,
      "index": 918,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationLoad",
      "library": "gapi-ocaml",
      "description": "This module supports configuring data ingestion jobs into BigQuery tables, handling source specification (URIs, formats like CSV/JSON), schema enforcement, error tolerance, and table mutation controls. It operates on structured configurations that define destination tables, data sources, and parsing rules, with JSON serialization for API integration. It is used",
      "description_length": 363,
      "index": 919,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.VacationSettings",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates vacation settings for Gmail accounts, including auto-reply configuration, response content, and time constraints. It works with a record type containing boolean flags, timestamps, and message content fields, along with JSON serialization and deserialization functions. It is used to configure and retrieve Gmail auto-reply settings programmatically, such as setting up out-of-office responses with specific start and end times and response messages.",
      "description_length": 485,
      "index": 920,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteConditionalFormatRuleRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a conditional format rule in a Google Sheets document. It includes fields for the index of the rule and the sheet ID, along with functions to manipulate and convert the structure to and from JSON. It is used when updating spreadsheet formatting by removing specific conditional rules from a given sheet.",
      "description_length": 353,
      "index": 921,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity",
      "library": "gapi-ocaml",
      "description": "This module processes and manipulates Google+ activity data using structured records that capture actors, objects, and providers, along with metadata such as timestamps and identifiers. It supports field-level updates through lenses and conversion to and from JSON, enabling tasks like modifying activity content, extracting actor details, or handling embedded media. The provider submodule manages service entities with title access and JSON conversion, while the actor submodule structures user identity data with support for display names, verification, and image references. Together, these components facilitate rendering feeds, parsing API responses, and transforming nested activity elements with precise, composable operations.",
      "description_length": 735,
      "index": 922,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Payments",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates payment data structures for the AdSense Management API, specifically handling lists of payment entries associated with an account. It provides operations to access, construct, and convert payment data to and from JSON representations. Concrete use cases include retrieving recent and upcoming payments for an AdSense account and serializing this data for API communication.",
      "description_length": 409,
      "index": 923,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceParametersAddOnParameters",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates conference parameters as key-value pairs, primarily used to configure or extend conference-related data in the Calendar API. It supports operations to serialize and deserialize these parameters to and from JSON data models, enabling integration with API requests and responses. Concrete use cases include adding or modifying metadata for video conferences, such as setting access tokens or custom properties during event creation or updates.",
      "description_length": 477,
      "index": 924,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.CustomChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling lists of AdSense custom channels, including parsing and rendering JSON data models. It provides lenses for accessing fields like `etag`, `items`, `kind`, and `nextPageToken`, and supports creating empty structures or converting to and from JSON representations. Concrete use cases include processing paginated responses from the AdSense API and managing custom channel data in JSON format.",
      "description_length": 433,
      "index": 925,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit",
      "library": "gapi-ocaml",
      "description": "This module organizes ad unit configurations with structured data types and JSON converters, supporting operations like rendering, parsing, and status tracking for AdSense integration. It includes submodules for feed ads, content ads, and mobile ads, each handling specialized settings such as ad frequency, fallback behavior, and device-specific rendering. The API enables precise control over ad display rules, backup options, and API-driven updates, allowing developers to manage ad unit behavior across different content formats. For example, you can adjust feed ad insertion rules, define fallback colors or URLs for missing content ads, or configure mobile ad sizes through a unified interface.",
      "description_length": 700,
      "index": 926,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Change",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling changes in the Google Drive API v3. It includes fields to represent file or shared drive changes, such as file ID, change type, timestamp, and the updated resource state. Functions allow parsing, rendering, and manipulating change data, specifically for tracking modifications to files and shared drives.",
      "description_length": 366,
      "index": 927,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.HistogramChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring histogram charts in the Google Sheets API. It includes fields for specifying data series, bucket sizes, legend position, and outlier handling, along with functions to serialize and deserialize chart configurations to and from JSON. It is used to define how histogram data is visually represented in a Google Sheets chart.",
      "description_length": 386,
      "index": 928,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Metadata",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling metadata in the AdSense Management API. It includes functions to parse and render metadata entries, access and modify the list of items and kind field, and convert between metadata and JSON data models. It is used to retrieve and manage reporting metadata entries, such as dimensions and metrics, in their structured form.",
      "description_length": 384,
      "index": 929,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.TimePeriod",
      "library": "gapi-ocaml",
      "description": "This module defines a time period using start and end dates, providing operations to create, render, and parse time periods. It works with `GapiDate.t` values to represent the inclusive start and exclusive end of a period. Concrete use cases include modeling event durations in a calendar API and serializing time ranges for JSON transmission.",
      "description_length": 343,
      "index": 930,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BubbleChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring bubble charts in Google Sheets API v4. It includes fields for setting bubble positions, sizes, colors, labels, and text formatting, using associated data types like `ChartData`, `Color`, `ColorStyle`, and `TextFormat`. Functions allow creating, rendering, and parsing bubble chart configurations to and from JSON data models.",
      "description_length": 390,
      "index": 931,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.FileList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of files retrieved from the Google Drive API, containing metadata such as the next page token, kind identifier, and a list of individual file entries. It provides operations to access and manipulate these fields, as well as functions to serialize and deserialize the structure to and from JSON data models. It is used when handling responses from file listing operations, particularly when paginating through large result sets or checking the completeness of a search.",
      "description_length": 508,
      "index": 932,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.PeopleFeed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling paginated lists of people from the Google+ API, including metadata like ETag, title, and continuation tokens. It provides operations to access and modify individual fields such as `items`, `nextPageToken`, and `totalItems`, as well as functions to serialize and deserialize the structure to and from JSON. It is used to process and navigate through collections of user profiles returned by API methods like `people.list`.",
      "description_length": 471,
      "index": 933,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ProtectedRange",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing protected ranges in Google Sheets, including setting protection boundaries, descriptions, and access controls. It works with grid ranges, named ranges, and tables to specify which parts of a sheet are protected and who can edit them. Concrete use cases include creating, updating, and parsing protected range configurations in a spreadsheet document.",
      "description_length": 414,
      "index": 934,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Sheet",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation of individual sheets within a Google Sheets document, handling data grids, formatting, and layout. It supports operations for accessing and modifying sheet properties, cell data, merged ranges, conditional formatting, filters, charts, and grouping. Concrete use cases include constructing or parsing sheet data for API requests, updating grid content, applying visual styles, and managing interactive elements like filters and charts.",
      "description_length": 485,
      "index": 935,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AdunitsResource",
      "library": "gapi-ocaml",
      "description": "This module manages ad units within an AdSense account, offering operations to retrieve and list ad units for a given ad client using identifiers and session data, with support for pagination and status filtering. It includes functionality to list custom channels associated with specific ad units, enabling detailed inventory and reporting workflows. Main data types include ad unit identifiers, session tokens, and custom channel relationships, with operations like fetching a specific ad unit's configuration or listing all active ad units. Example uses include retrieving an ad unit's details for monitoring and listing its custom channel assignments for management purposes.",
      "description_length": 679,
      "index": 936,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Page",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and operations for working with individual blog pages in the Blogger API v2, including parsing and rendering page data to and from JSON, accessing and modifying properties like title, content, and author via lenses, and constructing or deconstructing page objects. It integrates with its child modules to handle nested structures such as author information and associated blog data, enabling operations like extracting an author's display name, updating an avatar URL, or retrieving a page's parent blog identifier. Concrete use cases include serializing page data for API requests, modifying page content, and managing relationships between pages and blogs. The module supports both direct manipulation of page properties and structured interactions with nested resources through a unified interface.",
      "description_length": 838,
      "index": 937,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.PermissionList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing lists of permissions associated with Google Drive resources, including fields like ETag, self link, and kind. It provides operations to serialize and deserialize permission lists to and from JSON, and lenses to access and modify individual fields. Concrete use cases include handling batch responses of permissions from the Drive API and constructing permission lists for API requests.",
      "description_length": 435,
      "index": 938,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring waterfall charts in the Google Sheets API. It includes fields for specifying domain data, series values, stacking behavior, and visual styling options like connector lines and data labels. Operations allow creating, rendering, and parsing chart configurations to and from JSON data models for use in spreadsheet chart creation or modification tasks.",
      "description_length": 412,
      "index": 939,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Operation",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling long-running tasks in the Google Drive API v3, including tracking progress, errors, and responses. It works with structured data types like `t`, which contains fields for operation metadata, status, error, and response. Concrete use cases include monitoring the completion of file uploads or folder creation tasks and retrieving their results or errors once finished.",
      "description_length": 411,
      "index": 940,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPipe.OcamlnetPipe",
      "library": "gapi-ocaml",
      "description": "Implements streaming HTTP message bodies using `Netchannels` for input and output. Provides low-level byte and string I/O operations like `read_byte`, `read_line`, `write_string`, and full-content reads via `read_all`. Designed for direct handling of HTTP request/response payloads in client or server contexts.",
      "description_length": 311,
      "index": 941,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SpreadsheetProperties",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring spreadsheet metadata such as title, locale, time zone, and calculation settings. It includes lenses for accessing and modifying individual properties, along with functions to serialize and deserialize the structure to and from JSON. It is used to set or retrieve global spreadsheet settings when interacting with the Google Sheets API.",
      "description_length": 398,
      "index": 942,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateSheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for duplicating a sheet within a Google Sheets document. It includes fields to specify the source sheet ID, insertion index, new sheet ID, and name, along with lenses for accessing and modifying these fields. It supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 387,
      "index": 943,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants for accessing Gmail API features. It includes granular permissions like reading, sending, and managing email, as well as handling labels, drafts, and mailbox settings. These scopes are used to request specific access levels when authenticating with the Gmail API.",
      "description_length": 314,
      "index": 944,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PasteDataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling paste data requests in the Google Sheets API. It includes fields for specifying the insertion coordinate, data content, delimiter, HTML flag, and paste type, along with lenses for accessing and modifying these fields. It supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 409,
      "index": 945,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddProtectedRangeResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a protected range in a Google Sheets document. It includes operations to create an empty response, render it to JSON, parse from JSON, and convert to or from a data model. The primary data type is a record containing a `ProtectedRange.t` value, representing the newly added protected range.",
      "description_length": 344,
      "index": 946,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AutoFillRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring an auto-fill request in a spreadsheet API. It includes fields to specify the range to auto-fill, the source and destination for the fill operation, and a flag to use an alternate data series. Functions allow setting or retrieving these fields, parsing from or rendering to JSON data models, and creating empty or fully populated requests. Use cases include automating data population in spreadsheets by extending existing data patterns across a specified range.",
      "description_length": 526,
      "index": 947,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the request structure for adding a filter view in a Google Sheets document. It includes operations to create an empty request, set or retrieve a filter view, and serialize or deserialize the request to and from JSON data models. It is used when programmatically applying new filters to spreadsheet data through the Google Sheets API.",
      "description_length": 353,
      "index": 948,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.RevisionsResource",
      "library": "gapi-ocaml",
      "description": "This module handles revision management for files in Google Drive, supporting operations to delete, retrieve, list, and update file revisions. It works with revision identifiers and file metadata, specifically targeting binary files like images or videos where version history is available. Use cases include restoring previous versions, inspecting revision details, and managing file history programmatically.",
      "description_length": 410,
      "index": 949,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ColorDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines color representations with background and foreground string fields, using lenses for accessing and modifying individual components. It supports serialization to and from JSON data models, enabling integration with API requests and responses. Concrete use cases include managing calendar event colors and rendering visual themes in a user interface.",
      "description_length": 368,
      "index": 950,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.FindReplaceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a find-and-replace operation in a spreadsheet API. It includes fields tracking the number of cells, formulas, rows, sheets, and total occurrences modified during the operation. The module provides functions to serialize, deserialize, and manipulate this data structure using lenses and JSON conversion.",
      "description_length": 370,
      "index": 951,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource",
      "library": "gapi-ocaml",
      "description": "This module manages AdSense account information, enabling retrieval of individual accounts or collections, and integrates with submodules for comprehensive reporting, inventory management, and configuration tasks. It supports operations like fetching account details by ID or listing all accessible accounts, while child modules handle URL channels, ad clients, alerts, performance reports, ad units, saved ad styles, custom channels, and payment data. For example, you can generate performance reports with custom filters, retrieve ad code for specific clients, or list payments for an account. The module works with core types like `Account.t`, `Accounts.t`, and session data, and extends functionality through submodules that manage ad inventory, alerts, and saved configurations.",
      "description_length": 783,
      "index": 952,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceChartProperties",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling chart properties tied to a data source in Google Sheets API v4. It includes functions to create, parse, and render chart property records with fields like data source ID and execution status. Use cases include configuring and serializing chart metadata for API requests or storage.",
      "description_length": 345,
      "index": 953,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Label",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates label data structures used in the Google Drive API v3, including operations to construct, serialize, and deserialize label objects. It works with a record type representing a label, containing fields such as `id`, `revisionId`, `kind`, and a list of key-value fields. Concrete use cases include parsing label responses from API calls, building label objects for request payloads, and accessing or modifying individual label properties using lenses.",
      "description_length": 484,
      "index": 954,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.AnalyticsSnapshot",
      "library": "gapi-ocaml",
      "description": "This module represents analytics data for a shortened URL, capturing click statistics by browser, country, platform, and referrer. It provides lenses to access fields like click counts and top referral sources, along with serialization and deserialization functions for JSON data exchange. Use cases include tracking user engagement, analyzing geographic and device-based traffic patterns, and reporting on short URL performance.",
      "description_length": 429,
      "index": 955,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileFilterLinks",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of Google Analytics profile filter links. It provides lenses for accessing fields like items, pagination parameters, and links, along with functions to serialize and deserialize to and from JSON data models. Use this module when retrieving or manipulating lists of profile filter links from the Google Analytics API, particularly for paginated results.",
      "description_length": 428,
      "index": 956,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.UserDeletionResource",
      "library": "gapi-ocaml",
      "description": "This module manages user deletion requests for the Google Analytics API. It centers around the `UserDeletionRequest.t` type and the `upsert` operation, which either inserts or updates a deletion request using provided session data. Developers can use it to directly initiate or modify user data removal processes within Google Analytics. For example, you can create a `UserDeletionRequest.t` value representing a user's deletion intent and call `upsert` to apply it to the system.",
      "description_length": 480,
      "index": 957,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics account reference, with fields for the account's link, ID, kind, and name. It provides functions to create, parse, and render account references from JSON data models. Use cases include handling account metadata returned by the Google Analytics API, such as listing or selecting specific accounts by ID or name.",
      "description_length": 380,
      "index": 958,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOauth2V2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines specific OAuth2 scope strings required to request end-user permissions for accessing Google services. It includes scopes for accessing user profile, email, and social connections. These values are used directly when obtaining authorization tokens for APIs like Google+ and user authentication.",
      "description_length": 313,
      "index": 959,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource",
      "library": "gapi-ocaml",
      "description": "This module enables publishers to retrieve and manage AdSense account details, supporting operations like fetching individual accounts by ID or listing all accessible accounts. It integrates with submodules that handle custom channels, ad clients, ad units, URL channels, and reporting, all centered around account identifiers and session state. Publishers can generate revenue reports, manage ad inventory across clients and units, and programmatically access channel configurations for targeted reporting and optimization. Specific tasks include fetching custom channel data for a given ad client, listing active ad units with pagination, and exporting performance metrics filtered by dimensions or date ranges.",
      "description_length": 713,
      "index": 960,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.AppList",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling a list of Google Drive apps, including parsing and rendering app data to and from JSON. It provides accessors for retrieving app IDs, metadata, and individual app entries. Concrete use cases include managing default app configurations and serializing app lists for API requests or storage.",
      "description_length": 351,
      "index": 961,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.InterpolationPoint",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates interpolation points used in conditional formatting rules for Google Sheets. It supports setting color, color style, value type, and value through lenses, and handles JSON serialization/deserialization for API communication. Concrete use cases include creating gradient color scales based on cell values or defining thresholds using formulas.",
      "description_length": 378,
      "index": 962,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeveloperMetadataLookup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for filtering and querying developer metadata in Google Sheets. It supports specifying location types, matching strategies, and key-value pairs to narrow down metadata entries. Operations include creating empty lookups, rendering to JSON, and parsing from JSON for API interactions.",
      "description_length": 319,
      "index": 963,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Revision",
      "library": "gapi-ocaml",
      "description": "This module models file revisions with metadata like download URLs, timestamps, and access controls, offering field-level accessors and mutators for structured manipulation. It bridges JSON representations with OCaml records to support API data exchange, enabling use cases like version tracking, collaborative editing history, and cloud storage synchronization workflows.",
      "description_length": 372,
      "index": 964,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ChildList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of child references in the Drive API, providing access to child metadata through fields like `items`, `nextPageToken`, and `selfLink`. It works with `ChildReference.t` lists and handles JSON serialization and deserialization via `render`, `parse`, `to_data_model`, and `of_data_model`. Concrete use cases include retrieving and navigating folders' contents in Google Drive, and managing child resource listings with pagination.",
      "description_length": 467,
      "index": 965,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartDomain",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart domain data for the Google Sheets API, specifically handling the domain values and their display order. It works with `ChartData.t` for domain data and `bool` for reversal flag, using lenses for access and modification. Concrete use cases include setting date ranges for time-series charts and toggling axis direction for visual customization.",
      "description_length": 385,
      "index": 966,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.App",
      "library": "gapi-ocaml",
      "description": "This module represents Google Drive applications with a focus on authorization, file type support, and integration URLs, using a record type with lenses for precise field manipulation. It supports JSON serialization and deserialization, enabling seamless API interaction for tasks like querying app capabilities or managing metadata. The icon submodule extends this functionality by handling icon metadata, including category, URL, and size, allowing full representation of application visuals in Drive interfaces. Together, they enable workflows such as validating app permissions, customizing icons based on file types, and dynamically configuring app behavior through API responses.",
      "description_length": 685,
      "index": 967,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.FilterCriteria",
      "library": "gapi-ocaml",
      "description": "This module defines filter criteria for Google Sheets cells, including conditions, hidden values, and color-based visibility rules. It provides lenses to access and modify fields like `condition`, `hiddenValues`, and color styles, along with serialization and deserialization functions for JSON data models. It is used to configure and manipulate cell filtering behavior in spreadsheets based on values and formatting.",
      "description_length": 418,
      "index": 968,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartSeries",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart series configurations for visualizing data in Google Sheets, supporting properties like series type, axis alignment, color, line style, and data labels. It works with structured data types such as `ChartData`, `LineStyle`, `Color`, `ColorStyle`, and `PointStyle`, along with JSON data models for serialization and deserialization. Concrete use cases include configuring line, area, or column chart series with custom styling and data display options for integration with the Google Sheets API.",
      "description_length": 535,
      "index": 969,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ListForwardingAddressesResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response from listing forwarding addresses in the Gmail API. It provides operations to access, serialize, and deserialize a list of forwarding addresses. Use this module to retrieve and manipulate forwarding address data when interacting with Gmail's forwarding settings.",
      "description_length": 296,
      "index": 970,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddConditionalFormatRuleRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a conditional format rule to a Google Sheets document. It includes functions to create, manipulate, and serialize a request containing a conditional format rule and its insertion index. The module works with JSON data models and provides lenses for accessing and modifying the rule and index fields.",
      "description_length": 359,
      "index": 971,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource",
      "library": "gapi-ocaml",
      "description": "This module handles core user interactions with Gmail, including retrieving mailbox metadata, managing notification settings, and controlling mailbox activity through session-based operations. It coordinates with submodules for managing drafts, messages, labels, history, settings, and threads, enabling comprehensive automation of email workflows. Key data types include user identifiers, session tokens, and Gmail API structures for messages, labels, and threads, with operations to send drafts, apply labels, track mailbox changes, and configure user settings like auto-forwarding and vacation responses. Examples include setting up push notifications for mailbox updates, organizing messages with labels, retrieving thread histories for audit trails, and programmatically sending or editing drafts with specific formatting options.",
      "description_length": 835,
      "index": 972,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.SettingsResource",
      "library": "gapi-ocaml",
      "description": "This module handles user settings in the Calendar API, providing operations to retrieve individual settings, list all settings for a user, and watch for changes. It works with `Setting.t` and `Settings.t` data structures, representing single and multiple user settings. Use cases include fetching calendar preferences, monitoring updates, and managing user-specific calendar configurations.",
      "description_length": 390,
      "index": 973,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.QueryRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring and handling BigQuery API requests. It includes fields like `query`, `defaultDataset`, and `timeoutMs`, and provides functions to serialize, deserialize, and manipulate query parameters. It is used to construct and process SQL-like queries against BigQuery datasets with options for caching, result limits, and dry runs.",
      "description_length": 385,
      "index": 974,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module handles responses from updating developer metadata in Google Sheets API v4. It provides operations to parse, render, and convert metadata responses to and from JSON data models. Concrete use cases include managing custom metadata after API updates and ensuring structured access to modified metadata entries.",
      "description_length": 320,
      "index": 975,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.GridRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a rectangular range of cells in a Google Sheet, with operations to set and retrieve the sheet ID, row and column indices. It supports parsing and rendering grid ranges from and to JSON data models, enabling integration with the Google Sheets API. Concrete use cases include specifying cell ranges for batch updates, formatting, or data retrieval operations in a spreadsheet.",
      "description_length": 424,
      "index": 976,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.UrlChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of URL channels in the AdSense API, including parsing and rendering JSON data models. It provides lenses for accessing fields like `etag`, `items`, `kind`, and `nextPageToken`, and supports creating and manipulating URL channel lists. Concrete use cases include processing paginated responses from the AdSense API and extracting or updating individual URL channel entries.",
      "description_length": 428,
      "index": 977,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.FilesResource",
      "library": "gapi-ocaml",
      "description": "This module manages files in Google Drive, offering operations to create, copy, update, delete, and list files, along with export capabilities, label modifications, and change subscriptions. It works with file metadata, label data, and media resources, allowing tasks like uploading files with custom metadata, copying files with adjusted properties, and exporting Google Docs to specific formats. The enumerated type for file corpora enables filtering queries by ownership or domain sharing, enhancing search precision. Specific use cases include managing file visibility, querying shared files, and synchronizing content changes across users.",
      "description_length": 644,
      "index": 978,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Borders",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates cell border configurations for the Google Sheets API. It provides accessors for top, bottom, left, and right borders using lenses, along with functions to convert border data to and from JSON representations. It is used to apply or modify border styles in spreadsheet cells when interacting with the Sheets API.",
      "description_length": 347,
      "index": 979,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.KeyValueFormat",
      "library": "gapi-ocaml",
      "description": "This module defines text formatting and positioning settings for key-value pairs in Google Sheets API requests. It provides constructors, lenses for accessing `textFormat` and `position`, and functions to serialize/deserialize to and from JSON data models. It is used when configuring how key-value data is displayed in spreadsheet cells, such as setting font styles or alignment.",
      "description_length": 380,
      "index": 980,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddBandingRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a banded range to a Google Sheet via the API. It includes functions to create, serialize, and deserialize the request payload, centered around the `bandedRange` field. Use this module when configuring conditional formatting bands in a spreadsheet through the `AddBandingRequest` API endpoint.",
      "description_length": 352,
      "index": 981,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Service.ApisResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to list available APIs and retrieve RESTful descriptions for specific API versions. It works with data structures like `DirectoryList` and `RestDescription`, which contain metadata and interface definitions for Google APIs. Use it to dynamically discover and interact with Google services, such as fetching details about the Drive API or interacting with the Sheets API.",
      "description_length": 402,
      "index": 982,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateSheetPropertiesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating sheet properties in the Google Sheets API, containing the target properties and the specific fields to update. It provides functions to manipulate and serialize the update request, including lenses for accessing `properties` and `fields`, and utilities for parsing and rendering JSON data. Use cases include constructing and modifying requests to update sheet metadata such as title, grid settings, or tab color via the Sheets API.",
      "description_length": 481,
      "index": 983,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedAdStyles",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates a list of saved ad styles, including metadata such as ETag, kind, and pagination tokens. It provides functions to convert between JSON data models and internal representations, and access individual fields via lenses. Use this module to process and manage collections of saved ad styles retrieved from the AdSense API, such as when listing or paginating through existing ad styles.",
      "description_length": 417,
      "index": 984,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for querying free/busy calendar information, including time ranges, calendar identifiers, and expansion limits. It provides functions to construct, modify, and serialize queries using lenses and JSON data models. Concrete use cases include checking user availability across multiple calendars and scheduling meetings based on time slot availability.",
      "description_length": 386,
      "index": 985,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BigQueryTableSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying BigQuery tables within the Google Sheets API, including project, dataset, and table identifiers. It provides functions to serialize and deserialize these specifications to and from JSON, enabling integration with API requests and responses. Use cases include configuring data sources for Sheets that pull from BigQuery tables or managing external data connections programmatically.",
      "description_length": 433,
      "index": 986,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter",
      "library": "gapi-ocaml",
      "description": "This module enables the construction and manipulation of data transformation filters for analytics pipelines, supporting text normalization, pattern replacement, and advanced data manipulation. It provides core operations for working with structured filter configurations, including bidirectional conversion to JSON, and defines key data types such as transformation rules, field specifiers, and parameter objects. The child modules specialize this functionality for specific use cases: search-and-replace filters modify dimension values in reports, advanced filters combine fields with custom logic, and transformation filters apply lowercase or uppercase formatting to specified dimensions. Additionally, the module supports linking to external resources through structured parent links, enabling integration with account management workflows in analytics APIs.",
      "description_length": 863,
      "index": 987,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.History",
      "library": "gapi-ocaml",
      "description": "This module defines operations for parsing, rendering, and manipulating Gmail API history records, including tracking message and label changes. It works with structured data types like `History.t`, `Message.t`, and various history-specific change types such as `HistoryMessageAdded` and `HistoryLabelRemoved`. Concrete use cases include synchronizing mailbox state changes, processing added or removed labels, and handling messages added to or deleted from a mailbox.",
      "description_length": 468,
      "index": 988,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.DatasetReference",
      "library": "gapi-ocaml",
      "description": "This module defines a dataset reference structure with `datasetId` and `projectId` fields, used to uniquely identify datasets in the BigQuery API. It provides functions to create an empty dataset reference, convert it to and from JSON data models, and render or parse its fields. Use cases include referencing datasets in API requests and managing dataset identifiers across projects.",
      "description_length": 384,
      "index": 989,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating a data source in the Google Sheets API, containing the target data source and a list of fields to update. It provides functions to manipulate and serialize the structure, including lenses for accessing `dataSource` and `fields`, and conversion routines to and from JSON data models. It is used when issuing requests to update data source configurations in a spreadsheet.",
      "description_length": 420,
      "index": 990,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.AccessProposalRoleAndView",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an access proposal's role and view in the Google Drive API v3. It includes operations to create, parse, and render these proposals as JSON data models. The structure is used to manage access control requests, specifically handling roles like `writer`, `commenter`, and `reader`, along with view states such as `published`.",
      "description_length": 372,
      "index": 991,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.StartPageToken",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a starting page token for paginating through Google Drive API change lists. It includes functions to access and modify the `startPageToken` and `kind` fields, serialize and deserialize instances to and from JSON data models, and create empty or populated instances. It is used specifically to manage pagination state when retrieving changes from Google Drive, ensuring consistent and resumable listings.",
      "description_length": 453,
      "index": 992,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.MergeCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying cell merge operations in Google Sheets API requests. It includes functions to set or retrieve the cell range and merge type, along with serialization and deserialization utilities for JSON-based API communication. It is used when sending requests to merge cells in a spreadsheet via the Sheets API.",
      "description_length": 350,
      "index": 993,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.ReportsResource",
      "library": "gapi-ocaml",
      "description": "This module generates AdSense performance reports by specifying parameters such as date range, metrics, dimensions, and filters, and returns structured report data along with an updated session. It supports direct report generation from input parameters and integrates with submodules to retrieve or list saved reports using their IDs. The primary data types include `AdsenseReportsGenerateResponse` for output and `SavedReports` for stored configurations, enabling operations like dynamic report creation and enumeration of existing saved reports. You can use it to fetch performance data in JSON or CSV format, or generate new reports based on pre-saved configurations.",
      "description_length": 671,
      "index": 994,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLinks",
      "library": "gapi-ocaml",
      "description": "This module handles collections of entity user links in the Google Analytics API v3 data model. It provides accessors for properties like the list of links, pagination parameters, and navigation URLs. Use it to process or construct responses containing multiple entity user links with metadata.",
      "description_length": 294,
      "index": 995,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.EmbeddedObjectBorder",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring borders of embedded objects in Google Sheets. It provides functions to set and retrieve border color using either a direct color value or a color style, with support for JSON serialization and deserialization. Use this module when creating or modifying chart or object borders in a spreadsheet, ensuring correct color representation in API requests and responses.",
      "description_length": 428,
      "index": 996,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DimensionGroup",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing dimension groups in a Google Sheets document, including setting and retrieving their range, depth, and collapsed state. It works with JSON data models and provides functions to serialize, deserialize, and manipulate dimension group properties. Concrete use cases include configuring row or column grouping behavior in spreadsheet automation tasks, such as collapsing sections of a report or tracking group hierarchy during data import/export.",
      "description_length": 486,
      "index": 997,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiSheetsV4Model.BasicSeriesDataPointStyleOverride",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates style overrides for individual data points in a chart series, specifically supporting color, color style, and point style customizations. It works with the `BasicSeriesDataPointStyleOverride.t` record type, which includes an index and optional styling fields that take precedence over series defaults. Use this module to apply per-data-point visual adjustments in Google Sheets charts, such as highlighting specific points or changing their appearance based on conditions.",
      "description_length": 508,
      "index": 998,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a batch update operation in the Google Sheets API. It includes fields for tracking the number of updated rows, columns, cells, and sheets, along with individual responses for each updated range. The module provides functions to parse, render, and convert the structure to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 420,
      "index": 999,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdClient",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdSense ad client data, including parsing and rendering ad client records to and from JSON data models. It provides lenses for accessing and modifying individual fields such as `arcOptIn`, `id`, `kind`, `productCode`, and `supportsReporting`. Use this module to integrate AdSense ad client information into API requests or to process client data returned from reporting endpoints.",
      "description_length": 424,
      "index": 1000,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Events",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and transformations for calendar events collections, including parsing and rendering JSON data models. It defines fields like event lists, pagination tokens, and calendar metadata, along with lenses for accessing and modifying individual properties. It is used to process and serialize event data retrieved from or sent to the Calendar API.",
      "description_length": 376,
      "index": 1001,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ConditionalFormatRule",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for conditional formatting rules in a Google Sheets document. It includes fields for specifying cell ranges, boolean-based formatting rules, and gradient-based formatting rules, all operating on grid ranges within the same sheet. Functions allow creating empty rules, rendering rules to JSON data models, and parsing or converting JSON data back into rule structures.",
      "description_length": 416,
      "index": 1002,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiClientLogin.Error",
      "library": "gapi-ocaml",
      "description": "This module defines error types for handling authentication failures in client login workflows. It includes specific errors like `BadAuthentication`, `CaptchaRequired`, and `AccountDisabled`, along with a `GenericError` for unknown cases. Functions convert error values to and from string representations, enabling precise error handling and user feedback during login attempts.",
      "description_length": 378,
      "index": 1003,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListLabelsResponse",
      "library": "gapi-ocaml",
      "description": "Handles parsing and rendering of Gmail API v1 label lists in JSON format. Works with `t` records containing label lists and `json_data_model` structures. Used to serialize and deserialize label collections during API interactions.",
      "description_length": 230,
      "index": 1004,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableRow",
      "library": "gapi-ocaml",
      "description": "This module represents a single row of query results in the BigQuery API, composed of a list of table cells. It provides functions to construct an empty row, render a row into JSON data, parse JSON into a row structure, and convert between row and JSON data models. It is used to process and manipulate individual rows returned from BigQuery queries.",
      "description_length": 350,
      "index": 1005,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.LineStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for line style configurations in the Google Sheets API. It provides functions to create, manipulate, and serialize line style data, which includes properties such as line width and dash type. Use this module when setting or retrieving line formatting options for cells or charts in a spreadsheet.",
      "description_length": 345,
      "index": 1006,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllRequest",
      "library": "gapi-ocaml",
      "description": "This module structures requests to insert rows into a BigQuery table, supporting error handling options like ignoring unknown values or skipping invalid rows, and allows template-based table insertion. It provides functions to convert the request structure to and from JSON for API interaction, and includes a submodule for managing individual rows with accessors for `insertId` and `json` fields. The row submodule enables constructing, modifying, and parsing row data for batch insertion, allowing precise control over both per-row and overall request behavior. Example usage includes building a request with custom error handling and dynamically setting row identifiers and JSON payloads for insertion into a specified table.",
      "description_length": 728,
      "index": 1007,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedAdStyle",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing saved ad styles in the AdSense API, including parsing and rendering JSON data models, accessing fields like `id`, `name`, and `adStyle`, and constructing or modifying saved ad style records. It works with the `SavedAdStyle.t` type, which encapsulates ad style metadata and configuration. Concrete use cases include retrieving saved ad styles from JSON responses, updating their names, or extracting ad style details for rendering in an application.",
      "description_length": 492,
      "index": 1008,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CancelDataSourceRefreshRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for canceling data source refresh operations in a Google Sheets document. It includes fields to specify individual data source object references, a specific data source ID, or a flag to cancel all refreshes. The module provides functions to manipulate and serialize these cancellation requests for use with the Sheets API.",
      "description_length": 359,
      "index": 1009,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceGettokenResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for obtaining a site verification token from the Google Site Verification API. It includes fields for the verification method (`_method`) and the token value (`token`), along with lenses for accessing and modifying these fields. The module supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 409,
      "index": 1010,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.MonadCombinators",
      "library": "gapi-ocaml",
      "description": "This module provides monadic operations for composing and manipulating computations within a monadic context. It includes functions like `join`, `liftM`, `mapM`, and `foldM`, which operate on monadic values and lists. These functions enable chaining, transforming, and sequencing monadic actions, particularly useful for handling effectful computations over lists.",
      "description_length": 364,
      "index": 1011,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroup",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates pivot group configurations for Google Sheets API v4. It includes fields to specify source columns, sorting, grouping rules, and display options like labels and totals. Use cases include building and modifying pivot tables with custom grouping behavior and rendering or parsing them to/from JSON for API interaction.",
      "description_length": 351,
      "index": 1012,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service.UserinfoResource",
      "library": "gapi-ocaml",
      "description": "This module retrieves user identity data from Google's OAuth2 API, using session information to authenticate and return details like email and unique identifiers. It centers around the `get` function, which produces a `GapiOauth2V2Model.Userinfoplus.t` value and an updated `GapiConversation.Session.t`. Use it to fetch authenticated user profiles for personalization or account management, such as identifying a user after OAuth login to tailor application content. The module integrates directly with sessions and user data types to streamline access to Google's user information endpoints.",
      "description_length": 592,
      "index": 1013,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.SearchDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for searching developer metadata in Google Sheets, using a list of data filters to specify matching criteria. It provides operations to serialize and deserialize the request to and from JSON data models, ensuring compatibility with the API's wire format. Use this module when constructing or processing search queries for developer metadata entries based on specific filtering conditions.",
      "description_length": 428,
      "index": 1014,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdsenseReportsGenerateResponse",
      "library": "gapi-ocaml",
      "description": "This module encapsulates the structured response of an AdSense report, including rows, totals, averages, and metadata like date ranges. It handles nested lists for row data, typed fields such as `int64` for counts, and string-based metrics, supporting operations like JSON serialization and metric extraction per row. The header submodule complements this by modeling report metadata, offering access to fields like `currency`, `name`, and `_type` for constructing or parsing report headers. Together, they enable complete handling of AdSense report generation responses, from parsing raw data to building custom report outputs with typed and structured access.",
      "description_length": 661,
      "index": 1015,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartCustomSubtotal",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing custom subtotals in a waterfall chart series. It includes fields for specifying the index of a data point, a label for the subtotal, and whether the data point itself is the subtotal. These values are used to configure how subtotals are displayed or calculated in a Google Sheets waterfall chart.",
      "description_length": 350,
      "index": 1016,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.WatchResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Gmail API watch responses. It provides functions to parse and render watch response data, access and modify fields like `expiration` and `historyId`, and convert between the response type and JSON data models. It is used when managing push notifications for mailbox updates, allowing clients to track when to renew watches and process historical changes.",
      "description_length": 416,
      "index": 1017,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.DatasetList",
      "library": "gapi-ocaml",
      "description": "This module organizes and processes lists of BigQuery datasets, handling metadata such as etag, kind, and pagination tokens while supporting operations like extraction, conversion, and JSON serialization. It provides direct access to datasets in a list response, allowing traversal, filtering, and pagination control, and integrates lenses for manipulating individual dataset entries with fields like reference, ID, and friendly name. For example, it enables iterating through paginated dataset lists, extracting specific dataset references, or converting raw API responses into structured data. Submodule functionality seamlessly extends these operations to individual dataset entries within the list.",
      "description_length": 702,
      "index": 1018,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TrimWhitespaceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to trim whitespace from cells in a specified grid range within a Google Sheets document. It provides functions to create, parse, and render a `TrimWhitespaceRequest` record that includes the target cell range. The module is used when interacting with the Google Sheets API to modify spreadsheet content formatting programmatically.",
      "description_length": 361,
      "index": 1019,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataFilter",
      "library": "gapi-ocaml",
      "description": "This module defines a data filter for selecting specific data ranges in Google Sheets. It supports filtering by A1 range notation, grid ranges, or developer metadata lookup. Operations include creating empty filters, parsing and rendering JSON data models, and accessing or modifying filter components like A1 range or grid range. Use cases include applying filters to spreadsheet data for API requests or processing structured data from Sheets.",
      "description_length": 445,
      "index": 1020,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSource",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing data sources within a Google Sheets spreadsheet. It includes fields for identifying the data source, specifying its configuration, defining calculated columns, and associating it with a specific sheet. Functions allow creating, rendering, parsing, and converting data source instances to and from JSON format for integration with the API.",
      "description_length": 400,
      "index": 1021,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants used for authorizing access to Google Sheets and Drive resources. It includes specific scopes for full or read-only access to spreadsheets and Drive files, enabling precise control over application permissions. These values are used directly when configuring OAuth credentials for interacting with the Google Sheets API.",
      "description_length": 371,
      "index": 1022,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshDataSourceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for a data source refresh operation in the Google Sheets API. It includes a list of execution statuses for the data source objects involved, specifically capturing failures if a full refresh is requested. The module provides functions to parse, render, and convert between JSON data models and the response type, enabling integration with API requests and responses.",
      "description_length": 409,
      "index": 1023,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateSlicerSpecRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the request structure for updating a slicer specification in a Google Sheets document. It includes operations to set or modify the slicer ID, update its specification, and define which fields to update using a field mask. The module works directly with JSON data models and provides functions to serialize and deserialize request data for API interactions.",
      "description_length": 376,
      "index": 1024,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics4",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for handling job statistics related to file extraction in BigQuery. It includes functions to parse and render file counts per destination URI, and provides lenses for accessing and modifying the data. Concrete use cases include tracking output file distribution during BigQuery extract jobs and serializing job statistics for logging or further processing.",
      "description_length": 410,
      "index": 1025,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Permission",
      "library": "gapi-ocaml",
      "description": "This module manages access control configurations for cloud storage systems, handling permission records with fields like type, role, and scope, and supporting bidirectional JSON conversion for API integration. It includes nested structures for team drive permissions and inheritance details, enabling management of hierarchical data sharing and legacy system migration. The Team Drives submodule handles Google Drive API v3-specific permission details, such as `teamDrivePermissionType` and `inheritedFrom`, with lenses for manipulation and serialization. The Drive API submodule extends this with permission type, role, and inheritance source handling, supporting use cases like access role management and parsing API permission responses.",
      "description_length": 741,
      "index": 1026,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceColumnReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for referencing columns in a data source within the Google Sheets API. It includes operations to create, serialize, and deserialize column references, primarily working with JSON data models. Use cases include managing column mappings when integrating external data sources with Google Sheets.",
      "description_length": 330,
      "index": 1027,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.CustomchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module manages custom channels and their associated ad units for AdSense ad clients, providing operations to retrieve channel details and list channels for reporting or configuration. It works with identifiers like ad client IDs and custom channel IDs, supporting actions such as fetching a specific channel or enumerating all channels. The child module extends this functionality by allowing retrieval of ad units within a custom channel, enabling granular inventory management. For example, you can list all custom channels for an ad client, then fetch the ad units associated with a specific channel for detailed reporting.",
      "description_length": 631,
      "index": 1028,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Segments",
      "library": "gapi-ocaml",
      "description": "This module handles data structures for managing collections of Google Analytics segments, including pagination metadata and links. It provides lenses for accessing and modifying individual fields like `items`, `totalResults`, and `nextLink`, along with functions to serialize and deserialize segment collections to and from JSON. It is used to process and navigate paginated responses when querying available segments in the Google Analytics API.",
      "description_length": 447,
      "index": 1029,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.FreebusyResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `query` function to retrieve free/busy information for a set of calendars by sending a `FreeBusyRequest` and receiving a `FreeBusyResponse`. It works with calendar identifiers and time ranges to determine availability across one or more calendars. Use this module to check when users or resources are available for scheduling meetings or events.",
      "description_length": 370,
      "index": 1030,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Column",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with Google Analytics API column data, including parsing and rendering column attributes, IDs, and resource kinds. It provides lenses for accessing and modifying fields within a column record and converts between column data and JSON models. Use this module to manipulate Analytics column metadata when interacting with API responses or constructing requests.",
      "description_length": 402,
      "index": 1031,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ChildReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child reference in the Drive API v2, with fields for links and identifiers. It provides operations to access and modify individual fields using lenses, and functions to convert between JSON data models and the internal representation. Concrete use cases include managing hierarchical relationships between files and folders in Google Drive integrations.",
      "description_length": 405,
      "index": 1032,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Blog",
      "library": "gapi-ocaml",
      "description": "This module structures and manipulates blog resources in the Blogger API v2, offering direct access to core fields like ID, name, description, locale, timestamps, and URLs through lenses and JSON serialization. Its submodules handle blog pages, locale settings, and post collections, each providing typed accessors, metadata like total item counts, and JSON conversion for structured API interactions. For example, you can parse a blog's metadata from a JSON API response, update its description or locale, and serialize the changes back into a request payload. Operations on submodules allow navigating paginated page or post lists and configuring regional settings programmatically.",
      "description_length": 684,
      "index": 1033,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service",
      "library": "gapi-ocaml",
      "description": "This module provides structured access to Google Sheets operations, enabling creation, querying, and batch updates of spreadsheets with support for cell formatting, metadata, and cross-sheet data migration. Key data types include spreadsheet IDs, batch update requests, and range filters, while operations allow for atomic edits, formatted value manipulation, and metadata-driven navigation. Authentication scopes for Sheets and Drive resources are defined to control access during API interactions. Example uses include logging localized data with timestamps, copying sheets between documents, and searching metadata to locate structured annotations.",
      "description_length": 651,
      "index": 1034,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Service",
      "library": "gapi-ocaml",
      "description": "This module provides a complete interface for managing and analyzing shortened URLs through the Google URL Shortener API. It supports creating, retrieving, and deleting short URLs, along with detailed analytics projections for tracking clicks, referrers, and geographic data. Authentication is handled through a defined OAuth2 scope, enabling secure API access for URL management tasks. For example, you can generate a new short URL, expand an existing one, or query detailed usage statistics filtered by specific metrics.",
      "description_length": 522,
      "index": 1035,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiService",
      "library": "gapi-ocaml",
      "description": "This module provides HTTP-based service interactions with support for REST operations like GET, POST, PUT, PATCH, DELETE, and HEAD. It handles requests with optional query parameters, media uploads/downloads, custom headers, and ETag-based caching, working with data types such as `GapiCore.PostData`, `GapiMediaResource`, and `GapiConversation.Session`. The child module standardizes query parameters for data format, field selection, and authentication, offering functions to convert and merge parameter sets into key-value lists. Together, they enable structured communication with web services, supporting use cases like authenticated API calls, media streaming, and conditional resource management.",
      "description_length": 703,
      "index": 1036,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and operations for interacting with the Google Site Verification API, enabling the management of verified web resources, generation of verification tokens, and handling of API responses. It includes types for representing individual site resources with identifiers and metadata, lists of resources, and token request and response objects with methods like FILE, META, or DNS. You can use it to parse and construct JSON payloads for verifying ownership of websites or domains, or to retrieve and manipulate verification tokens programmatically. For example, you can serialize a list of verified sites into JSON to send to the API, or extract a DNS token from a response and apply it to a domain configuration.",
      "description_length": 745,
      "index": 1037,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiServiceAccountCredentials",
      "library": "gapi-ocaml",
      "description": "This module handles service account credentials for Google API authentication. It provides lenses to access fields like client email, private key, and URIs, and supports JSON serialization and deserialization. It is used to load and manage credentials from JSON files or strings for making authenticated API requests.",
      "description_length": 317,
      "index": 1038,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiJson",
      "library": "gapi-ocaml",
      "description": "This module provides tools for building, parsing, and transforming JSON data models with rich metadata, centered around the `json_data_model` type that represents structured JSON values. It supports conversions between JSON and OCaml primitives like strings and integers, and enables programmatic manipulation of JSON structures through higher-order functions and dictionary-style access. The `StringDictionary` submodule implements string-keyed association lists, allowing JSON objects to be parsed into or rendered from dictionaries, particularly useful for handling API responses or constructing JSON from string-based data. Together, the module and its submodule enable tasks such as transforming JSON into domain-specific OCaml types, building JSON objects from key-value pairs, and traversing nested JSON structures.",
      "description_length": 822,
      "index": 1039,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse",
      "library": "gapi-ocaml",
      "description": "This module represents authentication response payloads from various authorization flows, such as ClientLogin, OAuth1, AuthSub, and OAuth2, using a polymorphic variant type `t`. It provides lenses to access and modify authentication data like access tokens, request tokens, authorization codes, and token information, enabling tasks like parsing and extracting token values or status information from authentication responses. The AuthSub submodule handles parsing token metadata such as target, scope, and secure flag, while the ClientLogin submodule manages tokens and CAPTCHA challenges. The OAuth1 submodule gives structured access to request and access tokens with their secrets and verification data, and the OAuth2 submodule handles access tokens along with expiration and refresh data.",
      "description_length": 793,
      "index": 1040,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Model",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and operations for interacting with the Google Tasks API v1, handling task collections, individual tasks, task lists, and hierarchical task relationships. It centers around core types like `t` for task collections and task lists, supporting JSON serialization, field access via lenses, and metadata management including ETag, kind, and pagination tokens. Key operations include parsing and rendering JSON data, navigating paginated results with `nextPageToken`, modifying task properties like completion status and due dates, and embedding link information in tasks. Example uses include constructing task lists from API responses, serializing task hierarchies for transmission, and updating task metadata with embedded links.",
      "description_length": 763,
      "index": 1041,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiError",
      "library": "gapi-ocaml",
      "description": "This module provides a structured way to represent and manipulate server errors, both individual and grouped, with detailed metadata. The core data types include a record for single errors with fields like domain, reason, message, and location, and a container type holding a list of such errors along with a top-level code and message. Lenses allow precise access and modification of error fields, while JSON serialization functions enable safe conversion to and from API responses. For example, you can parse a failed API response into a typed error structure, inspect specific error reasons, or construct error payloads for validation failures.",
      "description_length": 647,
      "index": 1042,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiFun",
      "library": "gapi-ocaml",
      "description": "The module implements an identity function that returns its input unchanged. It operates on values of any type. This function is useful for scenarios like mapping operations where a default transformation is needed or for delaying evaluation in higher-order functions.",
      "description_length": 268,
      "index": 1043,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with the Blogger API v2, enabling structured handling of blogs, posts, comments, pages, and user data. It defines core types such as `Post.t`, `Comment.t`, `Blog.t`, `Page.t`, and `User.t`, each supporting JSON serialization, deserialization, and precise field manipulation via lenses. These structures facilitate operations like retrieving and updating blog metadata, navigating paginated post and comment lists, building comment threads with parent references, and managing user profiles with locale and blog associations. Specific use cases include processing API responses into typed data, constructing request payloads with nested references, and manipulating content such as post text, comment replies, and blog descriptions while preserving structural integrity.",
      "description_length": 833,
      "index": 1044,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service",
      "library": "gapi-ocaml",
      "description": "This module provides comprehensive access to Google Drive API v2 features, enabling direct manipulation of files, folders, comments, permissions, and user data. Core data types include `File.t`, `Comment.t`, `Permission.t`, `Revision.t`, and `App.t`, with operations for creating, modifying, listing, and deleting these entities, as well as managing relationships like parent-child folder structures and comment replies. It supports advanced use cases such as real-time data synchronization, custom file properties, change tracking, and collaborative editing workflows. Examples include exporting files to specific formats, restoring previous revisions, sharing files with specific users, and monitoring Drive changes in real time.",
      "description_length": 731,
      "index": 1045,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOauth2V2Service",
      "library": "gapi-ocaml",
      "description": "This module manages Google OAuth2 authentication flows, providing functions to retrieve public certificates for OpenID Connect and validate identity tokens using JSON Web Key (Jwk) and Tokeninfo structures. It supports secure user authentication and token verification through direct API calls and integrates with child modules that define OAuth2 scopes and retrieve user identity data. The `get` function in the user info submodule fetches authenticated user details like email and unique identifiers, returning them alongside an updated session object. Scopes such as profile and email access are used when requesting authorization tokens, enabling personalized application experiences based on user identity.",
      "description_length": 711,
      "index": 1046,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiClientLogin",
      "library": "gapi-ocaml",
      "description": "This module manages client login authentication flows, retrieving tokens and maintaining session state using email, password, and service identifiers. It directly supports logging into Google services by specifying service types like `Calendar` or `YouTube`, and returns auth tokens upon successful authentication. The module handles errors such as `BadAuthentication` and `CaptchaRequired`, allowing precise error handling during login. Together with its submodules, it provides a complete workflow for client-side Google service authentication, from request to error recovery.",
      "description_length": 578,
      "index": 1047,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOAuth2Devices",
      "library": "gapi-ocaml",
      "description": "This module implements OAuth2 device flow operations for authenticating TV and limited-input devices, handling the full lifecycle from requesting verification codes to exchanging device codes for access tokens. It structures JSON responses into typed records, enabling safe access to critical fields like device code, user code, verification URL, and polling intervals. Operations include initiating device authorization, polling for token updates, and extracting session data to manage authentication in constrained environments. Specific use cases involve initializing device-based flows, guiding users through external verification, and maintaining secure sessions via structured response parsing.",
      "description_length": 700,
      "index": 1048,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model",
      "library": "gapi-ocaml",
      "description": "This module provides structured data definitions and manipulation utilities for interacting with the Google Analytics API v3. It centers around core data types such as query configurations, segments, custom data sources, web properties, views, goals, filters, and user links, with operations for JSON serialization, field access via lenses, and handling paginated responses. You can use it to build analytics queries with dimensions and metrics, manage AdWords integrations, configure custom dimensions and metrics, or process real-time and unsampled reports. Specific examples include constructing conversion funnels, defining remarketing audiences, and synchronizing account and property metadata with API endpoints.",
      "description_length": 718,
      "index": 1049,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOption",
      "library": "gapi-ocaml",
      "description": "This module provides operations for working with `option` values, including mapping, iteration, and extraction. It supports checking the presence of values, applying functions conditionally, and retrieving values with or without a default. Useful for handling optional data without explicit pattern matching, such as processing form inputs or API responses with fallbacks.",
      "description_length": 372,
      "index": 1050,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Service",
      "library": "gapi-ocaml",
      "description": "This module provides functionality to authenticate and manage website or domain ownership verification with Google's Site Verification API. It supports key operations such as listing verified sites, inserting new verification requests, retrieving verification tokens, and updating ownership details. Authentication scopes define permissions for these actions, enabling secure integration with Google services. Example uses include verifying a domain by adding a provided token, checking the current verification status of a site, and transferring or updating owner information for an already verified site.",
      "description_length": 606,
      "index": 1051,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiLens",
      "library": "gapi-ocaml",
      "description": "This module enables composing and applying functional lenses to access and immutably update deeply nested data structures, supporting operations like mapping over lists, arrays, and options, as well as state monad transformations. It provides core data types and functions for lenses that target common structures such as pairs, hashtables, and nested records, allowing precise manipulation through composable accessors and infix operators. The child modules enhance this functionality with specialized operators for stateful updates and pseudo-imperative modifications, enabling concise manipulation of deeply nested fields, such as incrementing a counter in a nested record or updating values within a list or option. Together, they streamline immutable state management in hierarchical data, eliminating boilerplate during transformations.",
      "description_length": 842,
      "index": 1052,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with the Google Calendar API v3, centered around calendar events, availability, conferencing, and user settings. Core data types include structured records for events with metadata (timestamps, recurrence, attendees), calendar lists, conference details (entry points, solutions, parameters), availability data (busy intervals, free/busy queries), notifications, ACLs, and color schemes. Operations support JSON serialization, field manipulation via lenses, and handling API responses such as errors, pagination, and synchronization tokens. Examples include configuring event reminders, managing calendar sharing permissions, integrating video conferencing links, and querying calendar availability across multiple time ranges and calendars.",
      "description_length": 804,
      "index": 1053,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "GapiCustomsearchV1Service",
      "library": "gapi-ocaml",
      "description": "This module enables structured web and image searches with customizable filters and parameters. It centers on the `list` function, which supports rich query configurations through data types like search types, language codes, site filters, image properties, and safe search modes. Operations include executing targeted searches for content like large grayscale images from specific domains, applying filters for language, duplicates, and explicit content. Example use cases involve searching for non-duplicate, large-sized images in grayscale from a given site with strict safe search enforcement.",
      "description_length": 597,
      "index": 1054,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service",
      "library": "gapi-ocaml",
      "description": "This module provides access to the Gmail API for managing email workflows, supporting operations like sending and organizing messages, configuring user settings, and tracking mailbox activity. It defines authentication scopes for granular permissions and uses session-based interactions to handle tasks such as applying labels, managing drafts, and setting up notifications. Key data types include user identifiers, session tokens, and structures for messages, labels, and threads. Examples include automating email organization with labels, sending formatted drafts programmatically, and configuring vacation responses or auto-forwarding rules.",
      "description_length": 645,
      "index": 1055,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Service",
      "library": "gapi-ocaml",
      "description": "This module enables programmatic analysis of web page performance using the PageSpeed Insights API, offering the `runpagespeed` function to evaluate pages with customizable parameters such as URL, strategy (desktop or mobile), and locale. It returns detailed performance metrics and optimization suggestions structured in a processable format. Developers can use it to automate performance testing and integrate optimization guidance directly into workflows. For example, you can analyze a webpage's load time on mobile devices and receive actionable recommendations to improve speed and user experience.",
      "description_length": 604,
      "index": 1056,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model",
      "library": "gapi-ocaml",
      "description": "This module transforms JSON responses from the PageSpeed Insights API into structured OCaml types, providing precise access to performance metrics, rule diagnostics, version data, and screenshots through typed lenses and converters. Key operations include extracting load times, adjusting rule impact scores, generating localized reports, and analyzing resource sizes. It supports hierarchical data manipulation, enabling detailed analysis and customization of API output for optimization workflows. Example uses include parsing performance scores, modifying diagnostic metadata, and rendering structured reports from API responses.",
      "description_length": 632,
      "index": 1057,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore",
      "library": "gapi-ocaml",
      "description": "This module provides data types and operations for handling JSON and XML document models, HTTP methods, headers, post data, and signature methods, with annotated tree structures for hierarchical data manipulation. It includes HTTP verbs as enumerated types, header and status code representations, form and payload handling for POST requests, and signature methods for OAuth authentication. Concrete use cases include constructing and parsing HTTP requests with custom headers, managing multipart/form-data payloads, and signing API requests using HMAC-SHA1 or RSA-SHA1. The module enables traversal and transformation of document trees with context-aware folds, and conversion between string representations and typed HTTP components.",
      "description_length": 735,
      "index": 1058,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service",
      "library": "gapi-ocaml",
      "description": "This module provides a structured interface for interacting with the Google+ API, organizing functionality into distinct areas: authentication, user profiles, activities, and comments. Key data types include `Person`, `PeopleFeed`, `Session`, `Activity`, `Comment`, along with enumerated types for scopes, collections, and sort orders. Operations allow authenticated access to user data, retrieval and search of profiles and activities, and management of activity comments with sorting and pagination. Example uses include fetching a user's profile with guaranteed fields, listing recent comments on a post, or searching public activities by keyword with results sorted by date.",
      "description_length": 678,
      "index": 1059,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiConfig",
      "library": "gapi-ocaml",
      "description": "This module provides functions to configure authentication methods, including ClientLogin, OAuth1, OAuth2, and service accounts, alongside HTTP client settings like timeouts, compression, and transfer speed limits. It operates on records of type `GapiConfig.t`, using lenses to access and modify configuration fields. These capabilities support use cases such as tuning API client performance, enabling debug output, and adapting network behavior for different environments.",
      "description_length": 474,
      "index": 1060,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad",
      "library": "gapi-ocaml",
      "description": "This module defines monadic interfaces and implementations for managing effects like state, sessions, and non-determinism. It provides core operations such as `bind`, `return`, `mapM`, and `foldM`, along with concrete monads for state manipulation, session handling, and list-based computations. The module enables structuring effectful workflows using combinators and infix operators like `>>=` and `>>`, supporting tasks such as error handling, parser state tracking, and generating value combinations. Specific capabilities include chaining API calls with session state, filtering non-deterministic results with `guard`, and composing list monads to solve combinatorial problems.",
      "description_length": 682,
      "index": 1061,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service",
      "library": "gapi-ocaml",
      "description": "This module provides access to Google Analytics data and metadata, enabling authentication, account provisioning, report configuration, and user management. Key data types include sessions, account tickets, column metadata, report parameters, analytics resources, and user deletion requests, with operations to create, retrieve, update, and delete these entities. It supports tasks like fetching real-time dashboards, configuring remarketing audiences, automating filter setups, and initiating user data deletion. Example uses include building analytics dashboards, managing account configurations programmatically, and enforcing data privacy policies.",
      "description_length": 652,
      "index": 1062,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and operations for interacting with the BigQuery API v2, enabling configuration, execution, and analysis of data processing jobs. It includes core types for tables, datasets, jobs, and queries, along with support for serialization to and from JSON for API communication. You can define table schemas, execute SQL queries with custom settings, export data to storage, handle streaming inserts with error reporting, and inspect job statistics or execution plans. Examples include configuring a CSV load job with custom parsing options, querying data with a specified result cache policy, or inspecting the status and performance metrics of a running BigQuery job.",
      "description_length": 698,
      "index": 1063,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Service",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive interface for interacting with a Tasks API, enabling management of both task lists and individual tasks. It supports operations to create, update, delete, and organize task lists, as well as detailed manipulation of tasks including completion status and hierarchical arrangement. Authentication is handled through defined OAuth scopes, allowing controlled access to task data. For example, you can retrieve all task lists for a user, add a new task to a list, mark it as completed, and reorder tasks within the list.",
      "description_length": 553,
      "index": 1064,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiJwtServiceAccount",
      "library": "gapi-ocaml",
      "description": "This module generates JWT tokens for service account authorization using RSA private keys, enabling authentication with cloud APIs that require signed JWTs. It provides functions to parse private keys, create and encode JWT claims, and sign tokens. The core data type represents JWT claims with fields like issuer, scope, audience, and expiration, and includes utilities to modify these claims and convert them to JSON. Specific operations include building a claim set, signing it with a private key, and producing a compact JWT string for API authentication.",
      "description_length": 559,
      "index": 1065,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service",
      "library": "gapi-ocaml",
      "description": "This module provides access to Blogger API resources including blogs, posts, comments, and user data. It supports operations to retrieve blogs by ID, list blog pages with optional filters, fetch individual posts and comment threads with pagination, and obtain user profiles along with their associated blogs. For example, it can fetch a specific blog's metadata, retrieve a paginated list of posts filtered by date, or get all comments for a particular blog post. The module works with typed data structures like `Comment.t`, `Post.t`, and `BlogList.t` to manage data exchanged with the Blogger API.",
      "description_length": 599,
      "index": 1066,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUtils",
      "library": "gapi-ocaml",
      "description": "This module offers utilities for string manipulation, URL handling, and managing optional values, with support for parsing HTTP headers, constructing URLs, and applying exponential backoff delays. Its child module introduces infix operators like `|>`, `-|`, and `|-` to streamline function chaining and data transformation pipelines. Main data types include strings, optional values, and ETags, with operations for splitting, stripping, and composing functions. Examples include formatting API responses through piped transformations and building robust URL query strings with delimiter-based formatting.",
      "description_length": 604,
      "index": 1067,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with the AdSense Management API, enabling structured representation and manipulation of accounts, ad units, reports, payments, and configuration settings. Key data types include account hierarchies, paginated lists (ad clients, alerts, custom channels, URL channels, saved reports, ad styles), payment records, report responses, and configuration objects (ad units, custom channels, URL channels). Operations include JSON serialization and deserialization, field access via lenses, and handling pagination and metadata for API requests and responses. Examples include parsing an API response into a typed account object, extracting report metrics for analysis, or constructing and submitting a modified custom channel configuration.",
      "description_length": 796,
      "index": 1068,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service",
      "library": "gapi-ocaml",
      "description": "This module provides access to AdSense account data, enabling publishers to programmatically manage inventory, generate performance reports, and retrieve financial information. It supports key operations such as listing ad clients, custom channels, URL channels, and payments, as well as generating reports with custom metrics and dimensions. Data types include structured representations of accounts, ad units, saved ad styles, and alerts, with operations to list, retrieve, and configure them. Examples include fetching payment records, generating performance reports by date range and metric, and managing ad unit configurations with associated custom channels.",
      "description_length": 664,
      "index": 1069,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and operations for interacting with the Google Sheets API v4, enabling programmatic manipulation of spreadsheets, charts, filters, data validation, and formatting. Key data types include grid ranges, cell values, chart specifications, filter views, and conditional formatting rules, with support for JSON serialization and deserialization. You can use it to build applications that read and update spreadsheet data, apply formatting, create charts, enforce data validation, and manage sheet metadata directly through the Sheets API.",
      "description_length": 569,
      "index": 1070,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive interface to interact with Google BigQuery, enabling dataset and table management, data manipulation, job control, project listing, and scoped authentication. Key data types include datasets, tables, jobs, and projects, with operations such as create, delete, list, insert, query, and configure. For example, users can create and manage datasets, stream data into tables, run and monitor query jobs, list accessible projects, and set authorization scopes for secure API access.",
      "description_length": 514,
      "index": 1071,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with Google Drive API v2, enabling structured representation and manipulation of files, comments, permissions, and user data. Key data types include records for file metadata, user information, comment threads, permission settings, and change events, each supporting JSON serialization and deserialization for API compatibility. Operations allow precise field manipulation via lenses, pagination of result sets, and handling of hierarchical relationships and revision histories. Examples include parsing file lists from API responses, updating user permissions, tracking comment replies, and synchronizing file changes across distributed systems.",
      "description_length": 710,
      "index": 1072,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOauth2V2Model",
      "library": "gapi-ocaml",
      "description": "This module provides data definitions and utilities for working with key components of the Google OAuth2 API, including cryptographic keys, user information, and token metadata. It supports parsing, serializing, and manipulating JSON Web Keys (JWK), user profiles, and OAuth2 tokens, with lenses for field access and conversion to and from JSON. Specific operations include validating tokens using key sets, extracting user details like email and profile picture, and managing token scopes and audience information. Example uses include verifying signed tokens and processing user identity data after authentication.",
      "description_length": 616,
      "index": 1073,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAuth",
      "library": "gapi-ocaml",
      "description": "This module handles authentication data structures and authorization header generation for API requests. It supports OAuth1, OAuth2, and service account flows with concrete types for storing credentials, tokens, and signing parameters. Use it when building authenticated requests to services requiring these authorization schemes, such as Google APIs.",
      "description_length": 351,
      "index": 1074,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service",
      "library": "gapi-ocaml",
      "description": "This module offers comprehensive access to Google Calendar API v3 features, enabling management of calendars, events, and user settings alongside fine-grained access control and notification handling. Key data types include `Calendar.t`, `Event.t`, `ACL.t`, and `Setting.t`, with operations to create, update, query, and delete these resources, along with managing permissions, color schemes, and free/busy status. You can, for example, list upcoming events across multiple calendars, set up notifications for event changes, or check user availability for scheduling. Additional capabilities include managing calendar sharing policies, synchronizing calendar lists with custom access roles, and applying consistent color coding across calendar entries.",
      "description_length": 752,
      "index": 1075,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service",
      "library": "gapi-ocaml",
      "description": "This module provides comprehensive access to Google Drive API v3 features, enabling management of files, permissions, comments, and collaborative workflows. It supports key operations such as file creation and revision, comment threading and replies, access control via permissions and proposals, and real-time change tracking through channels and push notifications. Data types like `File.t`, `Comment.t`, `Permission.t`, and `ChangeList.t` underpin use cases including document collaboration, access approval workflows, and Drive-wide synchronization. Specific tasks include approving access requests, managing comment threads, monitoring file changes, and retrieving storage metadata for user dashboards.",
      "description_length": 707,
      "index": 1076,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive interface to the AdSense Management API, enabling publishers to programmatically manage ad inventory, generate performance reports, and configure account settings. Key data types include ad clients, ad units, custom channels, URL channels, and report results, with operations to list, retrieve, and filter these entities based on identifiers, status, or time-based metrics. Functionality includes generating revenue and traffic reports, listing active ad units with pagination, fetching custom channel configurations, and managing URL-based ad placements. Example use cases include exporting performance metrics for specific date ranges, auditing ad inventory across multiple domains, and retrieving custom channel assignments for targeted reporting.",
      "description_length": 787,
      "index": 1077,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with Google Drive API v3, structuring access to files, permissions, labels, comments, revisions, and user metadata through typed records and lenses. Core data types include `File.t`, `Permission.t`, `Label.t`, `Comment.t`, `Change.t`, and `User.t`, each supporting JSON serialization and deserialization for API communication. Operations enable precise manipulation of nested properties\u2014such as updating a file's metadata, applying label changes, or navigating paginated comment threads\u2014while maintaining type safety and structural consistency. Examples include enforcing download restrictions, synchronizing team drive themes, resolving access proposals, and tracking content revisions with timestamps and authorship data.",
      "description_length": 787,
      "index": 1078,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with the Google+ API v1, covering social content, user profiles, access control, and location data. Core data types include structured records for comments, activities, profiles, ACLs, places, and paginated feeds, each supporting JSON serialization, field access via lenses, and operations for creation, parsing, and transformation. Use this module to manage nested comment threads with +1 interactions, construct and modify user activity streams, define access permissions for social content, and represent user profiles with detailed biographical and contact information. Specific operations include serializing comment replies, extracting actor metadata from activities, configuring post visibility with ACLs, and handling paginated result sets for people or comment feeds.",
      "description_length": 840,
      "index": 1079,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model",
      "library": "gapi-ocaml",
      "description": "This module structures data and operations for interacting with the CustomSearch API, organizing search results, metadata, query parameters, and contextual information. Core types include records for search items, promotions, facets, and queries, with operations to parse, modify, and serialize these structures to and from JSON. It enables tasks like building and adjusting search requests, extracting and rendering result metadata, and processing promotions or spelling corrections within web applications or data pipelines. Example uses include dynamically updating query parameters, transforming API responses into display-ready content, and analyzing search result metadata with structured accessors.",
      "description_length": 705,
      "index": 1080,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiConversation",
      "library": "gapi-ocaml",
      "description": "This module orchestrates HTTP conversations with a server, managing requests, responses, and session state across multiple interactions. It supports sending HTTP methods with persistent sessions, parsing errors, handling chunked responses, and iterating over piped data, while integrating authentication contexts and Curl state management. Key data types include sessions, HTTP headers, POST data, and authentication tokens, with operations for modifying session state using lenses and handling OAuth1/OAuth2 workflows. Examples include maintaining authenticated API connections, exchanging tokens during REST interactions, and processing streaming responses with session-aware requests.",
      "description_length": 687,
      "index": 1081,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model",
      "library": "gapi-ocaml",
      "description": "This module enables functional manipulation of API discovery data through lenses and structured types, supporting dynamic client generation and configuration. It provides data models for REST endpoints, JSON schemas, authentication settings, and resource hierarchies, with operations for parsing, rendering, and modifying API metadata. Key capabilities include handling OAuth 2.0 scopes, validating input schemas, managing API deprecation, and configuring media uploads. Examples include extracting endpoint information from JSON, updating schema validation rules, and modifying icon URLs for API display.",
      "description_length": 605,
      "index": 1082,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with a URL shortening service, encompassing URL management, history tracking, and detailed analytics. It supports structured access to shortened URLs, their metadata, and associated click data, enabling precise manipulation and serialization to JSON. Key data types include URL entries with analytics summaries, paginated history responses, time-based click snapshots, and labeled count entries for top analytics categories. You can use it to create, serialize, and analyze shortened URLs, track traffic patterns over time, and extract top countries, browsers, or referrers by click volume.",
      "description_length": 654,
      "index": 1083,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth2",
      "library": "gapi-ocaml",
      "description": "This module handles OAuth 2.0 authorization workflows, providing functions to parse token responses and errors, generate authorization URLs, and exchange or refresh access tokens. It works with HTTP response pipes, authentication response records, and session state from the GapiConversation module. Concrete use cases include authenticating users via Google services, handling redirect-based authorization flows, and managing token refresh cycles securely.",
      "description_length": 457,
      "index": 1084,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive interface to the AdSense Management API data model, enabling structured manipulation of ad units, URL channels, custom channels, accounts, and reports. It centers around core data types like `AdUnits.t`, `UrlChannel.t`, `Account.t`, and report structures with typed headers and rows, offering operations to parse, render, and transform these entities between JSON and internal representations. You can process paginated responses, manage ad configuration data, extract report metrics with typed precision, and serialize channel settings for API communication. Specific tasks include caching based on ETags, converting dimension values into report rows, and defining targeting rules within custom channels.",
      "description_length": 742,
      "index": 1085,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDate",
      "library": "gapi-ocaml",
      "description": "This module handles datetime values using the `Netdate.t` type, providing operations to create, format, and parse dates. It includes functions to get the current time, convert dates to strings (with optional time inclusion), and parse dates from strings. Concrete use cases include logging timestamps, scheduling events, and processing date-based input/output in network protocols.",
      "description_length": 381,
      "index": 1086,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Service",
      "library": "gapi-ocaml",
      "description": "This module enables dynamic discovery and inspection of Google APIs by listing available services and retrieving their RESTful interface definitions. It operates on key data types like `DirectoryList`, which catalogs API services, and `RestDescription`, which defines the resources and methods of a specific API version. With it, you can programmatically access metadata for services like Drive or Sheets, enabling runtime exploration of available endpoints and their parameters. For example, you can fetch a list of all available APIs or retrieve detailed method specifications for a specific version of the Drive API.",
      "description_length": 619,
      "index": 1087,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPipe",
      "library": "gapi-ocaml",
      "description": "This module implements streaming HTTP message bodies using `Netchannels`, enabling efficient handling of request and response payloads. It provides low-level input and output operations such as `read_byte`, `read_line`, `write_string`, and `read_all` for direct manipulation of byte and string data. These functions support both client and server use cases, allowing for incremental processing of HTTP content. For example, you can read a response body line by line or write request data incrementally.",
      "description_length": 502,
      "index": 1088,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCurl",
      "library": "gapi-ocaml",
      "description": "This module enables configuring and executing HTTP requests with detailed settings for headers, methods, cookies, and timeouts, while managing session state transitions. It operates on session objects tracking lifecycle stages (initialized, created) and debug type enumerations, supporting tasks like authenticated API calls, data uploads with custom parameters, and debugging network operations via detailed session logs. Key workflows include initializing sessions, handling request/response cycles, and safely releasing resources post-execution.",
      "description_length": 548,
      "index": 1089,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth2ServiceAccount",
      "library": "gapi-ocaml",
      "description": "Handles OAuth 2.0 authentication for service accounts by generating access tokens using JSON credentials and specified scopes. Works with service account data files and HTTP sessions to request tokens from authorization servers. Used to authenticate API requests on behalf of a service account, optionally impersonating a user.",
      "description_length": 327,
      "index": 1090,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiRequest",
      "library": "gapi-ocaml",
      "description": "This module handles HTTP requests to services, supporting operations like querying, creating, updating, patching, deleting, and retrieving metadata. It works with data types such as `request_type`, `PostData.t`, `Header.t`, `MediaResource.t`, and session data for authentication and state. Concrete use cases include sending authenticated API requests, uploading or downloading media, and handling custom headers or error parsing in service interactions.",
      "description_length": 454,
      "index": 1091,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model",
      "library": "gapi-ocaml",
      "description": "This module provides a comprehensive data model for interacting with the Gmail API v1, enabling structured manipulation of email messages, threads, labels, filters, and account settings. Key data types include message and thread structures with associated metadata, label configurations, filter criteria, forwarding and SMTP settings, and history records for tracking mailbox changes. Operations support serialization to and from JSON, label modification, message parsing, batch updates, and configuration of forwarding, vacation, and push notification settings. Examples include constructing filter actions to automate label application, extracting message headers and attachments, managing send-as aliases with custom SMTP relays, and synchronizing mailbox state through history records and push notifications.",
      "description_length": 812,
      "index": 1092,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth1",
      "library": "gapi-ocaml",
      "description": "This module implements OAuth 1.0a authorization flows, providing functions to generate signatures, build OAuth headers, and manage token lifecycle operations. It works with HTTP methods, key-value parameter lists, and authentication sessions to handle secure API requests. Concrete use cases include obtaining request tokens, authorizing them via user consent URLs, exchanging for access tokens, and revoking or inspecting tokens.",
      "description_length": 430,
      "index": 1093,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netaux.KMP",
      "library": "gapi-ocaml.netstring-local",
      "description": "Implements the Knuth-Morris-Pratt string search algorithm. Provides `make_pattern` to compile a search pattern from a string and `find_pattern` to locate the first occurrence of the pattern in a byte buffer, starting at an optional position. Useful for efficient substring searches in binary data processing tasks.",
      "description_length": 314,
      "index": 1094,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netasn1.Value",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles ASN.1 data values through operations like encoding/decoding, type inspection, and value conversion, supporting both primitive types (integers, booleans, time) and structured types (sequences, sets). It provides specialized functions for manipulating bitstrings, normalizing time representations (UTCTime/GeneralizedTime), and comparing values, while working with data structures like `bitstring_value`, `time_value`, and normalized time types. Use cases include parsing ASN.1-encoded timestamps into `Netdate.t` objects, truncating bitstring payloads, and validating equality of complex ASN.1 structures.",
      "description_length": 624,
      "index": 1095,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.Html",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes and decodes HTML entity references, converting characters like `<`, `>`, `&`, and `\"` to their corresponding named or numeric entities (e.g., `&lt;`, `&#60;`) or back. It supports multiple encodings such as Latin-1 and UTF-8, and allows customization of unsafe characters and entity resolution. It is used to sanitize strings for HTML output or to interpret HTML-encoded input, handling legacy HTML 4 entities and supporting polymorphic string types.",
      "description_length": 470,
      "index": 1096,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.QuotedPrintable",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes and decodes text using the Quoted-Printable format defined in RFC 2045, ensuring compliance with MIME standards. It handles string and tagged string inputs, inserting soft line breaks to limit line length to 76 bytes and normalizing line endings based on the `crlf` flag. Use it to prepare text for email transmission or decode Quoted-Printable content from MIME messages.",
      "description_length": 392,
      "index": 1097,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netasn1.Type_name",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module defines a variant type representing the built-in type names in ASN.1, such as `Integer`, `Octetstring`, and `UTCTime`. It provides direct enumeration of ASN.1 primitive and constructed types, enabling precise type identification and handling during encoding and decoding operations. Concrete use cases include mapping ASN.1 schema definitions to OCaml values and validating data against specific ASN.1 type constraints.",
      "description_length": 431,
      "index": 1098,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.Url",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles URL encoding and decoding using RFC-compliant percent-encoding, converting spaces to plus signs (or preserving them based on the `plus` option). It operates on string inputs, providing `encode` and `decode` functions for individual strings, and `mk_url_encoded_parameters` and `dest_url_encoded_parameters` for serializing and parsing URL query strings from key-value pairs. It is used to safely include special characters in URLs and process query parameters in web applications or HTTP clients.",
      "description_length": 516,
      "index": 1099,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netstring_str.Debug",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module enables debug output for regular expression operations by setting a boolean flag. It works with the same string and pattern types as the Str module. Use this module to trace and inspect regex matches and substitutions during development.",
      "description_length": 249,
      "index": 1100,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netencoding.Q",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements the Q encoding algorithm from RFC 2047, providing functions to encode and decode strings where non-alphanumeric characters are represented using hexadecimal escape sequences like \"=20\" for space. It supports standard strings, tagged strings (`tstring`), and polymorphic string-like types through dedicated encoding and decoding operations. Use this module when handling email headers or other MIME-encoded data that requires Q-encoding compliance.",
      "description_length": 470,
      "index": 1101,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netaux.ArrayAux",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides optimized operations for manipulating integer arrays, including blitting and generating arithmetic series. It specializes in efficient array transformations where performance is critical, such as numerical computations and array initialization. Concrete use cases include fast array copying and in-place generation of cumulative sums with a base value.",
      "description_length": 373,
      "index": 1102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.Base64",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes and decodes data using the Base64 format specified in RFC 2045, supporting standard and custom character sets. It operates on strings, tagged strings, and polymorphic string-like types, producing encoded or decoded byte sequences. Concrete use cases include preparing binary data for safe transmission over text-based protocols like email (MIME) or embedding binary content in JSON or XML documents.",
      "description_length": 419,
      "index": 1103,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netstring_tstring",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides operations for handling polymorphic string-like data through type-safe conversions and abstractions. It works with tagged strings (`tstring`), string operations (`tstring_ops`), and various data types like `string`, `bytes`, and `memory`. Concrete use cases include transforming strings across different representations, determining lengths of tagged strings, and extracting string content from tagged buffers.",
      "description_length": 431,
      "index": 1104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netmime",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module processes MIME messages with support for constructing and manipulating MIME headers and bodies, including handling complex nested MIME structures. It works with data types like `mime_header`, `mime_body`, and `complex_mime_message`, allowing storage in memory or files. Concrete use cases include parsing and building email messages with attachments or multi-part content.",
      "description_length": 384,
      "index": 1105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles data encoding and decoding for common internet standards, offering direct functions for Base64, Quoted-Printable, URL, and HTML encodings, along with utilities like hexadecimal conversion. It supports operations on standard and polymorphic string types, enabling tasks like sanitizing web content, preparing data for email transmission, and handling MIME-encoded headers. Submodules provide specialized handling for HTML entities, URL query parameters, Q-encoded email headers, and Base64 binary encoding, each with customizable options for encoding standards and input formats. Use it to convert special characters in URLs, decode email content, or escape HTML output while supporting legacy and modern encoding standards.",
      "description_length": 743,
      "index": 1106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netmappings",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides direct access to character encoding conversion tables, primarily for handling Unicode transformations. It includes operations to retrieve mappings in both directions\u2014converting strings to Unicode code points and retrieving the corresponding Unicode ranges for a given string. The module uses a custom algebraic data type `from_uni_list` to represent sparse mappings efficiently, supporting use cases like character set translation and encoding validation.",
      "description_length": 476,
      "index": 1107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsockaddr",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module parses and manipulates socket address representations, supporting both IPv4 and IPv6 formats. It provides functions to convert between string-based address specifications and structured values, normalize IP addresses, and convert IPv4 addresses to IPv6 format. Use cases include network configuration tools, server setup utilities, and any application requiring precise handling of socket address strings.",
      "description_length": 417,
      "index": 1108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netstream",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements input streams with block-based reading and window management, providing operations to advance through data incrementally. It works with `in_obj_stream`, a type representing input streams with a current window for buffered reading. Concrete use cases include parsing network data incrementally and processing large input files without loading the entire content into memory.",
      "description_length": 396,
      "index": 1109,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Neturl",
      "library": "gapi-ocaml.netstring-local",
      "description": "This library enables parsing, modifying, and validating URLs through component-based operations on elements such as scheme, host, path, and query, with support for encoding, IPv6, and customizable syntax validation. It facilitates resolving relative URLs, normalizing paths, and converting file URLs to local paths with platform-specific handling for Windows and Cygwin environments. A utility function for displaying URL structures aids in debugging during development of web services or networked applications.",
      "description_length": 512,
      "index": 1110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netbuffer",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides dynamic byte sequence management through operations for creating, resizing, appending, and in-place modification of buffers. It works with variable-length byte storage that supports efficient substring slicing, memory copying, and direct memory access while handling heterogeneous data sources like strings, bytes, and raw memory regions. Typical use cases include network protocol implementations requiring incremental data assembly, high-performance IO buffering, and systems needing manual memory optimization through unsafe pointer operations or callback-driven buffer manipulation.",
      "description_length": 607,
      "index": 1111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netunichar",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides functions to convert Unicode code points to lowercase, uppercase, or titlecase. It operates on integer values representing Unicode characters. Use this module when handling case transformations for international text processing, such as normalizing user input or formatting strings in different languages.",
      "description_length": 326,
      "index": 1112,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netdb",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles reading and writing string-based database entries, supporting operations to check existence, set values, and manage checksums. It works directly with string keys and values, enabling persistent storage and retrieval through a loader mechanism. Concrete use cases include caching small textual datasets, managing configuration entries, or storing transient state in memory or disk-backed stores.",
      "description_length": 414,
      "index": 1113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netstring_str",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides thread-safe regular expression operations for matching, capturing, replacing, and splitting strings and byte sequences, avoiding the global state issues of the Str module. It supports case-insensitive matching, backreferences, and works reliably in multi-threaded contexts. The debug submodule enables tracing of match and substitution steps, aiding in development and testing. Example uses include parsing log lines, sanitizing input, or transforming text with complex pattern-based rules.",
      "description_length": 511,
      "index": 1114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netasn1",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module decodes BER/DER-encoded ASN.1 values, handling both primitive and constructed types by processing raw byte strings and structured data to return detailed ASN.1 values with tag class, type, length, and payload. It supports operations like encoding, decoding, type inspection, and value conversion, working with data types such as `bitstring_value`, `time_value`, and normalized time representations. The built-in type system, represented as a variant type, allows precise identification of ASN.1 types like `Integer` and `UTCTime`, enabling schema mapping and type validation. Use cases include parsing X.509 certificates, converting ASN.1 timestamps to `Netdate.t`, and comparing complex structures like sequences and sets.",
      "description_length": 735,
      "index": 1115,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netaux",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module combines efficient string searching and integer array manipulation capabilities. It offers `make_pattern` and `find_pattern` for fast substring searches in byte buffers, along with optimized functions for array blitting, series generation, and in-place arithmetic transformations. You can use it to quickly locate patterns in binary data or perform high-speed numerical array operations like cumulative sum generation and memory-efficient array copying.",
      "description_length": 465,
      "index": 1116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netconversion",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides character encoding conversion, Unicode-aware text traversal, and string manipulation operations. It works with encoded strings, buffers, and Unicode code point arrays, supporting encodings like UTF-8, UTF-16, and byte order marks (BOMs). Key use cases include encoding detection, character-position-based substring extraction, case conversion, and validation of encoded text with error handling for malformed sequences.",
      "description_length": 440,
      "index": 1117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netchannels",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements object-oriented I/O channels with support for input/output operations across various data sources such as files, memory buffers, and network descriptors. It provides concrete functionality for reading and writing data through classes like `in_obj_channel` and `out_obj_channel`, including methods for line-based input, buffer manipulation, and transactional handling via temporary files. Use cases include processing streamed data from network connections, encoding/decoding on the fly using filters, and managing I/O operations with precise control over buffering and channel lifecycle.",
      "description_length": 610,
      "index": 1118,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Netascii_armor",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles parsing and decoding of ASCII-armored messages, including PEM, OpenPGP, and X.509 key formats. It processes input from a channel, identifying and extracting structured message components such as headers, Base64-encoded bodies, and checksums. Use it to extract cryptographic keys, verify message integrity, or decode email-embedded data.",
      "description_length": 356,
      "index": 1119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netasn1_encode",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes ASN.1 values into BER format, appending the result to a `Netbuffer.t`. It provides two main operations: one that encodes with header bytes and another that encodes only the content. Useful for generating ASN.1-encoded messages for network protocols or cryptographic data structures.",
      "description_length": 302,
      "index": 1120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_signal.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides a reference `enable` to control whether debugging output is generated for signal handling operations. It works with boolean values to toggle logging behavior. Concrete use cases include enabling diagnostic messages during development to track signal handler registration and execution without modifying core signal handling logic.",
      "description_length": 351,
      "index": 1121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_crypto_types.TLS_EXCEPTIONS",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines exceptions specific to TLS operations, such as handshake failures, protocol errors, and certificate validation issues. It works with TLS provider implementations and error handling logic in secure communication stacks. Concrete use cases include signaling decryption failures during session negotiation and raising alerts for expired or untrusted certificates.",
      "description_length": 380,
      "index": 1122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_crypto_types.TLS_ENDPOINT-TLS",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module orchestrates TLS session lifecycle management, encompassing configuration initialization with cryptographic credentials (certificates, private keys, Diffie-Hellman parameters), secure data exchange (`send`/`recv`), and session termination or renegotiation. It enables advanced use cases like virtual hosting via server name indication (SNI), session caching with custom callbacks, and introspection of peer credentials or cipher details, all operating on TLS endpoints",
      "description_length": 480,
      "index": 1123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_crypto_types.TLS_CONFIG-TLS",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides TLS configuration and credential management capabilities, enabling the creation of secure communication endpoints with cryptographic parameters, X.509 certificates, and client-server role definitions. It supports low-level operations for session establishment via handshakes, data transmission, and state introspection, working with data structures such as TLS endpoints, private keys, and certificate revocation lists. Specific use cases include managing server name indication (SNI), customizing session caching through callback mechanisms, and handling TLS state transitions for secure connection lifecycle management",
      "description_length": 641,
      "index": 1124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_win32.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module controls debugging output for the Win32 primitives layer, specifically enabling or disabling detailed logs from both the OCaml wrapper and the underlying C interface. It works directly with boolean values to toggle debug modes and writes diagnostic messages to standard error. It is used during development to trace interactions with Win32 APIs and troubleshoot low-level integration issues.",
      "description_length": 403,
      "index": 1125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.TLS_PROVIDER-Exc",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines exceptions used for handling TLS-related errors, such as handshake failures, certificate validation issues, and protocol violations. It works with error-handling constructs in OCaml, integrating with exception-raising functions in TLS implementations. Concrete use cases include signaling fatal errors during secure connection setup or data transmission.",
      "description_length": 374,
      "index": 1126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.PUBKEY_CRYPTO",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module implements public-key cryptography operations including encryption, decryption, signing, and verification using X.509 keys. It supports direct and indirect key imports via DER encoding or URIs, with optional PIN callbacks for secure key access. Concrete use cases include secure message exchange, digital signature validation, and integration with PKCS#11 devices for cryptographic operations.",
      "description_length": 405,
      "index": 1127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_tls.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module enables or disables debug tracing for TLS connections by setting a boolean reference. It works directly with TLS providers and socket endpoints, allowing developers to inspect TLS handshake and communication details during execution. Use this when diagnosing issues in TLS handshakes or data transmission over secure sockets.",
      "description_length": 337,
      "index": 1128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.TLS_ENDPOINT",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines the endpoint type used to represent TLS communication endpoints. It includes functions to create, configure, and retrieve properties of TLS endpoints, such as setting certificates and cryptographic parameters. It is used to establish and manage secure TLS connections with specific cryptographic settings.",
      "description_length": 325,
      "index": 1129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_crypto_types.FILE_TLS_ENDPOINT-TLS-Exc",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines exceptions used during TLS endpoint operations, specifically for handling errors related to TLS connections in file-based communication. It works with TLS endpoint objects and error conditions arising from cryptographic operations or protocol violations. Concrete use cases include signaling handshake failures, certificate validation errors, and I/O interruptions during secure communication.",
      "description_length": 413,
      "index": 1130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.SYMMETRIC_CRYPTO",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines types and operations for symmetric cryptographic ciphers, including functions to list, select, and configure ciphers with specific key and initialization vector lengths. It supports encryption, decryption, and message authentication for AEAD ciphers like AES-GCM, operating on memory buffers with strict size constraints. Concrete use cases include secure data transmission, authenticated encryption, and cryptographic protocol implementations requiring precise control over cipher parameters.",
      "description_length": 513,
      "index": 1131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.TLS_CONFIG-TLS-Exc",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines exceptions used in TLS configuration and handling. It includes error conditions related to TLS setup, certificate validation, and protocol mismatches. These exceptions are raised during TLS context initialization and secure connection establishment.",
      "description_length": 269,
      "index": 1132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_posix.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module controls debugging output for Netlog-compatible components by setting a global enable flag. It works with boolean values to toggle debug logging on or off. Use this to diagnose or suppress detailed runtime logs during development or troubleshooting.",
      "description_length": 261,
      "index": 1133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.TLS_CONFIG",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines configuration parameters for TLS sessions, including protocol versions, cipher suites, and authentication settings. It works with abstract data types representing TLS contexts and security policies. Concrete use cases include setting up secure client-server communication and enforcing encryption requirements in network services.",
      "description_length": 350,
      "index": 1134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netlog.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module enables conditional debug logging and per-module enablement control via boolean flags, allowing selective activation of debug output for Ocamlnet components. It includes utilities for tracking file descriptors with metadata, logging their lifecycle events when fd tracking is enabled, and supports custom debug variable registration for user modules. Primarily used for diagnosing internal Ocamlnet operations and resource management during development.",
      "description_length": 465,
      "index": 1135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.FILE_TLS_ENDPOINT",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module represents a TLS endpoint connected to file descriptors for reading and writing. It provides direct access to the underlying TLS configuration and Unix file descriptors, enabling secure communication over file-based channels. Concrete use cases include implementing TLS-secured daemons or tools that require encrypted I/O with file descriptors.",
      "description_length": 356,
      "index": 1136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.TLS_ENDPOINT-TLS-Exc",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines exceptions used during TLS endpoint operations, such as handshake failures, decryption errors, and protocol violations. It works with TLS session states and cryptographic error conditions. Concrete use cases include signaling fatal alerts during handshake negotiation and handling unexpected message sequences in a TLS connection.",
      "description_length": 350,
      "index": 1137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module controls debugging output for low-level system operations, primarily enabling or disabling verbose logging through the `enable` reference. It works with boolean values to toggle debug visibility, specifically supporting network and system call tracing in environments requiring fine-grained diagnostic control. Use this when diagnosing issues in network communication or system resource handling during development.",
      "description_length": 427,
      "index": 1138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.TLS_PROVIDER",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides TLS configuration, session management, and protocol introspection capabilities, including operations for setting up cryptographic credentials, negotiating secure connections, and inspecting TLS metadata. It works with X.509 certificates, private keys, endpoint states, and session parameters to enable secure communication scenarios requiring features like SNI handling, session resumption, and protocol version negotiation. The interface supports both initial handshake establishment and runtime management of encrypted data streams.",
      "description_length": 555,
      "index": 1139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.DIGESTS",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module manages cryptographic digest operations, providing functions to create digest contexts, add data incrementally, and compute final hash values. It works with digest types representing algorithms like SHA2-256 or MD5-128, and context types for streaming hash computation. Concrete use cases include hashing files, verifying data integrity, and generating message authentication codes (MACs) using specific cryptographic algorithms.",
      "description_length": 441,
      "index": 1140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types.FILE_TLS_ENDPOINT-TLS",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides low-level TLS session management operations, including configuration of cryptographic parameters, endpoint creation/resumption, and handshake control. It operates on TLS endpoints, X.509 credentials, and protocol-specific types like server names and session caches, enabling precise control over encryption contexts and peer authentication. Specific use cases include implementing custom TLS handshakes with resumption support, server-side SNI handling, and cryptographic metadata inspection for security auditing or protocol tunneling.",
      "description_length": 557,
      "index": 1141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netexn",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module allows registering custom exception printers and provides a function to convert exceptions to strings using these printers. It works with the `exn` type, enabling detailed and unambiguous exception output for debugging. Use it to improve exception readability, especially for exceptions with complex or non-standard argument types.",
      "description_length": 343,
      "index": 1142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_impl_util",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides functions for handling time-based operations, memory management, and data structure checks. It includes utilities for restarting functions with timeouts, measuring time slices, checking membership in sorted arrays, and determining lengths of buffer and string variants. These operations are used for managing time-constrained execution, efficient memory usage, and data validation in network-related implementations.",
      "description_length": 437,
      "index": 1143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines type interfaces for cryptographic operations including TLS protocol handling, symmetric and asymmetric encryption, and digest generation, working with abstract data types representing cryptographic providers, configurations, endpoints, and encryption modules. It supports establishing secure network connections, managing cryptographic keys, and implementing custom security protocols, with core operations for TLS session setup, data exchange, and termination, as well as symmetric cipher configuration and digest computation. Submodules handle key management, TLS endpoint creation, error signaling during handshakes and data transmission, and integration with X.509 certificates and PKCS#11 devices, enabling use cases like secure message exchange, digital signatures, and TLS-secured daemons with file descriptor-based I/O. Specific capabilities include SNI support, session caching, cipher suite selection, and authenticated encryption with AEAD ciphers like AES-GCM.",
      "description_length": 992,
      "index": 1144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_tls",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides a user-level TLS API for secure communication over file descriptors, supporting handshake negotiation, encrypted data transfer, and connection termination with support for X.509 certificates, private keys, and Diffie-Hellman parameters. It accepts a TLS provider, configuration, and socket endpoint as first-class values, enabling concrete use cases like securing client-server connections and managing trust and revocation lists during sessions. The child module controls debug tracing for TLS connections, offering visibility into handshake and communication details by toggling a boolean reference. Together, they combine core TLS operations with diagnostic capabilities for developing and troubleshooting secure communications.",
      "description_length": 752,
      "index": 1145,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_oothr",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides object-oriented abstractions for multi-threading primitives such as mutexes, atomic initialization, and compare-and-swap operations. It works with reference types (`ref`) and function values, enabling thread-safe access and modification of shared state. Concrete use cases include synchronizing access to shared resources, implementing lazy initialization in concurrent contexts, and performing atomic updates to reference cells.",
      "description_length": 450,
      "index": 1146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_signal",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides a framework for managing signal handlers with support for prioritized and exclusive callbacks, allowing multiple components to register handlers for the same signal without conflict. It works with signal numbers as integers and supports installing custom handlers, restoring defaults, or ignoring signals, with built-in handling for SIGPIPE to prevent unexpected termination. The `enable` reference lets you toggle debugging output to trace handler registration and execution, aiding in development and troubleshooting. Example uses include handling SIGINT for graceful shutdowns and coordinating signal responses in network applications.",
      "description_length": 659,
      "index": 1147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_posix",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides access to POSIX-specific system calls and APIs not available in the standard Unix module, extending functionality for low-level system interaction. It includes operations for file descriptors, process control, and system configuration, such as `getdtablesize` and `setrlimit`. A child module lets you toggle debug logging globally for Netlog-compatible components, enabling or suppressing detailed runtime diagnostics. Use it to fine-tune system behavior or troubleshoot low-level issues on POSIX-compliant operating systems.",
      "description_length": 546,
      "index": 1148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_mem",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module enables low-level memory management through operations like blitting between memory and byte sequences, converting memory to structured types, and direct pointer manipulation, while supporting aligned memory allocation and page-based buffer management. It works with Bigarrays, memory-mapped files, OCaml heap objects, and pooled memory blocks to facilitate efficient data processing, system-level I/O, and interoperability with external memory layouts. Typical use cases include high-throughput network communication, large-file manipulation via memory mapping, and performance-critical applications requiring fine-grained memory control or reduced allocation overhead through reusable memory pools.",
      "description_length": 712,
      "index": 1149,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_win32",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides Win32-specific primitives for synchronization using event objects, inter-process communication via named pipes, and process management with configurable environments, while allowing manipulation of console attributes such as colors and code pages. It operates on types like `w32_event`, `w32_pipe_server`, and process handles, integrating with strings and file descriptors for path resolution and resource handling. A child module controls debugging output by enabling or disabling detailed logs from both the OCaml wrapper and the underlying C interface, toggling debug modes with booleans and writing diagnostics to standard error. Together, these components support building secure IPC-based services, console utilities with custom display settings, and cross-platform bridges that integrate Unix-style descriptors with Win32 objects.",
      "description_length": 858,
      "index": 1150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netlog",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides logging functions at various severity levels, using polymorphic variants for log levels and timestamp pairs for time-stamping, with support for directing output to different channels, including stderr or custom handlers. It integrates with Netplex for centralized logging by redirecting log functions to the Netplex logger when available, ensuring consistent behavior in different contexts. The child module adds conditional debug logging with per-module enablement control, allowing selective activation of debug output, tracking of file descriptors with metadata, and registration of custom debug variables for development diagnostics. Together, they enable fine-grained control over logging behavior, from high-level message emission to low-level resource tracking and conditional debugging.",
      "description_length": 815,
      "index": 1151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_conf",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides functions for registering custom exception printers. It allows handling exceptions by converting them to optional string representations. A key use case is enhancing error reporting in applications by attaching custom printing logic to specific exceptions.",
      "description_length": 277,
      "index": 1152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_types",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines low-level data types for handling binary data, including `memory` for byte buffers via Bigarrays, `tbuffer` for representing mutable byte sequences, and `tstring` for handling both mutable and immutable string-like values. It provides operations to work with these types directly, such as conversion functions and accessors that handle different buffer representations efficiently. Concrete use cases include network protocol implementations that require precise control over memory buffers and string encodings.",
      "description_length": 532,
      "index": 1153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_tmp",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module manages temporary file creation by providing operations to set and retrieve the default temporary directory and generate unique file prefixes. It works with strings to manipulate file paths and prefixes. Concrete use cases include setting a custom temporary directory for an application or generating safe, unique temporary file names during file processing tasks.",
      "description_length": 376,
      "index": 1154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides low-level system and network operations, including generalized I/O for file descriptors, sockets, and OS handles, along with utilities for handling interruptions, timeouts, and cross-platform inconsistencies. It works with file descriptors, socket addresses, `Unix.inet_addr` values, and system error codes to support use cases like network programming (IPv4/IPv6, multicast), process management, and profiling, while providing robust error handling and descriptor manipulation. The child module controls debugging output for these operations, primarily enabling or disabling verbose logging through the `enable` reference, which toggles diagnostic visibility for system calls and network activity. Use the main module for direct system interaction and the child module to trace and diagnose communication or resource issues during development.",
      "description_length": 865,
      "index": 1155,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1228,
    "meaningful_modules": 1156,
    "filtered_empty_modules": 72,
    "retention_rate": 0.9413680781758957
  },
  "statistics": {
    "max_description_length": 992,
    "min_description_length": 230,
    "avg_description_length": 447.6695501730104,
    "embedding_file_size_mb": 4.199407577514648
  }
}