{
  "package": "gapi-ocaml",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 1136,
  "creation_timestamp": "2025-08-15T01:35:50.048765",
  "modules": [
    {
      "module_path": "Netencoding.Url",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles URL encoding and decoding by converting special characters using percent-encoding, with support for handling spaces via the `plus` option. It operates on strings to encode or decode individual values, and can also construct or parse URL query strings from name-value pairs. It is used for preparing data to be safely transmitted in URLs or processing incoming URL-encoded data, such as query parameters from HTTP requests.",
      "description_length": 442,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netaux.ArrayAux",
      "library": "gapi-ocaml.netstring-local",
      "description": "Implements optimized array operations for integer arrays, including blitting and series summation. Provides `int_blit` for fast copying and `int_series` for cumulative sum computations with offset control. Useful in numerical processing tasks requiring in-place updates and sliding window calculations.",
      "description_length": 302,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netasn1.Type_name",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module defines a variant type representing the built-in type names of the ASN.1 standard. It includes constructors for primitive types like `Bool`, `Integer`, and `Octetstring`, as well as structured types like `Seq` and `Set`. It is used to model and manipulate ASN.1 schema definitions programmatically.",
      "description_length": 310,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.Q",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements the Q-encoding algorithm for strings, handling both encoding and decoding according to RFC 2047. It operates on standard strings and tagged string types, converting input into bytes with hex-encoded special characters, where spaces are explicitly encoded as \"=20\". It is used for correctly formatting and parsing encoded words in email headers and similar protocols requiring strict character encoding.",
      "description_length": 425,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.Html",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes and decodes HTML entity references in strings, handling character set conversions between input and output encodings. It supports encoding unsafe characters like `<`, `>`, `\"`, and `&` into named or numeric entities (`&lt;`, `&#60;`), and decoding those entities back into characters. Concrete use cases include sanitizing user input for HTML output, generating valid HTML from plain text, and processing HTML content with custom entity handling.",
      "description_length": 466,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netasn1.Value",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module supports encoding, decoding, and manipulation of ASN.1 data values, including primitives like integers, bitstrings, and time representations (UTCTime/GeneralizedTime), as well as constructed types such as sequences and sets. It provides utilities for bitstring truncation, time format conversion, and equality checks, with explicit/implicit tagging mechanisms for structured data handling. These capabilities are particularly useful for implementing protocols requiring precise ASN.1 serialization, such as X.509 certificate parsing or SNMP message encoding.",
      "description_length": 570,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netencoding.Base64",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes and decodes binary data using Base64 encoding as defined in RFC 2045, supporting custom alphabet characters, line wrapping, and whitespace handling. It operates on strings and tagged string types, producing encoded or decoded byte sequences. Concrete use cases include preparing binary data for transmission in email messages or HTTP headers, and decoding Base64-encoded payloads from network protocols.",
      "description_length": 423,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding.QuotedPrintable",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes and decodes strings using the Quoted-Printable encoding standard, primarily for text MIME types. It ensures output lines do not exceed 76 bytes by inserting soft line breaks and escapes unsafe characters as hexadecimal tokens. Functions support substring processing, custom line endings, and polymorphic input handling, making it suitable for email content encoding and similar text-based MIME operations.",
      "description_length": 425,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netaux.KMP",
      "library": "gapi-ocaml.netstring-local",
      "description": "Implements the Knuth-Morris-Pratt string search algorithm for efficient substring matching. Builds a search table from a given pattern string and scans byte sequences for matches, supporting partial scans via optional position and length parameters. Useful for parsing binary protocols or searching large byte buffers incrementally.",
      "description_length": 332,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netstring_str.Debug",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module enables or disables debug output for regular expression operations using the `enable` reference. It works with the same string and pattern types as the `Str` module, focusing on thread-safe debugging. Concrete use cases include inspecting regex matches and substitutions in multi-threaded applications without relying on external logging frameworks.",
      "description_length": 361,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsockaddr",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module parses and manipulates socket address representations. It supports operations to convert between string representations and structured values, normalize IP addresses, and convert IPv4 addresses to IPv6 format. It works with Unix domain sockets and IP addresses (IPv4 and IPv6), handling both numeric and symbolic forms. Use cases include network configuration tools, server/client setup, and address canonicalization for consistent network communication.",
      "description_length": 466,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netstream",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements input streams with a look-ahead buffer, allowing efficient reading of data from underlying channels in blocks. It supports operations like reading characters or strings, skipping bytes, and managing sub-streams with delimiters or length limits. Use cases include parsing network data, processing file chunks, and handling input where look-ahead is required.",
      "description_length": 380,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netaux",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements the Knuth-Morris-Pratt algorithm for efficient substring matching in byte sequences and provides optimized array operations for integer arrays, including fast copying and cumulative sum computations. It works with byte buffers and integer arrays, supporting incremental parsing and numerical processing tasks. Concrete use cases include scanning network data streams for specific patterns and performing sliding window calculations on numerical data.",
      "description_length": 473,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netmappings",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides direct access to character encoding conversion tables, enabling lookups for Unicode-to-encoding and encoding-to-Unicode transformations. It operates on string identifiers and returns structured mappings such as arrays of integers or custom `from_uni_list` variants. It is used internally to support encoding conversion routines in low-level text processing tasks.",
      "description_length": 384,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netasn1",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module decodes BER/DER-encoded ASN.1 data and manipulates ASN.1 values with support for primitive and constructed types like integers, strings, sequences, and sets. It works with strings and tagged string representations to parse headers, lengths, and contents of ASN.1 structures, handling implicit and explicit tagging through separate decoding steps. Concrete use cases include parsing X.509 certificates, decoding SNMP messages, and processing structured binary protocols requiring precise ASN.1 serialization.",
      "description_length": 519,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netchannels",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module implements object-oriented I/O channels with support for input and output operations across various data sources such as files, memory buffers, and network descriptors. It provides concrete functionality for reading and writing data with methods like `input_line`, `output`, and transactional handling via temporary files, working with types such as `in_obj_channel`, `out_obj_channel`, and memory-backed channels. Use cases include processing streaming data from a network socket, encoding/decoding data on the fly with filters, and managing temporary file I/O with rollback or commit semantics.",
      "description_length": 608,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netdate",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides date/time parsing, formatting, and localization utilities centered around timestamp values (seconds since epoch) and structured date records. It enables conversions between raw timestamps and human-readable date components, supports customizable format strings for localized output, and includes specialized functions for generating RFC-compliant date strings (e.g., for email headers or internet protocols). Typical applications include timezone-aware date normalization, ISO week calculations, and producing standardized timestamps for network services.",
      "description_length": 576,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netmime",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module processes MIME messages with support for constructing and manipulating MIME headers and bodies, including handling complex nested MIME structures. It operates on data types like `mime_header`, `mime_body`, and their read-only counterparts, with options to store bodies in memory or on disk. Concrete use cases include parsing and building email messages with attachments, handling multipart MIME content, and working with MIME-encoded headers and body parts.",
      "description_length": 470,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netencoding",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles text encoding and decoding operations for network protocols and data representation. It provides functions for Base64, Quoted-Printable, Q-encoding, URL encoding, and HTML entity escaping, working with strings and byte sequences. Use cases include encoding binary data for email transmission, preparing form data for URLs, decoding network payloads, and sanitizing text for HTML output.",
      "description_length": 406,
      "index": 18,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Neturl",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module enables parsing, constructing, modifying, and validating URLs with customizable syntax rules, supporting both absolute and relative forms. It operates on URL components like scheme, host, path, and query, using `url` and `url_syntax` types to enforce constraints, and integrates with system types like `Unix.inet_addr` for socket address interpretation. Common applications include handling scheme-specific rules (e.g., HTTP/FTP), normalizing paths, resolving relative URLs, converting file URLs to local paths, and debugging via top-level URL display.",
      "description_length": 564,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netstring_str",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides thread-safe regular expression operations compatible with `Str` syntax, enabling pattern parsing, matching, searching, and substitution on strings and bytes. It supports advanced usage like group extraction, case-insensitive matching, and split operations with customizable behavior, making it suitable for multi-threaded applications requiring reliable regex processing without global state interference. Specific use cases include text analysis, log parsing, and protocol implementation where concurrent regex operations on binary or textual data are needed.",
      "description_length": 581,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netasn1_encode",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module encodes ASN.1 values into BER format by appending the encoded bytes to a buffer. It operates directly on `Netasn1.Value.value` types, handling both primitive and constructed encodings with or without headers. Use it to serialize ASN.1 data structures for transmission or storage, such as encoding X.509 certificates or SNMP messages.",
      "description_length": 345,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netstring_tstring",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module defines operations for handling polymorphic string-like values, including conversion, length retrieval, and transformation across `string`, `bytes`, and `memory` types. It provides typed boxes to encapsulate values along with their associated operations, enabling safe manipulation of heterogeneous string representations. Concrete use cases include converting between string types, applying transformations like encoding changes, and working with memory-backed string data in a type-safe manner.",
      "description_length": 508,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netdb",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles reading and writing string-based database entries, supporting operations to check existence, set values, and manage checksums. It works directly with string keys and values, enabling persistent storage and retrieval through a loader function. Concrete use cases include caching computed strings, managing configuration data, or storing lightweight records in memory.",
      "description_length": 386,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netunichar",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module provides functions to convert Unicode code points to lowercase, uppercase, or titlecase. It operates directly on integer values representing Unicode characters. These conversions are useful when processing text where case normalization is required, such as in string comparison or text rendering pipelines.",
      "description_length": 318,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netascii_armor",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module handles parsing and decoding of ASCII-armored messages, supporting plain text, Base64, and OpenPGP formats. It works with MIME headers and bodies, both read-only and mutable variants, and uses an armor specification to identify and extract messages from an input channel. Concrete use cases include processing encrypted emails, decoding attachments, and extracting signed or armored content from network streams.",
      "description_length": 424,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netbuffer",
      "library": "gapi-ocaml.netstring-local",
      "description": "This module enables efficient manipulation of dynamic byte buffers through operations like appending, inserting, and modifying sequences of characters, bytes, or memory regions. It works with mutable buffers storing string, bytes, and tagged data representations, supporting in-place updates and memory-optimized patterns such as direct memory copying and polymorphic data handling. Typical applications include building or parsing binary data streams, implementing custom I/O routines, and managing variable-length byte sequences where frequent resizing and partial updates are required.",
      "description_length": 588,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Details.Args",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing formatted rule result arguments in the PageSpeed Insights API, specifically handling typed values like URLs, strings, integers, bytes, and durations. It provides operations to access and modify the `_type` and `value` fields, along with functions to serialize to and deserialize from JSON. It is used to interpret and display localized rule result details in performance reports.",
      "description_length": 433,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Result.Args",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing localized arguments in the results of PageSpeed Insights API (v1) rule evaluations. It includes fields for specifying the argument type (such as URL, INT_LITERAL, or DURATION) and its localized value. It supports parsing and rendering argument data to and from JSON, enabling integration with API responses and client-side processing of performance rule details.",
      "description_length": 416,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Result",
      "library": "gapi-ocaml",
      "description": "This module represents formatted result messages in PageSpeed Insights API responses, specifically for rule evaluation details tied to URL blocks. It provides structured access to localized message formats and their dynamic arguments, enabling precise extraction and rendering of performance optimization insights. Use this module to process and display actionable recommendations, such as resource optimization savings, from API results.",
      "description_length": 438,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls.Details",
      "library": "gapi-ocaml",
      "description": "This module represents formatted details of URL performance rule results in the PageSpeed Insights API, containing a format string and a list of typed arguments. It supports operations to access and modify the `args` and `format` fields, render the structured data into JSON, and parse JSON back into the data model. It is used to present localized, parameterized performance diagnostics such as resource size overhead or loading inefficiencies.",
      "description_length": 445,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Header.Args",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing formatted rule result arguments in the PageSpeed Insights API, specifically for URL block headers. It includes fields for the argument type (such as URL or INT_LITERAL) and its localized value, along with functions to access and modify these fields. The module supports JSON serialization and deserialization, enabling integration with API responses and client-side rendering of rule metadata.",
      "description_length": 447,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.ClientSpecificActorInfo.YoutubeActorInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the YouTube-specific actor information for a Google+ activity, specifically capturing the `channelId` of the associated YouTube channel. It provides functions to access and modify the channel ID using a lens, create an empty instance, and serialize or deserialize the data to and from JSON. This is used when processing Google+ API activities that involve YouTube actors, enabling integration with YouTube's channel system.",
      "description_length": 443,
      "index": 32,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Urls",
      "library": "gapi-ocaml",
      "description": "This module structures performance analysis results for individual URLs, including a format string and arguments for rendering actionable insights. It works with lists of `Details` records and `Result` values to represent diagnostic messages and their parameters. Use it to extract and display localized recommendations, such as optimization savings or loading inefficiencies, from PageSpeed Insights API responses.",
      "description_length": 415,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks.Header",
      "library": "gapi-ocaml",
      "description": "This module represents formatted rule result headers in the PageSpeed Insights API, containing a format string and a list of localized arguments. It provides functions to access and modify the format string and arguments, as well as to serialize and deserialize the structure to and from JSON. It is used to generate user-readable rule result messages with dynamic content based on specific URL block analysis outcomes.",
      "description_length": 419,
      "index": 34,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Thumbnails.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an image thumbnail with fields for height, width, URL, and media type. It provides lenses to access and modify individual fields, functions to parse and render the structure from or to JSON data, and an empty value for initialization. It is used to handle image metadata in Google+ API activities, particularly for processing and serializing thumbnail information attached to posts.",
      "description_length": 432,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults.UrlBlocks",
      "library": "gapi-ocaml",
      "description": "This module structures performance analysis results for URL blocks in the PageSpeed Insights API, combining a header with a list of URL-specific details. It processes `t` records containing a `Header.t` and an optional list of `Urls.t`, supporting JSON serialization and deserialization. Use it to display grouped performance diagnostics for specific page resources, such as identifying multiple inefficient URLs under a single optimization rule.",
      "description_length": 446,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.FullImage",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an image attachment within a Google+ activity, with fields for the image's height, width, media type, and URL. It provides functions to access and modify these fields using lenses, along with operations to serialize and deserialize the structure to and from JSON. It is used to handle full-size images attached to Google+ posts when interacting with the Google+ API v1.",
      "description_length": 419,
      "index": 37,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.SendAs.SmimeInfo",
      "library": "gapi-ocaml",
      "description": "This module manages S/MIME configurations for send-as aliases in a Gmail account. It supports operations to delete, retrieve, upload, list, and set default S/MIME configurations, working with data types such as `SmimeInfo` and `ListSmimeInfoResponse`. Concrete use cases include configuring email signing and encryption settings for a user's send-as address.",
      "description_length": 358,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload.Protocols.Simple",
      "library": "gapi-ocaml",
      "description": "This module defines a simple media upload protocol with a boolean flag for multipart support and a URI path for uploading. It provides accessors to retrieve or modify these fields, an empty value for initialization, and functions to serialize and deserialize instances to and from JSON. It is used to configure media upload endpoints in API discovery documents, specifying how clients should interact with upload paths.",
      "description_length": 419,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.Verification",
      "library": "gapi-ocaml",
      "description": "This module defines a verification structure used to represent ad-hoc verification data in activity streams. It includes fields for one-time or manual verification processes, along with functions to access and manipulate the data. Commonly used when parsing or rendering JSON payloads for Google+ API interactions involving actor verification.",
      "description_length": 343,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Auth.Oauth2.Scopes",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates OAuth2 scope descriptions within the API Discovery Service data model. It provides operations to create an empty scope, access and modify its description field, and convert between scope values and JSON representations. It is used to handle per-scope metadata when processing OAuth2 authentication configurations in API discovery documents.",
      "description_length": 376,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.ClientSpecificActorInfo",
      "library": "gapi-ocaml",
      "description": "This module handles client-specific actor information for Google+ activities involving YouTube actors. It provides access to YouTube actor data through a lens, supports creating empty instances, and serializes or deserializes data to and from JSON. It is used to integrate Google+ activity data with YouTube channel information, specifically by capturing and manipulating YouTube channel IDs.",
      "description_length": 392,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable.Rows.C",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a cell in a Google Analytics API v3 data table. It includes operations to create an empty cell, access and modify its value, and convert it to and from JSON format. It is used to store individual cell values within a row of an Analytics data response.",
      "description_length": 305,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling image attachments within an activity object in the Google+ API v1. It provides accessors to retrieve and modify image properties such as height, type, URL, and width using lenses, and supports serialization and deserialization to and from JSON data models. It is used to represent and manipulate embedded images in Google+ activity streams.",
      "description_length": 402,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload.Protocols.Resumable",
      "library": "gapi-ocaml",
      "description": "This module defines the resumable media upload protocol configuration for API endpoints. It provides accessors to retrieve the upload path and determine if multipart media is supported, along with functions to serialize and deserialize the configuration to and from JSON. It is used to configure and manage resumable uploads in APIs that support this feature, such as Google's API Discovery Service.",
      "description_length": 399,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Embed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing embedded links within Google+ API activities, with fields for the media type and URL. It provides functions to create an empty embed object, render it into JSON format, and parse JSON data into an embed object. This module is used to handle link attachments in Google+ activity streams, such as embedding videos or articles shared in a post.",
      "description_length": 395,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.ClientSpecificActorInfo.YoutubeActorInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the YouTube-specific actor information for a comment in the Google+ API, specifically capturing the `channelId` of the actor's YouTube channel. It provides functions to access and modify the channel ID, create an empty instance, and serialize or deserialize the data to and from JSON. This is used when retrieving or constructing comment data that includes details about YouTube users participating in Google+ discussions.",
      "description_length": 442,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments.Thumbnails",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for thumbnail attachments in Google+ API activities, including fields for description, image metadata, and URL. It provides lenses to access and modify individual components, functions to serialize and deserialize the structure to and from JSON, and an empty value for initialization. It is used to process and store thumbnail information linked to Google+ posts.",
      "description_length": 400,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing thumbnail images of actors in Google+ activities. It includes functions to parse and render image data from JSON, and provides access to the image URL. It is used to handle actor profile thumbnails within the Google+ API data model.",
      "description_length": 286,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.ClientSpecificActorInfo.YoutubeActorInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing YouTube actor information within a Google+ activity. It includes functions to access the YouTube channel ID, create an empty instance, and convert the data to and from JSON format. It is used to handle YouTube-specific actor details when processing Google+ API activities involving user interactions tied to YouTube channels.",
      "description_length": 375,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Plusoners",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the people who +1'd a Google+ activity, with fields for the URL to the collection and the total count. It provides functions to parse and render this structure from and to JSON, along with an empty value and lenses for accessing the fields. It is used to retrieve and process +1 data from the Google+ API, such as displaying the number of +1s or linking to the list of users.",
      "description_length": 425,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.ClientSpecificActorInfo",
      "library": "gapi-ocaml",
      "description": "This module handles YouTube-specific actor information within Google+ comments, focusing on the `channelId` of YouTube users. It offers functions to access, modify, and serialize the channel ID, as well as create empty instances and parse or render JSON data. It is used when processing or constructing comment data that includes YouTube user details in the context of Google+ API interactions.",
      "description_length": 394,
      "index": 52,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.DirectoryList.Items.Icons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon URLs for API directory entries, specifically providing access to 32x32 and 16x16 icon URLs through lenses. It works with the `t` record type containing two string fields and integrates with JSON data models for serialization and deserialization. It is used to handle icon metadata when processing API discovery documents.",
      "description_length": 362,
      "index": 53,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Mcf.SamplingLevel",
      "library": "gapi-ocaml",
      "description": "This module defines sampling levels for Google Analytics API queries, controlling the trade-off between response speed and accuracy. It provides `to_string` and `of_string` functions to convert between string representations and the enumerated sampling level types. Use this when specifying sampling preferences in API requests to manage data precision and performance.",
      "description_length": 369,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgColorType",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing color filters for image searches, including `Default`, `Color`, `Gray`, and `Mono`. It provides `to_string` and `of_string` functions for converting between the type and string representations. This enables specifying image color constraints when performing restricted site searches via the CustomSearch API.",
      "description_length": 360,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable.Rows",
      "library": "gapi-ocaml",
      "description": "This module represents a row in a Google Analytics API v3 data table, consisting of a list of cells. It provides operations to create an empty row, access and modify its cells via a lens, and convert the row to and from JSON format. It is used to process and manipulate individual rows of data returned from Google Analytics API queries.",
      "description_length": 337,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages.Format",
      "library": "gapi-ocaml",
      "description": "This module defines message format options for retrieving Gmail messages, supporting operations to convert between string representations and enumerated types. It works with the `t` type, which includes variants like `Full`, `Metadata`, and `Raw`, specifying the level of detail returned in API responses. Concrete use cases include selecting message content detail when fetching emails or configuring API requests for partial data retrieval.",
      "description_length": 442,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.ContentHints.Thumbnail",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling thumbnail information in Google Drive API v3, specifically for file content hints. It provides operations to create an empty thumbnail, extract and modify its image and MIME type fields using lenses, and serialize or deserialize the thumbnail to and from JSON. It is used to manage thumbnail metadata for files, such as preview images and their associated content types, when interacting with the Drive API.",
      "description_length": 457,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema.Variant.Map",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with JSON schema variant maps in the API Discovery Service data model. It provides functions to create an empty variant map, access and modify its `type_value` and `_ref` fields using lenses, and convert between variant map instances and JSON data representations. Concrete use cases include parsing and rendering API schema definitions from JSON responses or constructing schema variants programmatically for API client generation.",
      "description_length": 475,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Adunits.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in an AdSense account. It works with AdSense data types such as `CustomChannels` and requires identifiers like `accountId`, `adClientId`, and `adUnitId`. A concrete use case is fetching custom channel data for reporting or managing ad unit categorization within an AdSense publisher's inventory.",
      "description_length": 404,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling actor profile images in the Google+ API data model. It provides access to the image URL and supports serialization and deserialization to and from JSON data. It is used to manage profile photo URLs, including resizing parameters, within activity data.",
      "description_length": 313,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Cover.CoverInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for handling cover image positioning in a banner layout. It provides accessors for `leftImageOffset` and `topImageOffset` using lenses, along with functions to serialize and deserialize the data to and from JSON. It is used to adjust the visual placement of cover images in user interface layouts based on the Google+ API v1 data model.",
      "description_length": 383,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ResponseValueRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering cell values in Google Sheets API responses, including formatted values, unformatted values, and formulas. It works with string representations of these options for API requests. Use cases include specifying how to retrieve cell data, such as getting currency-formatted strings or raw formula expressions.",
      "description_length": 346,
      "index": 63,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable.Cols",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with column metadata in a Google Analytics API v3 data table. It provides functions to create an empty column, access and modify column fields (`id`, `label`, `_type`), and convert between column values and JSON representations. It is used to process and structure analytics data returned from API responses.",
      "description_length": 351,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.ForwardingAddresses",
      "library": "gapi-ocaml",
      "description": "This module manages forwarding addresses for a Gmail user account, providing operations to create, delete, retrieve, and list forwarding email addresses. It works with the `ForwardingAddress` type and interacts with the Gmail API to handle address verification and ownership confirmation. Concrete use cases include setting up email forwarding, verifying ownership of a forwarding address, and managing multiple forwarding destinations for a mailbox.",
      "description_length": 450,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience.StateBasedAudienceDefinition.ExcludeConditions",
      "library": "gapi-ocaml",
      "description": "This module defines the conditions for excluding users from a remarketing audience based on state transitions in Google Analytics. It includes operations to specify the exclusion duration (temporary or permanent) and the segment condition that triggers removal. These definitions are used when configuring audience exclusion rules in API requests, ensuring precise control over audience membership.",
      "description_length": 398,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.Rows.ConversionPathValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a conversion path value in Google Analytics API v3, with fields for interaction type and node value. It provides operations to create an empty instance, render it to JSON, and parse JSON into this structure. Use this to process and manipulate conversion path data returned by the API, such as tracking user interactions like clicks or impressions along with their sources or mediums.",
      "description_length": 433,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.Lr",
      "library": "gapi-ocaml",
      "description": "This module defines a set of language-specific search filters as a variant type and provides bidirectional conversion between these filters and string representations. It is used to restrict search results to specific languages by encoding them in API requests. For example, setting `lr` to `Lang_fr` ensures search results are filtered to French-language content.",
      "description_length": 364,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Author.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling comment author avatar URLs in the Blogger API v2. It provides an avatar URL field, an empty constructor, and functions to serialize and deserialize avatar data to and from JSON. This module is used to manage image URLs associated with comment authors when interacting with Blogger API endpoints.",
      "description_length": 357,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Cover.CoverPhoto",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling cover photo metadata in the Google+ API v1 data model. It provides accessors for the height, URL, and width fields of a cover photo, along with functions to serialize and deserialize the data to and from JSON. It is used to manage the image properties of a user's cover photo, such as retrieving dimensions or constructing JSON payloads for API requests.",
      "description_length": 416,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.ImageMediaMetadata.Location",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for geographic coordinates embedded in image metadata, with fields for altitude, latitude, and longitude. It provides functions to create an empty location, render it into JSON, and parse JSON into a location record. These operations support handling geolocation data extracted from images in the Drive API.",
      "description_length": 344,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgDominantColor",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing dominant image colors and provides bidirectional conversion between the type and string values. It supports filtering image search results by color in the CustomSearch API. Use cases include restricting search results to specific color categories like \"blue\" or \"white\" when querying image repositories.",
      "description_length": 355,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults.RuleResults",
      "library": "gapi-ocaml",
      "description": "This module structures performance optimization results from the PageSpeed Insights API, focusing on rule-specific impacts and associated URLs. It processes `t` records containing a localized rule name, a numeric impact score, and a list of URL blocks with diagnostic details. Use it to analyze and display actionable performance insights, such as identifying which optimization rules have the highest impact and which URLs require specific fixes.",
      "description_length": 447,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Resharers",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling resharer data in Google+ API activities. It provides accessors for the resharers' collection URL and total count, along with functions to serialize and deserialize the data to and from JSON. It is used to retrieve and process the list of users who reshared a specific activity.",
      "description_length": 339,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.SearchType",
      "library": "gapi-ocaml",
      "description": "This module defines a polymorphic variant type `t` with two constructors, `Default` and `Image`, representing search types for a restricted site search. It provides `to_string` and `of_string` functions for converting between the variant type and string representations. This module is used to specify the type of search (e.g., image search) when performing queries against a restricted set of websites via the CustomSearch API.",
      "description_length": 428,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ValueInputOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for how input values are interpreted when updating cells in a Google Sheet. It includes variants for raw input (`RAW`) and user-entered input (`USER_ENTERED`), which determine whether values are stored as-is or parsed according to Google Sheets UI rules. These options are used when writing data to a spreadsheet to control how strings, numbers, and dates are handled.",
      "description_length": 396,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling actor profile images in Google+ API comments. It provides access to the image URL, supports parsing from and rendering to JSON data models, and allows creating empty image placeholders. It is used to retrieve and manipulate profile image URLs with optional resizing parameters in comment data from the Google+ API.",
      "description_length": 376,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload.Protocols",
      "library": "gapi-ocaml",
      "description": "This module defines a composite media upload protocol configuration that combines both resumable and simple upload methods. It provides accessors to retrieve or modify the resumable and simple protocol fields, along with functions to serialize and deserialize the configuration to and from JSON. It is used to specify supported media upload protocols in API discovery documents, enabling clients to determine how to handle uploads for specific endpoints.",
      "description_length": 454,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.Filters",
      "library": "gapi-ocaml",
      "description": "This module manages message filters for a Gmail user, providing operations to create, delete, get, and list filters. It works with `GapiGmailV1Model.Filter.t` and `GapiGmailV1Model.ListFiltersResponse.t` data structures, representing individual filters and filter lists respectively. Use this module to automate email management tasks such as setting up custom message handling rules programmatically.",
      "description_length": 401,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.Name",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a person's name with `familyName` and `givenName` fields, along with lenses for accessing and modifying those fields. It provides functions to serialize a name to JSON format and deserialize JSON data back into a name structure. It is used when handling actor information in Google+ API activities, such as extracting or formatting user names from API responses.",
      "description_length": 416,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Attachments",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing attachments in Google+ API activities, supporting fields like content, display name, embedded links, images, and thumbnails. It provides lenses to access and modify individual properties, along with functions to serialize and deserialize the structure to and from JSON. It is used to process and manage rich media attachments such as photos, videos, and articles shared in Google+ posts.",
      "description_length": 441,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Actor",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing actors in Google+ activities, including their identity, display name, profile image, and verification status. It provides lenses to access and modify individual fields, functions to parse and render actor data from JSON, and an empty actor template. It is used to model the original actor in Google+ activity streams, particularly when integrating with YouTube actor data and handling profile metadata.",
      "description_length": 456,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.MajorDimension",
      "library": "gapi-ocaml",
      "description": "This module defines an enumeration for specifying the major dimension of a Google Sheets range, either rows or columns. It includes functions to convert between string representations and the enumerated type. Use this module when setting or reading the dimension parameter in API requests to control whether operations target rows or columns.",
      "description_length": 342,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Ga.SamplingLevel",
      "library": "gapi-ocaml",
      "description": "This module defines sampling levels for Google Analytics API queries, controlling the trade-off between response speed and accuracy. It provides enumerated values for `Default`, `Faster`, and `HigherPrecision` sampling options, along with conversion functions to and from string representations. Concrete use cases include selecting appropriate sampling levels when querying large datasets to optimize performance or precision.",
      "description_length": 427,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgSize",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing image size filters for search queries, including values like `Large`, `Medium`, and `Xlarge`. It provides `to_string` and `of_string` functions for converting between string representations and the enumerated type. This module is used to specify image size criteria when performing restricted site searches via the CustomSearch API.",
      "description_length": 384,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.InsertDataOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for inserting data into Google Sheets, specifically controlling how new data interacts with existing content. It supports operations like overwriting existing cells or inserting new rows to accommodate data. These options are used when writing data to ensure the desired sheet behavior during updates.",
      "description_length": 329,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.ImgType",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type `t` representing image types for restricting search results in the CustomSearch API. It includes functions `to_string` and `of_string` for converting between the type and string representations. Use this type to specify image categories such as `photo`, `face`, or `lineart` when performing image searches restricted to specific sites.",
      "description_length": 374,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Customchannels.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units associated with a specific custom channel in an AdSense account. It works with AdSense data types such as `AdUnits`, `Session`, and query parameters like `accountId`, `adClientId`, and `customChannelId`. A concrete use case is fetching active or inactive ad units for reporting or inventory management within a publisher's AdSense setup.",
      "description_length": 400,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.DateTimeRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering date and time values when reading from or writing to Google Sheets. It supports converting date-time fields into either serial numbers or formatted strings based on the spreadsheet's locale. Use cases include controlling how date and time data is interpreted during data extraction or population of spreadsheets.",
      "description_length": 354,
      "index": 89,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Threads.Format",
      "library": "gapi-ocaml",
      "description": "This module defines thread format options for Gmail API requests, supporting conversion between string representations and enumerated types. It works with the `t` type, which includes variants like `Default`, `Full`, `Metadata`, and `Minimal`. Concrete use cases include specifying the level of detail returned when retrieving email threads, such as fetching only metadata or the full content of a thread.",
      "description_length": 405,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.ContentAdsSettings.BackupOption",
      "library": "gapi-ocaml",
      "description": "This module defines the backup option settings for an AdSense ad unit's content ads, supporting three configuration types: blank display, color fill, or fallback URL. It provides accessors (`color`, `_type`, `url`) to manipulate individual fields, and includes functions to serialize (`render`) and deserialize (`parse`) these settings from JSON. It is used to configure fallback behavior for ad units when no ad is available to serve.",
      "description_length": 435,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.SiteSearchFilter",
      "library": "gapi-ocaml",
      "description": "This module defines a type-safe filter for including or excluding specific sites in a custom search query. It works with string values representing site domains or URLs and supports conversion between string representations and the enumerated type `t` with cases `Default`, `E` (exclude), and `I` (include). It is used to construct site-restricted search requests directly within the CustomSearch API integration.",
      "description_length": 413,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.ClientSpecificActorInfo",
      "library": "gapi-ocaml",
      "description": "This module handles client-specific actor information for YouTube within Google+ activities. It provides access to YouTube actor details via the `youtubeActorInfo` field, along with functions to create an empty instance, serialize to JSON, and parse from JSON. It is used specifically to manage YouTube channel data when processing Google+ API interactions involving YouTube-linked actors.",
      "description_length": 389,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor.Verification",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing verification information in Google+ API activities. It includes fields for ad-hoc verification strings and provides functions to create, render, and parse verification data to and from JSON. It is used when processing or constructing activity streams that include actor verification details.",
      "description_length": 345,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ResponseDateTimeRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering date and time values when retrieving data from Google Sheets. It supports converting date-time values to either serial numbers or formatted strings based on the spreadsheet's locale. Use cases include handling date-time data consistently when exporting or processing Sheets content programmatically.",
      "description_length": 341,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.Safe",
      "library": "gapi-ocaml",
      "description": "This module defines safe search filtering levels for restricting search results to specific websites. It provides enumerated values for safe search settings (`Default`, `High`, `Medium`, `Off`) and converts them to and from string representations. These values configure the CustomSearch API to filter results based on site restrictions, enabling precise control over search scope and content filtering.",
      "description_length": 403,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict.Filter",
      "library": "gapi-ocaml",
      "description": "This module defines a filter type for controlling duplicate content filtering in site-restricted searches. It provides `to_string` and `of_string` functions to convert between string representations and the enumerated filter values `Default`, `V0`, and `V1`. Use this module when configuring search requests to explicitly enable or disable duplicate content filtering.",
      "description_length": 368,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service.UserinfoResource.V2.Me",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` function to retrieve user profile information from Google's OAuth2 API, including details like user ID, email, and profile picture. It operates on `GapiConversation.Session.t` and returns a `Userinfoplus.t` record along with the updated session. Use this to fetch authenticated user data after successful OAuth2 authorization.",
      "description_length": 357,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor.Verification",
      "library": "gapi-ocaml",
      "description": "This module defines a verification structure used to represent one-time or manual verification processes within a comment actor context. It includes fields for storing verification details, along with functions to construct, render, and parse verification data in JSON format. It is specifically used when handling comment data that includes actor verification information from the Google+ API.",
      "description_length": 394,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Drafts.Format",
      "library": "gapi-ocaml",
      "description": "This module defines and converts between format options for retrieving Gmail drafts, such as `Full`, `Raw`, and `Metadata`. It works with string representations of draft formats and the enumerated type `t`. Use this module when specifying or parsing draft retrieval formats in API requests to Gmail.",
      "description_length": 299,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Customchannels.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units within a specific custom channel for an AdSense account. It works with AdSense data types such as `AdUnits`, `Session`, and identifiers like `accountId`, `adClientId`, and `customChannelId`. A concrete use case is fetching paginated ad unit data for reporting or inventory management in an AdSense publisher tool.",
      "description_length": 376,
      "index": 101,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages.InternalDateSource",
      "library": "gapi-ocaml",
      "description": "This module defines and converts between different sources for message internal dates in the Gmail API, such as using the default method, the message's Date header, or the received time. It works with a variant type representing these date sources and provides bidirectional conversion between this type and strings. Use this module when specifying how to determine the internal date of a message when interacting with Gmail's message handling endpoints.",
      "description_length": 454,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Auth.Oauth2",
      "library": "gapi-ocaml",
      "description": "This module manages OAuth2 authentication configurations within API discovery documents. It provides operations to define and manipulate a list of OAuth2 scopes, where each scope is a key-value pair associating a scope identifier with its metadata. The module supports creating empty OAuth2 configurations, accessing and updating scopes, and converting configurations to and from JSON representations for serialization and parsing.",
      "description_length": 431,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings.SendAs",
      "library": "gapi-ocaml",
      "description": "This module manages send-as aliases for Gmail accounts, providing operations to create, delete, retrieve, list, update, and verify aliases. It works with `SendAs` and `ListSendAsResponse` data types to configure email aliases, including SMTP validation, ownership verification, and HTML signature handling. Concrete use cases include setting up custom \"from\" addresses for email sending, managing alias verification status, and updating alias configurations with SMTP settings or signatures.",
      "description_length": 491,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Ga.Output",
      "library": "gapi-ocaml",
      "description": "This module defines output formats for Google Analytics API responses, including `DataTable` for Google Charts integration and `Json` for standard JSON output. It provides conversion functions `to_string` and `of_string` to map between string representations and the enumerated output types. Concrete use cases include selecting response formats when querying analytics data for visualization or programmatic processing.",
      "description_length": 420,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.UrlDestinationDetails.Steps",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a step in a URL destination goal within the Google Analytics API v3. It includes fields for the step's name, number, and URL, along with lenses for accessing and modifying these fields. The module provides functions to serialize the step to JSON and deserialize it from JSON, enabling integration with API requests and responses.",
      "description_length": 379,
      "index": 106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.About.AdditionalRoleInfo.RoleSets",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission role sets, specifically handling a primary role and a list of additional roles. It provides operations to access and modify these roles using lenses, construct empty role sets, and convert between JSON data models and role set structures. Concrete use cases include parsing and rendering role information from the Drive API for managing file access permissions.",
      "description_length": 408,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Author.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling post author avatars in the Blogger API v2. It provides an avatar URL field, along with functions to construct an empty avatar, render it to JSON, and parse it from JSON. It is used to manage author image data when retrieving or updating blog post metadata through the Blogger API.",
      "description_length": 342,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Page.Author.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling page author avatar images in the Blogger API v2 data model. It provides an avatar URL field, an empty image constructor, and functions to serialize and deserialize image data to and from JSON. It is used to manage author profile images when interacting with Blogger API endpoints that require or return author metadata.",
      "description_length": 381,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object.Replies",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling comment replies to a Google+ activity, including parsing and rendering reply data from JSON. It works with the `t` type, which contains a `selfLink` URL and `totalItems` count. Use this module to retrieve and manipulate comment metadata, such as updating reply counts or accessing comment threads via their link.",
      "description_length": 356,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.EventDetails.EventConditions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates event conditions for Google Analytics goals, using a record type that includes comparison and match parameters. It supports operations to create, render, and parse event condition data to and from JSON. Use cases include configuring goal tracking based on event attributes like category, action, or label with specific matching rules.",
      "description_length": 370,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Adunits.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve all custom channels associated with a specific ad unit in an AdSense account. It operates on AdSense data types including account identifiers, ad client IDs, ad unit IDs, and custom channel collections. Use this module to audit or manage ad unit placements within custom channels for revenue tracking and content categorization.",
      "description_length": 381,
      "index": 112,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Reports.Saved",
      "library": "gapi-ocaml",
      "description": "This module provides operations to list saved reports and generate reports from saved configurations in an AdSense account. It works with AdSense account identifiers and saved report IDs to retrieve and execute stored reporting queries. Concrete use cases include automating report generation for specific account segments and retrieving performance metrics across multiple saved report templates.",
      "description_length": 397,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.History.HistoryTypes",
      "library": "gapi-ocaml",
      "description": "This module defines types and conversion functions for Gmail API history records. It supports transforming history event types like `LabelAdded` or `MessageDeleted` to and from string representations. Use this module when processing mailbox change history events retrieved from the Gmail API.",
      "description_length": 292,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values.ValueRenderOption",
      "library": "gapi-ocaml",
      "description": "This module defines options for rendering cell values in Google Sheets API responses, including formatted values, unformatted values, and raw formulas. It works with string representations of these options for API requests. Use cases include specifying how to retrieve computed values or formulas from spreadsheet cells when making read operations.",
      "description_length": 348,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages.Attachments",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` operation to retrieve a specific message attachment from a user's mailbox by ID, message ID, and user ID. It works with Gmail message attachments represented as `MessagePartBody` structures. Use this module to download individual attachments from emails in a user's Gmail account.",
      "description_length": 311,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.ImageMediaMetadata.Location",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for geographic coordinates, including latitude, longitude, and altitude, all as float values. It provides functions to parse and render this data from and to JSON format, ensuring compatibility with Google Drive API v3. Use this module when handling image metadata that includes GPS location data retrieved from or sent to Google Drive.",
      "description_length": 373,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.DataTable",
      "library": "gapi-ocaml",
      "description": "This module represents a data table from the Google Analytics API v3 response, containing a list of column definitions and rows of data. It provides functions to create an empty table, access and modify columns and rows via lenses, and convert the table to and from JSON format. It is used to process and transform analytics data retrieved from API queries into structured formats for further analysis or display.",
      "description_length": 413,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines the permissions associated with a Google Analytics view (profile), specifically capturing the effective permissions a user has. It works with the `t` type, which includes a list of permission strings, and provides operations to access, render, and parse these permissions from JSON data. Concrete use cases include determining user access levels for a profile and serializing/deserializing permission data when interacting with the Google Analytics API.",
      "description_length": 473,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Cover",
      "library": "gapi-ocaml",
      "description": "This module handles cover metadata for a person in the Google+ API v1 data model. It combines cover photo and layout information, providing accessors for `coverInfo`, `coverPhoto`, and `layout` fields using lenses, along with functions to serialize and deserialize the data to and from JSON. It is used to manage and position a user's cover image in UI layouts, and construct API payloads with correct cover data.",
      "description_length": 413,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.ContentAdsSettings",
      "library": "gapi-ocaml",
      "description": "This module defines the content ads settings for an AdSense ad unit, including backup behavior, size, and type configurations. It provides accessors to manipulate individual fields (`backupOption`, `size`, `_type`) and functions to serialize (`render`) and deserialize (`parse`) these settings from JSON. It is used to manage ad unit display properties and fallback behavior when no ad is available.",
      "description_length": 399,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.JobsResource.Projection",
      "library": "gapi-ocaml",
      "description": "This module defines projection options for job resources in the BigQuery API, controlling the amount of data returned in responses. It works with the `t` type, which includes `Default`, `Full`, and `Minimal` variants, and provides conversions to and from string representations. Use this module when specifying the level of detail needed for job data retrieval, such as fetching full job configurations or minimal metadata.",
      "description_length": 423,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive.Restrictions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates restrictions applied to Team Drives in the Google Drive API v3. It includes fields such as `copyRequiresWriterPermission`, `domainUsersOnly`, and `teamMembersOnly` to control access and actions like copying, downloading, and sharing. These restrictions are used when configuring or updating Team Drive settings to enforce organizational policies.",
      "description_length": 382,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.App.Icons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon data for applications in the Drive API v2. It provides accessors for the icon's category, URL, and size, along with functions to serialize and deserialize icon data to and from JSON. It is used to represent and process icons associated with Drive applications and files.",
      "description_length": 311,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Permission.TeamDrivePermissionDetails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the `TeamDrivePermissionDetails` structure, representing permissions within a Google Drive team drive. It provides lenses to access and modify fields such as `teamDrivePermissionType`, `inheritedFrom`, `role`, and `inherited`, along with functions to serialize and deserialize these details to JSON. It is used to manage fine-grained access control information for team drives in Google Drive API operations.",
      "description_length": 444,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.CustomMetrics",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage custom metrics in Google Analytics accounts, including retrieving, creating, listing, and updating metrics. It works with `CustomMetric.t` and `CustomMetrics.t` data structures, representing individual metrics and collections. Use cases include tracking custom data such as user-defined events or business-specific KPIs across web properties.",
      "description_length": 384,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Drafts",
      "library": "gapi-ocaml",
      "description": "This module manages Gmail drafts through operations like creation, deletion, retrieval, listing, sending, and updating. It works with draft identifiers, user IDs, and draft content models to interact directly with a user's mailbox. Concrete use cases include saving unfinished emails as drafts, sending saved drafts, or querying draft metadata and content.",
      "description_length": 356,
      "index": 127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.About.ExportFormats",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling export format mappings in the Drive API. It includes a type `t` representing a source content type and its associated target conversion types, along with functions to manipulate and serialize these mappings. Use cases include configuring file type conversions and managing supported export formats in Drive integrations.",
      "description_length": 384,
      "index": 128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.Capabilities",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage and query user permissions for Google Drive files, focusing on boolean capability flags that control actions like editing, copying, moving, and applying restrictions. It works with a record type representing these capabilities, offering lenses to access and modify individual flags, as well as JSON serialization for API interactions. Use cases include enforcing access control policies, validating user actions, and synchronizing permission states with Drive's API.",
      "description_length": 508,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.About.TeamDriveThemes",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for working with Team Drive themes in the Google Drive API v3. It includes fields for theme identifiers, background images, and color representations, along with functions to parse and render these themes from JSON data. It is used to customize and retrieve visual settings for Team Drives in Google Drive.",
      "description_length": 357,
      "index": 130,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.VideoMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing video metadata, including width, height, and duration in milliseconds. It provides functions to access and modify these fields using lenses, render the data as JSON, and parse it from JSON. It is used to handle video-specific metadata returned by the Google Drive API when retrieving file properties.",
      "description_length": 350,
      "index": 131,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReport.CloudStorageDownloadDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Cloud Storage download details in Google Analytics API responses. It provides accessors for bucket and object identifiers, along with functions to serialize and deserialize the data to and from JSON. It is used to retrieve and process report data stored in Google Cloud Storage.",
      "description_length": 340,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.PageStats",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for analyzing web page performance metrics. It includes fields for measuring resource sizes (CSS, HTML, JavaScript, images) and counts (total resources, hosts, static resources). Functions allow parsing and rendering JSON data models to and from these structures, enabling detailed performance analysis and optimization insights.",
      "description_length": 380,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.MakeMonadCombinators.Infix",
      "library": "gapi-ocaml",
      "description": "Implements infix operators for monadic composition, providing `>>=` for chaining monadic values with functions and `>>` for sequencing monadic actions. Works with any monad conforming to the `m` type constructor. Enables concise expression of sequential computations where the output of one action feeds into the next, such as composing API calls with error handling or state transformations.",
      "description_length": 392,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience.AudienceDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring audience inclusion conditions in Google Analytics remarketing. It provides functions to create an empty audience definition, set inclusion conditions using a lens, and convert definitions to or from JSON data models. It is used to specify which users qualify for inclusion in a remarketing audience based on defined criteria.",
      "description_length": 390,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.ProfileFilterLinks",
      "library": "gapi-ocaml",
      "description": "This module manages profile filter links in Google Analytics accounts, providing functions to create, retrieve, update, and delete individual links, as well as list all links for a given profile. It operates on `ProfileFilterLink` and `ProfileFilterLinks` data structures, which represent single and multiple filter link entries, respectively. Use cases include configuring data filtering rules for analytics profiles and managing link associations between profiles and filters within a Google Analytics account.",
      "description_length": 512,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgDominantColor",
      "library": "gapi-ocaml",
      "description": "This module defines a set of color values used to filter image search results by dominant color. It includes conversions between color values and their string representations. Concrete use cases include specifying color constraints in image search queries, such as restricting results to \"blue\" or \"white\" dominant images.",
      "description_length": 322,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.CommentsResource.SortOrder",
      "library": "gapi-ocaml",
      "description": "This module defines a polymorphic variant type for specifying comment sort order in the Google+ API, with values representing default, ascending (oldest first), and descending (newest first) sorting. It includes functions to convert between the variant type and string representations. This enables API clients to clearly set or retrieve the sorting behavior when fetching comments.",
      "description_length": 382,
      "index": 138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.History",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve mailbox change history from the Gmail API, supporting filters like `historyTypes`, `labelId`, and `startHistoryId`. It works with mailbox history records, handling data types such as message additions, deletions, and label changes. Use it to track and process user mailbox activity, such as detecting new messages or label modifications since a specific history point.",
      "description_length": 421,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdsenseReportsGenerateResponse.Headers",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling report headers in the AdSense Management API. It provides accessors to retrieve and modify the currency, name, and type fields of a header, along with functions to serialize and deserialize header data to and from JSON. It is used to process and generate report metadata returned by the API, such as column names and their associated metric types.",
      "description_length": 409,
      "index": 140,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person.Emails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates email address data within the Google+ API v1 model. It provides accessors for the type and value of an email address, along with functions to serialize and deserialize email data to and from JSON. It is used to handle user email information retrieved or sent through the Google+ API.",
      "description_length": 319,
      "index": 141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a link to a Google Analytics view (profile) associated with a goal. It includes fields for the hyperlink reference (`href`) and the resource type (`_type`), which is fixed to \"analytics#profile\". The module provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure.",
      "description_length": 369,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.Screenshot",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling screenshots returned by the PageSpeed Insights API, including base64-encoded image data, dimensions, and MIME type. It provides lenses for accessing and modifying individual fields, functions to parse and render the data in JSON format, and an empty value for initialization. Use this module when processing or displaying performance screenshots from API responses.",
      "description_length": 415,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Organizations",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing organizational information associated with a person in the Google+ API. It includes fields such as organization name, role title, employment dates, and type, along with lenses for accessing and modifying individual fields. It supports parsing and rendering organization data to and from JSON for API interactions.",
      "description_length": 377,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiment.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a Google Analytics view (profile) in the context of experiments. It includes fields for the link's URL (`href`) and its type, which is always `\"analytics#profile\"`, both of which are read-only. The module provides operations to access these fields via lenses, create an empty instance, and serialize or deserialize the structure to and from JSON.",
      "description_length": 413,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AdunitsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in an AdSense account. It works with AdSense data types such as `CustomChannels`, `Session`, and query parameters like `adClientId`, `adUnitId`, and pagination options. A concrete use case is fetching custom channel assignments for an ad unit to manage ad targeting or reporting configurations.",
      "description_length": 403,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Event.ExtendedProperties",
      "library": "gapi-ocaml",
      "description": "This module defines extended properties for calendar events, supporting separate storage of private and shared key-value pairs. It provides functions to create empty property sets, render them into JSON, and parse JSON into property sets. These features are used to manage custom metadata in event copies that differ between organizers and attendees.",
      "description_length": 350,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive.BackgroundImageFile",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying a background image in Google Drive, including its source file ID, cropping coordinates, and display width. It provides functions to create an empty instance, access and modify individual fields using lenses, and convert the structure to and from JSON format. Use this module when configuring custom background images for Drive UI elements, ensuring proper cropping and sizing constraints are met.",
      "description_length": 448,
      "index": 148,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.EventsResource.OrderBy",
      "library": "gapi-ocaml",
      "description": "This module defines ordering options for calendar events, with variants to sort by default, start time, or update time. It provides conversion functions to and from string representations of these orderings. Use this to specify sort criteria when retrieving event lists that require ordered results.",
      "description_length": 299,
      "index": 149,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Place.Position",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for geographic coordinates with `latitude` and `longitude` fields. It provides functions to create an empty position, render it into JSON format, and parse JSON data into a position record. It is used to represent and manipulate location data in the Google+ API, such as user or place coordinates.",
      "description_length": 334,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Service.UrlResource.Projection",
      "library": "gapi-ocaml",
      "description": "This module defines a set of projection options for retrieving URL resource data from the URL Shortener API. It supports converting between string representations and typed values, specifically for filtering response data. Use cases include specifying the level of detail when fetching analytics or metadata for shortened URLs, such as retrieving only click counts or full analytics.",
      "description_length": 383,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Author",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling comment author data in the Blogger API v2. It includes fields for the author's display name, identifier, avatar image, and profile URL, along with lenses to access and modify these fields. Functions are provided to serialize author data to JSON and deserialize it back, specifically used when retrieving or submitting comments via the Blogger API.",
      "description_length": 409,
      "index": 152,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceResource.Site",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a verified site in the Google Site Verification API, with fields for the site's identifier and type. It provides functions to create an empty site, render a site to JSON, and parse a site from JSON data. These operations are used to manage site verification records when interacting with the API, such as verifying ownership of a website or domain.",
      "description_length": 402,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Messages",
      "library": "gapi-ocaml",
      "description": "This module handles Gmail message management operations such as retrieving, sending, modifying, and deleting messages. It works with message identifiers, label operations, and full message content represented as `Message.t` structures. Concrete use cases include fetching specific messages with configurable detail levels, sending emails with attachments, applying label changes, and permanently or temporarily removing messages from the mailbox.",
      "description_length": 446,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Blog.Locale",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a blog's locale settings, including country, language, and variant. It provides functions to create an empty locale, access and modify its fields via lenses, and convert the locale to and from a JSON representation. It is used when interacting with the Blogger API to manage blog metadata in different languages and regions.",
      "description_length": 378,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Settings",
      "library": "gapi-ocaml",
      "description": "This module manages Gmail user settings including auto-forwarding, IMAP, POP, and vacation responder configurations. It provides operations to retrieve and update these settings, working with data types like `AutoForwarding`, `ImapSettings`, `PopSettings`, and `VacationSettings`. Concrete use cases include enabling auto-forwarding with a verified address, configuring IMAP access for email clients, setting up vacation auto-replies, and adjusting POP download settings.",
      "description_length": 471,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.Features",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing API feature limits, with fields for the feature name and its query-per-second rate limit. It provides functions to create an empty feature, parse and render feature data from or to JSON, and access or modify fields using lenses. This module is used to manage and interpret rate limiting information returned by the Drive API's About endpoint.",
      "description_length": 392,
      "index": 157,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLink.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission structures for user links in the Google Analytics API v3. It provides accessors for effective and local permissions, along with functions to serialize and deserialize permission data for API communication. Use cases include managing user access levels and synchronizing permission changes with the API.",
      "description_length": 349,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Replies",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling replies to a blog post in the Blogger API v2 data model. It provides accessors for the comment count (`totalItems`) and the URL to the comments (`selfLink`), along with functions to serialize (`render`) and deserialize (`parse`) reply data. It is used to manage and manipulate post reply metadata when interacting with the Blogger API.",
      "description_length": 397,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Organizer",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for event organizers in the Calendar API v3. It provides lenses to access and modify organizer properties such as `self`, `email`, `id`, and `displayName`, along with functions to serialize and deserialize organizer data to and from JSON. It is used to manage organizer information when creating or updating calendar events.",
      "description_length": 385,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.AdvancedDetails",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring advanced filters in the Google Analytics API. It includes fields for specifying extraction and output logic, such as source fields, extraction expressions, output construction, and index values for custom dimensions. Use this module to build or modify complex filter configurations when interacting with Google Analytics data, such as transforming or combining dimension values during data processing.",
      "description_length": 468,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Result.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing image metadata returned by the CustomSearch API, including properties like dimensions, byte size, and thumbnail links. It provides lenses for accessing and modifying individual fields, along with functions to serialize to and parse from JSON. Concrete use cases include processing image search results and constructing image display information for web applications.",
      "description_length": 416,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Adclients",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve ad client information and generate ad code for AdSense accounts. It works with AdSense account identifiers and ad client resources, handling API requests to list ad clients or fetch ad code for a specific client. Concrete use cases include integrating AdSense ads into web pages by generating ad code snippets and managing ad client configurations within an AdSense account.",
      "description_length": 418,
      "index": 163,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.InReplyTo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a comment's parent reference in the Blogger API v2. It includes operations to create an empty parent reference, retrieve the parent ID, and convert the structure to and from JSON format. It is used specifically for handling hierarchical comment relationships in API requests and responses.",
      "description_length": 339,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Goals",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage goals within a Google Analytics profile, including creating, retrieving, listing, and updating goals. It works with `Goal.t` and `Goals.t` data structures, representing individual goals and collections of goals. Concrete use cases include tracking conversion targets, analyzing user behavior against specific objectives, and configuring goal settings in analytics reports.",
      "description_length": 414,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.CustomchannelsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units associated with a specific custom channel in an AdSense account. It works with ad client identifiers, custom channel IDs, and pagination parameters to fetch and return ad unit data. Concrete use cases include managing and organizing ad inventory within custom channels for targeted ad serving.",
      "description_length": 356,
      "index": 166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdsenseReportsGenerateResponse.Headers",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling report headers in the AdSense Management API. It provides functions to create, parse, and render header data, which includes name, type, and optional currency for metrics. Use this module when generating or processing AdSense report responses that require structured header information.",
      "description_length": 348,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.UppercaseDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring uppercase transformation filters in the Google Analytics API v3. It includes fields to specify which dimension to transform and its index, primarily used when applying uppercase formatting to custom dimensions. Functions allow creating, rendering, and parsing filter configurations for use in API requests.",
      "description_length": 371,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDimension.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link for a custom dimension in the Google Analytics API. It includes fields for the hyperlink reference (`href`) and the type of parent link (`_type`), which is typically set to \"analytics#webproperty\". The module provides functions to create an empty instance, render the structure into JSON, and parse JSON data into this structure.",
      "description_length": 393,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.CustomDataSources",
      "library": "gapi-ocaml",
      "description": "This module handles listing custom data sources for a Google Analytics account and web property. It works with parameters like account ID, web property ID, pagination settings, and session data to retrieve and return custom data source information. A concrete use case is fetching configured custom data sources for reporting or configuration management in a Google Analytics setup.",
      "description_length": 382,
      "index": 170,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search.SearchInformation",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for storing and manipulating search result metadata, including formatted search time, total results, and their raw numeric counterparts. It provides functions to parse and render these values to and from JSON, along with lenses for accessing and modifying individual fields. Concrete use cases include processing API responses to extract search statistics and formatting them for display or further processing.",
      "description_length": 447,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Urls",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling URL data associated with a person in the Google+ API. It provides functions to parse and render URL records, access fields like label, type, and value via lenses, and construct empty URL instances. Concrete use cases include extracting a user's profile links or processing contributor URLs from API responses.",
      "description_length": 353,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Blog.Pages",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing a collection of pages within a blog using the Blogger API v2. It provides functions to parse and render page data in JSON format, along with lenses to access and modify the `selfLink` and `totalItems` fields. It is used to interact with the API when retrieving or updating page listings for a blog.",
      "description_length": 360,
      "index": 173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a web property in the Google Analytics API v3. It includes fields for the link's URL (`href`) and its type, which is always `\"analytics#webproperty\"`. The module provides functions to create an empty instance, render it to JSON, and parse it from JSON data.",
      "description_length": 324,
      "index": 174,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobList.Jobs",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling individual job entries within a job list, providing accessors (via lenses) to fields like job configuration, error results, state, and statistics. It works with structured job data represented as `t`, composed of nested types like `JobConfiguration`, `JobReference`, and `JobStatus`. Concrete use cases include inspecting job states, extracting error details, and serializing job data for transmission or storage.",
      "description_length": 457,
      "index": 175,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Profiles",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage Google Analytics views (profiles), including creating, retrieving, updating, and deleting individual profiles as well as listing multiple profiles. It operates on `GapiAnalyticsV3Model.Profile.t` and `GapiAnalyticsV3Model.Profiles.t` data structures, representing single and collections of profiles respectively. Concrete use cases include synchronizing profile configurations, automating profile creation for new web properties, and retrieving profile data for reporting or auditing purposes.",
      "description_length": 534,
      "index": 176,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllResponse.InsertErrors",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing errors encountered during a row insertion operation in the BigQuery API. It includes fields for a list of errors and the index of the affected row, supporting precise error tracking for batch data insertion. The module provides functions to access and modify fields, render to JSON, parse from JSON, and create an empty instance.",
      "description_length": 379,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Name",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling person names in the Google+ API v1 data model. It provides lenses to access and modify individual components of a name\u2014such as family name, given name, and honorifics\u2014as well as functions to serialize and deserialize name data to and from JSON. It is used to manage the full name representation of a person, including formatting and structured parsing.",
      "description_length": 414,
      "index": 178,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.Response",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling API response schemas in the API Discovery Service. It includes functions to parse and render response data using a JSON model, centered around a record type containing a schema reference. Use this module to manage response schema identifiers when interacting with API discovery endpoints.",
      "description_length": 350,
      "index": 179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.LowercaseDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling lowercase filters in the Google Analytics API v3. It includes fields to specify which dimension to filter and its index, particularly for custom dimensions. Functions allow creating empty filters, rendering them to JSON, and parsing JSON responses into filter structures, specifically used when configuring or processing analytics data filters.",
      "description_length": 406,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.SearchType",
      "library": "gapi-ocaml",
      "description": "This module defines the `SearchType` variant, which includes `Default` and `Image` for specifying search types in the CustomSearch API. It provides `to_string` and `of_string` functions to convert between string representations and the variant type. This is used to set or retrieve the search type when making requests to perform web or image searches against configured sites.",
      "description_length": 377,
      "index": 181,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.File.Labels",
      "library": "gapi-ocaml",
      "description": "This module defines a set of boolean flags that represent user-specific and system-defined metadata for files in the Drive API. It includes operations to access and modify individual label fields using lenses, render labels into JSON format, and parse JSON data into label records. These labels are used to track file state such as whether it is starred, trashed, or viewed, enabling direct interaction with Drive API endpoints that manage file metadata.",
      "description_length": 454,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Promotion.Image",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing image metadata in search results, including height, width, and source URL. It provides functions to parse and render image data to and from JSON format. Use this module when processing image promotions from the CustomSearch API to extract or serialize image dimensions and source information.",
      "description_length": 346,
      "index": 183,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Alerts",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage alerts for AdSense accounts. It includes functions to list alerts for a specific account and dismiss a specific alert by its ID. The module works with `GapiAdsenseV1_4Model.Alerts` and interacts with the AdSense Management API to handle publisher account alerts.",
      "description_length": 304,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.FeedAdsSettings",
      "library": "gapi-ocaml",
      "description": "This module defines settings for embedding ads within feeds, including ad position, frequency, minimum word count, and ad type. It provides lenses to access and modify these fields, along with functions to serialize and deserialize the configuration to and from JSON. It is used to configure how and where ads are inserted into content feeds in AdSense.",
      "description_length": 353,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.EventDetails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates event details for Google Analytics goals, using a record type that includes a list of event conditions and a flag to determine if the event value should be used as the goal value. It supports operations to create an empty instance, access and modify fields using lenses, and serialize or deserialize event details to and from JSON data models. Concrete use cases include configuring and managing goal tracking based on specific event conditions, such as matching event categories, actions, or labels with custom rules.",
      "description_length": 554,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgColorType",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing color options for image search queries, including color, grayscale, and monochrome. It provides bidirectional conversion functions between the enumerated values and their string representations. This module is used to specify image color filters when making requests to the CustomSearch API.",
      "description_length": 343,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Provider",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing a service provider within an activity context. It provides access to a `title` field via a lens, along with functions to create an empty instance, render it into JSON data, and parse it from JSON. It is used to identify the service responsible for an activity in the Google+ API data model.",
      "description_length": 356,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Safe",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing safe search filtering options, including `Default`, `Active`, `High`, `Medium`, and `Off`. It provides `to_string` and `of_string` functions for converting between string representations and the corresponding enumerated values. This module is used to configure safe search behavior when performing searches via the CustomSearch API, allowing clients to specify filtering levels directly in requests.",
      "description_length": 451,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Context.Facets",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with three string fields: `anchor`, `label`, and `label_with_op`. It includes functions to manipulate these fields via lenses, render the structure into a JSON data model list, and parse JSON data into the structure. It is used to represent and process facet information in the CustomSearch API response.",
      "description_length": 341,
      "index": 190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Post",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling post references within comments using the Blogger API v2. It includes functions to parse and render post data in JSON format, specifically managing the post identifier. Use this module to associate comments with specific blog posts by their numeric ID when interacting with the Blogger API.",
      "description_length": 352,
      "index": 191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.FormattedResults",
      "library": "gapi-ocaml",
      "description": "This module structures formatted performance analysis results from the PageSpeed Insights API, organizing rule-specific outputs by locale. It processes a list of rule results keyed by rule name, each containing localized display names, impact scores, and associated URLs needing optimization. Use it to generate localized performance reports and identify high-impact optimization opportunities across web pages.",
      "description_length": 411,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.Query",
      "library": "gapi-ocaml",
      "description": "This module defines a query structure for interacting with Google Analytics v3 API, supporting operations to set and retrieve dimensions, metrics, date ranges, filters, and result constraints. It works with string-based identifiers, lists of strings for metrics and sorting criteria, and integer values for pagination and result limits. Concrete use cases include constructing API requests to fetch analytics data with specific dimensions like page views or user demographics, applying filters to narrow down results, and handling paginated responses with start indices and max result limits.",
      "description_length": 592,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.DatasetList.Datasets",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates dataset entries within a dataset list response from the BigQuery API. It provides accessors via lenses to fields such as dataset reference, friendly name, ID, and resource type, and supports serialization and deserialization of dataset data. It is used to process and construct dataset list responses when interacting with BigQuery datasets programmatically.",
      "description_length": 394,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.ImportFormats",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling file format conversions in the Drive API. It includes fields for specifying a source content type and a list of target content types, along with functions to create, render, and parse these conversion mappings. It is used to represent supported file type transformations when importing documents into Drive.",
      "description_length": 369,
      "index": 195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit.MobileContentAdsSettings",
      "library": "gapi-ocaml",
      "description": "This module defines settings for mobile content ads, including markup and scripting languages, ad size, and type. It provides lenses to access and modify these fields, along with functions to serialize and deserialize the data for API communication. It is used to configure and manage mobile ad units within the AdSense Management API.",
      "description_length": 335,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Actor",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing actors in Google+ API comments, including fields for display name, ID, profile image, URL, and verification status. It provides functions to construct empty actor instances, parse and render actor data in JSON format, and access nested modules for handling client-specific info, images, and verification. It is used to process and manipulate comment actor data retrieved from the Google+ API, particularly for displaying user information and verification badges.",
      "description_length": 528,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link to a web property in the Google Analytics API v3. It includes fields for the link's URL (`href`) and its type (`_type`), which is fixed to \"analytics#profiles\". The module provides functions to create an empty instance, render it to JSON, and parse it from JSON data.",
      "description_length": 330,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `list` operations to retrieve specific or all custom channels for an AdSense account's ad client. It works with data types such as `CustomChannel`, `CustomChannels`, and `Session`, along with parameters like `accountId`, `adClientId`, and `customChannelId`. A concrete use case is fetching custom channel details for revenue tracking or managing ad placement groups within an AdSense publisher's reporting workflow.",
      "description_length": 446,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Account.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link in the Google Analytics API v3, specifically for accounts. It includes fields for the link's URL (`href`) and its type (`_type`), which is fixed to \"analytics#webproperties\". The module provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure.",
      "description_length": 361,
      "index": 200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgSize",
      "library": "gapi-ocaml",
      "description": "This module defines image size options for search queries, including values like `Huge`, `Large`, and `Icon`. It provides conversions between these sizes and strings for use in API requests. Use this module to specify desired image dimensions when making searches with the CustomSearch API.",
      "description_length": 290,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.MediaUpload",
      "library": "gapi-ocaml",
      "description": "This module defines a media upload configuration with fields for supported protocols, maximum upload size, and acceptable MIME types. It includes functions to access and modify these fields, as well as serialize and parse the configuration to and from JSON. It is used to represent media upload constraints and capabilities in API discovery documents, specifically for configuring how clients handle media uploads to endpoints.",
      "description_length": 427,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result.Version",
      "library": "gapi-ocaml",
      "description": "This module defines a version type with `major` and `minor` fields, along with lenses to access and modify these fields. It provides functions to parse and render version data from and to JSON format, ensuring compatibility with the PageSpeed Insights API. It is used to represent and manipulate the version information of PageSpeed results returned by the API.",
      "description_length": 361,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.ImageMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module provides structured access and manipulation of image metadata extracted from files, focusing on EXIF-like properties such as camera settings, exposure, and geolocation. It works with a record type containing fields like aperture, camera model, and a nested location structure, supporting JSON serialization/deserialization for integration with API workflows. Typical use cases include extracting and modifying embedded image metadata during file processing or analysis in cloud storage systems.",
      "description_length": 506,
      "index": 204,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.About.AdditionalRoleInfo",
      "library": "gapi-ocaml",
      "description": "This module manages additional role information for Drive API permissions, handling a list of role sets and a content type identifier. It provides lenses to access and modify role sets and content type, along with functions to parse and render this data to and from JSON. Concrete use cases include processing Drive API responses to determine permissible roles for file types and constructing role configurations for access control.",
      "description_length": 432,
      "index": 205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.ActivitiesResource.OrderBy",
      "library": "gapi-ocaml",
      "description": "This module defines sorting options for activities in the Google+ API, with variants to sort by relevance or publication date. It provides `to_string` and `of_string` functions to convert between the enumerated type and string representations. Concrete use cases include specifying the order of activities when making API requests to retrieve posts sorted by relevance (`Best`) or by newest first (`Recent`).",
      "description_length": 408,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive.Capabilities",
      "library": "gapi-ocaml",
      "description": "The module defines a record type with boolean fields representing user capabilities in a Team Drive, such as adding, deleting, or sharing files. It provides lens-based accessors to manipulate these permissions and includes JSON serialization for persisting or transmitting capability states. This enables use cases like enforcing access controls, auditing user permissions, or synchronizing capability configurations across environments.",
      "description_length": 437,
      "index": 207,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.ProfileInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) with fields for account, web property, and profile identifiers along with the profile name and table ID. It provides lenses to access and modify individual fields, an empty value for initialization, and functions to serialize to and deserialize from JSON data models. It is used to interact with Google Analytics API v3 responses containing profile information.",
      "description_length": 445,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.Rows",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing rows in Google Analytics API v3 Multi-Channel Funnels (MCF) data, with fields for conversion path values and primitive values. It provides functions to create an empty row, render it to JSON, and parse JSON into this structure. Use this to process and manipulate MCF data such as user conversion paths and associated metric values.",
      "description_length": 385,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.ImgType",
      "library": "gapi-ocaml",
      "description": "This module defines a polymorphic variant type representing image types for search queries, such as `Clipart`, `Face`, `Lineart`, `News`, and `Photo`. It provides `to_string` and `of_string` functions for converting between variant values and their string representations. These conversions are used when specifying image search filters in API requests.",
      "description_length": 353,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.UnsampledReports",
      "library": "gapi-ocaml",
      "description": "This module manages unsampled reports in Google Analytics by providing functions to create, retrieve, list, and delete reports for specific account, web property, and profile combinations. It operates on data types including `UnsampledReport.t` for individual reports and `UnsampledReports.t` for collections, using session state to maintain API interactions. Concrete use cases include generating high-precision analytics reports and managing their lifecycle within a Google Analytics profile.",
      "description_length": 494,
      "index": 211,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLink.Entity",
      "library": "gapi-ocaml",
      "description": "This module defines the structure of an entity user link in the Google Analytics API v3, specifically handling the association between an account, a view (profile), and a web property. It provides operations to access and modify these references through lenses, and supports serialization and deserialization of entity data. Use cases include managing user permissions across Analytics entities and synchronizing configuration data with the API.",
      "description_length": 445,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Object",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling comments in the Google+ API v1 data model. It provides functions to access and modify comment fields such as `content`, `objectType`, and `originalContent` using lenses, and supports serialization and deserialization to and from JSON. It is used to create, update, and process comment data when interacting with Google+ API endpoints.",
      "description_length": 396,
      "index": 213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.User.Blogs",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling a user's blogs in the Blogger API v2. It provides a data type with a `selfLink` field representing the URL to the user's blogs, along with functions to create an empty instance, render it to JSON, and parse it from JSON. It is used to manage blog references when interacting with user data in the Blogger API.",
      "description_length": 371,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive.BackgroundImageFile",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a background image configuration for a Team Drive in Google Drive API v3. It includes fields for specifying an image file ID, cropping coordinates, and width, all used to control how the background image is displayed. Operations include creating an empty configuration, parsing JSON data into a structured format, and rendering the structure back into JSON for API requests.",
      "description_length": 424,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Threads",
      "library": "gapi-ocaml",
      "description": "This module provides direct access to thread management operations in a Gmail mailbox, including retrieving, deleting, listing, modifying, trashing, and restoring threads. It works with thread identifiers, user IDs, and session state to interact with the Gmail API, supporting filters like label IDs and search queries for listing threads. Concrete use cases include managing email threads programmatically, such as archiving conversations, applying or removing labels in bulk, or searching for specific threads based on criteria like spam status or metadata.",
      "description_length": 559,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Reports",
      "library": "gapi-ocaml",
      "description": "This module provides the `generate` function to create and retrieve AdSense reports with parameters like date range, metrics, dimensions, and filters. It works with string lists for dimensions and metrics, date strings, and session data to authenticate and execute requests. Concrete use cases include fetching revenue data by ad unit, analyzing traffic sources, or generating monthly performance summaries in JSON or CSV.",
      "description_length": 422,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UserDeletionRequest.Id",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a user deletion request identifier, with fields for the user type and ID. It provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure. This is used specifically for handling user deletion requests in the Google Analytics API v3.",
      "description_length": 333,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.Plusoners",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for tracking users who have +1'd a comment in the Google+ API. It provides functions to parse and render JSON data, manage the count of +1s, and maintain an empty state for initialization. It is used to handle the social interaction metrics of comments within a Google+ data model.",
      "description_length": 335,
      "index": 219,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `list` operations to retrieve specific or all ad units within an AdSense account's ad client. It works with AdSense data types such as `AdUnit` and `AdUnits`, requiring identifiers like `accountId`, `adClientId`, and optionally `adUnitId`. Concrete use cases include fetching ad unit details for reporting or managing ad inventory within an AdSense publisher's account.",
      "description_length": 400,
      "index": 220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomMetric.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link for a custom metric in the Google Analytics API v3. It includes fields for the hyperlink reference (`href`) and the type of parent link (`_type`), which is typically set to \"analytics#webproperty\". The module provides functions to create an empty parent link, render it into JSON format, and parse JSON data into a parent link structure.",
      "description_length": 401,
      "index": 221,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.MetadataResource.Dimensions",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve metadata for dimensions available to an AdSense account. It works with `GapiConversation.Session.t` and returns `GapiAdsenseV1_4Model.Metadata.t` alongside the updated session. A concrete use case is fetching dimension metadata to configure or validate report generation parameters in AdSense integrations.",
      "description_length": 360,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.ProfileInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) with fields for account, web property, and profile identifiers and names. It provides lenses to access and modify individual fields, functions to parse and render the structure from or to JSON data models, and an empty value for initialization. It is used to handle profile metadata returned by the Google Analytics API when querying multi-channel funnel data.",
      "description_length": 444,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.LabelInfo",
      "library": "gapi-ocaml",
      "description": "This module handles label information for files in the Google Drive API v3. It provides operations to access and manipulate a list of labels associated with a file, including parsing from and rendering to JSON data models. Use cases include retrieving and modifying file metadata based on specific label IDs.",
      "description_length": 308,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Filters",
      "library": "gapi-ocaml",
      "description": "This module manages filters in a Google Analytics account through operations like `delete`, `get`, `insert`, `list`, `patch`, and `update`. It works with `Filter.t` and `Filters.t` data structures to represent individual filters and collections of filters. These functions are used to configure and maintain data processing rules for filtering analytics data at the account level.",
      "description_length": 380,
      "index": 225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod.Request",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling request parameters in an API discovery model. It includes functions to create an empty request parameter, access and modify its schema ID and parameter name using lenses, and serialize or deserialize the data to and from JSON. It is used to model individual request parameters within a REST method's definition when interacting with API discovery services.",
      "description_length": 418,
      "index": 226,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides functions to retrieve ad unit details, fetch ad code, and list ad units within an ad client for a given account. It works with AdSense data types such as account identifiers, ad client IDs, ad unit IDs, and ad unit collections. Use this module to manage and display ad units, retrieve ad code for integration, or generate reports on ad unit performance.",
      "description_length": 374,
      "index": 227,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.CustomChannel.TargetingInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring ad targeting settings within the AdSense Management API. It includes fields for specifying ad placement locations, site language, and external metadata, along with functions to serialize and deserialize these settings to and from JSON. It is used to manage how ads are displayed across different content regions and languages in AdSense content and deprecated mobile content ad units.",
      "description_length": 449,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.Thumbnail",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing thumbnail images associated with files in the Drive API. It includes fields for the Base64-encoded image data and its MIME type, along with functions to construct, manipulate, and serialize thumbnail data. It is used when retrieving or generating previews of files stored in Google Drive.",
      "description_length": 342,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive.Capabilities",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing user permissions and access control in Google Drive shared drives, focusing on boolean capabilities like adding children, editing files, and modifying restrictions. It works with a record type `t` containing these capabilities, each accessible via dedicated lenses, and supports JSON serialization/deserialization for API communication. Specific use cases include checking user permissions (e.g., verifying if a user can trash files) and converting between OCaml representations and Google Drive API JSON payloads.",
      "description_length": 559,
      "index": 230,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.VisitNumPagesDetails",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying conditions based on the number of pages visited in a Google Analytics goal. It includes fields for setting a comparison type (LESS_THAN, GREATER_THAN, EQUAL) and a numeric threshold value. It is used to configure goal triggers in Google Analytics based on user session depth.",
      "description_length": 327,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarListEntry.NotificationSettings",
      "library": "gapi-ocaml",
      "description": "This module manages notification settings for calendar entries, providing operations to access and modify a list of calendar notifications. It works with `CalendarNotification.t list` to store and retrieve notification configurations. Use this module to define or update notifications like email or pop-up alerts for specific calendar events.",
      "description_length": 342,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.UrlDestinationDetails",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring URL destination goals in Google Analytics API v3, including fields for case sensitivity, match type, URL, and step requirements. It provides lenses to access and modify individual fields, along with functions to serialize to JSON and deserialize from JSON for API communication. It is used to define and manage goal funnels with specific URL steps and matching rules.",
      "description_length": 420,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.PeopleResource.Collection",
      "library": "gapi-ocaml",
      "description": "This module defines and converts string representations of user collection types in the Google+ API, such as \"connected\", \"visible\", \"plusoners\", and \"resharers\". It works with the `t` variant type that represents different categories of people collections. Use this module to serialize or deserialize collection types when interacting with Google+ API endpoints that require or return these categories.",
      "description_length": 403,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.WebpropertyUserLinks",
      "library": "gapi-ocaml",
      "description": "This module manages user access for web properties in Google Analytics. It supports adding, updating, removing, and listing user links for a given web property. These operations are performed using the `EntityUserLink.t` type to represent user permissions and the `Session.t` type to maintain conversation state.",
      "description_length": 312,
      "index": 235,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Author",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling post author data in the Blogger API v2. It includes fields for the author's display name, identifier, avatar, and profile URL, along with functions to create an empty author, render it to JSON, and parse it from JSON. It is used to manage author metadata when retrieving or updating blog posts via the Blogger API.",
      "description_length": 376,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.UserDeletionResource.UserDeletionRequest",
      "library": "gapi-ocaml",
      "description": "Handles user deletion requests in Google Analytics by inserting or updating records. Works with `UserDeletionRequest.t` and session data to manage request state. Used to submit or modify user deletion requests in the Google Analytics API.",
      "description_length": 238,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.Visibility",
      "library": "gapi-ocaml",
      "description": "This module defines visibility settings for files in the Drive API, supporting conversions between visibility values and their string representations. It works with the `t` enumerated type representing visibility options like `Default` and `PRIVATE`. Use this module to set or interpret file visibility when creating or updating files in Drive, ensuring correct API communication through string serialization.",
      "description_length": 409,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Reports",
      "library": "gapi-ocaml",
      "description": "This module generates AdSense performance reports by specifying account IDs, date ranges, metrics, dimensions, and filters. It returns structured report data in JSON or CSV format, enabling detailed analysis of ad performance. Use cases include generating revenue reports by geographic region, analyzing ad click-through rates over time, and filtering impressions by specific ad units.",
      "description_length": 385,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.MetadataResource.Columns",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve all columns available for a specified report type in the Google Analytics API. It works with the `GapiAnalyticsV3Model.Columns.t` data structure, representing the set of columns returned by the API. A concrete use case is fetching the list of valid metric and dimension columns for constructing or validating Analytics API queries.",
      "description_length": 384,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Webproperties",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage web properties in a Google Analytics account, including retrieving, creating, listing, and updating properties. It works with `Webproperty.t` and `Webproperties.t` data types, along with session and standard parameter types for API interaction. Concrete operations include `get` for fetching a specific property, `insert` to add a new property (up to 20 per account), `list` to retrieve all accessible properties for an account, and `patch`/`update` to modify existing properties.",
      "description_length": 521,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.About.DriveThemes",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for working with Google Drive themes, including parsing and rendering theme data from JSON. It provides accessors for theme properties like ID, background image link, and RGB color value. Concrete use cases include extracting theme metadata from API responses and constructing theme objects for API requests.",
      "description_length": 359,
      "index": 242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Urlchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve URL channels for a specific ad client and account in the AdSense Management API. It works with string identifiers for accounts and ad clients, along with session and parameter types for API communication. Use this module to programmatically access and manage URL channel configurations in AdSense inventory.",
      "description_length": 361,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Dataset.Access",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing access control in a BigQuery dataset. It includes fields to specify access grants for domains, user emails, Google groups, special groups, and cross-dataset views, along with required role definitions. It supports creating, rendering, and parsing access configurations for API interactions.",
      "description_length": 354,
      "index": 244,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling blog identifiers within comments using the Blogger API v2. It provides a type `t` that holds a blog ID as an `int64`, along with functions to access, initialize, serialize, and deserialize this data. It is used specifically for managing the association between comments and their corresponding blogs in JSON format during API interactions.",
      "description_length": 401,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.DirectoryList.Items",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates API directory entry records, providing lenses to access and modify individual fields such as `name`, `version`, `description`, and `icons`. It works with the `t` record type that represents a single API entry, including metadata like documentation links, discovery URLs, and status labels. Concrete use cases include parsing and rendering API discovery documents to and from JSON, managing API version preferences, and extracting icon URLs for display in user interfaces.",
      "description_length": 507,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to an account in the Google Analytics API v3. It includes fields for the link's URL (`href`) and its type, which is fixed as \"analytics#account\". The module provides functions to create an empty instance, access and modify fields via lenses, and convert to and from JSON for API communication.",
      "description_length": 357,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableList.Tables",
      "library": "gapi-ocaml",
      "description": "This module defines a record type representing a table in a BigQuery dataset, with fields for the table's name, ID, kind, reference, and type (TABLE or VIEW). It includes lenses for accessing and modifying individual fields, functions to serialize and deserialize table data to and from JSON, and an empty value for initializing table instances. It is used to manage metadata when listing or processing tables in BigQuery datasets.",
      "description_length": 431,
      "index": 248,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.CustomchannelsResource.Adunits",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve ad units associated with a specific custom channel in an AdSense account. It works with ad client identifiers, custom channel IDs, and session contexts to fetch paginated ad unit data. Use this module to programmatically access and manage ad units within a custom channel for reporting or configuration purposes.",
      "description_length": 366,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Gadget",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for embedding gadgets within calendar events, supporting fields like display mode, preferences, and HTTPS links for icons and content. It provides lenses for accessing and modifying individual properties, along with functions to serialize and deserialize gadget data for API interactions. Concrete use cases include attaching interactive elements such as polls or external tools to calendar events.",
      "description_length": 435,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.ClientId",
      "library": "gapi-ocaml",
      "description": "This module provides the `hashClientId` function, which securely hashes a Client ID using the Google Analytics API. It works with `HashClientIdRequest.t` and `HashClientIdResponse.t` data structures, along with API standard parameters and session state. Use this to anonymize client identifiers before sending them to Google Analytics for privacy compliance.",
      "description_length": 358,
      "index": 251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal.VisitTimeOnSiteDetails",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring time-on-site goals in Google Analytics. It includes fields to specify comparison operators (`LESS_THAN` or `GREATER_THAN`) and the corresponding time thresholds in seconds. These structures are used when defining or parsing goal conditions based on user session duration in Analytics API requests.",
      "description_length": 364,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Promotion.BodyLines",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with fields for HTML title, link, title, and URL, supporting the representation of promotional content elements in a search API response. It includes functions to manipulate and access these fields using lenses, along with operations to serialize and deserialize the structure to and from JSON data models. It is used to handle individual promotional items returned by a search API, enabling structured access to their metadata and rendering.",
      "description_length": 479,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Accounts",
      "library": "gapi-ocaml",
      "description": "This module handles listing Google Analytics accounts accessible to a user, using parameters like `max_results` and `start_index` to paginate through results. It operates on `GapiAnalyticsV3Model.Accounts.t` and session data to retrieve and return account collections. A typical use case involves fetching a paginated list of analytics accounts for display or further processing in an application.",
      "description_length": 397,
      "index": 254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Lr",
      "library": "gapi-ocaml",
      "description": "This module defines a set of language-specific search filters as enumerated values and provides bidirectional conversion between these values and their string representations. It supports specifying search results by language in the CustomSearch API, enabling concrete use cases such as restricting searches to \"Lang_fr\" for French content or \"Lang_zh_TW\" for Traditional Chinese content. The module directly maps to API parameters and is used when constructing search queries with language constraints.",
      "description_length": 503,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.ProfileUserLinks",
      "library": "gapi-ocaml",
      "description": "This module manages user access to Google Analytics views by providing operations to add, remove, update, and list user links for a specific profile. It works with profile identifiers and user link data structures defined in the Analytics API model. Concrete use cases include granting a user read access to a specific view, revoking access for a former team member, or updating an existing user's permissions.",
      "description_length": 410,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Experiments",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage experiments in Google Analytics, including creating, retrieving, updating, and deleting experiments. It works with experiment identifiers and experiment data models, handling interactions within a session. Concrete use cases include managing A/B tests, tracking experiment configurations, and modifying experiment settings in a Google Analytics account.",
      "description_length": 395,
      "index": 257,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.CalendarListResource.MinAccessRole",
      "library": "gapi-ocaml",
      "description": "This module defines access role enumerations for calendar list resources, including `Owner`, `Writer`, `Reader`, and `FreeBusyReader`. It provides conversions between these roles and string representations. Use this module to specify or interpret access permissions when interacting with shared calendars or managing event visibility.",
      "description_length": 334,
      "index": 258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeResponse.AccountSettings",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing account sharing settings in the Google Analytics API v3. It includes boolean fields for controlling sharing with various entities, such as specialists or support teams, and provides functions to render and parse these settings to and from JSON. It is used to configure and manage data sharing permissions for analytics accounts.",
      "description_length": 378,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Comment.QuotedFileContent",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling quoted file content within comments, specifically storing MIME type and plain text content. It provides functions to create an empty instance, access and modify fields via lenses, and serialize or deserialize the structure to and from JSON. It is used when working with Google Drive API comments that include file excerpts, enabling accurate representation and manipulation of quoted content metadata.",
      "description_length": 451,
      "index": 260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Urlchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve URL channels for a specific ad client and account in the AdSense Management API. It works with string identifiers for accounts and ad clients, along with session and parameter types for API communication. Use this module to fetch URL channel data for reporting or inventory management in AdSense publisher workflows.",
      "description_length": 370,
      "index": 261,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search.Url",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure with two fields: `template` and `_type`, both strings, representing URL templates and their associated types in a search API response. It includes functions to create an empty instance, render the structure into JSON, and parse JSON into the structure. These operations support handling search result URLs in API responses, such as extracting and formatting link templates.",
      "description_length": 410,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Comment.Context",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the context of a comment in the Drive API v2, specifically capturing the MIME type and content snippet of the commented file segment. It provides functions to access and modify its fields, render the structure to JSON, and parse JSON into the structure. It is used to handle contextual data when retrieving or submitting comments on files in Google Drive.",
      "description_length": 405,
      "index": 263,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link to a list of goals for a Google Analytics view. It includes fields for the link URL (`href`) and the type identifier (`_type`), which is fixed to \"analytics#goals\". The module provides functions to create an empty instance, render the structure to JSON, and parse JSON into the structure.",
      "description_length": 351,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.PeopleResource.OrderBy",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type for specifying sort orders when retrieving people data from the Google+ API. It supports three options: `Default`, `Alphabetical` (sorted by display name), and `Best` (sorted by relevance to the viewer). The module includes functions to convert these order options to and from string representations, enabling easy integration with API requests that require textual parameters.",
      "description_length": 416,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Object",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling activity objects in the Google+ API, such as posts, reshares, and notes. It provides lenses to access fields like content, attachments, and interaction metadata (e.g., plusoners, replies), along with functions to serialize and deserialize the data to and from JSON. It is used to retrieve, construct, and manipulate activity data, including processing media attachments, extracting URLs, and managing resharing and +1 interactions.",
      "description_length": 493,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.ReportsResource.Saved",
      "library": "gapi-ocaml",
      "description": "This module handles operations for retrieving and listing saved AdSense reports. It works with `SavedReports` and `AdsenseReportsGenerateResponse` data types, interacting with the AdSense Management API. Concrete use cases include fetching a specific saved report by ID and enumerating all saved reports for an AdSense account.",
      "description_length": 327,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Page.Author",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing page authors in the Blogger API v2 data model. It includes fields for author display name, identifier, avatar image, and profile URL, along with lenses for accessing and modifying these fields. The module supports serialization and deserialization of author data to and from JSON, enabling integration with Blogger API endpoints that handle page metadata.",
      "description_length": 421,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource.Labels",
      "library": "gapi-ocaml",
      "description": "This module manages labels in a user's mailbox by providing operations to create, delete, retrieve, list, and update labels. It works with label identifiers, user identifiers, and label data structures defined in the Gmail API model. Concrete use cases include organizing messages into categories, managing user-defined labels, and synchronizing label states across devices.",
      "description_length": 374,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Result.Labels",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a label in a CustomSearch API result, with fields for display name, label operator, and name. It provides functions to access and modify these fields using lenses, along with operations to serialize and deserialize the structure to and from JSON. It is used to process and manipulate label data returned by the CustomSearch API.",
      "description_length": 378,
      "index": 270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdStyle.Font",
      "library": "gapi-ocaml",
      "description": "This module defines the font family and size settings for AdSense ad styles, using a record type with `family` and `size` fields. It provides lenses for accessing and modifying these fields, along with functions to serialize and deserialize font data to and from JSON. It is used when configuring or retrieving ad style settings in the AdSense Management API.",
      "description_length": 359,
      "index": 271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Creator",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling event creators in the Calendar API. It provides lenses to access and modify fields such as `id`, `email`, `displayName`, and `self` within the `Creator` type. It is used to represent and manipulate the creator information of calendar events when interacting with the API.",
      "description_length": 333,
      "index": 272,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData.ColumnHeaders",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling column headers in Google Analytics API (v3) responses. It provides functions to create, manipulate, and serialize column header data, which includes properties such as column type (DIMENSION or METRIC), data type (e.g., INTEGER, DOUBLE), and column name. Use this module when processing or constructing column header information for API requests and responses, particularly when mapping data to and from JSON format.",
      "description_length": 478,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiment.Variations",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates experiment variations for the Google Analytics API v3. It includes fields for name, status, URL, weight, and outcome tracking, with operations to render and parse variation data to and from JSON. It is used to configure and interpret A/B test variations within an experiment.",
      "description_length": 311,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Ga",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` function to retrieve Google Analytics data for a specific view, profile, or property by querying the API with parameters such as date range, dimensions, metrics, filters, and sampling settings. It works with string identifiers, date strings, and enumerated types from its submodules (`SamplingLevel`, `Output`) to customize query behavior and response format. Concrete use cases include fetching traffic metrics, user behavior data, or conversion statistics over specific time intervals for reporting or analysis.",
      "description_length": 544,
      "index": 275,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Account.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines the permissions associated with a Google Analytics account, specifically capturing the effective permissions a user has. It provides operations to access and manipulate these permissions, including retrieving the list of effective permissions, rendering them to JSON format, and parsing JSON data into a permissions structure. Use cases include determining user access levels for account management and ensuring proper authorization when interacting with Google Analytics resources.",
      "description_length": 502,
      "index": 276,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReport.DriveDownloadDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling drive download details in Google Analytics unsampled reports. It provides functions to parse and render JSON data, access the document ID field via a lens, and create empty instances. It is used to retrieve and manipulate report file metadata from Google Drive integration.",
      "description_length": 335,
      "index": 277,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AdunitsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all custom channels associated with a specific ad unit in the AdSense Management API. It works with `GapiAdsenseV1_4Model.CustomChannels.t` and requires parameters such as `adClientId`, `adUnitId`, and session state. A concrete use case is fetching custom channel data for reporting or inventory management in an AdSense publisher's application.",
      "description_length": 399,
      "index": 278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Blog.Posts",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling collections of blog posts in the Blogger API v2. It includes functions to parse and render post data in JSON format, and provides accessors for fields like the post list URL and total post count. It is used to manage metadata about a blog's posts, such as when retrieving or updating post listings.",
      "description_length": 360,
      "index": 279,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Filter",
      "library": "gapi-ocaml",
      "description": "This module defines filters for search results, specifically controlling duplicate content filtering. It provides `to_string` and `of_string` functions to convert between string representations and the `t` type, which includes options to enable or disable duplicate filtering. Use this when configuring search queries to include or exclude duplicate results based on content.",
      "description_length": 375,
      "index": 280,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeRequest.AccountSettings",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring account sharing settings in the Google Analytics API v3. It includes boolean fields to control sharing with Google products, specialists, support, and anonymous entities, along with lenses for accessing and modifying individual fields. The module supports serialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 406,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.QuotaBytesByService",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing storage quota usage by service within the Drive API. It includes fields for the number of bytes used and the service name, supporting operations to access and manipulate these values. It is used to parse and render quota information returned by the API, such as distinguishing storage usage between services like DRIVE, GMAIL, or PHOTOS.",
      "description_length": 387,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Payments",
      "library": "gapi-ocaml",
      "description": "This module handles retrieval of payment information for a specific AdSense account. It provides the `list` function, which fetches a list of payments associated with the given account ID. The function returns a `GapiAdsenseV1_4Model.Payments.t` value containing the payment details.",
      "description_length": 283,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Uploads",
      "library": "gapi-ocaml",
      "description": "This module handles data uploads for custom data sources in Google Analytics. It provides functions to upload data, delete upload data, and list uploads with support for pagination. The module works with upload IDs, account IDs, web property IDs, and custom data source IDs, returning upload metadata or status results. Concrete use cases include managing uploaded datasets for custom reports or data integrations in Google Analytics.",
      "description_length": 434,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.AccountSummaries",
      "library": "gapi-ocaml",
      "description": "This module lists account summaries that include accounts, properties, and profiles accessible by the user. It operates on `GapiAnalyticsV3Model.AccountSummaries.t` and uses session data to authenticate and execute API requests. A typical use case involves retrieving a hierarchical overview of a user's Google Analytics accounts for navigation or reporting purposes.",
      "description_length": 367,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Savedadstyles",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list saved ad styles for a specific AdSense account. It works with `SavedAdStyle` and `SavedAdStyles` data types, representing individual and collections of saved ad styles. Concrete use cases include fetching a specific saved ad style by ID or listing all saved ad styles for an account to manage and apply consistent ad formatting across AdSense inventory.",
      "description_length": 406,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Reminders",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates event reminder settings for the Calendar API v3. It provides accessors for `overrides` and `useDefault` fields, allowing configuration of custom and default reminders. Use cases include setting specific alert times for calendar events and toggling default calendar-wide reminders.",
      "description_length": 316,
      "index": 287,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.ImageMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling image metadata with EXIF-like properties such as camera settings, spatial dimensions, and geolocation data. It provides lenses for accessing and functionally updating fields like aperture, focal length, and GPS coordinates, along with JSON serialization/deserialization capabilities. The structure supports use cases like extracting geotags from photos, programmatically adjusting image metadata, and integrating Drive's image properties with JSON-based storage or APIs.",
      "description_length": 520,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.AccountUserLinks",
      "library": "gapi-ocaml",
      "description": "This module manages user access to Google Analytics accounts by providing operations to add, remove, update, and list user links. It works with `EntityUserLink` and `EntityUserLinks` data structures to represent individual and collections of user-account relationships. Concrete use cases include granting a new user access to an account, revoking access, modifying user permissions, and retrieving a list of current users for an account.",
      "description_length": 438,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About.MaxUploadSizes",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates records of maximum upload sizes for different file types in the Drive API v2. It provides accessors for the size and type fields, functions to create an empty record and convert it to or from JSON representation. It is used to handle file size limits returned by the Drive API when querying upload capabilities for specific file types.",
      "description_length": 371,
      "index": 290,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.Corpus",
      "library": "gapi-ocaml",
      "description": "This module defines and converts corpus types for file queries in the Drive API, specifically handling `Default`, `DEFAULT`, and `DOMAIN` corpora. It provides `to_string` and `of_string` functions to serialize and parse these corpus values. Use this module when specifying or interpreting corpus parameters in file search or listing operations.",
      "description_length": 344,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Realtime",
      "library": "gapi-ocaml",
      "description": "This module retrieves real-time analytics data for a specific view by querying the Google Analytics API. It accepts parameters such as dimensions, filters, and metrics to customize the data retrieval. A typical use case involves fetching current traffic metrics like active users or page views for immediate analysis.",
      "description_length": 317,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.Query",
      "library": "gapi-ocaml",
      "description": "This module defines a query structure for interacting with the Google Analytics API v3, specifically for Multi-Channel Funnels (MCF) data. It includes fields for specifying dimensions, metrics, date ranges, filters, and sorting to customize data retrieval requests. The module provides lenses for accessing and modifying individual fields, along with functions to serialize and deserialize queries to and from JSON.",
      "description_length": 415,
      "index": 293,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData.ColumnHeaders",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling column headers in Google Analytics MCF data. It provides functions to create, parse, and render column header records with fields for column type, data type, and name. Use this module when processing or generating MCF API responses that require structured column metadata.",
      "description_length": 334,
      "index": 294,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Endpoints",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates endpoint data structures used to represent API endpoints in the API Discovery Service. It provides functions to access and modify endpoint properties such as location, deprecation status, description, and URL through lenses, and supports serialization and deserialization to and from JSON. Use cases include parsing API endpoint metadata from JSON responses and constructing endpoint configurations for service clients.",
      "description_length": 455,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity.Actor",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing actor information in Google+ API activities, including fields for actor ID, display name, profile image, name components, profile URL, verification status, and client-specific details. It provides lenses for accessing and modifying individual fields, functions to serialize to and deserialize from JSON, and an empty constructor for initializing default actor instances. It is used to process and construct actor data in Google+ activity streams, such as parsing API responses or building activity payloads with actor metadata.",
      "description_length": 581,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.LinkShareMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines metadata related to link sharing for files in the Google Drive API v3. It includes boolean fields indicating whether a file is eligible for security updates and whether such updates are enabled. These fields are accessed and modified using lenses, and the module supports JSON serialization and deserialization for integration with API requests and responses.",
      "description_length": 379,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSource.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a web property in the Google Analytics API. It includes fields for the link's URL and its type, which is fixed to \"analytics#webproperty\". The module provides functions to create an empty link, render it to JSON, and parse it from JSON, enabling integration with API responses and requests.",
      "description_length": 357,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.DeveloperMetadata",
      "library": "gapi-ocaml",
      "description": "This module handles developer metadata in Google Sheets by providing operations to retrieve and search metadata entries. It works with `DeveloperMetadata` records and `SearchDeveloperMetadataRequest` objects to query metadata based on IDs or data filters. Concrete use cases include locating metadata associated with specific spreadsheet regions or fetching metadata entries by their unique identifiers for inspection or modification.",
      "description_length": 434,
      "index": 299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Event.Source",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the source of an event in the Calendar API, with fields for a title and a URL. It provides functions to create an empty source, render it into JSON format, and parse JSON data into a source object. It is used to associate events with external resources, such as web pages or email messages, via their title and URL.",
      "description_length": 365,
      "index": 300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.WebPropertyAdWordsLinks",
      "library": "gapi-ocaml",
      "description": "This module manages AdWords links associated with web properties in Google Analytics. It provides operations to create, retrieve, update, and delete specific web property-AdWords links, as well as list all links for a given web property. The functions work with data types such as `EntityAdWordsLink` and `EntityAdWordsLinks`, using session-based authentication for API interaction.",
      "description_length": 382,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.SiteSearchFilter",
      "library": "gapi-ocaml",
      "description": "This module defines a site search filter type with `Default`, `Exclude`, and `Include` options, used to control whether search results include or exclude specific sites. It provides `to_string` and `of_string` functions for converting between the filter type and string representations. This is useful when constructing search queries that require filtering results based on site inclusion or exclusion criteria.",
      "description_length": 412,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema.Annotations",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates annotations related to JSON schema properties, specifically tracking which methods require a property in API requests. It works with the `t` type, which includes a list of required methods, and interacts with JSON data models for serialization and deserialization. It is used to enforce request requirements in API client generation and validation workflows.",
      "description_length": 394,
      "index": 303,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData.Query",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for constructing and manipulating real-time data queries in the Google Analytics API v3. It includes fields for specifying dimensions, metrics, filters, sorting, and result limits, along with lenses for accessing and modifying these fields. The structure is used to serialize and deserialize query parameters to and from JSON for API requests.",
      "description_length": 380,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Service.PagespeedapiResource.Strategy",
      "library": "gapi-ocaml",
      "description": "This module defines and converts string representations of analysis strategies for the PageSpeed Insights API, specifically targeting desktop or mobile performance evaluation. It works with the `Strategy.t` type, which includes `Default`, `Desktop`, and `Mobile` variants. Use this module to serialize or deserialize strategy values when interacting with the API, such as selecting the appropriate analysis profile for a given device context.",
      "description_length": 442,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Jwk.Keys",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates JSON Web Key (JWK) structures used for OAuth2 authentication, specifically handling key parameters such as algorithm, key type, and usage. It provides lenses for accessing and modifying individual fields of a JWK record, along with functions to serialize and deserialize keys to and from JSON data models. It is used to manage cryptographic keys when interacting with Google's OAuth2 API endpoints.",
      "description_length": 434,
      "index": 306,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty.Permissions",
      "library": "gapi-ocaml",
      "description": "This module defines the permissions associated with a Google Analytics web property, specifically capturing the effective permissions a user holds. It provides operations to access and manipulate these permissions, including retrieving the list of effective permissions, creating an empty permissions structure, and converting between JSON representations and the internal data model. It is used when interacting with the Google Analytics API to manage user access rights for web properties.",
      "description_length": 491,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience.StateBasedAudienceDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines state-based audience rules for Google Analytics remarketing, combining inclusion and exclusion conditions. It works with JSON data models and lens operations to configure audience membership based on user state transitions. Concrete use cases include setting up dynamic remarketing audiences that include users matching specific conditions and exclude others based on temporary or permanent state changes.",
      "description_length": 425,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.EventsResource.SendUpdates",
      "library": "gapi-ocaml",
      "description": "This module defines options for controlling notification behavior when updating calendar events. It provides `to_string` and `of_string` functions to convert between string representations and the enumerated type values (`Default`, `All`, `ExternalOnly`, `None`). These values specify whether and to whom notifications should be sent when an event is updated, such as sending alerts to all attendees or only external guests.",
      "description_length": 424,
      "index": 309,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search.Spelling",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates spelling correction data returned by the CustomSearch API. It provides accessors for retrieving the corrected query and its HTML-formatted version, along with functions to serialize and deserialize the data to and from JSON. It is used to handle spelling suggestions in search results, such as when a user's query is misspelled and the API returns an alternative.",
      "description_length": 399,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.PlacesLived",
      "library": "gapi-ocaml",
      "description": "This module defines a place lived entry for a person, including fields for whether it's the primary residence and the location value. It provides operations to create an empty entry, access and modify fields via lenses, and serialize or deserialize entries to and from JSON data models. It is used to represent and manipulate user residence history data in the Google+ API.",
      "description_length": 373,
      "index": 311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource.Mcf",
      "library": "gapi-ocaml",
      "description": "Handles querying Google Analytics Multi-Channel Funnels (MCF) data for a specific view, date range, and metrics. Accepts parameters like dimensions, filters, sampling level, and result limits to customize data retrieval. Use this to analyze user conversion paths across marketing channels in Google Analytics API v3.",
      "description_length": 316,
      "index": 312,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.CustomDimensions",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage custom dimensions in Google Analytics, including creating, retrieving, listing, and updating custom dimensions. It works with the `CustomDimension` and `CustomDimensions` data types, representing individual dimensions and collections. Use this module to configure custom dimensions for tracking specific metrics in a Google Analytics account and web property.",
      "description_length": 401,
      "index": 313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File.VideoMediaMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing video metadata, including duration, height, and width. It provides functions to access and modify these fields via lenses, along with operations to serialize to and parse from JSON data models. It is used to handle video-specific metadata when interacting with the Drive API, such as retrieving or updating video file properties.",
      "description_length": 379,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.ActivitiesResource.Collection",
      "library": "gapi-ocaml",
      "description": "This module defines the `Collection` type used to specify activity collections in the Google+ API, with variants for default and public activities. It provides functions to convert between string representations and the enumerated type. Concrete use cases include specifying activity types when querying user activities or filtering public posts in API requests.",
      "description_length": 362,
      "index": 315,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.User.Locale",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling user locale settings in the Blogger API. It provides accessors for country, language, and variant fields, along with functions to serialize and deserialize locale data to and from JSON. It is used to manage user-specific regional and linguistic preferences when interacting with Blogger API resources.",
      "description_length": 363,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdStyle.Colors",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates color settings for ad styles in the AdSense Management API. It provides accessors (background, border, text, title, url) to get or set individual color fields within a color record, and includes functions to convert color data to and from JSON representations. It is used to customize the visual appearance of ads by specifying color values for different ad components.",
      "description_length": 405,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllRequest.Rows",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for rows in a BigQuery table data insertion request. It includes fields for an optional unique row ID and a required JSON object representing the row data, aligned with the destination table's schema. Functions allow creating empty rows, rendering rows into JSON data models, and parsing JSON data into row structures.",
      "description_length": 367,
      "index": 318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource.Adclients",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all ad clients associated with a specific AdSense account. It works with `GapiAdsenseV1_1Model.AdClients.t` data structures, which represent collections of ad client resources. A concrete use case is fetching ad client information for reporting or inventory management within an AdSense publisher's application.",
      "description_length": 365,
      "index": 319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service.UserinfoResource.V2",
      "library": "gapi-ocaml",
      "description": "This module includes the `get` function to retrieve authenticated user profile information from Google's OAuth2 API, such as user ID, email, and profile picture. It works with `GapiConversation.Session.t` and returns a `Userinfoplus.t` record along with the updated session. Use it to fetch user details after successful OAuth2 authorization.",
      "description_length": 342,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Permission.PermissionDetails",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates permission details for Google Drive API v3, specifically handling fields such as permission type, inheritance source, role, and inheritance status. It works with the `t` record type, which captures permission metadata, and uses lenses for accessing and modifying individual fields. Concrete use cases include parsing and rendering permission details from JSON during API requests and responses, and determining user roles and inheritance in shared drives.",
      "description_length": 491,
      "index": 321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceGettokenRequest.Site",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying a site or domain in a verification request. It includes fields for the site identifier (URL or domain) and its type (SITE or INET_DOMAIN), along with functions to construct, render, and parse the data model to and from JSON. It is used when requesting a verification token for a site or domain through the Google Site Verification API.",
      "description_length": 399,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Page.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling blog page data in the Blogger API v2. It provides functions to parse and render blog page entries to and from JSON, along with a data structure that holds the blog identifier. It is used to manage references to blogs when working with individual pages in the API.",
      "description_length": 307,
      "index": 323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Place.Address",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling physical addresses in the Google+ API data model. It provides an address type with a formatted string field, along with functions to create an empty address, render it into JSON format, and parse JSON data into an address record. It is used specifically for representing and serializing place addresses retrieved or sent through the Google+ API.",
      "description_length": 407,
      "index": 324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.RemarketingAudience",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage remarketing audiences within a Google Analytics account, including creating, retrieving, updating, and deleting individual audiences, as well as listing all audiences for a web property. It works with the `RemarketingAudience.t` type for representing audience definitions and `RemarketingAudiences.t` for collections. Concrete use cases include configuring targeted marketing campaigns by defining audience segments, syncing audience data with advertising platforms, and managing audience inclusion rules for site visitors.",
      "description_length": 565,
      "index": 325,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.ListM.Infix",
      "library": "gapi-ocaml",
      "description": "Implements monadic bind and sequence operations for list computations. Works with list values wrapped in the ListM monad, enabling chaining of list-producing functions and combining list-based effects. Useful for handling non-deterministic computations where each step can produce multiple results, such as generating combinations or filtering sequences in a pipeline.",
      "description_length": 368,
      "index": 326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Drive.Restrictions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates restrictions applied to a shared drive in the Google Drive API v3. It includes boolean flags to control permissions such as copying, domain-only access, member-only access, and administrative management, along with a field for download restrictions. Use cases include configuring access control policies for shared drives and enforcing organizational security settings during drive setup or updates.",
      "description_length": 435,
      "index": 327,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityAdWordsLink.Entity",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for linking an AdWords account to a Google Analytics web property. It includes functions to parse and render JSON data, and provides access to the associated web property reference. It is used when managing AdWords integrations within Google Analytics accounts.",
      "description_length": 310,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData.ProfileInfo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) in real-time data responses, with fields for account, web property, and profile identifiers along with the profile name and table ID. It provides lenses for accessing and modifying individual fields, functions to serialize and deserialize the data to JSON, and an empty value for initialization. It is used to extract and manipulate metadata about the viewed data set in real-time Google Analytics reports.",
      "description_length": 490,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.Projection",
      "library": "gapi-ocaml",
      "description": "This module defines file projection options for the Drive API, specifically `Default`, `BASIC`, and `FULL`, which determine the set of file properties returned in API responses. It provides `to_string` and `of_string` functions for converting between string representations and the enumerated type. These projections are used when querying or retrieving file metadata to control response size and detail.",
      "description_length": 404,
      "index": 330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.JobsResource.StateFilter",
      "library": "gapi-ocaml",
      "description": "This module defines an enumeration for filtering jobs by state in the BigQuery API, with values representing job states such as done, pending, and running. It includes functions to convert between string representations and the enumerated type. This allows API clients to specify job state filters when querying job resources.",
      "description_length": 326,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment.InReplyTo",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an activity that a comment is in reply to, with fields for the activity's ID and URL. It provides functions to create an empty instance, parse and render JSON data, and access or modify fields using lenses. Use this module when handling replies to comments in the Google+ API, where tracking the replied-to activity's identity and location is required.",
      "description_length": 402,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Values",
      "library": "gapi-ocaml",
      "description": "This module handles reading, writing, and manipulating cell values in Google Sheets spreadsheets. It provides operations for getting, updating, appending, and clearing values with support for rendering options, data insertion modes, and dimension specifications. Concrete use cases include extracting formatted data ranges, populating sheets with structured data, and appending records to existing tables without overwriting other cell properties.",
      "description_length": 447,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource.Siterestrict",
      "library": "gapi-ocaml",
      "description": "This module executes site-restricted searches using the CustomSearch API, allowing precise query parameters such as search terms, result count, safe search settings, image filters, language, and site inclusion/exclusion rules. It operates on string-based query terms and typed parameters from its submodules, including `SiteSearchFilter`, `SearchType`, and `ImgType`. Concrete use cases include searching specific websites for images matching a color or size, filtering results by language, or enforcing safe search policies.",
      "description_length": 525,
      "index": 334,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model.CustomChannel.TargetingInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring ad targeting settings within an AdSense custom channel. It provides accessors to fields like `adsAppearOn`, `description`, `location`, and `siteLanguage`, enabling precise control over where and how ads are displayed. It is used to serialize and deserialize targeting configuration to and from JSON for API interactions.",
      "description_length": 385,
      "index": 335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema.Variant",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with JSON schema variants in the API Discovery Service data model. It provides functions to create an empty variant, access and modify its `map` and `discriminant` fields using lenses, and convert between variant instances and JSON data representations. Concrete use cases include parsing and serializing schema variants from API responses or building them programmatically for client code generation.",
      "description_length": 444,
      "index": 336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.UsersResource.Blogs",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve a collection of blogs associated with a specific user from the Blogger API. It works with the `GapiBloggerV2Model.BlogList` data structure and requires a user identifier and session context. A concrete use case includes fetching all blogs owned by a user to display in a management interface or to process blog content programmatically.",
      "description_length": 390,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ProjectList.Projects",
      "library": "gapi-ocaml",
      "description": "This module defines a project record with fields for name, ID, type, numeric ID, and reference, along with lenses for accessing and modifying each field. It includes functions to serialize a project to JSON and deserialize JSON into a project, ensuring compatibility with the BigQuery API. It is used to manage and manipulate project data retrieved from or sent to the BigQuery service.",
      "description_length": 386,
      "index": 338,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File.ShortcutDetails",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling shortcut metadata in Google Drive API v3. It includes fields for the target file ID, MIME type, and resource key, along with lenses for accessing these fields. It supports parsing and rendering shortcut details to and from JSON data models.",
      "description_length": 302,
      "index": 339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.SessionM.Infix",
      "library": "gapi-ocaml",
      "description": "Implements monadic composition and sequencing for session-based computations. It provides the `>>=` (bind) and `>>` (sequence) operators to chain functions that return values wrapped in the session monad. This enables building complex workflows that maintain session state across operations, such as handling authentication tokens or API request contexts.",
      "description_length": 355,
      "index": 340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource.Segments",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve segments accessible by a user in Google Analytics. It operates on `GapiConversation.Session.t` and returns a `GapiAnalyticsV3Model.Segments.t` value representing the segments data. Use this module to fetch and manage segment definitions for reporting or analysis workflows in Google Analytics.",
      "description_length": 346,
      "index": 341,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource.ModifiedDateBehavior",
      "library": "gapi-ocaml",
      "description": "This module defines behaviors for setting or preserving the `modifiedDate` field when updating files in the Drive API. It includes variants like `FromBody`, `Now`, and `NoChange` to control how the modification timestamp is updated based on request data or server logic. These behaviors are used directly in file update operations to determine timestamp handling without relying on default server behavior.",
      "description_length": 406,
      "index": 342,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Post.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling blog references within posts using the Blogger API v2. It provides an empty blog reference, extracts and sets the blog identifier using lenses, and supports JSON serialization and deserialization. It is used to associate posts with their respective blogs by managing the blog ID in post data.",
      "description_length": 354,
      "index": 343,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Auth",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates authentication configurations for API discovery documents, specifically handling OAuth2 settings. It provides functions to create empty configurations, access and update OAuth2 scopes, and serialize or parse configurations to and from JSON. It is used to manage authentication metadata within API discovery documents, ensuring proper OAuth2 scope definitions are maintained.",
      "description_length": 410,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSource.ChildLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child link in the Google Analytics API v3, specifically for custom data sources. It includes fields for a URL (`href`) and a type identifier (`_type`), along with operations to access, modify, and serialize these fields. It is used to navigate to daily uploads or general uploads associated with a custom data source.",
      "description_length": 369,
      "index": 345,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.FilesResource.Corpus",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing different file corpora in Google Drive, such as files owned by or shared to the user, and files shared to the user's domain. It includes functions to convert between the type and its string representation. Useful when specifying the source of files in API requests, such as filtering results by corpus type.",
      "description_length": 359,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource.Customchannels",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `list` operations to retrieve custom channel details from an AdSense account's ad client. It works with data types such as `CustomChannel`, `CustomChannels`, and `Session`, along with identifiers like `accountId`, `adClientId`, and `customChannelId`. A concrete use case is fetching specific or paginated custom channel data for performance tracking or ad inventory analysis in an AdSense publisher tool.",
      "description_length": 435,
      "index": 347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.File.ContentHints",
      "library": "gapi-ocaml",
      "description": "This module handles metadata hints for file content in the Google Drive API v3, specifically managing indexable text and custom thumbnails. It provides functions to create an empty content hints structure, access and modify its fields using lenses, and convert the structure to and from JSON. It is used when setting non-standard file previews and searchable text in Drive API operations.",
      "description_length": 388,
      "index": 348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person.Image",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling profile images in the Google+ API v1 data model. It provides accessors for the `isDefault` and `url` fields using lenses, along with functions to serialize and deserialize image data to and from JSON. It is used to manage a person's profile photo metadata, including whether it is the default image and its URL with optional resizing parameters.",
      "description_length": 407,
      "index": 349,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource.Sheets",
      "library": "gapi-ocaml",
      "description": "This module handles sheet-level operations within a Google Sheets spreadsheet, primarily supporting the copying of sheets between spreadsheets. It works with sheet identifiers and properties, along with copy request payloads. A concrete use case is duplicating a sheet from one spreadsheet to another while retaining its structure and data.",
      "description_length": 340,
      "index": 350,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.User.Picture",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a user's profile picture in the Google Drive API v2. It includes operations to parse and render the picture data from and to JSON format, as well as an empty value for initialization. The primary use case is handling user profile picture URLs during API data exchange.",
      "description_length": 322,
      "index": 351,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.About.StorageQuota",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling storage quota information in the Google Drive API v3. It provides accessors to retrieve and update individual fields such as `limit`, `usageInDrive`, `usageInDriveTrash`, and `usage` using lenses. The module is used to manage and manipulate storage quota data when interacting with Google Drive's API, particularly for parsing and rendering JSON responses related to user or organization storage limits and usage.",
      "description_length": 475,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.AclRule.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines the scope of access control rules in the Calendar API, representing entities like users, groups, domains, or the public. It includes fields for the scope type and associated value, supporting operations to create, read, and modify scope data. Use it to configure or interpret ACL entries that determine who has access to calendar resources.",
      "description_length": 360,
      "index": 353,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter.SearchAndReplaceDetails",
      "library": "gapi-ocaml",
      "description": "This module defines a filter configuration for search-and-replace operations in Google Analytics data processing. It includes fields for specifying the target field, search term, replacement term, case sensitivity, and custom dimension index. It supports constructing, modifying, and serializing filter rules used when configuring data transformation pipelines for analytics reporting.",
      "description_length": 385,
      "index": 354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.File.IndexableText",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for text that can be indexed by the Drive API, specifically used to manage the `text` field of a file's indexable content. It includes functions to create an empty instance, access and modify the text field via a lens, and serialize or deserialize the structure to and from JSON. A concrete use case is configuring file metadata for searchability in Google Drive integrations.",
      "description_length": 413,
      "index": 355,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Model.Task.Links",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling task links in the Tasks API v1 data model. It provides functions to create an empty link, render a link to JSON data, and parse JSON data into a link. The module works with a record type representing a link, containing description, URL, and type fields, using lenses for field access and manipulation.",
      "description_length": 345,
      "index": 356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty.ParentLink",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent link to a Google Analytics account within a web property. It includes fields for the link's URL (`href`) and its type, which is fixed as \"analytics#account\". The module provides functions to create an empty instance, render it to JSON, and parse JSON into this structure.",
      "description_length": 330,
      "index": 357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.Person.AgeRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing age ranges with minimum and maximum integer bounds, specifically used in the Google+ API v1. It provides functions to create an empty age range, access and modify its min and max values via lenses, and convert the structure to and from JSON format. Concrete use cases include parsing and serializing age range data when interacting with Google+ API endpoints that require age-based filtering or demographic information.",
      "description_length": 473,
      "index": 358,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "GapiAdsenseV1_4Service.MetadataResource.Metrics",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve metadata for metrics available in an AdSense account, such as metric names, display names, and supported dimensions. It works with the `GapiAdsenseV1_4Model.Metadata.t` data type, which contains structured information about available metrics. A concrete use case is querying metric metadata to dynamically generate reporting interfaces or validate metric selections in AdSense performance reports.",
      "description_length": 451,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData.ColumnHeaders",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling column headers in real-time Google Analytics data. It provides functions to access and manipulate `columnType`, `dataType`, and `name` fields of a column header, which represent metadata about dimensions and metrics in API responses. Use this module to extract or construct column header information when processing real-time analytics data from Google Analytics v3 API.",
      "description_length": 432,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription.Icons",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates icon URLs for API discovery resources, specifically handling 32x32 and 16x16 icon sizes. It provides accessors for extracting or modifying these URLs within a data model, along with functions to serialize and deserialize them to and from JSON. Use this module when working with API discovery metadata that includes icon references for UI display or resource identification.",
      "description_length": 409,
      "index": 361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.OperationsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage long-running operations in Google Drive API v3, including listing, retrieving, deleting, and canceling operations. It works with operation identifiers and session state to interact with the API, supporting scenarios like monitoring background tasks or aborting pending requests. Concrete use cases include polling operation status after initiating file transfers or deleting stale operations no longer needed by the client.",
      "description_length": 464,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.HistogramRule",
      "library": "gapi-ocaml",
      "description": "This module defines a histogram rule structure with operations to set and retrieve bucket intervals, start, and end values. It supports creating empty rules, converting rules to JSON data models, and parsing JSON data into histogram rules. It is used to define bucketing strategies for histogram data in Google Sheets API requests.",
      "description_length": 331,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddChartResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a chart to a Google Sheet, specifically containing the newly added `EmbeddedChart` data. It provides functions to serialize and deserialize the response to and from JSON data models, ensuring compatibility with the API's expected formats. Use this module when handling the result of a chart addition operation to extract or manipulate the created chart's properties.",
      "description_length": 420,
      "index": 364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateConditionalFormatRuleResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from updating a conditional format rule in Google Sheets API v4. It includes fields for the old and new conditional format rules and their indices, with lenses for accessing and modifying these fields. The module supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 402,
      "index": 365,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.Url",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a shortened URL with fields for the short ID, long URL, creation time, status, kind, and optional analytics. It provides lenses to access and modify individual fields, functions to convert instances to and from JSON data models, and an empty value for initialization. Concrete use cases include storing and retrieving URL mappings with metadata, updating URL statuses, and accessing click analytics summaries.",
      "description_length": 459,
      "index": 366,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateSheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for duplicating a sheet within a Google Sheets document. It includes fields to specify the source sheet ID, insertion index, new sheet ID, and new sheet name, along with lenses for accessing and modifying these fields. The module also provides functions to convert the structure to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 414,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.KeyValueFormat",
      "library": "gapi-ocaml",
      "description": "This module defines formatting options for key-value text elements in Google Sheets API requests. It includes functions to manipulate text formatting and positioning, specifically for customizing how key-value pairs are displayed in spreadsheet cells. Use cases include configuring the visual appearance of structured data in reports or dashboards using the Sheets API.",
      "description_length": 369,
      "index": 368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.ProvisioningResource",
      "library": "gapi-ocaml",
      "description": "This module handles provisioning operations for account setup in Google Analytics. It provides functions to create account tickets and provision accounts using structured requests and session management. These operations are used during initial account configuration or integration with Google Analytics services.",
      "description_length": 313,
      "index": 369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JsonValue",
      "library": "gapi-ocaml",
      "description": "This module provides string manipulation, Unicode encoding/decoding, and binary integer extraction for immutable string data. It supports operations like hashing, endianness-aware integer parsing, and character-level transformations, targeting JSON data processing, text validation, and serialization tasks in API interactions. Key use cases include handling BigQuery's JSON payloads, converting between UTF-8/UTF-16 encodings, and reading/writing binary integer representations from strings.",
      "description_length": 492,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartDomain",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart domain data for the Google Sheets API, specifically handling the domain values and their display order. It works with `ChartData.t` for domain data and `bool` for reversal state, supporting operations to construct, render, and parse domain configurations. Concrete use cases include setting up horizontal axis data for charts, such as date ranges, and controlling axis direction in visualizations.",
      "description_length": 439,
      "index": 371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnit",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and configuration of AdSense ad units, including properties like ad unit code, identifiers, status, and styling. It provides lenses to access and modify individual fields such as `name`, `status`, and `customStyle`, along with serialization and deserialization functions for JSON-based API communication. It is used to manage ad unit configurations, retrieve ad settings, and update display properties for web and mobile content.",
      "description_length": 463,
      "index": 372,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.ChangesResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieving and monitoring changes in Google Drive by providing functions to get a starting page token, list changes with customizable filters, and subscribe to change notifications using channels. It operates on data types such as `StartPageToken`, `ChangeList`, and `Channel`, which represent initialization tokens, collections of change events, and push notification subscriptions respectively. Concrete use cases include syncing a local file system with Drive contents, tracking file access changes, and implementing real-time collaboration features by reacting to document modifications.",
      "description_length": 611,
      "index": 373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.CommentList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing fields of a paginated list of Google Drive comments. Works with `t` records containing `comments`, `kind`, and `nextPageToken`. Used to retrieve and manipulate batches of comments from Google Drive API responses, supporting pagination via `nextPageToken`.",
      "description_length": 297,
      "index": 374,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.About",
      "library": "gapi-ocaml",
      "description": "This module provides utilities for managing user-specific Drive metadata, including storage quotas, file format support, access permissions, and API usage limits. It operates on structured data types like quota allocations, role policies, and file conversion formats through lenses and JSON serialization. Specific applications include introspecting storage constraints, configuring permission models, and handling file import/export capabilities in Drive integrations.",
      "description_length": 469,
      "index": 375,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.PeopleFeed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a paginated collection of people from the Google+ API, including metadata like `nextPageToken` and `totalItems`. It provides functions to access and manipulate fields such as `items`, `etag`, and `selfLink`, as well as serialization and deserialization to JSON data models. It is used to process and traverse lists of user profiles returned by Google+ API endpoints like `people.list`.",
      "description_length": 435,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddBandingResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a banded range in the Google Sheets API. It includes operations to create an empty response, convert the response to and from JSON data models, and access or update the banded range field. It is used when processing the result of a banded range addition to manipulate or inspect the returned banded range data.",
      "description_length": 364,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ClearValuesRequest",
      "library": "gapi-ocaml",
      "description": "This module represents a request to clear cell values in a Google Sheets document. It provides functions to serialize and deserialize the request to and from JSON data models. Use this module when constructing or processing API calls to reset cell content in a spreadsheet.",
      "description_length": 273,
      "index": 378,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.CommentReply",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling comment replies in the Drive API v2, including fields like author, content, timestamps, and reply actions. It provides lenses for accessing and modifying individual properties of a comment reply, along with functions to serialize and deserialize replies to and from JSON. It is used to create, update, and process replies to comments on Drive files, supporting actions like resolving or reopening a comment thread.",
      "description_length": 478,
      "index": 379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.OverlayPosition",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for positioning overlay objects within a Google Sheets document. It provides lenses to access and modify the anchor cell, pixel offsets, and dimensions of an overlay, along with functions to serialize and deserialize overlay position data to and from JSON. It is used when embedding objects like charts or images in a sheet, specifying their placement relative to specific cells.",
      "description_length": 428,
      "index": 380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Calendar",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for calendar data in the Calendar API v3. It includes fields like `summary`, `id`, `timeZone`, and `conferenceProperties`, with lenses for accessing and modifying individual properties. Functions like `parse`, `render`, and `to_data_model` handle serialization and deserialization of calendar data for API interactions.",
      "description_length": 380,
      "index": 381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.FilterExpression",
      "library": "gapi-ocaml",
      "description": "This module defines a filter expression structure for configuring Google Analytics API v3 filters. It includes fields to specify filter criteria such as the target field, match type, expression value, and case sensitivity, along with support for custom dimensions via an index. The module provides functions to construct, render, and parse filter expressions to and from JSON data models, enabling integration with API requests. Use cases include building URI, hostname, or campaign filters with specific match conditions for reporting or data segmentation workflows.",
      "description_length": 567,
      "index": 382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.CommentList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and manipulation of Drive API v2 comment lists. Works with `CommentList.t` records containing comment arrays, pagination tokens, and metadata. Used to serialize comment lists to JSON for API requests and deserialize responses into structured data for file comment management.",
      "description_length": 303,
      "index": 383,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.GeneratedIds",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling generated file IDs in the Google Drive API v2. It includes operations to parse and render ID sets to and from JSON, access individual fields like `ids`, `kind`, and `space`, and construct or manipulate empty ID records. It is used to manage identifiers for files created in specific Drive storage spaces.",
      "description_length": 354,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BigQueryDataSourceSpec",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates BigQuery data source specifications for Google Sheets, including project identifiers, query configurations, and table references. It provides structured access to BigQuery integration settings using lenses and supports serialization to and from JSON data models. Use this module to configure or interpret BigQuery-backed data sources within spreadsheet applications.",
      "description_length": 402,
      "index": 385,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ExtendedValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing cell values in a Google Sheets document, supporting numeric, string, boolean, formula, and error types. It includes functions to access and modify each value type using lenses, along with serialization and deserialization methods for converting between JSON and the internal data model. Use cases include processing spreadsheet cell data during API interactions, handling formula and error values, and converting between JSON payloads and typed values.",
      "description_length": 506,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.PagesResource",
      "library": "gapi-ocaml",
      "description": "Implements operations to retrieve blog pages by ID or list pages for a blog, supporting filtering and metadata handling. Works with blog identifiers, page identifiers, and session state to interact with Blogger API endpoints. Used to fetch individual pages or collections of pages from a specific blog, including optional body content retrieval.",
      "description_length": 345,
      "index": 387,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ThemeColorPair",
      "library": "gapi-ocaml",
      "description": "This module defines a theme color pair with a color type and corresponding color value. It provides operations to construct, serialize, and deserialize theme color pairs using a JSON data model. Use this module to manage spreadsheet theme colors when interacting with the Google Sheets API.",
      "description_length": 290,
      "index": 388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Channel",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing notification channels in the Google Drive API v3. It includes fields for configuring delivery mechanisms, such as webhook addresses, resource identifiers, and optional parameters like expiration and payload settings. Operations allow parsing, rendering, and constructing channel configurations for API requests and responses.",
      "description_length": 375,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshDataSourceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response structure for data source refresh operations in the Google Sheets API, containing a list of execution statuses. It provides functions to serialize and deserialize the response to and from JSON, along with access to the list of statuses. It is used to interpret the results of data source refresh requests, particularly for identifying failures when partial success is allowed.",
      "description_length": 407,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SetBasicFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for setting a basic filter in a Google Sheets API request. It provides functions to create, manipulate, and serialize filter data using the `BasicFilter.t` type, which represents the structure of a filter. Concrete use cases include configuring row filters based on criteria and applying them to spreadsheet ranges via the Sheets API.",
      "description_length": 365,
      "index": 391,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdClient",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdSense ad client data, including parsing and rendering ad client records to and from JSON format. It provides lenses for accessing fields like `id`, `kind`, `productCode`, and `supportsReporting` on the `AdClient.t` type. Concrete use cases include serializing ad client data for API requests and extracting specific client attributes for reporting or configuration purposes.",
      "description_length": 420,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.FindReplaceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a find-and-replace operation in a Google Sheets document. It includes fields for tracking the number of cells, rows, sheets, and occurrences modified, supporting precise reporting of bulk text transformations. Functions allow parsing, rendering, and converting the structure to and from JSON data models for integration with API requests and responses.",
      "description_length": 420,
      "index": 393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdsenseReportsGenerateResponse",
      "library": "gapi-ocaml",
      "description": "This module handles the structure and manipulation of AdSense report responses, including parsing and rendering JSON data. It works with report data types like rows, headers, totals, and warnings, and provides lenses for accessing and modifying specific fields. Use it to process AdSense API report data, extract metrics, or generate formatted output for analysis.",
      "description_length": 364,
      "index": 394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.UsersResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` operation to retrieve a specific user's details by their ID from the Blogger API. It works with the `GapiBloggerV2Model.User.t` data structure and requires a user identifier and session context. A concrete use case includes fetching user profile information to authenticate or display user-specific data in a blogging application.",
      "description_length": 361,
      "index": 395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Spreadsheet",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for representing Google Sheets spreadsheets. It includes operations for accessing and modifying spreadsheet properties, sheets, named ranges, and metadata through lenses, as well as serialization and deserialization to JSON data models. It is used to construct, parse, and convert spreadsheet data when interacting with the Google Sheets API.",
      "description_length": 403,
      "index": 396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceSheetProperties",
      "library": "gapi-ocaml",
      "description": "This module defines properties for sheets connected to external data sources in Google Sheets API v4. It includes operations to access and modify the data source ID, columns, and execution status, as well as functions to serialize and deserialize these properties to and from JSON data models. It is used when working with sheets that display data from external sources, such as BigQuery or other integrated services.",
      "description_length": 417,
      "index": 397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.StartPageToken",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a starting page token for paginating through Google Drive API change listings. It includes functions to access and modify the `startPageToken` and `kind` fields, serialize and deserialize instances to and from JSON data models, and create empty or initialized values. It is used to manage pagination state when retrieving incremental changes from Google Drive.",
      "description_length": 410,
      "index": 398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.HistoryMessageDeleted",
      "library": "gapi-ocaml",
      "description": "This module represents a history record for a deleted message in the Gmail API. It provides operations to construct, serialize, and deserialize history entries containing a `Message.t` value. Use this module when processing Gmail API history responses to track deleted messages.",
      "description_length": 278,
      "index": 399,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response structure for creating an account in the Google Analytics API v3, containing the created account, its settings, associated profile, and web property. It provides functions to convert the response to and from JSON data models and includes lenses for accessing and modifying individual fields. It is used to handle the structured data returned when setting up a new analytics account with specific configurations.",
      "description_length": 447,
      "index": 400,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Interval",
      "library": "gapi-ocaml",
      "description": "This module defines a time interval with optional start and end timestamps, using string representations. It provides functions to create, parse, and render intervals for use in Google Sheets API requests and responses. Key operations include setting time bounds, serializing to JSON data models, and deserializing from JSON.",
      "description_length": 325,
      "index": 401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service.Scope",
      "library": "gapi-ocaml",
      "description": "Defines OAuth2 scopes for Google API access, including email, profile, and social data permissions. Provides string constants for scope values used during authorization requests. Useful for specifying access levels when integrating Google authentication in applications.",
      "description_length": 270,
      "index": 402,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceRequestStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the status of a conference creation request in the Calendar API, including operations to parse, render, and convert status data to and from JSON format. It works with the `t` type, which encapsulates a `statusCode` field representing the state of the request (`pending`, `success`, or `failure`). Concrete use cases include handling API responses to track whether a conference request is being processed, has succeeded with entry points, or has failed.",
      "description_length": 472,
      "index": 403,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for the Google Site Verification API. It provides specific string values for authorizing access to site ownership management and verification operations. These scopes are used directly when configuring API client credentials for interacting with site verification services.",
      "description_length": 315,
      "index": 404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.StringCount",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a labeled count entry, such as a country or browser with an associated click count. It provides functions to serialize and deserialize instances to and from JSON data models, as well as accessors for the label (`id`) and numeric value (`count`). It is used to represent top entries in URL shortener analytics, such as the most common referrers or geographic regions.",
      "description_length": 416,
      "index": 405,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ColorDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines color schemes for calendar elements using background and foreground string-based color values. It provides functions to parse and render color definitions to and from JSON data models, enabling integration with the Calendar API. Use cases include customizing calendar appearance by defining readable color pairs for events and UI components.",
      "description_length": 361,
      "index": 406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.CustomChannel",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing custom channels in an AdSense configuration. It provides accessors for fields like `code`, `id`, `kind`, `name`, and `targetingInfo`, and supports JSON serialization and deserialization for API interactions. It is used to configure and retrieve custom channel settings, including targeting rules for ad display.",
      "description_length": 373,
      "index": 407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Tokeninfo",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for handling OAuth2 token information returned by the Google API. It provides lenses for accessing and modifying individual fields such as `access_type`, `email`, `expires_in`, and `scope`, as well as functions to serialize and deserialize token data to and from JSON. It is used to inspect and manipulate OAuth2 token metadata, such as determining token expiration, verifying user email, or extracting the user ID.",
      "description_length": 469,
      "index": 408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotFilterSpec",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates pivot table filter specifications for Google Sheets API v4. It includes operations to set and retrieve filter criteria, data source column references, and column offsets within a pivot table configuration. Use cases include building or modifying pivot table filters based on specific data source columns and applying criteria to control displayed data.",
      "description_length": 388,
      "index": 409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.McfData",
      "library": "gapi-ocaml",
      "description": "This module provides operations for parsing, serializing, and manipulating Multi-Channel Funnels (MCF) data models, structured around a core type aggregating metadata, pagination details, query parameters, and hierarchical data rows. It works with JSON representations of MCF responses and OCaml types for typed access to funnel stages, conversion paths, and analytics metrics. These tools are primarily used for handling API requests and responses in Google Analytics v3 integrations, enabling analysis of user journey data across marketing channels.",
      "description_length": 551,
      "index": 410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing comment data, including field access via lenses, JSON serialization, and deserialization for structured comment handling. It works with comment records containing content, author metadata, status flags, and reply hierarchies, alongside JSON representations for API communication. These tools support use cases like tracking comment context, managing reply threads, and handling state transitions such as deletion or resolution in collaborative document workflows.",
      "description_length": 508,
      "index": 411,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CreateDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating developer metadata in Google Sheets API requests. It includes functions to parse and render metadata, convert to and from JSON data models, and manage the metadata payload. It is used when adding custom metadata to spreadsheet elements like sheets or cells via the API.",
      "description_length": 331,
      "index": 412,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.ListM",
      "library": "gapi-ocaml",
      "description": "Implements monadic bind and sequence operations for list computations. Works with list values wrapped in the ListM monad, enabling chaining of list-producing functions and combining list-based effects. Useful for handling non-deterministic computations where each step can produce multiple results, such as generating combinations or filtering sequences in a pipeline.",
      "description_length": 368,
      "index": 413,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Revision",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling file revisions in the Google Drive API v3. It provides lenses for accessing revision properties like ID, MIME type, modification time, and user metadata, along with functions to convert revisions to and from JSON data models. It is used to manage version history of files, including binary and document editor files, with support for export links, publication settings, and checksum verification.",
      "description_length": 473,
      "index": 414,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListSendAsResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response containing a list of send-as aliases for a Gmail account. It provides functions to parse and render the list of send-as aliases from JSON data models, as well as access and manipulate the list using lenses. It is used when managing multiple email identities in Gmail API operations.",
      "description_length": 316,
      "index": 415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for updating spreadsheet values using data filters in the Google Sheets API. It includes fields to specify how input values are interpreted, the data to apply, and options for rendering and including updated values in the response. It supports precise batch updates across multiple ranges matched by data filters, with control over response content and formatting.",
      "description_length": 404,
      "index": 416,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "This module handles comment management operations for files in Google Drive, including creating, retrieving, updating, and deleting comments. It works with `Comment` and `CommentList` data structures, along with session state for API interactions. Use cases include adding user feedback to files, fetching comment threads, and modifying or removing existing comments.",
      "description_length": 367,
      "index": 417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.UserDeletionResource",
      "library": "gapi-ocaml",
      "description": "This module manages user deletion requests for Google Analytics by providing functions to insert and update request records. It operates on `UserDeletionRequest.t` and session data to track and modify deletion request states. It is used to submit new deletion requests or update existing ones in the Google Analytics API.",
      "description_length": 321,
      "index": 418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceObjectReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for referencing objects tied to data sources in Google Sheets, including sheet identifiers, chart IDs, and grid coordinates for anchoring data source elements like tables, pivot tables, and formulas. It provides operations to construct, serialize, and parse these references, enabling precise manipulation of data-linked components within spreadsheets. Use cases include integrating external data sources with Sheets visualizations and automating layout adjustments for dynamic data displays.",
      "description_length": 529,
      "index": 419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.PermissionsResource",
      "library": "gapi-ocaml",
      "description": "This module manages file permissions in Google Drive, providing operations to create, read, update, and delete permissions, as well as retrieve permission IDs by email. It works with data types such as `Permission`, `PermissionList`, and `PermissionId`, all tied to file and user identifiers. Concrete use cases include sharing files with specific users, revoking access, and modifying permissions like changing from view to edit access.",
      "description_length": 437,
      "index": 420,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiJson.StringDictionary",
      "library": "gapi-ocaml",
      "description": "This module implements an association list for string keys and values, with operations to convert between JSON data models and dictionary structures. It supports parsing JSON into string dictionaries, rendering dictionaries into JSON lists, and nesting content as lists of lists. Concrete use cases include handling query parameters, headers, or flat JSON objects where string key-value pairs are required.",
      "description_length": 406,
      "index": 421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDimensionPropertiesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating dimension properties in a Google Sheets document, including the range of rows or columns to update, the associated data source sheet range, and the specific properties to apply. It provides lenses for accessing and modifying individual fields such as `range`, `properties`, and `fields`, along with functions to serialize and deserialize the structure to and from JSON. It is used when making API requests to modify row or column properties in Sheets, such as setting hidden status or pixel size.",
      "description_length": 546,
      "index": 422,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CancelDataSourceRefreshResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response structure for canceling data source refreshes in the Google Sheets API, containing a list of cancellation statuses. It provides functions to serialize and deserialize the response to and from JSON, as well as access and manipulate the list of statuses. It is used when handling the result of a batch update request that cancels data source refresh operations.",
      "description_length": 390,
      "index": 423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.User",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling user data in the Google Drive API v3. It provides lenses for accessing fields like display name, email address, and permission ID, along with functions to serialize and deserialize user data to and from JSON. It is used to process user information returned by API calls, such as retrieving the details of a file owner or collaborator.",
      "description_length": 396,
      "index": 424,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Service.PeopleResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to retrieve and manage person data from the Google+ API, including fetching individual profiles, listing people in specific collections, and searching public profiles. It works with user identifiers, collection types, and sort orders to structure API requests and returns person data in feed format. Concrete use cases include fetching a user's visible contacts, listing people connected to an activity, and performing keyword searches on public profiles.",
      "description_length": 486,
      "index": 425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLinks",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of entity user links in the Google Analytics API v3. It provides lenses for accessing and modifying fields such as items, pagination parameters, and navigation links, along with functions to serialize and deserialize to and from JSON data models. Use cases include processing API responses to retrieve and navigate through lists of user permissions for Google Analytics entities.",
      "description_length": 455,
      "index": 426,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceParametersAddOnParameters",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling key-value pairs as conference add-on parameters in the Calendar API. It supports operations to parse, render, and convert parameter lists to and from JSON data models. Concrete use cases include managing custom parameters for conference creation or updates in API requests.",
      "description_length": 323,
      "index": 427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TreemapChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring treemap charts in the Google Sheets API. It includes fields for specifying label hierarchies, cell sizes, color mappings, and display settings like text format and color scales. Key operations include setting data sources for labels and sizes, configuring color gradients, and controlling tooltip visibility.",
      "description_length": 371,
      "index": 428,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Color",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing RGBA colors with floating-point components and provides functions to manipulate and convert color values. It includes lenses for accessing individual color channels, utilities to serialize and deserialize color data to JSON, and a default empty color value. Concrete use cases include configuring cell background colors in Google Sheets API requests and parsing color responses from the API into usable structures.",
      "description_length": 468,
      "index": 429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GradientRule",
      "library": "gapi-ocaml",
      "description": "This module defines a gradient rule for conditional formatting in Google Sheets, consisting of start, mid, and end interpolation points. It provides functions to create, modify, and serialize gradient rules to and from JSON data models. Use this module to apply multi-point color gradients to spreadsheet cells based on their values.",
      "description_length": 333,
      "index": 430,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.ActivitiesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve, list, and search activities in the Google+ API. It works with activity identifiers, user identifiers, and enumerated types for sorting and collection types. Concrete use cases include fetching a specific activity by ID, listing a user's public activities, and searching public posts sorted by relevance or date.",
      "description_length": 356,
      "index": 431,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDiscoveryV1Service.ApisResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to list available APIs and retrieve RESTful descriptions for specific API versions. It works with data structures like `DirectoryList` for API listings and `RestDescription` for detailed API metadata. Concrete use cases include discovering Google APIs programmatically and inspecting API schemas for integration or documentation purposes.",
      "description_length": 370,
      "index": 432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartGroupRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart group rules for Google Sheets, specifically handling date-time and histogram grouping logic. It works with `t` records containing `ChartDateTimeRule.t` and `ChartHistogramRule.t` fields, along with JSON data models for serialization. Use this module to construct, parse, and convert chart group rule configurations when interacting with the Sheets API.",
      "description_length": 394,
      "index": 433,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickSeries",
      "library": "gapi-ocaml",
      "description": "This module defines a `CandlestickSeries` data structure used to represent financial time series data in Google Sheets API v4. It includes operations to serialize and deserialize the series to and from JSON, as well as access and modify its underlying `ChartData` content. It is used when constructing or interpreting candlestick chart data models within spreadsheet chart configurations.",
      "description_length": 388,
      "index": 434,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying dimension ranges to delete in a Google Sheets document. It includes operations to create, render, and parse deletion requests, working with `DimensionRange` and JSON data models. It is used when modifying sheet structure by removing rows or columns via the Google Sheets API.",
      "description_length": 327,
      "index": 435,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSources",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of Google Analytics custom data sources, including pagination metadata and links. It provides lenses for accessing and modifying individual fields like `items`, `itemsPerPage`, and `nextLink`, along with functions to serialize and deserialize to and from JSON data models. It is used to process and manipulate API responses containing lists of custom data sources, supporting pagination and data extraction workflows.",
      "description_length": 493,
      "index": 436,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationQuery",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for a BigQuery SQL query job, including settings like query priority, destination table, and cache usage. It supports operations to set and retrieve query parameters, such as specifying external data sources, defining result handling, and controlling table creation and overwrite behavior. Use this module when configuring and executing BigQuery jobs that require custom output handling, external data integration, or performance tuning.",
      "description_length": 475,
      "index": 437,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Segments",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and serialization for Google Analytics API segments. It provides lenses to access and modify fields like items, pagination parameters, and links within a segments collection. Use it to parse or render segment data when interacting with the API's response payloads.",
      "description_length": 300,
      "index": 438,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.GridProperties",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring grid properties in a Google Sheets document. It provides lenses to access and modify fields like row and column counts, frozen rows/columns, and gridline visibility, along with functions to serialize and deserialize the data model to JSON. It is used to programmatically adjust spreadsheet grid settings, such as setting frozen rows or hiding gridlines in a sheet's UI.",
      "description_length": 434,
      "index": 439,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Columns",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates column metadata returned by the Google Analytics API v3, including attribute names, ETag comparison, and column item lists. It supports parsing and rendering column data to and from JSON data models, ensuring correct structure and type handling. Concrete use cases include processing API responses to extract available report columns and managing cache validation through ETag comparison.",
      "description_length": 424,
      "index": 440,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.MessagePart",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for a message part in a MIME email, including accessors for body, headers, MIME type, and nested parts. It supports parsing and rendering message parts to and from JSON data models, enabling interaction with the Gmail API. Use cases include extracting attachments, inspecting email headers, and constructing or modifying multipart email messages.",
      "description_length": 407,
      "index": 441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ProjectList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of BigQuery projects, containing metadata like `etag`, `nextPageToken`, and `totalItems`, along with a list of individual project entries. It provides lenses for accessing and modifying each field, along with serialization and deserialization to and from JSON data models. It is used to process and manage responses from the BigQuery API when listing available projects.",
      "description_length": 410,
      "index": 442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ExplainQueryStage",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for analyzing individual stages in BigQuery query execution plans. It includes fields tracking performance metrics like CPU usage, I/O wait times, and data throughput, along with lenses for accessing and modifying these fields. The module supports parsing and rendering stages to and from JSON data models, enabling integration with BigQuery's API for query analysis and optimization workflows.",
      "description_length": 445,
      "index": 443,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.UrlChannel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for constructing, parsing, and rendering URL channel data used in the AdSense Management API. It works with a record type containing identifiers, resource kinds, and URL patterns, and provides functions to convert between this record and JSON data models. It is used to manage URL channels in AdSense configurations, such as retrieving or updating their patterns and identifiers during API interactions.",
      "description_length": 434,
      "index": 444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.AboutResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` operation to retrieve detailed information about a user's Google Drive account, including storage quotas, user profile data, and system capabilities. It works with the `About.t` model structure and requires specifying the `fields` parameter to control which data subsets are returned. Concrete use cases include checking available storage space, fetching user identity details, and inspecting Drive API capabilities for the current user.",
      "description_length": 468,
      "index": 445,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.ProjectReference",
      "library": "gapi-ocaml",
      "description": "This module defines a project reference structure with a required project ID field, supporting operations to parse, render, and convert project references to and from JSON data models. It works with string-based project identifiers and is used to represent and manipulate project references in BigQuery API requests and responses. Concrete use cases include constructing valid project references for API calls and extracting project information from API responses.",
      "description_length": 464,
      "index": 446,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiService.StandardParameters",
      "library": "gapi-ocaml",
      "description": "Handles standard query parameters for API requests, including `alt`, `fields`, `prettyPrint`, `quotaUser`, `userIp`, and `key`. Converts parameter records to key-value lists and merges optional parameter sets into a single configuration. Used to configure request options when calling Google API services, such as setting API keys, selecting response formats, or enabling pretty-printing.",
      "description_length": 388,
      "index": 447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TreemapChartColorScale",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring color scales in treemap charts within Google Sheets, specifying colors for minimum, midpoint, maximum, and no-data cell values. It includes functions to create an empty configuration, render the structure to JSON, and parse or convert JSON data to and from the color scale type. The module is used to customize treemap chart appearance by mapping data values to specific color gradients or thresholds in spreadsheet visualizations.",
      "description_length": 484,
      "index": 448,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableFieldSchema",
      "library": "gapi-ocaml",
      "description": "This module defines the schema structure for fields in a BigQuery table, including required properties like name and data type, and optional properties like description, mode, and nested fields. It supports operations for creating, parsing, and rendering field schemas, as well as converting between schema objects and JSON data models. Concrete use cases include defining table schemas when creating or updating BigQuery tables and processing schema definitions from API responses.",
      "description_length": 482,
      "index": 449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyRequestItem",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying calendar identifiers in free/busy time queries. It includes operations to serialize and deserialize the structure to and from JSON data models, and provides an empty value for initialization. The primary use case is to construct request items for checking availability across calendars in the Google Calendar API.",
      "description_length": 365,
      "index": 450,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GridData",
      "library": "gapi-ocaml",
      "description": "This module represents a grid of data in a Google Sheets spreadsheet, including row and column metadata. It provides functions to access and modify grid properties such as start row, start column, row data, and dimension metadata. Use this module to construct, manipulate, and serialize grid data when interacting with the Google Sheets API, such as when retrieving or updating specific ranges in a sheet.",
      "description_length": 405,
      "index": 451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.CalendarListResource",
      "library": "gapi-ocaml",
      "description": "This module manages calendar list resources for a user, providing functions to list, retrieve, add, update, and remove calendars from the user's calendar list. It works with calendar IDs and calendar list entries, which include metadata like access roles, visibility settings, and calendar properties. Use this module to synchronize calendar views, manage shared calendar access, or update calendar display settings such as colors.",
      "description_length": 431,
      "index": 452,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SearchDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from searching developer metadata in a Google Sheets document. It provides access to a list of matched metadata entries, along with functions to serialize and deserialize the response to and from JSON data models. It is used when querying custom metadata attached to spreadsheet elements, such as cells or sheets, based on specific criteria.",
      "description_length": 377,
      "index": 453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goal",
      "library": "gapi-ocaml",
      "description": "This module provides tools for defining and manipulating goal configurations in Google Analytics, focusing on conditions like URL matching, session duration thresholds, page depth, and event triggers. It operates on a `Goal.t` record type, which encapsulates metadata and nested condition objects such as `UrlDestinationDetails` or `EventDetails`, alongside utilities for JSON serialization and field-level updates via lenses. These capabilities are particularly useful for integrating Analytics goals with external systems, validating tracking rules, or dynamically adjusting goal criteria based on user behavior patterns.",
      "description_length": 623,
      "index": 454,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.ChildReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a child reference in the Drive API, with fields for links and identifiers. It provides operations to access and modify individual fields using lenses, as well as functions to convert between the structure and JSON data models. Use cases include managing hierarchical relationships between Drive resources and serializing or deserializing child references during API interactions.",
      "description_length": 429,
      "index": 455,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a paginated response from querying BigQuery table data. It includes fields for result metadata like `etag`, `kind`, and `pageToken`, along with the actual `rows` of data and the `totalRows` count. It supports parsing and rendering JSON data models, enabling interaction with BigQuery's API for retrieving and processing table results.",
      "description_length": 384,
      "index": 456,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddBandingRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding banded ranges to a Google Sheets document. It includes functions to create an empty request, set or retrieve a banded range, and convert the request to or from JSON data models. It is used when applying conditional formatting to ranges in a spreadsheet via the Google Sheets API.",
      "description_length": 339,
      "index": 457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Upload",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling file uploads in the Google Analytics API v3. It includes functions to parse and render upload records, access and modify individual fields like account ID, status, and upload time, and convert between JSON and native OCaml representations. It is used to manage custom data imports, track upload statuses, and handle errors associated with data ingestion.",
      "description_length": 418,
      "index": 458,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdsenseReportsGenerateResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from generating an AdSense report, containing structured data such as headers, rows, totals, and warnings. It works with report data returned by the AdSense Management API, including string-based cells for dimensions and metrics, header metadata, and summary information. Concrete use cases include parsing and rendering API report responses, extracting averages or totals from monetization data, and processing warnings or row counts for reporting dashboards.",
      "description_length": 496,
      "index": 459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TimeOfDay",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing time of day values with precision down to nanoseconds, specifically tailored for use with the Google Sheets API. It includes functions to serialize and deserialize time values to and from JSON data models, ensuring compatibility with API requests and responses. Use cases include formatting time values for spreadsheet cell updates or parsing time-based responses from the Sheets API.",
      "description_length": 438,
      "index": 460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllResponse",
      "library": "gapi-ocaml",
      "description": "This module handles responses from batch row insertion operations in the BigQuery API, capturing insertion errors and response metadata. It works with a record type containing a list of `InsertErrors` structures and a string indicating the resource type. Concrete use cases include processing and validating results after sending data to BigQuery, particularly for identifying failed rows and their associated errors during bulk uploads.",
      "description_length": 437,
      "index": 461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DimensionGroup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing hierarchical dimension groups in a spreadsheet, with operations to set or retrieve the group's range, depth, and collapsed state. It supports serialization to and from JSON data models, enabling integration with the Google Sheets API. Use cases include organizing rows or columns into collapsible sections for data visualization or hierarchical data representation.",
      "description_length": 415,
      "index": 462,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.UrlchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module handles operations for managing URL channels within an AdSense account, specifically providing a `list` function to retrieve URL channels for a given ad client. It works with data types such as `GapiAdsenseV1_4Model.UrlChannels.t` and session data via `GapiConversation.Session.t`. A concrete use case is fetching and analyzing URL channel performance data to optimize ad placement strategies.",
      "description_length": 405,
      "index": 463,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.TableColumnDataValidationRule",
      "library": "gapi-ocaml",
      "description": "This module defines data validation rules for table columns in Google Sheets, specifically enforcing conditions where cell values must match a predefined list. It works with `BooleanCondition` and `json_data_model` types to represent and serialize validation logic. Concrete use cases include restricting input to specific dropdown values or predefined options in spreadsheet tables.",
      "description_length": 383,
      "index": 464,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiClientLogin.Service",
      "library": "gapi-ocaml",
      "description": "This module defines a set of supported Google service types for authentication and provides the `string_of` function to convert these service types into their corresponding string representations. It works directly with the variant type `t`, which includes specific Google services like `Gmail`, `Calendar`, `YouTube`, and others. Concrete use cases include selecting and identifying Google services during the Client Login authorization process.",
      "description_length": 446,
      "index": 465,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableReference",
      "library": "gapi-ocaml",
      "description": "This module defines a `TableReference` type that represents a reference to a BigQuery table using `datasetId`, `projectId`, and `tableId`. It provides functions to construct, serialize, and deserialize table references to and from JSON data models. Use this module when working with BigQuery API operations that require referencing specific tables, such as querying or managing table metadata.",
      "description_length": 393,
      "index": 466,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Service.AppsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to retrieve and list installed apps in Google Drive. It works with `GapiDriveV2Model.App.t` and `GapiDriveV2Model.AppList.t` data types, representing individual apps and collections of apps. Concrete use cases include fetching app details by ID or listing all apps installed by a user, optionally filtered by file extensions, MIME types, or language code.",
      "description_length": 386,
      "index": 467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateChartSpecRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating chart specifications in a Google Sheets document. It includes operations to set or retrieve the chart ID and its associated specification, along with functions to serialize and deserialize the structure to and from JSON. It is used when modifying chart properties such as type, data ranges, and visual settings via the Google Sheets API.",
      "description_length": 387,
      "index": 468,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceSolutionKey",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a conference solution key in the Calendar API v3, primarily used to identify and handle different types of conference solutions such as Google Meet or third-party add-ons. It includes functions to create an empty instance, access and modify the `_type` field, and convert between JSON data models and the internal representation. Concrete use cases include parsing conference solution keys from API responses and rendering them for API requests.",
      "description_length": 495,
      "index": 469,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.MatchedDeveloperMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling matched developer metadata and associated filters in the Google Sheets API. It provides operations to access, construct, and serialize metadata and filter data for API requests and responses. Use cases include processing filtered developer metadata results from spreadsheet queries and building payloads for metadata updates.",
      "description_length": 375,
      "index": 470,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.HashClientIdRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with fields for `clientId`, `kind`, and `webPropertyId`, and provides functions to serialize and deserialize instances to and from JSON data models. It supports creating empty records and accessing or modifying individual fields via lenses. Concrete use cases include preparing and parsing client ID hashing requests when interacting with the Google Analytics API v3.",
      "description_length": 401,
      "index": 471,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.App",
      "library": "gapi-ocaml",
      "description": "This module supports structured data modeling and manipulation for application metadata in cloud storage integrations, focusing on properties like authorization, file type support, and UI representation. It works with record types containing fields for URLs, capability flags, and icon descriptors, alongside lenses for type-safe access and modification. Use cases include configuring app permissions, handling file creation/opening workflows, and serializing metadata to JSON for API interactions.",
      "description_length": 498,
      "index": 472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ListOperationsResponse",
      "library": "gapi-ocaml",
      "description": "Handles responses from listing operations in the Google Drive API v3, providing access to a list of operations and a next-page token. Works with `Operation.t list` and string types, structured into a record for API response handling. Used to retrieve and manage paginated operation data from Drive API requests.",
      "description_length": 311,
      "index": 473,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.AclRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates access control list (ACL) rules for calendar resources, including fields such as `kind`, `etag`, `id`, `role`, and `scope`. It supports creating, parsing, and serializing ACL rules to manage permissions for users, groups, or domains on calendar data. Concrete use cases include setting up calendar sharing rules, modifying access roles, and synchronizing ACLs with external systems.",
      "description_length": 418,
      "index": 474,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Post",
      "library": "gapi-ocaml",
      "description": "This module provides tools for managing blog post data, including functional updates via lenses, JSON serialization, and deserialization. It operates on a structured record type representing blog posts, with fields for content, metadata (title, timestamps), and relationships to authors and blogs, alongside JSON data structures for interchange. It is used to model interactions with the Blogger API v2, enabling typed manipulation of posts and their conversion to/from JSON for storage or transmission.",
      "description_length": 503,
      "index": 475,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SpreadsheetProperties",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring spreadsheet metadata such as title, locale, time zone, and calculation settings. It includes lenses for accessing and modifying individual properties, along with functions to serialize and deserialize the data model to and from JSON. It is used to set or retrieve configuration details when interacting with Google Sheets API operations like spreadsheet creation or updates.",
      "description_length": 437,
      "index": 476,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.SmimeInfo",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling S/MIME certificate information used in the Gmail API. It provides functions to create, parse, and render S/MIME data, including accessors for fields like certificate expiration, issuer name, and encryption details. Use cases include managing email encryption settings, configuring default certificates, and handling secure message signing through the Gmail API.",
      "description_length": 423,
      "index": 477,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceResource",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for verified web resources in the Google Site Verification API, including fields for resource ID, verified owners, and associated site information. It provides functions to create an empty resource, convert resources to and from JSON data models, and access or modify individual fields using lenses. These operations support managing site verification workflows, such as retrieving, updating, or deleting verification records via the API.",
      "description_length": 475,
      "index": 478,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SetDataValidationRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring data validation rules in Google Sheets, including the target cell range, validation criteria, and whether to apply the rule to filtered rows. It provides functions to serialize and deserialize validation requests to and from JSON, enabling integration with the Sheets API. Use cases include setting up input constraints like dropdowns or numeric ranges in spreadsheet cells programmatically.",
      "description_length": 444,
      "index": 479,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AdunitsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage ad units within an AdSense account, including retrieving individual ad units, listing all ad units for a client, and fetching ad code. It works with `GapiAdsenseV1_4Model.AdUnit.t`, `GapiAdsenseV1_4Model.AdUnits.t`, and `GapiAdsenseV1_4Model.AdCode.t` data types, requiring parameters such as `adClientId`, `adUnitId`, and session state. Concrete use cases include generating ad unit reports, managing publisher inventory, and integrating ad code into web applications.",
      "description_length": 511,
      "index": 480,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReports",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of unsampled reports from the Google Analytics API v3, including parsing and rendering report data to and from JSON format. It works with data structures representing paginated unsampled report responses, such as lists of unsampled reports and metadata like pagination links and result counts. Concrete use cases include retrieving and processing large sets of unsampled analytics data across multiple pages, and integrating with API clients that require JSON serialization.",
      "description_length": 530,
      "index": 481,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.WatchResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for a Gmail API watch request, containing the expiration time and current history ID. It provides functions to serialize and deserialize the response to and from JSON data models, as well as accessors to retrieve and update individual fields using lenses. It is used to manage push notification settings for mailbox updates in the Gmail API.",
      "description_length": 384,
      "index": 482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityUserLink",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates entity user link structures in the Google Analytics API v3. It provides lenses to access and modify fields such as entity, permissions, and user reference, along with functions to serialize and deserialize link data for API communication. Use cases include updating user permissions for specific Analytics entities and retrieving user link information from API responses.",
      "description_length": 407,
      "index": 483,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickData",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for candlestick chart data in the Google Sheets API. It includes functions to set and retrieve low, open, close, and high value series, each represented as a `CandlestickSeries`. The module supports serialization to and from JSON data models for integration with API requests and responses.",
      "description_length": 339,
      "index": 484,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceListResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of verified web resources, specifically through its `t` type which contains a list of site verification resource records. It provides functions to serialize and deserialize this structure to and from JSON data models, enabling interaction with the Google Site Verification API. Use cases include retrieving and managing a user's verified websites in API responses.",
      "description_length": 421,
      "index": 485,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.ChannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `stop` operation to halt event notifications for a specific channel in the Calendar API. It works with `Channel.t` and `Session.t` types to manage the lifecycle of event subscriptions. A concrete use case is unsubscribing from calendar change notifications when a user logs out or disables event tracking.",
      "description_length": 330,
      "index": 486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.User",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing user profiles in the Blogger API v2. It includes fields such as user ID, display name, profile summary, creation timestamp, locale, and blog references, along with lenses for accessing and modifying these fields. It supports serialization and deserialization to and from JSON, enabling integration with API requests and responses for user management tasks such as retrieving and updating user profile data.",
      "description_length": 468,
      "index": 487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Settings",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling calendar settings collections, including parsing and rendering JSON data models, accessing individual fields like `etag`, `nextPageToken`, and `items`, and managing synchronization tokens. It works with settings collections containing lists of `Setting.t` values, alongside JSON data models for serialization. Concrete use cases include retrieving paginated user settings, processing API responses with sync tokens, and converting between JSON representations and typed OCaml structures.",
      "description_length": 531,
      "index": 488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDataSource",
      "library": "gapi-ocaml",
      "description": "This module provides operations for constructing and manipulating custom data source entities in Google Analytics API v3, including JSON serialization/deserialization and field-level accessors. It works with structured data types like `t` (containing account identifiers, schema definitions, and timestamps), ParentLink, and ChildLink modules to model hierarchical relationships. These capabilities are specifically used for API interactions requiring data source configuration, such as creating or updating custom data pipelines and processing time-stamped analytics metadata.",
      "description_length": 577,
      "index": 489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartColumnStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the style configuration for columns in a waterfall chart, including label, color, and color style fields. It provides operations to access and modify these properties using lenses, and supports serialization and deserialization to and from JSON data models. Use this module when configuring or interpreting waterfall chart column styles in Google Sheets API interactions.",
      "description_length": 391,
      "index": 490,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountSummary",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Google Analytics account summary data, including fields like account ID, name, starred status, and associated web properties. It provides lenses for accessing and modifying individual fields, functions for JSON serialization and deserialization, and an empty value for initialization. It is used to process and manipulate account summary responses from the Google Analytics API v3.",
      "description_length": 443,
      "index": 491,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceSolution",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates conference solution data structures used in calendar events, including fields for display name, icon URI, and unique solution key. It provides functions to serialize and deserialize these structures to and from JSON, enabling integration with the Calendar API. Use cases include creating, updating, and rendering conference solutions for events in a calendar system.",
      "description_length": 402,
      "index": 492,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Label",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing label data in the Google Drive API v3, including creating empty labels, parsing and rendering label structures from and to JSON, and accessing label properties such as id, revisionId, kind, and fields via lenses. It works with the `t` type representing a label, which includes a list of key-value pairs mapping field IDs to label fields. Concrete use cases include constructing label objects from API responses, modifying label fields, and serializing labels for API requests.",
      "description_length": 520,
      "index": 493,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Editors",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates editor access settings for protected ranges in Google Sheets documents. It provides functions to set and retrieve lists of user and group email addresses with edit permissions, as well as control domain-wide access. Use cases include configuring access control for shared spreadsheets and programmatically managing permissions in automated document workflows.",
      "description_length": 395,
      "index": 494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.Account",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for working with AdSense account data, including fields like `id`, `kind`, `name`, and nested `subAccounts`. It provides lenses for accessing and modifying account properties, functions for serialization and deserialization to JSON, and utilities for converting between account data models. Concrete use cases include parsing API responses, building account hierarchies, and extracting account metadata for reporting or configuration purposes.",
      "description_length": 492,
      "index": 495,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.BatchDeleteMessagesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batch-deleting messages in the Gmail API by specifying a list of message IDs. It provides functions to create an empty request, render the request into JSON, and parse or convert between the request type and a JSON data model. Concrete use cases include constructing and serializing API requests to delete multiple messages in a single call.",
      "description_length": 382,
      "index": 496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudience",
      "library": "gapi-ocaml",
      "description": "This module manages remarketing audience configurations in Google Analytics, supporting both state-based and static audience definitions. It provides lens-based accessors for manipulating core properties like account identifiers, audience types, and view linkages, along with utilities to serialize and deserialize audience data to JSON formats. These operations enable use cases such as programmatic audience creation, configuration synchronization, and integration with analytics reporting pipelines.",
      "description_length": 502,
      "index": 497,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.AutoForwarding",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring auto-forwarding settings in the Gmail API. It provides lenses to access and modify the disposition, email address, and enabled status of auto-forwarding, along with functions to serialize and deserialize these settings to and from JSON data models. It is used to programmatically manage auto-forwarding behavior for a Gmail account, such as enabling forwarding to a verified address or specifying how messages should be handled after forwarding.",
      "description_length": 510,
      "index": 498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ModifyLabelsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for modifying labels on files in Google Drive, supporting operations to add, remove, or update label values. It works with lists of `LabelModification` records and serializes to or from JSON data models for API communication. Concrete use cases include applying label changes to files and parsing or constructing such requests during client interactions with the Drive API.",
      "description_length": 413,
      "index": 499,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceParameters",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling conference parameters in the Calendar API (v3). It includes operations to parse and render conference data to and from JSON, and provides an empty value for initialization. It works primarily with `t` records containing add-on parameters and interacts with `GapiJson.json_data_model` for data exchange.",
      "description_length": 379,
      "index": 500,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateEmbeddedObjectBorderRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating the border of an embedded object in a Google Sheets document. It includes fields for specifying the object ID, the new border configuration, and which specific fields to update. Operations include creating empty instances, rendering to JSON, parsing from JSON, and converting to or from a data model for API interactions.",
      "description_length": 371,
      "index": 501,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.RealtimeResource",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `update` functions to retrieve and replace the Realtime API data model of a Drive file as JSON. It operates on Drive files identified by `fileId`, using session-based authentication and supporting optional parameters like revision control and media transfers. Use cases include synchronizing collaborative document state and persisting structured data changes in real-time applications.",
      "description_length": 417,
      "index": 502,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.TableList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of BigQuery tables, containing metadata like the current page hash, next page token, and total item count. It provides lenses to access and modify fields such as `tables`, `etag`, and `nextPageToken`, along with JSON serialization and deserialization functions. It is used to handle responses when listing tables in a dataset, enabling pagination and metadata management.",
      "description_length": 411,
      "index": 503,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceFormula",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing data source formulas in the Google Sheets API, including the associated data source ID and execution status. It provides functions to serialize and deserialize the structure to and from JSON data models, as well as lenses for accessing and modifying individual fields. Use this module when working with data source formulas in spreadsheet configurations, such as retrieving execution status or setting data source references.",
      "description_length": 479,
      "index": 504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response type for updates made to a Google Sheets document using a data filter. It includes fields to track the range and extent of updates, such as the number of updated rows, columns, and cells, along with the applied data filter and resulting cell values. The module provides lenses for accessing and modifying individual fields, functions for JSON serialization and deserialization, and an empty value for initialization.",
      "description_length": 447,
      "index": 505,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateFilterViewResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for duplicating a filter view in the Google Sheets API. It includes a `filter` field containing the duplicated filter view data and supports JSON serialization and deserialization. It is used to handle the result of a filter duplication operation, enabling integration with API requests and responses.",
      "description_length": 344,
      "index": 506,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AppendDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for appending rows or columns to a Google Sheet, with operations to set or retrieve the sheet ID, dimension type, and length. It provides functions to serialize and deserialize the structure to and from JSON data models. Concrete use cases include constructing requests to programmatically expand sheets by a specified number of rows or columns during API interactions.",
      "description_length": 406,
      "index": 507,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceGettokenResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for obtaining a site verification token from the Google Site Verification API. It includes fields for the verification method (`_method`) and the token value (`token`), along with lenses for accessing and modifying these fields. The module supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 409,
      "index": 508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BasicFilter",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring and manipulating spreadsheet filters in the Google Sheets API. It supports creating, parsing, and rendering filter configurations that specify sorting, column-based filtering, and data ranges. Concrete use cases include setting up dynamic data views by defining sort orders with `sortSpecs`, applying visibility rules per column using `filterSpecs`, and associating filters with specific grid ranges or tables.",
      "description_length": 477,
      "index": 509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to delete developer metadata in a Google Sheets document using a data filter. It includes operations to create an empty request, render it to JSON, parse from JSON, and convert to or from a data model. The primary data structure is a record containing a `DataFilter` that specifies which metadata to delete, used when making API requests to manage custom metadata entries.",
      "description_length": 402,
      "index": 510,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.WebPropertyRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics web property reference, with fields for identifiers, links, and metadata. It provides functions to parse and render web property references from JSON data models, enabling integration with the Google Analytics API. Use cases include retrieving web property details, constructing API requests, and handling responses containing web property information.",
      "description_length": 421,
      "index": 511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiClientLogin.Error",
      "library": "gapi-ocaml",
      "description": "This module defines error types for authentication responses, including specific cases like `BadAuthentication` and `CaptchaRequired`. It provides functions to convert error codes from strings and retrieve descriptive messages. Use this module to handle and interpret API authentication errors in client login workflows.",
      "description_length": 320,
      "index": 512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateSpreadsheetResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from batch update requests to a Google Sheets spreadsheet. It provides accessors to retrieve the spreadsheet ID, list of replies corresponding to each update, and the updated spreadsheet data model. These functions support parsing and rendering JSON data for integration with the Google Sheets API, enabling precise manipulation and validation of spreadsheet content after updates.",
      "description_length": 453,
      "index": 513,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AccountsResource",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `list` operations to retrieve detailed information about AdSense accounts and enumerate available accounts. It works with `Account.t` and `Accounts.t` data structures, using session data and account identifiers for authentication and request parameters. Concrete use cases include fetching account metadata for multi-account management or listing all accessible accounts to select a specific one for reporting and inventory operations.",
      "description_length": 466,
      "index": 514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteBandingRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for deleting a banded range in a Google Sheets document. It provides functions to create, parse, and render a delete banding request, which includes the `bandedRangeId` field specifying the ID of the banded range to remove. It is used when modifying the formatting of a spreadsheet by removing conditional formatting bands.",
      "description_length": 372,
      "index": 515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteSheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for deleting a sheet in the Google Sheets API. It includes functions to create an empty request, set or retrieve the sheet ID, and convert the request to and from JSON format. It is used when issuing a delete sheet operation via the Sheets API, where the sheet ID must be specified.",
      "description_length": 336,
      "index": 516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListFiltersResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response containing a list of Gmail filters. It provides functions to parse and render filter data in JSON format, as well as access and manipulate the list of filters. It is used when retrieving and processing user-defined filters from the Gmail API.",
      "description_length": 276,
      "index": 517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CellFormat",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates cell formatting options for Google Sheets API v4, including number format, background color, borders, padding, alignment, text wrapping, and hyperlink display. It works with structured data types such as `t` for cell format configuration and interacts with JSON data models for serialization and parsing. Concrete use cases include setting styled number displays, configuring cell borders, and defining text alignment and rotation in spreadsheet cells.",
      "description_length": 488,
      "index": 518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CreateConferenceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating a conference request in the Calendar API v3. It includes fields for the request status, a unique client-generated ID, and the conference solution key, with functions to parse, render, and convert to or from JSON data models. It is used to manage conference creation requests programmatically, ensuring correct data formatting and handling for API interactions.",
      "description_length": 422,
      "index": 519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.TablesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage tables within a dataset in the BigQuery API. It supports creating, retrieving, updating, patching, listing, and deleting tables, working with data types such as `Table.t` and `TableList.t`. Concrete use cases include setting up new tables, modifying table configurations, fetching table metadata, and managing table collections in a dataset.",
      "description_length": 383,
      "index": 520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyGroup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a group of calendars in the Google Calendar API v3, specifically for tracking free/busy information. It includes fields for calendar identifiers and optional errors, with functions to serialize, deserialize, and manipulate the structure. Use cases include managing calendar group responses and handling API errors during free/busy queries.",
      "description_length": 389,
      "index": 521,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.EmbeddedObjectBorder",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring borders of embedded objects in Google Sheets. It provides accessors to manipulate border color using either a direct color value or a styled color representation, with functions to serialize and deserialize border configurations to and from JSON data models. It is used to define the visual appearance of borders around embedded objects like charts or images within a spreadsheet.",
      "description_length": 445,
      "index": 522,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service.DatasetsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage datasets in a BigQuery project, including creating, retrieving, updating, patching, listing, and deleting datasets. It works with dataset identifiers, project identifiers, and session state to interact with the BigQuery API. Concrete use cases include setting up new datasets for data storage, retrieving dataset metadata, modifying dataset properties, and cleaning up datasets after data processing tasks.",
      "description_length": 448,
      "index": 523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperty",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing web property records, including JSON serialization and lens-based accessors to manipulate fields like account identifiers, timestamps, and resource links. It centers on a record type that encapsulates web property metadata, incorporating nested modules for permissions and hierarchical relationships (parent/child links) to model Google Analytics API v3 resources. These capabilities are used when interacting with the API to retrieve, update, or configure web property settings and associated metadata.",
      "description_length": 548,
      "index": 524,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.PermissionList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing lists of permissions associated with Google Drive files, including fields like ETag, self-link, and a list of individual permissions. It provides functions to serialize and deserialize permission lists to and from JSON, as well as lenses for accessing and modifying individual fields. It is used when retrieving or updating multiple permissions in the Drive API, such as listing all users with access to a file.",
      "description_length": 461,
      "index": 525,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of labels in the Google Drive API v3, providing access to a list of label resources, a next page token for pagination, and a fixed kind identifier. It supports operations to retrieve, parse, and render label list data in JSON format, enabling interaction with Drive's label management features. Concrete use cases include fetching and processing sets of labels with pagination support, and serializing or deserializing label list data for API requests and responses.",
      "description_length": 506,
      "index": 526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ChannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `stop` function to terminate a channel used for watching resources in the Drive API. It operates on a `Channel.t` record and a session, returning an updated session after stopping the channel. A concrete use case is ending real-time monitoring of file changes or access events in Google Drive.",
      "description_length": 318,
      "index": 527,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UserRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a user reference in the Google Analytics API v3, with fields for email, user ID, and kind. It provides functions to create, parse, and render user reference objects to and from JSON data models. Use this module when handling user identity information in API requests or responses involving Google Analytics user data.",
      "description_length": 367,
      "index": 528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics account reference, with fields for the account's link, ID, kind, and name. It provides functions to parse and render this structure to and from JSON data models, as well as lenses for accessing and modifying individual fields. It is used to manage references to Analytics accounts when interacting with the Google Analytics API v3.",
      "description_length": 400,
      "index": 529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics4",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for handling job statistics related to file extraction in BigQuery. It includes functions to parse and render job statistics, specifically tracking the number of files written to each destination URI. Use cases include monitoring and validating the output of BigQuery extract jobs by examining the count of generated files per URI.",
      "description_length": 385,
      "index": 530,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.UrlHistory",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the structure of paginated short URL history data, including access to individual URLs, pagination metadata, and serialization to and from JSON. It works with lists of URL resources, integer counts, and string tokens. Concrete use cases include retrieving user short URL history, handling paginated API responses, and converting between JSON and typed OCaml representations for processing or storage.",
      "description_length": 436,
      "index": 531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.User",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a user in the Google Drive API v2, including fields such as display name, email address, authentication status, and profile picture. It provides functions to convert user data to and from JSON format, extract or update specific fields using lenses, and initialize an empty user record. Concrete use cases include processing user data retrieved from API responses and constructing user objects for permission management.",
      "description_length": 473,
      "index": 532,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines string constants representing OAuth 2.0 scope values for the Google Drive API v3. It provides specific access levels for operations such as reading, editing, and managing files, metadata, and app-specific data in Google Drive. These scopes are used to request authorization for actions like accessing user files, modifying scripts, or viewing photos and metadata.",
      "description_length": 383,
      "index": 533,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.Label",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for working with Gmail labels in the v1 API. It includes fields like label color, visibility settings, message/thread counts, and type information, along with lenses for accessing and modifying these fields. It supports parsing and rendering labels to and from JSON data models, enabling integration with Gmail's API for label management and analysis.",
      "description_length": 400,
      "index": 534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TableRowsProperties",
      "library": "gapi-ocaml",
      "description": "This module defines properties for styling rows in a Google Sheets table, including header, alternating band, and footer colors. It provides lenses to access and modify each color style field, along with functions to serialize and deserialize the structure to and from JSON data models. Use this module when configuring or updating the visual appearance of tabular data ranges in Google Sheets.",
      "description_length": 394,
      "index": 535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.FilterView",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing filter views in Google Sheets API v4. It includes fields for specifying filter ranges, sorting, and criteria, along with lenses for accessing and modifying these fields. Use cases include creating, updating, and serializing filter views for interaction with the Sheets API.",
      "description_length": 337,
      "index": 536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TrimWhitespaceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure to represent the result of trimming whitespace in a Google Sheets document. It includes functions to parse and render the response, as well as access and modify the `cellsChangedCount` field, which indicates how many cells were affected. It is used to process API responses after performing a whitespace trimming operation on a spreadsheet.",
      "description_length": 377,
      "index": 537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.PostList",
      "library": "gapi-ocaml",
      "description": "Handles structured data for paginated blog post listings in the Blogger API v2. It provides accessors and mutators for post lists, pagination tokens, and metadata, using lenses and JSON serialization. Useful for retrieving, parsing, and rendering collections of blog posts with navigation support.",
      "description_length": 297,
      "index": 538,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshDailySchedule",
      "library": "gapi-ocaml",
      "description": "This module defines a daily schedule for refreshing data sources in Google Sheets, centered on a start time represented as a `TimeOfDay.t` value. It provides operations to construct, serialize, and deserialize schedule configurations, specifically for setting and retrieving the daily refresh interval. Concrete use cases include configuring automated data refreshes at a specified hour and integrating schedule settings with JSON-based API requests.",
      "description_length": 450,
      "index": 539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ChangeList",
      "library": "gapi-ocaml",
      "description": "This module represents a list of changes returned by the Google Drive API, containing a collection of change records and pagination tokens. It provides accessors to retrieve individual fields such as `kind`, `nextPageToken`, `newStartPageToken`, and the list of `changes`. It is used when polling for changes in a user's Drive, allowing clients to track updates across multiple requests using page tokens.",
      "description_length": 405,
      "index": 540,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDrive",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates Team Drive metadata for Google Drive API v3, including fields like `id`, `name`, `colorRgb`, `themeId`, and `restrictions`. It supports creating, parsing, and serializing Team Drive configurations to and from JSON for API requests and responses. Concrete use cases include setting up Team Drive branding with background images, enforcing access policies through restrictions, and managing user capabilities.",
      "description_length": 443,
      "index": 541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupLimit",
      "library": "gapi-ocaml",
      "description": "This module defines a pivot group limit with a count limit and an application order. It provides functions to set and access the limit's count and order, as well as to serialize and deserialize the limit to and from JSON data models. It is used to control the number of pivot table groups and their processing order when interacting with the Google Sheets API.",
      "description_length": 360,
      "index": 542,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.PermissionList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and manipulation of Google Drive API v3 permission lists. Works with `Permission.t list` and `json_data_model` to manage paginated responses. Used to extract and process sets of permissions for files or folders, including handling pagination tokens for large datasets.",
      "description_length": 296,
      "index": 543,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Slicer",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for working with slicers in Google Sheets API v4. It provides operations to create, parse, and render slicer objects, which include their ID, specification, and position on a sheet. Use cases include integrating slicers into spreadsheets for filtering data, such as enabling interactive controls for pivot tables or range-based filters.",
      "description_length": 383,
      "index": 544,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.Thread",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation functions for a Gmail thread, including operations to access and modify thread properties such as `historyId`, `id`, `messages`, and `snippet`. It works with the `Thread.t` type, which represents a thread containing a list of messages, and interacts with JSON data models for serialization and deserialization. Concrete use cases include parsing API responses into thread objects, rendering threads into JSON for API requests, and updating thread data incrementally using lenses.",
      "description_length": 530,
      "index": 545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupRule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates pivot group rules for categorizing data in Google Sheets pivot tables. It supports operations to construct, serialize, and deserialize rules based on manual, histogram, or date-time criteria. Concrete use cases include configuring pivot table groupings when interacting with the Google Sheets API.",
      "description_length": 333,
      "index": 546,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiConversation.Session",
      "library": "gapi-ocaml",
      "description": "This module manages the session state for HTTP conversations, handling authentication contexts for OAuth1, OAuth2, and ClientLogin, and storing associated data such as tokens, secrets, cookies, and ETags. It provides lenses to access and modify session fields like curl state, configuration, and authorization context. Concrete use cases include maintaining authenticated sessions during API requests and managing token refresh flows.",
      "description_length": 434,
      "index": 547,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceParameter",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for parameters used in Google Sheets data sources, supporting named parameters, named range IDs, and grid ranges. It provides functions to serialize and deserialize parameter data to and from JSON, ensuring compatibility with the Sheets API. Concrete use cases include configuring data source queries with dynamic values from specific cells or named ranges in a spreadsheet.",
      "description_length": 411,
      "index": 548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.GetQueryResultsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for querying BigQuery job results, including fields to check job completion, access result rows, and retrieve metadata like schema and processing statistics. It provides lenses for accessing individual fields such as cache hit status, errors, and pagination tokens, along with functions to serialize and deserialize the response to and from JSON. Concrete use cases include handling paginated query results, checking job status, and extracting processed data and schema after a BigQuery execution.",
      "description_length": 540,
      "index": 549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants used for accessing Google BigQuery and related services. It includes specific scopes for data manipulation, read-only access, and integration with Google Cloud Storage. These constants are used to configure OAuth2 permissions when making API requests to BigQuery and Cloud Storage.",
      "description_length": 332,
      "index": 550,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BasicSeriesDataPointStyleOverride",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates style overrides for individual data points in a chart series. It includes fields for index, color, color style, and point style, allowing customization of visual properties for specific data points in area, line, or scatter charts. Operations include creating empty overrides, rendering to JSON, parsing from JSON, and converting to and from JSON data models.",
      "description_length": 395,
      "index": 551,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.DatasetList",
      "library": "gapi-ocaml",
      "description": "This module handles dataset list responses from the BigQuery API, providing access to dataset entries, pagination tokens, and metadata like etag and kind. It supports parsing and rendering dataset lists to and from JSON data models, and includes lenses for accessing individual fields. It is used when listing datasets in a project, enabling programmatic traversal of paginated results.",
      "description_length": 386,
      "index": 552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CancelDataSourceRefreshStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling the cancellation status of a data source refresh in the Google Sheets API. It includes functions to create, render, and parse cancellation status objects, working with JSON data models and lenses for accessing nested fields. It is used to manage the state and metadata of cancelled data source refresh operations within a spreadsheet.",
      "description_length": 396,
      "index": 553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.SmtpMsa",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates SMTP configuration data for Gmail API send-as settings, including host, port, security mode, username, and password fields. It provides lenses for accessing and modifying individual fields, functions to convert between JSON data models and SMTP configurations, and utilities to construct or deconstruct SMTP settings. Concrete use cases include setting up authenticated SMTP for outgoing emails and updating existing send-as aliases with new server configurations.",
      "description_length": 500,
      "index": 554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Reply",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for handling replies in the Google Drive API v3. It includes fields such as `id`, `action`, `content`, and `author`, and provides functions to serialize and deserialize replies to and from JSON. Use cases include creating, updating, and displaying replies to comments on Drive files, with support for tracking reply metadata like creation and modification times.",
      "description_length": 416,
      "index": 555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.OAuth2",
      "library": "gapi-ocaml",
      "description": "Handles OAuth 2.0 authorization responses with functions to extract and manipulate access tokens, refresh tokens, and expiration times. Works with `access_token` records containing token values, types, and metadata. Used to parse and manage credentials received from OAuth 2.0 identity providers during authentication flows.",
      "description_length": 324,
      "index": 556,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeveloperMetadataLookup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for constructing and manipulating developer metadata lookup queries in the Google Sheets API. It supports filtering metadata by location type, matching strategy, ID, key, value, and visibility, using a structured format that maps directly to API request parameters. It is used to precisely query or modify developer metadata associated with specific spreadsheet elements like rows, columns, or cells.",
      "description_length": 452,
      "index": 557,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for deleting developer metadata in the Google Sheets API. It includes operations to access and manipulate the list of deleted metadata, render responses to JSON, and parse JSON data into response objects. It works directly with `DeveloperMetadata.t` lists and JSON data models for API communication.",
      "description_length": 342,
      "index": 558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDataSourceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a data source in the Google Sheets API, containing the created data source and its execution status. It provides functions to access and manipulate these fields using lenses, and supports JSON serialization and deserialization. It is used to handle API responses when creating external data sources in a spreadsheet.",
      "description_length": 370,
      "index": 559,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ErrorProto",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing errors returned by the BigQuery API, including fields for debugging information, error location, human-readable messages, and error codes. It provides functions to convert between this error structure and JSON data models, enabling seamless serialization and deserialization. Use this module when handling API responses to extract and process structured error details from BigQuery operations.",
      "description_length": 447,
      "index": 560,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.MakeMonadCombinators",
      "library": "gapi-ocaml",
      "description": "This module provides monadic combinators for composing and transforming monadic values, including functions like `join`, `liftM`, `mapM`, and `foldM`, along with infix operators for chaining and sequencing. It works with any monad implementing the `m` type constructor, enabling operations such as sequential execution of API calls, lifting functions into monads, and folding over lists with monadic actions. Concrete use cases include structuring workflows with error handling, managing state transitions, and orchestrating sequences of dependent computations.",
      "description_length": 561,
      "index": 561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AdWordsAccount",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdWords account data within the Google Analytics API v3 data model. It provides functions to construct, serialize, and update AdWords account records using lenses for field access and modification. Concrete use cases include creating AdWords links with required customer IDs and serializing account data for API requests or storage.",
      "description_length": 376,
      "index": 562,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.TableColumnProperties",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates table column properties for the Google Sheets API v4, including column index, name, type, and optional data validation rules. It provides lenses for accessing and modifying individual fields, functions for converting to and from JSON data models, and utilities for parsing and rendering column properties. Concrete use cases include configuring table columns with validation rules, serializing column settings for API requests, and deserializing API responses into structured column data.",
      "description_length": 524,
      "index": 563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Page",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing blog pages in the Blogger API v2. It includes functions to serialize and deserialize page data to and from JSON, along with a data type that captures page metadata such as title, content, publication date, and URLs. The module is used to interact with Blogger API endpoints that manage individual blog pages, enabling creation, retrieval, and modification of page content and properties.",
      "description_length": 453,
      "index": 564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationTableCopy",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for copying tables in a BigQuery job, including source and destination table references, create and write dispositions. It supports operations for setting up single or multiple source table copies and managing table existence behavior during job execution. Use this module when configuring BigQuery jobs that involve table copying, such as duplicating datasets or merging data from multiple sources into a single destination table.",
      "description_length": 469,
      "index": 565,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextFormatRun",
      "library": "gapi-ocaml",
      "description": "This module defines a text format run with a start index and formatting properties, used to apply styles to specific ranges of text within a cell. It provides operations to access and modify the start index and format, as well as serialization and deserialization functions for converting to and from JSON data models. It is used when updating rich text formatting in Google Sheets cells through the API.",
      "description_length": 404,
      "index": 566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.PaymentsResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieval of payment information for AdSense accounts. It provides the `list` operation to fetch a list of payments associated with an AdSense publisher's account, returning the data in a structured format. It works directly with `GapiAdsenseV1_4Model.Payments.t` and session data to manage authentication and request parameters.",
      "description_length": 349,
      "index": 567,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RepeatCellRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update a range of cells in a Google Sheet with the same cell data. It includes operations to specify the range, the cell data to apply, and the specific fields to update. It is used when applying uniform formatting or data changes across a grid range in a spreadsheet.",
      "description_length": 301,
      "index": 568,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Border",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring border properties in Google Sheets API requests. It includes fields for border style, width, and color (with support for modern color styling via `colorStyle`), and provides functions to serialize and deserialize border data to and from JSON. It is used to define cell border formatting in spreadsheet styling operations.",
      "description_length": 386,
      "index": 569,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.SettingsResource",
      "library": "gapi-ocaml",
      "description": "This module handles user settings in the Calendar API, providing operations to retrieve individual settings, list all settings for a user, and watch for changes. It works with `Setting.t` and `Settings.t` data structures, representing single and multiple user settings respectively. Concrete use cases include fetching a specific setting by key, synchronizing user preferences, and monitoring changes to settings across sessions.",
      "description_length": 429,
      "index": 570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Borders",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates border configurations for cells in a Google Sheets document. It provides accessors for top, bottom, left, and right borders using lenses, along with functions to convert border data to and from JSON format. It is used to apply or modify cell border styles in spreadsheet data models.",
      "description_length": 319,
      "index": 571,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.AppIcons",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling icons in the Google Drive API. It provides lenses to access the size, category, and URL of an icon, along with functions to convert between icon data and JSON representations. It is used to manage icon metadata when interacting with Drive applications and file types.",
      "description_length": 344,
      "index": 572,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickDomain",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying the domain of a candlestick chart in the Google Sheets API, including the data source and axis reversal flag. It provides functions to serialize and deserialize the domain configuration to and from JSON, enabling integration with API requests. Use this module when configuring candlestick chart domains with custom data ranges and axis orientations in spreadsheet visualizations.",
      "description_length": 431,
      "index": 573,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying data sources in Google Sheets API (v4), supporting BigQuery and Looker integrations. It includes functions to construct, serialize, and deserialize data source specifications, along with parameter handling for query execution. Concrete use cases include configuring external data connections and managing dynamic data refresh settings in spreadsheet applications.",
      "description_length": 427,
      "index": 574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddChartRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a chart to a Google Sheets spreadsheet via the API. It includes functions to create, serialize, and deserialize chart requests, working with `EmbeddedChart.t` and JSON data models. It is used to construct API requests that insert new charts into spreadsheets, ensuring correct placement and unique identification.",
      "description_length": 373,
      "index": 575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.PageList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling lists of blog pages retrieved from the Blogger API. It includes functions to parse and render page lists to and from JSON, access the list of pages or the entity kind, and create empty page list instances. It is used to manage collections of blog pages when interacting with the Blogger API, such as retrieving or updating multiple pages at once.",
      "description_length": 396,
      "index": 576,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDimensionGroupRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update the state of a dimension group in a Google Sheet, specifying the group and the fields to update. It works with `DimensionGroup.t` and string fields, using lenses to access and modify the group and fields. Use this module to construct or modify dimension group update requests when interacting with the Google Sheets API.",
      "description_length": 360,
      "index": 577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.PermissionsResource",
      "library": "gapi-ocaml",
      "description": "This module manages permissions for files and shared drives in Google Drive, providing operations to create, delete, retrieve, list, and update individual permissions. It works with `Permission` and `PermissionList` data types to represent access control entries and collections of permissions. Concrete use cases include granting or revoking user access to a file, retrieving a list of current permissions for auditing, and modifying existing permission settings such as expiration or ownership transfer.",
      "description_length": 505,
      "index": 578,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPagespeedonlineV1Service.PagespeedapiResource",
      "library": "gapi-ocaml",
      "description": "Implements the PageSpeed Insights API for analyzing web page performance, providing functions to run speed assessments with configurable parameters like strategy, locale, and rule filters. Operates on URLs and session data to produce detailed performance reports, including scores, optimization suggestions, and metadata. Useful for integrating performance testing into CI pipelines or monitoring tools by programmatically evaluating web pages against desktop or mobile benchmarks.",
      "description_length": 481,
      "index": 579,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.BlogList",
      "library": "gapi-ocaml",
      "description": "This module represents a list of blogs a user has authorship or admin rights over, with operations to access the list of blogs, retrieve the entity kind, and convert to and from JSON data models. It works with `GapiBloggerV2Model.Blog.t` lists and `GapiJson.json_data_model` structures. Concrete use cases include parsing blog lists from API responses and rendering them for API requests.",
      "description_length": 388,
      "index": 580,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Response",
      "library": "gapi-ocaml",
      "description": "This module provides lens-based accessors for handling composite responses from Google Sheets API v4 operations, enabling precise extraction of individual mutation results like sheet additions, named range updates, or chart modifications. It works with structured response records and supports JSON serialization/deserialization for data interchange, making it suitable for scenarios requiring programmatic response parsing or integration with external systems. Use cases include processing batched API responses to isolate specific operation outcomes and converting response data to JSON for storage or further processing.",
      "description_length": 623,
      "index": 581,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.MetadataResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve metadata for dimensions available to an AdSense account. It works with `GapiConversation.Session.t` and returns `GapiAdsenseV1_4Model.Metadata.t` alongside the updated session. A concrete use case is fetching dimension metadata to configure or validate report generation parameters in AdSense integrations.",
      "description_length": 360,
      "index": 582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddSlicerResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a slicer in the Google Sheets API. It contains a single field for the newly added slicer and provides functions to access, modify, and convert the response to and from JSON data models. It is used to retrieve the properties of a newly created slicer after an addition operation.",
      "description_length": 326,
      "index": 583,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddFilterViewResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a filter view in the Google Sheets API. It contains a single field for the newly added filter view and provides operations to access, modify, and serialize the response data. It is used when interacting with spreadsheet filter views programmatically, such as after creating or updating a filter.",
      "description_length": 343,
      "index": 584,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing AdSense data, including full access (`adsense`) and read-only access (`adsense_readonly`). It works with string values representing OAuth 2.0 scope identifiers. Use these scopes to authenticate API requests when interacting with the AdSense Management API to retrieve or manage publisher data.",
      "description_length": 349,
      "index": 585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateTableRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating a table in the Google Sheets API. It includes fields to specify the table data and which parts of the table to update, supporting partial updates via field masks. It provides functions to serialize and deserialize the update request to and from JSON, and to manipulate the request data using lenses.",
      "description_length": 361,
      "index": 586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AdunitsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list ad units within an AdSense account, specifically supporting the `get` and `list` functions. It works with data types such as `AdUnit`, `AdUnits`, and `Session`, along with parameters like `adClientId`, `adUnitId`, and pagination controls. A concrete use case is managing ad inventory by fetching specific ad units or listing all ad units to monitor performance or adjust ad placement settings.",
      "description_length": 446,
      "index": 587,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Colors",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling color palettes in a calendar API, including calendar and event color mappings. It provides accessors to retrieve or update color definitions, along with serialization and deserialization functions for JSON data exchange. Use this module to manage global color settings for calendars and events, such as retrieving available colors or applying custom color schemes.",
      "description_length": 426,
      "index": 588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.UrlChannel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing URL channels in the AdSense Management API, including creating, parsing, and rendering URL channel data. It works with the `t` type representing a URL channel, along with JSON data models for serialization and deserialization. Concrete use cases include extracting URL channel information from API responses, constructing new URL channel entries, and converting between internal and external data formats for API communication.",
      "description_length": 471,
      "index": 589,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.History",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling Gmail API history records, including tracking changes like added or removed labels and messages. It works with data types representing history entries, labels, and messages, using lenses for field access and manipulation. Concrete use cases include parsing and rendering history data from JSON, managing message state changes, and inspecting label modifications within a mailbox.",
      "description_length": 441,
      "index": 590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BandedRange",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates banded ranges in a Google Sheets document, supporting operations to set and retrieve row and column banding properties over a specified grid range. It works with `t` records containing an ID, a `GridRange.t` range, and optional `BandingProperties.t` for rows and columns. Concrete use cases include applying alternating color styles to rows or columns within a specific cell range in a spreadsheet.",
      "description_length": 434,
      "index": 591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.AppsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to retrieve and list installed apps for a user in Google Drive. It works with `GapiDriveV3Model.App.t` and `GapiDriveV3Model.AppList.t` data types, representing individual apps and collections of apps. Concrete use cases include fetching details of a specific app by ID and listing all apps installed by a user, filtered by MIME types or extensions.",
      "description_length": 380,
      "index": 592,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.AccessproposalsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage access proposals for files in Google Drive. It supports retrieving a specific access proposal by ID, listing all proposals for a file, and resolving (approving or denying) a proposal. These functions work with file identifiers and access proposal data structures to handle access control workflows directly within Drive.",
      "description_length": 362,
      "index": 593,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListSmimeInfoResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response containing a list of S/MIME certificates for a Gmail user. It provides operations to access, serialize, and deserialize the list of `SmimeInfo` records, which include certificate details like issuer, expiration, and usage. Use this module when managing S/MIME certificate configurations for secure email in Gmail API integrations.",
      "description_length": 364,
      "index": 594,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextToColumnsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring text-to-columns operations in Google Sheets, specifying a source range, delimiter, and delimiter type. It provides functions to serialize and deserialize the structure to and from JSON, as well as lenses for accessing and modifying individual fields. It is used when issuing requests to split text across columns in a spreadsheet via the Google Sheets API.",
      "description_length": 409,
      "index": 595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GridCoordinate",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing coordinates within a grid-based spreadsheet, specifically identifying positions by sheet ID, row index, and column index. It includes functions to serialize and deserialize these coordinates to and from JSON data models, as well as lenses for accessing and modifying individual components. It is used when interacting with grid-specific operations such as cell updates or range selections in a spreadsheet API.",
      "description_length": 464,
      "index": 596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddSlicerRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a slicer to a Google Sheets spreadsheet via the API. It includes functions to create, parse, and render a request containing a `Slicer` object with an optional ID and placement position. Use this module when configuring slicer insertion operations in a spreadsheet, such as setting up data filters for pivot tables or charts.",
      "description_length": 385,
      "index": 597,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableCell",
      "library": "gapi-ocaml",
      "description": "This module defines a single data structure representing a cell in a BigQuery table, with a focus on serialization and deserialization to JSON. It provides operations to construct an empty cell, access and modify its value, and convert between the cell type and JSON data models. It is used when processing query results or constructing table data for ingestion into BigQuery.",
      "description_length": 376,
      "index": 598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Uploads",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of Google Analytics uploads, including parsing and rendering JSON data models, accessing individual uploads, and managing pagination metadata like page size, total results, and navigation links. It works with the `t` record containing upload lists, integers, and strings, along with lenses for accessing each field. Concrete use cases include processing API responses to extract upload data, constructing paginated requests, and converting between JSON and native OCaml structures for analytics uploads.",
      "description_length": 559,
      "index": 599,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Segment",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for working with Google Analytics segments. It provides lenses for accessing and modifying segment properties such as creation time, definition, ID, name, and type, along with functions to serialize and deserialize segments to and from JSON data models. It is used to manage and manipulate Analytics segment data when interacting with the Core Reporting API.",
      "description_length": 407,
      "index": 600,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartSeries",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart series configurations for visualizing data in Google Sheets, supporting series types like line, area, and column. It works with structured data types such as `ChartData`, `LineStyle`, `Color`, `ColorStyle`, and `PointStyle` to define the appearance and behavior of chart elements. Concrete use cases include setting line styles for time-series data, assigning colors to bar series, and configuring data labels for specific points in a scatter plot.",
      "description_length": 490,
      "index": 601,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Acl",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing access control lists (ACLs) in a calendar system. It provides functions to parse, render, and manipulate ACL data structures containing lists of access rules, pagination tokens, and synchronization tokens. Concrete use cases include retrieving and updating calendar sharing permissions with specific user or group access rules.",
      "description_length": 371,
      "index": 602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.CommentList",
      "library": "gapi-ocaml",
      "description": "Handles structured data for retrieving and paginating comment lists from the Blogger API v2. It supports parsing and rendering comment lists to and from JSON data models, and provides access to individual comments, pagination tokens, and metadata. Used when fetching or processing multiple comments for a blog post, including navigating through paginated results.",
      "description_length": 363,
      "index": 603,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTreeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for creating or updating Google Analytics account configurations, including fields for account name, profile name, timezone, and website URL. It provides lenses for accessing and modifying individual fields, along with functions to serialize to and parse from JSON data models. Concrete use cases include constructing account creation requests and processing API responses containing account configuration data.",
      "description_length": 448,
      "index": 604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationExtract",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for extracting data from a BigQuery table to Google Cloud Storage. It includes parameters such as compression type, file format, field delimiter, and output location, supporting formats like CSV, JSON, and AVRO. It is used when initiating a table export job, ensuring data is written to specified URIs with the desired formatting and compression.",
      "description_length": 384,
      "index": 605,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.HistoryLabelAdded",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the addition of labels to a Gmail message, containing a list of label IDs and the associated message. It provides functions to access and modify the label IDs and message fields, as well as to serialize and deserialize the structure to and from JSON data models. It is used to track label changes in Gmail API history records.",
      "description_length": 376,
      "index": 606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.ChannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `stop` function to terminate a channel used for watching resources in Google Drive API v3. It operates on `Channel.t` and `Session.t` data types, enabling clients to unsubscribe from change notifications for specific Drive resources. A concrete use case is stopping a channel after receiving a resource update notification to prevent further pushes.",
      "description_length": 374,
      "index": 607,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.LinkedForeignAccount",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing linked foreign accounts in the Google Analytics API v3. It provides lenses for accessing and modifying account properties such as `linkedAccountId`, `status`, and `_type`, along with functions to serialize and deserialize account data to and from JSON. Use cases include integrating AdWords or DBM accounts with Google Analytics and managing remarketing audience links through API interactions.",
      "description_length": 458,
      "index": 608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.JsonSchema",
      "library": "gapi-ocaml",
      "description": "This module enables structured manipulation of JSON schemas through lenses, allowing precise access to properties like `type`, `format`, and `enum`, while supporting serialization to and from JSON representations. It operates on a schema type that incorporates annotations and variants, enabling use cases such as API client code generation, data validation, and dynamic schema interpretation during runtime. Key operations include field modification, schema composition, and conversion to data models for interoperability.",
      "description_length": 523,
      "index": 609,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ForwardingAddress",
      "library": "gapi-ocaml",
      "description": "This module defines a forwarding address with an email and verification status. It provides functions to create, render, parse, and convert forwarding addresses to and from JSON data models. Use cases include managing email forwarding configurations in the Gmail API, such as setting up or verifying forwarding addresses.",
      "description_length": 321,
      "index": 610,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines string constants representing OAuth 2.0 scopes for the Drive API v2. It provides specific access levels for operations such as file management, metadata manipulation, app data control, and read-only access to photos and metadata. These scopes are used when authenticating API requests to control permissions for Drive resources.",
      "description_length": 348,
      "index": 611,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to delete a range of cells in a Google Sheets document, specifying how surrounding cells should shift to fill the deleted area. It works with grid ranges and string dimensions to determine deletion bounds and shift direction. Concrete use cases include removing rows or columns and adjusting spreadsheet layout during automated data manipulation.",
      "description_length": 376,
      "index": 612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationLoad",
      "library": "gapi-ocaml",
      "description": "This component defines data structures and configuration options for BigQuery data ingestion jobs, supporting specification of destination tables, source URIs, format parsing rules, schema definitions, and write disposition settings. It includes mechanisms to serialize these configurations to JSON format and deserialize them back into typed objects, enabling integration with API endpoints and persistent storage workflows. Common use cases include loading CSV, JSON, or Datastore backup files into BigQuery datasets with custom parsing, schema enforcement, and controlled data overwrite behaviors.",
      "description_length": 600,
      "index": 613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ReplyList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of replies retrieved from the Google Drive API, providing access to the replies themselves and a token for fetching subsequent pages. It works with `Reply.t list` and string-based page tokens to manage pagination. Use this module when handling multi-page responses of replies from Drive API operations, such as listing comments or tracking paginated updates.",
      "description_length": 398,
      "index": 614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.DatasetReference",
      "library": "gapi-ocaml",
      "description": "This module defines a dataset reference structure with required dataset ID and optional project ID, using lenses for accessing and modifying fields. It provides functions to convert between the dataset reference and JSON data models for serialization and parsing. Use cases include constructing and validating dataset identifiers for BigQuery API operations.",
      "description_length": 358,
      "index": 615,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SearchDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for searching developer metadata in Google Sheets, using a list of data filters to specify matching criteria. It provides operations to serialize and deserialize the request to and from JSON data models, ensuring compatibility with API payloads. Use this module when constructing or processing search queries for developer metadata entries based on specific filtering conditions.",
      "description_length": 419,
      "index": 616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Revision",
      "library": "gapi-ocaml",
      "description": "This module provides structured access to file revision metadata through field-level lenses and conversion functions between revision records and JSON data models. It handles data structures containing download URLs, file sizes, timestamps, user information, and revision state flags, enabling manipulation of Drive API v2 revision data. Typical use cases include parsing API responses into typed OCaml objects, modifying revision properties like access permissions, and serializing changes back to JSON for API requests.",
      "description_length": 521,
      "index": 617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.RepliesResource",
      "library": "gapi-ocaml",
      "description": "This module manages replies to comments in Google Drive. It supports creating, deleting, retrieving, listing, and updating replies using the Google Drive API v3. Operations work with reply identifiers, comment identifiers, and reply data structures, enabling precise manipulation of comment threads.",
      "description_length": 299,
      "index": 618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CopyPasteRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying copy-paste operations in a Google Sheets document. It includes fields for source and destination ranges, paste type (e.g., values, formatting), and orientation (e.g., normal, transpose). The module provides functions to construct, manipulate, and serialize these operations to and from JSON for use in API requests.",
      "description_length": 367,
      "index": 619,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableDataInsertAllRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for constructing and manipulating BigQuery table data insertion requests. It supports creating empty requests, parsing and rendering JSON data models, and modifying request parameters such as `ignoreUnknownValues`, `skipInvalidRows`, and `templateSuffix`. The module works with a list of row structures defined in the `Rows` submodule, each representing a row to be inserted along with an optional unique identifier.",
      "description_length": 465,
      "index": 620,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for batch value clearing operations in a spreadsheet API. It includes fields for the spreadsheet ID and the list of cleared ranges in A1 notation. Functions allow parsing, rendering, and converting the response to and from JSON data models.",
      "description_length": 283,
      "index": 621,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.SortRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying a range of cells to sort in a Google Sheets document, along with the sort order for each column. It includes functions to create, modify, and serialize sort requests using lenses for accessing the range and sort specifications. Concrete use cases include preparing sort operations to be sent to the Google Sheets API and parsing or rendering sort configurations in JSON format for API interactions.",
      "description_length": 450,
      "index": 622,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiLens.StateInfix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for modifying values through functional lenses in a state monad context. It supports set operations, in-place arithmetic updates, and list concatenation on lens-targeted data structures. Useful for incrementally updating nested immutable records or objects with minimal boilerplate.",
      "description_length": 318,
      "index": 623,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RandomizeRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to randomize the order of cells within a specified grid range in a Google Sheets document. It includes operations to set and retrieve the grid range, serialize and deserialize the request for API communication, and convert between internal and JSON data models. Concrete use cases include shuffling rows or columns in a spreadsheet range via the Google Sheets API.",
      "description_length": 394,
      "index": 624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.GeneratedIds",
      "library": "gapi-ocaml",
      "description": "This module handles the creation and manipulation of generated IDs in the Google Drive API v3 data model. It provides functions to parse and render ID data to and from JSON structures, access specific fields like `ids`, `space`, and `kind`, and construct or modify ID collections. Concrete use cases include processing batch ID generation responses from Drive API calls and preparing ID payloads for file creation requests.",
      "description_length": 423,
      "index": 625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobCancelResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure returned when canceling a BigQuery job, containing the final state of the job and the resource type. It provides functions to parse and render the response to and from JSON data models, along with lenses to access and modify the job and kind fields. It is used to handle job cancellation responses in BigQuery API interactions, enabling inspection of the canceled job's final status and response metadata.",
      "description_length": 448,
      "index": 626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.MetadataResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` function to retrieve column definitions for a given report type from the Google Analytics API. It operates on the `GapiAnalyticsV3Model.Columns.t` data structure, which encapsulates the API's response containing available metrics and dimensions. A concrete use case is validating and constructing Analytics API queries by ensuring the use of supported columns for a specific report type.",
      "description_length": 419,
      "index": 627,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateSpreadsheetPropertiesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update properties of a Google Sheets spreadsheet, specifying which fields to update and their new values. It works with `SpreadsheetProperties.t` and string fields, using lenses for accessing and modifying the properties and fields. It is used when sending updates to the Google Sheets API, such as changing the spreadsheet's title, locale, or time zone.",
      "description_length": 387,
      "index": 628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestResource",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates REST resource structures used to represent API endpoints in a discovery service. It provides accessors for methods, sub-resources, and deprecation status, along with functions to convert between JSON data models and resource instances. It is used to build and interpret API definitions from JSON metadata.",
      "description_length": 341,
      "index": 629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filters",
      "library": "gapi-ocaml",
      "description": "This module handles collections of Google Analytics filters, providing accessors to retrieve and modify individual fields such as the list of filters, pagination parameters, and metadata like kind and username. It supports parsing and rendering filter collections from and to JSON data models, enabling interaction with the Google Analytics API v3. Concrete use cases include retrieving paginated filter lists, updating filter entries, and navigating through result pages using next/previous links.",
      "description_length": 498,
      "index": 630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarNotification",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates calendar notification settings for the Google Calendar API v3. It provides functions to create, parse, and render notification configurations with specific delivery methods and event triggers. Use cases include setting up email alerts for event changes, cancellations, or daily agendas.",
      "description_length": 322,
      "index": 631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddProtectedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a protected range to a Google Sheets document. It includes functions to create, parse, and render a protected range request, which contains a `ProtectedRange` object with an optional unique identifier. Use this module when configuring protected ranges in a spreadsheet, ensuring the provided range ID is unique or omitting it to auto-generate one.",
      "description_length": 407,
      "index": 632,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceColumnReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for referencing columns in a data source within the Google Sheets API. It includes operations to create, serialize, and deserialize column references, primarily working with JSON data models. Use cases include configuring data source columns in spreadsheets and mapping external data fields to sheet columns.",
      "description_length": 345,
      "index": 633,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOauth2V2Model.Userinfoplus",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing extended user information retrieved from the Google OAuth2 API, including fields like email, name, gender, and profile picture URL. It provides lenses for accessing individual fields, functions for JSON serialization and deserialization, and an empty value for initialization. Concrete use cases include extracting user profile details after authentication and preparing user data for display or storage.",
      "description_length": 454,
      "index": 634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.GaData",
      "library": "gapi-ocaml",
      "description": "This module provides tools for processing Google Analytics API v3 responses, including query construction, metadata extraction, and structured data manipulation. It operates on GaData records containing query parameters, profile metadata, and hierarchical tabular data (like DataTable and ColumnHeaders), with support for functional state updates via lenses. Typical use cases include parsing paginated analytics results, converting between JSON and typed data models for storage, and extracting aggregated metrics from complex API responses.",
      "description_length": 542,
      "index": 635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.LookerDataSourceSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying Looker data sources within the Google Sheets API. It includes fields for a Looker instance URL, model name, and explore name, along with lenses for accessing and modifying these fields. The module supports serialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 355,
      "index": 636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedReports",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and manipulation of saved reports data from the AdSense Management API. It works with JSON data models and provides accessors for fields like `etag`, `items`, `kind`, and `nextPageToken`. Used to process and traverse paginated lists of saved reports returned by API requests.",
      "description_length": 303,
      "index": 637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Promotion",
      "library": "gapi-ocaml",
      "description": "This module represents a promotion result from the CustomSearch API, containing structured data such as title, link, display URL, HTML title, image metadata, and a list of body lines. It provides functions to serialize and deserialize promotion data to and from JSON, along with lenses to access and modify individual fields. Use this module to process and manipulate promotional content returned by the CustomSearch API, such as extracting links or rendering promotion elements into a custom format.",
      "description_length": 500,
      "index": 638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceTable",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring and manipulating data source tables in Google Sheets, including fields for column selection, filtering, sorting, and row limits. It provides lenses for accessing and modifying individual properties, as well as functions for serializing to and from JSON data models. Use cases include building and customizing data source configurations for integration with external data in Sheets.",
      "description_length": 434,
      "index": 639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from a free/busy query in the Calendar API, containing intervals and availability data for calendars and groups. It includes fields for the time range, calendar free/busy status, group expansions, and resource type, with lenses for accessing and modifying these fields. It supports parsing and rendering JSON data models, enabling integration with API requests and responses for scheduling and availability checks.",
      "description_length": 450,
      "index": 640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.SendAs",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for managing send-as aliases in the Gmail API. It supports operations to create, update, and serialize send-as configurations, including fields like display name, reply-to address, and SMTP relay settings. Concrete use cases include configuring email aliases with custom signatures and SMTP relays, and synchronizing send-as settings with external JSON representations.",
      "description_length": 433,
      "index": 641,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.Permission",
      "library": "gapi-ocaml",
      "description": "This module manages access control entries by defining a `Permission.t` type with fields like `role`, `type`, and `emailAddress`, alongside submodules for tracking inheritance and scope details. It supports bidirectional conversion between these records and JSON representations, enabling seamless API communication and programmatic manipulation of permission metadata for cloud storage systems.",
      "description_length": 395,
      "index": 642,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.ActivityFeed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a paginated feed of Google+ activities, including metadata like ETags, links for pagination, and timestamps. It provides operations to access and modify individual fields using lenses, and functions to serialize to and deserialize from JSON data models. Concrete use cases include handling API responses for activity lists, managing pagination tokens, and caching activity feed data with ETags.",
      "description_length": 444,
      "index": 643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshCancellationStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the status of a canceled refresh operation in Google Sheets, including the state and any associated error code. It provides functions to serialize and deserialize this status to and from JSON data models, ensuring compatibility with API responses. Use this module when handling cancellation responses from the Sheets API to inspect the outcome of a refresh cancellation request.",
      "description_length": 398,
      "index": 644,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.MoveDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to move a range of rows or columns within a Google Sheets spreadsheet. It includes operations to specify the source dimension range and the destination index, along with functions to serialize and deserialize the request to and from JSON. It is used when reordering rows or columns in a sheet, such as shifting a group of rows to a new position while adjusting surrounding data.",
      "description_length": 408,
      "index": 645,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdUnit",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdSense ad units, including creating empty ad unit records, parsing and rendering ad unit data from JSON, and converting between ad unit objects and JSON data models. It works with the `t` record type representing ad units, which includes fields like `code`, `id`, `kind`, `name`, and `status`. Concrete use cases include serializing ad unit configurations to JSON for storage or transmission and deserializing JSON responses from the AdSense API into structured ad unit objects.",
      "description_length": 523,
      "index": 646,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteTableRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a table in the Google Sheets API, containing the `tableId` field. It provides functions to serialize and deserialize the structure to and from JSON data models, as well as an empty value for initialization. Concrete use cases include constructing and processing delete table requests when interacting with Google Sheets documents via the API.",
      "description_length": 392,
      "index": 647,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Account",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for a Google Analytics account in API v3. It includes fields like account ID, name, creation and update timestamps, permissions, and links to related resources. Functions allow creating an empty account, converting to and from JSON data models, and accessing or modifying individual fields using lenses.",
      "description_length": 357,
      "index": 648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ResolveAccessProposalRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for resolving access proposals in the Google Drive API v3. It provides functions to set or retrieve the resolution action, roles, view, and notification preferences, along with parsing and rendering access proposal data to and from JSON. It is used when programmatically accepting or denying access requests to Drive resources.",
      "description_length": 358,
      "index": 649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateSlicerSpecRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating a slicer specification in a Google Sheets document. It includes functions to set or retrieve the slicer ID, update specification, and field mask, as well as serialization and deserialization to JSON data models. It is used when modifying slicer display or behavior settings, such as filtering criteria or UI layout, within a spreadsheet.",
      "description_length": 399,
      "index": 650,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Table",
      "library": "gapi-ocaml",
      "description": "This module provides tools for modeling and manipulating BigQuery table metadata, including creation time, schema, and references, using a record type with lenses for functional updates. It supports conversion between table records and JSON data models, enabling seamless serialization and parsing for API interactions. Typical use cases involve constructing API request payloads, processing query results, or managing table configurations in a type-safe manner.",
      "description_length": 462,
      "index": 651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteProtectedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with a single field `protectedRangeId` representing the ID of a protected range to delete in a Google Sheets document. It includes functions to create an empty request, convert the request to and from JSON data models, and access or modify the `protectedRangeId` field. It is used specifically to construct or process delete requests for protected ranges when interacting with the Google Sheets API.",
      "description_length": 433,
      "index": 652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.AuthSub",
      "library": "gapi-ocaml",
      "description": "Handles parsing and extracting token information from AuthSub authorization responses. Works with `token_info` records containing `target`, `scope`, and `secure` fields. Used to retrieve specific token attributes like the target service, access scope, and security flag directly from authentication response data.",
      "description_length": 313,
      "index": 653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartSpec",
      "library": "gapi-ocaml",
      "description": "This module supports structured manipulation of chart configurations through lenses for accessing and modifying chart elements like titles, data sources, and type-specific properties (e.g., pie, histogram, treemap). It operates on the `ChartSpec.t` type, which encapsulates visual and data settings, including text formatting, filters, and deprecated fields, while providing JSON serialization for API interactions. Use cases include programmatically defining charts for Google Sheets reports or transforming chart specifications between in-memory representations and API payloads.",
      "description_length": 581,
      "index": 654,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.Task",
      "library": "gapi-ocaml",
      "description": "This module provides lenses for accessing and modifying task attributes like completion status, due date, and notes, along with functions to serialize and deserialize task data to and from JSON. It operates on the `Task.t` record type, which encapsulates task metadata, and includes a dedicated `Links` submodule for handling associated hyperlink data. These tools enable integrating with the Google Tasks API, supporting use cases such as task management applications, JSON data synchronization, and processing API requests or responses.",
      "description_length": 538,
      "index": 655,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Channel",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing notification channels in the Drive API v2. It includes fields like `address`, `id`, `resourceId`, and `token` to configure and identify channels, along with lenses for accessing and modifying these fields. Functions such as `render`, `parse`, `to_data_model`, and `of_data_model` handle serialization and deserialization of channel data for API communication.",
      "description_length": 423,
      "index": 656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ListAccessProposalsResponse",
      "library": "gapi-ocaml",
      "description": "Handles responses from listing access proposals in the Google Drive API v3, providing access to a list of `AccessProposal` objects and pagination via a continuation token. It supports parsing and rendering JSON data models to and from the response structure. This module is used to process and iterate through access proposal results retrieved from the API.",
      "description_length": 357,
      "index": 657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ChildrenResource",
      "library": "gapi-ocaml",
      "description": "This module manages hierarchical relationships between files and folders in Google Drive. It provides operations to add, remove, retrieve, and list child files or folders within a specified parent folder. Use cases include organizing files into directory structures, managing folder contents programmatically, and navigating Drive's file hierarchy.",
      "description_length": 348,
      "index": 658,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshMonthlySchedule",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying monthly refresh schedules for data sources in Google Sheets. It includes operations to set and retrieve the start time and days of the month for refreshes, supporting precise control over recurring data updates. The module works directly with `TimeOfDay.t` and integer lists to represent schedule parameters, enabling integration with calendar-based automation tasks.",
      "description_length": 419,
      "index": 659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Accounts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling collections of Google Analytics accounts, including pagination metadata and links. It provides lenses for accessing and modifying individual fields like account lists, page size, and navigation links, along with functions to serialize and deserialize the structure to and from JSON. It is used to process and navigate paginated account data returned by the Google Analytics API.",
      "description_length": 428,
      "index": 660,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.SourceAndDestination",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a source and destination configuration for autofilling data in Google Sheets. It includes fields for specifying the source grid range, the dimension to fill (rows or columns), and the number of cells to fill. Functions allow creating, modifying, and serializing these configurations for use in spreadsheet automation tasks such as extending data ranges dynamically.",
      "description_length": 415,
      "index": 661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceSheetDimensionRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a dimension range in a Google Sheets data source, specifically identifying a sheet ID and associated columns. It provides functions to serialize and deserialize this structure to and from JSON data models, enabling integration with the Google Sheets API. Use cases include configuring data source ranges for spreadsheet queries and updates via the Sheets API.",
      "description_length": 409,
      "index": 662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDimension",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for a custom dimension in the Google Analytics API, including fields such as `accountId`, `active`, `created`, `id`, `index`, `kind`, `name`, `parentLink`, `scope`, `selfLink`, `updated`, and `webPropertyId`. It provides functions to create an empty instance, convert the structure to and from JSON data models, and parse or render individual fields. Use cases include managing custom dimension configurations, tracking their creation and modification times, and linking them to web properties within Google Analytics.",
      "description_length": 555,
      "index": 663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AlertsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage alerts in an AdSense account. It supports dismissing a specific alert by ID and listing all alerts, optionally filtered by locale. The module works with alert data structures defined in the AdSense API model.",
      "description_length": 250,
      "index": 664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.EmbeddedChart",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing embedded charts in Google Sheets API (v4). It provides lenses to access and modify chart properties such as ID, specification, position, and border, along with functions to serialize and deserialize chart data to and from JSON. It is used to construct, manipulate, and interpret chart objects within a spreadsheet document.",
      "description_length": 387,
      "index": 665,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshDataSourceObjectExecutionStatus",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the execution status of a data source object refresh in the Google Sheets API. It provides accessors for the data source reference and execution status, along with functions to convert between JSON data models and internal representations. It is used to track and update the outcome of data source refresh operations within a spreadsheet.",
      "description_length": 374,
      "index": 666,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.DataResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to query Google Analytics data through its submodules. It supports retrieving standard report data, real-time metrics, and multi-channel funnel analysis. The module works with view identifiers, date ranges, dimensions, metrics, and filters to fetch analytics data from the API. Use it to obtain traffic statistics, user behavior insights, and conversion path analysis for reporting and decision-making.",
      "description_length": 434,
      "index": 667,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedReport",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling saved reports in the AdSense Management API, including creating an empty report, parsing and rendering JSON data, and converting between data models. It works with the `t` record type, which includes fields for `id`, `kind`, and `name`, and interacts with `GapiJson.json_data_model`. Concrete use cases include serializing saved report data for storage and deserializing API responses into structured report objects.",
      "description_length": 460,
      "index": 668,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.DriveList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing components of a Google Drive API v3 shared drives list response. Works with `t` records containing a next page token, resource kind, and a list of shared drives. Used to process paginated results from listing shared drives, enabling access to individual drive entries and continuation tokens for subsequent requests.",
      "description_length": 358,
      "index": 669,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.SavedadstylesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list saved ad styles associated with a user's AdSense account. It works with `SavedAdStyle.t` and `SavedAdStyles.t` data structures, representing individual and collections of saved ad styles. Concrete use cases include fetching a specific saved ad style by ID or enumerating all saved ad styles for configuration or display purposes.",
      "description_length": 382,
      "index": 670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Person",
      "library": "gapi-ocaml",
      "description": "This module provides functional lenses for accessing and updating structured user profile fields like name, age, and social metadata, along with JSON serialization/deserialization for interoperability. It operates on a composite `t` type aggregating nested data structures such as organizations, locations, and contact details, designed for hierarchical manipulation. Typical use cases include integrating Google+ user data into OCaml applications, transforming profile attributes without mutation, and bridging API requests/responses with internal data models.",
      "description_length": 561,
      "index": 671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing comments in the Google Drive API, including fields such as comment ID, creation and modification timestamps, content, and associated replies. It supports operations for accessing and modifying comment properties via lenses, serializing and deserializing comments to and from JSON, and working with quoted file content. Concrete use cases include managing user comments on Drive files, tracking comment resolution status, and extracting or displaying formatted comment content.",
      "description_length": 530,
      "index": 672,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.IterativeCalculationSettings",
      "library": "gapi-ocaml",
      "description": "This module defines settings for controlling iterative calculations in spreadsheet models, specifically by setting a maximum number of iterations and a convergence threshold. It works with a record type containing integer and float fields, and provides functions to create, update, and serialize these settings. Use cases include configuring spreadsheet recalculations where circular dependencies are resolved through repeated evaluation until values stabilize.",
      "description_length": 461,
      "index": 673,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedAdStyle",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing saved ad styles in the AdSense Management API. It provides functions to parse, render, and convert saved ad style data to and from JSON format. The module works with the `SavedAdStyle.t` type, which includes an `AdStyle`, identifier, kind, and name, supporting use cases like storing and retrieving user-defined ad styles in an application.",
      "description_length": 384,
      "index": 674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListDraftsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling responses from listing email drafts in the Gmail API. It includes fields for accessing the list of drafts, pagination token, and result size estimate, along with functions to serialize and deserialize the data to and from JSON. It is used to process and manage draft email listings in client applications interacting with the Gmail API.",
      "description_length": 386,
      "index": 675,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants used for authorizing access to Google Sheets and Drive resources. It includes specific scopes for full or read-only access to spreadsheets and Drive files, enabling precise control over application permissions. These values are directly used when configuring OAuth2 credentials for interacting with the Google Sheets API.",
      "description_length": 372,
      "index": 676,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "This module handles comment management for files in Google Drive, providing functions to create, delete, retrieve, list, and update comments. It works with `Comment.t` for individual comments and `CommentList.t` for collections, along with file and session identifiers. Use cases include adding user feedback to documents, removing outdated notes, fetching specific comment threads, and synchronizing comment changes in collaborative applications.",
      "description_length": 447,
      "index": 677,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AnalyticsDataimportDeleteUploadDataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying uploads to delete in the Google Analytics API. It includes a list of custom data import UIDs and provides functions to serialize, deserialize, and manipulate the structure. Use this module when issuing requests to delete specific data uploads from Google Analytics.",
      "description_length": 317,
      "index": 678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdUnits",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling ad unit list responses in the AdSense Management API, including parsing, rendering, and converting to and from JSON data models. It works with the `AdUnits.t` record type, which contains metadata like etag, kind, and pagination tokens, along with a list of ad unit items. Concrete use cases include processing API responses to retrieve and paginate through ad units, and serializing or deserializing ad unit data for storage or transmission.",
      "description_length": 485,
      "index": 679,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.FilterCriteria",
      "library": "gapi-ocaml",
      "description": "This module defines filter criteria for Google Sheets cells, including conditions, hidden values, and color-based visibility rules. It provides lenses to access and modify fields like `hiddenValues`, `condition`, and color styles, along with functions to serialize and deserialize the data model to JSON. It is used to configure and apply filtering logic in spreadsheet views based on cell content and formatting.",
      "description_length": 413,
      "index": 680,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarList",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling paginated calendar lists, including parsing and rendering calendar data from JSON, accessing individual calendar entries, and managing sync and page tokens. It works with calendar list entries, ETags, and metadata like `kind`, `nextPageToken`, and `nextSyncToken`. Concrete use cases include retrieving user calendar lists, processing incremental updates, and serializing calendar data for storage or transmission.",
      "description_length": 458,
      "index": 681,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshSchedule",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the refresh schedule configuration for data sources in a Google Sheets document. It supports operations to set and retrieve daily, weekly, and monthly refresh intervals, enable or disable the schedule, and determine the next scheduled run time. The module works directly with structured types representing refresh schedules and integrates with JSON data models for serialization and deserialization.",
      "description_length": 435,
      "index": 682,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Alerts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of AdSense alerts, including operations to access and manipulate the list of alerts and their metadata. It provides functions to convert alert data to and from JSON format, enabling integration with API responses. Use cases include parsing alert data retrieved from the AdSense API and constructing alert responses for further processing.",
      "description_length": 395,
      "index": 683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.FilesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage files in Google Drive, including creating, copying, updating, deleting, and listing files, as well as exporting content and handling labels. It works with file metadata represented as `GapiDriveV3Model.File.t`, label data via `GapiDriveV3Model.LabelList.t`, and supports media uploads and downloads. Concrete use cases include automating file organization, synchronizing documents, exporting Google Workspace files to specific formats, and managing file access controls through labels.",
      "description_length": 527,
      "index": 684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Request",
      "library": "gapi-ocaml",
      "description": "This module provides structured operations for modifying spreadsheet elements through a variety of request types, including cell updates, sheet management, formatting adjustments, and data validation rules. It works with `GapiSheetsV4Model.Request.t` and associated types to enable precise manipulation of spreadsheet structures like dimensions, ranges, charts, and metadata, using lenses for targeted access. Specific use cases include automating data cleanup, configuring conditional formatting, managing protected ranges, and synchronizing external data sources with spreadsheet tables.",
      "description_length": 589,
      "index": 685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchGetValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from a batch get values request in the Google Sheets API. It includes the spreadsheet ID and a list of value ranges returned by the API. The module provides functions to access and manipulate these fields, as well as to convert between JSON data models and this response type.",
      "description_length": 312,
      "index": 686,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.CommentReplyList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing lists of replies to comments in the Google Drive API v2. It includes fields for accessing the replies, pagination tokens, and links to navigate between pages or reference the list itself. Operations include parsing from and rendering to JSON data models, creating empty instances, and lenses for accessing individual fields.",
      "description_length": 374,
      "index": 687,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.ClientLogin",
      "library": "gapi-ocaml",
      "description": "Handles ClientLogin authorization responses by parsing and storing authentication tokens and CAPTCHA challenges. It provides functions to extract token and URL fields from CAPTCHA data structures. Useful for implementing authentication flows that require handling Google's ClientLogin API responses with token retrieval and CAPTCHA resolution.",
      "description_length": 343,
      "index": 688,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Service.CustomchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list custom channels within an AdSense account. It works with ad client identifiers and session contexts to fetch paginated custom channel data. Use this module to programmatically access custom channel configurations for reporting or inventory management purposes.",
      "description_length": 313,
      "index": 689,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomMetrics",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and serialization for Google Analytics API v3 custom metrics responses. It provides lenses to access fields like metric items, pagination parameters, and navigation links, along with functions to convert between JSON data models and internal record representations. It is used to process and manipulate paginated lists of custom metrics retrieved from the API.",
      "description_length": 396,
      "index": 690,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Service.EventsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage calendar events, including creating, retrieving, updating, deleting, and moving events. It works with event data structures and supports operations like querying by time ranges, sorting results, and handling recurring events. Concrete use cases include scheduling meetings, managing event invitations, and synchronizing calendar data across devices or users.",
      "description_length": 399,
      "index": 691,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.Drive",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and utilities for managing shared drives in Google Drive API v3, focusing on metadata operations (name, ID, color, theme), background image configuration, and access capability management. It supports JSON serialization/deserialization workflows and field-level modifications through lenses, primarily enabling drive creation, permission updates, and restriction enforcement scenarios. Key data types include structured records for drive properties and conversion functions between JSON representations and typed models.",
      "description_length": 557,
      "index": 692,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ParentsResource",
      "library": "gapi-ocaml",
      "description": "This module manages parent-child relationships between files and folders in Google Drive. It provides operations to add, remove, retrieve, and list parent references for a given file. These functions are used to organize files within Drive's folder hierarchy, such as moving files between folders or retrieving a file's current location.",
      "description_length": 337,
      "index": 693,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Draft",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for working with email drafts in the Gmail API v1 data model. It provides accessors for the draft's immutable ID and associated message content, along with functions to serialize and deserialize draft data for API communication. Concrete use cases include creating, updating, and retrieving draft emails with their message payloads in a type-safe format.",
      "description_length": 403,
      "index": 694,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.AnalyticsSummary",
      "library": "gapi-ocaml",
      "description": "This module represents aggregated click analytics data for shortened URLs, containing analytics snapshots across different time intervals such as all time, day, month, week, and two hours. It provides accessors via lenses to manipulate and retrieve individual time interval data and supports serialization and deserialization to and from JSON data models. Use this module to analyze traffic patterns on shortened URLs, such as tracking recent click activity or long-term engagement.",
      "description_length": 482,
      "index": 695,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartSourceRange",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying data ranges used in Google Sheets charts. It works with lists of `GridRange` objects to represent source data for chart domains and series, ensuring valid dimensional constraints. It supports parsing and rendering chart source ranges from and to JSON data models, enabling integration with the Sheets API for chart configuration.",
      "description_length": 393,
      "index": 696,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ManualRuleGroup",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for grouping items under a named category in a manual rule, using `ExtendedValue.t` for both the group name and item values. It provides functions to create an empty group, set or retrieve the group name and items, and convert between the group structure and JSON data models. It is used to organize source data into custom groups when applying manual categorization rules in Google Sheets.",
      "description_length": 427,
      "index": 697,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UserDeletionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for user deletion requests in the Google Analytics API v3, including fields for the deletion time, Firebase project ID, user ID, kind of request, and web property ID. It provides functions to create an empty request, convert the structure to and from JSON data models, and parse or render individual fields. Concrete use cases include submitting and processing user data deletion requests for compliance with privacy regulations like GDPR.",
      "description_length": 476,
      "index": 698,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDimensionGroupResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from deleting a dimension group in a Google Sheets document. It stores a list of remaining dimension groups after the deletion. The primary operations include parsing and rendering the response to and from JSON, and accessing the list of dimension groups.",
      "description_length": 291,
      "index": 699,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableRow",
      "library": "gapi-ocaml",
      "description": "This module represents a single row of query results in the BigQuery API, composed of a list of table cells. It provides functions to construct, manipulate, and convert table rows to and from JSON data models. Use cases include processing and serializing individual rows of data retrieved from BigQuery queries.",
      "description_length": 311,
      "index": 700,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating cell data in a Google Sheets document. It includes functions to specify the grid range, starting coordinate, row data, and fields to update, along with serialization and deserialization for JSON communication with the API. It is used to construct and manipulate requests that modify specific cell content and properties in a spreadsheet.",
      "description_length": 399,
      "index": 701,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Service.ProjectsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all projects a user has access to, using the BigQuery API. It works with `GapiConversation.Session.t` for authentication and returns a `ProjectList.t` containing project metadata. Use this to enumerate available projects for querying or management tasks in BigQuery.",
      "description_length": 320,
      "index": 702,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CutPasteRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying cut-and-paste operations in a Google Sheets document. It includes fields for the source grid range, destination coordinate, and paste type, along with lenses for accessing and modifying these fields. It supports serialization and deserialization to and from JSON data models for API interaction.",
      "description_length": 347,
      "index": 703,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdClient",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing AdSense ad client data, including parsing and rendering ad client records to and from JSON data models. It provides lenses for accessing and modifying specific fields such as `arcOptIn`, `id`, `kind`, `productCode`, and `supportsReporting`. Use this module when interacting with the AdSense Management API to retrieve, update, or process ad client information in JSON format.",
      "description_length": 419,
      "index": 704,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.EmbeddedObjectPosition",
      "library": "gapi-ocaml",
      "description": "This module defines the position of an embedded object within a Google Sheets document, including its placement on a specific sheet or as an overlay. It provides functions to construct, modify, and serialize position data using lenses for field access and update. Concrete use cases include setting the sheet ID and overlay coordinates when inserting or moving embedded objects like charts or images.",
      "description_length": 400,
      "index": 705,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore.HttpMethod",
      "library": "gapi-ocaml",
      "description": "This module defines an enumerated type representing HTTP methods such as GET, POST, PUT, DELETE, PATCH, and HEAD. It includes a function to convert these method values to their string representations. Useful for handling HTTP request types in API client implementations.",
      "description_length": 270,
      "index": 706,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.EventReminder",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for event reminders in the Calendar API (v3). It includes operations to create, parse, render, and convert reminder data, specifically handling the method (email or popup) and the trigger time in minutes before an event. It is used to manage individual reminder settings for calendar events, ensuring correct formatting and validation of reminder parameters during API interactions.",
      "description_length": 429,
      "index": 707,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdUnits",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling ad unit list responses in the AdSense Management API. It provides functions to parse and render ad unit data, access individual fields like `etag`, `items`, `kind`, and `nextPageToken`, and construct or manipulate ad unit list structures. Concrete use cases include processing paginated ad unit data from API responses and serializing or deserializing ad unit lists for storage or transmission.",
      "description_length": 438,
      "index": 708,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DateTimeRule",
      "library": "gapi-ocaml",
      "description": "This module defines a date-time rule type used to specify grouping logic in Google Sheets API operations. It includes functions to serialize and deserialize the rule to and from JSON data models, and to manipulate its type field. It is used when configuring pivot tables or data filters that require date-time grouping in spreadsheet reports.",
      "description_length": 342,
      "index": 709,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AdclientsResource",
      "library": "gapi-ocaml",
      "description": "This module handles operations related to ad clients in an AdSense account, primarily providing the `list` function to retrieve a paginated list of ad clients. It works with `GapiAdsenseV1_4Model.AdClients` and session data to maintain state during API interactions. A concrete use case is fetching ad client information for reporting or account management within an AdSense publisher's application.",
      "description_length": 399,
      "index": 710,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.MergeCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying cell merge operations in Google Sheets API requests. It includes fields for the cell range to merge and the merge strategy, along with functions to construct, serialize, and deserialize these requests. Concrete use cases include formatting spreadsheet regions by merging cells and integrating merge operations into batch updates.",
      "description_length": 381,
      "index": 711,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Service.UrlResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to interact with URL resources in the URL Shortener API, including expanding short URLs, creating new short URLs, and listing all URLs shortened by a user. It operates on data types representing URLs and URL history, with support for specifying detail levels via projection options. Concrete use cases include generating short links, retrieving analytics for a short URL, and paginating through a user's history of shortened URLs.",
      "description_length": 461,
      "index": 712,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.Change",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling changes in a Google Drive API (v3) integration. It includes fields to represent file or shared drive changes, such as identifiers, timestamps, and updated states, along with lenses for accessing and modifying individual properties. Use cases include tracking file modifications, deletions, or shared drive membership updates within a user's Google Drive activity stream.",
      "description_length": 432,
      "index": 713,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateSheetResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from duplicating a sheet in the Google Sheets API. It contains a `properties` field that holds the metadata of the newly created sheet, such as its title and grid settings. It supports parsing and rendering sheet responses to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 342,
      "index": 714,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service.TeamdrivesResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to manage Team Drives in Google Drive API v3, including creating, deleting, retrieving, listing, and updating Team Drive resources. It operates on `GapiDriveV3Model.TeamDrive.t` and `GapiDriveV3Model.TeamDriveList.t` data structures, interacting with the API via `GapiConversation.Session.t`. Concrete use cases include synchronizing organizational team drives, managing access controls, and integrating Drive data into external management tools.",
      "description_length": 477,
      "index": 715,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiments",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and transformations for experiment collections in the Google Analytics API v3. It provides lenses for accessing and modifying fields like experiment lists, pagination parameters, and metadata, along with functions to serialize and deserialize experiment data to and from JSON. Use this module when retrieving or processing experiment data from the API, particularly for paginated results.",
      "description_length": 424,
      "index": 716,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.QueryRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring and handling BigQuery API v2 query requests. It includes fields like `query`, `defaultDataset`, and `timeoutMs`, and provides lenses for accessing and modifying individual fields, along with functions to serialize and deserialize query request data. It is used to construct and manage query parameters when interacting with BigQuery, such as setting query strings, controlling cache usage, or specifying dataset context.",
      "description_length": 485,
      "index": 717,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.FilterCriteria",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates filter criteria for Gmail API operations, supporting conditions on message properties such as sender, recipient, subject, size, and search queries. It works with a record type containing boolean, string, and integer fields, along with lenses for accessing and modifying individual properties. Concrete use cases include constructing filters to retrieve messages based on specific senders, exclude chats, or match size constraints.",
      "description_length": 466,
      "index": 718,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authorization scopes for accessing and managing calendar data through the Calendar API. It includes specific permissions for reading, editing, and sharing calendars and events, as well as viewing settings. These scopes are used to request access when authenticating API requests for calendar operations.",
      "description_length": 323,
      "index": 719,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextFormat",
      "library": "gapi-ocaml",
      "description": "This module defines the text formatting options for cells in a Google Sheets document, including font style, size, color, and hyperlink properties. It provides lenses to access and modify individual formatting attributes, such as bold, italic, font family, and foreground color using either a direct color value or a color style. Concrete use cases include applying rich text formatting to specific cell ranges or parsing and serializing text format settings when interacting with the Google Sheets API.",
      "description_length": 503,
      "index": 720,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartCustomNumberFormatOptions",
      "library": "gapi-ocaml",
      "description": "This module defines options for custom number formatting in chart attributes, supporting the addition of optional string prefixes and suffixes. It provides functions to construct, modify, and serialize these formatting options to and from JSON data models. Use this module when configuring chart display formats, such as adding currency symbols or percentage signs to numerical values in Google Sheets charts.",
      "description_length": 409,
      "index": 721,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.RevisionsResource",
      "library": "gapi-ocaml",
      "description": "This module handles revision management for files in Google Drive, providing functions to delete, retrieve, list, and update file revisions. It operates on `GapiDriveV2Model.Revision.t` and `GapiDriveV2Model.RevisionList.t` data structures, interacting with Drive API v2. Use cases include restoring previous file versions, viewing revision history, and modifying revision metadata such as visibility or publishing status.",
      "description_length": 422,
      "index": 722,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ImapSettings",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates IMAP settings for a Gmail account, including auto-expunge behavior, enable status, expunge action, and folder size limits. It works with a record type `t` containing boolean, string, and integer fields, along with JSON serialization and deserialization functions. Use this module to configure IMAP behavior when interacting with Gmail via the API, such as setting message deletion policies or limiting folder sizes.",
      "description_length": 451,
      "index": 723,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyCalendar",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates calendar busy periods and associated errors for the Calendar API v3. It provides operations to access and modify busy time ranges and errors using lenses, and supports JSON serialization and deserialization. Use cases include checking calendar availability, handling scheduling conflicts, and integrating with calendar services that return free/busy data.",
      "description_length": 391,
      "index": 724,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a batch clear operation in the Google Sheets API. It includes fields for the spreadsheet ID and the list of cleared ranges in A1 notation. Functions allow parsing, rendering, and converting the response to and from JSON data models, enabling direct interaction with API requests and responses.",
      "description_length": 361,
      "index": 725,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BooleanCondition",
      "library": "gapi-ocaml",
      "description": "This module defines a Boolean condition structure used to represent conditional formatting rules in Google Sheets. It includes operations to set and retrieve the condition type and its associated values, supporting serialization and deserialization to and from JSON data models. It is used to construct and manipulate conditions like \"greater than\" or \"one of list\" for applying formatting rules based on cell values.",
      "description_length": 417,
      "index": 726,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ClearBasicFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to clear a basic filter on a specific sheet within a Google Sheets document. It includes operations to construct, serialize, and deserialize the request, working primarily with the `t` record type that contains a `sheetId`. It is used when interacting with the Google Sheets API to programmatically remove existing basic filters from a sheet.",
      "description_length": 372,
      "index": 727,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AppendValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from appending values to a Google Sheets spreadsheet. It includes fields for the spreadsheet ID, the table range in A1 notation, and update metadata, along with functions to serialize, deserialize, and manipulate these responses. It is used to interpret API responses when appending data to a sheet and to construct or modify such responses programmatically.",
      "description_length": 430,
      "index": 728,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad.SessionM",
      "library": "gapi-ocaml",
      "description": "This module implements a session monad for managing stateful computations, particularly suited for handling authentication sessions or API request contexts. It provides core operations like `get` and `put` to read and update session state, and monadic combinators such as `bind`, `mapM`, and `foldM` to compose stateful operations. Use cases include maintaining OAuth token state across API calls or tracking user session data in web applications.",
      "description_length": 447,
      "index": 729,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextPosition",
      "library": "gapi-ocaml",
      "description": "This module defines a text position structure with a horizontal alignment field. It provides functions to create an empty instance, convert to and from JSON data models, and render or parse the structure. Use this module to manage text alignment settings within Google Sheets API operations.",
      "description_length": 291,
      "index": 730,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PieChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring pie chart specifications in the Google Sheets API. It includes fields for setting the legend position, domain and series data, 3D rendering, and pie hole size, along with functions to serialize, deserialize, and manipulate these configurations. It is used to define how pie charts should be rendered based on spreadsheet data.",
      "description_length": 391,
      "index": 731,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCustomsearchV1Model.Context",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing search context information, including a list of facet groups and a title string. It provides functions to manipulate fields using lenses, convert the structure to and from JSON data models, and render or parse facet information. It is used to handle context data in the CustomSearch API responses, particularly for organizing and interpreting search facets and associated metadata.",
      "description_length": 435,
      "index": 732,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomDimensions",
      "library": "gapi-ocaml",
      "description": "This module handles data structures for managing collections of Google Analytics custom dimensions, including pagination and metadata. It provides lenses for accessing fields like items, page size, navigation links, and user information, along with functions to serialize and deserialize to and from JSON data models. Use this module when retrieving or processing lists of custom dimensions from the Google Analytics API, especially when handling paginated responses.",
      "description_length": 467,
      "index": 733,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileRef",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics view (profile) reference, with fields for identifiers like account ID, web property ID, and profile name. It provides lenses to access and modify individual fields, functions to convert between JSON data models and the profile reference type, and utilities to construct or render empty or serialized representations of profile references. Concrete use cases include parsing API responses into typed structures, building requests with profile metadata, and extracting specific identifiers for further API interactions.",
      "description_length": 586,
      "index": 734,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service.CseResource",
      "library": "gapi-ocaml",
      "description": "This module executes custom web and image searches against configured sites using the CustomSearch API. It supports precise query parameters including search terms, result count, safe search settings, image filters, language, and site inclusion/exclusion rules. Concrete use cases include searching specific websites for images by color or size, filtering results by language, or enforcing safe search policies.",
      "description_length": 411,
      "index": 735,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ValueRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing ranges of cell values in Google Sheets, including their dimensions and content. It provides functions to access and modify the range, major dimension, and values using lenses, and supports serialization and deserialization to and from JSON data models. Concrete use cases include reading and writing tabular data in row-major or column-major formats, and appending values to existing sheets tables.",
      "description_length": 452,
      "index": 736,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.ReportsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `generate` function to create and retrieve AdSense reports with customizable parameters such as date range, metrics, dimensions, and filters. It operates on report configurations and returns structured response data along with a session. Use this module to programmatically access AdSense performance data for analysis or integration into dashboards.",
      "description_length": 375,
      "index": 737,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.AppList",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing a list of applications available in Google Drive, including parsing and rendering app data to and from JSON. It works with the `AppList` type, which contains metadata like etag, kind, and links, along with a list of `App.t` entries. Concrete use cases include retrieving the user's default apps, handling app-specific metadata, and serializing app lists for API communication.",
      "description_length": 420,
      "index": 738,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for clearing cell values in Google Sheets using a list of data filters. It provides functions to create an empty request, convert the request to and from JSON data models, and access or modify the data filters. It is used when performing batch operations to selectively clear ranges in a spreadsheet based on specific criteria.",
      "description_length": 367,
      "index": 739,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SpreadsheetTheme",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing spreadsheet themes in the Google Sheets API v4. It provides functions to create an empty theme, render a theme to JSON data model, parse JSON data into a theme, and convert between theme objects and JSON representations. The module works with the `SpreadsheetTheme.t` type, which includes a primary font family and a list of theme color pairs.",
      "description_length": 405,
      "index": 740,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing the Blogger API. It provides the `blogger` value, which represents the scope required to manage a Blogger account. Use this scope when authenticating requests to read or modify Blogger content through the API.",
      "description_length": 265,
      "index": 741,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.ContentRestriction",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing content restrictions in Google Drive API v3. It includes fields like `readOnly`, `reason`, and `restrictionTime`, and provides lenses for accessing and modifying these properties. Use cases include enforcing read-only file policies, tracking restriction metadata, and serializing or deserializing restriction data for API requests and responses.",
      "description_length": 409,
      "index": 742,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.FilterAction",
      "library": "gapi-ocaml",
      "description": "This module defines operations for manipulating Gmail filter actions, specifically adding or removing labels and forwarding messages. It works with the `t` record type containing `addLabelIds`, `forward`, and `removeLabelIds`. Use this module to construct, modify, and serialize filter actions for interacting with the Gmail API, such as applying labels to incoming emails or redirecting messages to another address.",
      "description_length": 416,
      "index": 743,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Permission",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage access control entries for Google Drive resources, including creating and modifying permission records with fields like user identifiers, roles, and metadata. It works with structured JSON data and OCaml types, using lenses for field manipulation and functions for bidirectional conversion between JSON and typed representations. It is designed for scenarios requiring programmatic handling of Drive API permission models, such as parsing API responses or constructing permission payloads for access management operations.",
      "description_length": 564,
      "index": 744,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfigurationLink",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for a BigQuery link job, including the source URI, destination table, and dispositions for table creation and writing. It provides lenses to access and modify fields like `createDisposition`, `destinationTable`, `sourceUri`, and `writeDisposition`, along with functions to serialize and deserialize job configurations to and from JSON. Use this module when setting up or manipulating link jobs that import external data into BigQuery tables.",
      "description_length": 479,
      "index": 745,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceRefreshWeeklySchedule",
      "library": "gapi-ocaml",
      "description": "This module defines a weekly schedule for data source refreshes in Google Sheets, specifying days of the week and a start time. It provides accessors for manipulating schedule fields, along with serialization and deserialization functions for integration with JSON data models. It is used to configure and manage recurring data refresh intervals in spreadsheet automation workflows.",
      "description_length": 382,
      "index": 746,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceData",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing conference information in a calendar event, including entry points, conference IDs, and solution-specific parameters. It provides lenses for accessing and modifying fields like `entryPoints`, `conferenceId`, and `createRequest`, along with functions to serialize and deserialize conference data to and from JSON. Use cases include integrating video conferencing details into calendar events and synchronizing conference metadata across systems.",
      "description_length": 508,
      "index": 747,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.CustomChannels",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling lists of AdSense custom channels, including metadata like ETag, kind, and pagination tokens. It provides operations for parsing, rendering, and converting the structure to and from JSON data models. Concrete use cases include processing API responses to list custom channels and preparing data for subsequent API requests using the `nextPageToken`.",
      "description_length": 398,
      "index": 748,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.CellData",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior of individual cell data in a Google Sheets document, supporting operations to get and set cell values, formatting, hyperlinks, notes, and validation rules. It works with data types such as strings, numeric values, formulas, and rich formatting structures like `CellFormat`, `TextFormatRun`, and `DataValidationRule`. Concrete use cases include constructing and modifying spreadsheet cells with custom formatting, embedding hyperlinks, applying data validation, and handling formula results with associated pivot tables or data source tables.",
      "description_length": 588,
      "index": 749,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.InsertDimensionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines operations for inserting dimensions in a Google Sheets document, specifically by specifying a dimension range and whether properties should be inherited from adjacent rows or columns. It works with `DimensionRange` and `bool` types to configure insertion behavior. Concrete use cases include programmatically adding rows or columns with styling and formatting inherited from existing adjacent cells.",
      "description_length": 419,
      "index": 750,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.App",
      "library": "gapi-ocaml",
      "description": "This module provides operations for manipulating Google Drive app metadata, including functional access to fields like name, MIME types, and URL templates via type-safe lenses, as well as JSON serialization/deserialization for API integration. It works with structured records representing app configurations and their corresponding JSON data models. Specific use cases include building or modifying Drive app integrations that require dynamic URL handling, capability checks, or metadata synchronization with Drive API endpoints.",
      "description_length": 530,
      "index": 751,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUtils.Infix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for function composition and application. It works with functions and values of arbitrary types, enabling concise pipeline-style code. Use cases include chaining transformations and threading arguments through multiple functions in a readable way.",
      "description_length": 283,
      "index": 752,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartHistogramRule",
      "library": "gapi-ocaml",
      "description": "This module defines a histogram rule structure for configuring bucket ranges in chart data visualization. It provides functions to set and retrieve min/max values, interval size, and operations for serializing to and parsing from JSON data models. It is used to define how numerical data should be grouped into buckets for histogram charts in Google Sheets.",
      "description_length": 357,
      "index": 753,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.RevisionList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and manipulation of Google Drive API v3 revision lists. Works with `t` records containing pagination tokens, resource kind identifiers, and lists of `Revision.t` entries. Used to process and traverse paginated revision data retrieved from Drive API endpoints like `revisions.list`.",
      "description_length": 309,
      "index": 754,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SortSpec",
      "library": "gapi-ocaml",
      "description": "This module defines sorting specifications for Google Sheets API operations, including fields like dimension index, sort order, and color-based sorting criteria. It provides lenses for accessing and modifying individual properties of a sort specification, along with functions to serialize and deserialize sort specs to and from JSON data models. It is used to configure how data is sorted in spreadsheet operations, such as sorting rows by a specific column or by cell colors.",
      "description_length": 477,
      "index": 755,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateSheetPropertiesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating sheet properties in the Google Sheets API, including the target properties and the specific fields to update. It provides functions to manipulate and serialize the update request, such as setting properties, specifying fields, and converting to or from JSON data models. Use cases include constructing and modifying requests to update sheet metadata like title, grid settings, or tab color via the Sheets API.",
      "description_length": 459,
      "index": 756,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestMethod",
      "library": "gapi-ocaml",
      "description": "This module models REST API methods with JSON serialization and lenses for field manipulation, supporting operations to define HTTP methods, paths, parameters, scopes, and media upload configurations. It works with a `t` record structure that encapsulates API method metadata, alongside modules for handling media uploads, requests, and responses. It enables use cases like generating API clients and configuring service endpoints based on discovered Google API metadata.",
      "description_length": 471,
      "index": 757,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddConditionalFormatRuleRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to insert a conditional formatting rule into a Google Sheets document at a specified index. It includes operations to create an empty request, set or retrieve the rule and index fields, and serialize or deserialize the request to and from JSON data models. It is used when updating spreadsheet formatting rules via the Google Sheets API.",
      "description_length": 367,
      "index": 758,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.MessagePartBody",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling message part bodies in the Gmail API, including fields like `attachmentId`, `data`, and `size`. It provides functions to serialize and deserialize message part body data, enabling integration with JSON-based API interactions. Use cases include extracting attachment identifiers, decoding base64url message content, and managing message body size information during email processing.",
      "description_length": 444,
      "index": 759,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.ColorsResource",
      "library": "gapi-ocaml",
      "description": "This module retrieves color definitions for calendars and events in the Calendar API v3. It operates on color resources, returning structured color data for use in UI rendering or theme customization. A concrete use case is fetching event color mappings to display consistent colors across a calendar interface.",
      "description_length": 311,
      "index": 760,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ChartDateTimeRule",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying date-time grouping rules in chart configurations. It supports operations to serialize and deserialize the structure to and from JSON, enabling integration with the Google Sheets API. Use this module when configuring time-based data aggregation in spreadsheet charts, such as grouping data by day, month, or year.",
      "description_length": 364,
      "index": 761,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.WebPropertySummary",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for representing Google Analytics web property summaries. It provides lenses for accessing fields like web property ID, name, level, and associated profiles, along with functions to convert between JSON data models and the native OCaml representation. It is used to interact with the Google Analytics API v3 when retrieving or processing web property data, such as listing properties for an account or checking a property's associated profiles.",
      "description_length": 508,
      "index": 762,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ErrorValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing error values in the Google Sheets API, with fields for the error type and message. It provides functions to serialize and deserialize error values to and from JSON data models, enabling integration with API requests and responses. Use cases include handling and transmitting error information returned by spreadsheet operations, such as formula evaluation errors or invalid input.",
      "description_length": 434,
      "index": 763,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module handles the response from updating developer metadata in the Google Sheets API. It provides operations to parse, render, and convert the response data to and from JSON format. The primary data structure is a list of `DeveloperMetadata.t` records, representing the updated metadata entries.",
      "description_length": 301,
      "index": 764,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchGetValuesByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for retrieving spreadsheet values filtered by specific data criteria. It includes operations to set and retrieve data filters, specify the major dimension of results, and control value rendering formats. It is used to construct and manipulate requests that fetch structured data from Google Sheets, converting between JSON representations and the internal model for API interactions.",
      "description_length": 423,
      "index": 765,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RealtimeData",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing real-time data responses from the Google Analytics API v3. It includes fields for column headers, query metadata, profile information, result rows, and totals, along with lenses for accessing and modifying these fields. Use this module to parse, construct, and manipulate real-time analytics responses, particularly for extracting dimension and metric values, handling pagination, and working with response metadata.",
      "description_length": 470,
      "index": 766,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobList",
      "library": "gapi-ocaml",
      "description": "This module handles paginated job lists from the BigQuery API, offering accessors to retrieve job entries, pagination tokens, and response metadata. It operates on structured job list data (`t`) containing fields like `jobs`, `etag`, and `nextPageToken`. Concrete use cases include retrieving batches of jobs, handling pagination during job listing, and converting job list data to or from JSON for API communication.",
      "description_length": 417,
      "index": 767,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityAdWordsLinks",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling collections of AdWords links in the Google Analytics API v3. It includes fields for pagination (start index, items per page, total results) and links for navigating result pages. Functions allow parsing, rendering, and manipulating these collections as JSON data models.",
      "description_length": 334,
      "index": 768,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model.SiteVerificationWebResourceGettokenRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for requesting a verification token from the Google Site Verification API. It includes fields for specifying the site and the verification method, along with functions to construct, serialize, and deserialize the request to and from JSON. It is used to generate the necessary payload when initiating a site verification process using methods like FILE, META, or DNS.",
      "description_length": 403,
      "index": 769,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Setting",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing user settings in a calendar system, including parsing and rendering settings to and from JSON data models. It works with a record type containing string fields for `etag`, `value`, `kind`, and `id`, representing individual user settings. Concrete use cases include reading and updating user preferences such as timezone or default calendar view through a structured data model.",
      "description_length": 421,
      "index": 770,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Service.WebResourceResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage website and domain verification through Google's Site Verification API. It handles creating, retrieving, updating, and deleting verification records, along with generating verification tokens and modifying ownership lists. It works directly with website resource data structures and session state to verify and manage domain ownership programmatically.",
      "description_length": 394,
      "index": 771,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateSpreadsheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batch updating a Google Sheets spreadsheet, including a list of individual requests to apply and options for controlling the response format. It provides functions to manipulate and serialize the batch update request, such as setting whether the full spreadsheet data or specific ranges should be returned after the update. Concrete use cases include constructing and customizing batch operations like updating multiple cells, resizing rows or columns, or applying formatting changes in a single API call.",
      "description_length": 546,
      "index": 772,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.CommentFeed",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling paginated comment feeds from the Google+ API, including fields like ETag, ID, comment items, pagination tokens, and timestamps. It provides functions to parse and render comment feeds to and from JSON data models, enabling interaction with API responses and requests. Use cases include retrieving and processing comment pages from Google+ activities, handling pagination, and caching responses using ETags.",
      "description_length": 456,
      "index": 773,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.AdclientsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `list` operation to retrieve all ad clients associated with an AdSense account. It works with the `AdClients` data structure and interacts with the AdSense Management API to fetch account inventory information. A concrete use case is enumerating ad clients to manage or analyze AdSense account inventory programmatically.",
      "description_length": 346,
      "index": 774,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.File",
      "library": "gapi-ocaml",
      "description": "This module provides functional lenses for manipulating file metadata in Google Drive API v3, including properties like permissions, ownership, timestamps, media metadata (images/video), and UI settings. It operates on a structured `t` type representing Drive files, which includes nested records for capabilities, users, and content hints, enabling precise access and modification of file attributes. These tools are used for tasks like managing file sharing settings, extracting media information, and handling content restrictions during API interactions.",
      "description_length": 558,
      "index": 775,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateConditionalFormatRuleRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating conditional format rules in a Google Sheets document. It includes fields to specify the rule, its new and current indices, and the sheet ID where the rule applies, enabling precise manipulation of conditional formatting. Operations include creating an empty instance, rendering to JSON, parsing from JSON, and lenses for accessing and modifying individual fields.",
      "description_length": 413,
      "index": 776,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for AdSense ad styles, including fields for colors, corners, font, and kind. It provides lenses to access and modify individual components of an ad style, along with functions to serialize and deserialize ad style data to and from JSON. It is used to configure or retrieve the visual appearance of ads, such as specifying color themes and font settings for integration with the AdSense Management API.",
      "description_length": 448,
      "index": 777,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ChildList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of child references in the Drive API, providing access to child metadata like ETags, item lists, and navigation links. It supports parsing and rendering JSON data models, managing child resource hierarchies, and handling pagination via `nextPageToken`. Concrete use cases include retrieving folder contents, navigating through large sets of child resources, and synchronizing directory structures with remote Drive data.",
      "description_length": 460,
      "index": 778,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.Status",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing API status responses, including error codes, developer-facing messages, and structured error details. It provides functions to serialize and deserialize status data to and from JSON, along with lenses for accessing and modifying individual fields. Use cases include handling Google Drive API error responses and constructing status objects for API requests.",
      "description_length": 411,
      "index": 779,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.NumberFormat",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for specifying number formatting in Google Sheets API requests. It includes fields for setting the format type and custom pattern, along with functions to serialize and deserialize the format to and from JSON data models. It is used when applying or retrieving cell formatting rules that dictate how numeric values are displayed in spreadsheets.",
      "description_length": 392,
      "index": 780,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RefreshDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying data source refresh requests in the Google Sheets API. It includes fields to target specific data source objects, refresh all objects in a spreadsheet, or force a refresh regardless of state. The structure supports serialization to and from JSON for API communication.",
      "description_length": 320,
      "index": 781,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.EntryPoint",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates conference entry point data for calendar events, including phone, video, SIP, and additional access methods. It provides lenses for accessing and modifying fields such as URI, label, type, and authentication codes (e.g., pin, password), along with serialization and deserialization functions for JSON data. It is used to construct and interpret structured conference connection details within calendar event metadata.",
      "description_length": 453,
      "index": 782,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.InterpolationPoint",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates interpolation points used in conditional formatting rules for Google Sheets. It supports setting color, color style, value type, and value through lenses, and handles JSON serialization/deserialization for API communication. Concrete use cases include configuring gradient color scales based on cell values or thresholds in spreadsheet conditional formatting.",
      "description_length": 395,
      "index": 783,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module provides functionality for parsing JSON data into comment objects with nested actors, replies, and +1 interactions, along with serialization/deserialization and metadata management (timestamps, IDs, ETags). It operates on a comment type that includes associated structures for user actions and content, supporting use cases like processing Google+ API comment threads, handling user interactions, and ensuring data consistency through ETag validation.",
      "description_length": 463,
      "index": 784,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Link",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing hyperlinks within the Google Sheets API v4 integration. It includes operations to serialize and deserialize link data to and from JSON, enabling interaction with the API's link-based features. Use cases include constructing and parsing links for spreadsheet elements like charts or cells.",
      "description_length": 342,
      "index": 785,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.HistoryMessageAdded",
      "library": "gapi-ocaml",
      "description": "This module represents a history record indicating a message was added to a Gmail mailbox. It provides access to the associated `Message.t` value through a lens and supports serialization/deserialization via `render`, `parse`, `to_data_model`, and `of_data_model`. It is used to process incremental mailbox changes from the Gmail API, specifically tracking new messages as they appear in mailbox history.",
      "description_length": 404,
      "index": 786,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with a single `filterId` field representing the ID of a filter to delete in Google Sheets API operations. It includes functions to serialize and deserialize the record to and from JSON data models, as well as lenses for accessing and modifying the `filterId` field. It is used specifically to construct or process delete filter view requests when interacting with Google Sheets spreadsheets via the API.",
      "description_length": 437,
      "index": 787,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.CustomMetric",
      "library": "gapi-ocaml",
      "description": "This module provides operations for creating, modifying, and serializing custom metric records with fields like ID, name, scope, and timestamps, using a `t` record type and parent link metadata. It supports converting between these metrics and a generic JSON data model, enabling integration with Google Analytics API endpoints for tasks like metric creation or response parsing. Key use cases include managing custom metric configurations and handling API data exchanges in JSON format.",
      "description_length": 487,
      "index": 788,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batch updating cell values in a Google Sheets spreadsheet. It includes fields to specify input interpretation, the ranges and values to update, and options for rendering and including updated values in the response. Concrete use cases include sending bulk updates to a spreadsheet and retrieving formatted or raw representations of updated cells.",
      "description_length": 387,
      "index": 789,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Activity",
      "library": "gapi-ocaml",
      "description": "This module provides lens-based accessors and mutators for manipulating Google+ activity data, targeting fields like content, metadata, and relationships, along with JSON serialization/deserialization functions. It operates on structured records such as activity objects, actors, and providers, enabling efficient handling of user-generated actions, social interactions, and content updates via the Google+ API. Use cases include parsing API responses, constructing activity payloads, and transforming nested data like comments or shares.",
      "description_length": 538,
      "index": 790,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PointStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring point styles in Google Sheets charts, specifically handling size and shape attributes. It provides functions to serialize and deserialize point style configurations to and from JSON data models, ensuring compatibility with the Sheets API. Use this module when customizing chart point appearance, such as setting marker size or shape in scatter plots or line charts.",
      "description_length": 428,
      "index": 791,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.LabelColor",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing label colors in the Gmail API, with fields for background and text colors as hex strings. It provides functions to create an empty color object, render it into a JSON data model, and parse or convert JSON data into a color object. The module is used to set and manage label colors in Gmail API interactions, ensuring valid color values are used.",
      "description_length": 399,
      "index": 792,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BandingProperties",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates banding styles for spreadsheet rows or columns using alternating colors. It works with color and color style data types to specify header, footer, and alternating band colors. Concrete use cases include configuring visually distinct table bands in Google Sheets through the API, ensuring consistent styling by prioritizing color style fields when both color and color style are present.",
      "description_length": 422,
      "index": 793,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.FindReplaceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for configuring find-and-replace actions in a Google Sheets document. It includes fields to specify the target value, replacement, search range, sheet scope, and matching behavior such as case sensitivity, regex, and cell content matching. Use this module to construct and manipulate find-and-replace requests for programmatic editing of spreadsheet content.",
      "description_length": 410,
      "index": 794,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.EntityAdWordsLink",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for linking AdWords accounts to Google Analytics web properties. It provides functions to parse and render JSON data, access and modify link properties such as name, ID, linked profiles, and associated AdWords accounts. It is used when configuring or managing AdWords integrations within Google Analytics.",
      "description_length": 356,
      "index": 795,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListMessagesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling responses from listing messages in the Gmail API. It includes fields for a list of messages, a token for pagination, and an estimate of the total result size. Functions are provided to access and manipulate these fields, as well as to serialize and deserialize the structure to and from JSON.",
      "description_length": 342,
      "index": 796,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.DrivesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage shared drives in Google Drive API v3, including creating, deleting, retrieving, hiding, listing, unhiding, and updating shared drives. It works with `GapiDriveV3Model.Drive.t` and `GapiDriveV3Model.DriveList.t` data structures, along with session and header configurations. Concrete use cases include managing organizational shared drives, implementing access control, and synchronizing drive metadata with external systems.",
      "description_length": 466,
      "index": 797,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Service.TasksResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage individual tasks within a task list, including creating, retrieving, updating, deleting, and reordering tasks. It works with task data structures defined in the `GapiTasksV1Model` module, such as `Task` and `Tasks`. Concrete use cases include synchronizing task data with a backend service, implementing task management features like marking tasks as completed, and organizing tasks hierarchically.",
      "description_length": 440,
      "index": 798,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ClearValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a values-clearing operation in a spreadsheet API. It includes fields for the spreadsheet ID and the cleared range in A1 notation, along with functions to serialize, deserialize, and manipulate the data. It is used to interpret API responses when clearing cell values in a Google Sheets document.",
      "description_length": 363,
      "index": 799,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore.SignatureMethod",
      "library": "gapi-ocaml",
      "description": "This module defines the signature methods used for authenticating API requests, specifically supporting RSA-SHA1 and HMAC-SHA1 algorithms. It provides a conversion function `to_string` to obtain the string representation of each method. Used in generating and verifying signed requests in OAuth and similar authentication protocols.",
      "description_length": 332,
      "index": 800,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.PropertiesResource",
      "library": "gapi-ocaml",
      "description": "This module manages custom properties associated with files in Google Drive. It supports operations to add, update, retrieve, list, and delete properties, which are key-value pairs attached to specific files. Use cases include storing metadata like tags, permissions, or application-specific settings directly on Drive files.",
      "description_length": 325,
      "index": 801,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Sheet",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for interacting with individual sheets in a Google Sheets document via the v4 API. It provides accessors and manipulators for sheet properties, grid data, merges, conditional formatting, filters, charts, and metadata through typed fields and lenses. Concrete use cases include programmatically updating cell ranges, applying formatting rules, managing protected areas, and serializing sheet state to or from JSON for API communication.",
      "description_length": 482,
      "index": 802,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling job status responses from the BigQuery API. It includes fields for tracking job state, errors, and final error results, along with functions to serialize, deserialize, and manipulate job status data. It is used to interpret and manage the outcome of BigQuery job executions, such as detecting failures or monitoring progress.",
      "description_length": 387,
      "index": 803,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.AboutResource",
      "library": "gapi-ocaml",
      "description": "Handles retrieving metadata about the current user and Drive API settings. Works with `GapiDriveV2Model.About` and session data types. Used to fetch user-specific Drive configuration and status, such as storage limits and recent changes.",
      "description_length": 237,
      "index": 804,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuthResponse.OAuth1",
      "library": "gapi-ocaml",
      "description": "Handles OAuth 1.0a authorization responses with functions to extract and manipulate request tokens, authorization tokens, and access tokens. Works with record types representing token data, including request_token, auth_token, and access_token. Used to parse and manage tokens and secrets during the OAuth 1.0a flow, such as confirming callbacks, retrieving verifiers, and storing access credentials.",
      "description_length": 400,
      "index": 805,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobReference",
      "library": "gapi-ocaml",
      "description": "This module defines a job reference structure with identifiers for jobs and projects, providing operations to create, access, and modify these identifiers using lenses. It supports serialization and deserialization to and from JSON data models, ensuring compatibility with API data formats. Use this module when managing job references in BigQuery API interactions, such as tracking job execution or querying job status.",
      "description_length": 420,
      "index": 806,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.PropertyList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing a list of properties associated with a Drive API resource, including metadata such as ETag and self-link. It provides operations to access and modify individual fields via lenses, convert the structure to and from JSON data models, and render or parse property lists from JSON. Concrete use cases include handling custom metadata properties for files or folders in Google Drive API interactions.",
      "description_length": 445,
      "index": 807,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.RepliesResource",
      "library": "gapi-ocaml",
      "description": "This module handles replies to comments in Google Drive. It provides operations to create, retrieve, update, and delete individual replies, as well as list all replies for a specific comment. The module works with `CommentReply` and `CommentReplyList` data types, interacting with the Drive API to manage comment threads on files.",
      "description_length": 330,
      "index": 808,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.EventDateTime",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling event date and time information in the Calendar API (v3). It provides functions to create, parse, and render event timestamps with optional time zones and all-day date support. Concrete use cases include setting event start/end times with specific time zones or as all-day events, and converting between JSON data models and internal representations.",
      "description_length": 412,
      "index": 809,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.AccessProposalRoleAndView",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an access proposal's role and view in the Google Drive API v3. It includes operations to parse and render the structure to and from JSON data models, as well as lenses to access and modify the `role` and `view` fields. It is used to handle access control proposals when managing file sharing settings in Google Drive.",
      "description_length": 367,
      "index": 810,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Metadata",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling metadata in the AdSense Management API (v1.4). It includes functions to parse and render metadata entries, access and modify the list of metadata items and the kind field, and convert between metadata and JSON data models. It is used to retrieve and process reporting metadata such as dimension and metric definitions from the AdSense API.",
      "description_length": 401,
      "index": 811,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a data source in the Google Sheets API v4. It includes operations to create an empty request, set or retrieve the data source ID, and convert the request to and from JSON data models. It is used when issuing delete requests to remove data sources from a spreadsheet.",
      "description_length": 316,
      "index": 812,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for accessing AdSense data, providing `adsense` for full read-write access and `adsense_readonly` for read-only access. It works with string values representing OAuth 2.0 scope identifiers. These scopes are used when authenticating API requests to control access to AdSense management operations such as report generation and inventory management.",
      "description_length": 389,
      "index": 813,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartAxis",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring chart axes in Google Sheets API requests. It includes fields for positioning, styling, and formatting axes, along with functions to serialize and deserialize axis configurations to and from JSON. It is used when creating or modifying charts to specify axis properties like titles, text formatting, and view window settings.",
      "description_length": 390,
      "index": 814,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Experiment",
      "library": "gapi-ocaml",
      "description": "This module manages A/B testing experiment configurations, including lifecycle states, traffic allocation between variations, and metric tracking, while providing structured access to metadata like timestamps, serving frameworks, and relationship links. It operates on hierarchical data models representing experiments, their nested variations (A/B test options), and parent-child associations with analytics profiles, with built-in JSON serialization for API interoperability. Specific applications include programmatic experiment setup, real-time outcome analysis, and bidirectional data synchronization with Google Analytics v3 through JSON-convertible types.",
      "description_length": 662,
      "index": 815,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceColumn",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing a calculated column in a Google Sheets data source, including its column reference and formula. It provides functions to construct, serialize, and deserialize instances of this structure to and from JSON data models. Use this module when configuring or manipulating calculated columns in Google Sheets API integrations.",
      "description_length": 373,
      "index": 816,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Filter",
      "library": "gapi-ocaml",
      "description": "This module provides tools for managing filter configurations that manipulate dimensions and metrics in Google Analytics data pipelines. It supports operations like constructing, serializing, and parsing filter details (e.g., uppercase transformations, search-and-replace patterns, advanced expression-based rules) while offering structural access to components via lenses and JSON data model conversions. Typical use cases include preparing filter payloads for API requests, normalizing tracking data, and handling inclusion/exclusion logic for campaign analytics.",
      "description_length": 565,
      "index": 817,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.HistoryLabelRemoved",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the removal of labels from a Gmail message during a history update. It provides operations to access and modify the list of removed label IDs and the associated message, along with functions to serialize and deserialize the data to and from JSON. It is used to track label removal events when synchronizing Gmail message state changes via the API.",
      "description_length": 397,
      "index": 818,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ChangeList",
      "library": "gapi-ocaml",
      "description": "This module represents a list of changes returned by the Drive API, containing metadata like the largest change ID, pagination tokens, and links. It provides lenses to access fields such as `etag`, `items`, and `nextPageToken`, along with functions to serialize and deserialize the structure to and from JSON. It is used to process and navigate through incremental changes to files in a user's Drive.",
      "description_length": 400,
      "index": 819,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model.AnalyticsSnapshot",
      "library": "gapi-ocaml",
      "description": "This module represents analytics data for a shortened URL, including click counts and aggregated metrics like top browsers, countries, platforms, and referrers. It provides lenses to access and modify individual fields, along with serialization and deserialization functions for JSON data exchange. Use this module to analyze traffic patterns for specific short URLs, such as tracking geographic distribution of clicks or identifying referral sources.",
      "description_length": 451,
      "index": 820,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Alert",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling alerts in the AdSense Management API, including parsing and rendering alert data to and from JSON. It provides lenses for accessing and modifying alert fields such as `id`, `severity`, and `_type`, and supports creating empty alert instances. Concrete use cases include processing alert responses from the API and serializing alert data for storage or transmission.",
      "description_length": 409,
      "index": 821,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.FileList",
      "library": "gapi-ocaml",
      "description": "Handles parsing, rendering, and accessing fields of a paginated Google Drive file list response. Works with `t` records containing a list of files, pagination token, and search status. Used to retrieve and process batches of files from Google Drive API v3, especially when iterating through large result sets with `nextPageToken`.",
      "description_length": 330,
      "index": 822,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.SavedAdStyles",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of saved ad styles, including metadata such as ETag, kind, and pagination tokens. It provides operations to access and modify individual fields using lenses, and supports serialization and deserialization to and from JSON data models. It is used to manage responses when retrieving lists of saved ad styles from the AdSense API, enabling efficient caching and pagination.",
      "description_length": 428,
      "index": 823,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCore.AnnotatedTree",
      "library": "gapi-ocaml",
      "description": "This module represents hierarchical data structures with annotated nodes, supporting operations like `fold`, `xfold`, and `kfold` for traversing and transforming trees with context-aware accumulators. It works with tree structures where nodes have metadata (`'a`) and values (`'c`), enabling precise manipulation of nested data. Concrete use cases include parsing and processing structured documents like JSON or XML, where annotations track positional or semantic information during traversal.",
      "description_length": 494,
      "index": 824,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Dataset",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for representing and manipulating BigQuery datasets. It includes fields for dataset metadata such as access control, creation time, description, and location, along with functions to serialize and deserialize dataset configurations for API interactions. It is used to create, update, and manage dataset resources in BigQuery, including setting default table expiration times and access permissions for users, groups, and domains.",
      "description_length": 483,
      "index": 825,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.Operation",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling long-running Google Drive API (v3) tasks, including tracking progress via metadata, checking completion status, and retrieving results or errors. It works with JSON data models and standard OCaml types like strings, booleans, and key-value pairs. Concrete use cases include monitoring file import/export operations, handling API responses for resource creation, and managing error states during asynchronous Drive operations.",
      "description_length": 469,
      "index": 826,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scopes for interacting with the URL Shortener API. It provides a `urlshortener` value representing the scope required to manage goo.gl short URLs. Use this scope when authenticating requests to create, inspect, or modify shortened URLs via the API.",
      "description_length": 283,
      "index": 827,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.AccessProposal",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling access proposals in the Google Drive API v3. It includes fields like file ID, requester and recipient email addresses, roles and views, and timestamps, along with functions to serialize, deserialize, and manipulate these proposals. Use cases include managing user access requests, tracking permissions changes, and integrating with notification or approval workflows.",
      "description_length": 431,
      "index": 828,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling job statistics in the BigQuery API. It includes fields for tracking job timestamps, byte processing totals, and nested statistics specific to job types like queries, loads, and extracts. Use this module to parse, render, or manipulate job metadata returned by BigQuery API calls for monitoring or logging purposes.",
      "description_length": 378,
      "index": 829,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceChartProperties",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling chart properties tied to a data source in the Google Sheets API. It includes functions to parse and render chart properties, access fields like `dataSourceId` and `dataExecutionStatus`, and convert between JSON and the internal data model. It is used when configuring or retrieving charts that are linked to external data sources in a spreadsheet.",
      "description_length": 411,
      "index": 830,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service.UserinfoResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `get` function to retrieve authenticated user profile information from Google's OAuth2 API, including details like user ID, email, and profile picture. It operates on `GapiConversation.Session.t` and returns a `Userinfoplus.t` record alongside the updated session. Use it to fetch user details after completing OAuth2 authorization with Google.",
      "description_length": 369,
      "index": 831,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Payments",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and JSON serialization for payment information in the AdSense Management API. It defines a type for a list of payments, including metadata like the kind of list, and provides functions to parse and render JSON data models. It is used to retrieve and process payment details such as recent and upcoming payments for an AdSense account.",
      "description_length": 370,
      "index": 832,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module handles responses from batch updates to Google Sheets cells using data filters. It provides accessors to retrieve the number of updated rows, columns, cells, and sheets, along with individual response entries for each updated range. It is used to interpret the result of applying multiple data filter-based updates to a spreadsheet.",
      "description_length": 344,
      "index": 833,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPipe.OcamlnetPipe",
      "library": "gapi-ocaml",
      "description": "This module implements streaming HTTP message bodies using `Netchannels` for input and output. It supports reading and writing bytes, strings, and lines, along with signaling end-of-stream in either direction. Concrete use cases include handling chunked HTTP transfers and bidirectional communication over persistent connections.",
      "description_length": 329,
      "index": 834,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ExplainQueryStep",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a step in a BigQuery execution plan, with fields for the machine-readable operation type and human-readable substeps. It provides functions to convert instances to and from JSON data models, render structured representations, and access or modify fields using lenses. Concrete use cases include analyzing query execution plans returned by BigQuery and programmatically inspecting or logging query stages.",
      "description_length": 454,
      "index": 835,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartDomain",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring a waterfall chart's domain in the Google Sheets API. It includes fields for specifying chart data and reversing the domain's value order, with functions to serialize, deserialize, and manipulate the domain configuration. It is used to define the horizontal axis settings for waterfall charts when interacting with the Sheets API.",
      "description_length": 392,
      "index": 836,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Accounts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of AdSense accounts, including metadata like ETag, kind, and pagination tokens. It provides operations to access and modify individual fields using lenses, and functions to serialize and deserialize the data to and from JSON. It is used to process and manage account data retrieved from the AdSense Management API, supporting pagination and caching workflows.",
      "description_length": 416,
      "index": 837,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.RowData",
      "library": "gapi-ocaml",
      "description": "This module represents a row of data in a Google Sheets spreadsheet, primarily working with lists of `CellData` values. It provides functions to construct, manipulate, and convert row data to and from JSON representations. Use this module when building or parsing spreadsheet rows for API requests or responses.",
      "description_length": 311,
      "index": 838,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "This module provides functions to retrieve individual comments and list all comments for an activity in the Google+ API. It works with comment identifiers, activity identifiers, and session data to interact with the API. Concrete use cases include fetching a specific comment by ID and listing comments for a given activity with optional pagination and sorting.",
      "description_length": 361,
      "index": 839,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.RestDescription",
      "library": "gapi-ocaml",
      "description": "This module enables parsing, serializing, and modifying API metadata through structured lenses and utility functions, focusing on authentication settings, endpoint configurations, and method definitions. It operates on `RestDescription.t` records containing nested data like `schemas`, `parameters`, `methods`, and `auth`, allowing precise transformations of API discovery documents. Typical use cases include dynamically generating client libraries, normalizing API configurations, and extracting metadata for documentation or analysis tools.",
      "description_length": 543,
      "index": 840,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ConditionalFormatRule",
      "library": "gapi-ocaml",
      "description": "This module defines conditional formatting rules for Google Sheets, including ranges to apply formatting, boolean conditions, and gradient-based formatting. It supports operations to create, render, and parse these rules to and from JSON data models. Concrete use cases include setting up dynamic cell formatting based on cell values or gradients across a spreadsheet grid.",
      "description_length": 373,
      "index": 841,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.InsertRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying a range insertion request in a Google Sheets document. It includes functions to set or retrieve the grid range and shift dimension, as well as serialization and deserialization methods for converting to and from JSON data models. It is used when inserting new cells into a sheet, shifting existing cells either down or right.",
      "description_length": 389,
      "index": 842,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelField",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling label fields in the Google Drive API v3, supporting field types like date, integer, selection, text, and user references. It provides lenses for accessing and modifying specific fields, along with serialization and deserialization functions for JSON data model conversion. Concrete use cases include managing metadata labels on Drive files, such as tracking due dates, status selections, or assigned users.",
      "description_length": 470,
      "index": 843,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BooleanRule",
      "library": "gapi-ocaml",
      "description": "This module defines a boolean rule for conditional formatting in Google Sheets, consisting of a condition and a cell format. It provides functions to construct, manipulate, and serialize boolean rules using lenses for field access and update. Use this module to create and modify conditional formatting rules that apply specific styles based on cell values.",
      "description_length": 357,
      "index": 844,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroup",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates pivot group configurations for Google Sheets API v4. It includes fields to specify source columns, sorting, grouping rules, and display options like labels and totals. Use cases include building and customizing pivot tables in spreadsheets, such as organizing sales data by region or product categories with custom sorting and aggregation.",
      "description_length": 375,
      "index": 845,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.VacationSettings",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring Gmail auto-reply settings. It includes fields to control auto-reply behavior, such as start/end times, response content, and recipient restrictions. Use this module to set up vacation responses with specific time ranges, custom messages, and domain or contact-based reply rules.",
      "description_length": 345,
      "index": 846,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Channel",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing notification channels in the Calendar API, including creating, parsing, and rendering channel configurations. It works with the `t` record type representing channel properties like `id`, `address`, `expiration`, and `resourceUri`. Concrete use cases include setting up webhook-based notifications for calendar changes and serializing channel state to and from JSON for API communication.",
      "description_length": 431,
      "index": 847,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CandlestickChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for specifying candlestick charts in a Google Sheets API context. It includes operations to set the domain and data fields, with support for rendering to and parsing from JSON data models. It is used to configure candlestick chart visualizations using discrete or continuous domain data paired with candlestick series values.",
      "description_length": 372,
      "index": 848,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ProtectedRange",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing protected ranges in Google Sheets, including fields like `range`, `namedRangeId`, and `editors` to specify protection details. It provides functions to create, parse, and render protected range configurations, supporting use cases like setting editable regions with specific user permissions or warning-based edits. Operations include accessing nested data via lenses and serializing/deserializing configurations for API interactions.",
      "description_length": 498,
      "index": 849,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchGetValuesByDataFilterResponse",
      "library": "gapi-ocaml",
      "description": "This module handles parsing and rendering JSON responses from the Google Sheets API when retrieving cell values filtered by specific data filters. It structures the response into a typed record containing the spreadsheet ID and a list of matched value ranges. Use this module to extract filtered data from a spreadsheet after making a `batchGetByDataFilter` API call, enabling precise analysis of spreadsheet regions matching given criteria.",
      "description_length": 441,
      "index": 850,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.UrlchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module handles listing URL channels for a given AdSense ad client, retrieving them with optional pagination parameters. It operates on `GapiAdsenseV1_1Model.UrlChannels.t` and uses session data for API communication. A concrete use case is fetching URL channel data to analyze traffic sources or manage ad placements within an AdSense account.",
      "description_length": 348,
      "index": 851,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddSheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating a new sheet within a Google Sheets document via the API. It includes functions to manipulate sheet properties, serialize and deserialize requests to and from JSON data models, and initialize empty requests. Concrete use cases include setting up new sheets with custom properties like titles, grid dimensions, or sheet IDs before sending them to the Sheets API.",
      "description_length": 422,
      "index": 852,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSource",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing data sources within a Google Sheets spreadsheet. It includes fields for identifying the data source, specifying its configuration, defining calculated columns, and associating it with a specific sheet. Functions allow creating, rendering, and parsing data source objects to and from JSON representations, enabling integration with the Google Sheets API.",
      "description_length": 415,
      "index": 853,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.UnmergeCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for unmerging cells in a Google Sheets document. It provides functions to create, manipulate, and serialize a request that specifies a grid range where all merged cells should be unmerged. The primary data type is a record containing a `GridRange`, used to define the area of the sheet affected by the unmerge operation.",
      "description_length": 369,
      "index": 854,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from updating cell values in a Google Sheets spreadsheet. It includes fields for the spreadsheet ID, updated range, counts of modified rows and columns, total updated cells, and optionally the updated cell values. Operations include parsing from and rendering to JSON data models, lenses for accessing individual fields, and an empty value for initialization.",
      "description_length": 422,
      "index": 855,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListLabelsResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response containing a list of Gmail labels. It provides functions to parse and render label data in JSON format, as well as access and manipulate the list of labels. It is used when retrieving and processing label information from the Gmail API.",
      "description_length": 270,
      "index": 856,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileSummary",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a Google Analytics profile summary, with fields for the profile's ID, kind, name, starred status, and type (WEB or APP). It provides lenses for accessing and modifying individual fields, as well as functions to convert between the profile summary and JSON data models. Use cases include parsing API responses into typed records and serializing profile data for storage or transmission.",
      "description_length": 435,
      "index": 857,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateBandingRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update banded range properties in a Google Sheets document. It includes operations to set or modify the banded range and specify which fields to update, using a structured format compatible with the Google Sheets API v4. The module works with JSON data models for serialization and deserialization, enabling direct interaction with the API endpoints for styling and formatting operations.",
      "description_length": 421,
      "index": 858,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Change",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing and manipulating Drive API change records. It provides lenses for accessing fields like `deleted`, `file`, `fileId`, and `modificationDate`, along with functions to serialize and deserialize changes to and from JSON data models. It is used to track and process individual changes to files in a user's Drive, such as deletions or updates, including their metadata and timestamps.",
      "description_length": 444,
      "index": 859,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.WatchRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for configuring Gmail API push notifications, including filtering by labels and specifying a Pub/Sub topic. It provides functions to create, serialize, and parse watch requests for integration with Google Cloud Pub/Sub. Use cases include setting up real-time email monitoring and filtering notifications based on specific labels.",
      "description_length": 366,
      "index": 860,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.ConferenceProperties",
      "library": "gapi-ocaml",
      "description": "This module defines the conference properties supported by a calendar, specifically handling a list of allowed conference solution types such as \"eventHangout\", \"eventNamedHangout\", and \"hangoutsMeet\". It includes functions to create an empty configuration, render properties to JSON data model format, and parse or convert JSON data back into the module's type. Use cases include configuring calendar event settings and serializing/deserializing conference options for API requests.",
      "description_length": 483,
      "index": 861,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PivotFilterCriteria",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates filter criteria for pivot tables in Google Sheets, specifically handling visibility rules based on explicit values, boolean conditions, and default visibility settings. It works with string lists, boolean conditions, and JSON data models to configure which data entries are displayed. Concrete use cases include filtering pivot table rows or columns to show only specific values, applying dynamic conditions like numeric thresholds, and toggling default visibility behavior.",
      "description_length": 510,
      "index": 862,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profiles",
      "library": "gapi-ocaml",
      "description": "This module handles collections of Google Analytics view (profile) resources, providing access to profile lists and pagination metadata like page links, result counts, and indexing. It supports parsing and rendering profile collections from JSON data models, and lenses for accessing individual fields such as items, page size, and username. Concrete use cases include retrieving paginated profile lists from the API and extracting specific profile data for further processing.",
      "description_length": 477,
      "index": 863,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobConfiguration",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration options for BigQuery jobs, including operations for copying tables, extracting data, linking datasets, loading data, and executing queries. It works with nested data structures representing job settings, using lenses to access and modify individual fields. Concrete use cases include setting up a query job with specific parameters, validating job configurations before execution, and serializing configurations to or from JSON for API communication.",
      "description_length": 488,
      "index": 864,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.CancelDataSourceRefreshRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for canceling data source refreshes in a Google Sheets document. It includes fields to specify individual data source object references, a data source ID, or a flag to cancel all refreshes. Operations include creating empty requests, rendering to JSON, parsing from JSON, and converting to or from a data model for API interactions.",
      "description_length": 372,
      "index": 865,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BaselineValueFormat",
      "library": "gapi-ocaml",
      "description": "This module defines the formatting and styling options for baseline values in conditional formatting rules within Google Sheets. It includes fields to specify text formatting, positional alignment, comparison descriptions, and color schemes for positive and negative changes relative to the baseline. These configurations are applied when rendering data models to JSON for API requests or parsing responses from the Google Sheets API.",
      "description_length": 434,
      "index": 866,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.QueryResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from a BigQuery query operation, capturing result metadata and data. It includes fields for query cache status, job status, result rows, schema, and pagination tokens. Use this module to inspect query results, handle errors, and manage pagination when interacting with BigQuery's API.",
      "description_length": 320,
      "index": 867,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.File",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing file metadata and properties via lenses, enabling precise access and modification of attributes like permissions, ownership, timestamps, and media-specific metadata. It works with a structured `t` type representing files, incorporating nested data such as video/image metadata, thumbnails, labels, and indexable text. Use cases include synchronizing file state with Drive API endpoints, transforming metadata for search indexing, and handling user interaction data like view history or sharing permissions.",
      "description_length": 551,
      "index": 868,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileFilterLinks",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling collections of Google Analytics profile filter links, including pagination metadata. It provides functions to serialize and deserialize these collections to and from JSON, as well as access and manipulate individual fields such as the list of links, page size, and navigation URLs. It is used when retrieving or updating multiple profile filter links through the Google Analytics API.",
      "description_length": 434,
      "index": 869,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model.Jwk",
      "library": "gapi-ocaml",
      "description": "This module handles JSON Web Key (JWK) structures used for OAuth2 authentication, providing operations to access, modify, and manage key parameters such as algorithm, key type, and usage. It supports serialization and deserialization of JWK data to and from JSON models, enabling integration with Google's OAuth2 API for key management. Concrete use cases include parsing JWK responses from API endpoints and constructing JWK payloads for key validation and token signing.",
      "description_length": 472,
      "index": 870,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteNamedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for deleting a named range in a Google Sheets document by specifying its ID. It includes functions to serialize and deserialize the structure to and from JSON data models, as well as a lens for accessing the `namedRangeId` field. It is used when making API requests to remove a specific named range by its identifier.",
      "description_length": 354,
      "index": 871,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelModification",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates label modifications for Google Drive API v3. It includes operations to set the label ID, apply field modifications, and toggle label removal, working with JSON data models for serialization and deserialization. Use cases include updating file labels with specific field changes or removing labels from files in Drive.",
      "description_length": 353,
      "index": 872,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataLabel",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for data labels in Google Sheets charts, including properties like label type, text formatting, placement, and custom label data. It works with JSON data models and supports serialization and deserialization for integration with the Sheets API. Use cases include configuring chart data labels with custom text and formatting, and ensuring label data aligns with corresponding chart series in spreadsheet sources.",
      "description_length": 459,
      "index": 873,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDuplicatesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to delete duplicate rows within a specified grid range in a Google Sheets document. It includes operations to specify the range and columns used for detecting duplicates, with functions to serialize and deserialize the request to and from JSON data models. It is used when processing API requests to remove duplicate data in a spreadsheet, leveraging grid ranges and dimension ranges as core data structures.",
      "description_length": 438,
      "index": 874,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiMonad.MakeStateMonad",
      "library": "gapi-ocaml",
      "description": "This module implements a state monad that threads a state value through a sequence of computations. It provides `return` and `bind` for monadic sequencing, along with `get` to retrieve the current state and `put` to update it. It works with any data type chosen as the state, allowing structured manipulation of stateful computations in a pure functional way.",
      "description_length": 359,
      "index": 875,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ModifyThreadRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying Gmail threads by adding or removing label IDs. It includes operations to create an empty request, update label lists, and convert between JSON data models and the internal representation. It is used to prepare requests for the Gmail API that adjust thread labels without altering message content.",
      "description_length": 347,
      "index": 876,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListThreadsResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response from listing threads in the Gmail API, containing a list of threads, a page token for pagination, and an estimate of the total result size. It provides functions to parse and render thread data, convert to and from JSON data models, and access individual fields via lenses. Concrete use cases include handling paginated thread listings and processing Gmail thread data in API responses.",
      "description_length": 420,
      "index": 877,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DimensionProperties",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing dimension properties in a Google Sheets document, such as row heights and column widths, visibility settings, and associated metadata. It supports concrete operations like setting pixel size, toggling hidden states, and attaching developer metadata to dimensions. Use cases include configuring sheet layout, implementing data hiding logic, and synchronizing dimension state with external data sources.",
      "description_length": 465,
      "index": 878,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotTable",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring and serializing pivot tables in the Google Sheets API. It includes fields for specifying data sources, row and column groupings, filtering criteria, and value aggregation, along with functions to convert between JSON and the pivot table data model. It is used to construct and manipulate pivot table configurations for spreadsheet data analysis.",
      "description_length": 410,
      "index": 879,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Model.Comment",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing comments in the Blogger API v2. It includes functions to create an empty comment, serialize and deserialize comment data to and from JSON, and access individual fields such as content, author, blog, and post using lenses. It is used specifically for handling comment data during API interactions, including retrieving, creating, and updating comments with proper associations to blogs, posts, and parent comments.",
      "description_length": 475,
      "index": 880,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines specific authorization scopes for interacting with the Gmail API, such as reading, sending, and managing email, as well as handling labels, drafts, and mailbox settings. It works with string values representing OAuth2 scope identifiers. These scopes are used when authenticating API requests to control access permissions for user mailboxes.",
      "description_length": 361,
      "index": 881,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateEmbeddedObjectPositionResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from updating the position of an embedded object in a Google Sheet. It includes functions to parse and render the response to and from JSON data models, as well as a lens for accessing the embedded object's new position. It is used when programmatically adjusting the layout of embedded objects like charts or images within a sheet.",
      "description_length": 395,
      "index": 882,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddSheetResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a new sheet in the Google Sheets API. It provides access to the properties of the newly created sheet and supports serialization and deserialization to and from JSON data models. It is used to retrieve and manipulate the sheet properties returned by an add sheet operation.",
      "description_length": 321,
      "index": 883,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdCode",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling AdSense auto ad code snippets, including standard and AMP variants. It provides lenses for accessing fields like `adCode`, `ampBody`, and `ampHead`, along with functions to convert between JSON and the `t` record type. Concrete use cases include generating ad code for web pages and parsing API responses containing ad configuration data.",
      "description_length": 415,
      "index": 884,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.RemarketingAudiences",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and operations for managing collections of remarketing audiences in the Google Analytics API v3. It provides lenses for accessing and modifying fields such as the list of audiences, pagination parameters, and metadata like kind and username. Use cases include parsing and rendering audience data to and from JSON, navigating paginated results via nextLink and previousLink, and constructing or updating audience collections.",
      "description_length": 460,
      "index": 885,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.Message",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling individual email messages in the Gmail API v1. It includes fields like message ID, internal date, labels, and payload, along with lenses for accessing and modifying these fields. Use cases include parsing and rendering email messages to and from JSON, extracting message metadata, and managing message threads and labels programmatically.",
      "description_length": 400,
      "index": 886,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the request structure for adding a filter view in a Google Sheets API call. It includes operations to set and retrieve the filter configuration, render the request into JSON format, and parse or convert JSON data into a request object. It works directly with `FilterView.t` and JSON data models to configure and serialize filter views for API transmission.",
      "description_length": 376,
      "index": 887,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.EventAttachment",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for handling event attachments in a calendar API. It provides accessors for fields like `fileUrl`, `title`, and `mimeType`, and supports conversion to and from JSON data models. It is used to manage file attachments linked to calendar events, such as attaching documents or media from external services like Google Drive.",
      "description_length": 385,
      "index": 888,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.AccountsResource",
      "library": "gapi-ocaml",
      "description": "This module provides `get` and `list` operations to retrieve AdSense account details and enumerate available accounts. It works with `Account`, `Accounts`, and session types to authenticate and fetch publisher account data. Use this module to fetch a specific account by ID for reporting or configuration tasks, or list all accessible accounts to manage multiple AdSense publishers programmatically.",
      "description_length": 399,
      "index": 889,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCore.PostData",
      "library": "gapi-ocaml",
      "description": "This module represents HTTP POST data payloads with support for form fields and raw body content. It handles string, file, and buffer-based body types, along with content type declarations. Use it to construct multipart/form-data or JSON requests with precise control over payload structure.",
      "description_length": 291,
      "index": 890,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Error",
      "library": "gapi-ocaml",
      "description": "This module defines error structures returned by the Calendar API, including domain and reason fields to categorize and specify errors. It provides functions to serialize and deserialize error data to and from JSON, enabling integration with API responses. Use cases include handling API errors like \"groupTooBig\", \"notFound\", or \"internalError\" when querying calendars or resources.",
      "description_length": 383,
      "index": 891,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Search",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a complete search response from the CustomSearch API, including results, metadata, and auxiliary information. It provides lenses to access fields like search items, promotions, and queries, along with functions to serialize and deserialize the structure to and from JSON. Concrete use cases include parsing API responses into typed data for processing search results, extracting search metadata, and formatting response data for further consumption or transformation.",
      "description_length": 517,
      "index": 892,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDuplicatesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure to represent the response from removing duplicate rows in a Google Sheets document. It provides functions to parse and render the count of removed duplicates as JSON data, along with an empty value for initialization. The primary use case is handling the result of a duplicate removal operation, specifically tracking how many rows were eliminated.",
      "description_length": 385,
      "index": 893,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.FilesResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing files in Google Drive, including creating, updating, copying, deleting, and listing files, as well as controlling visibility, metadata, and revision behavior. It works with file metadata models, session state, and specialized types like visibility, projection, and corpus for precise API interactions. Concrete use cases include uploading new files with specific permissions, updating file content while preserving timestamps, exporting Google Docs to different formats, and querying files with custom search filters and projection levels.",
      "description_length": 584,
      "index": 894,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.Accounts",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of AdSense accounts, including metadata like ETag, kind, and pagination tokens. It provides operations to access and modify individual fields using lenses, and functions to serialize and deserialize the structure to and from JSON data models. Concrete use cases include processing API responses to list accounts and preparing data for subsequent API requests using the continuation token.",
      "description_length": 445,
      "index": 895,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.UrlChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of URL channels in the AdSense Management API. It provides functions to parse, render, and manipulate URL channel lists, including accessing individual channels, pagination tokens, and caching metadata. Concrete use cases include processing API responses to retrieve URL channel lists and constructing requests for paginated data retrieval.",
      "description_length": 396,
      "index": 896,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiError.RequestError",
      "library": "gapi-ocaml",
      "description": "This module defines a structured representation of server errors, including a list of individual errors, an error code, and a message. It provides operations to access and modify error components using lenses, convert errors to and from JSON data models, and render them for debugging or logging. Concrete use cases include handling API responses, validating server error payloads, and extracting specific error details for user feedback or retry logic.",
      "description_length": 453,
      "index": 897,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.FilterSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying filters in a Google Sheets API request, including the column index, data source reference, and filter criteria. It provides functions to construct, serialize, and deserialize filter specifications for use in API interactions. Use cases include setting up dynamic data filters for spreadsheet queries and report generation.",
      "description_length": 374,
      "index": 898,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.RevisionList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling lists of file revisions retrieved from the Drive API, including metadata like ETags, pagination tokens, and links. It provides functions to serialize and deserialize revision lists to and from JSON data models, supporting API interactions. Use cases include processing paginated revision data from API responses and constructing revision lists for file version management.",
      "description_length": 422,
      "index": 899,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Profile",
      "library": "gapi-ocaml",
      "description": "This module provides lens-based accessors and mutators for profile attributes like `timezone`, `currency`, and tracking settings, alongside JSON serialization/deserialization functions. It operates on structured types representing analytics profiles\u2014including permissions, parent-child links, and metadata\u2014enabling tasks like API data synchronization and initializing profiles with default values via the `empty` constructor.",
      "description_length": 425,
      "index": 900,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DimensionRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a range of dimensions in a Google Sheets document, including the sheet ID, dimension type, and optional start and end indices. It provides functions to construct, serialize, and deserialize dimension ranges for interacting with the Sheets API, such as specifying row or column ranges for batch updates or data retrieval. Use cases include defining spans for resizing, clearing, or formatting specific sections of a sheet.",
      "description_length": 471,
      "index": 901,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Account",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for representing AdSense accounts, including fields like account ID, name, creation time, and sub-accounts. It provides lenses for accessing and modifying individual fields, functions for JSON serialization and deserialization, and an empty value for initializing accounts. Use this module when interacting with the AdSense Management API to process or construct account data for API requests and responses.",
      "description_length": 461,
      "index": 902,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotValue",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure and operations for configuring pivot table values in Google Sheets API v4. It includes fields to specify data sources, summarization logic, and display formatting for pivot values, such as `sourceColumnOffset`, `summarizeFunction`, and `calculatedDisplayType`. Use this module when constructing or modifying pivot table value configurations programmatically, especially when integrating with JSON serialization or data model transformations.",
      "description_length": 478,
      "index": 903,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GetSpreadsheetByDataFilterRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request structure for retrieving spreadsheet data based on specified `DataFilter` rules. It includes fields to control whether grid data is included and whether tables in banded ranges should be excluded. The module provides functions to construct, modify, and serialize these requests to and from JSON data models for use in API calls.",
      "description_length": 358,
      "index": 904,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartCustomSubtotal",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing custom subtotals in a waterfall chart series. It includes fields for specifying the index of a data point, a label for the subtotal, and whether the data point itself is the subtotal. These values are used to configure how subtotals are displayed or calculated in a Google Sheets waterfall chart.",
      "description_length": 350,
      "index": 905,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Model.PlusAclentryResource",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing an access control list (ACL) entry for the Google+ API. It includes fields for the entry's display name, ID, and type, supporting operations to manipulate and serialize these entries to and from JSON. It is used to manage access permissions for resources like posts or profiles by specifying entities such as individuals, circles, or domains.",
      "description_length": 392,
      "index": 906,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ListForwardingAddressesResponse",
      "library": "gapi-ocaml",
      "description": "This module handles responses from listing forwarding addresses in the Gmail API. It provides functions to parse and render forwarding address data, specifically working with lists of `ForwardingAddress` objects. Use it to retrieve and manage forwarding address configurations from a Gmail account.",
      "description_length": 298,
      "index": 907,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Service.BlogsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations for retrieving blog data by identifier, primarily using the `get` function to fetch a specific blog resource. Works with blog identifiers and session contexts to interact with the Blogger API. Useful for applications that need to load blog metadata, such as titles, authors, or settings, directly from a known blog ID.",
      "description_length": 340,
      "index": 908,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.TableSchema",
      "library": "gapi-ocaml",
      "description": "This module defines the structure of a BigQuery table schema, including a list of field schemas. It provides operations to create an empty schema, render it to JSON data model format, and parse or convert JSON data into a schema object. Use this module when working with BigQuery table definitions, such as when creating or updating tables with specific field configurations.",
      "description_length": 375,
      "index": 909,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.UnsampledReport",
      "library": "gapi-ocaml",
      "description": "This module provides tools to manipulate unsampled report records for Google Analytics API v3, focusing on metadata like account identifiers, dimensions, metrics, and download configurations. It supports structured access to nested data through lenses and handles JSON serialization for API interactions, working with types such as `UnsampledReport`, `DriveDownloadDetails`, and `CloudStorageDownloadDetails`. These features are essential for accurately retrieving and processing unsampled analytics data via Google's API endpoints.",
      "description_length": 532,
      "index": 910,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for updating a data source in the Google Sheets API, containing the target data source and a list of fields to update. It provides functions to manipulate and serialize the structure, including lenses for accessing `dataSource` and `fields`, and conversion to and from JSON data models. Use cases include constructing and modifying update requests for spreadsheet data sources before sending them to the API.",
      "description_length": 445,
      "index": 911,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupValueMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines metadata for pivot group values in a Google Sheets API data model. It includes operations to access and modify the calculated value and collapsed state, along with functions to serialize and deserialize the metadata to and from JSON data models. It is used to manage display and structural information for pivot table groupings when interacting with Sheets API v4.",
      "description_length": 384,
      "index": 912,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service.CommentsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations to retrieve individual comments and filtered comment lists for a blog post. Works with `GapiBloggerV2Model.Comment.t` and `GapiBloggerV2Model.CommentList.t` data structures, using parameters like blog ID, post ID, and optional filters such as date or result limits. Used to fetch specific comments or paginated comment listings from a Blogger blog post.",
      "description_length": 375,
      "index": 913,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Acl",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates access control lists (ACLs) for the Google+ API, specifically handling the `description`, `items`, and `kind` fields of an ACL. It provides functions to create an empty ACL, render it into JSON format, and parse or convert JSON data models to and from ACL structures. Concrete use cases include managing access permissions for Google+ resources by serializing and deserializing ACL data during API requests and responses.",
      "description_length": 457,
      "index": 914,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.TaskList",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing task lists in the Tasks API v1, including creating, parsing, and serializing task list data. It works with the `t` record type representing task lists, and `GapiJson.json_data_model` for JSON serialization. Concrete use cases include converting task list data to and from JSON format, accessing and modifying task list fields using lenses, and initializing empty task list structures.",
      "description_length": 428,
      "index": 915,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddNamedRangeResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a named range in the Google Sheets API. It includes operations to parse and render JSON data, convert to and from data models, and access the named range field. It is used to handle API responses when creating named ranges in a spreadsheet.",
      "description_length": 294,
      "index": 916,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.HashClientIdResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling responses from hashing client IDs in the Google Analytics API v3. It includes fields for the original client ID, hashed client ID, resource kind, and web property ID, with lenses for accessing and modifying individual fields. The module supports serialization to and from JSON data models, enabling integration with API request/response handling.",
      "description_length": 396,
      "index": 917,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteConditionalFormatRuleResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from deleting a conditional format rule in the Google Sheets API. It stores the deleted rule using the `rule` field and provides functions to convert the response to and from JSON data models. It is used to retrieve the details of a removed conditional formatting rule when interacting with spreadsheet data.",
      "description_length": 344,
      "index": 918,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ExternalDataConfiguration",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the configuration for external data sources in BigQuery, supporting operations to set and retrieve properties such as compression type, data format, schema, and source URIs. It works with structured types like `t` for configuration, `CsvOptions.t` for CSV-specific settings, and `TableSchema.t` for data schemas, along with list and primitive types. Concrete use cases include specifying external CSV or JSON data locations for BigQuery load jobs, configuring schema validation, and handling data ingestion errors.",
      "description_length": 550,
      "index": 919,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.Streamingbuffer",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the `Streamingbuffer` data structure, representing metadata about a BigQuery streaming buffer. It provides accessors (`estimatedBytes`, `estimatedRows`, `oldestEntryTime`) to retrieve output-only fields, and functions to serialize and deserialize the structure to and from JSON data models. It is used to inspect the state of streaming data in BigQuery tables, such as buffer size estimates and entry timestamps.",
      "description_length": 448,
      "index": 920,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics3",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for BigQuery load job statistics. It provides accessors for metrics like input file size, source file count, output size, and imported rows via lenses, and supports JSON conversion for API communication. Used to monitor and analyze BigQuery load job performance using precise byte and row counts.",
      "description_length": 360,
      "index": 921,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.IncludeConditions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates include conditions for Google Analytics audiences, including properties like look-back window, membership duration, and segment criteria. It works with JSON data models and provides lenses for accessing and updating individual fields, along with serialization and deserialization functions. Use cases include configuring audience definitions for analytics reporting and managing user segments based on behavioral criteria.",
      "description_length": 458,
      "index": 922,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model.DirectoryList",
      "library": "gapi-ocaml",
      "description": "This module handles the structure and manipulation of API directory lists, providing access to version-specific discovery data through lenses for `discoveryVersion`, `kind`, and `items`. It operates on the `t` record type, which aggregates metadata and a list of API entries, supporting JSON serialization and deserialization. Concrete use cases include processing API discovery documents to identify available services, extracting metadata for display, and managing API version listings in client tools.",
      "description_length": 504,
      "index": 923,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiJwtServiceAccount.JwtClaim",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing JWT claims specific to service account authorization, including fields for issuer, scope, audience, expiration, issued-at time, and subject. It provides lenses for accessing and modifying individual claim fields and functions to convert between the claim structure and JSON data models. This module is used to construct and manipulate JWT payloads for authenticating service accounts in API requests.",
      "description_length": 454,
      "index": 924,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.FreebusyResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `query` function to retrieve free/busy information for a set of calendars by sending a `FreeBusyRequest` and receiving a `FreeBusyResponse`. It operates on calendar identifiers and time ranges, returning availability data for scheduling purposes. Use this module to check when users or resources are available for meetings within a specified time window.",
      "description_length": 379,
      "index": 925,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountTicket",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling account tickets in the Google Analytics API v3, including creating empty tickets, parsing and rendering JSON data, and accessing nested account, profile, and web property details through lenses. It works with structured data types like `GapiAnalyticsV3Model.Account.t`, `Profile.t`, `Webproperty.t`, and `json_data_model`. Concrete use cases include initializing account tickets, serializing them to JSON for API requests, and extracting specific fields like the redirect URI or ticket ID for authentication workflows.",
      "description_length": 562,
      "index": 926,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.LineStyle",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for line style configurations in the Google Sheets API, specifically handling line width and dash type. It provides functions to convert line style data to and from JSON representations, enabling integration with API requests and responses. Use cases include setting border styles in spreadsheet cells or chart elements through the Sheets API.",
      "description_length": 392,
      "index": 927,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Query",
      "library": "gapi-ocaml",
      "description": "This module enables typed access to query parameters like search terms, language filters, and pagination controls through a `t` record type with lens-based accessors. It supports JSON serialization and deserialization of these query configurations, allowing bidirectional conversion between `t` and JSON data models. This facilitates building API requests, processing paginated search results, and synchronizing query state with external JSON representations in search applications.",
      "description_length": 482,
      "index": 928,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateNamedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for updating named ranges in a Google Sheets document. It includes functions to set or retrieve the `namedRange` and `fields` properties, and supports serialization and deserialization to and from JSON data models. Use this module when modifying existing named ranges, specifying which fields to update, and integrating with the Google Sheets API v4 requests.",
      "description_length": 408,
      "index": 929,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.ManualRule",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for organizing and managing groups of items in a Google Sheets document. It includes functions to serialize and deserialize group data, enabling efficient data exchange with the Sheets API. Use cases include creating custom grouping rules for spreadsheet data and processing user-defined categorizations in Sheets.",
      "description_length": 351,
      "index": 930,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants used to request specific user permissions when interacting with the Google+ API. It includes scopes for accessing user identity, email, profile information, and social circle data. These values are directly used during OAuth 2.0 authorization to control access levels when integrating with Google+ features.",
      "description_length": 358,
      "index": 931,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartAxisViewWindowOptions",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates chart axis view window options for numeric range display. It provides accessors for minimum and maximum values and the view mode, along with functions to serialize and deserialize these options to and from JSON data models. It is used to configure axis ranges in chart visualizations within Google Sheets API integrations.",
      "description_length": 358,
      "index": 932,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.HistogramSeries",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates histogram series data for Google Sheets charts, including color styling and associated chart data. It supports creating, parsing, and rendering histogram series with optional color specifications using either `barColor` or `barColorStyle`. Concrete use cases include configuring histogram visualizations in spreadsheets, such as setting bucket colors and linking to data ranges.",
      "description_length": 414,
      "index": 933,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BasicChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and manipulation of chart specifications for visualizing data in Google Sheets. It includes fields for configuring chart type, axes, data domains, series, and display options like 3D rendering or line smoothing, along with lenses for accessing and modifying individual properties. It supports operations to serialize and deserialize chart configurations to and from JSON for API interactions.",
      "description_length": 426,
      "index": 934,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.Tasks",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing a collection of tasks with associated metadata, including ETag, kind, and pagination tokens. It provides functions to parse and render task collections from JSON data models, access individual fields via lenses, and construct empty task lists. Concrete use cases include handling paginated task responses from the Tasks API and manipulating task data for serialization or API requests.",
      "description_length": 435,
      "index": 935,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBloggerV2Service.PostsResource",
      "library": "gapi-ocaml",
      "description": "Implements operations to retrieve individual posts and filtered lists of posts from a blog. Works with blog identifiers, post identifiers, and session data to fetch post content and metadata. Useful for displaying specific blog posts or generating summaries of recent entries.",
      "description_length": 276,
      "index": 936,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.Property",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing properties in the Google Drive API v2, including fields such as `key`, `value`, and `visibility`. It provides operations to serialize and deserialize properties to and from JSON, as well as lenses for accessing and modifying individual fields. Use this module when working with custom metadata properties attached to Drive files, such as application-specific settings or extended attributes.",
      "description_length": 441,
      "index": 937,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.CustomChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling lists of AdSense custom channels, including parsing and rendering JSON data models. It provides accessors for fields like `etag`, `items`, `kind`, and `nextPageToken` using lenses, and supports serialization and deserialization to and from JSON. Concrete use cases include processing API responses to list custom channels and preparing data for subsequent API requests using continuation tokens.",
      "description_length": 439,
      "index": 938,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.ViewDefinition",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for BigQuery view definitions, including the SQL query and optional user-defined function resources. It provides functions to construct, serialize, and parse view definitions for use in BigQuery API interactions. Use cases include creating and managing views in BigQuery that reference custom SQL logic or external functions.",
      "description_length": 374,
      "index": 939,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Service.RevisionsResource",
      "library": "gapi-ocaml",
      "description": "This module manages file revisions in Google Drive, offering operations to delete, retrieve, list, and update specific revisions. It works with file identifiers and revision metadata, enabling version control for files with binary content. Concrete use cases include restoring previous versions of media files or removing outdated revisions to manage storage.",
      "description_length": 359,
      "index": 940,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.Payment",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling payment information in the AdSense Management API. It includes fields for payment ID, kind, amount, currency code, and date, along with lenses for accessing and modifying these fields. It supports parsing and rendering payments to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 375,
      "index": 941,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service.CustomchannelsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to retrieve and list custom channels within an AdSense account. It works with ad client identifiers, custom channel IDs, and pagination parameters to fetch and manage custom channel data. Concrete use cases include organizing ad inventory into custom groups for targeted ad serving and reporting.",
      "description_length": 328,
      "index": 942,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DeveloperMetadataLocation",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for specifying locations of developer metadata within a Google Sheets document. It includes fields to identify whether metadata applies to a spreadsheet, a specific sheet, or a row/column dimension range, along with functions to serialize, deserialize, and manipulate these location definitions. It is used to precisely associate metadata with regions of a spreadsheet when interacting with the Sheets API.",
      "description_length": 455,
      "index": 943,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Service.ManagementResource",
      "library": "gapi-ocaml",
      "description": "This module organizes management resources for Google Analytics entities such as web properties, user links, AdWords links, uploads, and profiles. It provides structured access to operations like listing, creating, updating, and deleting these entities using data types including `Webproperty.t`, `Profile.t`, `EntityUserLink.t`, and session state for authentication. Concrete use cases include managing user permissions for web properties, linking AdWords accounts, handling remarketing audiences, and configuring custom data sources for reporting.",
      "description_length": 549,
      "index": 944,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Service.TasklistsResource",
      "library": "gapi-ocaml",
      "description": "This module handles operations on task lists for a user, providing functions to create, retrieve, update, and delete individual task lists, as well as list all task lists. It works with task list identifiers and `TaskList` and `TaskLists` data structures representing individual and collections of task lists. Use this module to manage user task lists in a task management application integrating with the Tasks API.",
      "description_length": 416,
      "index": 945,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BigQueryTableSpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying BigQuery tables within the Google Sheets API, including project, dataset, and table identifiers. It provides functions to serialize and deserialize these specifications to and from JSON, enabling integration with API requests and responses. Use cases include configuring data sources for Sheets that pull from BigQuery or managing external data connections programmatically.",
      "description_length": 426,
      "index": 946,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ConditionValue",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for condition values used in Google Sheets conditional formatting and data validation rules. It supports operations to create, render, and parse condition values, which can represent either relative dates or user-entered values such as literals or formulas. Concrete use cases include setting up dynamic formatting rules based on date ranges or custom formula conditions.",
      "description_length": 435,
      "index": 947,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.DataFilterValueRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying a range of values in a spreadsheet, including a data filter, major dimension, and 2D list of values. It provides functions to construct, serialize, and deserialize this structure for use in reading or writing spreadsheet data. Concrete use cases include preparing batch updates to specific cell ranges or parsing responses containing filtered value ranges from the Google Sheets API.",
      "description_length": 435,
      "index": 948,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteDimensionGroupRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to delete a dimension group in a Google Sheets document by specifying a dimension range. It provides operations to construct, serialize, and parse the request data, including lenses for accessing and modifying the range field. Concrete use cases include programmatically collapsing or removing row or column groups in a spreadsheet via the Google Sheets API.",
      "description_length": 388,
      "index": 949,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model.CustomChannel",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing custom channels in the AdSense Management API. It includes fields for channel identifiers, names, and targeting settings, along with functions to convert between JSON and internal representations. It is used to organize and configure ad delivery for specific content segments or regions.",
      "description_length": 349,
      "index": 950,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "GapiCalendarV3Model.EventAttendee",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing event attendees in a calendar system. It includes fields for attendee details such as email, response status, and role (e.g., organizer or resource), along with lenses for accessing and modifying individual fields. The module supports serialization to and from JSON data models, enabling integration with API requests and responses for event management workflows.",
      "description_length": 425,
      "index": 951,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AppendCellsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for appending cell data to a Google Sheets document. It includes fields for specifying the target sheet or table ID, the row data to append, and which cell data fields to update. Functions support creating empty requests, rendering to or parsing from JSON data models, and accessing or modifying individual fields using lenses.",
      "description_length": 376,
      "index": 952,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Filter",
      "library": "gapi-ocaml",
      "description": "This module defines operations for managing Gmail API filters, including creating, parsing, and rendering filter configurations. It works with the `Filter` type, which encapsulates filter actions, criteria, and identifiers, along with JSON data models for serialization. Concrete use cases include constructing filters to automatically process incoming emails based on specific conditions, and converting between in-memory filter representations and their JSON wire formats for API communication.",
      "description_length": 496,
      "index": 953,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DuplicateFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the data structure and operations for duplicating a filter view in the Google Sheets API. It includes functions to parse and render filter view requests as JSON data models, along with a record type that holds the filter ID to be duplicated. It is used specifically when making API calls to duplicate existing filter views within a spreadsheet.",
      "description_length": 364,
      "index": 954,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service.TabledataResource",
      "library": "gapi-ocaml",
      "description": "This module provides `insertAll` and `list` operations for streaming data into and retrieving data from BigQuery tables. It works with table identifiers (project, dataset, table IDs) and handles requests/responses for data insertion and row listing. Use cases include ingesting event data in real-time and paginating through stored table rows for analysis or export.",
      "description_length": 366,
      "index": 955,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddTableResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the response structure for adding a table in the Google Sheets API, specifically capturing the newly added table resource. It provides functions to parse and render the response from JSON data models, along with a lens for accessing the table field. Use cases include handling API responses when creating tables and extracting table metadata for further operations.",
      "description_length": 385,
      "index": 956,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BigQueryQuerySpec",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing BigQuery queries within the Google Sheets API. It includes operations to serialize and deserialize query specifications to and from JSON data models, enabling integration with API requests and responses. Use cases include constructing and parsing BigQuery query configurations for spreadsheet data sources.",
      "description_length": 360,
      "index": 957,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TrimWhitespaceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to trim whitespace from cells in a specified grid range within a Google Sheets document. It provides functions to construct, serialize, and parse the request, including handling JSON data model conversions. The primary data structure is a record containing a `GridRange.t` that specifies the range to be trimmed.",
      "description_length": 342,
      "index": 958,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AutoFillRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring an auto-fill request in a spreadsheet API. It includes fields to specify the range to auto-fill, the source and destination for the fill operation, and a flag to use an alternate data series. Functions allow parsing, rendering, and converting the request to and from JSON data models, enabling integration with API endpoints.",
      "description_length": 390,
      "index": 959,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ParentReference",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a parent reference in the Drive API v2, including fields for the parent ID, root status, kind, and links. It provides functions to parse and render parent references from and to JSON data models, along with lenses for accessing and modifying individual fields. Use cases include managing file and folder hierarchies by tracking parent relationships within Google Drive.",
      "description_length": 419,
      "index": 960,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.AclResource",
      "library": "gapi-ocaml",
      "description": "This module manages access control lists (ACLs) for calendar resources. It provides operations to retrieve, create, update, patch, delete, and list ACL rules, as well as watch for changes to these rules. The module works directly with `AclRule.t` and `Acl.t` data types, interacting with calendar identifiers and rule identifiers to enforce access policies. Use cases include managing user permissions on shared calendars, synchronizing access rules across systems, and auditing calendar access configurations.",
      "description_length": 510,
      "index": 961,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.ParentList",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for managing a list of parent references in the Drive API v2, including operations to access and modify the list's `etag`, `items`, `kind`, and `selfLink` fields. It supports concrete use cases such as parsing and rendering parent lists from JSON data models, and manipulating individual parent entries. The module works directly with `GapiDriveV2Model.ParentReference.t list` and `GapiJson.json_data_model` types.",
      "description_length": 451,
      "index": 962,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDimensionGroupRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for creating dimension groups in Google Sheets. It includes functions to set and retrieve a dimension range, convert the structure to and from JSON data models, and initialize empty requests. It is used when grouping rows or columns in a spreadsheet via the API.",
      "description_length": 311,
      "index": 963,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.BatchUpdateValuesResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing the response from a batch update operation on Google Sheets. It includes fields for the number of updated rows, columns, cells, and sheets, along with individual responses for each updated range. The module provides functions to parse, render, and convert the structure to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 403,
      "index": 964,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiTasksV1Model.TaskLists",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of task lists in the Tasks API v1 data model. It provides functions to parse and render task list collections, access individual fields like `etag`, `items`, `kind`, and `nextPageToken`, and convert to and from JSON data models. It is used to manage responses containing multiple task lists, such as listing all task lists for a user.",
      "description_length": 390,
      "index": 965,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteEmbeddedObjectRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a record type with an `objectId` field representing the ID of an embedded object to delete in Google Sheets API operations. It includes functions to render, parse, convert to and from a JSON data model, and provides an empty record instance. It is used to construct and manipulate delete requests for embedded objects like charts or images within spreadsheets.",
      "description_length": 380,
      "index": 966,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JsonObject",
      "library": "gapi-ocaml",
      "description": "This module represents JSON objects as lists of key-value pairs and provides functions to convert between JSON data models and these object representations. It supports parsing JSON data into key-value lists, rendering key-value lists into JSON structures, and transforming individual or nested JSON data elements. Concrete use cases include constructing and manipulating BigQuery API request/response payloads and mapping JSON data to structured query parameters.",
      "description_length": 464,
      "index": 967,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.CreateDeveloperMetadataResponse",
      "library": "gapi-ocaml",
      "description": "This module handles the creation and manipulation of developer metadata responses in the Google Sheets API. It provides functions to parse and render JSON data models, access the `developerMetadata` field, and initialize empty response structures. Concrete use cases include processing API responses when creating or updating developer metadata entries in a spreadsheet.",
      "description_length": 370,
      "index": 968,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.MessagePartHeader",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing individual headers within a message part of the Gmail API. It provides functions to construct, parse, and render headers, each consisting of a name and value. Use this module when processing email metadata such as sender, recipient, or subject fields in Gmail API responses.",
      "description_length": 328,
      "index": 969,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.UserDefinedFunctionResource",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying user-defined function (UDF) resources in the BigQuery API. It supports two forms: embedding code directly via `inlineCode` or referencing code stored in Google Cloud Storage using `resourceUri`. These constructs are used when configuring UDFs for query execution, enabling flexible deployment of custom logic in BigQuery jobs.",
      "description_length": 378,
      "index": 970,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCore.Header",
      "library": "gapi-ocaml",
      "description": "This module represents HTTP headers and status codes as discriminated unions, enabling precise parsing and string conversion of header values. It works with string-based HTTP header fields, including standard headers like `Content-Type`, `Authorization`, and `ETag`, as well as custom headers. Concrete use cases include parsing raw HTTP headers from network responses and generating header strings for outgoing requests.",
      "description_length": 421,
      "index": 971,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiError.SingleError",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing individual server errors with fields like domain, reason, message, and location. It provides lenses for accessing and modifying each field, along with functions to parse and render error data to and from JSON. It is used to handle and serialize specific error details returned by a server in an API response.",
      "description_length": 362,
      "index": 972,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateBordersRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying border updates in a Google Sheets grid range. It includes fields for setting individual borders (top, bottom, left, right) and internal borders (horizontal, vertical) within a specified range. The module supports serialization, deserialization, and manipulation of border configurations for precise spreadsheet styling operations.",
      "description_length": 382,
      "index": 973,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.UrlChannels",
      "library": "gapi-ocaml",
      "description": "This module defines operations for handling collections of URL channels in the AdSense Management API. It provides functions to parse, render, and manipulate URL channel lists, including access to individual items, pagination tokens, and metadata like ETags and kind identifiers. Concrete use cases include processing API responses to list URL channels, handling pagination, and converting between JSON data models and native OCaml structures.",
      "description_length": 443,
      "index": 974,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service.UsersResource",
      "library": "gapi-ocaml",
      "description": "This module provides top-level operations for interacting with Gmail user accounts, including retrieving mailbox profiles, managing push notification watches, and stopping mailbox notifications. It works with user identifiers and session state to access mailbox-wide functionality, such as initiating mailbox watches and fetching account-specific metadata. Concrete use cases include setting up real-time mailbox monitoring via push notifications, retrieving user profile information like email address and message counts, and cleanly terminating active mailbox subscriptions.",
      "description_length": 576,
      "index": 975,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateEmbeddedObjectPositionRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update the position of an embedded object in a Google Sheet. It includes operations to specify the object ID, set a new position with optional sheet creation, and define which fields to update. It works directly with embedded object positions and JSON data models for serialization and parsing.",
      "description_length": 327,
      "index": 976,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataExecutionStatus",
      "library": "gapi-ocaml",
      "description": "This module defines the data execution status structure used to represent the outcome of data operations in a Google Sheets document. It includes fields for the execution state, error details, and the last successful refresh time, along with functions to serialize and deserialize these values to and from JSON. It is used to monitor and report on the execution status of data integrations within spreadsheets.",
      "description_length": 410,
      "index": 977,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV2Model.FileList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of files retrieved from the Drive API, providing access to metadata like the list's ETag, navigation links, and the actual files. It works with JSON data models for serialization and deserialization, and includes lenses for accessing and modifying individual fields such as `items`, `nextPageToken`, and `selfLink`. Concrete use cases include handling file listing responses, paginating through large file collections, and converting between JSON and internal data representations.",
      "description_length": 521,
      "index": 978,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.AdClients",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for handling a list of ad clients in the AdSense Management API. It includes fields for caching, pagination, and the list of ad clients, along with functions to serialize, deserialize, and manipulate the data. It is used to process and manage responses when retrieving ad client lists from the API.",
      "description_length": 335,
      "index": 979,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.PivotGroupSortValueBucket",
      "library": "gapi-ocaml",
      "description": "This module defines sorting behavior for pivot table groups based on specific value buckets. It includes functions to set the index of values to sort by and specify bucket values that determine the subset of data used for sorting. It is used when configuring pivot tables to control how row or column groups are ordered based on aggregated values.",
      "description_length": 347,
      "index": 980,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Column",
      "library": "gapi-ocaml",
      "description": "This module defines operations for working with Google Analytics API column data, including parsing and rendering column attributes, IDs, and resource types to and from JSON data models. It provides lenses for accessing and modifying fields within a column record, such as `id`, `kind`, and `attributes`. Concrete use cases include extracting metadata from Analytics API responses and constructing column objects for API requests.",
      "description_length": 430,
      "index": 981,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.Events",
      "library": "gapi-ocaml",
      "description": "This module handles calendar event collections, providing access to event lists, pagination tokens, and calendar metadata like time zone, summary, and access role. It supports parsing and rendering event data to and from JSON, along with lenses for accessing and modifying specific fields. Concrete use cases include retrieving event lists with pagination, extracting calendar metadata for display, and serializing event data for storage or transmission.",
      "description_length": 454,
      "index": 982,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.AddNamedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a named range to a Google Sheets document. It includes functions to create an empty request, set or retrieve a named range, and convert the request to or from JSON data models. It is used when interacting with the Google Sheets API to define a new named range with an optional identifier.",
      "description_length": 348,
      "index": 983,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddTableRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a table in the Google Sheets API v4. It provides functions to create an empty request, set or retrieve a table, and convert the request to and from JSON data models. It is used when sending a table creation request to the Sheets API, where the table data must be serialized into a JSON format for transmission.",
      "description_length": 370,
      "index": 984,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartSeries",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and styling for waterfall chart series in Google Sheets API v4. It includes fields to specify data, column styles for positive, negative, and subtotal values, custom subtotals, and data labels. Operations include parsing and rendering JSON data models, accessing and modifying series properties via lenses, and creating empty series.",
      "description_length": 367,
      "index": 985,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.Webproperties",
      "library": "gapi-ocaml",
      "description": "This module handles data structures and transformations for a collection of Google Analytics web properties. It provides lenses for accessing and modifying fields like items, pagination parameters, and links, along with functions to serialize and deserialize to and from JSON data models. It is used when retrieving and processing lists of web properties from the Google Analytics API, supporting operations like pagination and resource navigation.",
      "description_length": 448,
      "index": 986,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth2Devices.AuthorizationCode",
      "library": "gapi-ocaml",
      "description": "This module handles the parsing and manipulation of OAuth2 device authorization responses, specifically extracting and managing fields like `device_code`, `user_code`, and `verification_url`. It works with the `t` type to store and access these authorization parameters, which are essential for initiating device-based OAuth2 flows. Concrete use cases include retrieving the verification URL to display to users and extracting the device code for subsequent token requests.",
      "description_length": 473,
      "index": 987,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.Goals",
      "library": "gapi-ocaml",
      "description": "This module handles structured data for Google Analytics goals, including parsing and rendering goal collections to and from JSON. It provides accessors for fields like goal items, pagination parameters, and metadata such as `nextLink` and `username`. Use this module when retrieving or manipulating lists of goals from the Google Analytics API, especially when handling paginated responses.",
      "description_length": 391,
      "index": 988,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDeveloperMetadataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update developer metadata in a Google Sheets document. It includes filters to identify specific metadata entries, the updated metadata value, and the fields to modify. Operations include creating an empty request, rendering to JSON, parsing from JSON, and accessing or modifying fields via lenses.",
      "description_length": 330,
      "index": 989,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model.Blog",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for representing a blog in the Blogger API v2, including fields such as the blog's name, description, URL, and publication dates. It provides functions to parse and render blog data in JSON format, along with lenses to access and modify individual fields like `id`, `name`, `url`, and nested structures such as `posts` and `pages`. It is used when retrieving or updating blog metadata through the Blogger API, and interacts with submodules to manage associated data like locale settings, posts, and pages.",
      "description_length": 554,
      "index": 990,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.ProfileFilterLink",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing profile filter links in the Google Analytics API v3. It provides lenses to access and modify fields such as `filterRef`, `id`, `kind`, `profileRef`, `rank`, and `selfLink`, along with functions to serialize and deserialize instances to and from JSON data models. Use cases include creating, updating, and organizing filter links associated with Google Analytics profiles, particularly when integrating with the API's filtering system.",
      "description_length": 496,
      "index": 991,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.CalendarListEntry",
      "library": "gapi-ocaml",
      "description": "This component manages calendar configuration and user-specific overrides by handling metadata such as access roles, notification settings, and visual properties like foreground color. It operates on structured records containing calendar list entries, incorporating nested types like `EventReminder` for alert configurations and JSON representations for data interchange. Use cases include customizing calendar visibility, synchronizing user preferences with API endpoints, and transforming between serialized API responses and internal data models for processing.",
      "description_length": 565,
      "index": 992,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateDataSourceResponse",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling responses from updating a data source in the Google Sheets API. It includes fields for the updated data source and its execution status, with functions to parse, render, and convert these responses to and from JSON data models. It is used specifically when working with data source updates in Sheets, such as refreshing external data connections or modifying query configurations.",
      "description_length": 442,
      "index": 993,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Service.Scope",
      "library": "gapi-ocaml",
      "description": "Defines authentication scopes for accessing the Tasks API, including full management and read-only access. Provides string constants for use in OAuth 2.0 authorization workflows. Enables precise control over task data access when integrating with external services or user accounts.",
      "description_length": 282,
      "index": 994,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service.CalendarsResource",
      "library": "gapi-ocaml",
      "description": "This module handles calendar management operations such as creating, deleting, retrieving, and updating calendar metadata. It works with calendar identifiers and `GapiCalendarV3Model.Calendar.t` structures for full or partial updates. Use cases include managing secondary calendars, resetting primary calendars, and modifying calendar properties like title or time zone.",
      "description_length": 370,
      "index": 995,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeveloperMetadata",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates developer metadata for Google Sheets, including operations to set and retrieve metadata keys, values, locations, and visibility. It works with structured data types such as `t`, which includes integer IDs, strings for key/value pairs, and nested location types. Concrete use cases include embedding application-specific data within spreadsheets, managing access scope through visibility settings, and associating metadata with specific spreadsheet elements like rows or columns.",
      "description_length": 514,
      "index": 996,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model.Place",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing places in the Google+ API, including fields for address, display name, identifier, kind, and geographic position. It provides functions to create an empty place, convert place data to and from JSON format, and access or modify individual fields using lenses. Use cases include handling place data retrieved from or sent to the Google+ API, such as user locations or event venues.",
      "description_length": 433,
      "index": 997,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.FreeBusyRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for querying free/busy calendar information, including time ranges, calendar limits, and time zone settings. It supports operations to serialize and deserialize the data model to and from JSON, as well as lenses for accessing and modifying individual fields. It is used to construct and process requests to the Calendar API that determine availability across multiple calendars or groups.",
      "description_length": 425,
      "index": 998,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.About",
      "library": "gapi-ocaml",
      "description": "This module handles metadata operations for user Drive accounts, providing JSON serialization and deserialization for resources like storage quotas, Drive themes, and user permissions. It works with structured types such as `About.t` and `StorageQuota` to manage data related to storage usage, Drive configuration, and export formats. Typical use cases include retrieving account metadata, converting between internal data models and JSON for API interaction, and configuring Drive themes and quotas.",
      "description_length": 500,
      "index": 999,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ScorecardChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for configuring scorecard charts in the Google Sheets API. It includes fields for specifying key and baseline data, formatting options, and scaling factors, all used to render scorecard visualizations. Functions allow parsing and serializing these configurations to and from JSON data models.",
      "description_length": 341,
      "index": 1000,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service.JobsResource",
      "library": "gapi-ocaml",
      "description": "This module provides operations to manage and interact with BigQuery jobs, including canceling, retrieving, listing, and submitting jobs. It works with job identifiers, project identifiers, and session contexts, along with associated request and response types such as `Job`, `JobCancelResponse`, and `JobList`. Concrete use cases include polling job status, fetching query results, and listing recent jobs filtered by state or projection.",
      "description_length": 439,
      "index": 1001,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataSourceObjectReferences",
      "library": "gapi-ocaml",
      "description": "This module handles the serialization and deserialization of data source object references in Google Sheets API v4 requests and responses. It operates on a list of `DataSourceObjectReference.t` values, enabling conversion to and from JSON data models. It is used to manage references to external data sources within spreadsheet cells or objects.",
      "description_length": 345,
      "index": 1002,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.WaterfallChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring waterfall charts in the Google Sheets API. It includes fields for specifying domain data, series values, stacking behavior, and visual elements like connector lines and data labels. Functions allow creating, rendering, and parsing chart specifications to and from JSON data models.",
      "description_length": 344,
      "index": 1003,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model.PermissionId",
      "library": "gapi-ocaml",
      "description": "This module defines a permission identifier with fields for `id` and `kind`, both accessible via lenses. It provides operations to serialize and deserialize permission IDs to and from JSON data models. It is used to represent and manipulate individual permission entries in the Google Drive API v2.",
      "description_length": 298,
      "index": 1004,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddProtectedRangeResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a protected range in a Google Sheets document. It includes a `protectedRange` field that holds the newly added protected range data. The module provides functions to parse and render the response to and from JSON, convert it to a data model, and access or modify its contents.",
      "description_length": 324,
      "index": 1005,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataFilter",
      "library": "gapi-ocaml",
      "description": "This module defines a data filter for selecting specific data ranges in Google Sheets. It supports filtering by A1 range notation, grid ranges, or developer metadata lookup. Operations include constructing, serializing, and parsing filter criteria for API requests.",
      "description_length": 265,
      "index": 1006,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.AppList",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling a list of applications in the Google Drive API v3. It includes functions to parse and render application lists, access individual fields like default app IDs and self links, and convert between JSON data models and native OCaml representations. It is used to manage application preferences and metadata retrieved from or sent to the Drive API.",
      "description_length": 405,
      "index": 1007,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Model.Job",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for managing BigQuery job metadata, including fields like job configuration, status, and execution statistics. It provides lenses for accessing and modifying job properties, functions for JSON serialization/deserialization, and an empty job template. It is used to inspect and manipulate job details when interacting with the BigQuery API, such as tracking job progress or extracting execution results.",
      "description_length": 451,
      "index": 1008,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.DownloadRestriction",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates download restriction settings for Google Drive API v3. It provides functions to create, parse, and render a data structure that specifies whether downloading and copying files is restricted for readers and writers. Use cases include enforcing access control policies by configuring restrictions when sharing files or folders through the Drive API.",
      "description_length": 383,
      "index": 1009,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SlicerSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring slicer filters in Google Sheets, including properties like data range, filter criteria, column index, and visual styling. It provides lenses for accessing and modifying individual fields, as well as serialization and deserialization functions for converting to and from JSON data models. Use this module to create and manipulate slicer configurations that control how data is filtered and displayed in spreadsheet views.",
      "description_length": 483,
      "index": 1010,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.CsvOptions",
      "library": "gapi-ocaml",
      "description": "This module defines configuration options for parsing CSV data in BigQuery import jobs. It includes fields to control row jaggedness, newline handling, character encoding, field delimiters, quoting, and header row skipping, along with lenses for accessing and modifying these settings. It is used to configure load jobs that process CSV files, ensuring correct interpretation of data during ingestion.",
      "description_length": 401,
      "index": 1011,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ChartData",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for handling chart data in the Google Sheets API. It includes fields for specifying source ranges, column references, grouping rules, and aggregation types, along with lenses for accessing and modifying these fields. It supports serialization and deserialization to and from JSON data models, enabling integration with API requests and responses.",
      "description_length": 395,
      "index": 1012,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.Padding",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing cell padding in a Google Sheets document, with individual integer values for top, right, bottom, and left padding. It provides functions to access and modify each padding value using lenses, as well as utilities to convert padding data to and from JSON format for serialization and parsing. It is used when applying or retrieving styling information for cells in the Sheets API.",
      "description_length": 432,
      "index": 1013,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.MatchedValueRange",
      "library": "gapi-ocaml",
      "description": "This module represents a range of values in a Google Sheets document that match a set of data filters. It provides operations to access and manipulate the matched value range and its associated filters, including parsing and rendering to and from JSON data models. It is used when processing filtered data ranges in Google Sheets API responses.",
      "description_length": 344,
      "index": 1014,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateProtectedRangeRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to update properties of a protected range in a Google Sheet. It includes operations to specify which fields to update and the new values for those fields. It works directly with `ProtectedRange.t` and JSON data models for API serialization.",
      "description_length": 270,
      "index": 1015,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model.Result",
      "library": "gapi-ocaml",
      "description": "This module provides structured data modeling, JSON serialization, and field manipulation capabilities for PageSpeed Insights API v1 results. It defines types to represent version metadata, page statistics, screenshots, and formatted rule outcomes, using a central `t` record with lenses for precise field access and modification. These features enable converting raw API JSON responses into typed representations for analyzing website performance metrics, extracting optimization recommendations, and generating visual reports.",
      "description_length": 528,
      "index": 1016,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiLens.Infix",
      "library": "gapi-ocaml",
      "description": "This module defines infix operators for working with functional lenses, enabling concise get, set, and modify operations on nested immutable data structures. It supports composition of lenses to access and update deeply nested fields, and provides arithmetic update operators for integer-valued fields. Concrete use cases include manipulating complex, nested records and data types in a type-safe and immutable manner.",
      "description_length": 418,
      "index": 1017,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.OrgChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring org charts in Google Sheets API v4. It includes fields for styling nodes and labels, specifying parent-child relationships, and handling tooltips, all based on the `ChartData` and color models. Key operations include parsing and rendering org chart configurations to and from JSON data models.",
      "description_length": 356,
      "index": 1018,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.BatchModifyMessagesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for batch modifying messages in the Gmail API, supporting operations to add or remove label IDs from a list of message IDs. It provides functions to construct, serialize, and update batch modify requests, ensuring compatibility with the Gmail API's JSON format. Use this module when applying label changes to multiple messages in a single API call, such as marking emails as read or assigning categories.",
      "description_length": 441,
      "index": 1019,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAdsenseV1_4Model.ReportingMetadataEntry",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing metadata for a reporting dimension or metric in the AdSense Management API. It includes fields for compatibility, required parameters, and supported products, enabling precise report configuration. Operations allow parsing, rendering, and accessing individual fields through lenses.",
      "description_length": 332,
      "index": 1020,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiGmailV1Model.ListHistoryResponse",
      "library": "gapi-ocaml",
      "description": "This module represents a response from listing Gmail history records, containing a list of history entries, a current history ID, and a page token for pagination. It provides accessors to retrieve and modify individual fields, as well as functions to serialize and deserialize the structure to and from JSON data models. It is used when processing incremental changes to a user's mailbox, such as tracking message additions or thread updates.",
      "description_length": 442,
      "index": 1021,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.Table",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates table structures within a Google Sheets spreadsheet, including properties such as table ID, name, range, row properties, and column properties. It provides functions to create empty tables, convert tables to and from JSON data models, and access or update individual table fields using lenses. Use cases include integrating with the Google Sheets API to create, update, and process structured table data in spreadsheets.",
      "description_length": 456,
      "index": 1022,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.LabelFieldModification",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying specific fields within a Google Drive label, supporting operations to set or unset values of various types including text, dates, integers, selections, and user identifiers. It provides functions to serialize and deserialize these modifications to and from JSON, ensuring compatibility with the Google Drive API's expected input formats. Use cases include updating metadata associated with Drive files through label changes, such as setting due dates, assigning users, or updating status fields.",
      "description_length": 546,
      "index": 1023,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.HistogramChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and behavior for configuring histogram charts in the Google Sheets API. It includes fields for specifying data series, legend placement, bucket sizing, outlier handling, and visual dividers, along with lenses for accessing and modifying these properties. Use this module when creating or updating histogram charts to control how numerical data is grouped and displayed visually.",
      "description_length": 412,
      "index": 1024,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model.Result",
      "library": "gapi-ocaml",
      "description": "This module enables typed access to search result fields like link, title, and snippet, along with nested image metadata and label data through dedicated submodules. It supports JSON serialization and deserialization for converting structured results to API-compatible JSON, commonly used when processing search responses or preparing data for storage and transmission. The operations are designed to handle hierarchical data from the CustomSearch API while maintaining type safety and interoperability with JSON formats.",
      "description_length": 521,
      "index": 1025,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Model.ModifyLabelsResponse",
      "library": "gapi-ocaml",
      "description": "This module defines a response structure for label modification operations in the Google Drive API v3. It includes fields to capture the list of modified labels and the fixed kind identifier for the response type. It supports parsing and rendering label modification responses to and from JSON data models, specifically used when applying label changes to Drive items.",
      "description_length": 368,
      "index": 1026,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model.AccountSummaries",
      "library": "gapi-ocaml",
      "description": "This module handles structured data for Google Analytics API v3 account summaries, providing accessors and manipulators for fields like account lists, pagination parameters, and navigation links. It works with JSON data models and typed records to serialize and deserialize collection metadata and account information. Concrete use cases include parsing API responses, building paginated requests, and extracting account summary details for user display or further processing.",
      "description_length": 476,
      "index": 1027,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.TextRotation",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates text rotation settings for Google Sheets cells, specifically controlling the angle and vertical orientation of text. It works with a record type containing an integer angle and a boolean vertical flag, along with JSON data model conversion functions. It is used to configure text display in spreadsheet cells, such as rotating headers or creating vertical labels in tables.",
      "description_length": 409,
      "index": 1028,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service.ReportsResource",
      "library": "gapi-ocaml",
      "description": "This module provides the `generate` function to create AdSense performance reports by specifying parameters such as date range, dimensions, metrics, and filters. It operates on strings, lists, and session data, returning a report response along with an updated session. Concrete use cases include generating revenue reports by ad unit or analyzing traffic sources over a specific period.",
      "description_length": 387,
      "index": 1029,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.CopySheetToAnotherSpreadsheetRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to copy a sheet to another spreadsheet in the Google Sheets API. It includes a single required field for the destination spreadsheet ID and provides functions to construct, serialize, and deserialize the request. Concrete use cases include moving sheets between spreadsheets programmatically during data organization or report generation workflows.",
      "description_length": 378,
      "index": 1030,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model.AdClients",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates the structure of an Ad Clients list response from the AdSense Management API. It provides accessors (via lenses) to fields such as `etag`, `items`, `kind`, and `nextPageToken`, and supports serialization and deserialization to and from JSON data models. It is used to handle paginated responses when retrieving ad client data from the API.",
      "description_length": 375,
      "index": 1031,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.UpdateFilterViewRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the request structure for updating a filter view in a Google Sheets document. It includes operations to set or modify filter properties and specify which fields to update, using a combination of records and lenses. The module works directly with JSON data models for serialization and deserialization during API interactions.",
      "description_length": 345,
      "index": 1032,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.SheetProperties",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for managing sheet properties in a Google Sheets document. It includes fields like `sheetId`, `title`, `index`, and `gridProperties`, along with lenses for accessing and modifying these properties. Functions like `render`, `parse`, `to_data_model`, and `of_data_model` handle conversion between sheet property objects and JSON data models for API communication.",
      "description_length": 412,
      "index": 1033,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCalendarV3Model.Event",
      "library": "gapi-ocaml",
      "description": "This module enables structured manipulation of calendar event metadata through lenses for accessing and modifying fields like status, visibility, and participant controls, alongside JSON serialization for API interactions. It operates on composite data structures centered around a core event record encompassing timing, recurrence, attendees, and associated entities like organizers, gadgets, and extended properties. Common use cases include programmatically managing event lifecycles, configuring reminders, handling recurring events, and integrating external systems via gadget embeddings or custom properties.",
      "description_length": 614,
      "index": 1034,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.ColorStyle",
      "library": "gapi-ocaml",
      "description": "This module defines and manipulates color styles for Google Sheets cells, supporting RGB and theme color specifications. It provides functions to serialize and deserialize color style data to and from JSON, enabling integration with the Sheets API. Use cases include setting cell background or text colors in a spreadsheet using either RGB values or predefined theme colors.",
      "description_length": 374,
      "index": 1035,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service.SpreadsheetsResource",
      "library": "gapi-ocaml",
      "description": "This module manages spreadsheet-level operations for creating, retrieving, and updating Google Sheets. It supports functions to create a new spreadsheet, fetch an existing spreadsheet by ID or data filter, and apply batch updates atomically. Concrete use cases include initializing a new spreadsheet with a specific structure, selectively retrieving spreadsheet data using A1 notation ranges or data filters, and applying multiple changes\u2014such as cell formatting or sheet renaming\u2014in a single request.",
      "description_length": 501,
      "index": 1036,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDimensionGroupResponse",
      "library": "gapi-ocaml",
      "description": "This module represents the response from adding a dimension group in the Google Sheets API. It stores a list of dimension groups, allowing operations to access or modify the grouped dimensions. It is used when managing row or column groups in a spreadsheet, enabling serialization to and from JSON for API communication.",
      "description_length": 320,
      "index": 1037,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model.TimePeriod",
      "library": "gapi-ocaml",
      "description": "This module defines a time period with inclusive start and exclusive end dates, using `GapiDate.t` for date representations. It provides operations to create an empty time period, render it to JSON data model format, and parse or convert JSON data into a time period. Use this module when handling date ranges in calendar events, such as scheduling or querying event durations.",
      "description_length": 377,
      "index": 1038,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.NamedRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for representing named ranges in Google Sheets, including identifiers, names, and associated grid ranges. It provides functions to create, modify, and serialize named range objects to and from JSON data models. Use this module when managing named ranges programmatically, such as when defining or updating range references in a spreadsheet.",
      "description_length": 377,
      "index": 1039,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.PopSettings",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for configuring POP access in the Gmail API. It includes fields to specify the message access window and post-fetch actions, along with functions to serialize, deserialize, and manipulate these settings. It is used to manage POP-specific configuration when interacting with Gmail accounts programmatically.",
      "description_length": 357,
      "index": 1040,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.Profile",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a user's Gmail profile, including their email address, mailbox history ID, and message and thread counts. It provides functions to parse and render profile data to and from JSON, as well as lenses for accessing and modifying individual fields. Use this module to retrieve and manipulate mailbox metadata, such as tracking changes via the history ID or displaying mailbox statistics.",
      "description_length": 432,
      "index": 1041,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model.TeamDriveList",
      "library": "gapi-ocaml",
      "description": "This module represents a paginated list of Team Drives in the Google Drive API v3. It includes functions to access and manipulate the list, such as retrieving the next page token, extracting the list of Team Drives, and converting to or from JSON data models. It is used when listing Team Drives to handle pagination and serialize/deserialize the results for API requests and responses.",
      "description_length": 386,
      "index": 1042,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAnalyticsV3Model.FilterRef",
      "library": "gapi-ocaml",
      "description": "This module defines a filter reference structure with fields for account ID, link, filter ID, kind, and name, along with lenses for accessing and modifying each field. It includes functions to convert between filter reference values and JSON data models, enabling serialization and deserialization. Use this module when interacting with Google Analytics API v3 to manage filter references in requests and responses.",
      "description_length": 415,
      "index": 1043,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.PasteDataRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying paste operations in a Google Sheets API request, including the target coordinate, data string, delimiter, HTML flag, and paste behavior. It provides lenses to access and modify individual fields, functions to convert between JSON data models and the internal representation, and utilities to construct or render paste requests. Concrete use cases include formatting and inserting tabular data into a spreadsheet using a specified delimiter or HTML formatting.",
      "description_length": 511,
      "index": 1044,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model.ModifyMessageRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for modifying message labels in the Gmail API, supporting operations to add or remove labels by their IDs. It provides functions to create an empty request, render the request as JSON data, and parse or convert JSON data into a structured format. Use cases include updating message labels in Gmail, such as marking emails as read or applying categories.",
      "description_length": 390,
      "index": 1045,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service.ChangesResource",
      "library": "gapi-ocaml",
      "description": "This module handles retrieving, listing, and subscribing to user file changes in the Drive API. It operates on change IDs and user sessions, returning structured change data or subscription channels. Use it to track file modifications, deletions, or sharing updates for a user over time.",
      "description_length": 287,
      "index": 1046,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BubbleChartSpec",
      "library": "gapi-ocaml",
      "description": "This module defines the configuration for bubble charts in the Google Sheets API, specifying visual properties like bubble size, color, opacity, and label formatting. It works with structured data types such as `ChartData`, `Color`, `ColorStyle`, and `TextFormat` to define chart elements. Concrete use cases include setting x/y positions, group IDs for color categorization, and customizing bubble appearance for data visualization in spreadsheet charts.",
      "description_length": 455,
      "index": 1047,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AutoResizeDimensionsRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to automatically resize dimensions in a Google Sheets document, specifically targeting either standard sheet dimensions or those linked to a data source. It includes fields for specifying the target dimensions and their data source counterparts, along with standard serialization and deserialization functions for JSON-based API interaction. It is used when adjusting row or column sizes dynamically based on content in Sheets API operations.",
      "description_length": 472,
      "index": 1048,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.GridRange",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure representing a rectangular range of cells in a Google Sheet, with operations to set and retrieve the sheet ID, row and column indices. It supports parsing and rendering grid ranges from and to JSON data models, enabling interaction with the Google Sheets API. Concrete use cases include specifying cell ranges for batch updates, formatting, or data retrieval operations in a spreadsheet.",
      "description_length": 424,
      "index": 1049,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model.BatchClearValuesRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a request to clear multiple ranges of values in a Google Sheet using A1 or R1C1 notation. It provides operations to construct, serialize, and parse the request data structure for API interaction. Concrete use cases include resetting specific cell ranges in a spreadsheet during data synchronization or batch editing workflows.",
      "description_length": 346,
      "index": 1050,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model.JobStatistics2",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling job statistics specific to BigQuery query jobs. It includes fields for billing information, cache usage, execution plan, and byte processing metrics, along with lenses for accessing and modifying these fields. It is used to analyze and interpret the performance and cost of executed SQL queries in BigQuery.",
      "description_length": 371,
      "index": 1051,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DataValidationRule",
      "library": "gapi-ocaml",
      "description": "This module defines data validation rules for Google Sheets cells, including conditions, input messages, and UI behavior. It provides lenses to access and modify rule fields, functions to convert rules to and from JSON data models, and an empty rule template. Use this module to configure cell validation in spreadsheets, such as restricting input to a date range or a list of options.",
      "description_length": 385,
      "index": 1052,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service.Scope",
      "library": "gapi-ocaml",
      "description": "This module defines authentication scope constants for accessing different levels of Google Analytics API (v3) functionality. It includes specific scopes for reading, editing, managing users, and provisioning accounts. These string values are used to request precise access permissions when authenticating API requests.",
      "description_length": 319,
      "index": 1053,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.DeleteConditionalFormatRuleRequest",
      "library": "gapi-ocaml",
      "description": "This module defines a data structure for specifying the deletion of a conditional format rule in a Google Sheets document. It includes fields for the zero-based index of the rule and the sheet ID from which it should be removed. Operations allow rendering to and parsing from JSON data models, enabling direct interaction with the Google Sheets API for managing conditional formatting rules programmatically.",
      "description_length": 408,
      "index": 1054,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Model.AddDataSourceRequest",
      "library": "gapi-ocaml",
      "description": "This module defines the structure and operations for adding a data source to a Google Sheets document via the API. It includes functions to create an empty request, set or retrieve the data source, and convert the request to and from JSON format for API communication. It is used when configuring data sources in Sheets, such as connecting to external databases or spreadsheets.",
      "description_length": 378,
      "index": 1055,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and JSON serialization for PageSpeed Insights API v1 results. It includes types for version metadata, page statistics, screenshots, and rule outcomes, centered around a `t` record with lenses for field manipulation. Use it to parse API responses into typed data for performance analysis, optimization recommendations, and report generation.",
      "description_length": 376,
      "index": 1056,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for working with API discovery metadata, including JSON schemas, directory listings, REST methods, resources, and full API descriptions. It supports precise manipulation of API definitions through lenses, serialization to and from JSON, and structured access to metadata such as authentication settings, parameters, and endpoint configurations. Concrete use cases include generating API client code, validating request/response data against discovered schemas, and dynamically interpreting Google API metadata for service integration.",
      "description_length": 585,
      "index": 1057,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth1",
      "library": "gapi-ocaml",
      "description": "This module implements OAuth 1.0a authorization flows, providing functions to generate signed requests, build OAuth headers, and manage token lifecycle operations. It works with HTTP methods, key-value parameter lists, and authentication sessions to handle secure API interactions. Concrete use cases include obtaining request tokens, authorizing users via callback URLs, exchanging tokens for access, and revoking tokens securely.",
      "description_length": 431,
      "index": 1058,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV3Model",
      "library": "gapi-ocaml",
      "description": "This module provides structured data manipulation capabilities for interacting with the Google Drive API v3, including JSON serialization/deserialization, field access lenses, and utilities for handling permissions, label modifications, revisions, and paginated responses. It operates on record types representing files, Team Drives, user metadata, app configurations, and API response artifacts like status tokens or error payloads. Common use cases include building API request/response handlers, managing file access controls, processing incremental data updates, and implementing asynchronous workflows with paginated result sets.",
      "description_length": 634,
      "index": 1059,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Service",
      "library": "gapi-ocaml",
      "description": "This module implements the AdSense Management API (v1.1), enabling direct interaction with AdSense accounts through operations like retrieving account metadata, managing ad inventory, and generating performance reports. It works with data structures such as `Account.t`, `AdUnit.t`, `AdClients.t`, and report configurations, using session data and OAuth 2.0 scopes for authenticated access. Concrete use cases include automating ad unit management, aggregating performance metrics across custom channels, and programmatically listing URL channels for traffic analysis.",
      "description_length": 568,
      "index": 1060,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCore",
      "library": "gapi-ocaml",
      "description": "This module includes values for retrieving the library version and submodules for handling HTTP methods, headers, POST data, signature methods, and hierarchical data structures. It works with enumerated types, strings, and tree-like structures with annotated nodes. Concrete use cases include building and parsing HTTP requests, handling OAuth signatures, and processing structured documents like JSON or XML with context-aware tree transformations.",
      "description_length": 449,
      "index": 1061,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUrlshortenerV1Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization logic for working with shortened URLs and their analytics. It includes types for URL metadata, click analytics summaries, and paginated URL history, along with functions to convert these structures to and from JSON. Use it to manage short URL creation, track geographic and referral click data, and retrieve historical URL information with pagination support.",
      "description_length": 413,
      "index": 1062,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiService",
      "library": "gapi-ocaml",
      "description": "This module implements HTTP communication primitives for interacting with RESTful services, particularly Google APIs. It provides functions for making authenticated GET, POST, PUT, PATCH, and DELETE requests, handling media uploads/downloads, and processing server responses with session state management. Key data types include session state, HTTP headers, and post data, with concrete use cases like uploading files to Google Drive or fetching user data from Gmail API endpoints.",
      "description_length": 481,
      "index": 1063,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiAuthResponse",
      "library": "gapi-ocaml",
      "description": "This module processes authorization response data from various authentication protocols. It defines a polymorphic type to represent different kinds of authorization tokens and responses, including CAPTCHA challenges, OAuth 1.0a tokens, AuthSub token metadata, and OAuth 2.0 access tokens. The module provides direct accessors to extract specific token fields and is used to handle authentication flows requiring token retrieval, CAPTCHA resolution, and credential management with concrete response parsing.",
      "description_length": 506,
      "index": 1064,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPagespeedonlineV1Service",
      "library": "gapi-ocaml",
      "description": "Implements the PageSpeed Insights API for analyzing web page performance, providing functions to run speed assessments with configurable parameters like strategy, locale, and rule filters. Operates on URLs and session data to produce detailed performance reports, including scores, optimization suggestions, and metadata. Useful for integrating performance testing into CI pipelines or monitoring tools by programmatically evaluating web pages against desktop or mobile benchmarks.",
      "description_length": 481,
      "index": 1065,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiConversation",
      "library": "gapi-ocaml",
      "description": "This module handles HTTP communication and session management for authenticated API interactions, supporting OAuth1, OAuth2, and ClientLogin. It provides functions to send requests, manage session state, read response data, and handle errors, operating on sessions, HTTP methods, headers, and pipes. Concrete use cases include executing API calls with token refresh, maintaining cookies and ETags, and streaming media downloads.",
      "description_length": 428,
      "index": 1066,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Model",
      "library": "gapi-ocaml",
      "description": "This module provides structured data modeling and manipulation for hierarchical relationships, permission systems, and metadata management in cloud storage scenarios. It operates on JSON-serializable OCaml types representing files, comments, revisions, users, applications, and paginated collections like file lists or change streams, using lenses for type-safe field access. Designed for applications requiring access control workflows, collaborative document tracking, revision history handling, and API interactions with pagination and metadata synchronization.",
      "description_length": 564,
      "index": 1067,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Tasks API v1 service, enabling management of tasks and task lists through OAuth 2.0 authenticated operations. It provides functions to manipulate task lists (create, list, update, delete) and individual tasks (add, edit, reorder, remove), working with data structures like `TaskList`, `TaskLists`, `Task`, and `Tasks`. Concrete use cases include building task management applications that sync user task data with a backend, implement task completion workflows, or organize tasks hierarchically.",
      "description_length": 522,
      "index": 1068,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiJwtServiceAccount",
      "library": "gapi-ocaml",
      "description": "This module handles the creation and signing of JWT tokens for service account authorization. It works with RSA private keys and JWT claims data structures to generate signed tokens. Concrete operations include parsing private keys, encoding claims, generating signatures, and producing complete JWT tokens for use in authenticated API requests.",
      "description_length": 345,
      "index": 1069,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Blogger API v2 service, enabling direct interaction with Blogger content through typed operations. It supports data structures like blogs, posts, comments, pages, and users, with functions to retrieve individual resources or filtered lists using identifiers and session contexts. Concrete use cases include fetching blog metadata, loading specific blog posts with metadata, retrieving paginated comment lists for a post, and accessing user profile details for authentication or display.",
      "description_length": 513,
      "index": 1070,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiClientLogin",
      "library": "gapi-ocaml",
      "description": "This module handles Client Login authorization for Google services, providing functions to authenticate and retrieve authorization tokens. It works with authentication responses, error types, and service identifiers such as `Gmail` or `Calendar`. Concrete use cases include logging into a Google account programmatically and handling authentication errors like `BadAuthentication` or `CaptchaRequired`.",
      "description_length": 402,
      "index": 1071,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Calendar API v3 service for managing calendar data, providing operations to manipulate events, calendars, and related resources. It works with structured data types like `Calendar.t`, `Event.t`, `AclRule.t`, and `Setting.t` to support concrete tasks such as scheduling meetings, managing shared calendar access, and synchronizing user settings. Specific use cases include querying calendar availability, updating event colors, and enforcing access control policies on shared calendars.",
      "description_length": 512,
      "index": 1072,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiMonad",
      "library": "gapi-ocaml",
      "description": "This module defines monadic interfaces and utilities for structuring computations with effects. It includes combinators for monadic composition, state management, and list-based non-determinism, supporting use cases like sequencing API calls, handling authentication sessions, and generating computation pipelines with branching outcomes.",
      "description_length": 338,
      "index": 1073,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Service",
      "library": "gapi-ocaml",
      "description": "This module executes custom web and image searches against configured sites using the CustomSearch API. It supports precise query parameters including search terms, result count, safe search settings, image filters, language, and site inclusion/exclusion rules. Concrete use cases include searching specific websites for images by color or size, filtering results by language, or enforcing safe search policies.",
      "description_length": 411,
      "index": 1074,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSiteVerificationV1Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and serialization functions for interacting with the Google Site Verification API. It includes types for verification token requests and responses, web resource representations, and lists of verified resources, supporting operations like requesting verification tokens, storing verification metadata, and retrieving verified site records. Concrete use cases include initiating site verification with FILE, META, or DNS methods, parsing API responses, and managing verified website entries in JSON format.",
      "description_length": 540,
      "index": 1075,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiPlusV1Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Google+ API v1 service, enabling direct interaction with Google+ features through OAuth 2.0 authenticated requests. It provides operations for managing activities, comments, and user profiles using specific identifiers and query parameters. Concrete use cases include retrieving a user's public activities, fetching comments on a post, and searching public profiles by keyword.",
      "description_length": 404,
      "index": 1076,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCustomsearchV1Model",
      "library": "gapi-ocaml",
      "description": "This module implements data structures and JSON conversion routines for interacting with the CustomSearch API. It includes typed representations for search queries, result items, context metadata, promotions, and full search responses, each supporting lens-based field access and bidirectional JSON serialization. These features enable precise construction of search requests, structured parsing of API responses, and reliable handling of complex search data such as facets, pagination, and promotional content.",
      "description_length": 511,
      "index": 1077,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Model",
      "library": "gapi-ocaml",
      "description": "This module provides data structures and functions for JSON serialization, API response parsing, and structured data manipulation tailored for the AdSense Management API. It handles entities like payments, saved reports, ad styles, ad units, accounts, and URL channels, along with paginated collections and metadata. These tools enable use cases such as generating revenue reports, managing ad configurations, and automating account-level operations through programmatic API integration.",
      "description_length": 487,
      "index": 1078,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiSheetsV4Service",
      "library": "gapi-ocaml",
      "description": "This module provides functions to authenticate with Google Sheets API v4 using predefined OAuth2 scopes and perform spreadsheet-level operations like creating, reading, and updating spreadsheets. It works with spreadsheet data structures, supporting batch updates, data filtering, and A1 notation-based range selection. Concrete use cases include automating spreadsheet creation with custom sheets, applying bulk formatting changes, and querying specific data ranges for analysis or reporting.",
      "description_length": 493,
      "index": 1079,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiCalendarV3Model",
      "library": "gapi-ocaml",
      "description": "This module provides structured records and JSON serialization for calendar entities like events, attendees, and ACLs, alongside operations to manage free/busy time windows, conference data, and color schemes. It works with hierarchical data models for calendar metadata, including time zones, reminders, and access control rules, while supporting integration scenarios like cross-service scheduling and availability tracking. Key use cases involve programmatic event coordination, conference solution provisioning, and syncing calendar state with external systems.",
      "description_length": 565,
      "index": 1080,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiCurl",
      "library": "gapi-ocaml",
      "description": "This component manages network operations by initializing and configuring cURL sessions, supporting HTTP methods like GET and POST with customizable headers, timeouts, and callbacks. It manipulates a stateful `curl_context` through lifecycle stages, handling cookies and error diagnostics, while providing utilities to inspect response codes and debug information. Key applications include resource cleanup after requests and converting low-level debug data into readable strings for troubleshooting.",
      "description_length": 500,
      "index": 1081,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiLens",
      "library": "gapi-ocaml",
      "description": "This module provides functional lenses for immutably accessing and modifying nested data structures, supporting operations like lens composition, mapping over lists and optional values, and element access in pairs, lists, arrays, and hashtables. It works with deeply nested records, objects, and collections, enabling efficient, boilerplate-free manipulation in scenarios like state management or immutable data transformations. The module includes infix operators for concise lens composition and arithmetic updates, with specialized extensions for integrating with state monads to handle nested structure modifications seamlessly.",
      "description_length": 632,
      "index": 1082,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBloggerV2Model",
      "library": "gapi-ocaml",
      "description": "This module defines data models and JSON serialization for interacting with the Blogger API v2. It includes structured types and operations for blogs, users, comments, posts, and pages, along with their respective list types for handling collections and pagination. These models are used to parse, construct, and update data when making API requests or processing responses, such as retrieving blog metadata, managing user profiles, or handling comment threads with proper associations.",
      "description_length": 486,
      "index": 1083,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiRequest",
      "library": "gapi-ocaml",
      "description": "This module handles HTTP requests to services, supporting operations like querying, creating, updating, patching, deleting, and retrieving metadata. It works with data types such as `request_type`, `Session.t`, and various components like post data, headers, and media resources. Concrete use cases include sending authenticated API requests, uploading or downloading media, and handling custom response parsing and errors during HTTP communication.",
      "description_length": 449,
      "index": 1084,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiUrlshortenerV1Service",
      "library": "gapi-ocaml",
      "description": "This module implements the URL Shortener API for creating, expanding, and managing goo.gl short URLs. It works with URL resources and authentication scopes to support operations such as generating short links, retrieving URL analytics, and listing user URL history. Concrete use cases include integrating URL shortening into applications, tracking short URL usage, and managing user-specific shortened links.",
      "description_length": 408,
      "index": 1085,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAuth",
      "library": "gapi-ocaml",
      "description": "Handles OAuth1, OAuth2, and service account authentication flows by generating authorization headers. It works with authentication tokens, secrets, and request parameters to sign and authorize HTTP requests. Used to authenticate API requests to services like Google APIs using signed headers.",
      "description_length": 292,
      "index": 1086,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSheetsV4Model",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing spreadsheet metadata, formatting, data sources, and visualizations through structured data models. It works with JSON-serializable types representing ranges, charts (bubble, treemap, etc.), conditional formatting rules, pivot tables, and metadata configurations, enabling precise manipulation of sheets, cells, and embedded objects. Key use cases include automating spreadsheet layout adjustments, integrating external data pipelines, applying complex styling rules, and programmatically generating reports with dynamic visual components.",
      "description_length": 583,
      "index": 1087,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth2Devices",
      "library": "gapi-ocaml",
      "description": "This module implements OAuth2 device flows for limited input devices like TVs. It provides functions to request device authorization codes, poll the authorization server for token updates, and retrieve access tokens using device codes. Key data structures include the `AuthorizationCode.t` type for storing device-specific authorization parameters such as `device_code`, `user_code`, and `verification_url`. Use cases include initiating device authentication by displaying the user code and verification URL, and periodically polling for token issuance after user approval.",
      "description_length": 573,
      "index": 1088,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiSiteVerificationV1Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Google Site Verification API for domain and website ownership verification. It provides functions to generate verification tokens, manage ownership records, and perform verification checks using website resource data structures. Concrete use cases include automating domain verification during deployment workflows and managing ownership of multiple sites through programmatic API interactions.",
      "description_length": 421,
      "index": 1089,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiError",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for handling server errors in API responses. It includes types for individual errors with fields like domain, reason, and message, as well as structured request-level errors containing multiple individual errors, a code, and a message. It supports parsing and rendering errors to and from JSON, extracting specific error details, and generating user feedback or logging output based on server responses.",
      "description_length": 454,
      "index": 1090,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Model",
      "library": "gapi-ocaml",
      "description": "This module provides data modeling and serialization utilities for interacting with the Google Analytics API v3, focusing on structured access to analytics resources like profiles, web properties, and AdWords accounts through OCaml records and JSON. It supports operations such as report generation, user permission management, and configuration of analytics entities using lenses for field manipulation, while handling hierarchical data, pagination, and type-safe API request/response parsing. Key use cases include integrating analytics workflows, managing account hierarchies, and processing real-time or unsampled reports with robust type definitions.",
      "description_length": 655,
      "index": 1091,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOption",
      "library": "gapi-ocaml",
      "description": "This module provides operations for working with `option` values, including mapping, iteration, and extraction. It supports checking the presence of values, applying functions conditionally, and retrieving values with or without defaults. Useful for handling optional data without explicit pattern matching, such as processing API responses or optional configuration fields.",
      "description_length": 374,
      "index": 1092,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAnalyticsV3Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Google Analytics API v3 service, enabling direct interaction with Analytics data and management resources. It provides functions to query report data, manage account entities like web properties and user links, retrieve metadata columns, and handle user deletion requests. Concrete use cases include generating traffic reports, configuring AdWords integrations, validating analytics queries, and provisioning Google Analytics accounts.",
      "description_length": 462,
      "index": 1093,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDate",
      "library": "gapi-ocaml",
      "description": "This module handles datetime values using the `Netdate.t` type, providing operations to create, format, and parse dates. It includes functions to get the current time, convert dates to strings (with optional time component), and parse dates from strings. Concrete use cases include logging timestamps, scheduling events, and formatting dates for user display or API communication.",
      "description_length": 380,
      "index": 1094,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiOAuth2ServiceAccount",
      "library": "gapi-ocaml",
      "description": "This module handles OAuth 2.0 authentication for service accounts by generating signed JWT assertions and exchanging them for access tokens. It works with service account credentials in JSON format, scope lists, and session state to perform authorization flows. Concrete use cases include authenticating server-to-server API requests to Google services like Drive or BigQuery without user interaction.",
      "description_length": 401,
      "index": 1095,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDriveV2Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Google Drive API v2 for file management, collaboration, and metadata operations. It provides functions for file creation, sharing, revision control, comment handling, and hierarchical organization, working with data types like files, permissions, comments, and revisions. Concrete use cases include uploading files with custom metadata, programmatically managing folder structures, tracking file changes, and synchronizing real-time document state.",
      "description_length": 475,
      "index": 1096,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPipe",
      "library": "gapi-ocaml",
      "description": "This module implements streaming HTTP message bodies using `Netchannels` for input and output. It supports reading and writing bytes, strings, and lines, along with signaling end-of-stream in either direction. Concrete use cases include handling chunked HTTP transfers and bidirectional communication over persistent connections.",
      "description_length": 329,
      "index": 1097,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiJson",
      "library": "gapi-ocaml",
      "description": "Functions for constructing, parsing, and transforming JSON data models through structured serialization and bidirectional conversion between OCaml types and JSON structures. Operates on an annotated tree combining metadata with `Yo",
      "description_length": 231,
      "index": 1098,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiConfig",
      "library": "gapi-ocaml",
      "description": "This module provides configuration capabilities for authentication methods and HTTP client behavior, focusing on fine-grained adjustments through lenses. It operates on structured records (type `t`) to manage settings like timeouts, compression, OAuth flows, and network parameters, enabling composable client customization. Typical use cases include tuning API client performance, securing requests with various authentication schemes, and debugging HTTP interactions.",
      "description_length": 469,
      "index": 1099,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiBigqueryV2Service",
      "library": "gapi-ocaml",
      "description": "This module implements the BigQuery API v2 service, enabling direct interaction with Google's BigQuery platform for data querying and management. It provides operations across several submodules to handle datasets, tables, jobs, and projects, supporting tasks like data ingestion, query execution, and resource administration. Specific use cases include creating and deleting datasets, submitting and canceling query jobs, listing available projects, and streaming data into tables.",
      "description_length": 482,
      "index": 1100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_1Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for interacting with the AdSense Management API, handling types such as ad clients, ad units, custom channels, URL channels, and accounts. It provides functions for parsing, rendering, and manipulating these types, along with support for JSON serialization and deserialization. Concrete use cases include processing API responses, building and extracting configuration data, and handling paginated requests for ad management and reporting.",
      "description_length": 490,
      "index": 1101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for working with Google OAuth2 API responses, including user information, token metadata, and JSON Web Keys. It provides lenses, JSON serialization/deserialization, and empty values for initialization, enabling direct manipulation of OAuth2 data such as user profiles, token expiration, and cryptographic keys. Concrete use cases include parsing authenticated user data, validating OAuth2 tokens, and managing JWKs for secure API communication.",
      "description_length": 495,
      "index": 1102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiUtils",
      "library": "gapi-ocaml",
      "description": "This module includes functions for string manipulation, such as splitting, stripping, and checking prefixes or suffixes, along with utilities for URL and query string handling. It provides combinators for function composition and application through the Infix submodule, enabling concise data transformation pipelines. Specific use cases include parsing URLs, processing HTTP ETags, and implementing exponential backoff in network requests.",
      "description_length": 440,
      "index": 1103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiFun",
      "library": "gapi-ocaml",
      "description": "The module implements an identity function that returns its input unchanged. It operates on values of any type `'a`, making it universally applicable across all data structures and types. This function is useful for scenarios requiring a no-op transformation, such as default callbacks or placeholder operations.",
      "description_length": 312,
      "index": 1104,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiTasksV1Model",
      "library": "gapi-ocaml",
      "description": "This module defines the data structures and serialization logic for interacting with the Google Tasks API v1. It includes types and functions for handling task lists, individual tasks, and collections of both, with support for JSON conversion and field access via lenses. Use cases include parsing and generating API responses, managing task metadata like due dates and completion status, and handling paginated task list data.",
      "description_length": 427,
      "index": 1105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiServiceAccountCredentials",
      "library": "gapi-ocaml",
      "description": "This module handles service account credentials for Google API authentication. It provides lenses to access and modify credential fields like client email, private key, and URIs, and supports JSON serialization and deserialization. Use it to load credentials from a JSON file or string, and convert them into a data model or JSON structure for API requests.",
      "description_length": 357,
      "index": 1106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "GapiDriveV3Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Google Drive API v3 client interface, enabling direct interaction with Drive resources. It provides typed operations for managing files, permissions, comments, revisions, shared drives, and app integrations using corresponding model types like `File.t`, `Permission.t`, and `Drive.t`. Concrete use cases include automating file versioning, synchronizing shared drive metadata, implementing comment workflows, and exporting Google Docs in specific formats.",
      "description_length": 482,
      "index": 1107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiDiscoveryV1Service",
      "library": "gapi-ocaml",
      "description": "This module provides operations to list available Google APIs and retrieve their RESTful descriptions, working with data types such as `DirectoryList` and `RestDescription`. It enables use cases like programmatic discovery of Google APIs and inspection of their schemas for integration or documentation.",
      "description_length": 303,
      "index": 1108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOauth2V2Service",
      "library": "gapi-ocaml",
      "description": "This module implements Google OAuth2 API v2 operations for authentication and user identity verification. It provides functions to retrieve user profile data via `UserinfoResource.get`, validate tokens with `tokeninfo`, and fetch public keys for OpenID Connect with `getCertForOpenIdConnect`. These operations work with session state, token strings, and cryptographic key sets to support secure Google user authentication and identity management in web applications.",
      "description_length": 466,
      "index": 1109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Model",
      "library": "gapi-ocaml",
      "description": "The data structures and functions support operations for managing email threads, messages, labels, and account settings through the Gmail API, including JSON serialization/deserialization and field-level access via lenses. They work with entities like threads, messages, labels, forwarding addresses, SMTP/IMAP settings, and S/MIME certificates, enabling use cases such as email metadata extraction, attachment handling, label updates, client configuration, and auto-forwarding rule management.",
      "description_length": 494,
      "index": 1110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiGmailV1Service",
      "library": "gapi-ocaml",
      "description": "This module implements the Gmail API v1 service for accessing and managing user mailboxes. It provides functions to authenticate with specific OAuth2 scopes and interact with user accounts through operations like retrieving mailbox profiles, managing push notifications, and fetching account metadata. Concrete use cases include setting up real-time email monitoring, accessing user-specific email data, and controlling mailbox subscriptions.",
      "description_length": 442,
      "index": 1111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiPlusV1Model",
      "library": "gapi-ocaml",
      "description": "This module defines data structures and operations for interacting with the Google+ API v1, handling social data such as comments, activities, user profiles, and access control. It includes types for comment threads, paginated feeds, user information, ACLs, places, and activities, with functions for JSON serialization, field manipulation via lenses, and metadata management. Use cases include processing API responses, constructing and modifying social data payloads, and managing permissions and pagination for Google+ resources.",
      "description_length": 532,
      "index": 1112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiAdsenseV1_4Service",
      "library": "gapi-ocaml",
      "description": "This module implements the AdSense Management API (v1.4), enabling direct interaction with AdSense publisher data through a set of resource-specific operations. It supports data retrieval and management across accounts, ad units, custom channels, payments, and performance reports, using structured types like `Account`, `AdUnit`, `AdCode`, and `Metadata`. Concrete use cases include automating ad inventory reporting, generating revenue analytics by date range or dimension, managing multiple publisher accounts, and integrating AdSense configuration into administrative tools.",
      "description_length": 578,
      "index": 1113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiBigqueryV2Model",
      "library": "gapi-ocaml",
      "description": "This module provides operations for managing datasets, tables, queries, and data ingestion workflows in Google BigQuery. It works with data structures such as table schemas, dataset/table references, external data configurations, and job metadata, supporting JSON serialization and paginated result handling. Specific capabilities include query parameter configuration, streaming buffer management, and data insertion requests for structured analytics pipelines.",
      "description_length": 462,
      "index": 1114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GapiOAuth2",
      "library": "gapi-ocaml",
      "description": "This module handles OAuth 2.0 authorization workflows, providing functions to parse token responses and errors, generate authorization URLs, and manage access tokens via code exchange, refresh, and revocation. It operates on HTTP response pipes, session state, and authentication response records. Concrete use cases include integrating Google API authentication into applications, handling user consent flows, and securely managing token lifecycles during API sessions.",
      "description_length": 470,
      "index": 1115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_posix.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module controls debugging output using a global boolean reference, enabling or disabling detailed logging for system-level operations. It works directly with the `Netlog` module to conditionally emit debug messages based on the `enable` flag. Concrete use cases include tracing socket operations, file descriptor manipulations, and other low-level POSIX interactions during development or troubleshooting.",
      "description_length": 410,
      "index": 1116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_signal.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module enables debugging output for signal handler operations using `Netlog`, providing visibility into handler registration and execution. It works with standard OCaml signal handling types and the `Netlog` logging framework. Use this to trace signal handling behavior at runtime, especially when diagnosing conflicts or ordering issues between multiple handlers.",
      "description_length": 369,
      "index": 1117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netlog.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module enables conditional debug logging, resource tracking, and runtime diagnostics through operations that control per-module debug output, format log messages, and monitor file descriptor lifecycles with metadata. It operates on boolean flags to enable/disable modules, strings for message content, file descriptors for tracking allocations, and serial numbers to correlate resource events. Use cases include debugging network protocol implementations, identifying resource leaks in concurrent systems, and integrating with application-specific logging infrastructures via registered debug modules.",
      "description_length": 606,
      "index": 1118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_win32.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module controls debugging output for the Win32 primitives layer, specifically enabling or disabling detailed logs from both the OCaml wrapper and the underlying C wrapper. It works directly with boolean values to toggle debug modes and writes diagnostic messages to standard error. Concrete use cases include troubleshooting interoperability issues between OCaml and Win32 APIs by inspecting low-level function calls and error states.",
      "description_length": 439,
      "index": 1119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_tls.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module enables or disables debug tracing for TLS operations by controlling the `enable` reference. It works directly with TLS providers, configurations, and endpoints such as sockets. Use this module to toggle detailed runtime diagnostics during TLS handshake and communication processes.",
      "description_length": 293,
      "index": 1120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys.Debug",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module controls debugging output using a global boolean reference, enabling or disabling log messages formatted in a `Netlog` style. It works directly with the `ref` type from the standard library to manage the enable/disable state. Concrete use cases include toggling detailed system call tracing in network applications during development or troubleshooting.",
      "description_length": 365,
      "index": 1121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_signal",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module manages signal handler registration and execution order for Unix signals, supporting multiple handlers per signal with prioritization. It works directly with signal numbers and callback functions, and tracks handlers using entries containing metadata like priority and library name. Use cases include coordinating SIGINT handlers between libraries, preventing conflicts over SIGPIPE handling, and debugging signal handler interactions using the Debug module.",
      "description_length": 470,
      "index": 1122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_crypto_types",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines type signatures for cryptographic operations including TLS protocol handling, symmetric and asymmetric encryption, and digest generation. It works with abstract data types representing cryptographic providers, configurations, endpoints, and cryptographic primitives. Concrete use cases include establishing secure network connections, encrypting data streams, and implementing authentication mechanisms using public-key cryptography.",
      "description_length": 453,
      "index": 1123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_posix",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module extends POSIX system call support beyond standard libraries, focusing on low-level operations for file descriptor management, process control, terminal handling, and inter-process communication. It works directly with file descriptors, PTYs, semaphores, shared memory objects, event sources, and process records to enable tasks like asynchronous I/O multiplexing, subprocess supervision, and system resource coordination. Specific applications include implementing custom process spawning logic, terminal emulators, high-performance event loops, and system utilities requiring precise control over filesystem synchronization or real-time scheduling.",
      "description_length": 661,
      "index": 1124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_impl_util",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides functions for handling timeouts, memory operations, and data structure queries. It includes utilities for restarting functions, checking membership in sorted arrays, and measuring the length of buffer and string variants. These operations are used in network system implementations where precise timing and memory management are required.",
      "description_length": 359,
      "index": 1125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netexn",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module allows registering custom exception printers and provides a function to convert exceptions to strings using these printers. It works with the `exn` type, enabling detailed and unambiguous exception representations for debugging. Use it to enhance exception output readability in Ocamlnet-based applications, especially when debugging specific exception types.",
      "description_length": 371,
      "index": 1126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_conf",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides functions for registering custom exception printers, allowing exceptions to be converted into string representations. It works directly with the `exn` type and functions that return optional strings. A concrete use case is enhancing error reporting by attaching custom pretty-printing logic to specific exceptions.",
      "description_length": 335,
      "index": 1127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netlog",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides runtime-configurable logging with level-based message filtering, timestamp formatting, and output redirection. It supports log levels such as `Debug`, `Info`, and `Err`, and allows setting custom log destinations via a mutable logger reference. Concrete use cases include directing logs to specific output channels, integrating with Netplex logging infrastructure, and enabling conditional debug output through the `Debug` submodule for tracking resource usage and diagnosing network service behavior.",
      "description_length": 522,
      "index": 1128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_tmp",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module manages the creation and configuration of temporary files by providing functions to generate unique file prefixes and set or retrieve the global temporary directory. It operates on strings to manipulate file paths and prefixes, ensuring compatibility with OS-dependent conventions. Concrete use cases include generating temporary file names for intermediate data storage or setting custom directories for applications that require controlled temporary file placement.",
      "description_length": 479,
      "index": 1129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_mem",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module facilitates low-level memory management and data transfer between Bigarrays, strings, and bytes, offering operations like blitting, memory mapping, and page-aligned allocation. It enables direct memory manipulation for I/O-bound applications through file descriptor interactions, memory pools for efficient buffer reuse, and utilities for handling OCaml's internal object representations. Key use cases include high-performance networking (via memory-backed send/receive operations), memory-mapped file processing, and systems requiring precise control over memory layout and alignment.",
      "description_length": 598,
      "index": 1130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_tls",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module implements low-level TLS communication layers using file descriptors or memory buffers, supporting operations like handshake, encryption, decryption, and certificate validation. It works with TLS configurations built from cryptographic components such as private keys, certificates, CRLs, and Diffie-Hellman parameters, and interfaces directly with TLS providers and endpoints. Concrete use cases include securing network communication over sockets, implementing TLS clients or servers, and managing certificate-based authentication.",
      "description_length": 545,
      "index": 1131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys_types",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module defines low-level data types for handling binary data, including `memory`, `tbuffer`, and `tstring`, which represent byte sequences using different underlying storage models. It provides operations to manipulate these types, such as conversion functions and accessors that handle both mutable and immutable byte representations. Concrete use cases include efficient network data processing, in-place buffer modifications, and compatibility with both legacy string-based APIs and modern bytes-oriented code.",
      "description_length": 518,
      "index": 1132,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_win32",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides low-level operations for path manipulation, event-based synchronization, named pipe management for inter-process communication, process and console control, file descriptor handling, and cryptographic random data generation. It works with specialized types like `w32_pipe`, process handles, console objects, and CRT file descriptors to enable tasks such as creating IPC channels, configuring terminal attributes (colors, cursor), spawning processes with custom environments, and securely populating byte buffers with entropy. Specific use cases include implementing asynchronous named pipe servers, managing console input/output streams, and debugging Win32 API interactions via diagnostic logging.",
      "description_length": 719,
      "index": 1133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Netsys_oothr",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides object-oriented abstractions for multi-threading primitives such as mutexes, atomic initialization, and compare-and-swap operations. It works with reference cells (`ref`) and mutex objects to synchronize access to shared data in multi-threaded applications. Concrete use cases include protecting critical sections with mutexes, lazily initializing shared resources in a thread-safe manner, and performing atomic updates to shared variables.",
      "description_length": 461,
      "index": 1134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Netsys",
      "library": "gapi-ocaml.netsys-local",
      "description": "This module provides low-level cross-platform utilities for system call handling, I/O operations, and network configuration, focusing on file descriptors, sockets, and IP addresses. It supports generalized read/write operations with blocking control, descriptor management (e.g., close-on-exec flags, standard descriptor checks), and network-specific tasks like multicast group membership, IPv6 configuration, and socket address normalization. Designed for robustness in heterogeneous environments, it addresses use cases such as cross-platform socket programming, low-level system error handling (e.g., EINTR recovery), and debugging network-related system calls via configurable logging.",
      "description_length": 689,
      "index": 1135,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 1208,
    "meaningful_modules": 1136,
    "filtered_empty_modules": 72,
    "retention_rate": 0.9403973509933775
  },
  "statistics": {
    "max_description_length": 719,
    "min_description_length": 231,
    "avg_description_length": 411.78521126760563,
    "embedding_file_size_mb": 16.459954261779785
  }
}