{
  "package": "orsvm_e1071",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:59:10.944896",
  "modules": [
    {
      "module_path": "Orsvm_e1071.Utls",
      "library": "orsvm_e1071",
      "description": "This module handles file input/output operations, including reading from and writing to files, folding over lines in a file, and parsing float lists from file contents. It works with standard file channels, buffers, and custom result types for prediction data. Concrete use cases include loading numerical data from files, collecting script outputs with logging, and reading model predictions for further processing.",
      "description_length": 416,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Orsvm_e1071.Result",
      "library": "orsvm_e1071",
      "description": "This module represents the result of an operation that may either succeed with a filename or fail with an error message. It defines a sum type `t` with two constructors: `Ok` for successful outcomes carrying a filename, and `Error` for failed outcomes carrying an error message. This structure is used to handle and propagate file operation results in a type-safe manner.",
      "description_length": 371,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Orsvm_e1071.Svmpath",
      "library": "orsvm_e1071",
      "description": "This module trains a binary SVM classifier using a linear kernel and identifies lambda values for model tuning. It processes dense numerical data from tab-separated files for training and prediction tasks. It supports training, lambda extraction, prediction on new data, and retrieval of decision values.",
      "description_length": 304,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Orsvm_e1071.Svm",
      "library": "orsvm_e1071",
      "description": "This module trains and applies binary SVM classifiers using dense or sparse data formats. It supports RBF and linear kernels with configurable cost and gamma parameters, reading input data and labels from tab-separated text files. Trained models predict decision values on new data, with results written to temporary files and read into memory as lists of floats.",
      "description_length": 363,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Orsvm_e1071",
      "library": "orsvm_e1071",
      "description": "This module implements support vector machine classification workflows with linear and RBF kernels, handling training, prediction, and model parameter extraction. It operates on dense and sparse numerical data from tab-separated files, producing decision values and managing file-based result propagation through dedicated data types. Concrete use cases include binary classification of numerical datasets, lambda parameter tuning for linear models, and end-to-end SVM pipeline execution with temporary file handling.",
      "description_length": 517,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 517,
    "min_description_length": 304,
    "avg_description_length": 394.2,
    "embedding_file_size_mb": 0.07287311553955078
  }
}