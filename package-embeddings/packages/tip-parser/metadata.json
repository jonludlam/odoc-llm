{
  "package": "tip-parser",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:08.761091",
  "modules": [
    {
      "module_path": "Tip_parser",
      "library": "tip-parser",
      "description": "This module parses TIP language syntax into abstract syntax trees, handling types, terms, and statements. It processes tokens from a lexing buffer using functions like `parse_ty`, `parse_term`, and `parse_list`. Use it to convert TIP source code into structured data for theorem proving tasks.",
      "description_length": 293,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tip_lexer",
      "library": "tip-parser",
      "description": "This module implements a lexer for parsing TIP (Tool for Inductive Proofs) language tokens. It provides functions to convert a lexing buffer into tokens, using predefined lexing tables for efficient character recognition. The primary use case is in the initial stage of parsing TIP source code during formal verification tasks.",
      "description_length": 327,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tip_loc",
      "library": "tip-parser",
      "description": "This module handles source code location tracking with precise file, line, and column information. It provides functions to create and manipulate location values from various inputs, including lexing positions and lexbuf structures. Use cases include error reporting with detailed source locations and maintaining position metadata during parsing.",
      "description_length": 347,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tip_ast",
      "library": "tip-parser",
      "description": "This module provides structured data representation for a typed functional language's AST, supporting operations like term and type construction, logical connectives, and proof-related commands. It works with data structures such as types, terms, function definitions, and statements, enabling tasks in formal verification and compilation. Utilities include pretty-printing with precedence management and error reporting for parse issues, with specific use in proof systems and assertion checking.",
      "description_length": 497,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Tip_util",
      "library": "tip-parser",
      "description": "Parses TIP benchmark files into abstract syntax trees. Reads from files or input channels, producing lists of statements or error messages. Useful for loading and processing TIP problem files in automated reasoning tools.",
      "description_length": 221,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 497,
    "min_description_length": 221,
    "avg_description_length": 337.0,
    "embedding_file_size_mb": 0.018571853637695312
  }
}