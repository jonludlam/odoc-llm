{
  "package": "bloomf",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:35.639227",
  "modules": [
    {
      "module_path": "Bloomf.Make",
      "library": "bloomf",
      "description": "This module implements a Bloom filter with operations to create a filter, add elements, check membership, and manage storage. It works with elements of type `H.t`, using a hash module `H` to process values into hash digests. Concrete use cases include efficient set membership checks for large datasets, such as tracking seen URLs in web crawlers or filtering duplicate entries in streaming data.",
      "description_length": 396,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bloomf.Hashable",
      "library": "bloomf",
      "description": "This module defines a hashable type `t` with a required `hash` function that maps values to positive integers. It is used to generate hash values for elements stored in a Bloom filter, ensuring compatibility with the probabilistic membership checks of the structure. Concrete use cases include hashing strings, integers, or custom data types to populate Bloom filters with controlled false positive behavior.",
      "description_length": 408,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Bloomf",
      "library": "bloomf",
      "description": "This module implements probabilistic Bloom filters for efficient set membership checks with controlled false positives, supporting operations like insertion, query, union, intersection, and element count estimation. It works with arbitrary data types through customizable hash modules, enabling use cases such as tracking seen URLs or filtering duplicates in streams. Child modules provide concrete hash implementations and filter operations, allowing users to define hashable types and manipulate filters using those hashes. For example, strings can be hashed and added to a filter, then checked for probable membership, with options to serialize the filter for storage or transmission.",
      "description_length": 687,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 687,
    "min_description_length": 396,
    "avg_description_length": 497.0,
    "embedding_file_size_mb": 0.011322021484375
  }
}