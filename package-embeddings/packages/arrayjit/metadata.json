{
  "package": "arrayjit",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:27.955727",
  "modules": [
    {
      "module_path": "Ppx_arrayjit.Ppx_helper",
      "library": "arrayjit.ppx_arrayjit",
      "description": "Handles construction and manipulation of array expressions in PPX rewriters. Processes lists of expressions to build array constants, extracts dimension specifications as strings, and works directly with AST nodes for OCaml's array literals. Useful for generating optimized array code during compilation.",
      "description_length": 304,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_arrayjit",
      "library": "arrayjit.ppx_arrayjit",
      "description": "This module provides tools for constructing and manipulating array expressions within PPX rewriters. It supports building array constants from expression lists, extracting dimension information as strings, and working directly with AST nodes for array literals. Key operations include parsing, transforming, and generating optimized array code during compilation. For example, it can process a list of expressions into a fixed-size array or extract dimensions from multi-dimensional array literals.",
      "description_length": 498,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 498,
    "min_description_length": 304,
    "avg_description_length": 401.0,
    "embedding_file_size_mb": 0.007686614990234375
  }
}