{
  "package": "ppx_cstubs",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:13.448466",
  "modules": [
    {
      "module_path": "Ppx_cstubs.Types.Infix",
      "description": "Provides arithmetic and bitwise operations for a type `t`, including addition, subtraction, multiplication, division, remainder, and bit shifts. Supports logical operations such as AND, OR, and XOR, as well as left and right bit shifting. Used for low-level numerical computations and bit manipulation in performance-critical code.",
      "description_length": 331,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_cstubs.Types",
      "description": "Performs arithmetic and bitwise operations on type `t`, including addition, subtraction, multiplication, division, remainder, AND, OR, XOR, and left/right shifts. Supports efficient manipulation of binary data and numerical values in optimized contexts. Examples include calculating bitwise masks, performing modular arithmetic, and optimizing data representation. Operations are designed for direct use in systems programming and high-performance applications.",
      "description_length": 461,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ppx_cstubs",
      "description": "Generates C stubs and OCaml boilerplate from external declarations using Ctypes.typ values. Processes OCaml source files to extract function signatures and type definitions for foreign function interfaces. Enables direct binding to C libraries by translating OCaml externals into C-compatible code and corresponding OCaml glue.",
      "description_length": 327,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_cstubs",
      "description": "Performs arithmetic and bitwise operations on type `t`, including addition, subtraction, multiplication, division, remainder, AND, OR, XOR, and left/right shifts. Supports efficient manipulation of binary data and numerical values, enabling tasks like calculating bitwise masks and performing modular arithmetic. Operations are optimized for use in systems programming and high-performance applications. Examples include optimizing data representation and handling low-level numerical computations.",
      "description_length": 498,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_cstubs_custom",
      "description": "Initializes a custom stubs environment, setting up necessary internal state for subsequent operations. Works with abstract syntax tree representations and low-level code generation structures. Used to prepare the system for generating custom C bindings during the compilation process.",
      "description_length": 284,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 5,
    "filtered_empty_modules": 2,
    "retention_rate": 0.7142857142857143
  },
  "statistics": {
    "max_description_length": 498,
    "min_description_length": 284,
    "avg_description_length": 380.2,
    "embedding_file_size_mb": 0.018586158752441406
  }
}