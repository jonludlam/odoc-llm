{
  "package": "selective",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:25.883132",
  "modules": [
    {
      "module_path": "Selective.Make.Applicative_infix",
      "description": "Applies a function wrapped in a context to a value in the same context, sequences actions while discarding the first result, and sequences actions while discarding the second result. Works with monadic or applicative structures that support these operations. Used to compose effectful computations in a clean, readable way, such as validating and transforming data in a pipeline.",
      "description_length": 379,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Selective.Make",
      "description": "Provides operations to construct and apply functions within a context, including `return` for wrapping values, `apply` for function application in a context, and `select` for conditional function application based on `Either` values. Works with type `'a t` and functions that operate on this type, supporting both standard and custom mapping implementations. Used to manage effectful computations where function application can be conditionally skipped or enforced based on input.",
      "description_length": 480,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Selective.Applicative_infix",
      "description": "Applies a function wrapped in a context to a value in the same context, sequences actions while discarding the first result, and sequences actions while discarding the second result. Works with monadic structures that support these operations. Enables concise composition of effectful computations in a pipeline style.",
      "description_length": 318,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "selective",
      "description": "Provides operations for sequencing effects with conditional branching, including `select` and `map2`. Works with functorial structures that support both pure and effectful computations. Enables precise control over effect execution in scenarios like parsing, validation, and error handling.",
      "description_length": 290,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Selective",
      "description": "Provides a mechanism to conditionally apply functions based on a `Base.Either.t` value, allowing for selective execution of effects. Operates on values wrapped in a type `'a t`, supporting both pure returns and function application through `apply`. Enables efficient control flow in scenarios where certain operations should only execute when a specific branch (e.g., `First`) is selected.",
      "description_length": 389,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 480,
    "min_description_length": 290,
    "avg_description_length": 371.2,
    "embedding_file_size_mb": 0.018604278564453125
  }
}