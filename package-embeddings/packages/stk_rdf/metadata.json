{
  "package": "stk_rdf",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:39.552339",
  "modules": [
    {
      "module_path": "Stk_rdf.Utils.PTerm",
      "library": "stk_rdf",
      "description": "This module provides functions for converting between RDF terms and property values, comparing terms, and constructing properties with optional transition logic. It works directly with `Rdf.Term.term` and `Stk__Props.prop_value` types, enabling precise manipulation of semantic data. Concrete use cases include mapping RDF terms to styled properties, defining smooth transitions between values, and handling property inheritance in a term-based context.",
      "description_length": 453,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Stk_rdf.Utils.PIri",
      "library": "stk_rdf",
      "description": "This module provides functions for creating and manipulating property values of type `Iri.t`, including conversion to and from `prop_value`, and constructing properties with optional transition logic. It supports operations like comparison, wrapping, and defining property transitions based on start and stop values. Concrete use cases include handling RDF IRI values in property-based systems, such as configuring resource identifiers with dynamic transitions or default values.",
      "description_length": 479,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stk_rdf.Utils",
      "library": "stk_rdf",
      "description": "This module wraps IRI and Ptime values with utilities for default time handling and structured RDF identifier manipulation, offering direct operations on `Iri.t`, `Ptime.t`, and `Rdf.Term.term`. Its submodules enable converting and comparing RDF terms as property values, constructing properties with transitions, and managing IRI-based references with dynamic start-stop logic. You can normalize RDF terms with timestamps, define property transitions between IRI values, and map semantic terms to styled, inheritable properties. The combination of direct functions and submodule-based abstractions supports precise handling of RDF graphs with temporal and hierarchical structure.",
      "description_length": 680,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stk_rdf.W",
      "library": "stk_rdf",
      "description": "This module manages mappings between RDF terms and widgets, providing operations to add, remove, and find widgets by RDF term keys. It supports rendering and interaction with RDF graph data through configurable term cells and boxes, with support for namespaces and event handlers on term clicks and activations. Concrete use cases include building UI components that visualize RDF graphs with clickable terms linked to widget behaviors.",
      "description_length": 436,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Stk_rdf",
      "library": "stk_rdf",
      "description": "This module combines RDF term manipulation with dynamic UI mapping, enabling structured handling of temporal and hierarchical graph data. It provides core types like `Iri.t`, `Ptime.t`, and `Rdf.Term.term`, along with operations to normalize terms, define property transitions, and manage IRI-based references. Submodules support widget associations, allowing RDF terms to drive interactive UI elements with custom rendering and event responses. Example uses include visualizing RDF graphs with time-aware properties and building clickable, namespace-aware term displays linked to application logic.",
      "description_length": 599,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 5,
    "filtered_empty_modules": 6,
    "retention_rate": 0.45454545454545453
  },
  "statistics": {
    "max_description_length": 680,
    "min_description_length": 436,
    "avg_description_length": 529.4,
    "embedding_file_size_mb": 0.018619537353515625
  }
}