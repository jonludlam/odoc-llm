{
  "package": "aws-ec2",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2341,
  "creation_timestamp": "2025-06-18T18:05:49.063424",
  "modules": [
    {
      "module_path": "Aws_ec2.Types.VolumeType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and includes bidirectional mappings for string representation. Used to parse and encode volume-related data in AWS API interactions.",
      "description_length": 292,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIpv6Address",
      "description": "Creates and manipulates IPv6 address representations, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on string-based IPv6 addresses and structured JSON data. Used to process AWS API responses and construct requests involving IPv6 addresses.",
      "description_length": 290,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrivateIpAddressSpecification",
      "description": "Provides functions to construct, parse, and serialize objects representing private IP address specifications, including setting a primary flag and a specific IP address. Works with boolean and string values, as well as structured data formats like XML, query strings, and JSON. Used to generate AWS API requests and process responses involving network interface configurations.",
      "description_length": 377,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Tag",
      "description": "Encapsulates key-value pairs with methods to construct, parse from XML, and serialize to query parameters or JSON. Operates on string-based keys and values, supporting structured data representation. Used to generate AWS API requests and process XML responses containing metadata tags.",
      "description_length": 285,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceNetworkInterfaceAssociation",
      "description": "Provides functions to construct, parse, and serialize network interface association data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based attributes such as carrier IP, IP owner ID, public DNS name, and public IP. Used to process and transmit network interface association details in AWS API interactions.",
      "description_length": 373,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EbsBlockDevice",
      "description": "Constructs and manipulates block device configurations for EBS volumes, supporting parameters like volume size, type, IOPS, encryption, and deletion settings. Processes XML and JSON data to create or extract configuration details. Used to generate AWS API requests and handle EBS volume specifications in cloud infrastructure setups.",
      "description_length": 333,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIpv6AddressList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of IPv6 address instances. Works with XML nodes, AWS query parameters, and JSON structures. Used to process and encode IPv6 address data from API responses into structured formats for further handling.",
      "description_length": 275,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrivateIpAddressSpecificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of private IP address specifications. Operates on lists of `PrivateIpAddressSpecification.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle network configuration data in AWS API interactions.",
      "description_length": 307,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroupIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of security group IDs as strings. Operates on lists of string values representing AWS security group identifiers. Parses XML nodes into a list, converts to query parameters, and handles JSON serialization and deserialization for network requests.",
      "description_length": 303,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResourceType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize resource types in AWS query and JSON formats.",
      "description_length": 268,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TagList",
      "description": "Creates a singleton list containing a single value. Parses XML nodes into a list of tag objects. Converts a list of tags to an AWS query structure, serializes to a JSON list of associations, and deserializes from JSON back to a list of tags. Works with XML node structures, AWS query formats, and JSON representations. Used to process and transform tag data between different serialization formats in AWS-related workflows.",
      "description_length": 423,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and serialization/deserialization functions. Works with a polymorphic type that can represent various instance-related data. Used to parse XML responses from AWS services and generate query parameters or JSON payloads for API requests.",
      "description_length": 339,
      "index": 11,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AttachmentStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic initialization function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize status information in API requests and responses.",
      "description_length": 278,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GroupIdentifier",
      "description": "Encapsulates group identity information, supporting creation from name or ID, XML parsing, and serialization to query parameters and JSON. Operates on a structured type containing optional group name and ID fields. Used to standardize group references in API requests and responses.",
      "description_length": 282,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstancePrivateIpAddress",
      "description": "Provides functions to construct, parse, and serialize objects representing private IP addresses of EC2 instances, including association details, primary status, DNS name, and IP address. Works with custom types for network interface associations, booleans, and strings. Used to generate AWS API queries and JSON payloads from structured data.",
      "description_length": 342,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IKEVersionsListValue",
      "description": "Provides operations to construct, parse, and serialize IKE version lists, including converting between XML nodes, query parameters, and JSON representations. Works with string-based values and structured data types for network protocol configurations. Used to handle IKE version specifications in AWS API requests and responses.",
      "description_length": 328,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1DHGroupNumbersListValue",
      "description": "Provides operations to construct, parse, and serialize a list of Diffie-Hellman group numbers used in cryptographic key exchange protocols. Works with a custom type representing a list of integers, supporting XML and JSON encoding/decoding. Used to handle AWS API parameters for specifying allowed group numbers in secure communication setups.",
      "description_length": 343,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1EncryptionAlgorithmsListValue",
      "description": "Provides functions to construct, parse, and serialize a list of encryption algorithms, supporting XML, query, and JSON formats. Works with string-based values representing algorithm identifiers. Used to encode and decode encryption configuration data in AWS API requests and responses.",
      "description_length": 285,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1IntegrityAlgorithmsListValue",
      "description": "Provides operations to construct, parse, and serialize a value representing a list of integrity algorithms, including converting between XML nodes, query parameters, and JSON representations. Works with string-based data and structured JSON values. Used to process and encode AWS API responses containing algorithm lists.",
      "description_length": 321,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2DHGroupNumbersListValue",
      "description": "Provides operations to construct, parse, and serialize a list of Diffie-Hellman group numbers used in cryptographic key exchange protocols. Works with integer-based data structures and XML or JSON representations. Used to encode parameters for secure communication setup in AWS services.",
      "description_length": 287,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2EncryptionAlgorithmsListValue",
      "description": "Provides operations to construct, parse, serialize, and deserialize a list of encryption algorithms used in AWS services. Works with a custom type representing a list of strings. Used to handle AWS API responses and requests involving encryption configurations.",
      "description_length": 261,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2IntegrityAlgorithmsListValue",
      "description": "Provides operations to construct, parse, and serialize a value representing a list of integrity algorithms, including converting between XML nodes, query parameters, and JSON representations. Works with a custom type encapsulating a string value. Used to process and transmit integrity algorithm lists in AWS API requests and responses.",
      "description_length": 336,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskImageFormat",
      "description": "Converts between string representations and an internal type, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a custom type `t` used to represent disk image formats in AWS interactions. Used to parse XML responses from AWS APIs and generate JSON payloads for API requests.",
      "description_length": 310,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PlacementResponse",
      "description": "Provides operations to construct, parse, and serialize response data for AWS placement information. Works with XML nodes, query parameters, and JSON structures. Used to convert raw XML responses into structured objects and back for API interactions.",
      "description_length": 249,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BlockDeviceMapping",
      "description": "Provides operations to construct, parse, serialize, and deserialize block device mapping configurations. Works with types representing device names, virtual names, EBS block devices, and no-device specifications. Used to generate AWS API requests and process XML or JSON responses containing disk mapping details.",
      "description_length": 313,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceNetworkInterfaceSpecification",
      "description": "Provides operations to construct, parse, and serialize network interface configurations for instances, including setting public IP association, security groups, private IP addresses, and subnet details. Works with types such as boolean flags, string identifiers, integer indices, and lists of security group IDs and IP addresses. Used to generate AWS API requests for defining network interfaces during instance creation or modification.",
      "description_length": 437,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetTagSpecification",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS Spot Fleet tag specifications, including methods to convert between XML, query parameters, and JSON formats. Works with resource types and tag lists as defined by AWS. Used to configure tagging rules for Spot Fleet instances in API requests and responses.",
      "description_length": 334,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Tenancy",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with `t` and standard data types like strings, lists, and JSON objects. Used to parse and generate AWS-compatible representations from tenant-specific data structures.",
      "description_length": 303,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateOverrides",
      "description": "Provides functions to construct, parse, and serialize objects representing EC2 launch template overrides, including instance type, spot price, subnet ID, availability zone, weighted capacity, and priority. Works with custom types such as InstanceType.t and JSON/Query representations. Used to configure instance placement and pricing strategies in AWS EC2 auto-scaling scenarios.",
      "description_length": 379,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLoadBalancer",
      "description": "Provides operations to create, parse, and serialize load balancer configurations using XML and JSON. Works with AWS-specific string types and structured data representations. Used to convert between XML node structures and JSON-compatible formats for API interactions.",
      "description_length": 268,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetGroup",
      "description": "Creates and manipulates target group configurations using AWS ARN identifiers. Processes XML nodes into structured data and converts between JSON, query parameters, and internal representations. Used to serialize and deserialize target group settings for API interactions.",
      "description_length": 272,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EbsInstanceBlockDevice",
      "description": "Provides constructors and parsers for handling EC2 instance block device mappings, including attachment time, deletion settings, status, and volume ID. Works with custom types for dates, booleans, and enumerated statuses. Used to serialize and deserialize block device configurations in AWS API interactions.",
      "description_length": 308,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GroupIdentifierList",
      "description": "Handles creation, parsing, and serialization of group identifier lists. Processes XML nodes into structured group data and converts between list formats and AWS query or JSON representations. Used to generate and interpret AWS API requests involving group identifiers.",
      "description_length": 268,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceNetworkInterfaceAttachment",
      "description": "Provides constructors and parsers for network interface attachment data, including time of attachment, unique ID, deletion settings, device index, status, and network card index. Works with structured data types containing datetime, boolean, integer, and custom status fields. Used to generate query parameters, JSON representations, and parse XML responses from AWS API calls.",
      "description_length": 377,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstancePrivateIpAddressList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of private IP address objects. Operates on lists of `InstancePrivateIpAddress.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS instance private IP address data in API requests and responses.",
      "description_length": 323,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a polymorphic variant type that represents network interface statuses. Used to transform raw XML data from AWS API responses into structured values and generate query parameters for API requests.",
      "description_length": 356,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProductCodeValues",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, with bidirectional mappings defined in lists. Works with the abstract type `t` and related AWS query and JSON representations. Used to serialize and deserialize product code values in API requests and responses.",
      "description_length": 291,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttributeValue",
      "description": "Provides functions to construct, parse, and serialize attribute values between XML, query, and JSON formats. Works with string-based data and AWS-specific type aliases for JSON and query parameters. Used to convert raw XML nodes into structured attribute objects and generate JSON or query representations for API interactions.",
      "description_length": 327,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Scope",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings via `str_to_t` and `t_to_str`, and direct serialization/deserialization with `to_string`, `of_string`, `to_json`, `of_json`, and `parse`. Works with XML nodes and AWS query/json structures for data interchange. Used to transform and validate data formats in API interactions and configuration parsing.",
      "description_length": 408,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StatusName",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, with bidirectional mappings defined in lists. Works with the abstract type `t` and standard data structures like lists and options. Used to serialize and deserialize status values in AWS API interactions and XML parsing workflows.",
      "description_length": 310,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StatusType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON values, along with bidirectional mappings for status representations. Works with a polymorphic variant type and XML node structures. Used to serialize and deserialize status data in API requests and responses, and to map string literals to internal status values.",
      "description_length": 338,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserIdGroupPair",
      "description": "{ description : Aws.BaseTypes.String.t option; group_id : Aws.BaseTypes.String.t option; group_name : Aws.BaseTypes.String.t option; peering_status : Aws.BaseTypes.String.t option; user_id : Aws.BaseTypes.String.t option; vpc_id : Aws.BaseTypes.String.t option; vpc_peering_connection_id : Aws.BaseTypes.String.t option } Provides methods to construct, parse, serialize, and deserialize objects containing AWS user and group identifiers along with peering details. Works with optional string fields representing AWS resource metadata. Used to process and transmit VPC peering relationships in API requests and responses.",
      "description_length": 620,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaDeviceMemoryInfo",
      "description": "Provides operations to construct, parse, and serialize FPGA device memory information, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing memory size information in mebibytes. Used to process and transmit FPGA device metadata in AWS API interactions.",
      "description_length": 319,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GpuDeviceMemoryInfo",
      "description": "Provides operations to construct, parse, and serialize GPU device memory information, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing memory size in mebibytes. Used to process and transmit GPU memory metadata in AWS-related data exchanges.",
      "description_length": 311,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskType",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with `make` and converted using bidirectional mappings. Used to handle structured data in AWS API interactions, such as encoding and decoding request parameters.",
      "description_length": 368,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IKEVersionsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of IKE version values. Operates on lists of `IKEVersionsListValue.t` and XML nodes, as well as AWS query and JSON formats. Used to handle IKE version data in network configuration and API request/response processing.",
      "description_length": 286,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Phase1DHGroupNumbersList",
      "description": "Creates and manipulates lists of Diffie-Hellman group numbers used in IKEv1 phase 1. Parses XML nodes into structured lists, converts them to AWS query parameters, and serializes/deserializes them to and from JSON. Processes data for network configuration and secure communication protocols.",
      "description_length": 291,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1EncryptionAlgorithmsList",
      "description": "Constructs a list of encryption algorithm values and parses XML nodes into this list. Converts the list to AWS query parameters and JSON format, and reconstructs the list from JSON. Used to handle encryption algorithm configurations in network protocol setups.",
      "description_length": 260,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1IntegrityAlgorithmsList",
      "description": "Constructs a list of integrity algorithm values from a single element, parses XML nodes into a list of algorithm configurations, converts the list to an AWS query structure, serializes to a JSON list format, and deserializes from JSON back into the list structure. Works with XML node sequences, AWS query parameters, and JSON lists. Used to process and transmit IKE phase 1 integrity algorithm settings in network configuration protocols.",
      "description_length": 439,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2DHGroupNumbersList",
      "description": "Creates a list of Diffie-Hellman group numbers for IKEv2 phase 2 configurations. Parses XML nodes into a list of group number values, converts the list to AWS query parameters, and serializes/deserializes the list to and from JSON format. Used to handle IKEv2 key exchange parameters in network protocol implementations.",
      "description_length": 320,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2EncryptionAlgorithmsList",
      "description": "Constructs a list of encryption algorithm values and parses XML nodes into this list. Converts the list to AWS query parameters and serializes/deserializes it to and from JSON format. Used to handle encryption algorithm configurations in AWS API requests and responses.",
      "description_length": 269,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2IntegrityAlgorithmsList",
      "description": "Constructs a list of integrity algorithm values from a single element, parses XML nodes into a structured list, converts the list to an AWS query format, serializes to JSON, and deserializes from JSON. Operates on lists of `Phase2IntegrityAlgorithmsListValue.t` values and XML node structures. Used to process and encode phase 2 integrity algorithm configurations for AWS API interactions.",
      "description_length": 389,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskImageDescription",
      "description": "Represents disk image metadata with fields for checksum, format, import manifest URL, and size. Parses XML nodes into structured data and serializes to query parameters, JSON associations, and deserializes from JSON. Used to construct and manipulate disk image configurations in cloud infrastructure workflows.",
      "description_length": 310,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskImageVolumeDescription",
      "description": "Provides operations to construct, parse, and serialize volume descriptions from XML and JSON. Works with a record type containing optional fields for ID and size. Used to process and generate query parameters and JSON representations for disk image volumes.",
      "description_length": 257,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RouteTableAssociationStateCode",
      "description": "Provides conversion between a state code type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a custom type `t` representing route table association states. Used to handle AWS API responses and requests where state codes need to be translated between internal and external formats.",
      "description_length": 351,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateEbsBlockDevice",
      "description": "Provides functions to construct, parse, and serialize EBS block device configurations for EC2 launch templates, including setting encryption, IOPS, volume size, and snapshot details. Works with types such as boolean, integer, string, and custom volume type enumerations. Used to generate AWS API-compatible query parameters and JSON representations for EBS configurations in instance launch templates.",
      "description_length": 401,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceInterruptionBehavior",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` and associated string mappings. Used to handle instance interruption behaviors in AWS API interactions, such as converting between XML responses and internal data structures.",
      "description_length": 356,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and supports serialization to and from JSON and query parameters. Handles XML parsing into `t` and provides a generic constructor for initializing values. Used to manage AWS spot instance type identifiers in API interactions.",
      "description_length": 310,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GroupIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of string values, converting them to and from XML nodes, query strings, and JSON representations. Used to handle grouped string parameters in API requests and responses.",
      "description_length": 296,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IpRange",
      "description": "Represents IP ranges in CIDR notation, supporting creation from a string, parsing from XML nodes, and serialization to query parameters and JSON. Operates on structured data including IP addresses, network masks, and optional descriptions. Used to validate and convert IP range inputs in network configuration and API request handling.",
      "description_length": 335,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6Range",
      "description": "Provides operations to create, parse, and serialize IPv6 range data, including converting to query parameters and JSON representations. Works with a structured type containing optional CIDR and description fields. Used to process and encode IPv6 range information from XML and JSON inputs.",
      "description_length": 289,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListId",
      "description": "A module that constructs and processes objects representing AWS prefix list identifiers, supporting parsing from XML, conversion to query parameters, and serialization to JSON. It works with string-based descriptions and prefix list IDs, encapsulated in a structured record type. Used to generate and interpret AWS API requests involving VPC prefix lists.",
      "description_length": 355,
      "index": 61,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateOverrides",
      "description": "Provides operations to construct, parse, and serialize objects representing overrides for fleet launch templates, including instance type, subnet, availability zone, and placement settings. Works with types such as instance type, string, double, and custom placement response structures. Used to generate AWS API requests and handle JSON/XML data during fleet configuration.",
      "description_length": 374,
      "index": 62,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateSpecification",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS EC2 launch template specifications, including setting template ID, name, and version. Works with string-based identifiers and structured data formats like XML, query parameters, and JSON. Used to generate AWS API requests and process responses involving EC2 instance launch configurations.",
      "description_length": 368,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetReplacementStrategy",
      "description": "Converts between string representations and an internal type, supporting XML parsing, query string encoding, and JSON serialization/deserialization. Operates on a custom type `t` used to represent fleet replacement strategies. Parses XML input into strategy configurations and generates JSON or query parameters for API interactions.",
      "description_length": 333,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BlockDeviceMappingList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of block device mappings. Operates on lists of `BlockDeviceMapping.t` values and XML or JSON representations. Parses XML nodes into a list of mappings, converts to AWS query parameters, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 328,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IamInstanceProfileSpecification",
      "description": "Provides operations to construct, parse, and serialize instances of AWS IAM instance profile specifications, including converting between XML, query parameters, and JSON formats. Works with string-based ARN and name fields encapsulated in a record type. Used to generate HTTP requests and process API responses in AWS SDK interactions.",
      "description_length": 335,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceNetworkInterfaceSpecificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of network interface specifications. Operates on lists of `InstanceNetworkInterfaceSpecification.t` values, converting them to query parameters, JSON structures, and from JSON. Used to handle AWS EC2 network interface configurations in API requests and responses.",
      "description_length": 333,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetMonitoring",
      "description": "Provides operations to create, parse, and serialize configuration for monitoring Spot Fleet requests, including enabling monitoring and converting data to query and JSON formats. Works with boolean flags and structured data representing fleet monitoring settings. Used to generate AWS API requests and process responses for Spot Fleet tracking.",
      "description_length": 344,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetTagSpecificationList",
      "description": "Handles creation, parsing, and serialization of Spot Fleet tag specifications. Operates on lists of `SpotFleetTagSpecification.t` values, converting them to query parameters, JSON structures, and vice versa. Used to prepare and process tag configurations for AWS Spot Fleet requests.",
      "description_length": 283,
      "index": 69,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotPlacement",
      "description": "Provides methods to construct, parse, and serialize objects representing AWS spot instance placement configurations, including availability zones, group names, and tenancy settings. Works with XML nodes, query parameters, and JSON structures for data interchange. Used to generate and interpret spot instance placement details in cloud deployment workflows.",
      "description_length": 357,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateOverridesList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of launch template overrides, including converting between XML nodes, query parameters, and JSON structures. Works with lists of `LaunchTemplateOverrides.t` records. Used to process and transmit override configurations in AWS API interactions.",
      "description_length": 313,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLoadBalancers",
      "description": "Provides functions to create, parse, and serialize Classic Load Balancer data structures. Operates on lists of `ClassicLoadBalancer.t` and XML or JSON representations. Parses XML node sequences into load balancer lists, converts them to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 310,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetGroups",
      "description": "Creates a singleton value from a given element. Parses XML nodes into a list of target group structures. Converts target group lists to AWS query parameters, JSON representations, and back from JSON. Works with XML nodes, AWS query structures, and JSON values to handle target group data in cloud infrastructure workflows.",
      "description_length": 322,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReplacementStrategy",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, along with mappings between string keys and values. Works with XML node structures, query parameters, and JSON representations for data serialization and parsing. Used to transform and extract configuration settings from XML responses and encode them into JSON for API interactions.",
      "description_length": 362,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusName",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle volume status names in AWS API interactions, such as converting between internal representations and HTTP request parameters.",
      "description_length": 361,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationPreference",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic initialization function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize reservation preferences in AWS API interactions.",
      "description_length": 277,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationTargetResponse",
      "description": "Provides constructors and parsers for handling AWS capacity reservation response data, including conversion to query parameters, JSON serialization, and deserialization. Works with string-based identifiers and structured JSON data. Used to process API responses that include capacity reservation IDs and resource group ARNs.",
      "description_length": 324,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing associations between elastic GPUs and instances, including parsing XML nodes, generating query parameters, and converting to and from JSON. Works with string-based identifiers and states, and timestamps related to GPU associations. Used to process and transmit GPU association data in AWS API interactions.",
      "description_length": 381,
      "index": 78,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticInferenceAcceleratorAssociation",
      "description": "Provides operations to construct, parse, and serialize objects representing associations between elastic inference accelerators and resources. Works with data types including ARN strings, timestamps, and JSON structures. Used to handle AWS Elastic Inference accelerator association metadata in API requests and responses.",
      "description_length": 321,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceBlockDeviceMapping",
      "description": "Provides operations to construct, parse, and serialize block device mappings for EC2 instances, including creating with device names and EBS configurations, and converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as `EbsInstanceBlockDevice.t` and JSON structures. Used to generate and process instance block device mappings in API requests and responses.",
      "description_length": 397,
      "index": 80,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HttpTokensState",
      "description": "Provides conversion between a token type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` and associated string pairs. Used to transform HTTP token states for API requests and data interchange.",
      "description_length": 279,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMetadataEndpointState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to handle metadata endpoint states in AWS interactions, such as converting between internal representations and HTTP query parameters or JSON payloads.",
      "description_length": 375,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMetadataOptionsState",
      "description": "Provides bidirectional mappings between a type `t` and strings, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` that represents metadata options for instances. Used to convert instance metadata configurations into structured data for API interactions and storage.",
      "description_length": 322,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceNetworkInterface",
      "description": "Provides functions to construct, parse, and serialize network interface data structures with detailed attributes such as associations, attachments, IP addresses, and status. Works with specific types like instance network interface associations, private IP address lists, and network interface status. Used to generate AWS API requests and process XML or JSON responses from EC2 service interactions.",
      "description_length": 400,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStateName",
      "description": "Converts between string representations and a custom type, supporting XML parsing, query string encoding, and JSON serialization. Works with a polymorphic type that can be instantiated with any value. Used to handle state names in AWS requests, ensuring consistent representation across different data formats.",
      "description_length": 310,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LicenseConfiguration",
      "description": "Provides operations to construct, parse, and serialize license configuration data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured record type containing fields for license configuration ARNs and related metadata. Used to process and transmit license configuration details in AWS API interactions.",
      "description_length": 357,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.MonitoringState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to transform and serialize state data for web service interactions and configuration storage.",
      "description_length": 315,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProductCode",
      "description": "Creates and manipulates product code objects with optional ID and type fields. Processes XML nodes into structured data and converts between JSON, query parameters, and internal representations. Used to handle product code metadata in API interactions and data serialization workflows.",
      "description_length": 285,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcCidrBlockStateCode",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent VPC CIDR block state codes. Used to handle AWS VPC state code data in XML, JSON, and query parameters.",
      "description_length": 292,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetCidrBlockStateCode",
      "description": "Handles conversion between a custom type `t` and string, XML, and JSON representations. Provides parsing from XML nodes and encoding to AWS query parameters. Supports bidirectional mapping between string and internal state representations.",
      "description_length": 239,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DhcpConfigurationValueList",
      "description": "Provides functions to create, parse, and convert a list of DHCP configuration values between XML, AWS query format, and JSON. Operates on lists of `AttributeValue.t` values, enabling structured data handling for network configuration parameters. Used to process and serialize DHCP options in cloud infrastructure workflows.",
      "description_length": 323,
      "index": 91,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesConfiguration",
      "description": "Provides methods to construct, parse, and serialize objects representing AWS Reserved Instances configurations, including setting availability zones, instance counts, types, platforms, and scopes. Works with custom types such as instance types, scopes, and AWS-specific string and integer representations. Used to generate query parameters and JSON payloads for API interactions involving reserved instance setups.",
      "description_length": 414,
      "index": 92,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficDirection",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with the abstract type `t` and associated string mappings. Used to transform XML data into structured objects and prepare data for API requests.",
      "description_length": 300,
      "index": 93,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorPortRange",
      "description": "Provides operations to construct, parse, and serialize port range data using integer values for from_port and to_port. Works with a record type containing optional integer fields. Used to encode and decode port range specifications in API requests and responses.",
      "description_length": 262,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorRuleAction",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic type that can be instantiated with `make` and converted to and from strings. Used to handle traffic mirror rule actions in AWS API interactions, such as translating between internal representations and network protocols.",
      "description_length": 394,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ListingState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to transform data structures for XML parsing, JSON encoding, and API request formatting.",
      "description_length": 288,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CurrencyCodeValues",
      "description": "Provides conversion between currency code strings and an abstract type `t`, including parsing from XML nodes and serialization to query and JSON formats. Works with XML nodes, strings, and AWS-specific query and JSON types. Used to process and represent currency codes in API requests and responses.",
      "description_length": 299,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EventCode",
      "description": "Converts between string representations and a custom type `t`, including XML parsing and serialization to query and JSON formats. Supports bidirectional mapping between `t` and strings, and provides a generic construction function. Used to process and encode event codes in API requests and responses.",
      "description_length": 301,
      "index": 98,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatusDetails",
      "description": "Provides methods to construct, parse, and serialize instance status details, including setting impaired time, name, and status. Works with datetime, status name, and status type data structures. Used to generate AWS API queries and JSON representations from XML input.",
      "description_length": 268,
      "index": 99,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCapacity",
      "description": "Provides methods to construct, parse, and serialize instances with capacity details, including available, total, and instance type information. Works with integer and string types to represent capacity metrics and instance configurations. Used to convert between XML, query parameters, and JSON formats for cloud resource management.",
      "description_length": 333,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreStateError",
      "description": "Provides functions to construct, parse, and serialize error data related to disabling fast snapshot restore, including converting between XML, query, and JSON formats. Works with custom error types containing optional code and message fields. Used to handle API responses and errors in AWS-related workflows.",
      "description_length": 308,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IpRanges",
      "description": "Provides operations to create, parse, and serialize IP range data. Works with lists of strings representing IP ranges and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into structured IP range lists and constructs JSON representations for API interactions.",
      "description_length": 295,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListIdSet",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert a list of strings to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string values representing identifier prefixes. Used to handle AWS prefix lists in XML and JSON formats during request processing.",
      "description_length": 329,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserIdGroupPairSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of user ID group pairs. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and structured data for API interactions.",
      "description_length": 235,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeAttachmentState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic type that can be instantiated with `make` and converted to and from strings. Used to handle volume attachment states in AWS API interactions, such as parsing responses or constructing requests.",
      "description_length": 367,
      "index": 105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IKEVersionsRequestListValue",
      "description": "Provides operations to create, parse, and serialize a list of IKE versions from XML and JSON formats. Works with string-based values representing IKE protocol versions. Used to handle AWS API requests that specify allowed or supported IKE versions in query and JSON payloads.",
      "description_length": 275,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1DHGroupNumbersRequestListValue",
      "description": "Provides operations to construct, parse, and serialize a list of Diffie-Hellman group numbers used in cryptographic key exchange protocols. Works with integer values representing group numbers and XML or JSON formatted data. Used to generate AWS API requests requiring specific DH group configurations.",
      "description_length": 302,
      "index": 107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1EncryptionAlgorithmsRequestListValue",
      "description": "Provides operations to construct, parse, and serialize a value representing a list of encryption algorithms in AWS requests. Works with string-based data and AWS-specific types for XML and JSON formatting. Used to generate query parameters and JSON payloads for API interactions involving encryption settings.",
      "description_length": 309,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1IntegrityAlgorithmsRequestListValue",
      "description": "Provides functions to construct, parse, and serialize a value representing a list of integrity algorithms in AWS requests. Works with string-based data and JSON/Query formats. Used to encode and decode specific request parameters in AWS API interactions.",
      "description_length": 254,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2DHGroupNumbersRequestListValue",
      "description": "Provides operations to construct, parse, and serialize a list of Diffie-Hellman group numbers used in cryptographic key exchange protocols. Works with integer values representing group numbers and structured data formats like XML, query strings, and JSON. Used to encode and decode DH group numbers in AWS API requests and responses.",
      "description_length": 333,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2EncryptionAlgorithmsRequestListValue",
      "description": "Provides operations to construct, parse, and serialize a value representing a request list in encryption algorithms, working with string-based values and JSON/Query formats. Includes parsing from XML nodes, conversion to query parameters, and decoding/encoding from JSON. Used to handle structured input for API requests involving encryption configurations.",
      "description_length": 357,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2IntegrityAlgorithmsRequestListValue",
      "description": "Provides operations to construct, parse, and serialize a value representing a list of integrity algorithms from XML and JSON formats. Works with string-based data and AWS query and JSON structures. Used to process and encode request parameters for phase 2 integrity algorithm lists in network protocols.",
      "description_length": 303,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaDeviceInfo",
      "description": "Provides methods to construct, parse, and serialize FPGA device information, including name, manufacturer, count, and memory details. Works with custom types such as strings, integers, and a memory info structure. Used to convert XML data from API responses into structured objects and generate query parameters or JSON representations for API interactions.",
      "description_length": 357,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GpuDeviceInfo",
      "description": "Provides methods to construct, parse, serialize, and deserialize GPU device information, including name, manufacturer, count, and memory details. Works with custom types such as strings, integers, and a memory info structure. Used to process and exchange GPU metadata in AWS-related data formats like XML, query strings, and JSON.",
      "description_length": 330,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InferenceDeviceInfo",
      "description": "Provides operations to construct, parse, and serialize device information data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with structured data containing optional fields for count, name, and manufacturer. Used to process and transmit device metadata in AWS-related workflows.",
      "description_length": 331,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskInfo",
      "description": "Provides methods to construct, parse, serialize, and deserialize disk information structures. Works with numeric values, disk types, and XML or JSON data formats. Used to process cloud infrastructure configurations and generate query parameters for API interactions.",
      "description_length": 266,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkCardInfo",
      "description": "Encapsulates configuration details for network cards, including index, network performance, and maximum interfaces. Parses XML nodes into structured data and serializes to query parameters, JSON, and deserializes from JSON. Used to model and exchange network card specifications in AWS-related data processing workflows.",
      "description_length": 320,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupStrategy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be instantiated with a given value. Used to handle structured data in AWS API interactions, such as converting between internal representations and network-compatible formats.",
      "description_length": 360,
      "index": 118,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ArchitectureType",
      "description": "Converts between string representations and an internal type, including XML parsing and AWS query/json serialization. Works with a custom type `t` and provides bidirectional mappings between strings and this type. Used to process and encode architecture specifications in XML and JSON formats for AWS interactions.",
      "description_length": 314,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TelemetryStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to transform and extract telemetry data from XML or JSON inputs for AWS integration.",
      "description_length": 288,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TunnelOption",
      "description": "Constructs and manipulates tunnel configuration objects with parameters such as IP addresses, CIDR blocks, encryption and integrity algorithms, and key exchange settings. Parses XML nodes into configuration objects and serializes them to query strings, JSON, and deserializes from JSON. Used to generate and process IKE tunnel settings for secure network connections.",
      "description_length": 367,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnState",
      "description": "Provides conversion between a state representation and string, XML, and JSON formats, including parsing from XML nodes and generating AWS query parameters. Works with a custom type `t` that encapsulates state information. Used to serialize and deserialize state data for network configuration and API interactions.",
      "description_length": 314,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnStaticRouteSource",
      "description": "Converts between string representations and a structured type, including XML parsing and JSON serialization. Handles bidirectional mapping between a custom type and string, query, and JSON formats. Used to process and encode static route sources in network configuration contexts.",
      "description_length": 280,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CidrBlock",
      "description": "Provides operations to create, parse, and serialize CIDR block representations, including converting between XML nodes, query parameters, and JSON structures. Works with a custom type representing network address ranges in CIDR notation. Used to process AWS API responses and requests that include network configuration data.",
      "description_length": 325,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6CidrBlock",
      "description": "Provides operations to construct, parse, and serialize IPv6 CIDR blocks. Works with string representations and XML/JSON data structures. Used to convert between XML node lists and structured data, and to prepare CIDR blocks for API queries or JSON serialization.",
      "description_length": 262,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IcmpTypeCode",
      "description": "Encodes and decodes ICMP type and code values, supporting parsing from XML nodes and serialization to query parameters and JSON. Works with integer-based type and code fields, ensuring proper structure for network protocol representations. Used to construct and validate ICMP message identifiers in AWS-related network operations.",
      "description_length": 330,
      "index": 126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PortRange",
      "description": "Provides methods to create, parse, and serialize port ranges using integer bounds. Works with integer-based ranges and XML or JSON data structures. Used to process AWS port range specifications in network configuration and API requests.",
      "description_length": 236,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RuleAction",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize rule actions in XML and JSON formats for AWS interactions.",
      "description_length": 281,
      "index": 128,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceAssociation",
      "description": "Provides functions to construct, parse, serialize, and deserialize network interface association data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based identifiers and attributes related to network interfaces, such as public IP addresses, DNS names, and ownership IDs. Used to process and exchange network configuration details in AWS-related applications.",
      "description_length": 423,
      "index": 129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RecurringChargeFrequency",
      "description": "Converts between string representations and an internal type for recurring charge frequencies, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a custom type `t` representing frequency configurations. Used to process and encode charge frequency data from XML inputs and prepare it for API queries or JSON outputs.",
      "description_length": 350,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceType",
      "description": "Converts between string representations and a custom type `t`, including XML parsing, query string encoding, and JSON serialization. Works with `t`, `string`, `Ezxmlm.nodes`, and AWS-specific types `Query.t` and `Json.t`. Used to process service identifiers from XML responses, generate query parameters, and handle JSON payloads in AWS API interactions.",
      "description_length": 354,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportInstanceVolumeDetailItem",
      "description": "Provides operations to construct, parse, and serialize objects representing details of imported instance volumes, including availability zones, conversion status, and disk image information. Works with types such as strings, long integers, and custom record types for disk images and volume descriptions. Used to process and encode volume import data for API interactions and data serialization.",
      "description_length": 395,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentResourceType",
      "description": "Provides conversion between string representations and a type `t` for transit gateway attachment resource types, including parsing from XML and serializing to query parameters and JSON. Works with XML nodes, strings, and AWS-specific query and JSON types. Used to process and encode resource type values in AWS API interactions.",
      "description_length": 328,
      "index": 133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreStateError",
      "description": "Provides operations to construct, parse, and serialize error data related to enabling fast snapshot restore, including converting between XML, query, and JSON formats. Works with structured error data containing optional code and message fields. Used to handle API response errors in AWS interactions, such as validating or transmitting error details from service calls.",
      "description_length": 370,
      "index": 134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RouteOrigin",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic construction function. Works with a polymorphic type `t` and associated query and JSON representations. Used to serialize and deserialize route origin data from XML and JSON formats into internal structures.",
      "description_length": 304,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RouteState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type that can represent route-related state information. Used to parse XML responses into structured data and generate HTTP query strings or JSON payloads for API interactions.",
      "description_length": 323,
      "index": 136,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RouteTableAssociationState",
      "description": "Provides functions to construct, parse, and serialize objects representing the state of a route table association, including its status code and message. Works with a record type containing a status code and an optional status message. Used to handle AWS API responses and generate query or JSON representations for network configuration tracking.",
      "description_length": 347,
      "index": 137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuSpecificationResponse",
      "description": "Provides operations to construct, parse, and serialize Elastic GPU specification data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured record type containing optional string fields. Used to process API responses and prepare data for HTTP requests in AWS integration workflows.",
      "description_length": 336,
      "index": 138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateBlockDeviceMapping",
      "description": "Provides operations to construct, parse, and serialize block device mappings for EC2 launch templates, including setting device names, virtual names, EBS configurations, and no-device flags. Works with custom types for AWS strings and JSON structures, as well as XML nodes for parsing. Used to generate valid EC2 instance configurations from structured data or XML input.",
      "description_length": 371,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateElasticInferenceAcceleratorResponse",
      "description": "Provides functions to construct, parse, and serialize objects representing elastic inference accelerator configurations, including setting type and count. Works with string and integer types for configuration parameters and JSON/Query data formats. Used to process and generate AWS API responses related to elastic inference resources.",
      "description_length": 335,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateSpotMarketOptions",
      "description": "Provides functions to construct, parse, and serialize objects representing spot instance options for EC2 launch templates, including setting max price, instance type, block duration, validity period, and interruption behavior. Works with types such as strings, integers, date times, and custom enums for spot instance configurations. Used to generate AWS API-compatible query parameters and JSON payloads for managing spot instance requests.",
      "description_length": 441,
      "index": 141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MarketType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and provides serialization to and from query and JSON formats. Parses XML nodes into `t` and creates default instances of any type. Used to handle market type data in API requests and responses.",
      "description_length": 279,
      "index": 142,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateHttpTokensState",
      "description": "Converts between a custom type and string representations, including XML parsing and query/json serialization. Operates on a type encapsulating HTTP tokens state information. Used to process and encode configuration settings from XML responses into structured data for AWS API interactions.",
      "description_length": 290,
      "index": 143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceMetadataEndpointState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic type that can be instantiated with any value. Used to handle metadata endpoint state configurations in AWS-related workflows.",
      "description_length": 299,
      "index": 144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceMetadataOptionsState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a custom type `t` used to represent metadata options state in AWS launch templates. Used to transform configuration data for API requests and external storage formats.",
      "description_length": 324,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceNetworkInterfaceSpecification",
      "description": "Provides functions to construct, parse, and serialize network interface configurations for EC2 instances, including setting IP addresses, security groups, and subnet details. Works with types such as boolean flags, string identifiers, lists of group IDs, and IP address specifications. Used to generate valid API requests for launching EC2 instances with customized network interfaces.",
      "description_length": 385,
      "index": 146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateLicenseConfiguration",
      "description": "Provides operations to construct, parse, and serialize license configuration data using an ARN. Works with the `t` type, which encapsulates license configuration information. Used to generate AWS API queries and JSON representations for launching templates with specific licensing.",
      "description_length": 281,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateTagSpecification",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS launch template tag specifications. Works with resource types and tag lists, enabling integration with AWS API requests. Used to generate query parameters and JSON payloads for EC2 instance configuration.",
      "description_length": 284,
      "index": 148,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIpv6AddressRequest",
      "description": "Constructs and manipulates IPv6 address request data, supporting parsing from XML nodes, conversion to query parameters, and serialization to JSON. Operates on a structured type containing an optional IPv6 address string. Used to generate and process network configuration requests in AWS API interactions.",
      "description_length": 306,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IpRangeList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of IP range objects. Operates on lists of `IpRange.t` values and XML or JSON data structures. Used to generate AWS query parameters from IP ranges and to parse XML input into structured IP range data.",
      "description_length": 273,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6RangeList",
      "description": "Handles parsing and serialization of IPv6 range lists from XML, generating AWS query parameters, and converting to and from JSON format. Operates on lists of IPv6 range objects, each representing a specific IPv6 address range. Used to process network configuration data in AWS API requests and responses.",
      "description_length": 304,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of prefix list identifiers. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of AWS prefix lists and internal list structures for API interactions.",
      "description_length": 278,
      "index": 152,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UserIdGroupPairList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of user ID and group pair structures. Operates on lists of `UserIdGroupPair.t` and XML or JSON representations of such lists. Used to convert between XML request data and structured query parameters or JSON payloads in AWS-related processing.",
      "description_length": 312,
      "index": 153,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociatedNetworkType",
      "description": "Converts between string representations and a custom type, including XML parsing and AWS query/json serialization. Works with a polymorphic type that can be instantiated with a generic value. Used to handle network-related data in API requests and responses.",
      "description_length": 258,
      "index": 154,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnEndpointAttributeStatusCode",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic variant type that represents status codes for client VPN endpoints. Used to handle protocol-specific status values in network configuration and API interactions.",
      "description_length": 332,
      "index": 155,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CertificateAuthentication",
      "description": "Provides functions to construct, parse, and serialize certificate-based authentication configurations. Works with XML nodes, JSON structures, and query parameters. Used to initialize client certificate chains and convert between external representations and internal state.",
      "description_length": 273,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthenticationType",
      "description": "Converts between a custom type and string, XML, and JSON representations, including parsing from XML nodes and generating AWS query parameters. Operates on a hidden type `t` that encapsulates authentication configurations for client VPNs. Used to serialize and deserialize authentication settings during API interactions and data exchange.",
      "description_length": 339,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DirectoryServiceAuthentication",
      "description": "Provides functions to construct, parse, and serialize authentication data for a directory service, including creating instances from a directory ID, converting to query parameters, and encoding/decoding from JSON. Works with AWS query structures, XML nodes, and JSON values. Used to generate request parameters for directory service API calls and to process responses from XML or JSON payloads.",
      "description_length": 394,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FederatedAuthentication",
      "description": "Provides functions to construct, parse, and serialize federated authentication configurations using SAML provider ARNs. Works with XML nodes, query parameters, and JSON structures to represent and exchange authentication data. Used to initialize and process SAML-based authentication settings in AWS integration scenarios.",
      "description_length": 322,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Placement",
      "description": "Provides functions to construct, parse, and serialize placement configuration data, including availability zones, affinity, and tenancy settings. Works with custom types such as `t`, `Tenancy.t`, and JSON/Query representations. Used to generate AWS API requests and process XML responses related to instance placement.",
      "description_length": 318,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceLifecycle",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings, JSON, and query parameters. Works with XML nodes for parsing and supports creating instances with a generic constructor. Used to serialize and deserialize objects in AWS-related workflows and data exchange scenarios.",
      "description_length": 324,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateAndOverridesResponse",
      "description": "Provides operations to construct, parse, and serialize objects representing EC2 launch template and override configurations. Works with structured data types including launch template specifications and overrides. Used to generate AWS API requests and process XML or JSON responses from EC2 fleet operations.",
      "description_length": 308,
      "index": 162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIdsSet",
      "description": "Provides operations to create, parse, and serialize a list of instance IDs. Works with lists of strings representing AWS instance identifiers. Parses XML nodes into instance ID lists, converts them to query parameters, and serializes/deserializes them in JSON format.",
      "description_length": 267,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PlatformValues",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings, XML parsing, and serialization to AWS query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value through a lazy constructor. Used to transform and encode platform-specific values for API interactions and data exchange.",
      "description_length": 365,
      "index": 164,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateOverridesList",
      "description": "Provides functions to create, parse, and serialize lists of fleet launch template overrides, including converting between XML nodes, JSON, and query parameters. Operates on lists of `FleetLaunchTemplateOverrides.t` values, enabling integration with AWS API representations. Used to process and transmit override configurations in cloud deployment workflows.",
      "description_length": 357,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetCapacityReservationUsageStrategy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle capacity reservation usage data in AWS API interactions, such as converting between internal representations and API request parameters.",
      "description_length": 372,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetSpotCapacityRebalance",
      "description": "Provides operations to construct, parse, serialize, and deserialize capacity rebalance configurations for fleet management. Works with XML nodes, AWS query parameters, and JSON structures. Used to process and transmit fleet capacity adjustment settings in cloud infrastructure workflows.",
      "description_length": 287,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetLaunchSpecification",
      "description": "Constructs and manipulates a configuration for launching EC2 instances in a Spot Fleet, including settings for security groups, instance type, image ID, network interfaces, and spot price. Operates on types like GroupIdentifierList, BlockDeviceMappingList, and InstanceNetworkInterfaceSpecificationList. Used to generate AWS API requests for provisioning fleets of spot instances with customized parameters.",
      "description_length": 407,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateConfig",
      "description": "Provides methods to construct, parse, and serialize configuration objects for EC2 launch templates, including handling overrides and specifications. Works with custom types representing launch template specifications and override lists. Used to generate AWS API requests and process XML or JSON responses from EC2 service interactions.",
      "description_length": 335,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLoadBalancersConfig",
      "description": "Provides functions to construct, parse, and serialize configuration data for classic load balancers, including converting between XML nodes, query parameters, and JSON structures. Works with custom types representing load balancer settings and AWS query formats. Used to generate AWS API requests and process XML responses from load balancer configurations.",
      "description_length": 357,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetGroupsConfig",
      "description": "Provides operations to construct, parse, and serialize target group configurations. Works with XML nodes, AWS query parameters, and JSON structures representing target group data. Used to convert raw XML input into structured configurations and generate AWS API-compatible queries.",
      "description_length": 281,
      "index": 171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotCapacityRebalance",
      "description": "Provides operations to construct, parse, serialize, and deserialize capacity rebalance configurations using XML and JSON formats. Works with XML nodes and AWS query structures, and a concrete data type representing rebalance settings. Used to convert between external representations and internal state for cloud infrastructure management.",
      "description_length": 339,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TagSpecification",
      "description": "Creates a structured representation of resource tags with optional resource type, supports parsing XML nodes into this structure, and converts between query parameters, JSON, and internal format. Works with resource types and tagged lists. Used to generate AWS API requests with specific tagging configurations.",
      "description_length": 311,
      "index": 173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusDetails",
      "description": "Provides operations to construct, parse, and serialize volume status information, including converting between XML nodes, query parameters, and JSON representations. Works with custom types for volume status names and string-based status values. Used to process and transmit detailed volume status data in AWS API interactions.",
      "description_length": 327,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ArchitectureValues",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with bidirectional mappings for string representation. Works with a polymorphic type `t` and associated serialization formats. Used to parse XML input into structured values and generate query or JSON representations for API interactions.",
      "description_length": 320,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationSpecificationResponse",
      "description": "Provides operations to construct, parse, and serialize objects representing capacity reservation configurations, including setting preference and target details. Works with types for capacity reservation preferences and targets, and JSON/XML data structures. Used to process and generate AWS API responses related to capacity reservations.",
      "description_length": 339,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CpuOptions",
      "description": "Provides methods to construct, parse, serialize, and deserialize CPU configuration data, including core count and threads per core. Works with integer-based parameters and JSON/XML data structures. Used to process AWS CPU options in API requests and responses.",
      "description_length": 260,
      "index": 177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeviceType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON values, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize device type information in XML and JSON formats, and to map string inputs to internal representations.",
      "description_length": 332,
      "index": 178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuAssociationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of ElasticGpuAssociation records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert association data between different representation formats in AWS API interactions.",
      "description_length": 280,
      "index": 179,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticInferenceAcceleratorAssociationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of ElasticInferenceAcceleratorAssociation objects. Operates on XML nodes, AWS query structures, and JSON values. Used to process and convert accelerator association data from API responses into structured OCaml values.",
      "description_length": 288,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnclaveOptions",
      "description": "Provides operations to create, parse, and serialize configuration options for an enclave, including converting between XML, query parameters, and JSON formats. Works with boolean flags and structured data representing enclave settings. Used to initialize enclave configurations from XML input and prepare them for API requests or storage.",
      "description_length": 338,
      "index": 181,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HibernationOptions",
      "description": "Provides operations to construct, parse, and serialize configuration options for hibernation settings, including converting between XML nodes, query parameters, and JSON representations. Works with boolean flags and structured data types representing hibernation parameters. Used to initialize and serialize hibernation configurations for cloud instance management.",
      "description_length": 365,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HypervisorType",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent hypervisor types in cloud infrastructure contexts. Enables direct mapping from configuration strings to internal representations and vice versa, supporting AWS API interactions.",
      "description_length": 371,
      "index": 183,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.IamInstanceProfile",
      "description": "Provides functions to construct, parse, and serialize instances of AWS IAM instance profiles, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and structured data representing IAM profiles. Used to generate HTTP requests and process API responses in AWS integration code.",
      "description_length": 328,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceBlockDeviceMappingList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance block device mappings. Operates on lists of `InstanceBlockDeviceMapping.t` values, converting them to query parameters, JSON structures, and from JSON. Used to handle EC2 instance store configurations in API requests and responses.",
      "description_length": 313,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceLifecycleType",
      "description": "Provides conversion between string representations and a type `t` through bidirectional mappings, along with serialization to and from JSON and query formats. Supports parsing from XML nodes and creating instances with a generic constructor. Used to handle instance lifecycle states in AWS interactions, such as translating XML responses into internal representations.",
      "description_length": 368,
      "index": 186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMetadataOptionsResponse",
      "description": "Provides methods to construct, parse, and serialize metadata options for AWS instances, including setting state, HTTP tokens, response hop limit, and endpoint configuration. Works with custom types representing metadata state, HTTP token policies, and endpoint settings. Used to generate API requests and process XML or JSON responses from AWS metadata service configurations.",
      "description_length": 376,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceNetworkInterfaceList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of network interface objects. Operates on lists of `InstanceNetworkInterface.t` values and XML nodes. Used to convert between XML input, JSON format, and query parameters in AWS-related processing.",
      "description_length": 267,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceState",
      "description": "Provides operations to construct, parse, serialize, and deserialize instance state data. Works with integer codes and named instance states, encoding them into query parameters, JSON, or parsing from XML. Used to handle AWS instance state information in API requests and responses.",
      "description_length": 281,
      "index": 189,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LicenseList",
      "description": "Provides functions to create a singleton value, parse XML nodes into a list of license configurations, convert configurations to AWS query parameters, serialize to JSON, and deserialize from JSON. Operates on lists of license configuration records and JSON/AWS query data structures. Used to process and transmit license data in cloud infrastructure setups.",
      "description_length": 357,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Monitoring",
      "description": "Provides functions to create, parse, and convert monitoring data between XML, query, and JSON formats. Works with XML nodes, AWS query parameters, and JSON values. Used to process and serialize monitoring configurations from XML input for API requests.",
      "description_length": 252,
      "index": 191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ProductCodeList",
      "description": "Provides functions to create, parse, and serialize product code lists. Operates on lists of `ProductCode.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle product code data in API requests and responses.",
      "description_length": 261,
      "index": 192,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.StateReason",
      "description": "Provides constructors and parsers for error state representations, including parsing from XML nodes and serializing to query parameters or JSON. Works with string-based code and message fields encapsulated in a record type. Used to handle AWS service error responses by converting between XML, JSON, and query formats.",
      "description_length": 318,
      "index": 193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VirtualizationType",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent virtualization types in cloud infrastructure contexts. Enables direct mapping from configuration strings to internal representations and vice versa, supporting AWS API interactions.",
      "description_length": 375,
      "index": 194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcCidrBlockState",
      "description": "Provides operations to construct, parse, and serialize objects representing the state of a VPC CIDR block, including its status code and message. Works with custom types for VPC CIDR block state and AWS query and JSON formats. Used to handle AWS API responses and generate structured data for network configuration tracking.",
      "description_length": 324,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetCidrBlockState",
      "description": "Provides operations to construct, parse, and serialize objects representing the state of a subnet's CIDR block, including its status code and message. Works with custom types for subnet state codes and AWS-specific data structures like XML nodes and JSON. Used to process and transmit subnet CIDR block status information in AWS API interactions.",
      "description_length": 346,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserBucketDetails",
      "description": "Provides operations to construct, parse, and serialize data related to user bucket details, including S3 bucket and key information. Works with a record type containing optional string fields for S3 bucket and key. Used to generate query parameters and JSON representations for AWS S3 interactions.",
      "description_length": 298,
      "index": 197,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesPrivateIpAddressConfig",
      "description": "Provides functions to create, parse, and serialize configuration for private IP addresses in scheduled instances, including setting a primary flag and a specific IP address. Works with boolean and string values to represent IP address settings. Used to construct and validate IP configurations for cloud instance scheduling.",
      "description_length": 324,
      "index": 198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesIpv6Address",
      "description": "Provides functions to create, parse, and serialize IPv6 address data structures for scheduled instances. Works with a record type containing an optional string-based IPv6 address. Used to construct and convert IPv6 address representations in AWS query and JSON formats.",
      "description_length": 269,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DhcpConfiguration",
      "description": "Provides functions to construct, parse, and serialize DHCP configuration data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string keys and lists of DHCP configuration values. Used to process and transmit DHCP settings in AWS API interactions.",
      "description_length": 301,
      "index": 200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcAttachment",
      "description": "Provides functions to construct, parse, and serialize VPC attachment data, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as `AttachmentStatus.t` and `Aws.BaseTypes.String.t`. Used to process and transmit VPC attachment information in API requests and responses.",
      "description_length": 334,
      "index": 201,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesModificationResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of modifying reserved instances, including converting between XML, query parameters, and JSON formats. Works with string identifiers and configuration records specific to AWS reserved instances. Used to process API responses and prepare data for HTTP requests or storage.",
      "description_length": 362,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesId",
      "description": "Provides operations to construct, parse, and serialize a reserved instances identifier, including converting between XML nodes, query parameters, and JSON representations. Works with a custom type encapsulating a string-based identifier. Used to handle AWS API responses and requests involving reserved instance IDs.",
      "description_length": 316,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PermissionGroup",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DnsEntry",
      "description": "Provides operations to construct, parse, serialize, and deserialize DNS entry data. Works with structured data including DNS names, hosted zone IDs, and XML or JSON representations. Used to generate AWS API queries from DNS configurations and to extract DNS details from XML responses.",
      "description_length": 285,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilterRule",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Traffic Mirror filter rules, including setting traffic direction, port ranges, CIDR blocks, and actions. Works with custom types such as traffic direction, port ranges, and rule actions. Used to configure network traffic monitoring rules in AWS VPC.",
      "description_length": 329,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorNetworkService",
      "description": "Converts between string representations and an internal type `t` using bidirectional mappings, and supports serialization to and from JSON and query parameters. Parses XML nodes into instances of `t` and generates string representations for API interactions. Handles generic type construction and is designed for data interchange in network service contexts.",
      "description_length": 358,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AutoAcceptSharedAttachmentsValue",
      "description": "Provides conversion between a custom type and string representations, including XML parsing and JSON serialization. Works with a polymorphic type `t` and associated string, query, and JSON encodings. Used to handle shared attachment values in AWS requests and responses.",
      "description_length": 270,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DefaultRouteTableAssociationValue",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query parameters and JSON. Works with a polymorphic type `t` that can be instantiated with any value through a constructor function. Used to handle route table association values in AWS API interactions, enabling data exchange and configuration management.",
      "description_length": 380,
      "index": 209,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DefaultRouteTablePropagationValue",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic type `t` that can be instantiated with any value via a factory function. Used to handle route table propagation values in AWS API interactions, enabling structured data exchange and configuration.",
      "description_length": 370,
      "index": 210,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DnsSupportValue",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate DNS-related values in AWS API interactions.",
      "description_length": 265,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.MulticastSupportValue",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnEcmpSupportValue",
      "description": "Converts between string representations and an internal type, including XML parsing and AWS query/json serialization. Works with a custom type `t` and provides bidirectional mappings for string and XML formats. Handles creation of default values and safe parsing from XML nodes.",
      "description_length": 278,
      "index": 213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCount",
      "description": "Provides operations to create, parse, and serialize instances with an optional count and state, using a custom record type that includes an integer and a listing state. Works with XML nodes for parsing and AWS query or JSON formats for serialization. Used to handle instance listings in AWS API interactions, such as filtering or paginating results.",
      "description_length": 349,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PriceSchedule",
      "description": "Provides operations to construct, parse, serialize, and deserialize price schedule data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data containing active status, currency code, price value, and term duration. Used to handle pricing information in API requests and responses, such as configuring subscription costs or discount schedules.",
      "description_length": 394,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnConnectionStatusCode",
      "description": "Provides conversion between a status code type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` representing client VPN connection statuses. Used to handle status code data in AWS API interactions, such as converting between XML responses and internal representations.",
      "description_length": 354,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatusEvent",
      "description": "Provides operations to construct, parse, serialize, and deserialize event data related to instance status changes. Works with structured data including event IDs, codes, descriptions, and datetime ranges. Used to process and exchange instance status event information in AWS API interactions.",
      "description_length": 292,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatusDetailsList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of instance status details. Works with XML nodes, AWS query parameters, and JSON structures. Used to process and transmit instance status information from API responses.",
      "description_length": 240,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SummaryStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse XML responses and generate JSON or query parameters for AWS API interactions.",
      "description_length": 286,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePermissionStateCode",
      "description": "Converts between string representations and an internal state type for network interface permissions, supporting XML parsing and query/json serialization. Operates on a custom type representing permission states, enabling structured data handling in AWS interactions. Used to process and encode permission states from XML responses and prepare them for API queries or JSON payloads.",
      "description_length": 382,
      "index": 220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AvailableInstanceCapacityList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance capacity data. Operates on lists of `InstanceCapacity.t` values and XML or JSON representations. Used to process and transmit instance capacity information in AWS API interactions.",
      "description_length": 262,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HostInstance",
      "description": "Provides methods to construct, parse, serialize, and deserialize AWS instance data, including creating instances with specific IDs, types, and owner IDs, and converting between XML, query, and JSON formats. Works with AWS-specific string types and structured data representing EC2 instances. Used to process and transmit instance metadata in API requests and responses.",
      "description_length": 369,
      "index": 222,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulitcastDomainAssociationState",
      "description": "Provides conversion between string representations and a type `t` for transit gateway multicast domain association states, including parsing from XML and serializing to query parameters and JSON. Works with XML nodes, strings, and AWS-specific query and JSON types. Used to process and encode state information from AWS API responses.",
      "description_length": 334,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IdFormat",
      "description": "Provides methods to construct, parse, and serialize identifier formats with optional deadline, resource, and long ID settings. Works with custom type t, XML nodes, query parameters, and JSON structures. Used to generate and interpret AWS-style identifier formats in request and response handling.",
      "description_length": 296,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetErrorCode",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic variant type `t` that encapsulates error codes for fleet operations. Used to handle AWS fleet error responses in a structured and interoperable way.",
      "description_length": 323,
      "index": 225,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreStateErrorItem",
      "description": "Provides operations to construct, parse, and serialize objects representing errors from disabling fast snapshot restore, including handling availability zones and error details. Works with AWS-specific types such as strings, queries, and JSON structures. Used to process and transmit error information in AWS API interactions.",
      "description_length": 326,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.OccurrenceDaySet",
      "description": "Provides operations to create a list of integers, parse XML nodes into such a list, and convert between list representations and query or JSON formats. Works with lists of integer values, typically used for representing day-of-week occurrences. Used to process and serialize data from XML sources into structured integer lists for API interactions.",
      "description_length": 348,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.S3Storage",
      "description": "Provides functions to construct, parse, and serialize S3 storage configurations, including handling AWS credentials, bucket names, object prefixes, and upload policies. Works with types such as strings, blobs, and JSON structures to represent and manipulate S3 storage settings. Used to generate query parameters for S3 API requests and to convert between XML and internal representations during configuration parsing.",
      "description_length": 418,
      "index": 228,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.StaleIpPermission",
      "description": "Provides methods to construct, parse, and serialize IP permission data including port ranges, protocols, IP ranges, prefix lists, and user groups. Works with types such as integer ports, string protocols, and sets of IP ranges, prefix list IDs, and user ID pairs. Used to generate AWS API queries and JSON representations for security group configurations.",
      "description_length": 356,
      "index": 229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeAttachment",
      "description": "Provides operations to construct, parse, serialize, and deserialize volume attachment data, including setting attributes like attach time, device, instance ID, state, volume ID, and delete-on-termination flag. Works with structured data types representing AWS volume attachments and XML or JSON representations. Used to process AWS API responses and generate query parameters for volume attachment requests.",
      "description_length": 407,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IKEVersionsRequestList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of IKE version request values. Operates on lists of `IKEVersionsRequestListValue.t` and XML nodes. Used to process and generate AWS query and JSON representations of IKE version configurations.",
      "description_length": 263,
      "index": 231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1DHGroupNumbersRequestList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of Diffie-Hellman group numbers for Phase 1 key exchange. Operates on lists of `Phase1DHGroupNumbersRequestListValue.t` values and XML or JSON representations. Used to generate AWS query parameters and process XML responses in cryptographic configuration workflows.",
      "description_length": 335,
      "index": 232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1EncryptionAlgorithmsRequestList",
      "description": "Constructs a list of encryption algorithm request values from a single element. Parses XML nodes into a structured list of encryption algorithm configurations. Converts between structured data and query or JSON representations for API interactions.",
      "description_length": 248,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase1IntegrityAlgorithmsRequestList",
      "description": "Constructs a list of phase 1 integrity algorithm request values from a single element. Parses XML nodes into a list of structured algorithm requests. Serializes and deserializes the list to and from AWS query and JSON formats for API communication.",
      "description_length": 248,
      "index": 234,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Phase2DHGroupNumbersRequestList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of Diffie-Hellman group numbers for Phase 2 key exchange. Operates on lists of `Phase2DHGroupNumbersRequestListValue.t` values and XML or JSON representations. Used to generate AWS query parameters and process XML responses in network protocol implementations.",
      "description_length": 333,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2EncryptionAlgorithmsRequestList",
      "description": "Constructs a list of encryption algorithm request values from a single element. Parses XML nodes into a list of structured encryption algorithm requests. Serializes and deserializes the list to and from query parameters and JSON format.",
      "description_length": 236,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Phase2IntegrityAlgorithmsRequestList",
      "description": "Constructs a list of phase 2 integrity algorithm request values from a single element, parses XML nodes into a list of these values, converts the list to an AWS query structure, serializes the list to JSON, and deserializes JSON back into the list. Operates on XML node sequences and AWS query and JSON structures. Used to process and encode phase 2 security configuration data for API requests and responses.",
      "description_length": 409,
      "index": 237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EbsEncryptionSupport",
      "description": "Converts between string representations and an internal type, including XML parsing and query/json serialization. Works with custom data structures and XML nodes for data interchange. Used to process and encode encryption settings from XML responses into structured data.",
      "description_length": 271,
      "index": 238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EbsNvmeSupport",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including parsing and serialization. Works with `t` and standard data types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`. Used to transform and encode data for AWS API interactions and XML/JSON processing.",
      "description_length": 289,
      "index": 239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EbsOptimizedInfo",
      "description": "Provides constructors and parsers for handling EC2 instance optimization metrics, including bandwidth, throughput, and IOPS. Works with integer and double types to represent baseline and maximum performance values. Used to generate query parameters, JSON representations, and parse XML responses from AWS API calls.",
      "description_length": 315,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EbsOptimizedSupport",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, including parsing and serialization. Works with a polymorphic type `t` and associated string representations. Used to transform data structures into query parameters, JSON, and XML formats for AWS interactions.",
      "description_length": 286,
      "index": 241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FpgaDeviceInfoList",
      "description": "Provides functions to create, parse, and serialize FPGA device information lists. Operates on lists of `FpgaDeviceInfo.t` records, converting them to AWS query parameters, JSON structures, and parsing XML nodes into structured data. Used to process and transmit FPGA device metadata in cloud infrastructure workflows.",
      "description_length": 317,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GpuDeviceInfoList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of GPU device information. Operates on lists of `GpuDeviceInfo.t` records and XML nodes, converting them to AWS query parameters, JSON structures, and back. Used to process and transmit GPU metadata in cloud infrastructure workflows.",
      "description_length": 303,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InferenceDeviceInfoList",
      "description": "Handles creation, parsing, and serialization of device information lists. Processes XML nodes into structured device lists and converts between JSON and query formats. Used to manage device metadata in AWS inference contexts.",
      "description_length": 225,
      "index": 244,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DiskInfoList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of disk information objects. Operates on XML node structures and AWS query or JSON representations. Used to convert raw XML data from API responses into structured disk info lists and back for request generation.",
      "description_length": 282,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EphemeralNvmeSupport",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings and JSON/XML parsing. Works with XML nodes, JSON values, and query parameters for data serialization and deserialization. Used to transform raw input from XML or JSON into structured data for API interactions.",
      "description_length": 316,
      "index": 246,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EnaSupport",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse XML input into structured data and generate JSON or query parameters for API interactions.",
      "description_length": 299,
      "index": 247,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkCardInfoList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of network card information. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert raw XML data from API responses into structured lists and back into query parameters or JSON for API requests.",
      "description_length": 299,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupStrategyList",
      "description": "Provides functions to create, parse, and serialize lists of placement group strategies. Operates on lists of `PlacementGroupStrategy.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS placement group strategy configurations in API requests and responses.",
      "description_length": 315,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ArchitectureTypeList",
      "description": "Provides functions to create, parse, and serialize lists of architecture types. Operates on lists of `ArchitectureType.t` and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS architecture type data in API requests and responses.",
      "description_length": 266,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RootDeviceType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and supports serialization to and from JSON and query formats. Parses XML nodes into instances of `t` and provides a generic construction function. Used to handle root device type information in AWS API interactions.",
      "description_length": 301,
      "index": 251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UsageClassType",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including parsing and serialization. Works with `t` and standard data structures like lists and options. Used to transform data for API requests and XML/JSON processing.",
      "description_length": 249,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CoreCountList",
      "description": "Creates and manipulates lists of integer values, supporting conversion to and from JSON and query formats, and parsing from XML nodes. Operates on lists of AWS integer types, enabling structured data handling in API interactions. Used to serialize and deserialize integer lists in request and response workflows.",
      "description_length": 312,
      "index": 253,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ThreadsPerCoreList",
      "description": "Provides functions to create a singleton list, parse XML nodes into a list of integers, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of integer types representing thread counts per core. Used to handle AWS API responses and requests involving thread configuration data.",
      "description_length": 338,
      "index": 254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnRouteStatusCode",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent client VPN route status codes. Used to handle XML and JSON data in AWS API interactions, such as processing responses from network service calls.",
      "description_length": 335,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VgwTelemetry",
      "description": "Provides functions to construct, parse, and serialize telemetry data including route counts, status changes, IP addresses, and certificate ARNs. Works with custom record types containing timestamps, strings, and status enums. Used to convert raw XML data into structured telemetry objects and generate query or JSON representations for API interactions.",
      "description_length": 353,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TunnelInsideIpVersion",
      "description": "Provides conversion between string representations and a custom type `t`, including parsing from XML nodes and serialization to query and JSON formats. Works with `t` and string types, supporting structured data exchange in network protocols. Used to transform configuration values from XML or JSON into typed objects for internal processing.",
      "description_length": 342,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TunnelOptionsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of tunnel options. Operates on lists of `TunnelOption.t` and XML or JSON representations. Used to convert configuration data into query parameters for API requests or JSON payloads for storage.",
      "description_length": 263,
      "index": 258,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpnStaticRoute",
      "description": "Provides functions to construct, parse, and serialize static route configurations for a VPN, including setting destination CIDR blocks, sources, and states. Works with custom types representing route sources and states, as well as XML and JSON data formats. Used to generate AWS API requests and process XML responses containing static route information.",
      "description_length": 354,
      "index": 259,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociationStatusCode",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON values, along with bidirectional mappings for status codes. Works with `t` and standard data types like `string`, `Ezxmlm.nodes`, and `Aws.Query.t`. Used to serialize and deserialize status codes in API requests and responses, and to map external representations to internal state.",
      "description_length": 360,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnectionStateReasonCode",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent state reasons for VPC peering connections. Used to handle XML and JSON data in AWS API interactions, enabling data transformation for network configuration states.",
      "description_length": 353,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CidrBlockSet",
      "description": "Provides operations to create, parse, and serialize CIDR block lists. Works with lists of `CidrBlock.t` values and XML or JSON representations. Parses XML nodes into a list of CIDR blocks, converts them to AWS query parameters, and serializes/deserializes them to and from JSON.",
      "description_length": 278,
      "index": 262,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6CidrBlockSet",
      "description": "Processes and serializes IPv6 CIDR block lists. Accepts XML nodes to extract CIDR blocks, converts them to query parameters, and handles JSON serialization and deserialization. Works with lists of Ipv6CidrBlock.t values for network configuration tasks.",
      "description_length": 252,
      "index": 263,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnectionOptionsDescription",
      "description": "Provides functions to construct, parse, and serialize options for VPC peering connections, including settings for DNS resolution and traffic routing between VPCs and classic links. Works with boolean flags and structured data representing peering configuration parameters. Used to generate AWS API requests and process XML or JSON responses from VPC peering operations.",
      "description_length": 369,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAclAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing network ACL associations, including converting between XML, JSON, and query parameters. Works with string-based identifiers for network ACLs and subnets. Used to process and transmit association data in AWS API interactions.",
      "description_length": 299,
      "index": 265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAclEntry",
      "description": "Provides operations to construct, parse, and serialize network access control list entries, including setting CIDR blocks, port ranges, protocols, and rule actions. Works with types such as IcmpTypeCode, PortRange, and RuleAction to represent network rules. Used to generate AWS API requests and process XML or JSON responses from network configuration services.",
      "description_length": 362,
      "index": 266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelBatchErrorCode",
      "description": "Provides conversion between error codes and their string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` representing batch cancellation error codes. Used to handle error code mapping in AWS API interactions and data serialization workflows.",
      "description_length": 317,
      "index": 267,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AccountAttributeValue",
      "description": "Provides operations to construct, parse, and serialize account attribute values between XML, query, and JSON formats. Works with string-based attribute values and structured JSON data. Used to handle AWS account attribute data in API requests and responses.",
      "description_length": 257,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroupIdentifier",
      "description": "Provides methods to construct, parse, and serialize security group identifiers using either a group ID or name. Works with AWS base string types and JSON/Query data structures. Used to generate API-compatible representations for EC2 security group references.",
      "description_length": 259,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAssociationState",
      "description": "Provides conversion between string representations and a type `t` using bidirectional mappings, along with serialization to and from JSON and query parameters. Works with a custom type `t` that likely represents states of a transit gateway association. Used to parse XML nodes into state values and generate AWS-compatible query and JSON representations.",
      "description_length": 354,
      "index": 270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceIpv6Address",
      "description": "Provides operations to construct, parse, and serialize IPv6 address data, including converting between XML nodes, query parameters, and JSON representations. Works with string-based IPv6 addresses and structured data types for network interface configurations. Used to process and encode IPv6 addresses in AWS API interactions.",
      "description_length": 327,
      "index": 271,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePrivateIpAddress",
      "description": "Provides operations to construct, parse, and serialize objects representing private IP addresses associated with network interfaces, including handling associations, primary status, DNS names, and IP addresses. Works with custom types for network interface associations and base types for boolean and string values. Used to generate query parameters for API requests and to convert data to and from JSON format.",
      "description_length": 411,
      "index": 272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RecurringCharge",
      "description": "Creates and manipulates recurring charge data with specified amount and frequency. Processes XML nodes into structured data and converts between internal representation and query or JSON formats. Used to handle billing cycles and subscription renewals in financial or service management systems.",
      "description_length": 295,
      "index": 273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DnsNameState",
      "description": "Handles conversion between DNS name strings and an internal representation, including XML parsing and AWS query/json serialization. Works with the opaque type `t` and provides bidirectional mappings between string formats and structured data. Used to process DNS names in network protocols and cloud service interactions.",
      "description_length": 321,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceTypeDetail",
      "description": "Provides operations to construct, parse, serialize, and deserialize service type data. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and structured service type representations for API processing.",
      "description_length": 249,
      "index": 275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportInstanceVolumeDetailSet",
      "description": "Provides functions to create, parse, and serialize lists of volume detail items for import operations. Works with XML nodes, AWS query parameters, and JSON structures. Parses XML input into a list of items, converts them to AWS query format, and handles JSON serialization and deserialization.",
      "description_length": 293,
      "index": 276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ApplianceModeSupportValue",
      "description": "Converts between string representations and a custom type `t` using bidirectional mappings, and supports serialization to and from query parameters and JSON. Handles XML parsing into `t` and provides a generic constructor for initializing values. Used to encode and decode appliance mode settings in AWS API interactions.",
      "description_length": 321,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6SupportValue",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with a generic value. Used to handle IPv6 address values in AWS API interactions, enabling safe conversion and validation during request construction and response parsing.",
      "description_length": 382,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteAttachment",
      "description": "Provides functions to construct, parse, and serialize objects representing attachments between transit gateways and resources. Works with types including string identifiers, resource types, and JSON or query structures. Used to handle AWS API responses and requests involving network route attachments.",
      "description_length": 302,
      "index": 279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImageStateCode",
      "description": "Converts between a custom type and string representations, XML nodes, and JSON formats. Handles serialization and deserialization for structured data used in FPGA image state management. Supports mapping between internal state values and external query parameters.",
      "description_length": 264,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreStateErrorItem",
      "description": "Provides operations to construct, parse, and serialize error items related to enabling fast snapshot restore, including handling availability zones and error details. Works with AWS-specific types such as strings, queries, and JSON structures. Used to process and represent errors in API responses for snapshot restoration workflows.",
      "description_length": 333,
      "index": 281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PropagatingVgw",
      "description": "Provides operations to create, parse, and serialize a virtual gateway object, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to construct and manipulate virtual gateway data structures for API interactions.",
      "description_length": 329,
      "index": 282,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Route",
      "description": "Constructs a route configuration with specified destinations and targets, including CIDR blocks, gateway IDs, and instance references. Parses XML nodes into route structures and serializes routes to query parameters, JSON objects, and deserializes from JSON. Used to define and manipulate routing rules in network configurations.",
      "description_length": 329,
      "index": 283,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RouteTableAssociation",
      "description": "Provides operations to construct, parse, and serialize route table association data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data containing route table IDs, subnet IDs, gateway IDs, and association states. Used to handle AWS route table association responses and requests in network configuration workflows.",
      "description_length": 368,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreditSpecification",
      "description": "Creates a structured representation of credit specifications, supporting parsing from XML nodes, conversion to query parameters, and serialization to JSON. Operates on a record type containing optional CPU credit information. Used to process and encode credit-related data in API requests and responses.",
      "description_length": 303,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuSpecificationResponseList",
      "description": "Handles conversion and parsing of Elastic GPU specification responses. Accepts XML nodes to generate a list of response objects, serializes them into query parameters, and encodes/decodes them as JSON. Processes structured data representing GPU configurations for cloud infrastructure interactions.",
      "description_length": 298,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateBlockDeviceMappingList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of block device mappings for EC2 launch templates. Operates on lists of `LaunchTemplateBlockDeviceMapping.t` values, converting them to query parameters, JSON structures, and from JSON. Used to handle AWS API responses and requests involving multiple block device configurations.",
      "description_length": 349,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateCapacityReservationSpecificationResponse",
      "description": "Provides functions to construct, parse, and serialize objects representing capacity reservation specifications for launch templates. Works with types such as capacity reservation preferences and targets, and supports XML and JSON serialization. Used to generate AWS API requests and process responses related to instance capacity reservations.",
      "description_length": 343,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateCpuOptions",
      "description": "Provides operations to construct, parse, and serialize CPU options for EC2 launch templates, including setting core count and threads per core. Works with integer values and JSON/XML data structures for configuration. Used to generate AWS API requests and process responses from EC2 metadata.",
      "description_length": 292,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateElasticInferenceAcceleratorResponseList",
      "description": "Converts XML nodes into a list of Elastic Inference accelerator response objects, and serializes/deserializes these lists to and from query parameters and JSON format. Operates on lists of structured response data tied to EC2 launch templates. Used to process and transmit accelerator configuration details in AWS API interactions.",
      "description_length": 331,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateEnclaveOptions",
      "description": "Provides operations to construct, parse, and serialize enclave options for EC2 launch templates, including creating instances with optional enclave enablement, converting to query parameters, and handling JSON serialization and deserialization. Works with boolean flags and structured data representing enclave configurations. Used to configure secure enclaves in EC2 instances via AWS API interactions.",
      "description_length": 403,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateHibernationOptions",
      "description": "Provides functions to create, parse, and serialize hibernation options for EC2 instances, including converting between XML, query parameters, and JSON formats. Works with a record type containing a boolean flag for hibernation configuration. Used to handle hibernation settings during instance launch configuration parsing and API requests.",
      "description_length": 340,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateIamInstanceProfileSpecification",
      "description": "Provides functions to construct, parse, and serialize an IAM instance profile specification, including converting between XML nodes, query parameters, and JSON representations. Works with string-based ARN and name identifiers for AWS resources. Used to configure instance profiles in EC2 launch templates with precise control over IAM roles.",
      "description_length": 341,
      "index": 293,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceMarketOptions",
      "description": "Provides operations to construct, parse, and serialize instances with market options for EC2 launch templates, including spot instance configurations. Works with types representing market types and spot options specific to AWS EC2. Used to generate HTTP query parameters and JSON representations for API interactions.",
      "description_length": 317,
      "index": 294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceMetadataOptions",
      "description": "Provides functions to construct, parse, and serialize metadata options for EC2 instance launch templates, including settings for HTTP tokens, endpoint access, and response hop limits. Works with custom types representing metadata state, HTTP token policies, and endpoint configurations. Used to configure instance metadata behavior in AWS EC2 launches, ensuring secure and controlled access to instance data.",
      "description_length": 408,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceNetworkInterfaceSpecificationList",
      "description": "Handles creation, parsing, and serialization of network interface specifications for EC2 instances. Operates on lists of network interface objects, converting between XML, JSON, and query parameters. Used to process and generate AWS API requests involving instance network configurations.",
      "description_length": 288,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateLicenseList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of license configurations for EC2 launch templates. Operates on lists of `LaunchTemplateLicenseConfiguration.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle license data in AWS API interactions, such as when defining or modifying EC2 instances with specific licensing requirements.",
      "description_length": 399,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplatePlacement",
      "description": "Provides functions to construct, parse, and serialize placement configurations for EC2 instances, including availability zones, tenancy settings, and group affiliations. Works with string, integer, and custom tenancy types to represent instance placement attributes. Used to generate AWS API requests and process XML or JSON responses from EC2 service calls.",
      "description_length": 358,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateTagSpecificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of launch template tag specifications. Operates on lists of `LaunchTemplateTagSpecification.t` values, converting them to and from XML, query parameters, and JSON formats. Used to handle AWS EC2 launch template tag configurations in API requests and responses.",
      "description_length": 330,
      "index": 299,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplatesMonitoring",
      "description": "Provides operations to create, parse, and serialize monitoring configurations for EC2 launch templates, including enabling monitoring and converting between XML, query, and JSON formats. Works with boolean flags and structured data representing monitoring settings. Used to generate AWS API requests and process responses from EC2 service interactions.",
      "description_length": 352,
      "index": 300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ShutdownBehavior",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and string-based representations. Used to handle shutdown configurations in AWS-related workflows, including parsing XML responses and generating JSON payloads.",
      "description_length": 316,
      "index": 301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ValueStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings. Operates on lists of `Aws.BaseTypes.String.t` values. Parses XML nodes into string lists, converts them to query parameters, and handles JSON serialization and deserialization for list structures.",
      "description_length": 278,
      "index": 302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateEbsBlockDeviceRequest",
      "description": "Provides functions to construct, parse, and serialize EBS block device configurations for EC2 launch templates, including encryption settings, volume size, and snapshot references. Works with types such as boolean flags, integers for IOPS and volume size, and strings for keys and snapshot IDs. Used to generate AWS API-compatible query parameters and JSON structures for configuring instance storage.",
      "description_length": 401,
      "index": 303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIpv6AddressListRequest",
      "description": "Handles parsing and serialization of IPv6 address requests from XML and JSON formats, and constructs query parameters for API interactions. Operates on lists of IPv6 address request objects, each representing a specific network configuration. Used to convert raw XML data from API responses into structured request objects and vice versa for data transmission.",
      "description_length": 360,
      "index": 304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PoolCidrBlock",
      "description": "Provides operations to create, parse, and serialize CIDR block data, including converting between XML nodes, query parameters, and JSON representations. Works with AWS string types and JSON structures to handle network range specifications. Used to process and encode CIDR blocks in API requests and responses.",
      "description_length": 310,
      "index": 305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateErrorCode",
      "description": "Provides conversion between error codes and their string representations, including parsing from XML and serializing to query and JSON formats. Works with a custom type `t` representing launch template error codes. Used to handle AWS API error responses by converting between internal representations and external data formats.",
      "description_length": 327,
      "index": 306,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RunInstancesMonitoringEnabled",
      "description": "Provides operations to create, parse, and serialize a configuration object that tracks instance monitoring status, using a boolean flag. Works with AWS base types, XML nodes, query parameters, and JSON structures. Used to generate API requests and process responses related to EC2 instance monitoring settings.",
      "description_length": 310,
      "index": 307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteQueuedReservedInstancesErrorCode",
      "description": "Converts between string representations and a custom type for handling error codes related to deleting reserved instances, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a polymorphic type that can be instantiated with arbitrary values. Used to process and serialize error responses in AWS API interactions.",
      "description_length": 346,
      "index": 308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ContainerFormat",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings for string representation and parsing. Works with `t`, `string`, `Ezxmlm.nodes`, and `Aws.Query.t`/`Aws.Json.t` types. Used to serialize and deserialize data structures for web service interactions and configuration storage.",
      "description_length": 337,
      "index": 309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportEnvironment",
      "description": "Provides conversion between a custom type and string representations, including bidirectional mapping, XML parsing, and serialization to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to transform environment configurations into structured data for API requests and external processing.",
      "description_length": 343,
      "index": 310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IpPermission",
      "description": "Provides methods to construct, parse, and serialize network permission configurations using specific port ranges, IP ranges, IPv6 ranges, prefix lists, and user group pairs. Works with custom types such as port integers, string protocols, and lists of IP ranges, prefix lists, and user group pairs. Used to generate AWS API requests and handle JSON/XML representations of security group permissions.",
      "description_length": 399,
      "index": 311,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociatedTargetNetwork",
      "description": "Provides operations to construct, parse, and serialize network configuration data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data representing network identifiers and types, such as AWS network IDs and associated network types. Used to process and transmit network settings in API requests and responses.",
      "description_length": 368,
      "index": 312,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnEndpointAttributeStatus",
      "description": "Provides operations to construct, parse, and serialize data structures representing the status of a client VPN endpoint, including code and message fields. Works with custom types for status codes and JSON/Query serialization. Used to handle API responses and requests involving client VPN endpoint states.",
      "description_length": 306,
      "index": 313,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthentication",
      "description": "Provides functions to construct, parse, and serialize client VPN authentication configurations, including directory service, mutual, and federated authentication settings. Works with custom types representing authentication methods and XML or JSON data structures. Used to generate AWS API requests and process responses for client VPN setup.",
      "description_length": 342,
      "index": 314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnEndpointStatusCode",
      "description": "Provides conversion between a status code type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` representing client VPN endpoint statuses. Used to handle status code transformations in AWS API interactions and data serialization workflows.",
      "description_length": 325,
      "index": 315,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateOverridesRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing overrides for EC2 fleet launch templates, including setting instance types, spot price limits, subnet IDs, availability zones, weighted capacities, priorities, and placement constraints. Works with types such as instance types, strings, doubles, and placement configurations. Used to generate HTTP query parameters and JSON representations for API requests involving EC2 fleet configurations.",
      "description_length": 467,
      "index": 316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InternetGatewayAttachment",
      "description": "Provides functions to construct, parse, and serialize objects representing internet gateway attachments, including converting between XML nodes, query parameters, and JSON. Works with types such as attachment status, VPC ID, and structured data representations. Used to process and transmit attachment details in AWS API interactions.",
      "description_length": 334,
      "index": 317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetError",
      "description": "Provides constructors and parsers for error representations tied to fleet operations, including methods to build instances from XML nodes, convert to query parameters, and serialize/deserialize JSON. Works with types such as launch templates, instance lifecycles, and error codes. Used to handle and exchange error details in AWS API interactions.",
      "description_length": 347,
      "index": 318,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetsInstances",
      "description": "Provides operations to construct, parse, and serialize instances with specific attributes like launch templates, lifecycle, instance IDs, instance types, and platforms. Works with custom types such as InstanceIdsSet, InstanceLifecycle, and PlatformValues. Used to generate AWS API requests and handle JSON/XML representations of instance configurations.",
      "description_length": 353,
      "index": 319,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateConfig",
      "description": "Provides functions to construct, parse, and serialize configurations for fleet launch templates, including creating instances with optional specifications and overrides. Works with structured data types such as launch template specifications and overrides lists. Used to generate AWS API queries and JSON representations for fleet deployment settings.",
      "description_length": 351,
      "index": 320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationOptions",
      "description": "Provides operations to create, parse, and serialize capacity reservation options with a specified usage strategy. Works with XML nodes, AWS query parameters, and JSON structures. Used to configure and exchange capacity reservation settings in cloud infrastructure requests.",
      "description_length": 273,
      "index": 321,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetOnDemandAllocationStrategy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle dynamic allocation strategy configurations in AWS requests and responses.",
      "description_length": 309,
      "index": 322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetSpotMaintenanceStrategies",
      "description": "Provides operations to construct, parse, serialize, and deserialize fleet spot maintenance strategies, including capacity rebalance configurations. Works with XML nodes, AWS query parameters, and JSON structures. Used to generate AWS API requests and process responses for managing EC2 fleet spot instance maintenance.",
      "description_length": 318,
      "index": 323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotAllocationStrategy",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceInterruptionBehavior",
      "description": "Handles conversion between a custom type and string, XML, and JSON representations. Provides parsing from XML nodes and serialization to query parameters. Supports safe conversion from and to string with explicit error handling.",
      "description_length": 228,
      "index": 325,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DefaultTargetCapacityType",
      "description": "Converts between a custom type and string, XML, and JSON representations. Handles parsing from XML nodes and serializes to AWS query parameters. Supports safe construction of values with a generic factory function.",
      "description_length": 214,
      "index": 326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllocationStrategy",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Supports bidirectional mapping between `t` and strings, and includes a generic `make` function for initializing values. Used to handle structured data in API requests and responses, ensuring consistent serialization and deserialization.",
      "description_length": 390,
      "index": 327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExcessCapacityTerminationPolicy",
      "description": "Provides conversion between string representations and a type `t` using bidirectional mappings, along with serialization to and from JSON and query parameters. Works with XML nodes for parsing and a custom type `t` representing termination policies. Used to convert XML configuration data into a structured policy object and generate API-compatible query and JSON representations.",
      "description_length": 380,
      "index": 328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetType",
      "description": "Provides conversion between string representations and a type `t`, including parsing from XML nodes and serialization to AWS query and JSON formats. Works with a custom type `t` and associated string mappings. Used to transform fleet type data for API requests and configuration parsing.",
      "description_length": 287,
      "index": 329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchSpecsList",
      "description": "Constructs a value of type 'a with a deferred initialization function, parses XML nodes into a list of spot fleet launch specifications, converts the list to an AWS query structure, serializes and deserializes the list to and from JSON format. Operates on XML node structures, AWS query objects, and JSON values. Used to process and transmit spot fleet configuration data in cloud infrastructure workflows.",
      "description_length": 406,
      "index": 330,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateConfigList",
      "description": "Provides functions to create, parse, and serialize lists of launch template configurations. Operates on lists of `LaunchTemplateConfig.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS launch template configurations in API requests and responses.",
      "description_length": 308,
      "index": 331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LoadBalancersConfig",
      "description": "Provides operations to construct, parse, serialize, and deserialize configuration data for load balancers, including classic load balancers and target groups. Works with structured data types such as configuration records and JSON representations. Used to generate AWS API queries from configuration objects and to reconstruct configurations from XML or JSON input.",
      "description_length": 365,
      "index": 332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.OnDemandAllocationStrategy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be instantiated with a provided value. Used to handle dynamic allocation strategies in AWS-related data processing pipelines.",
      "description_length": 310,
      "index": 333,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotMaintenanceStrategies",
      "description": "Provides operations to construct, parse, serialize, and deserialize spot maintenance strategy configurations. Works with XML nodes, AWS query parameters, and JSON structures. Used to generate AWS API requests and process responses related to spot instance maintenance policies.",
      "description_length": 277,
      "index": 334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TagSpecificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of tag specifications. Operates on lists of `TagSpecification.t` values and XML nodes, converting them to AWS query parameters, JSON structures, and vice versa. Used to handle AWS resource tag configurations in API requests and responses.",
      "description_length": 308,
      "index": 335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZoneMessage",
      "description": "Provides operations to construct, parse, and serialize messages related to AWS availability zones, including converting between XML nodes, query parameters, and JSON representations. Works with custom message types encapsulating zone information and error handling. Used to process and generate structured data for API interactions involving availability zones.",
      "description_length": 361,
      "index": 336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusAction",
      "description": "Provides operations to construct, parse, and serialize objects representing volume status actions, including setting code, description, event ID, and event type. Works with string-based data and JSON/Query formats for serialization and deserialization. Used to generate structured data for API requests and process XML responses from AWS services.",
      "description_length": 347,
      "index": 337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusAttachmentStatus",
      "description": "Provides operations to construct, parse, and serialize a volume status attachment status object, including converting between XML nodes, query parameters, and JSON representations. Works with string-based identifiers such as I/O performance and instance ID. Used to process and transmit volume attachment status data in AWS API interactions.",
      "description_length": 341,
      "index": 338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusEvent",
      "description": "Represents volume status events with methods to construct, parse, and serialize event data. Works with structured data including event IDs, instance IDs, timestamps, and descriptions. Used to process and transmit AWS volume status updates in API requests and responses.",
      "description_length": 269,
      "index": 339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusDetailsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume status details. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and convert volume status data from API responses into structured OCaml values.",
      "description_length": 262,
      "index": 340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusInfoStatus",
      "description": "Converts between a custom type and string representations, including XML parsing and JSON serialization. Works with a polymorphic type that can be instantiated with any value. Used to handle status information in AWS queries and JSON responses.",
      "description_length": 244,
      "index": 341,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthorizationRuleStatusCode",
      "description": "Provides conversion between string representations and a type `t` used to encode status codes for client VPN authorization rules. Supports parsing from XML nodes, serializing to query parameters and JSON, and includes a generic `make` function for initializing values. Used to handle status code data in AWS API interactions and XML/JSON processing workflows.",
      "description_length": 359,
      "index": 342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulInstanceCreditSpecificationErrorCode",
      "description": "Provides conversion between string representations and a type `t` using bidirectional mappings, along with serialization to and from JSON and query formats. Works with a custom type `t` that likely represents error codes related to instance credit specifications. Parses XML nodes into the type and supports creating generic values with a placeholder constructor.",
      "description_length": 363,
      "index": 343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PricingDetail",
      "description": "Provides methods to construct, parse, serialize, and deserialize pricing information using a record type that includes optional count and price fields. Operates on XML nodes, query parameters, and JSON structures for data exchange. Used to convert between external representations and internal pricing data in AWS-related processing.",
      "description_length": 333,
      "index": 344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Instance",
      "description": "Creates and manipulates instance objects with detailed attributes such as launch index, image ID, instance type, launch time, and state. Works with custom types like InstanceType.t, Monitoring.t, Placement.t, and complex structures including lists and options. Used to construct AWS instance representations from XML, query parameters, or JSON, and to serialize instance data for API interactions.",
      "description_length": 397,
      "index": 345,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PublicIpv4PoolRange",
      "description": "Provides operations to create, parse, and serialize objects representing a range of public IPv4 addresses, including methods to convert between XML, query parameters, and JSON formats. Works with string-based IP addresses and integer counts to define and manage address ranges. Used to process and transmit AWS API responses containing public IPv4 pool information.",
      "description_length": 365,
      "index": 346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcCidrBlockAssociation",
      "description": "Provides operations to construct, parse, and serialize VPC CIDR block association data, including handling association IDs, CIDR blocks, and their states. Works with string-based identifiers and a structured record type containing optional fields. Used to generate AWS API queries and JSON representations from parsed XML data.",
      "description_length": 327,
      "index": 347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcIpv6CidrBlockAssociation",
      "description": "Provides operations to construct, parse, and serialize data structures representing IPv6 CIDR block associations in a VPC, including methods to convert between XML, query parameters, and JSON formats. Works with string-based identifiers, state information, and network group data. Used to process and transmit VPC IPv6 CIDR block association details in API interactions.",
      "description_length": 370,
      "index": 348,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetIpv6CidrBlockAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing IPv6 CIDR block associations for subnets, including handling association IDs and CIDR block states. Works with string-based identifiers, CIDR blocks, and a state type indicating the status of the CIDR block. Used to generate AWS API queries and JSON representations from association data.",
      "description_length": 363,
      "index": 349,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuStatus",
      "description": "Converts between string representations and an internal type, including XML parsing and query/json serialization. Operates on a custom type representing Elastic GPU status information. Used to process XML responses from AWS API and generate JSON or query parameters for API requests.",
      "description_length": 283,
      "index": 350,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageLicenseConfigurationResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing an image license configuration ARN. Works with string-based ARN values and JSON or query format data. Used to handle API responses in AWS integration workflows, such as validating or transforming license configuration data from XML or JSON.",
      "description_length": 317,
      "index": 351,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotDetail",
      "description": "{ description : Aws.BaseTypes.String.t; device_name : Aws.BaseTypes.String.t; disk_image_size : Aws.BaseTypes.Double.t; format : Aws.BaseTypes.String.t; progress : Aws.BaseTypes.String.t; snapshot_id : Aws.BaseTypes.String.t; status : Aws.BaseTypes.String.t; status_message : Aws.BaseTypes.String.t; url : Aws.BaseTypes.String.t; user_bucket : UserBucketDetails.t } Constructs a structured representation of a snapshot detail, including metadata like description, device name, and user-defined bucket information. Parses XML nodes into this structure, serializes to query parameters, JSON, and deserializes from JSON for API interactions.",
      "description_length": 638,
      "index": 352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesEbs",
      "description": "Provides functions to create, parse, and serialize EBS volume configurations for scheduled instances, including settings for deletion, encryption, IOPS, snapshot, size, and type. Works with custom types representing EBS volume parameters and JSON/XML data structures. Used to construct and exchange EBS configuration details in cloud infrastructure setups.",
      "description_length": 356,
      "index": 353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrivateIpAddressConfigSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of private IP address configurations for scheduled instances. Operates on lists of `ScheduledInstancesPrivateIpAddressConfig.t` records. Used to generate AWS API queries and handle JSON representations of IP configurations in cloud deployment workflows.",
      "description_length": 326,
      "index": 354,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesIpv6AddressList",
      "description": "Handles conversion and parsing of IPv6 address lists associated with scheduled instances. Processes XML nodes into typed lists, constructs AWS query parameters, and serializes/deserializes data to and from JSON format. Used to manage network configuration data in cloud infrastructure workflows.",
      "description_length": 295,
      "index": 355,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesSecurityGroupIdSet",
      "description": "Provides operations to create, parse, and serialize a list of security group IDs for scheduled instances. Works with lists of strings representing AWS security group IDs. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 251,
      "index": 356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NatGatewayAddress",
      "description": "Provides functions to construct, parse, and serialize objects representing NAT gateway addresses, including methods to convert between XML, query parameters, and JSON formats. Works with string-based identifiers and IP addresses associated with AWS NAT gateways. Used to process and transmit NAT gateway configuration data in API requests and responses.",
      "description_length": 353,
      "index": 357,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DhcpConfigurationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of DHCP configuration objects. Operates on lists of `DhcpConfiguration.t` values and XML or JSON data structures. Parses XML nodes into configuration lists, converts them to AWS query parameters, and handles JSON serialization and deserialization for network setup data.",
      "description_length": 340,
      "index": 358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GatewayType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcAttachmentList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of VpcAttachment records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert VpcAttachment data during API request handling and response generation.",
      "description_length": 261,
      "index": 360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPropagationState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent the state of a transit gateway propagation. Enables direct mapping between configuration strings and structured data for AWS API interactions.",
      "description_length": 336,
      "index": 361,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationInstancePlatform",
      "description": "Provides conversion between a platform type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` representing instance platform configurations. Used to handle AWS capacity reservation instance platform data in XML, JSON, and query parameter contexts.",
      "description_length": 330,
      "index": 362,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationState",
      "description": "Converts between string representations and an internal state type, including XML parsing and query/json serialization. Works with a generic state type that encapsulates reservation information. Used to process and encode reservation data from XML responses and store it in JSON format.",
      "description_length": 286,
      "index": 363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationTenancy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that is instantiated with a specific value. Used to handle capacity reservation tenancy settings in AWS API interactions.",
      "description_length": 301,
      "index": 364,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EndDateType",
      "description": "Provides conversion between a custom date type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic date type that can be instantiated with a given value. Used to handle date values in API requests and responses, ensuring consistent formatting and parsing across different data sources.",
      "description_length": 364,
      "index": 365,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMatchCriteria",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 366,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesModificationResultList",
      "description": "Provides functions to create, parse, and serialize lists of reserved instances modification results, including converting between XML, query parameters, and JSON formats. Operates on lists of `ReservedInstancesModificationResult.t` values. Used to process and transmit AWS API responses related to reserved instance modifications.",
      "description_length": 330,
      "index": 367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedIntancesIds",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of reserved instance identifiers. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit reserved instance IDs in API requests and responses.",
      "description_length": 251,
      "index": 368,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` that can be initialized with a value and a unit. Used to handle state data in AWS-related contexts, such as converting between internal representations and external data formats.",
      "description_length": 360,
      "index": 369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PlacementStrategy",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with `make` and converted using bidirectional mappings. Used to handle structured data in API requests and responses, such as translating between internal representations and external formats like XML or JSON.",
      "description_length": 418,
      "index": 370,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ValidationError",
      "description": "Provides operations to construct, parse, serialize, and deserialize error objects with optional code and message fields. Works with XML nodes, query parameters, and JSON structures for data interchange. Used to handle AWS service error responses during XML parsing and API communication.",
      "description_length": 287,
      "index": 371,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EventInformation",
      "description": "Provides methods to construct, parse, serialize, and deserialize event data with specific fields like event description, sub-type, and instance ID. Works with XML nodes, query parameters, and JSON structures for data interchange. Used to process and convert event records from AWS logs into a structured format for further analysis.",
      "description_length": 332,
      "index": 372,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetEventType",
      "description": "Provides conversion between string representations and a type `t`, including parsing from XML nodes and serialization to query and JSON formats. Works with custom event types used in fleet management systems. Enables direct mapping of event identifiers to and from external data formats.",
      "description_length": 287,
      "index": 373,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PaymentOption",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic variant type representing different payment options. Used to parse XML responses from payment APIs and encode options for AWS service requests.",
      "description_length": 290,
      "index": 374,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservationState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that encapsulates reservation data. Used to transform reservation data for API requests and external storage.",
      "description_length": 287,
      "index": 375,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResponseHostIdSet",
      "description": "Provides operations to create, parse, and serialize a list of string identifiers. Works with lists of AWS base string types and converts them to query parameters, JSON structures, and vice versa. Used to handle host ID data in API responses and requests.",
      "description_length": 254,
      "index": 376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchPermission",
      "description": "Provides methods to construct, parse, and serialize permission configurations, including creating instances with optional group or user ID, converting to query parameters, and handling JSON serialization and deserialization. Works with structured data representing access control settings, such as user identifiers and permission groups. Used to generate and process AWS launch permission structures in API requests and responses.",
      "description_length": 430,
      "index": 377,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DnsEntrySet",
      "description": "Provides functions to create, parse, and convert lists of DNS entries into query and JSON formats. Operates on lists of `DnsEntry.t` values and JSON or query structures compatible with AWS. Used to generate AWS DNS query parameters from parsed XML and serialize/deserialize DNS records in JSON.",
      "description_length": 294,
      "index": 378,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.State",
      "description": "Provides conversion between a custom type `t` and string, JSON, and query formats, along with parsing from XML nodes. Includes bidirectional mappings between `t` and string pairs, and a generic constructor for initializing values. Used to serialize and deserialize data structures in API interactions and configuration handling.",
      "description_length": 328,
      "index": 379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTaskS3Location",
      "description": "Represents an S3 location with methods to construct, parse XML, and serialize to query parameters, JSON, and deserializing from JSON. Works with string-based S3 bucket and prefix values. Used to encode and decode S3 export task configurations in AWS API interactions.",
      "description_length": 267,
      "index": 380,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulItemError",
      "description": "Provides functions to construct, parse, serialize, and deserialize error objects with optional code and message fields. Works with XML nodes, query parameters, and JSON structures for error representation. Used to handle and convert AWS-related unsuccessful item errors in request responses.",
      "description_length": 291,
      "index": 381,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilterRuleList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of traffic mirror filter rules. Operates on lists of `TrafficMirrorFilterRule.t` values, converting them to and from XML nodes, AWS query parameters, and JSON structures. Used to handle AWS API responses and requests involving multiple filter rules in network traffic monitoring scenarios.",
      "description_length": 362,
      "index": 382,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorNetworkServiceList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of traffic mirror network service objects. Operates on XML nodes, AWS query structures, and JSON values. Used to process and transmit network service configurations in AWS API interactions.",
      "description_length": 259,
      "index": 383,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayOptions",
      "description": "Provides methods to construct, parse, and serialize objects representing transit gateway options, including settings for BGP ASN, auto-accepting shared attachments, route table associations, and DNS support. Works with custom types for ASN, boolean-like values, and route table identifiers. Used to configure and exchange transit gateway parameters in AWS API requests and responses.",
      "description_length": 383,
      "index": 384,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayState",
      "description": "Provides conversion between a state type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent transit gateway states. Used to transform configuration data for API requests and external storage.",
      "description_length": 291,
      "index": 385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CertificateAuthenticationRequest",
      "description": "Provides functions to construct, parse, and serialize certificate-based authentication requests, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific string types and structured data formats like JSON and XML. Used to generate and process authentication payloads in AWS service interactions involving client certificate chains.",
      "description_length": 382,
      "index": 386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DirectoryServiceAuthenticationRequest",
      "description": "Creates a request structure for directory service authentication, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on a record type containing optional directory ID and other authentication-related fields. Used to construct and process authentication requests in AWS directory service interactions.",
      "description_length": 346,
      "index": 387,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FederatedAuthenticationRequest",
      "description": "Encapsulates parameters for federated SAML authentication, including provider ARNs and session settings. Processes XML input to construct instances and serializes them into query and JSON formats. Used to handle SAML response parsing and generation in AWS authentication workflows.",
      "description_length": 281,
      "index": 388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type `t` and string-based representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 273,
      "index": 389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCountList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance count data. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and JSON output for instance count representations.",
      "description_length": 245,
      "index": 390,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ListingStatus",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PriceScheduleList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of price schedules. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data and structured price schedule representations for API interactions.",
      "description_length": 260,
      "index": 392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnConnectionStatus",
      "description": "Provides functions to construct, parse, and serialize objects representing the status of a client VPN connection, including code and message details. Works with custom types for status codes and JSON/Query serialization. Used to process and transmit status information from AWS API responses.",
      "description_length": 292,
      "index": 393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocationType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and includes parsing and conversion functions for specific data representations. Used to transform location data for API requests and configuration files.",
      "description_length": 314,
      "index": 394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatusEventList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance status events. Operates on lists of `InstanceStatusEvent.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS instance status event data in API requests and responses.",
      "description_length": 296,
      "index": 395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatusSummary",
      "description": "Provides operations to construct, parse, serialize, and deserialize instance status summaries. Works with `InstanceStatusDetailsList.t` and `SummaryStatus.t` to build structured data. Used to generate AWS API queries and JSON representations from XML node inputs.",
      "description_length": 263,
      "index": 396,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPrefixListAttachment",
      "description": "Provides constructors and parsers for handling transit gateway prefix list attachments, including conversion to query parameters, JSON serialization, and deserialization. Works with string identifiers and resource type enumerations specific to AWS transit gateway attachments. Used to construct and manipulate attachment data for programmatic interaction with AWS networking services.",
      "description_length": 384,
      "index": 397,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPrefixListReferenceState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle state information for transit gateway prefix list references in AWS API interactions.",
      "description_length": 323,
      "index": 398,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImageState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type that encapsulates image-related state. Used to parse XML responses from AWS services and generate JSON or query representations for API requests.",
      "description_length": 297,
      "index": 399,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImageTypeValues",
      "description": "Converts between string representations and a custom type, including XML parsing and AWS query/json serialization. Works with a polymorphic type `t` and provides bidirectional mappings between values and their string, XML, and JSON forms. Used to handle image type data in API requests and responses, ensuring consistent encoding and decoding.",
      "description_length": 343,
      "index": 400,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotTaskDetail",
      "description": "Represents details of a snapshot task, including properties like description, disk size, encryption status, and associated user bucket. Parses XML nodes into structured data and converts between JSON, query parameters, and internal representation. Used to process and serialize AWS snapshot task information in API interactions.",
      "description_length": 328,
      "index": 401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InterfacePermissionType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, with bidirectional mappings and parsing capabilities. Works with a polymorphic type that can be instantiated and serialized. Used to handle permission configurations in API requests and responses, ensuring consistent representation across different data formats.",
      "description_length": 338,
      "index": 402,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePermissionState",
      "description": "Provides operations to construct, parse, and serialize network interface permission state data, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing an optional state code and status message. Used to process and transmit AWS API responses related to network interface permissions.",
      "description_length": 347,
      "index": 403,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AllocationState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and includes parsing and transformation functions. Used to encode and decode state information in AWS-related data exchanges.",
      "description_length": 285,
      "index": 404,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllowsMultipleInstanceTypes",
      "description": "Provides bidirectional conversion between a custom type `t` and strings, XML nodes, and JSON, along with a generic `make` function for creating instances. Works with `t`, `string`, `Ezxmlm.nodes`, and `Aws.Query.t`/`Aws.Json.t` types. Used to serialize and deserialize data structures in XML and JSON formats, and to generate query parameters for API interactions.",
      "description_length": 364,
      "index": 405,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AutoPlacement",
      "description": "Provides conversion between a type `t` and strings, XML nodes, and JSON, including parsing from XML and serializing to query parameters. Works with custom data structures defined by `t`, enabling integration with AWS services through query and JSON formats. Supports creating instances with a generic constructor and bidirectional mapping between string representations and the internal type.",
      "description_length": 392,
      "index": 406,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AvailableCapacity",
      "description": "Provides methods to construct, parse, and serialize data related to available compute resources, including instance capacity lists and virtual CPU counts. Works with custom types representing capacity configurations and AWS-specific data structures. Used to generate query parameters and JSON representations for cloud resource management systems.",
      "description_length": 347,
      "index": 407,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HostInstanceList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of host instances. Operates on lists of `HostInstance.t` and XML nodes, converting between them and AWS query or JSON formats. Used to process and transmit host instance data in AWS API interactions.",
      "description_length": 269,
      "index": 408,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HostProperties",
      "description": "Provides methods to construct, parse, serialize, and deserialize host properties data, including core count, instance type, family, sockets, and vCPU totals. Works with a structured record type containing integer and string fields for cloud instance configurations. Used to convert XML input into structured data and generate query or JSON representations for API interactions.",
      "description_length": 377,
      "index": 409,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HostRecovery",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 282,
      "index": 410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetAssociation",
      "description": "Provides operations to construct, parse, and serialize objects representing associations between transit gateway multicast domains and subnets. Works with structured data including subnet IDs and association states. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 296,
      "index": 411,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceHealthStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle health status data in AWS-related operations, such as converting between XML responses and internal state representations.",
      "description_length": 358,
      "index": 412,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EbsInstanceBlockDeviceSpecification",
      "description": "Provides operations to construct, parse, and serialize block device specifications for EC2 instances, including setting delete-on-termination flags and volume IDs. Works with structured data representing storage configurations for cloud instances. Used to generate AWS API requests and process XML or JSON responses from EC2 service interactions.",
      "description_length": 346,
      "index": 413,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LoadPermission",
      "description": "Provides methods to construct, parse, and serialize permission configurations, including creating instances with user or group identifiers, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS string types, permission group records, and JSON structures. Used to process and encode access control settings from XML input for API requests.",
      "description_length": 384,
      "index": 414,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomainState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` that likely represents the state of a transit gateway multicast domain. Used to transform and serialize state data for API interactions and configuration management.",
      "description_length": 337,
      "index": 415,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.IdFormatList",
      "description": "Provides functions to create, parse, and serialize lists of ID format specifications. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of ID formats and structured AWS request data.",
      "description_length": 242,
      "index": 416,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrincipalType",
      "description": "Converts between string representations and a custom type, including XML parsing and AWS query/json serialization. Works with a polymorphic type `t` and provides bidirectional mappings between strings and instances. Used to handle structured data in API requests and responses, such as translating XML nodes into typed values or encoding values for HTTP queries.",
      "description_length": 362,
      "index": 417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ByoipCidrState",
      "description": "Converts between string representations and an internal state type, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a generic type `t` with explicit conversion functions. Used to handle BYOIP CIDR state data in AWS API interactions.",
      "description_length": 270,
      "index": 418,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetError",
      "description": "Provides constructors and parsers for error structures related to fleet deletion, including conversion to and from JSON and query formats. Works with custom error codes and messages represented as records. Used to handle and serialize API errors in AWS-related workflows.",
      "description_length": 271,
      "index": 419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetStateCode",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible state data from XML and JSON inputs.",
      "description_length": 273,
      "index": 420,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreStateErrorSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of error items related to disabling fast snapshot restore. Operates on lists of `DisableFastSnapshotRestoreStateErrorItem.t` structures. Used to handle AWS API responses and requests involving error states during snapshot restore operations.",
      "description_length": 311,
      "index": 421,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FastSnapshotRestoreStateCode",
      "description": "Converts between a custom type and string representations, XML nodes, and JSON format. Handles bidirectional mapping between the type and its string form, as well as serialization to and from AWS query parameters. Used to process and encode state codes from XML responses into a structured format for further handling.",
      "description_length": 318,
      "index": 422,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstanceRecurrence",
      "description": "Provides operations to construct, parse, and serialize recurrence configurations for scheduled instances, including frequency, interval, day set, and relative occurrence settings. Works with custom types such as `OccurrenceDaySet` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to generate structured data for AWS API requests and to interpret XML responses into typed records.",
      "description_length": 405,
      "index": 423,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LogDestinationType",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a polymorphic variant type that can represent different logging destinations. Used to transform configuration data from XML into structured logging targets and encode them for API requests.",
      "description_length": 350,
      "index": 424,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficType",
      "description": "Converts between string representations and a custom type, including XML parsing and JSON serialization. Works with a polymorphic type `t` and provides bidirectional mappings between values and their string, query, and JSON forms. Used to handle traffic-related data in API requests and responses.",
      "description_length": 297,
      "index": 425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BundleTaskError",
      "description": "Provides functions to construct, parse, serialize, and deserialize error objects with optional code and message fields. Works with XML nodes, query parameters, and JSON structures for error handling in AWS interactions. Used to convert raw XML error responses into structured error representations and back.",
      "description_length": 307,
      "index": 426,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BundleTaskState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that can be instantiated with a variety of underlying data. Used to encode and decode task state information in AWS-related workflows.",
      "description_length": 312,
      "index": 427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Storage",
      "description": "Provides operations to create a storage instance from an S3 configuration, parse XML nodes into a storage structure, convert the structure to an AWS query, serialize to a JSON format with nested associations, and deserialize from a JSON value. Works with XML nodes, AWS query parameters, and JSON values structured as nested associations. Used to process and represent storage configurations in AWS-compatible formats for API interactions.",
      "description_length": 439,
      "index": 428,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.StaleIpPermissionSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stale IP permission records. Operates on XML nodes and JSON structures, converting them to and from a list of StaleIpPermission records. Used to process and transmit network access control configurations in AWS-related workflows.",
      "description_length": 302,
      "index": 429,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVolumePermission",
      "description": "Provides operations to construct, parse, and serialize volume permission objects, including converting between XML nodes, query parameters, and JSON representations. Works with types such as permission groups, user IDs, and structured JSON data. Used to handle AWS EC2 volume permission settings in API requests and responses.",
      "description_length": 326,
      "index": 430,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_ec2.Types.VolumeAttachmentList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume attachments. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process EC2 volume attachment data from API responses and prepare it for HTTP requests.",
      "description_length": 254,
      "index": 431,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VolumeState",
      "description": "Provides conversion between a custom type and string representations, including XML parsing and serialization to AWS query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to transform and encode data for API interactions and configuration storage.",
      "description_length": 293,
      "index": 432,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpnTunnelOptionsSpecification",
      "description": "Constructs a configuration object for VPN tunnel options, including CIDR ranges, pre-shared keys, lifetimes, rekey settings, and cryptographic algorithms for both phase 1 and phase 2. Processes XML nodes into this configuration and serializes/deserializes it to and from query parameters and JSON format. Used to define and exchange detailed tunnel parameters in AWS VPN setup workflows.",
      "description_length": 387,
      "index": 433,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DomainType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` that can represent domain-specific data. Used to parse XML responses from AWS services and convert domain objects to query parameters for API requests.",
      "description_length": 307,
      "index": 434,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EbsInfo",
      "description": "Provides methods to construct, parse, and serialize EBS-related configuration data, including support for encryption, optimization, and NVMe. Works with custom types representing EBS optimization settings, encryption support, and NVMe capabilities. Used to generate AWS API queries and JSON representations from structured EBS information.",
      "description_length": 339,
      "index": 435,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaInfo",
      "description": "Provides functions to construct, parse, and serialize FPGA information, including methods to convert between XML nodes, query parameters, and JSON representations. Works with FPGA device information lists and integer values representing memory size. Used to process and transmit FPGA configuration data in AWS-related workflows.",
      "description_length": 328,
      "index": 436,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GpuInfo",
      "description": "Provides operations to construct, parse, and serialize GPU information, including methods to convert between XML nodes, query parameters, and JSON representations. Works with GPU device information lists and integer values representing memory capacity. Used to process and encode GPU data from XML responses into structured formats for API interactions.",
      "description_length": 353,
      "index": 437,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InferenceAcceleratorInfo",
      "description": "Provides functions to construct, parse, and serialize data related to inference accelerators, including converting between XML nodes, query parameters, and JSON structures. Works with lists of inference device information and nested associative data. Used to process and encode accelerator metadata in AWS API interactions.",
      "description_length": 323,
      "index": 438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStorageInfo",
      "description": "Provides methods to construct, parse, serialize, and deserialize instance storage information, including total size, disk details, and NVMe support. Works with types such as long integers, lists of disk information, and NVMe support enums. Used to process AWS instance metadata in API requests and responses.",
      "description_length": 308,
      "index": 439,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTypeHypervisor",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent instance type hypervisor information. Used to transform hypervisor data for API requests and configuration parsing.",
      "description_length": 309,
      "index": 440,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MemoryInfo",
      "description": "Provides operations to create, parse, and serialize memory information data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing memory size in mebibytes. Used to process and transmit memory configuration data in AWS-related workflows.",
      "description_length": 307,
      "index": 441,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInfo",
      "description": "Provides methods to construct, parse, serialize, and deserialize network configuration data, including network performance, interface limits, card settings, and IP address configurations. Works with custom types such as network card information lists, boolean flags, and integer constraints. Used to generate AWS API requests and process XML or JSON responses containing network details.",
      "description_length": 387,
      "index": 442,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupInfo",
      "description": "Provides operations to construct, parse, serialize, and deserialize placement group information, including converting between XML, query parameters, and JSON formats. Works with a structured type containing placement group strategies and associated metadata. Used to generate AWS API requests and process responses involving placement groups.",
      "description_length": 342,
      "index": 443,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProcessorInfo",
      "description": "Provides methods to construct, parse, serialize, and deserialize processor information, including supported architectures and clock speed. Works with custom types representing processor configurations and XML or JSON data formats. Used to convert XML responses from AWS APIs into structured processor data and generate query parameters for API requests.",
      "description_length": 353,
      "index": 444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RootDeviceTypeList",
      "description": "Provides functions to create, parse, and serialize lists of root device types, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of `RootDeviceType.t` values and JSON lists. Used to process and transmit root device type data in AWS API interactions.",
      "description_length": 301,
      "index": 445,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UsageClassTypeList",
      "description": "Creates and manipulates lists of usage class type values. Parses XML nodes into structured lists, converts them to AWS query parameters or JSON representations, and reconstructs lists from JSON. Used to handle AWS usage data in API requests and responses.",
      "description_length": 255,
      "index": 446,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VCpuInfo",
      "description": "Provides methods to construct, parse, serialize, and deserialize virtual CPU information, including core and thread configurations. Works with integer values for virtual CPUs, cores, and threads per core, along with lists defining valid configurations. Used to process XML input from API responses and generate query parameters or JSON representations for API requests.",
      "description_length": 369,
      "index": 447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VirtualizationTypeList",
      "description": "Provides functions to create, parse, and serialize lists of virtualization types. Operates on lists of `VirtualizationType.t` and XML nodes, converting them to query parameters, JSON, and vice versa. Used to handle AWS API responses and requests involving virtualization configurations.",
      "description_length": 286,
      "index": 448,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnRouteStatus",
      "description": "Provides operations to construct, parse, and serialize objects representing the status of a client VPN route, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing optional fields for a status code and message. Used to process and transmit status information from AWS API responses in a structured format.",
      "description_length": 371,
      "index": 449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VgwTelemetryList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of VgwTelemetry records. Operates on XML node sequences, AWS query parameters, and JSON structures representing telemetry data. Used to convert raw XML input into structured telemetry lists and generate query parameters for API requests.",
      "description_length": 310,
      "index": 450,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpnConnectionOptions",
      "description": "Provides methods to construct, parse, and serialize VPN connection configuration data, including settings for IP ranges, acceleration, and tunnel options. Works with custom types for boolean flags, CIDR notation, and tunnel configuration lists. Used to generate AWS API requests and process XML or JSON responses for VPN setup.",
      "description_length": 327,
      "index": 451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnStaticRouteList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of static VPN routes. Operates on lists of `VpnStaticRoute.t` values and XML or JSON representations. Used to generate AWS query parameters from route configurations and reconstruct route lists from JSON responses.",
      "description_length": 284,
      "index": 452,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociationStatus",
      "description": "Provides operations to construct, parse, and serialize association status data, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing optional code and message fields. Used to handle AWS association status responses in API interactions.",
      "description_length": 302,
      "index": 453,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnectionStateReason",
      "description": "Provides functions to construct, parse, and serialize objects representing the state reason of a VPC peering connection, including code and message fields. Works with custom types for VPC peering connection state reason codes and AWS-specific string and JSON representations. Used to process and transmit detailed status information from AWS API responses.",
      "description_length": 356,
      "index": 454,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnectionVpcInfo",
      "description": "Provides operations to construct, parse, and serialize VPC peering connection information, including CIDR blocks, owner ID, and region. Works with types such as CIDR block sets, IPv6 CIDR block sets, and VPC options descriptions. Used to generate AWS API queries and JSON representations for VPC peering configurations.",
      "description_length": 319,
      "index": 455,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAclAssociationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of network ACL association data. Operates on lists of `NetworkAclAssociation.t` records, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS network ACL association data during API interactions and data serialization.",
      "description_length": 324,
      "index": 456,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAclEntryList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of network ACL entries. Operates on lists of `NetworkAclEntry.t` values and XML or JSON representations. Parses XML nodes into structured entries, generates AWS query parameters, and handles JSON serialization and deserialization for network ACL configurations.",
      "description_length": 334,
      "index": 457,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsError",
      "description": "Provides functions to construct, parse, and serialize error data related to canceling spot fleet requests, including converting between XML, query parameters, and JSON formats. Works with custom error codes and messages represented as records. Used to handle API responses and errors from AWS EC2 when terminating spot fleet requests.",
      "description_length": 334,
      "index": 458,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BatchState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to query parameters. Works with a polymorphic type `t` and associated string representations. Used to transform and serialize data for web service interactions and XML/JSON parsing.",
      "description_length": 282,
      "index": 459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AccountAttributeValueList",
      "description": "Provides functions to create, parse, and serialize lists of account attribute values. Operates on lists of `AccountAttributeValue.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS account attribute data in API requests and responses.",
      "description_length": 295,
      "index": 460,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DiskImageDetail",
      "description": "Provides operations to construct, parse, and serialize disk image details, including converting between XML nodes, query parameters, and JSON representations. Works with byte sizes, disk image formats, and URLs to describe imported virtual machine images. Used to process and transmit disk image metadata in cloud import workflows.",
      "description_length": 331,
      "index": 461,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeDetail",
      "description": "Creates a volume detail structure from a size value or XML nodes, and converts it to query parameters, JSON, or from JSON. Works with AWS size types, XML nodes, and JSON representations. Used to process and serialize volume metadata in AWS API interactions.",
      "description_length": 257,
      "index": 462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GroupIdentifierSet",
      "description": "Creates and manipulates lists of security group identifiers, supporting parsing from XML, conversion to AWS query parameters, and serialization/deserialization to JSON. Operates on lists of `SecurityGroupIdentifier.t` values, enabling structured handling of AWS security group data. Used to generate query strings for API requests and process XML or JSON responses containing security group information.",
      "description_length": 403,
      "index": 463,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LastError",
      "description": "Provides operations to create, parse, and serialize error objects with optional message and code. Works with XML nodes, query parameters, and JSON structures. Used to handle AWS error responses by converting between XML input and structured error representations.",
      "description_length": 263,
      "index": 464,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and supports serialization to and from JSON and query formats. Parses XML nodes into instances of `t` and provides a generic construction function. Used to handle VPC endpoint type values in AWS API interactions.",
      "description_length": 297,
      "index": 465,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing associations between transit gateways and route tables. Works with string identifiers and a state type to model the association's status. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 293,
      "index": 466,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentState",
      "description": "Provides conversion between a state type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a custom type `t` representing the state of a transit gateway attachment. Used to handle state transitions in network configuration interactions with AWS services.",
      "description_length": 322,
      "index": 467,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotState",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings, JSON, and query parameters. Works with XML nodes for parsing and supports creating default instances of `t`. Used to serialize and deserialize state data for AWS interactions and configuration storage.",
      "description_length": 309,
      "index": 468,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorTargetType",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent traffic mirror target identifiers. Used to transform input data from XML responses into structured values and prepare them for API requests.",
      "description_length": 334,
      "index": 469,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeModificationState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate data structures for AWS API interactions.",
      "description_length": 267,
      "index": 470,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceAttachment",
      "description": "Provides constructors and parsers for network interface attachment data, including methods to create instances with specific attributes like attach time, device index, and status. Works with structured data types containing fields such as instance IDs, attachment IDs, and boolean flags. Used to generate query parameters, JSON representations, and parse XML responses in AWS API interactions.",
      "description_length": 393,
      "index": 471,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceIpv6AddressesList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of IPv6 addresses associated with a network interface. Operates on lists of `NetworkInterfaceIpv6Address.t` values and XML or JSON representations. Used to process XML responses from AWS APIs and convert them into structured data for further handling.",
      "description_length": 324,
      "index": 472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePrivateIpAddressList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of private IP addresses associated with a network interface. Operates on lists of `NetworkInterfacePrivateIpAddress.t` values. Parses XML nodes into structured lists, generates AWS query parameters, and handles JSON serialization and deserialization for network interface configurations.",
      "description_length": 357,
      "index": 473,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and supports serialization to and from XML, query parameters, and JSON formats. Works with a custom type `t` that represents network interface configurations. Parses XML nodes into `t` and generates AWS-compatible query and JSON representations.",
      "description_length": 330,
      "index": 474,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionNotificationState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that can be instantiated with a given value. Used to encode and decode connection state information in AWS-related data exchanges.",
      "description_length": 308,
      "index": 475,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionNotificationType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize connection notification data in AWS-related contexts.",
      "description_length": 276,
      "index": 476,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.OfferingClassType",
      "description": "Converts between string representations and a custom type, including XML parsing and AWS query/json serialization. Works with a polymorphic type that can be instantiated with a generic value. Used to handle structured data in API requests and responses, such as mapping XML nodes to internal representations or generating JSON payloads.",
      "description_length": 336,
      "index": 477,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.OfferingTypeValues",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings and serialization to AWS query parameters. Works with the abstract type `t` and associated string representations. Used to parse and encode values in XML and JSON formats for AWS API interactions.",
      "description_length": 309,
      "index": 478,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RIProductDescription",
      "description": "Converts between a custom type and string representations, XML nodes, and JSON formats. Works with a polymorphic type `t` and associated string mappings. Used to serialize and deserialize product descriptions for API interactions and data exchange.",
      "description_length": 248,
      "index": 479,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RecurringChargesList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of recurring charge data. Operates on lists of `RecurringCharge.t` values and XML or JSON representations. Parses XML input into a list of charges, converts to AWS query parameters, and handles JSON serialization and deserialization for data exchange.",
      "description_length": 321,
      "index": 480,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstanceState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, including parsing and serialization. Works with a polymorphic type `t` and associated string representations. Used to handle state information in AWS requests and responses, enabling data interchange and configuration management.",
      "description_length": 305,
      "index": 481,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PeeringAttachmentStatus",
      "description": "Provides operations to construct, parse, and serialize a structure representing the status of a peering attachment, including code and message fields. Works with string-based error codes and messages, and supports XML and JSON serialization. Used to process and transmit status information from AWS API responses.",
      "description_length": 313,
      "index": 482,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PeeringTgwInfo",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Transit Gateway peering information, including methods to convert between XML, query parameters, and JSON formats. Works with string-based identifiers such as transit gateway IDs, owner IDs, and regions. Used to process and exchange peering details from API responses or configuration files.",
      "description_length": 371,
      "index": 483,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotInstanceRequestState",
      "description": "Provides conversion between a state type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a custom type `t` that represents the state of a spot instance request. Used to transform and encode state data for API interactions and configuration storage.",
      "description_length": 318,
      "index": 484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrivateDnsNameConfiguration",
      "description": "Provides operations to construct, parse, and serialize DNS name configurations using XML and JSON formats. Works with structured data including state, type, value, and name fields. Used to generate AWS API requests and process XML responses containing private DNS name settings.",
      "description_length": 278,
      "index": 485,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceState",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type that can represent service state information. Used to parse XML responses into structured state objects and generate JSON or query parameters for API requests.",
      "description_length": 311,
      "index": 486,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ServiceTypeDetailSet",
      "description": "Provides operations to create a list of service type details, parse XML nodes into this list, convert the list to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query representations, and JSON values. Used to process and exchange service type data in API interactions.",
      "description_length": 332,
      "index": 487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConversionTaskState",
      "description": "Converts between string representations and a custom type `t` using bidirectional mappings, and supports parsing from XML nodes, serializing to query parameters, and encoding/decoding from JSON. Works with XML node structures, query parameters, and JSON values. Used to transform external data formats into internal state objects during data processing pipelines.",
      "description_length": 363,
      "index": 488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportInstanceTaskDetails",
      "description": "{ description : Aws.BaseTypes.String.t option; instance_id : Aws.BaseTypes.String.t option; platform : PlatformValues.t option; volumes : ImportInstanceVolumeDetailSet.t option } Handles creation, parsing, and serialization of import instance task details, including instance identifiers, platform information, and volume configurations. Used to construct and process AWS import instance task data from XML and JSON formats.",
      "description_length": 424,
      "index": 489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportVolumeTaskDetails",
      "description": "Represents details for importing a volume, including availability zone, converted bytes, description, and disk image metadata. Processes XML nodes into structured data and serializes to query parameters, JSON, or deserializes from JSON. Used to handle import task configurations in AWS EC2 interactions.",
      "description_length": 303,
      "index": 490,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayVpcAttachmentOptions",
      "description": "Provides methods to construct, parse, and serialize configuration options for a transit gateway VPC attachment, including DNS support, IPv6 support, and appliance mode settings. Works with custom types representing support values and a structured record type for configuration data. Used to generate AWS API requests and process XML or JSON responses from network configuration services.",
      "description_length": 387,
      "index": 491,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservationValue",
      "description": "Provides operations to construct, parse, and serialize reservation value data, including converting between XML nodes, query parameters, and JSON representations. Works with string-based numeric values representing hourly, remaining total, and remaining upfront costs. Used to process and transmit reservation pricing information in AWS-related workflows.",
      "description_length": 355,
      "index": 492,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetConfiguration",
      "description": "Provides operations to construct, parse, and serialize configuration objects using XML nodes or JSON. Works with a record type containing optional instance count and offering ID fields. Used to generate AWS API requests and process response data in a structured format.",
      "description_length": 269,
      "index": 493,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteAttachmentList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of transit gateway route attachments. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit route attachment data from API responses.",
      "description_length": 247,
      "index": 494,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent the state of a transit gateway route. Used to handle state transitions in network configuration data, such as updating route tables in AWS infrastructure.",
      "description_length": 344,
      "index": 495,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteType",
      "description": "Provides conversion between string representations and a type `t` through bidirectional mappings, including parsing from XML nodes and serialization to AWS query and JSON formats. Works with a custom type `t` used to represent transit gateway route types in AWS infrastructure configurations. Enables direct conversion from XML responses and integration with AWS API request and response handling.",
      "description_length": 397,
      "index": 496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EventType",
      "description": "Provides conversion between string representations and a type `t`, including bidirectional mappings, string serialization, and parsing from XML nodes. Works with a custom type `t` and integrates with AWS query and JSON formats. Used to encode and decode event types in XML and JSON payloads.",
      "description_length": 291,
      "index": 497,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImageState",
      "description": "Provides operations to construct, parse, and serialize FPGA image state data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing optional code and message fields. Used to process and transmit FPGA image state information in AWS API interactions.",
      "description_length": 316,
      "index": 498,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PciId",
      "description": "Provides methods to construct, parse, and serialize PCI identifier data, including device, vendor, subsystem, and subsystem vendor IDs. Works with string-based identifiers and JSON/XML data structures. Used to process and encode PCI ID information from XML responses or JSON inputs for AWS-related operations.",
      "description_length": 309,
      "index": 499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreStateErrorSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of error items related to enabling fast snapshot restore. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and convert error data from API responses into structured formats for further handling.",
      "description_length": 302,
      "index": 500,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PropagatingVgwList",
      "description": "Constructs a list of propagating virtual gateway objects from a single value. Parses XML nodes into a list of propagating virtual gateway structures, and converts between this list and query parameters, JSON representations, and JSON values. Used to handle AWS API responses and requests involving propagating virtual gateways.",
      "description_length": 327,
      "index": 501,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RouteList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of route data. Operates on lists of `Route.t` and XML or JSON representations. Parses XML node sequences into route lists, converts them to AWS query parameters, and handles JSON serialization and deserialization for route data.",
      "description_length": 301,
      "index": 502,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RouteTableAssociationList",
      "description": "Provides functions to create, parse, and serialize lists of route table association records. Operates on lists of `RouteTableAssociation.t` values and XML or JSON representations. Parses XML node sequences into association lists, converts them to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 320,
      "index": 503,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IamInstanceProfileAssociationState",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and serializes/deserializes instances to and from XML, query parameters, and JSON formats. Works with a custom type `t` representing the state of an IAM instance profile association. Parses XML nodes into the state type and generates query and JSON representations for API interactions.",
      "description_length": 371,
      "index": 504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResponseLaunchTemplateData",
      "description": "Constructs and serializes objects representing AWS EC2 launch template configurations, supporting detailed instance setup including network interfaces, block devices, security groups, and market options. Operates on custom types for instance metadata, network settings, and resource specifications. Used to generate structured API requests for EC2 instance launches with precise configuration controls.",
      "description_length": 402,
      "index": 505,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CarrierGatewayState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` that encapsulates carrier gateway state information. Used to transform XML responses from AWS API calls into structured data and vice versa.",
      "description_length": 316,
      "index": 506,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MembershipType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON values, along with a generic initialization function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize data structures in API requests and responses.",
      "description_length": 282,
      "index": 507,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayVirtualInterfaceIdSet",
      "description": "Provides operations to create, parse, and serialize a list of string-based virtual interface identifiers. Works with lists of strings representing AWS resource IDs. Used to generate query parameters from identifiers and to convert between XML node structures and JSON representations.",
      "description_length": 284,
      "index": 508,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MoveStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value. Used to handle status data in API requests and responses, enabling seamless data interchange and configuration setup.",
      "description_length": 338,
      "index": 509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuSpecification",
      "description": "Creates and manipulates objects representing Elastic GPU specifications, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with string-based types and structured JSON data. Used to construct and process GPU configuration details in AWS API interactions.",
      "description_length": 297,
      "index": 510,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateBlockDeviceMappingRequest",
      "description": "Provides functions to construct, parse, and serialize block device mapping configurations for EC2 launch templates, including setting device names, virtual names, EBS parameters, and no-device flags. Works with custom types for string values, EBS block device requests, and JSON or query format representations. Used to generate structured API inputs for EC2 instance configuration and to process XML responses from AWS API calls.",
      "description_length": 430,
      "index": 511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationTarget",
      "description": "Provides operations to construct, parse, and serialize objects representing capacity reservation targets, including setting capacity reservation ID and resource group ARN. Works with structured data types and XML/JSON formats for data exchange. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 325,
      "index": 512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateElasticInferenceAccelerator",
      "description": "Provides operations to create, parse, and serialize objects representing elastic inference accelerators in AWS launch templates, including converting between XML nodes, query parameters, and JSON structures. Works with a record type containing a string for the accelerator type and an optional integer for the count. Used to construct and manipulate accelerator configurations in AWS API requests and responses.",
      "description_length": 411,
      "index": 513,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateSpotMarketOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing spot market options for EC2 launch templates, including setting max price, instance type, block duration, validity period, and interruption behavior. Works with types such as strings, integers, date times, and custom enums for spot instance configurations. Used to generate AWS API requests and handle JSON/XML serialization for spot instance settings.",
      "description_length": 427,
      "index": 514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceNetworkInterfaceSpecificationRequest",
      "description": "Provides methods to construct, parse, and serialize network interface configurations for EC2 instances, including settings for IP addresses, security groups, and subnet associations. Works with types such as boolean flags, string identifiers, integer counts, and lists of IP addresses or security group IDs. Used to define network interface properties in AWS API requests for instance launch templates.",
      "description_length": 402,
      "index": 515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateLicenseConfigurationRequest",
      "description": "Provides operations to construct, parse, and serialize data structures representing license configuration requests, including creating instances from ARN strings, converting to query parameters, and encoding/decoding from JSON. Works with AWS-specific types such as strings, JSON values, and XML nodes. Used to generate and process structured data for launching EC2 instances with specified license configurations.",
      "description_length": 414,
      "index": 516,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateTagSpecificationRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS EC2 launch template tag specifications. Works with resource types and tag lists, enabling integration with AWS API requests. Used to generate query parameters and JSON payloads for EC2 resource configuration.",
      "description_length": 287,
      "index": 517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PoolCidrBlocksSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of CIDR block representations. Operates on lists of `PoolCidrBlock.t` values and XML nodes. Used to generate AWS query parameters from CIDR blocks and to parse XML responses into structured data.",
      "description_length": 265,
      "index": 518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResponseError",
      "description": "Provides functions to construct, parse, and serialize error objects with optional code and message. Works with custom error code types and XML or JSON data structures. Used to convert AWS API response errors into structured data for processing and logging.",
      "description_length": 256,
      "index": 519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchSpecification",
      "description": "Creates and configures launch specifications for EC2 instances, including user data, security groups, block device mappings, and network interfaces. Operates on types such as instance types, security group identifiers, and block device mappings. Used to generate AWS API requests for launching instances with precise configurations.",
      "description_length": 332,
      "index": 520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceState",
      "description": "Provides conversion between a type `t` and strings, XML nodes, and JSON, including parsing from XML and serializing to query parameters. Works with a custom type `t` that represents instance states, supporting transformations for API interactions. Includes bidirectional mappings between string representations and the type, as well as serialization for web service communication.",
      "description_length": 380,
      "index": 521,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceStateFault",
      "description": "Provides operations to construct, parse, serialize, and deserialize fault information from AWS instance state responses. Works with string-based error codes and messages, and supports XML and JSON data formats. Used to process error details in AWS API interactions, such as when handling instance termination or status checks.",
      "description_length": 326,
      "index": 522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceStatus",
      "description": "Provides operations to construct, parse, and serialize objects representing the status of spot instances, including setting code, message, and update time. Works with custom record types containing string, date, and JSON-compatible data. Used to process and transmit status information from AWS API responses in a structured format.",
      "description_length": 332,
      "index": 523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteQueuedReservedInstancesError",
      "description": "Provides constructors and parsers for error responses related to deleting queued reserved instances, including handling XML and JSON serialization. Works with custom error codes and messages defined in the DeleteQueuedReservedInstancesErrorCode module. Used to generate HTTP query parameters and JSON payloads for API error responses.",
      "description_length": 334,
      "index": 524,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTaskState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be instantiated with a make function and converted to and from strings. Used to encode and decode task state data for API interactions and configuration storage.",
      "description_length": 346,
      "index": 525,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExportToS3Task",
      "description": "Provides operations to construct, parse, and serialize task configurations for exporting data to Amazon S3, including setting container and disk image formats, S3 bucket, and key. Works with XML nodes, query parameters, and JSON structures to convert between representations. Used to generate S3 export tasks from XML input and prepare them for API requests.",
      "description_length": 358,
      "index": 526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceExportDetails",
      "description": "Provides operations to construct, parse, and serialize instance export details, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as instance IDs and environment identifiers. Used to prepare and process instance export configurations for deployment or migration workflows.",
      "description_length": 341,
      "index": 527,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IpPermissionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of IP permissions. Operates on lists of `IpPermission.t` values and XML or JSON representations. Parses XML nodes into permission lists, generates AWS query parameters, and handles JSON serialization and deserialization for network access control configurations.",
      "description_length": 332,
      "index": 528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociatedTargetNetworkSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of associated target network objects. Operates on lists of `AssociatedTargetNetwork.t` and XML nodes, converting them to query parameters, JSON structures, and back. Used to handle network configuration data in AWS API interactions.",
      "description_length": 302,
      "index": 529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientConnectResponseOptions",
      "description": "Provides operations to construct, parse, and serialize configuration options for client connection responses, including enabling settings, specifying a Lambda function ARN, and setting status attributes. Works with boolean flags, strings, and status enums to represent client VPN endpoint configurations. Used to generate AWS API requests and handle XML or JSON-formatted response data.",
      "description_length": 386,
      "index": 530,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthenticationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of client VPN authentication configurations. Operates on lists of `ClientVpnAuthentication.t` values and XML or JSON representations. Used to process and transmit authentication settings for VPN connections in AWS API interactions.",
      "description_length": 301,
      "index": 531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnEndpointStatus",
      "description": "Provides operations to construct, parse, and serialize a structure representing the status of a client VPN endpoint, including code and message fields. Works with a record type containing optional status code and message. Used to handle AWS API responses and generate query or JSON representations for communication.",
      "description_length": 316,
      "index": 532,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnSecurityGroupIdSet",
      "description": "Provides operations to create, parse, and serialize a list of security group IDs for a client VPN. Works with lists of strings representing security group identifiers. Used to handle AWS API input and output for client VPN configurations.",
      "description_length": 238,
      "index": 533,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionLogResponseOptions",
      "description": "Provides operations to construct, parse, and serialize configuration for connection log responses, including enabling logging, specifying CloudWatch log group and stream. Works with boolean flags, strings, and JSON structures. Used to generate AWS API requests and process XML responses for logging settings.",
      "description_length": 308,
      "index": 534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransportProtocol",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including parsing from XML and serializing to query parameters. Works with `t`, `string`, `Ezxmlm.nodes`, and `Aws`-specific types like `Query.t` and `Json.t`. Used to serialize and deserialize protocol data for network communication and API interactions.",
      "description_length": 335,
      "index": 535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnProtocol",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and string-based representations. Used to parse and generate network protocol data for AWS interactions.",
      "description_length": 260,
      "index": 536,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateOverridesListRequest",
      "description": "Handles parsing and serialization of fleet launch template override configurations. Accepts XML nodes to generate a list of override requests, converts them to query parameters, and serializes/deserializes them to and from JSON format. Used to process and transmit EC2 fleet configuration data in API interactions.",
      "description_length": 314,
      "index": 537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateSpecificationRequest",
      "description": "Provides functions to construct, parse, and serialize a fleet launch template specification, including creating instances with optional launch template ID, name, and version. Works with string-based identifiers and JSON/XML data structures. Used to generate AWS API requests and handle structured data in cloud deployment workflows.",
      "description_length": 332,
      "index": 538,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetSpotCapacityRebalanceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for rebalancing fleet spot capacity, including converting between XML, query parameters, and JSON formats. Works with structured data representing fleet replacement strategies and request configurations. Used to generate HTTP requests and process incoming XML or JSON payloads in cloud infrastructure management workflows.",
      "description_length": 386,
      "index": 539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InternetGatewayAttachmentList",
      "description": "Provides functions to create, parse, and serialize lists of InternetGatewayAttachment objects. Operates on lists of InternetGatewayAttachment.t and supports XML, query string, and JSON serialization formats. Used to process and transmit attachment data from AWS API responses.",
      "description_length": 276,
      "index": 540,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetsErrorSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of fleet error objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process error responses from fleet management systems in AWS API interactions.",
      "description_length": 249,
      "index": 541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetsInstancesSet",
      "description": "Constructs a value of type 'a and provides parsing, query generation, and JSON serialization/deserialization for lists of fleet instance data. Processes XML nodes into structured fleet instance records and converts between JSON and internal representations. Used to handle AWS fleet instance responses in API interactions.",
      "description_length": 322,
      "index": 542,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetActivityStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with `make` and converted using bidirectional mappings. Used to handle activity status data in API requests and responses, enabling seamless integration with XML, query, and JSON data sources.",
      "description_length": 397,
      "index": 543,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetExcessCapacityTerminationPolicy",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic type `t` and associated string mappings. Used to handle termination policies in AWS fleet requests by converting between internal representations and external formats.",
      "description_length": 341,
      "index": 544,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateConfigList",
      "description": "Provides functions to create, parse, and serialize lists of fleet launch template configurations. Operates on lists of `FleetLaunchTemplateConfig.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS EC2 fleet configuration data during API requests and responses.",
      "description_length": 309,
      "index": 545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.OnDemandOptions",
      "description": "Provides functions to construct, parse, and serialize configuration for on-demand fleet requests, including allocation strategies, capacity reservations, and availability zone settings. Works with custom types representing fleet configuration options and JSON/XML data structures. Used to generate API-compatible parameters for cloud infrastructure provisioning.",
      "description_length": 362,
      "index": 546,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotOptions",
      "description": "Provides methods to construct, parse, and serialize configuration for AWS Spot instance fleets, including allocation strategies, maintenance policies, and interruption behaviors. Works with custom types such as SpotAllocationStrategy.t, FleetSpotMaintenanceStrategies.t, and SpotInstanceInterruptionBehavior.t. Used to generate AWS API requests for managing Spot instance fleets and to convert between XML and JSON representations.",
      "description_length": 431,
      "index": 547,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TargetCapacitySpecification",
      "description": "Provides methods to construct, parse, and serialize target capacity configurations, including setting total, on-demand, and spot capacities, and specifying the default capacity type. Works with integer values and a custom capacity type enumeration. Used to initialize and convert capacity settings for cloud resource allocation in API requests.",
      "description_length": 344,
      "index": 548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ActivityStatus",
      "description": "Converts between string representations and an internal state type, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a custom type representing activity status with methods for safe construction and transformation. Used to process and encode activity data from XML sources into structured formats for API interactions.",
      "description_length": 355,
      "index": 549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetRequestConfigData",
      "description": "Provides functions to construct, parse, and serialize data structures for AWS Spot Fleet requests, including setting allocation strategies, launch configurations, capacity targets, and termination policies. Works with types such as allocation strategies, launch specifications, load balancers configurations, and tag specifications. Used to generate AWS API-compatible request payloads and parse XML responses into structured data.",
      "description_length": 431,
      "index": 550,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZoneMessageList",
      "description": "Constructs a list of availability zone messages from a parsed XML structure, converts the list to AWS query parameters, and serializes/deserializes the list to and from JSON. Operates on XML nodes and JSON values, producing or consuming lists of availability zone message records. Used to process API responses and generate request parameters in cloud infrastructure interactions.",
      "description_length": 380,
      "index": 551,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZoneOptInStatus",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query parameters and JSON. Works with a polymorphic variant type that represents different availability zone opt-in statuses. Used to process and encode AWS API responses and requests involving zone opt-in states.",
      "description_length": 335,
      "index": 552,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZoneState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` that likely represents availability zone states in AWS contexts. Used to transform and validate availability zone data during API interactions and configuration parsing.",
      "description_length": 341,
      "index": 553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusActionsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume status actions. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert volume status action data for API interactions.",
      "description_length": 237,
      "index": 554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusAttachmentStatusList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume attachment status objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit volume attachment status data from AWS API responses.",
      "description_length": 255,
      "index": 555,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusEventsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume status events. Operates on XML nodes and JSON structures, converting them to and from a list of event records. Used to process AWS API responses and generate query parameters for volume status checks.",
      "description_length": 280,
      "index": 556,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusInfo",
      "description": "Provides methods to construct, parse, and serialize volume status information, including converting between XML nodes, query parameters, and JSON representations. Works with custom types representing volume status details and overall status. Used to process and transmit volume status data in AWS API interactions.",
      "description_length": 314,
      "index": 557,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTableState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` used to represent the state of a transit gateway route table. Used to transform and serialize state data for API interactions and configuration management.",
      "description_length": 327,
      "index": 558,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthorizationRuleStatus",
      "description": "Provides functions to construct, parse, and serialize objects representing the status of a client VPN authorization rule, including code and message fields. Works with custom types for client VPN authorization rule status codes and JSON/HTTP query representations. Used to handle API responses and requests involving client VPN rule authorization states.",
      "description_length": 354,
      "index": 559,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulInstanceCreditSpecificationItemError",
      "description": "Provides constructors and parsers for error details related to instance credit specification failures, including creating instances from code and message, parsing XML nodes, and converting to query parameters, JSON representations, and from JSON. Works with error codes, strings, and AWS-specific data types. Used to handle and serialize errors during EC2 instance configuration operations.",
      "description_length": 390,
      "index": 560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PricingDetailsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of pricing details. Operates on lists of `PricingDetail.t` and XML nodes, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS pricing data in API requests and responses.",
      "description_length": 276,
      "index": 561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance objects. Operates on XML nodes, AWS query structures, and JSON values. Used to convert instance data between XML input, AWS API queries, and JSON representations.",
      "description_length": 244,
      "index": 562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PublicIpv4PoolRangeSet",
      "description": "Handles creation, parsing, and serialization of IPv4 pool range lists. Processes XML nodes into structured range data and converts between list-of-ranges and query or JSON formats. Used to manage AWS API input and output for IPv4 pool configurations.",
      "description_length": 250,
      "index": 563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcCidrBlockAssociationSet",
      "description": "Provides functions to create, parse, and serialize lists of VpcCidrBlockAssociation records. Operates on lists of VpcCidrBlockAssociation.t and XML or JSON data structures. Used to convert between XML responses from AWS API calls and structured OCaml data for processing network configurations.",
      "description_length": 294,
      "index": 564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcIpv6CidrBlockAssociationSet",
      "description": "Provides functions to create, parse, and serialize lists of VPC IPv6 CIDR block association records. Operates on lists of `VpcIpv6CidrBlockAssociation.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS VPC IPv6 CIDR block associations in API requests and responses.",
      "description_length": 326,
      "index": 565,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that can be instantiated with any value. Used to transform and encode state data for AWS API interactions and configuration storage.",
      "description_length": 310,
      "index": 566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetIpv6CidrBlockAssociationSet",
      "description": "Handles conversion and parsing of IPv6 CIDR block associations for subnets, including XML to list of associations, query parameter generation, and JSON serialization/deserialization. Operates on lists of subnet IPv6 CIDR block association records. Used to process network configuration data from XML responses and prepare it for API requests or storage in JSON format.",
      "description_length": 368,
      "index": 567,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with `make` and converted using specific string and XML handlers. Used to transform network state data for API interactions and configuration storage.",
      "description_length": 355,
      "index": 568,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuHealth",
      "description": "Provides operations to create, parse, and serialize health data for elastic GPUs, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing status information and timestamps. Used to process and transmit GPU health reports in cloud infrastructure monitoring systems.",
      "description_length": 330,
      "index": 569,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuState",
      "description": "Converts between a custom type and string representations, including XML parsing and query/json serialization. Operates on a polymorphic type that can be instantiated with any value. Used to handle Elastic GPU state data in AWS API interactions.",
      "description_length": 245,
      "index": 570,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageLicenseSpecificationListResponse",
      "description": "Provides functions to construct, parse, and serialize lists of license configuration responses from XML and JSON formats. Operates on lists of `ImportImageLicenseConfigurationResponse.t` values and AWS query structures. Used to process and convert license data in AWS import image operations.",
      "description_length": 292,
      "index": 571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotDetailList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of snapshot details. Operates on lists of `SnapshotDetail.t` and XML nodes, converting between them and query or JSON formats. Used to process and transmit snapshot metadata in AWS API interactions.",
      "description_length": 268,
      "index": 572,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserBucket",
      "description": "Provides operations to construct, parse, and serialize a structure representing an S3 bucket and key, including parsing XML nodes into the structure, converting to query parameters, and encoding/decoding from JSON. Works with AWS string types and JSON data structures. Used to process and transmit S3 bucket information in API requests and responses.",
      "description_length": 350,
      "index": 573,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteState",
      "description": "Converts between string representations and an internal state type, supporting XML parsing, query parameter encoding, and JSON serialization. Operates on a custom type representing route state information. Used to process and encode gateway route configurations from XML input and prepare them for API requests.",
      "description_length": 311,
      "index": 574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and supports serialization to and from query parameters and JSON. Handles XML parsing into `t` and provides a generic constructor for initializing values. Used to process and encode route types in AWS API interactions.",
      "description_length": 303,
      "index": 575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesBlockDeviceMapping",
      "description": "Provides operations to construct, parse, and serialize block device mappings for scheduled instances, including EBS configurations, device names, and virtual names. Works with types such as strings, EBS structures, and JSON or query representations. Used to generate AWS API-compatible data structures for instance storage configurations.",
      "description_length": 338,
      "index": 576,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesNetworkInterface",
      "description": "Provides functions to construct, parse, and serialize network interface configurations for scheduled instances, including settings for IP addresses, security groups, and subnet associations. Works with types such as boolean flags, strings, integer counts, and custom sets for security groups and IP configurations. Used to generate AWS API-compatible data structures for launching instances with specific network settings.",
      "description_length": 422,
      "index": 577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NatGatewayAddressList",
      "description": "Provides functions to create, parse, and serialize lists of NAT gateway addresses. Operates on lists of `NatGatewayAddress.t` values and XML or JSON representations. Parses XML nodes into address lists, generates AWS query parameters, and converts between JSON and list structures.",
      "description_length": 281,
      "index": 578,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NatGatewayState",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent the state of a NAT gateway. Enables direct mapping of NAT gateway states in AWS API interactions and configuration data.",
      "description_length": 314,
      "index": 579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProvisionedBandwidth",
      "description": "Provides operations to construct, parse, and serialize objects representing provisioned bandwidth details, including timestamps, status, and requested/provisioned values. Works with custom record types containing datetime, string, and status fields. Used to process AWS API responses and generate query or JSON payloads for bandwidth configuration requests.",
      "description_length": 357,
      "index": 580,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LoadPermissionRequest",
      "description": "Provides functions to construct, parse, and serialize permission request data, including creating instances with optional group and user ID, parsing XML nodes into structured data, and converting between query, JSON, and internal representations. Works with types such as PermissionGroup.t, Aws.BaseTypes.String.t, Ezxmlm.nodes, Aws.Query.t, and Aws.Json.t. Used to process and transmit permission requests in AWS-related workflows, such as validating access control settings during API calls.",
      "description_length": 493,
      "index": 581,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Filter",
      "description": "Provides functions to create, parse, and serialize filter structures with a name and optional string values. Works with AWS-specific types such as `ValueStringList.t` and JSON/Query representations. Used to construct and process filters in API requests and responses.",
      "description_length": 267,
      "index": 582,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TagDescription",
      "description": "Encodes and decodes tag information with key, resource ID, resource type, and value. Processes XML nodes into structured tag data and serializes to query parameters or JSON format. Used to handle AWS resource tagging in API requests and responses.",
      "description_length": 247,
      "index": 583,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DhcpOptions",
      "description": "Provides functions to construct, parse, and serialize DHCP options data, including conversion to query parameters, JSON, and from JSON. Works with types such as DHCP configuration lists, string identifiers, owner IDs, and tag lists. Used to generate and process DHCP options structures in AWS API interactions.",
      "description_length": 310,
      "index": 584,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnGateway",
      "description": "Provides operations to construct, parse, serialize, and deserialize VPN gateway objects. Works with types such as availability zone, state, gateway type, VPC attachments, and tags. Used to generate AWS API requests and process XML or JSON responses from EC2 services.",
      "description_length": 267,
      "index": 585,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentPropagation",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS Transit Gateway attachment propagation settings, including route table ID and state. Works with string and state type representations, and supports XML and JSON serialization formats. Used to manage and exchange propagation configuration data in AWS networking workflows.",
      "description_length": 350,
      "index": 586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservation",
      "description": "Provides methods to construct, parse, and serialize objects representing AWS capacity reservations, including setting attributes like instance type, availability zone, tenancy, and instance count. Works with custom types such as `CapacityReservationInstancePlatform.t`, `CapacityReservationTenancy.t`, and `TagList.t`. Used to convert between XML node structures and JSON representations for API interactions.",
      "description_length": 409,
      "index": 587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesModification",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS Reserved Instances modification details, including date tracking, status, and result listings. Works with date-time values, string identifiers, and lists of modification results. Used to process and transmit AWS EC2 Reserved Instances modification data in API requests and responses.",
      "description_length": 362,
      "index": 588,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroup",
      "description": "Provides operations to construct, parse, serialize, and deserialize placement group configurations, including setting group name, state, strategy, partition count, group ID, and tags. Works with types such as strings, integers, custom state and strategy enums, and tag lists. Used to generate AWS API requests and process XML or JSON responses related to EC2 placement groups.",
      "description_length": 376,
      "index": 589,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTablePropagation",
      "description": "Provides functions to construct, parse, and serialize objects representing route table propagation settings for a transit gateway. Works with types such as string identifiers, resource types, and propagation states. Used to generate query parameters and JSON representations for API interactions involving transit gateway configurations.",
      "description_length": 337,
      "index": 590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.KeyPairInfo",
      "description": "Provides operations to construct, parse, and serialize key pair information including ID, fingerprint, name, and tags. Works with string-based identifiers and a tagged list structure. Used to generate API queries and JSON representations from XML nodes for cloud infrastructure management.",
      "description_length": 289,
      "index": 591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ErrorSet",
      "description": "Provides operations to create empty error lists, parse XML nodes into validation errors, convert error lists to AWS query parameters, serialize errors to JSON format, and deserialize JSON back into error lists. Works with XML nodes, AWS query structures, and JSON values. Used to handle and transmit validation errors in API requests and responses.",
      "description_length": 348,
      "index": 592,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HistoryRecordEntry",
      "description": "Represents a single entry in a fleet event history, supporting creation from event details, XML parsing, and serialization to query and JSON formats. It works with event information, event types, and timestamps. Used to process and exchange fleet activity records in AWS interactions.",
      "description_length": 284,
      "index": 593,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HostReservation",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS EC2 host reservations, including methods to convert between XML, JSON, and query parameters. Works with structured data types such as dates, currency codes, host IDs, and tags. Used to process and transmit reservation details from AWS API responses in a format suitable for further processing or storage.",
      "description_length": 384,
      "index": 594,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchPermissionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of launch permissions. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit permission configurations in cloud infrastructure interactions.",
      "description_length": 251,
      "index": 595,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointConnection",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS VPC endpoint connections, including setting service IDs, VPC endpoint IDs, owners, states, timestamps, DNS entries, and ARNs for load balancers. Works with custom types such as string lists, date times, and state enums. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 382,
      "index": 596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportImageTask",
      "description": "Represents an image export task with fields for description, image ID, progress, S3 export location, status, and tags. Parses XML nodes into task records and serializes tasks to query parameters, JSON, and from JSON. Used to manage and exchange export task data in AWS EC2 interactions.",
      "description_length": 286,
      "index": 597,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotLaunchSpecificationSecurityGroupIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of security group IDs. Operates on a type representing a list of strings, typically used for AWS request parameters. Parses XML input into a list of security group IDs and generates query and JSON representations for API interactions.",
      "description_length": 305,
      "index": 598,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotLaunchSpecificationSecurityGroupList",
      "description": "Provides functions to create, parse, and serialize a list of security group identifiers. Operates on lists of strings representing security group IDs. Used to process and encode security group configurations in AWS API requests.",
      "description_length": 228,
      "index": 599,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociatedRole",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS associated roles, including setting ARN, S3 bucket, object key, and KMS key. Works with AWS base string types and JSON/Query data structures. Used to generate and interpret role configurations in AWS service interactions.",
      "description_length": 300,
      "index": 600,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulItem",
      "description": "Provides constructors and parsers for handling failed operations, including creating instances with optional error and resource ID, parsing XML nodes into structured data, and converting between JSON and query formats. Works with custom error types and AWS string identifiers. Used to serialize and deserialize unsuccessful operation responses in API interactions.",
      "description_length": 364,
      "index": 601,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilter",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS traffic mirror filters, including setting filter rules, network services, and tags. Works with types such as traffic mirror filter rules lists, network service lists, and tag lists. Used to generate AWS API requests and process XML or JSON responses from EC2 traffic mirror filter operations.",
      "description_length": 372,
      "index": 602,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListEntry",
      "description": "Represents a network prefix entry with methods to construct, parse from XML, and serialize to query parameters or JSON. Works with string-based CIDR notation and descriptive labels. Used to configure firewall rules or routing policies by encoding network ranges and associated metadata.",
      "description_length": 286,
      "index": 603,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGateway",
      "description": "Provides operations to construct, parse, and serialize transit gateway data, including methods to convert between XML, query parameters, and JSON formats. Works with types such as transit gateway state, options, and tagged lists. Used to process AWS API responses and prepare data for API requests.",
      "description_length": 298,
      "index": 604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTagKeySet",
      "description": "Provides operations to create, parse, and serialize a list of string-based instance tag keys. Works with lists of strings representing AWS instance tags and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into tag key lists and constructs JSON representations for API interactions.",
      "description_length": 318,
      "index": 605,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthenticationRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing client VPN authentication requests, including active directory, mutual, and federated authentication configurations. Works with custom types such as authentication request records and XML or JSON data structures. Used to generate AWS API-compatible queries and handle authentication details in network configuration workflows.",
      "description_length": 401,
      "index": 606,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLinkDnsSupport",
      "description": "Provides operations to construct, parse, and serialize objects representing DNS support configuration for ClassicLink, including converting between XML, query parameters, and JSON formats. Works with boolean flags indicating DNS support and VPC identifiers. Used to generate API requests and process responses in AWS integration workflows.",
      "description_length": 339,
      "index": 607,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ManagedPrefixList",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS prefix lists, including methods to convert between XML, query parameters, and JSON formats. Works with types such as string, integer, long, and custom records for tags and prefix list states. Used to generate and process prefix list data structures in AWS API interactions.",
      "description_length": 353,
      "index": 608,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesListing",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Reserved Instances listings, including handling instance counts, price schedules, and tags. Works with data types such as datetime, string, lists of instance counts and price schedules, and tag lists. Used to generate API requests and process XML or JSON responses from AWS EC2 services.",
      "description_length": 367,
      "index": 609,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStateChange",
      "description": "Provides operations to construct, parse, and serialize instances of a state change event, including creating with specific instance IDs and states, converting from XML nodes, and encoding/decoding to query parameters and JSON. Works with types such as InstanceState.t, Aws.BaseTypes.String.t, and Aws.Json.t. Used to process AWS instance state transitions in event-driven workflows and API responses.",
      "description_length": 400,
      "index": 610,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AddPrefixListEntry",
      "description": "A module that constructs and manipulates network prefix entries, supporting CIDR notation and optional descriptions. It handles XML parsing, query string generation, and JSON serialization/deserialization for network configuration data. Used to encode and decode AWS VPC prefix list entries in API requests and responses.",
      "description_length": 321,
      "index": 611,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientCertificateRevocationListStatusCode",
      "description": "Provides conversion between string representations and a type `t` for client certificate revocation list status codes, including parsing from XML nodes and serialization to query and JSON formats. Works with `t` as a custom type representing specific status codes. Used to handle AWS API responses and requests involving certificate revocation status.",
      "description_length": 351,
      "index": 612,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TerminateConnectionStatus",
      "description": "Provides operations to construct, parse, and serialize connection status objects with optional connection ID and status transitions. Works with string identifiers and custom connection status types. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 279,
      "index": 613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTypeOffering",
      "description": "Provides operations to construct, parse, and serialize instances with specific instance types, location types, and locations. Works with custom types representing instance configurations and XML or JSON data structures. Used to generate AWS API requests and process responses containing instance offering details.",
      "description_length": 313,
      "index": 614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatus",
      "description": "Provides operations to construct, parse, and serialize instance status data, including availability zone, instance ID, state, and status summaries. Works with custom types such as instance state, status summaries, and event lists. Used to process and transmit EC2 instance status information in API requests and responses.",
      "description_length": 322,
      "index": 615,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPrefixListReference",
      "description": "Provides operations to construct, parse, and serialize objects representing references to prefix lists in a transit gateway, including setting route table ID, prefix list ID, owner ID, state, blackhole flag, and attachment details. Works with custom types such as transit gateway route table identifiers, prefix list identifiers, and attachment structures. Used to generate AWS API requests and handle JSON or XML representations of transit gateway prefix list associations.",
      "description_length": 474,
      "index": 616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Image",
      "description": "Creates and manipulates image objects with detailed attributes such as ID, location, type, owner, and block device mappings. Processes XML nodes into image structures and converts between JSON, query parameters, and internal representations. Used for handling EC2 image metadata in AWS API interactions.",
      "description_length": 303,
      "index": 617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PriceScheduleSpecification",
      "description": "Provides operations to construct, parse, and serialize price schedule data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with currency codes, numeric prices, and term durations as core data elements. Used to process and exchange structured pricing information in API requests and responses.",
      "description_length": 343,
      "index": 618,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportSnapshotTask",
      "description": "Provides operations to construct, parse, and serialize objects representing import snapshot tasks, including setting description, task ID, detailed configuration, and tags. Works with types such as string, list of tags, and structured task details. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 331,
      "index": 619,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePermission",
      "description": "Provides operations to construct, parse, and serialize network interface permission data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data containing identifiers, AWS account and service information, and permission states. Used to handle EC2 network interface permission configurations in API requests and responses.",
      "description_length": 372,
      "index": 620,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Host",
      "description": "Provides functions to construct, parse, and serialize host objects with detailed attributes such as availability zones, instance lists, allocation states, and tags. Works with custom types like HostProperties.t, HostInstanceList.t, and AllocationState.t to represent cloud host configurations. Used to generate API requests and process XML or JSON responses from cloud infrastructure services.",
      "description_length": 393,
      "index": 621,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SubnetAssociationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of subnet association objects. Operates on lists of `SubnetAssociation.t` values and XML or JSON representations. Used to process and transmit subnet association data in AWS API interactions.",
      "description_length": 261,
      "index": 622,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplate",
      "description": "Provides functions to construct, parse, and serialize AWS launch template data, including handling timestamps, version numbers, and tags. Works with types such as strings, dates, long integers, and custom tag lists. Used to generate query parameters for API requests and convert data to and from JSON format.",
      "description_length": 308,
      "index": 623,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PrefixList",
      "description": "Provides operations to construct, parse, and serialize a structured representation of AWS prefix lists, including CIDR blocks, ID, and name. Works with custom types for string lists, AWS base strings, and JSON structures. Used to generate AWS API requests and process XML responses containing prefix list data.",
      "description_length": 310,
      "index": 624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnlimitedSupportedInstanceFamily",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize instance family data in AWS-related contexts.",
      "description_length": 268,
      "index": 625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ActiveInstance",
      "description": "Provides operations to construct, parse, and serialize instances with attributes like instance ID, type, spot request ID, and health status. Works with custom record types and XML or JSON data formats. Used to convert AWS instance data between internal representations and query or JSON payloads for API interactions.",
      "description_length": 317,
      "index": 626,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceBlockDeviceMappingSpecification",
      "description": "Provides operations to construct, parse, and serialize block device mapping specifications for EC2 instances, including handling device names, EBS configurations, and virtual names. Works with types such as strings, EBS specifications, and JSON structures. Used to generate AWS API requests and process XML or JSON responses from EC2 service interactions.",
      "description_length": 355,
      "index": 627,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LoadPermissionList",
      "description": "Provides functions to create, parse, and serialize lists of load permissions, including converting XML nodes to permission lists, generating AWS query parameters, and handling JSON serialization and deserialization. Operates on lists of `LoadPermission.t` values and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit load permission data in AWS API interactions.",
      "description_length": 419,
      "index": 628,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomain",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Transit Gateway Multicast Domains, including handling identifiers, state, timestamps, and tags. Works with structured data types such as strings, dates, and tagged lists. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 333,
      "index": 629,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PrincipalIdFormat",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS principal IDs with ARN and status information. Works with custom types including ARN strings and lists of ID format statuses. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 294,
      "index": 630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllowedPrincipal",
      "description": "Provides operations to construct, parse, and serialize principal data structures used in AWS requests, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional principal type and string values. Used to validate and format principal information for API calls requiring specific identity constraints.",
      "description_length": 374,
      "index": 631,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ByoipCidr",
      "description": "Represents a BYOIP CIDR block with methods to construct, parse, and serialize instances using XML and JSON formats. Works with string-based CIDR notations, status messages, and custom state types. Used to manage IP address range allocations in network infrastructure configurations.",
      "description_length": 282,
      "index": 632,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CoipPool",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS CoIP pools, including methods to convert between XML, query parameters, and JSON formats. Works with types such as string, list of strings, and tagged resource identifiers. Used to initialize and manipulate CoIP pool configurations in AWS VPC interactions.",
      "description_length": 336,
      "index": 633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DatafeedSubscriptionState",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type that can be initialized with a value and a unit. Used to manage and transform subscription state data for API interactions and data persistence.",
      "description_length": 320,
      "index": 634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetErrorItem",
      "description": "Provides constructors and parsers for handling errors in fleet deletion, including conversion to query parameters, JSON serialization, and deserialization. Works with custom types representing error details and fleet identifiers. Used to process XML responses from API calls and generate structured error data for further handling.",
      "description_length": 331,
      "index": 635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetSuccessItem",
      "description": "Provides methods to construct, parse, and serialize objects representing the outcome of a fleet deletion, including states before and after the operation and a fleet identifier. Works with custom types such as fleet state codes and AWS string representations. Used to generate query parameters and JSON payloads for API interactions following fleet deletion requests.",
      "description_length": 367,
      "index": 636,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreErrorItem",
      "description": "Provides operations to construct, parse, and serialize objects representing errors from disabling fast snapshot restore, including setting and retrieving snapshot IDs and error states. Works with AWS-specific data types such as strings, query parameters, and JSON structures. Used to handle and transmit error details in API responses related to snapshot restoration failures.",
      "description_length": 376,
      "index": 637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreSuccessItem",
      "description": "Provides constructors and parsers for handling AWS EC2 fast snapshot restore success items, including setting and extracting attributes like snapshot ID, availability zone, state, and timestamps. Works with custom types such as `Aws.BaseTypes.String.t`, `Aws.BaseTypes.DateTime.t`, and `FastSnapshotRestoreStateCode.t`. Used to process and serialize AWS API responses related to snapshot restore operations.",
      "description_length": 407,
      "index": 638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstance",
      "description": "Constructs and manipulates objects representing scheduled EC2 instances, including details like availability zones, instance types, pricing, and scheduling intervals. Works with structured data types such as dates, strings, integers, and custom recurrence patterns. Used to parse XML responses from AWS APIs, generate query parameters for API requests, and serialize/deserialize instance data in JSON format.",
      "description_length": 408,
      "index": 639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FlowLog",
      "description": "Provides functions to construct, parse, and serialize flow log configurations, including setting attributes like log group, resource ID, traffic type, and tags. Works with types such as DateTime, String, Integer, and custom types like TrafficType and LogDestinationType. Used to generate AWS API requests for flow log management and to process XML or JSON responses from AWS services.",
      "description_length": 384,
      "index": 640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BundleTask",
      "description": "Provides operations to construct, parse, serialize, and deserialize bundle task data, including creating a task with specific attributes like instance ID, state, and progress, and converting between XML, query, and JSON formats. Works with types such as bundle IDs, instance IDs, dates, and custom state and error types. Used to process and exchange bundle task information in AWS EC2 interactions.",
      "description_length": 398,
      "index": 641,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCreditSpecification",
      "description": "Provides operations to construct, parse, and serialize instances with credit specifications, including converting between XML, query, and JSON formats. Works with string-based instance IDs and CPU credits. Used to generate API requests and process responses in AWS-related workflows.",
      "description_length": 283,
      "index": 642,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CoipAddressUsage",
      "description": "Provides functions to construct, parse, and serialize objects representing CoIP address usage, including methods to convert between XML, query parameters, and JSON formats. Works with string-based identifiers and structured data types for AWS resources. Used to process and transmit CoIP usage metadata in API requests and responses.",
      "description_length": 333,
      "index": 643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetConfigurationRequest",
      "description": "Provides functions to construct, parse, and serialize configuration requests for target instances, including creating with instance count and offering ID, converting to query parameters, and handling JSON serialization and deserialization. Works with integer and string types for instance count and offering ID, and uses a record type to represent the configuration. Used to generate structured requests for cloud resource provisioning based on specific instance offerings.",
      "description_length": 473,
      "index": 644,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StaleSecurityGroup",
      "description": "Provides operations to construct, parse, and serialize objects representing stale security groups, including their descriptions, IDs, names, and stale IP permissions for both ingress and egress. Works with string types, sets of stale IP permissions, and JSON or query format representations. Used to process and exchange security group data in cloud infrastructure monitoring and validation workflows.",
      "description_length": 401,
      "index": 645,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroupReference",
      "description": "Encapsulates security group references with fields for group ID, VPC ID, and VPC peering connection ID, supporting creation from XML nodes and serialization to query parameters or JSON. Works with AWS-specific string types and structured JSON data. Used to construct and parse AWS security group reference payloads in API interactions.",
      "description_length": 335,
      "index": 646,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssignedPrivateIpAddress",
      "description": "Creates and manipulates objects representing assigned private IP addresses, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with string-based private IP addresses and structured data formats. Used to process API responses and construct requests in AWS-related workflows.",
      "description_length": 316,
      "index": 647,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableVpcAssociation",
      "description": "Provides operations to construct, parse, and serialize objects representing associations between local gateway route tables and VPCs, including handling identifiers, ARNs, ownership, and tags. Works with string-based identifiers, ARNs, and tag lists to model network resource relationships. Used to generate API requests and process XML or JSON responses in AWS networking workflows.",
      "description_length": 383,
      "index": 648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVolumePermissionList",
      "description": "Provides functions to construct, parse, and serialize lists of volume permission objects. Operates on lists of `CreateVolumePermission.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS volume permission data in API requests and responses.",
      "description_length": 300,
      "index": 649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Volume",
      "description": "Creates and manipulates volume objects with detailed attributes such as availability zone, size, state, and tags. Works with specific types like volume state, volume type, and tagged lists. Used to construct AWS volume representations from XML, JSON, or explicit parameters for API interactions.",
      "description_length": 295,
      "index": 650,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnConnection",
      "description": "Provides functions to construct, parse, and serialize objects representing client VPN connections, including setting attributes like connection ID, timestamps, byte counts, and status. Works with string-based data and a status type specific to VPN connection states. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 349,
      "index": 651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTable",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS local gateway route tables, including handling identifiers, ARNs, owner IDs, tags, and state. Works with string types, tag lists, and JSON/XML data structures. Used to generate API requests and process responses from AWS EC2 services.",
      "description_length": 314,
      "index": 652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Region",
      "description": "Provides operations to construct, parse, and serialize region information, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing endpoint, region name, and opt-in status fields. Used to initialize and serialize AWS region configurations for API requests.",
      "description_length": 324,
      "index": 653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnTunnelOptionsSpecificationsList",
      "description": "Handles conversion and parsing of VPN tunnel options between XML, query, and JSON formats. Operates on lists of `VpnTunnelOptionsSpecification.t` values, extracting and serializing them into structured data. Used to process XML responses from AWS API calls and generate JSON representations for further handling.",
      "description_length": 312,
      "index": 654,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6CidrAssociation",
      "description": "Provides functions to construct, parse, and serialize IPv6 CIDR association data, including converting between XML nodes, query parameters, and JSON representations. Works with string-based IPv6 CIDR blocks and associated resource identifiers. Used to handle AWS API responses and requests involving IPv6 CIDR associations.",
      "description_length": 323,
      "index": 655,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListAssociation",
      "description": "Provides operations to construct, parse, and serialize a structure representing AWS prefix list associations, including converting between XML nodes, query parameters, and JSON. Works with string-based resource identifiers and owners, and a structured record type. Used to process and transmit AWS VPC prefix list association data in API interactions.",
      "description_length": 351,
      "index": 656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Address",
      "description": "Creates and manipulates AWS address objects with fields like public IP, private IP, allocation ID, and tags. Processes XML nodes into address structures and converts between JSON, query parameters, and internal representations. Used to construct and serialize address data for AWS API interactions.",
      "description_length": 298,
      "index": 657,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTypeInfo",
      "description": "Provides methods to construct, parse, and serialize instance type information, including details about virtualization, memory, storage, and network configurations. Works with structured data types such as processor info, memory info, and lists of usage classes and root device types. Used to process and represent AWS instance type metadata in API requests and responses.",
      "description_length": 371,
      "index": 658,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnRoute",
      "description": "Provides functions to construct, parse, and serialize client VPN route data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data representing VPN routes, including fields like endpoint ID, destination CIDR, target subnet, and route status. Used to generate API requests and process responses in AWS client VPN management workflows.",
      "description_length": 384,
      "index": 659,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpnConnection",
      "description": "Provides operations to construct, parse, and serialize VPN connection data, including building with specific configurations, parsing XML nodes, and converting to query and JSON formats. Works with types such as VPN state, gateway type, static routes, and tags. Used to generate and process AWS VPN connection objects in API interactions.",
      "description_length": 337,
      "index": 660,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetNetwork",
      "description": "Provides operations to construct, parse, and serialize network association data, including methods to convert between XML, query parameters, and JSON formats. Works with types such as strings, lists of strings, and status enums to represent network configurations. Used to process and transmit network association details in AWS API interactions.",
      "description_length": 346,
      "index": 661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnection",
      "description": "Provides operations to construct, parse, and serialize VPC peering connection data, including setting information about requester and accepter VPCs, status, tags, and expiration time. Works with types such as VpcPeeringConnectionVpcInfo.t, VpcPeeringConnectionStateReason.t, and TagList.t. Used to generate AWS API requests and handle JSON or XML representations of peering connections.",
      "description_length": 386,
      "index": 662,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAcl",
      "description": "Provides operations to construct, parse, and serialize network ACL data, including methods to create instances with associations, entries, and metadata, and to convert between XML, query, and JSON formats. Works with structured data types such as lists of associations and entries, strings, and boolean flags. Used to process and represent AWS network ACL resources in API interactions and data serialization workflows.",
      "description_length": 419,
      "index": 663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing associations between local gateway route tables and virtual interface groups. Works with structured data types including strings, lists of tags, and JSON structures. Used to generate API requests and process XML or JSON responses in AWS networking contexts.",
      "description_length": 332,
      "index": 664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsErrorItem",
      "description": "Provides operations to construct, parse, and serialize data related to errors from canceling spot fleet requests, including converting between XML nodes, query parameters, and JSON representations. Works with types such as error details and spot fleet request IDs. Used to handle and transmit error information from API responses in a structured format.",
      "description_length": 353,
      "index": 665,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsSuccessItem",
      "description": "Provides operations to construct, parse, and serialize objects representing successful cancellations of spot fleet requests, including state transitions and request identifiers. Works with custom types for batch states and string-based request IDs. Used to process API responses and generate query parameters or JSON payloads for AWS interactions.",
      "description_length": 347,
      "index": 666,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AccountAttribute",
      "description": "Provides operations to construct, parse, and serialize account attribute data, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as string, list of attribute values, and JSON structures. Used to process and transmit account attribute configurations in AWS API interactions.",
      "description_length": 342,
      "index": 667,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskImage",
      "description": "Represents a disk image with methods to construct, parse XML, and serialize to query or JSON formats. Works with custom types for descriptions, image details, and volume details. Used to process and transmit disk image data in AWS API interactions.",
      "description_length": 248,
      "index": 668,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroupStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS security group configurations. Operates on lists of string values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle security group references in API requests and responses.",
      "description_length": 303,
      "index": 669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserData",
      "description": "Provides functions to construct, parse, and serialize user data between XML, query, and JSON formats. Works with a record type containing optional string data. Used to convert AWS XML responses into structured user information and prepare data for API requests.",
      "description_length": 261,
      "index": 670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpoint",
      "description": "Creates and manipulates VPC endpoint objects with detailed configuration, including ID, type, VPC ID, service name, state, policy, route tables, subnets, security groups, and timestamps. Operates on structured data types like strings, lists, sets, and timestamps, as well as AWS-specific types such as `State.t` and `TagList.t`. Used to construct and serialize VPC endpoint representations for API interactions and data exchange.",
      "description_length": 429,
      "index": 671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLinkInstance",
      "description": "Provides methods to construct, parse, serialize, and deserialize objects representing AWS ClassicLinkInstance resources. Works with types such as GroupIdentifierList, TagList, and strings for instance and VPC IDs. Used to generate AWS API requests and process XML or JSON responses from EC2 service interactions.",
      "description_length": 312,
      "index": 672,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Purchase",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS purchase details, including currency code, duration, host IDs, pricing, and payment options. Works with custom types such as currency codes, host ID sets, and payment options. Used to generate query parameters for API requests and to convert between XML and JSON representations in AWS integration workflows.",
      "description_length": 387,
      "index": 673,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachment",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Transit Gateway attachments, including methods to convert between XML, query parameters, and JSON formats. Works with data types such as strings, dates, custom enums for resource types and states, and tagged lists. Used to process and transmit attachment details in AWS API interactions, such as creating or querying network configurations.",
      "description_length": 420,
      "index": 674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Snapshot",
      "description": "Provides functions to construct, parse, and serialize snapshot data, including creating a snapshot with detailed attributes like encryption settings, volume information, and tags. Works with types such as datetime, boolean, integer, and custom structures like `SnapshotState.t` and `TagList.t`. Used to generate AWS-compatible query parameters, JSON representations, and to parse XML responses into structured snapshot objects.",
      "description_length": 427,
      "index": 675,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateFleetError",
      "description": "Provides functions to construct, parse, and serialize error objects with specific fields like launch template overrides, instance lifecycle, error code, and message. Works with custom record types and XML or JSON data formats. Used to generate structured error responses for fleet creation failures in AWS interactions.",
      "description_length": 319,
      "index": 676,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFleetInstance",
      "description": "Provides functions to construct, parse, and serialize instances with specific configurations including launch templates, lifecycle, instance IDs, instance types, and platforms. Works with types such as LaunchTemplateAndOverridesResponse.t, InstanceLifecycle.t, InstanceIdsSet.t, InstanceType.t, and PlatformValues.t. Used to generate AWS API-compatible query parameters and JSON representations from instance data.",
      "description_length": 414,
      "index": 677,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotInfo",
      "description": "Represents AWS snapshot metadata, providing constructors for initializing with specific attributes like volume ID, state, and tags, and parsers for converting XML and JSON data into this structure. It supports serialization to query parameters and JSON format for API interactions. Used to construct and manipulate snapshot details in cloud management workflows.",
      "description_length": 362,
      "index": 678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorTarget",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS traffic mirror targets, including setting attributes like network interface, load balancer ARN, type, and tags. Works with types such as strings, lists of tags, and custom record structures. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 352,
      "index": 679,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilterRuleField",
      "description": "Converts between string representations and a custom type, supporting XML parsing, query parameter encoding, and JSON serialization. Works with a polymorphic type that can represent various traffic mirror filter rule fields. Used to process and encode rule configurations in AWS API interactions.",
      "description_length": 296,
      "index": 680,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeModification",
      "description": "Provides operations to construct, parse, serialize, and deserialize volume modification data, including volume ID, size, IOPS, type, and timestamps. Works with AWS-specific types such as strings, integers, dates, and custom volume state and type enums. Used to process and transmit volume modification details in API requests and responses.",
      "description_length": 340,
      "index": 681,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NewDhcpConfiguration",
      "description": "Provides functions to construct, parse, serialize, and deserialize DHCP configuration data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based key-value pairs and lists of string values. Used to process and encode DHCP options in AWS API interactions.",
      "description_length": 316,
      "index": 682,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterface",
      "description": "Provides constructors and parsers for network interface data, including methods to build, parse, and serialize network interface objects. Works with structured data types such as string identifiers, boolean flags, lists of groups and tags, and nested records. Used to generate AWS API requests and process XML or JSON responses from network interface operations.",
      "description_length": 362,
      "index": 683,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionNotification",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS connection notifications, including setting identifiers, event types, and states. Works with string-based identifiers, lists of event strings, and custom type enumerations. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 335,
      "index": 684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstances",
      "description": "Provides operations to create, parse, and serialize ReservedInstances data, including handling availability zones, instance types, pricing, and tags. Works with structured data types such as dates, floats, integers, and custom enums for AWS reservation configurations. Used to construct and manipulate reserved instance details for cloud infrastructure planning and billing integration.",
      "description_length": 386,
      "index": 685,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPeeringAttachment",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Transit Gateway peering attachments, including handling of attachment IDs, peer information, status, state, timestamps, and tags. Works with custom types such as PeeringTgwInfo, PeeringAttachmentStatus, TransitGatewayAttachmentState, and TagList. Used to generate API requests, process XML responses, and convert data to and from JSON format for AWS interactions.",
      "description_length": 443,
      "index": 686,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelledSpotInstanceRequest",
      "description": "Provides operations to construct, parse, and serialize data related to canceling spot instance requests, including converting between XML, query parameters, and JSON formats. Works with structured data containing spot instance request IDs and state information. Used to generate API requests and process responses in cloud infrastructure management workflows.",
      "description_length": 359,
      "index": 687,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceConfiguration",
      "description": "Provides functions to construct, parse, and serialize service configuration data, including setting service details, availability zones, load balancer ARNs, and DNS configurations. Works with types such as service state, string lists, and JSON structures. Used to generate AWS API requests and process XML or JSON responses from service configuration endpoints.",
      "description_length": 361,
      "index": 688,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConversionTask",
      "description": "Provides functions to construct, parse, and serialize conversion task data, including handling task details like import instance or volume, state, and tags. Works with types such as task IDs, expiration times, status messages, and structured task details. Used to generate AWS API queries and JSON representations from task data.",
      "description_length": 329,
      "index": 689,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayVpcAttachment",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Transit Gateway VPC attachments, including handling of identifiers, state, subnets, and tags. Works with specific types such as string identifiers, date times, lists of strings, and custom option structures. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 370,
      "index": 690,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstanceReservationValue",
      "description": "Provides operations to construct, parse, and serialize objects representing reserved instance reservation values, including parsing from XML nodes and converting to query parameters or JSON. Works with types such as ReservationValue.t and Aws.BaseTypes.String.t. Used to process and transmit reservation data in AWS API interactions.",
      "description_length": 333,
      "index": 691,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetReservationValue",
      "description": "Provides operations to construct, parse, serialize, and deserialize a target reservation value, including converting between XML nodes, query parameters, and JSON representations. Works with types such as ReservationValue.t, TargetConfiguration.t, and Aws.Query.t. Used to generate and process AWS API requests involving target reservations.",
      "description_length": 341,
      "index": 692,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRoute",
      "description": "Provides functions to construct, parse, and serialize objects representing routes in a transit gateway, including setting destination CIDR blocks, prefix lists, attachments, route type, and state. Works with types such as string, list of route attachments, and route state. Used to generate AWS API requests and handle JSON/XML representations of route configurations.",
      "description_length": 368,
      "index": 693,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HistoryRecord",
      "description": "Provides operations to construct, parse, serialize, and deserialize records containing event information, event type, and timestamp. Works with structured data including event details, timestamps, and XML or JSON representations. Used to convert raw XML data from AWS responses into typed records and prepare them for API queries.",
      "description_length": 330,
      "index": 694,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImage",
      "description": "Provides constructors and parsers for handling FPGA image metadata, including methods to create instances from parameters, parse XML nodes, and serialize/deserialize to query strings and JSON. Works with structured data types such as timestamps, PCI IDs, and tagged collections. Used to construct and process FPGA image objects in AWS API interactions.",
      "description_length": 352,
      "index": 695,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreErrorItem",
      "description": "Provides operations to construct, parse, and serialize error items related to enabling fast snapshot restore, including setting and retrieving snapshot IDs and error states. Works with AWS-specific types such as strings, query parameters, and JSON structures. Used to handle and convert error responses from AWS API calls involving snapshot restore configurations.",
      "description_length": 364,
      "index": 696,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreSuccessItem",
      "description": "Provides constructors and parsers for handling AWS EC2 fast snapshot restore success items, including methods to convert between XML, JSON, and query parameters. Works with structured data containing snapshot IDs, availability zones, states, timestamps, and owner information. Used to process and serialize responses from AWS API calls related to fast snapshot restore operations.",
      "description_length": 380,
      "index": 697,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RouteTable",
      "description": "Provides operations to construct, parse, and serialize route table data, including route associations, propagating virtual gateways, and tags. Works with structured data types such as route lists, tag lists, and string identifiers. Used to generate AWS API queries and JSON representations from route table configurations.",
      "description_length": 322,
      "index": 698,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IamInstanceProfileAssociation",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS IAM instance profile associations, including methods to convert between XML, query parameters, and JSON formats. Works with string identifiers, timestamps, and custom types for IAM instance profiles and association states. Used to process and transmit association data in AWS API interactions.",
      "description_length": 373,
      "index": 699,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateVersion",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS EC2 launch template versions, including setting identifiers, version numbers, descriptions, timestamps, and associated configuration data. Works with structured data types such as strings, dates, booleans, and nested records for launch template details. Used to generate API requests and process XML or JSON responses from AWS EC2 service interactions.",
      "description_length": 432,
      "index": 700,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CarrierGateway",
      "description": "Provides functions to construct, parse, and serialize carrier gateway objects with attributes such as ID, VPC ID, state, owner ID, and tags. Works with custom types including string, state, and tag lists, and supports XML and JSON serialization. Used to convert AWS API responses into structured data and prepare parameters for API requests.",
      "description_length": 341,
      "index": 701,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationGroup",
      "description": "Provides operations to construct, parse, and serialize capacity reservation group data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing optional ARN and owner ID fields. Used to process and transmit capacity reservation group information in AWS API interactions.",
      "description_length": 336,
      "index": 702,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastGroup",
      "description": "Provides functions to construct, parse, and serialize objects representing multicast group configurations for a transit gateway, including setting group IP addresses, attachment IDs, subnet IDs, and membership types. Works with string, boolean, and custom type representations for AWS transit gateway resources. Used to generate query parameters for API requests and to convert data to and from JSON format.",
      "description_length": 407,
      "index": 703,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayVirtualInterface",
      "description": "Provides operations to construct, parse, and serialize objects representing a virtual interface connected to a local gateway, including methods to convert between XML, query parameters, and JSON formats. Works with data types such as strings, integers, and custom tag lists to represent interface configurations. Used to process and transmit virtual interface details in AWS API interactions, such as creating or retrieving interface metadata.",
      "description_length": 443,
      "index": 704,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticInferenceAccelerator",
      "description": "Provides operations to create, parse, and serialize objects representing Elastic Inference accelerators, including converting between XML, query parameters, and JSON formats. Works with a structured type containing a string for the accelerator type and an optional integer for the count. Used to generate AWS API requests and process responses involving inference resources.",
      "description_length": 374,
      "index": 705,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotMarketOptions",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing spot market options, including setting max price, instance type, block duration, validity, and interruption behavior. Works with custom types such as `SpotInstanceType`, `InstanceInterruptionBehavior`, and datetime values. Used to generate AWS API requests and process XML or JSON responses related to spot instance configurations.",
      "description_length": 420,
      "index": 706,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LicenseConfigurationRequest",
      "description": "Creates a request object for license configuration operations, supporting construction from an ARN, XML parsing, query string generation, and JSON serialization/deserialization. Works with AWS ARN strings and structured data formats like XML and JSON. Used to prepare and process license configuration parameters in API interactions.",
      "description_length": 333,
      "index": 707,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayVirtualInterfaceGroup",
      "description": "Provides operations to construct, parse, and serialize objects representing a group of local gateway virtual interfaces, including converting between XML, query parameters, and JSON formats. Works with string identifiers, sets of virtual interface IDs, and tag lists. Used to process and transmit AWS API responses related to virtual interface groups.",
      "description_length": 351,
      "index": 708,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.MovingAddressStatus",
      "description": "Provides methods to construct, parse, and serialize data related to a moving address status, including converting between XML, query parameters, and JSON formats. Works with custom types representing move status and public IP addresses. Used to process and transmit address status information in AWS-related workflows.",
      "description_length": 318,
      "index": 709,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreditSpecificationRequest",
      "description": "Creates a structured representation for credit specification requests using a record type containing a CPU credits string. Parses XML nodes into this structure and converts it to query parameters, JSON associations, and from JSON. Used to format and process credit configuration data in AWS API interactions.",
      "description_length": 308,
      "index": 710,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuSpecificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of ElasticGpuSpecification objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert GPU configuration data from API responses into structured OCaml values.",
      "description_length": 271,
      "index": 711,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateBlockDeviceMappingRequestList",
      "description": "Handles conversion and parsing of block device mapping requests for EC2 launch templates. Processes XML nodes into a list of request objects, serializes to query parameters, and converts between JSON and internal representations. Used to prepare and interpret block device configurations in AWS API interactions.",
      "description_length": 312,
      "index": 712,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateCapacityReservationSpecificationRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing capacity reservation specifications for launch templates. Works with types such as capacity reservation preferences and targets, and supports XML and JSON serialization. Used to configure instance launch settings with specific capacity reservation constraints.",
      "description_length": 335,
      "index": 713,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateCpuOptionsRequest",
      "description": "Provides operations to construct, parse, and serialize CPU options for EC2 launch templates, including setting core count and threads per core. Works with integer values and JSON/XML data structures for configuration. Used to generate query parameters for API requests and convert between JSON and internal representations.",
      "description_length": 323,
      "index": 714,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateElasticInferenceAcceleratorList",
      "description": "Constructs a list of elastic inference accelerators from a value, parses XML nodes into a list of accelerator configurations, converts the list to an AWS query structure, serializes to JSON, and deserializes from JSON. Operates on lists of accelerator objects with specific attributes. Used to process and format accelerator data for AWS API requests and responses.",
      "description_length": 365,
      "index": 715,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateEnclaveOptionsRequest",
      "description": "Provides functions to create, parse, and serialize enclave options configuration, including enabling enclave support. Works with boolean values and structured data formats like XML and JSON. Used to generate AWS API requests with enclave settings specified.",
      "description_length": 257,
      "index": 716,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateHibernationOptionsRequest",
      "description": "Provides functions to create, parse, and serialize hibernation options for EC2 launch templates, including converting between XML nodes, query parameters, and JSON representations. Works with boolean configurations stored in a record type. Used to construct and validate hibernation settings during template deployment.",
      "description_length": 319,
      "index": 717,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateIamInstanceProfileSpecificationRequest",
      "description": "Provides functions to construct, parse, and serialize IAM instance profile specifications using ARN or name. Works with string-based ARN and name values, and JSON or query parameter formats. Used to configure instance profiles in AWS launch templates with precise identity and access settings.",
      "description_length": 293,
      "index": 718,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceMarketOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize instances of market options for EC2 launch templates, including creating with specified market types and spot options. Works with types such as MarketType.t and LaunchTemplateSpotMarketOptionsRequest.t. Used to generate AWS API queries and JSON representations from configuration data.",
      "description_length": 339,
      "index": 719,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceMetadataOptionsRequest",
      "description": "Provides operations to construct, parse, and serialize metadata options for EC2 instance launch templates, including HTTP token handling, response hop limit, and endpoint configuration. Works with types representing HTTP token states, integer hop limits, and endpoint states. Used to configure instance metadata accessibility settings in AWS EC2 requests.",
      "description_length": 355,
      "index": 720,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList",
      "description": "Handles conversion and parsing of network interface specifications for EC2 instances. Processes XML nodes into a list of network interface objects and serializes them to query parameters or JSON format. Used to construct and validate network configuration data for instance launch templates.",
      "description_length": 291,
      "index": 721,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateLicenseSpecificationListRequest",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of license configuration requests. Operates on lists of `LaunchTemplateLicenseConfigurationRequest.t` values. Used to handle AWS EC2 launch template license specifications in XML and JSON formats.",
      "description_length": 266,
      "index": 722,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplatePlacementRequest",
      "description": "Provides constructors and parsers for AWS EC2 placement configuration data, including availability zones, tenancy settings, and group names. Works with string, integer, and custom tenancy type representations. Used to generate query parameters and JSON payloads for EC2 instance placement requests.",
      "description_length": 298,
      "index": 723,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateTagSpecificationRequestList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of tag specification requests for EC2 launch templates. Operates on lists of `LaunchTemplateTagSpecificationRequest.t` values and XML or JSON representations. Used to process and transmit tag configurations in AWS API requests.",
      "description_length": 297,
      "index": 724,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplatesMonitoringRequest",
      "description": "Provides operations to create, parse, and serialize monitoring configuration data, including enabling or disabling monitoring. Works with boolean flags and structured data representing AWS launch template monitoring settings. Used to generate query parameters and JSON representations for AWS API interactions.",
      "description_length": 310,
      "index": 725,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorSession",
      "description": "Constructs and manipulates objects representing AWS Traffic Mirror sessions, supporting fields like session ID, target ID, filter ID, network interface, owner, packet length, and tags. Parses XML nodes into session objects and serializes session data into query parameters, JSON associations, and deserializes from JSON. Used to configure and manage traffic mirroring settings in network monitoring scenarios.",
      "description_length": 409,
      "index": 726,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6Pool",
      "description": "Provides operations to create, parse, and serialize IPv6 pool configurations, including handling CIDR blocks and tags. Works with structured data types such as pool IDs, descriptions, CIDR block sets, and tag lists. Used to generate AWS API requests and process XML or JSON responses from network configuration services.",
      "description_length": 320,
      "index": 727,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateVersionsResponseErrorItem",
      "description": "Provides operations to construct, parse, and serialize objects representing errors from deleting launch template versions, including methods to convert between XML, query, and JSON formats. Works with string identifiers, numeric version numbers, and custom response error structures. Used to handle API responses in AWS EC2 interactions where deletion errors need structured representation.",
      "description_length": 390,
      "index": 728,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateVersionsResponseSuccessItem",
      "description": "Provides operations to construct, parse, and serialize data related to successful deletions of launch template versions, including methods to convert between XML, query parameters, and JSON formats. Works with string identifiers for launch templates and numeric version numbers. Used to process API responses where specific launch template versions are confirmed as deleted.",
      "description_length": 374,
      "index": 729,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceRequest",
      "description": "Constructs and manipulates objects representing AWS Spot Instance Requests, incorporating details like instance ID, availability zone, launch specifications, and pricing. Processes XML nodes into structured data and serializes/deserializes instances to and from query parameters and JSON. Used to manage and track Spot Instance Request states, including interruption behavior and associated tags.",
      "description_length": 396,
      "index": 730,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FailedQueuedPurchaseDeletion",
      "description": "Provides operations to construct, parse, and serialize objects representing failed queued purchase deletions, including error handling and AWS query or JSON serialization. Works with AWS-specific types such as error records and string identifiers. Used to manage and transmit deletion failure data in cloud infrastructure workflows.",
      "description_length": 332,
      "index": 731,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SuccessfulQueuedPurchaseDeletion",
      "description": "Provides operations to construct, parse, and serialize a structure representing a queued purchase deletion, including converting between XML nodes, query parameters, and JSON. Works with AWS-specific types such as strings and JSON structures. Used to handle API requests for deleting reserved instances through structured data conversion.",
      "description_length": 338,
      "index": 732,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTask",
      "description": "{ description : Aws.BaseTypes.String.t; export_task_id : Aws.BaseTypes.String.t; export_to_s3_task : ExportToS3Task.t; instance_export_details : InstanceExportDetails.t; state : ExportTaskState.t; status_message : Aws.BaseTypes.String.t; tags : TagList.t option } Provides methods to construct, parse, and serialize export task data, including converting between XML, query parameters, and JSON formats. Works with structured data representing AWS export tasks and their metadata. Used to generate API requests and process responses from AWS services handling instance exports.",
      "description_length": 577,
      "index": 733,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMonitoring",
      "description": "Provides methods to construct, parse, and serialize monitoring data for AWS instances, including converting between XML, query parameters, and JSON formats. Works with AWS string types, monitoring configurations, and JSON structures. Used to generate HTTP requests and process XML responses from AWS APIs.",
      "description_length": 305,
      "index": 734,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroup",
      "description": "Represents an AWS security group with methods to construct, parse, and serialize its data. It works with structured data including IP permissions, tags, and identifiers like group ID and owner ID. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 279,
      "index": 735,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceDetail",
      "description": "Provides constructors and parsers for service details, including service names, IDs, types, availability zones, and tags. Works with custom types such as service type sets, string lists, and JSON structures. Used to generate AWS API queries and handle JSON serialization for service configuration data.",
      "description_length": 302,
      "index": 736,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnEndpoint",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS Client VPN endpoints, including setting attributes like client CIDR block, DNS name, authentication options, and connection log settings. Works with specific types such as client VPN status, VPC IDs, security group IDs, and JSON or XML representations. Used to generate API requests for creating or updating Client VPN endpoints and to process responses from AWS services.",
      "description_length": 451,
      "index": 737,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateConfigRequest",
      "description": "Provides functions to construct, parse, and serialize configuration objects for fleet launch templates, including setting launch template specifications and overrides. Works with custom types representing launch template specifications and overrides lists. Used to generate AWS API requests and handle JSON serialization for cloud infrastructure provisioning.",
      "description_length": 359,
      "index": 738,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationOptionsRequest",
      "description": "Provides operations to construct, parse, and serialize objects representing capacity reservation options for EC2 fleets, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a usage strategy field. Used to configure how capacity reservations are applied when launching instances in a fleet.",
      "description_length": 357,
      "index": 739,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FleetSpotMaintenanceStrategiesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for managing spot fleet maintenance strategies, including capacity rebalancing. Works with structured data types such as `FleetSpotCapacityRebalanceRequest.t` and JSON or query parameter representations. Used to generate HTTP requests for AWS API interactions involving spot instance maintenance policies.",
      "description_length": 369,
      "index": 740,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InternetGateway",
      "description": "Provides operations to construct, parse, and serialize Internet Gateway objects, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific data types such as string identifiers, tag lists, and attachment lists. Used to generate API requests and process responses in cloud infrastructure management workflows.",
      "description_length": 358,
      "index": 741,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AccountAttributeName",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a type `t` that encapsulates account attribute names, supporting safe construction and validation. Used to transform and validate account attribute data in AWS API interactions.",
      "description_length": 338,
      "index": 742,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetData",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS EC2 fleet configurations, including launch templates, capacity specifications, and termination policies. Works with types such as datetime, boolean, double, and custom records for fleet states, tags, and errors. Used to generate API requests, process XML responses, and convert data to and from JSON for integration with AWS services.",
      "description_length": 422,
      "index": 743,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetRequestConfig",
      "description": "Provides operations to construct, parse, and serialize AWS Spot Fleet Request configurations, including handling activity status, creation time, request ID, state, and tags. Works with types such as ActivityStatus, DateTime, SpotFleetRequestConfigData, BatchState, and TagList. Used to generate API requests and process XML or JSON responses from AWS EC2.",
      "description_length": 355,
      "index": 744,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseRequest",
      "description": "Creates a structured purchase request from an instance count and token, parses XML nodes into this structure, and converts between JSON, query parameters, and internal representation. Works with integers, strings, XML nodes, JSON objects, and query strings. Used to process and serialize purchase data from AWS API responses and requests.",
      "description_length": 338,
      "index": 745,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZone",
      "description": "Provides constructors and parsers for handling AWS availability zone data, including methods to convert between XML, query parameters, and JSON formats. Works with structured data containing zone attributes like name, ID, region, status, and messages. Used to process and serialize availability zone information from API responses or configuration files.",
      "description_length": 354,
      "index": 746,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CustomerGateway",
      "description": "Provides operations to construct, parse, and serialize customer gateway data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing BGP ASN, customer gateway ID, IP address, and optional attributes like certificate ARN, state, type, device name, and tags. Used to generate and process customer gateway configurations in AWS API interactions.",
      "description_length": 409,
      "index": 747,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusItem",
      "description": "Provides operations to construct, parse, and serialize volume status objects with detailed attributes such as volume ID, availability zone, outpost ARN, status, attachments, events, and actions. Works with specific types including strings, lists of status actions, events, and attachment statuses. Used to generate AWS API-compatible queries and JSON representations from parsed XML data.",
      "description_length": 388,
      "index": 748,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTableAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing associations between transit gateway route tables and resources. Works with types including transit gateway attachment IDs, resource IDs, resource types, and association states. Used to generate AWS API queries and JSON representations for route table associations.",
      "description_length": 340,
      "index": 749,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HostOffering",
      "description": "Provides constructors and parsers for AWS host offering data, including methods to create instances with specific attributes like currency code, duration, hourly price, and offering ID. Works with custom types such as CurrencyCodeValues.t, Aws.BaseTypes.Integer.t, and PaymentOption.t. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 366,
      "index": 750,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTable",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Transit Gateway Route Tables, including setting identifiers, state, association and propagation flags, creation time, and tags. Works with data types such as strings, booleans, dates, and custom record structures. Used to generate API requests, process XML responses, and handle JSON serialization in cloud infrastructure management workflows.",
      "description_length": 423,
      "index": 751,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RemovePrefixListEntry",
      "description": "Provides operations to create, parse, and serialize a network prefix entry represented as a CIDR string. Works with the `t` type, which encapsulates a single IPv4 or IPv6 network range. Used to construct and validate AWS API requests involving IP address ranges.",
      "description_length": 262,
      "index": 752,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AuthorizationRule",
      "description": "Encapsulates rules for authorizing access to a client VPN, including client VPN endpoint ID, description, group ID, access permissions, destination CIDR, and status. Processes XML nodes into rule structures and converts between JSON, query parameters, and internal representations. Used to configure and serialize access control policies for secure network connections.",
      "description_length": 369,
      "index": 753,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomainAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing associations between transit gateways and multicast domains, including setting attachment IDs, resource IDs, resource types, and subnet associations. Works with custom types such as transit gateway attachment resource types and subnet associations. Used to generate query parameters and JSON representations for API interactions involving multicast domain configurations.",
      "description_length": 446,
      "index": 754,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorSessionField",
      "description": "Converts between string representations and a custom type, supporting XML parsing, query parameter encoding, and JSON serialization. Works with a polymorphic type that can be instantiated with any value. Used to handle session field values in AWS API interactions, such as extracting or formatting session identifiers from XML responses.",
      "description_length": 337,
      "index": 755,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SuccessfulInstanceCreditSpecificationItem",
      "description": "Provides operations to construct, parse, and serialize instances of credit specifications, including creating with an optional instance ID, parsing XML nodes, and converting to query parameters, JSON, or from JSON. Works with AWS-specific types such as strings, queries, and JSON structures. Used to handle credit configuration data in AWS API interactions, such as when processing instance credit settings from responses.",
      "description_length": 422,
      "index": 756,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulInstanceCreditSpecificationItem",
      "description": "Provides operations to construct, parse, and serialize objects representing failed instance credit specification updates, including handling error details. Works with string-based instance IDs and custom error types specific to AWS API responses. Used to process and transmit error information from API calls that fail to update instance credit settings.",
      "description_length": 354,
      "index": 757,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesOffering",
      "description": "Provides constructors and parsers for handling AWS Reserved Instances Offering data, including methods to create instances from parameters, parse XML nodes, and serialize/deserialize to query strings and JSON. Works with types such as availability zones, instance types, pricing details, and recurring charges. Used to process and exchange Reserved Instances Offering information in AWS API interactions.",
      "description_length": 404,
      "index": 758,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstanceAvailability",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing scheduled instance availability data, including details like availability zones, instance counts, pricing, and term durations. Works with structured data types containing fields such as datetime, integers, and strings, along with custom types like ScheduledInstanceRecurrence. Used to process and exchange scheduled instance availability information in cloud infrastructure workflows.",
      "description_length": 473,
      "index": 759,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Reservation",
      "description": "Provides operations to construct, parse, and serialize reservation data, including converting between XML nodes, query parameters, and JSON representations. Works with custom types for group identifiers, instance lists, and string-based identifiers. Used to generate structured reservation objects from XML responses and prepare them for API requests or storage.",
      "description_length": 362,
      "index": 760,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PublicIpv4Pool",
      "description": "Provides operations to construct, parse, serialize, and deserialize objects representing AWS public IPv4 address pools. Works with types such as string, integer, and custom record structures for address ranges and tags. Used to generate AWS API requests and process XML or JSON responses from EC2 service interactions.",
      "description_length": 318,
      "index": 761,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Vpc",
      "description": "Provides functions to construct, parse, and serialize VPC objects with specific attributes like CIDR blocks, DHCP options, and tags. Works with types such as VpcState.t, Tenancy.t, and various association sets. Used to generate AWS API requests and handle VPC resource representations in JSON or query formats.",
      "description_length": 310,
      "index": 762,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGateway",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS local gateways, including converting between XML, query parameters, and JSON formats. Works with types such as strings, tag lists, and structured data representing gateway attributes. Used to generate API requests and process responses in AWS SDK interactions.",
      "description_length": 340,
      "index": 763,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Subnet",
      "description": "Provides functions to construct, parse, and serialize subnet objects with detailed attributes such as CIDR blocks, availability zones, IP address counts, and tags. Works with structured data types including subnet state, IP address associations, and tag lists. Used to generate AWS API requests and process XML or JSON responses from subnet-related services.",
      "description_length": 358,
      "index": 764,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpus",
      "description": "Provides functions to construct, parse, and serialize objects representing Amazon Elastic GPUs, including setting attributes like GPU type, availability zone, and health status. Works with types such as `ElasticGpuHealth.t`, `ElasticGpuState.t`, and `TagList.t` to manage GPU metadata. Used to generate API requests and process XML or JSON responses from AWS services.",
      "description_length": 368,
      "index": 765,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcClassicLink",
      "description": "Provides operations to construct, parse, and serialize VPC classic link configurations, including enabling classic link, associating tags, and linking to a VPC. Works with boolean flags, tag lists, and string identifiers. Used to generate AWS API requests and handle JSON or XML representations in network configuration workflows.",
      "description_length": 330,
      "index": 766,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageTask",
      "description": "Constructs and manipulates objects representing AWS EC2 import image tasks, including attributes like image ID, status, and snapshot details. Processes XML nodes into task structures and serializes tasks to query parameters, JSON, and back from JSON. Used to handle task metadata during image import operations in cloud infrastructure workflows.",
      "description_length": 345,
      "index": 767,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SpotPrice",
      "description": "Provides operations to construct, parse, and serialize spot price data including availability zone, instance type, product description, spot price value, and timestamp. Works with custom types such as InstanceType, RIProductDescription, and datetime structures. Used to process AWS EC2 spot price XML responses and convert them into query parameters or JSON for API interactions.",
      "description_length": 379,
      "index": 768,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReportInstanceReasonCodes",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a polymorphic type `t` that can be instantiated using a generic constructor. Used to handle structured error or status codes in AWS-related data processing workflows.",
      "description_length": 327,
      "index": 769,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCreditSpecificationRequest",
      "description": "Provides operations to construct, parse, and serialize instances with credit specifications, including setting instance IDs and CPU credits. Works with string-based identifiers and structured data formats like XML and JSON. Used to generate API requests for cloud instance configuration updates.",
      "description_length": 295,
      "index": 770,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.OccurrenceDayRequestSet",
      "description": "Provides operations to create a list of integers, parse XML nodes into integer lists, convert integer lists to query parameters, serialize to JSON lists, and deserialize from JSON. Works with lists of integers as its core data structure. Used to process and format day-of-week request data from XML input for API interactions.",
      "description_length": 326,
      "index": 771,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImageDiskContainer",
      "description": "Provides operations to construct, parse, and serialize disk container configurations for AWS instances, including converting between XML, query parameters, and JSON formats. Works with custom types such as `UserBucket.t` and standard AWS string types. Used to generate valid AWS API requests for instance launch configurations involving disk images.",
      "description_length": 349,
      "index": 772,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageLicenseConfigurationRequest",
      "description": "Provides operations to construct, parse, and serialize a request structure containing a license configuration ARN. Works with AWS query parameters, JSON data, and XML nodes. Used to initialize and convert request data for API interactions involving image license configurations.",
      "description_length": 278,
      "index": 773,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRoute",
      "description": "Provides operations to construct, parse, and serialize objects representing local gateway routes, including setting destination CIDR blocks, route types, states, and associated identifiers. Works with structured data types containing route configuration details and AWS resource identifiers. Used to generate API requests and process XML or JSON responses from AWS networking services.",
      "description_length": 385,
      "index": 774,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesBlockDeviceMappingSet",
      "description": "Provides functions to create, parse, and serialize block device mapping data for scheduled instances, including converting between XML nodes, query parameters, and JSON structures. Operates on lists of block device mapping records, each representing a specific storage configuration. Used to process and transmit instance storage settings in AWS API interactions.",
      "description_length": 363,
      "index": 775,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesIamInstanceProfile",
      "description": "Provides functions to construct, parse, and serialize IAM instance profile data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional ARN and name fields. Used to process and transmit IAM instance profile information in AWS API interactions.",
      "description_length": 321,
      "index": 776,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesMonitoring",
      "description": "Provides operations to create, parse, and serialize monitoring configurations for scheduled instances, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing a boolean flag for monitoring enablement. Used to handle AWS API responses and requests related to instance monitoring settings.",
      "description_length": 355,
      "index": 777,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesNetworkInterfaceSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of network interface configurations for scheduled instances. Operates on lists of `ScheduledInstancesNetworkInterface.t` values, converting them to query parameters, JSON structures, and vice versa. Used to handle network interface data in AWS API interactions, such as configuring or retrieving instance setup details.",
      "description_length": 392,
      "index": 778,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesPlacement",
      "description": "Provides functions to construct, parse, and serialize placement configurations for scheduled instances, including availability zone and group name settings. Works with a record type containing optional strings for availability zone and group name. Used to generate query parameters and JSON representations for AWS API interactions.",
      "description_length": 332,
      "index": 779,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NatGateway",
      "description": "Creates and manipulates objects representing AWS NAT gateways, including handling timestamps, error messages, network addresses, and resource tags. Operates on structured data types such as timestamps, strings, lists of addresses, and bandwidth configurations. Used to serialize, deserialize, and query NAT gateway information in AWS API interactions.",
      "description_length": 351,
      "index": 780,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceUsage",
      "description": "Provides methods to construct, parse, serialize, and deserialize instance usage data, including creating instances with optional account ID and used instance count, parsing XML nodes into structured data, and converting between JSON and query formats. Works with custom types representing instance usage information, including account identifiers and numerical counters. Used to process and transmit instance usage metrics in AWS-related workflows, such as billing or resource tracking.",
      "description_length": 486,
      "index": 781,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFastSnapshotRestoreSuccessItem",
      "description": "Provides constructors and parsers for handling AWS Fast Snapshot Restore status items, including methods to convert between XML, JSON, and query formats. Works with structured data containing snapshot IDs, availability zones, state codes, and timestamps. Used to process and serialize AWS API responses related to snapshot restore operations.",
      "description_length": 342,
      "index": 782,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EgressOnlyInternetGateway",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Egress-Only Internet Gateways, including handling attachments and tags. Works with types such as InternetGatewayAttachmentList, TagList, and string identifiers. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 321,
      "index": 783,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LoadPermissionListRequest",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of load permission requests. Operates on lists of `LoadPermissionRequest.t` values and XML or JSON representations. Used to convert raw XML input into structured request data and prepare queries for API interactions.",
      "description_length": 289,
      "index": 784,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationIdSet",
      "description": "Provides operations to create, parse, and serialize a list of string-based capacity reservation identifiers. Works with lists of strings representing AWS resource IDs and converts them to query parameters, JSON lists, and vice versa. Used to handle AWS API input and output for collections of reserved capacity identifiers.",
      "description_length": 323,
      "index": 785,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FilterList",
      "description": "Provides functions to create, parse, serialize, and deserialize filter lists. Operates on XML nodes, AWS query structures, and JSON representations of filter lists. Used to convert between XML input and AWS API-compatible query parameters or JSON payloads.",
      "description_length": 256,
      "index": 786,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BlockDeviceMappingRequestList",
      "description": "Handles conversion and parsing of block device mapping data between XML, query, and JSON formats. Operates on lists of BlockDeviceMapping.t records, enabling structured data manipulation. Used to process and serialize device mapping configurations in AWS API interactions.",
      "description_length": 272,
      "index": 787,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TagDescriptionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of tag descriptions. Operates on lists of TagDescription.t and XML nodes, converting them to AWS query parameters and JSON structures. Used to process and transmit tag metadata in AWS API requests and responses.",
      "description_length": 281,
      "index": 788,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DhcpOptionsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of DHCP options. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert DHCP configuration data between different formats during network setup and API interactions.",
      "description_length": 266,
      "index": 789,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnGatewayList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of VpnGateway objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and convert VpnGateway data between different formats in network configuration workflows.",
      "description_length": 269,
      "index": 790,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentPropagationList",
      "description": "Provides functions to construct, parse, and serialize lists of transit gateway attachment propagation configurations. Operates on lists of `TransitGatewayAttachmentPropagation.t` values and XML or JSON data structures. Used to process and transmit propagation settings in AWS API interactions.",
      "description_length": 293,
      "index": 791,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationSet",
      "description": "Provides operations to create a container for capacity reservations, parse XML nodes into a list of reservations, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with a list of CapacityReservation.t values. Used to manage and exchange capacity reservation data in AWS API interactions.",
      "description_length": 333,
      "index": 792,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuIdSet",
      "description": "Provides operations to create, parse, and serialize a set of Elastic GPU IDs. Works with lists of strings representing GPU identifiers. Parses XML nodes into a list of IDs, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 259,
      "index": 793,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesModificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of reserved instances modification records. Operates on XML nodes, JSON values, and query parameters. Used to process and transmit modification data from AWS API responses.",
      "description_length": 242,
      "index": 794,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of placement groups. Operates on lists of `PlacementGroup.t` values and XML or JSON data structures. Used to convert between XML node lists and AWS query parameters or JSON representations for API interactions.",
      "description_length": 280,
      "index": 795,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTablePropagationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of transit gateway route table propagation objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit route table propagation data from AWS API responses.",
      "description_length": 269,
      "index": 796,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.KeyPairList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of key-value pairs representing AWS key pairs. Operates on lists of `KeyPairInfo.t` records and XML nodes, converting them to query parameters, JSON structures, and vice versa. Used to process AWS API responses and construct requests with key pair data.",
      "description_length": 323,
      "index": 797,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ValidationWarning",
      "description": "Provides operations to create, parse, and serialize validation warnings, including converting between XML nodes, query parameters, and JSON representations. Works with error sets, XML nodes, and AWS-specific data structures like Query and Json. Used to generate and handle validation warnings in API request processing.",
      "description_length": 319,
      "index": 798,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HistoryRecordSet",
      "description": "Provides functions to create a record list, parse XML nodes into a list of history entries, convert the list to an AWS query, serialize to JSON, and deserialize from JSON. Works with XML node structures, AWS query parameters, and JSON values. Used to process and exchange historical record data in web service interactions.",
      "description_length": 323,
      "index": 799,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HostReservationSet",
      "description": "Provides operations to create, parse, and serialize host reservation data. Works with lists of HostReservation.t values and XML or JSON representations. Parses XML nodes into a list of host reservations, converts them to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 294,
      "index": 800,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchPermissionModifications",
      "description": "Provides operations to construct, parse, and serialize launch permission modifications, including adding or removing permissions from a list. Works with `LaunchPermissionList.t` and AWS query and JSON structures. Used to generate AWS API requests for modifying instance launch permissions.",
      "description_length": 289,
      "index": 801,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.OperationType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON values, along with bidirectional mappings for string representation. Works with a polymorphic type that can be instantiated with any value through a factory function. Used to serialize and deserialize data in API requests and responses, and to map internal representations to external formats.",
      "description_length": 368,
      "index": 802,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProductCodeStringList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of strings, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string values encoded as AWS base types. Used to handle product code lists in AWS API requests and responses.",
      "description_length": 310,
      "index": 803,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserGroupStringList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of strings, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values as defined by Aws.BaseTypes.String. Used to handle user group names in AWS API requests and responses.",
      "description_length": 322,
      "index": 804,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UserIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string-based user identifiers. Operates on lists of `Aws.BaseTypes.String.t` values, converting them to query parameters, JSON lists, and parsing from XML nodes. Used to handle user ID data in API requests and responses, ensuring consistent formatting and conversion between data representations.",
      "description_length": 369,
      "index": 805,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceAttributeName",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON values, along with bidirectional mappings for attribute names. Works with a polymorphic type `t` that represents instance attribute names, supporting serialization and parsing for AWS query and JSON formats. Used to translate between internal representations and external data formats in AWS API interactions.",
      "description_length": 388,
      "index": 806,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestHostIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string identifiers. Operates on lists of AWS string types, converting them to query parameters, JSON structures, and vice versa. Used to handle host ID lists in AWS API requests and responses.",
      "description_length": 265,
      "index": 807,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayVpcAttachmentRequestOptions",
      "description": "Provides functions to construct, parse, and serialize options for creating a transit gateway VPC attachment, including settings for DNS, IPv6, and appliance mode support. Works with custom types representing configuration values and a structured record type for option storage. Used to generate AWS API requests and handle JSON/XML data formats in network configuration workflows.",
      "description_length": 380,
      "index": 808,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewaySubnetIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of subnet IDs associated with a transit gateway. Operates on lists of strings representing subnet identifiers. Used to handle AWS API responses and construct query parameters or JSON payloads for transit gateway configurations.",
      "description_length": 297,
      "index": 809,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayIdSet",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing gateway identifiers. Used to handle AWS local gateway ID data in XML and JSON formats during API interactions.",
      "description_length": 330,
      "index": 810,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesConfigurationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of reserved instances configurations. Operates on lists of `ReservedInstancesConfiguration.t` values, converting them to query parameters, JSON structures, and from JSON. Used to handle AWS API responses and requests involving reserved instance configurations.",
      "description_length": 330,
      "index": 811,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of base string types, converting them between XML nodes, query formats, and JSON representations. Used to handle AWS Reserved Instances ID lists in API requests and responses.",
      "description_length": 302,
      "index": 812,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointConnectionSet",
      "description": "Provides functions to create, parse, and serialize lists of VpcEndpointConnection records. Operates on XML nodes and JSON structures, converting them to and from a list of endpoint connection objects. Used to process and generate AWS API-compatible query and JSON representations of endpoint connections.",
      "description_length": 304,
      "index": 813,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GroupNameStringList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of strings, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values from the Aws.BaseTypes module. Used to handle AWS query parameters and JSON representations of string lists.",
      "description_length": 316,
      "index": 814,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportImageTaskList",
      "description": "Provides functions to create, parse, and serialize a list of export image tasks. Operates on XML nodes, AWS query structures, and JSON representations of task data. Parses XML into task lists, converts them to AWS queries, and handles JSON serialization and deserialization for task data.",
      "description_length": 288,
      "index": 815,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExportTaskS3LocationRequest",
      "description": "Provides functions to construct, parse, and serialize S3 location requests, including creating instances with a bucket and optional prefix, converting to query parameters, and handling JSON encoding and decoding. Works with AWS string types and JSON structures. Used to generate and process S3 location data for export tasks.",
      "description_length": 325,
      "index": 816,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotLaunchSpecification",
      "description": "Provides functions to construct, parse, and serialize AWS EC2 Spot instance launch specifications, including methods to handle network interfaces, block device mappings, and instance metadata. Works with types such as instance types, security group lists, and JSON structures for AWS API interactions. Used to generate structured requests for launching Spot instances with custom configurations.",
      "description_length": 395,
      "index": 817,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociatedRolesList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of associated roles. Operates on lists of `AssociatedRole.t` and XML nodes, converting them into query parameters, JSON structures, and vice versa. Used to handle role associations in AWS API interactions, such as processing XML responses or generating JSON payloads for requests.",
      "description_length": 350,
      "index": 818,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulItemSet",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of unsuccessful items. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert error responses from XML to structured data and back for API interactions.",
      "description_length": 252,
      "index": 819,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Status",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type that can represent various status states. Used to parse XML responses from AWS services and generate JSON or query strings for API requests.",
      "description_length": 296,
      "index": 820,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTableIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of string values representing transit gateway route table IDs. Works with lists of AWS string types and supports XML, query, and JSON serialization formats. Used to handle AWS API responses and requests involving multiple route table identifiers.",
      "description_length": 303,
      "index": 821,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilterSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of traffic mirror filters. Operates on XML nodes, AWS query structures, and JSON values. Used to convert filter data between different representation formats during API interactions.",
      "description_length": 255,
      "index": 822,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorTargetIdList",
      "description": "Provides operations to create, parse, and serialize lists of string-based traffic mirror target IDs. Works with lists of strings representing AWS resource identifiers. Used to handle XML input, generate query parameters, and convert between JSON and internal list representations.",
      "description_length": 280,
      "index": 823,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PrivateIpAddressStringList",
      "description": "Provides functions to create, parse, and serialize lists of private IP addresses. Operates on lists of string-type values representing IP addresses. Parses XML nodes into a list, converts to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 260,
      "index": 824,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetRequestIdList",
      "description": "Provides functions to create, parse, and serialize lists of Spot Fleet Request IDs, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of strings formatted as AWS base types. Used to handle AWS API responses and requests involving multiple Spot Fleet Request IDs.",
      "description_length": 314,
      "index": 825,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListEntrySet",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of prefix list entries, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with lists of `PrefixListEntry.t` values. Used to process and transmit AWS prefix list data in API requests and responses.",
      "description_length": 314,
      "index": 826,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6PoolIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of IPv6 pool IDs. Operates on a list of strings representing pool identifiers. Parses XML nodes into a list of pool IDs, converts the list to an AWS query parameter, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 309,
      "index": 827,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of transit gateway objects. Operates on lists of `TransitGateway.t` values and XML or JSON data structures. Used to convert between XML responses from AWS APIs and structured OCaml data, and to prepare query parameters for API requests.",
      "description_length": 306,
      "index": 828,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTagNotificationAttribute",
      "description": "Provides operations to construct, parse, and serialize objects representing notification attributes for instance tags, including handling sets of tag keys and a flag to include all instance tags. Works with `InstanceTagKeySet.t` and `Aws.BaseTypes.Boolean.t` to define tag inclusion rules. Used to generate AWS API queries and JSON representations for tag-based notifications.",
      "description_length": 376,
      "index": 829,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientConnectOptions",
      "description": "Provides functions to construct, parse, and serialize options for client connection settings, including enabling features and specifying a Lambda function ARN. Works with boolean flags, strings, and JSON structures. Used to configure and transmit connection parameters in AWS-related workflows.",
      "description_length": 294,
      "index": 830,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnAuthenticationRequestList",
      "description": "Handles parsing and serialization of client VPN authentication requests from XML and JSON formats. Operates on lists of `ClientVpnAuthenticationRequest.t` values, converting them to query parameters and JSON structures. Used to process incoming XML data from API responses and generate JSON payloads for API requests.",
      "description_length": 317,
      "index": 831,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionLogOptions",
      "description": "Provides functions to construct, parse, and serialize connection log configuration data, including enabling logs, specifying CloudWatch log group and stream identifiers. Works with boolean flags and string-based identifiers for logging settings. Used to generate query parameters and JSON representations for AWS service requests.",
      "description_length": 330,
      "index": 832,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SelfServicePortal",
      "description": "Converts between a custom type and string representations, XML nodes, and JSON structures. Handles serialization and deserialization for query parameters and JSON payloads. Supports creating instances with a generic constructor and parsing from XML node lists.",
      "description_length": 260,
      "index": 833,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPropagation",
      "description": "Provides functions to construct, parse, and serialize objects representing transit gateway route table propagations, including setting attachment ID, resource ID, resource type, route table ID, and state. Works with AWS-specific data types such as strings, JSON, and query parameters. Used to generate API requests and process XML responses in network configuration workflows.",
      "description_length": 376,
      "index": 834,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLinkDnsSupportList",
      "description": "Handles conversion and parsing of ClassicLink DNS support configurations. Processes XML nodes into structured lists and serializes/deserializes them to and from JSON and query parameters. Used for integrating AWS DNS settings into application workflows.",
      "description_length": 253,
      "index": 835,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportSnapshotTaskIdList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of an import snapshot task ID handling. Operates on lists of string values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to process and transmit task ID data in AWS-related workflows.",
      "description_length": 301,
      "index": 836,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ManagedPrefixListSet",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of managed prefix lists. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of prefix lists and internal data structures, and to prepare data for API requests or storage.",
      "description_length": 299,
      "index": 837,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesListingList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of ReservedInstancesListing values. Operates on XML nodes, AWS query structures, and JSON representations. Used to process and transmit reserved instance listings from API responses.",
      "description_length": 252,
      "index": 838,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointIdList",
      "description": "Provides functions to create, parse, and serialize lists of strings as VPC endpoint identifiers. Operates on lists of string values representing AWS resource IDs. Parses XML nodes into string lists, converts them to query parameters, and handles JSON serialization and deserialization for API interactions.",
      "description_length": 306,
      "index": 839,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStateChangeList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of instance state change records, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with XML node structures and AWS JSON representations. Used to process and transmit instance state change data in API interactions.",
      "description_length": 333,
      "index": 840,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AddPrefixListEntries",
      "description": "Provides functions to create, parse, and serialize lists of prefix list entries, including converting between XML nodes, query parameters, and JSON structures. Operates on lists of `AddPrefixListEntry.t` records. Used to generate AWS API requests and process XML or JSON responses containing prefix list data.",
      "description_length": 309,
      "index": 841,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientCertificateRevocationListStatus",
      "description": "Provides operations to construct, parse, and serialize data related to client certificate revocation list status, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing optional status code and message fields. Used to handle AWS API responses and requests involving certificate revocation checks.",
      "description_length": 361,
      "index": 842,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TerminateConnectionStatusSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of termination connection status values. Operates on XML nodes, AWS query parameters, and JSON structures. Used to handle AWS API response data and construct query parameters for connection termination requests.",
      "description_length": 281,
      "index": 843,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTypeOfferingsList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance type offerings. Operates on lists of `InstanceTypeOffering.t` values and XML nodes. Parses XML responses from AWS API calls and converts them to structured data for query parameters or JSON representation.",
      "description_length": 287,
      "index": 844,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceStatusList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of instance status records, convert the list to an AWS query, serialize to JSON, and deserialize from JSON. Works with lists of `InstanceStatus.t` values and JSON or XML data structures. Used to process and transmit instance status information in AWS API interactions.",
      "description_length": 341,
      "index": 845,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPrefixListReferenceSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of transit gateway prefix list references. Operates on XML nodes, AWS query structures, and JSON values. Used to process and encode network configuration data from API responses.",
      "description_length": 251,
      "index": 846,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImageList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of image objects, convert the list to an AWS query, serialize to a JSON structure, and deserialize from JSON. Works with lists of `Image.t` values and AWS-specific data types. Used to process and transmit image data in cloud infrastructure workflows.",
      "description_length": 322,
      "index": 847,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointServiceIdList",
      "description": "Provides operations to create, parse, and serialize lists of string-based VPC endpoint service identifiers. Works with lists of strings representing AWS service IDs and supports XML parsing, query string generation, and JSON serialization. Used to handle AWS API responses and requests involving multiple VPC endpoint service IDs.",
      "description_length": 330,
      "index": 848,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PriceScheduleSpecificationList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of price schedule specifications. Operates on lists of `PriceScheduleSpecification.t` values and XML nodes. Parses XML input into structured data, generates AWS query parameters, and handles JSON serialization and deserialization for data exchange.",
      "description_length": 321,
      "index": 849,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportSnapshotTaskList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of import snapshot tasks. Operates on XML nodes, AWS query structures, and JSON representations. Parses XML input into task lists, converts them to AWS queries for API requests, and handles JSON serialization and deserialization for data exchange.",
      "description_length": 317,
      "index": 850,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePermissionList",
      "description": "Handles creation, parsing, and serialization of network interface permission lists. Processes XML nodes into typed lists and converts between JSON and query formats. Used to manage AWS EC2 network permissions in API requests and responses.",
      "description_length": 239,
      "index": 851,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceRequestIdList",
      "description": "Provides operations to create, parse, and serialize lists of Spot Instance request IDs. Works with lists of string-type identifiers representing AWS Spot Instance requests. Parses XML nodes into structured lists, converts them to query parameters, and serializes/deserializes them in JSON format.",
      "description_length": 296,
      "index": 852,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAssociation",
      "description": "Provides functions to construct, parse, and serialize objects representing associations between transit gateways and resources. Works with string identifiers, resource types, and association states. Used to generate AWS API requests and process XML or JSON responses related to transit gateway configurations.",
      "description_length": 309,
      "index": 853,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTypeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance type objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and structured data for API requests and responses.",
      "description_length": 247,
      "index": 854,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProductDescriptionList",
      "description": "Provides operations to construct, parse, and serialize lists of strings as query parameters and JSON structures. Works with lists of string-type values, converting them to and from XML nodes, query strings, and JSON representations. Used to handle product description data in AWS API interactions, such as transforming raw XML input into structured string lists or preparing data for JSON-based requests.",
      "description_length": 404,
      "index": 855,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ResponseHostIdList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing host identifiers. Used to process and format response data from AWS services that return multiple host IDs.",
      "description_length": 327,
      "index": 856,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HostList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of host objects, convert the list to an AWS query structure, serialize to a JSON list format, and deserialize from JSON. Operates on lists of `Host.t` values and JSON/AWS query representations. Used to process XML input from API responses and prepare data for AWS requests or JSON output.",
      "description_length": 360,
      "index": 857,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CustomerGatewayIdStringList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON formats. Works with lists of AWS string types, converting them to and from XML nodes, query parameters, and JSON structures. Used to handle customer gateway IDs in AWS API interactions, ensuring proper encoding and decoding during request and response processing.",
      "description_length": 375,
      "index": 858,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomainAssociations",
      "description": "Provides operations to construct, parse, and serialize objects representing associations between transit gateway multicast domains and resources. Works with types such as strings, subnet associations, and resource types specific to AWS transit gateway attachments. Used to generate query parameters and JSON representations for API interactions involving multicast domain configurations.",
      "description_length": 387,
      "index": 859,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of launch templates. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML input and structured data for API interactions.",
      "description_length": 228,
      "index": 860,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of prefix list objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of network prefix lists and structured data for API interactions.",
      "description_length": 269,
      "index": 861,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorSessionIdList",
      "description": "Provides functions to create, parse, and serialize lists of string-based session IDs, including conversion to query parameters, JSON structures, and deserialization from JSON. Operates on lists of strings representing session identifiers. Used to handle AWS traffic mirror session ID data in API requests and responses.",
      "description_length": 319,
      "index": 862,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnConnectionIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON representations. Operates on lists of base string types, converting them to and from XML nodes, query parameters, and JSON structures. Used to handle VPN connection ID lists in AWS API interactions.",
      "description_length": 309,
      "index": 863,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceFamilyCreditSpecification",
      "description": "Provides operations to construct, parse, and serialize instances of a specific structure representing credit specifications for EC2 instance families. Works with types including instance family identifiers and CPU credit strings. Used to generate AWS API queries and JSON payloads for configuring instance credit settings.",
      "description_length": 322,
      "index": 864,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ActiveInstanceSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of active instance records. Operates on lists of `ActiveInstance.t` and XML nodes, converting them to query parameters, JSON structures, and vice versa. Used to handle AWS instance data in API requests and responses.",
      "description_length": 286,
      "index": 865,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotAttributeName",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, with bidirectional mappings defined in `str_to_t` and `t_to_str`. Supports parsing from XML and serializing to AWS query and JSON formats. Includes a generic `make` function for creating instances and `of_string`/`to_string` for direct conversion.",
      "description_length": 327,
      "index": 866,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttributeBooleanValue",
      "description": "Provides operations to create, parse, and serialize boolean attribute values, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific boolean types and structured data formats. Used to handle boolean attributes in API requests and responses, such as setting or extracting flag values from XML or JSON payloads.",
      "description_length": 362,
      "index": 867,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.BlobAttributeValue",
      "description": "Provides operations to construct, parse, and serialize blob attribute values, including converting between XML nodes, query parameters, and JSON representations. Works with AWS blob types and custom JSON structures. Used to handle binary data in API requests and responses, such as S3 object metadata.",
      "description_length": 301,
      "index": 868,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceBlockDeviceMappingSpecificationList",
      "description": "Handles creation, parsing, and serialization of block device mapping specifications for EC2 instances. Operates on lists of `InstanceBlockDeviceMappingSpecification.t` values, converting them to query parameters, JSON structures, and vice versa. Used to construct and interpret AWS API requests involving disk configurations.",
      "description_length": 325,
      "index": 869,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImageAttribute",
      "description": "Provides operations to construct, parse, and serialize FPGA image attributes, including setting IDs, names, descriptions, load permissions, and product codes. Works with custom record types and XML or JSON data structures. Used to generate API requests and process responses in AWS EC2 interactions.",
      "description_length": 299,
      "index": 870,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CopyTagsFromSource",
      "description": "Provides functions to convert between a custom type `t` and strings, XML nodes, and JSON, including parsing from XML and serializing to query parameters. Works with the `t` type, which is likely a tagged or structured data representation. Used to extract and encode tag information from XML sources into a format suitable for AWS requests.",
      "description_length": 339,
      "index": 871,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceSpecification",
      "description": "Provides operations to construct, parse, serialize, and deserialize instance specifications, including setting an instance ID and excluding the boot volume. Works with a structured type containing string and boolean fields. Used to generate AWS API queries and JSON representations from XML nodes.",
      "description_length": 297,
      "index": 872,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ZoneIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of string values, converting them between XML nodes, query formats, and JSON representations. Used to handle AWS zone ID lists in request serialization and response parsing.",
      "description_length": 300,
      "index": 873,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ZoneNameStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of strings, converting them to and from XML nodes, query strings, and JSON representations. Used to handle AWS zone name lists in API requests and responses.",
      "description_length": 284,
      "index": 874,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON values. Operates on lists of AWS base string types, supporting XML parsing and JSON encoding/decoding. Used to handle instance ID lists in API requests and responses.",
      "description_length": 263,
      "index": 875,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomainList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of transit gateway multicast domains. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert multicast domain data between different representation formats in network configuration workflows.",
      "description_length": 303,
      "index": 876,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrincipalIdFormatList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of principal ID formats. Operates on lists of `PrincipalIdFormat.t` values and XML nodes. Used to process and encode AWS principal ID format data for API requests and responses.",
      "description_length": 247,
      "index": 877,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayNetworkInterfaceIdList",
      "description": "Provides functions to create, parse, and serialize lists of string-based network interface IDs from XML and JSON formats. Operates on lists of strings representing AWS transit gateway network interface identifiers. Used to process and convert network interface ID data in API requests and responses.",
      "description_length": 299,
      "index": 878,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnGatewayIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of string-based VPN gateway IDs. Works with lists of AWS string types and XML or JSON representations. Parses XML nodes into a list of strings, converts to query parameters, and handles JSON encoding and decoding for API interactions.",
      "description_length": 291,
      "index": 879,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllowedPrincipalSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of allowed principal objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and structured data for AWS policy handling.",
      "description_length": 244,
      "index": 880,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ByoipCidrSet",
      "description": "Creates and manipulates lists of BYOIP CIDR blocks, supporting parsing from XML nodes, conversion to AWS query parameters, and serialization/deserialization to JSON. Operates on lists of `ByoipCidr.t` values, which represent custom IP ranges for cloud deployment. Used to process XML responses from AWS APIs and prepare data for JSON-based API requests.",
      "description_length": 353,
      "index": 881,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CoipPoolSet",
      "description": "Provides functions to create, parse, and serialize lists of CoipPool.t values. Operates on XML nodes, AWS query structures, and JSON lists. Used to convert between XML input and JSON output for network pool configurations.",
      "description_length": 222,
      "index": 882,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SpotDatafeedSubscription",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS Spot Datafeed Subscription configurations, including handling state, owner ID, and fault information. Works with types such as strings, JSON structures, and XML nodes to enable integration with AWS API responses and requests. Used to generate query parameters for API calls and to convert between XML and JSON representations in cloud infrastructure workflows.",
      "description_length": 440,
      "index": 883,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetErrorSet",
      "description": "Handles creation and conversion of error data related to fleet deletion. Parses XML nodes into a list of error items, converts between JSON and query formats, and constructs error lists from JSON input. Used to process and serialize error responses from AWS API interactions.",
      "description_length": 275,
      "index": 884,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetSuccessSet",
      "description": "Handles creation, parsing, and serialization of fleet deletion success data. Operates on lists of `DeleteFleetSuccessItem.t` for XML, query string, and JSON formats. Used to process and generate responses for fleet deletion confirmations in API interactions.",
      "description_length": 258,
      "index": 885,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreErrorSet",
      "description": "Provides functions to construct, parse, and serialize lists of error items related to disabling fast snapshot restore. Operates on XML nodes, JSON structures, and a list type representing error items. Used to process and convert error data from API responses into structured formats for further handling.",
      "description_length": 304,
      "index": 886,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoreSuccessSet",
      "description": "Creates and manipulates a list of items representing successful fast snapshot restore disables, supporting XML parsing, query construction, and JSON serialization/deserialization. Operates on a list of structured items with specific fields for AWS operations. Used to process and format response data from AWS API calls related to snapshot restoration.",
      "description_length": 352,
      "index": 887,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesModificationIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as query parameters and JSON values. Operates on lists of base string types, supporting XML and JSON data formats. Used to handle AWS Reserved Instances modification IDs in API requests and responses.",
      "description_length": 281,
      "index": 888,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestInstanceTypeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance type data. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert instance type information from API responses into structured data for further handling.",
      "description_length": 274,
      "index": 889,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON handling. Operates on lists of strings with specific XML, query, and JSON conversion routines. Used to process and encode placement group identifiers in AWS API interactions.",
      "description_length": 285,
      "index": 890,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PlacementGroupStringList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string values encoded as Aws.BaseTypes.String.t. Used to handle AWS API response data and construct query parameters from string lists.",
      "description_length": 325,
      "index": 891,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6AddressList",
      "description": "Provides functions to create, parse, and serialize lists of IPv6 addresses. Operates on lists of string-type values representing IP addresses. Parses XML nodes into address lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 266,
      "index": 892,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstanceSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of scheduled instance records. Operates on lists of `ScheduledInstance.t` values and XML or JSON data structures. Used to convert between XML node sequences and structured data for AWS API interactions.",
      "description_length": 272,
      "index": 893,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.FlowLogSet",
      "description": "Provides operations to create a singleton list, parse XML nodes into a list of flow logs, convert flow logs to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of FlowLog.t values and JSON/AWS query structures. Used to process and format network flow log data for API requests and data exchange.",
      "description_length": 338,
      "index": 894,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BundleTaskList",
      "description": "Provides functions to create a task list, parse XML nodes into a list of bundle tasks, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Operates on lists of `BundleTask.t` values and AWS-specific data structures like `Ezxmlm.nodes` and `Aws.Json.t`. Used to process and exchange bundle task data in AWS API interactions.",
      "description_length": 358,
      "index": 895,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCreditSpecificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance credit specifications. Operates on lists of `InstanceCreditSpecification.t` values and XML or JSON representations. Used to process and transmit instance credit configuration data in AWS API interactions.",
      "description_length": 286,
      "index": 896,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of string-based subnet identifiers. Operates on lists of AWS string types, converting them to query parameters, JSON structures, and vice versa. Parses XML nodes into structured subnet ID lists for API interactions.",
      "description_length": 272,
      "index": 897,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CoipAddressUsageSet",
      "description": "Provides operations to create, parse, and serialize lists of CoipAddressUsage records. Works with XML nodes, AWS query parameters, and JSON structures. Parses XML into a list of usage records and converts between JSON and structured data for API interactions.",
      "description_length": 259,
      "index": 898,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstanceIdSet",
      "description": "Provides operations to create a set of reserved instance IDs, parse XML nodes into a list of strings, convert the list to an AWS query, serialize to JSON, and deserialize from JSON. Works with lists of string-type reserved instance IDs. Used to handle AWS reserved instance ID data during API request construction and response parsing.",
      "description_length": 335,
      "index": 899,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetConfigurationRequestSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of target configuration requests. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML input and structured request data for AWS API interactions.",
      "description_length": 253,
      "index": 900,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableVpcAssociationIdSet",
      "description": "Provides operations to create, parse, and serialize a list of VPC association IDs for a local gateway route table. Works with lists of string-type identifiers representing VPC associations. Used to generate query parameters from ID lists, convert to JSON format, and reconstruct lists from JSON input.",
      "description_length": 301,
      "index": 901,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StaleSecurityGroupSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of stale security group data. Operates on lists of `StaleSecurityGroup.t` values and XML or JSON representations. Used to process and convert security group data for API requests and responses.",
      "description_length": 263,
      "index": 902,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroupReferences",
      "description": "Provides functions to create, parse, and serialize security group reference data. Operates on lists of security group reference objects, converting between XML, query parameters, and JSON formats. Used to handle AWS security group references in request and response parsing workflows.",
      "description_length": 284,
      "index": 903,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssignedPrivateIpAddressList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of private IP address objects. Operates on lists of `AssignedPrivateIpAddress.t` values and XML or JSON representations. Used to process and encode AWS API responses containing private IP configurations.",
      "description_length": 273,
      "index": 904,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastRegisteredGroupMembers",
      "description": "Provides operations to construct, parse, and serialize data structures representing registered members of a transit gateway multicast group, including methods to generate query parameters and JSON representations. Works with string identifiers for transit gateway domains, network interfaces, and IP addresses. Used to manage multicast group membership configurations in AWS networking contexts.",
      "description_length": 395,
      "index": 905,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableVpcAssociationSet",
      "description": "Handles creation, parsing, and serialization of lists of local gateway route table VPC associations. Processes XML nodes into association lists and converts between JSON and query parameters. Used for managing AWS VPC route table associations in API interactions.",
      "description_length": 263,
      "index": 906,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociationIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON handling. Operates on lists of string values, converting them to and from XML nodes, query parameters, and JSON structures. Used to manage association IDs in AWS API requests and responses.",
      "description_length": 300,
      "index": 907,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVolumePermissionModifications",
      "description": "Provides operations to construct, parse, and serialize volume permission modifications, including adding and removing specific permissions. Works with custom types representing permission lists and XML or JSON data structures. Used to generate AWS API queries and handle JSON responses for volume access control updates.",
      "description_length": 320,
      "index": 908,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of volume objects, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with lists of `Volume.t` values and JSON/AWS query representations. Used to handle volume data in API requests and responses, such as converting XML input from AWS services into structured OCaml data.",
      "description_length": 387,
      "index": 909,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZoneStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON values. Operates on lists of AWS base string types, supporting XML parsing and JSON encoding/decoding. Used to handle availability zone lists in AWS API requests and responses.",
      "description_length": 273,
      "index": 910,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS query and JSON representations. Operates on lists of base string types, converting them to and from XML nodes, query parameters, and JSON structures. Used to handle snapshot identifiers in AWS API interactions, such as deserializing response data or preparing request parameters.",
      "description_length": 362,
      "index": 911,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnConnectionSet",
      "description": "Provides functions to create, parse, and serialize client VPN connection data. Operates on lists of `ClientVpnConnection.t` values, converting them to query parameters, JSON structures, and parsing XML nodes into structured lists. Used to handle API responses and requests involving multiple client VPN connections.",
      "description_length": 315,
      "index": 912,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorPortRangeRequest",
      "description": "Provides operations to construct, parse, and serialize port range configurations for traffic mirroring, including creating instances from port integers, parsing XML nodes, and converting to query and JSON formats. Works with integer port ranges and AWS-specific data structures. Used to encode and decode traffic mirroring port settings in API requests and responses.",
      "description_length": 367,
      "index": 913,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VolumeIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of AWS base string types, converting them between XML nodes, query formats, and JSON representations. Used to handle volume ID lists in AWS API requests and responses.",
      "description_length": 294,
      "index": 914,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of local gateway route table objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw data formats and structured route table representations in network configuration workflows.",
      "description_length": 296,
      "index": 915,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcClassicLinkIdList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS query and JSON handling. Operates on lists of string values, converting them between XML nodes, query parameters, and JSON structures. Used to manage VPC classic link IDs in AWS API interactions.",
      "description_length": 278,
      "index": 916,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RegionList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of region objects, convert the list to an AWS query structure, serialize to a JSON list format, and deserialize from JSON. Works with lists of `Region.t` values and AWS-specific data types like `Aws.Query.t` and `Aws.Json.t`. Used to handle region data in API requests and responses, such as converting XML input from an API to a structured list or preparing query parameters for AWS service calls.",
      "description_length": 470,
      "index": 917,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpnConnectionOptionsSpecification",
      "description": "Constructs a configuration object for VPN connections with options for acceleration, route types, IP versions, and network ranges. Parses XML nodes into this configuration and serializes it to query parameters, JSON objects, and deserializes from JSON. Used to define and exchange VPN setup details in cloud infrastructure workflows.",
      "description_length": 333,
      "index": 918,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6CidrAssociationSet",
      "description": "Constructs and manipulates lists of IPv6 CIDR association objects. Parses XML nodes into structured lists, converts them to AWS query parameters, and serializes/deserializes them to and from JSON format. Used to handle network configuration data in API interactions.",
      "description_length": 266,
      "index": 919,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CidrAuthorizationContext",
      "description": "Encapsulates AWS CIDR authorization context data, including a message and signature, and supports parsing from XML nodes, converting to query parameters, and serializing/deserializing to JSON. Works with string-based message and signature values and structured JSON data. Used to construct and validate AWS API requests involving CIDR-based access controls.",
      "description_length": 357,
      "index": 920,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayVpcAttachmentRequestOptions",
      "description": "Provides operations to construct, parse, and serialize request options for modifying a transit gateway VPC attachment, including DNS, IPv6, and appliance mode support settings. Works with custom types representing support values and a structured request record. Used to prepare configuration updates for cloud network resources in API interactions.",
      "description_length": 348,
      "index": 921,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AllocationIdList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS query and JSON representations. Operates on lists of string values, converting them to and from XML nodes, query parameters, and JSON structures. Used to handle AWS allocation ID lists in request and response data.",
      "description_length": 297,
      "index": 922,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PublicIpStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON values. Operates on lists of AWS string types, supporting XML parsing and JSON encoding/decoding. Used to handle IP address lists in API requests and responses.",
      "description_length": 257,
      "index": 923,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PeeringConnectionOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize options for configuring peering connections between VPCs, including settings for DNS resolution and traffic routing. Works with boolean flags and structured data representing network configuration parameters. Used to generate AWS API requests and process XML or JSON responses from VPC peering operations.",
      "description_length": 359,
      "index": 924,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListAssociationSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of prefix list associations. Operates on XML nodes, AWS query parameters, and JSON structures. Used to handle AWS VPC prefix list associations in API requests and responses.",
      "description_length": 243,
      "index": 925,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AddressList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of address records, convert the list to an AWS query structure, serialize to a JSON list format, and deserialize from JSON. Works with lists of Address.t records and AWS-specific data types for queries and JSON. Used to process and transmit address data in API requests and responses.",
      "description_length": 357,
      "index": 926,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceTypeInfoList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance type information. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between XML responses from AWS API calls and internal list structures for processing and transmission.",
      "description_length": 289,
      "index": 927,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnRouteSet",
      "description": "Handles creation and conversion of client VPN route data. Parses XML nodes into a list of route objects, serializes routes to AWS query parameters or JSON format, and reconstructs routes from JSON. Used to manage route configurations in AWS Client VPN endpoints.",
      "description_length": 262,
      "index": 928,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationSpecification",
      "description": "Provides operations to construct, parse, and serialize objects representing EC2 capacity reservation configurations. Works with types encoding reservation preferences and targets, and supports conversion to query parameters, JSON, and from JSON. Used to define and manipulate capacity reservation settings in AWS API interactions.",
      "description_length": 330,
      "index": 929,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpnConnectionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of VPN connection objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert XML data from API responses into typed lists and to prepare data for AWS API requests or JSON output.",
      "description_length": 285,
      "index": 930,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestHostIdSet",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing host IDs. Used to handle AWS request parameters that require a set of host identifiers in various formats.",
      "description_length": 326,
      "index": 931,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DnsServersOptionsModifyStructure",
      "description": "Provides functions to construct, parse, and serialize DNS server configuration data, including setting custom DNS servers and enabling/disabling the feature. Works with `ValueStringList.t` for DNS server lists and boolean flags. Used to generate AWS API requests and handle JSON/XML representations in network configuration workflows.",
      "description_length": 334,
      "index": 932,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetNetworkSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of target network objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between XML input and structured data for network configuration processing.",
      "description_length": 259,
      "index": 933,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegionNameStringList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of strings, convert the list to a query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values representing region names. Used to handle AWS region names in XML responses and convert them for API queries or JSON serialization.",
      "description_length": 346,
      "index": 934,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BillingProductList",
      "description": "Provides operations to construct, parse, and serialize a list of strings as part of a billing product representation. Accepts XML nodes for parsing, converts to AWS query format, and handles JSON serialization and deserialization. Used to process and transmit billing product data in API requests and responses.",
      "description_length": 311,
      "index": 935,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnectionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of VpcPeeringConnection records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert peering connection data between different representation formats in AWS API interactions.",
      "description_length": 286,
      "index": 936,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAclList",
      "description": "Handles creation, parsing, and serialization of network ACL data. Operates on lists of `NetworkAcl.t` values, converting them to query parameters, JSON structures, and vice versa. Parses XML nodes into structured network ACL representations for AWS interactions.",
      "description_length": 262,
      "index": 937,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet",
      "description": "Provides functions to create, parse, and serialize data structures representing associations between local gateway route tables and virtual interface groups. Operates on lists of `LocalGatewayRouteTableVirtualInterfaceGroupAssociation.t` values, converting them to query parameters, JSON, and vice versa. Used to handle AWS API responses and requests involving virtual interface group associations.",
      "description_length": 398,
      "index": 938,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetIdSet",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to an AWS query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type identifiers typically used to represent fleet IDs. Used to process and format fleet identifiers in AWS API interactions, such as when constructing requests or interpreting responses.",
      "description_length": 387,
      "index": 939,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS request parameters. Operates on lists of string values, converting them to query parameters, JSON lists, and parsing from XML nodes. Used to handle multiple launch template IDs in AWS API requests.",
      "description_length": 280,
      "index": 940,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateNameStringList",
      "description": "Provides functions to create, parse, and convert lists of strings to query parameters, JSON structures, and back from JSON. Operates on lists of string values, specifically `Aws.BaseTypes.String.t`. Used to handle AWS query parameters and JSON serialization of string lists.",
      "description_length": 274,
      "index": 941,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsErrorSet",
      "description": "Handles conversion and parsing of error data from Spot Fleet requests. Processes XML nodes into a list of error items and serializes/deserializes them to and from JSON and query formats. Used to manage error responses in AWS API interactions involving Spot Fleet requests.",
      "description_length": 272,
      "index": 942,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsSuccessSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of spot fleet request success items. Operates on lists of `CancelSpotFleetRequestsSuccessItem.t` values and XML or JSON representations. Used to process responses from AWS API calls that confirm successful cancellation of spot fleet requests.",
      "description_length": 312,
      "index": 943,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AccountAttributeList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of account attributes. Operates on lists of `AccountAttribute.t` and XML nodes, as well as AWS query and JSON formats. Used to convert between XML input and structured data for API requests and responses.",
      "description_length": 274,
      "index": 944,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResourceIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string-based resource identifiers. Operates on lists of strings, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS resource ID collections in API requests and responses.",
      "description_length": 293,
      "index": 945,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterInstanceTagAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deregistering instance tag attributes, including handling of tag keys and all tags. Works with boolean flags and sets of instance tag keys. Used to prepare HTTP queries and JSON payloads for API interactions involving instance tag management.",
      "description_length": 310,
      "index": 946,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PeeringConnectionOptions",
      "description": "Provides operations to construct, parse, and serialize options for VPC peering connections, including settings for DNS resolution and traffic routing between VPCs and classic links. Works with boolean flags and structured data representing network configuration parameters. Used to generate AWS API requests and process XML or JSON responses from VPC peering operations.",
      "description_length": 370,
      "index": 947,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON representations. Operates on lists of base string types, converting them to and from XML nodes, query parameters, and JSON structures. Used to handle VPC ID lists in AWS API interactions, such as translating XML responses into structured data or preparing JSON payloads for requests.",
      "description_length": 394,
      "index": 948,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DiskImageList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of disk images. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert parsed XML data into AWS-compatible query parameters or JSON representations for API interactions.",
      "description_length": 269,
      "index": 949,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportInstanceLaunchSpecification",
      "description": "Provides operations to construct, parse, and serialize instance launch configurations, including setting architecture, instance type, security groups, and placement details. Works with types such as instance types, security group IDs and names, and placement information. Used to generate AWS API requests for launching EC2 instances with specified parameters.",
      "description_length": 360,
      "index": 950,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointSet",
      "description": "Provides functions to create, parse, and serialize lists of VpcEndpoint records. Operates on lists of VpcEndpoint.t and XML or JSON structures representing such lists. Parses XML input into a list of endpoints, converts lists to AWS query parameters, and handles JSON serialization and deserialization of endpoint data.",
      "description_length": 319,
      "index": 951,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClassicLinkInstanceList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of ClassicLinkInstance objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw XML data from API responses and structured OCaml representations for further processing.",
      "description_length": 284,
      "index": 952,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseSet",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of purchase records. Works with XML nodes, AWS query parameters, and JSON structures. Parses XML into purchase lists, converts them to AWS queries, and handles JSON serialization and deserialization for data exchange.",
      "description_length": 291,
      "index": 953,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentList",
      "description": "Provides functions to create, parse, and serialize lists of transit gateway attachments. Operates on lists of `TransitGatewayAttachment.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS API responses and requests involving multiple transit gateway attachments.",
      "description_length": 322,
      "index": 954,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayOptions",
      "description": "Provides functions to construct, parse, and serialize options for modifying a transit gateway, including settings for VPN ECMP support, DNS support, auto-accept shared attachments, and route table associations and propagations. Works with custom types for configuration values and AWS-specific data structures like query parameters and JSON. Used to prepare and process transit gateway modification requests in AWS API interactions.",
      "description_length": 432,
      "index": 955,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImageAttributeName",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON values, along with bidirectional mappings for attribute names. Works with the `t` type, which represents image attribute names, and supports parsing from XML and serialization to query parameters and JSON. Used to handle AWS image attribute data in a structured and type-safe manner.",
      "description_length": 362,
      "index": 956,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotList",
      "description": "Provides operations to create a snapshot list, parse XML nodes into a list of snapshots, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query parameters, and JSON values. Used to process and transmit snapshot data in cloud infrastructure workflows.",
      "description_length": 324,
      "index": 957,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomainIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings representing transit gateway multicast domain IDs. Operates on lists of AWS string types, supporting XML parsing, query string generation, and JSON encoding/decoding. Used to handle multicast domain ID collections in API requests and responses.",
      "description_length": 312,
      "index": 958,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchasedScheduledInstanceSet",
      "description": "Provides functions to create, parse, and serialize lists of scheduled instances. Operates on lists of `ScheduledInstance.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS API responses and requests involving scheduled instances.",
      "description_length": 290,
      "index": 959,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFleetErrorsSet",
      "description": "Handles creation of error sets from a single value, parses XML nodes into structured error lists, and converts between JSON and query representations for fleet creation errors. Operates on lists of `CreateFleetError.t` values and JSON/XML data structures. Used to process and serialize error responses from fleet creation requests in AWS API interactions.",
      "description_length": 355,
      "index": 960,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFleetInstancesSet",
      "description": "Provides functions to construct, parse, and serialize lists of fleet instance configurations. Operates on lists of `CreateFleetInstance.t` values and XML node structures. Converts between XML, query parameters, and JSON representations for API interactions.",
      "description_length": 257,
      "index": 961,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotSet",
      "description": "Provides functions to create a snapshot list, parse XML nodes into a list of snapshot information, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Operates on lists of `SnapshotInfo.t` values and JSON/AWS query structures. Used to process and transmit snapshot data in cloud infrastructure workflows.",
      "description_length": 339,
      "index": 962,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorTargetSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of traffic mirror target objects. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between raw API data formats and structured target lists for network monitoring configurations.",
      "description_length": 280,
      "index": 963,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceAttribute",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type that can be instantiated with a variety of underlying data. Used to handle network interface attributes in AWS API interactions, such as converting between internal representations and HTTP query parameters or JSON payloads.",
      "description_length": 402,
      "index": 964,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilterRuleFieldList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of traffic mirror filter rule fields. Operates on lists of `TrafficMirrorFilterRuleField.t` values and XML or JSON representations. Used to process and encode filter rule fields in AWS API requests and responses.",
      "description_length": 282,
      "index": 965,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeModificationList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume modification records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between XML input and AWS API-compatible JSON output for volume modifications.",
      "description_length": 262,
      "index": 966,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetImageAttributeName",
      "description": "Converts between a custom type and string, XML, and JSON representations, supporting parsing from XML nodes and generating AWS query parameters. Operates on a polymorphic type `t` that can be initialized with a generic value. Used to serialize and deserialize image attribute names in AWS API interactions.",
      "description_length": 306,
      "index": 967,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.NewDhcpConfigurationList",
      "description": "Constructs a list of DHCP configuration objects from a single value, parses XML nodes into a list of configurations, converts the list to an AWS query structure, serializes to JSON format, and deserializes from JSON back into a list. Operates on lists of `NewDhcpConfiguration.t` values and XML node structures. Used to process and transmit DHCP settings in AWS API interactions.",
      "description_length": 379,
      "index": 968,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcAttributeName",
      "description": "Provides conversion between a custom type `t` and strings, including parsing from XML nodes and serialization to query and JSON formats. Works with a type `t` representing attribute names in a VPC context, supporting bidirectional mapping with a list of string-to-type and type-to-string pairs. Used to handle VPC attribute names in AWS API interactions, ensuring consistent representation across different data formats.",
      "description_length": 420,
      "index": 969,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of network interface objects. Operates on XML nodes, AWS query structures, and JSON values. Used to convert XML responses from AWS API calls into structured network interface data and back into query parameters or JSON representations.",
      "description_length": 305,
      "index": 970,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionNotificationSet",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of connection notification objects. Works with XML nodes, AWS query structures, and JSON representations. Used to convert raw XML data into notification lists and generate query parameters for API requests.",
      "description_length": 277,
      "index": 971,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ResetFpgaImageAttributeName",
      "description": "Converts between a custom type and string, XML, and JSON representations, supporting parsing from XML nodes and generating AWS query parameters. Operates on a type `t` encapsulating FPGA image attribute names. Used to serialize and deserialize attribute names in AWS API interactions.",
      "description_length": 284,
      "index": 972,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of reserved instances. Operates on XML nodes and JSON structures, converting them to and from a list of `ReservedInstances.t` values. Used to process and transmit reserved instance data in AWS API interactions.",
      "description_length": 280,
      "index": 973,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GroupIds",
      "description": "Provides operations to create, parse, and serialize group identifiers as lists of strings. Works with XML nodes, query parameters, and JSON structures for data interchange. Parses XML into group lists, converts them to query strings, and serializes/deserializes them in JSON format.",
      "description_length": 282,
      "index": 974,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResourceList",
      "description": "Provides functions to create a resource list from a single element, parse XML nodes into a list of strings, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Works with lists of string-type resources and AWS-specific types. Used to process XML responses from AWS services and prepare data for API requests or JSON serialization.",
      "description_length": 365,
      "index": 975,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayPeeringAttachmentList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of transit gateway peering attachments. Operates on lists of `TransitGatewayPeeringAttachment.t` values and XML or JSON representations. Used to process and transmit peering attachment data in AWS API interactions.",
      "description_length": 287,
      "index": 976,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelledSpotInstanceRequestList",
      "description": "Handles conversion and manipulation of spot instance request cancellation data. Parses XML nodes into a list of cancellation records, serializes to AWS query format, and encodes/decodes between JSON and internal representations. Used to process responses from EC2 API calls related to canceled spot instance requests.",
      "description_length": 317,
      "index": 977,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceConfigurationSet",
      "description": "Provides functions to create, parse, and serialize service configuration data. Operates on lists of `ServiceConfiguration.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to process and encode service settings for API requests and data interchange.",
      "description_length": 297,
      "index": 978,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StorageLocation",
      "description": "Encapsulates a storage location with optional bucket and key components, supporting parsing from XML nodes and conversion to query parameters or JSON. Works with string-based identifiers and structured JSON representations. Used to construct and serialize AWS S3 object references in API requests and responses.",
      "description_length": 311,
      "index": 979,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BundleIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters and JSON structures. Operates on lists of string values, converting them between XML nodes, query strings, and JSON representations. Used to handle AWS request parameters that require multiple string values in various serialization formats.",
      "description_length": 328,
      "index": 980,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeConversionTaskList",
      "description": "Handles conversion task serialization and parsing, transforming lists of conversion tasks into query parameters, JSON structures, and vice versa. Operates on lists of `ConversionTask.t` values, enabling structured data exchange. Used to generate API requests from task lists and reconstruct tasks from incoming JSON or query data.",
      "description_length": 330,
      "index": 981,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableIdSet",
      "description": "Provides operations to create, parse, and serialize a list of string-based route table identifiers. Works with lists of strings representing AWS route table IDs. Used to generate query parameters from route table IDs and to convert between JSON and string lists for API interactions.",
      "description_length": 283,
      "index": 982,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayVpcAttachmentList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of transit gateway VPC attachment objects. Operates on XML nodes, JSON values, and AWS query parameters. Used to process and transmit VPC attachment data from API responses.",
      "description_length": 246,
      "index": 983,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExportToS3TaskSpecification",
      "description": "Provides operations to construct, parse, serialize, and deserialize task specifications for exporting to Amazon S3, including setting container and disk image formats, S3 bucket, and prefix. Works with custom record types containing string and enumerated format values. Used to generate AWS API requests and process XML or JSON input for task configuration.",
      "description_length": 357,
      "index": 984,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstanceReservationValueSet",
      "description": "Provides operations to create, parse, and serialize lists of reserved instance reservation values. Works with XML nodes, AWS query structures, and JSON representations. Used to convert between XML input and structured data for AWS reservation configurations.",
      "description_length": 258,
      "index": 985,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetReservationValueSet",
      "description": "Provides functions to create a singleton list, parse XML nodes into a list of target reservation values, convert the list to an AWS query structure, serialize to a specific JSON format, and deserialize from JSON. Works with lists of `TargetReservationValue.t` and XML nodes. Used to process and encode reservation value data for API requests and responses.",
      "description_length": 356,
      "index": 986,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of transit gateway route objects. Operates on XML nodes, JSON values, and AWS query parameters. Used to process route information from API responses and prepare it for API requests.",
      "description_length": 251,
      "index": 987,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HistoryRecords",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of history records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert raw XML data into structured records and back for API interactions.",
      "description_length": 239,
      "index": 988,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImageList",
      "description": "Provides functions to create, parse, and serialize lists of FPGA image data. Operates on lists of `FpgaImage.t` and converts them to AWS query parameters, JSON structures, and vice versa. Parses XML nodes into structured FPGA image lists for use in cloud infrastructure interactions.",
      "description_length": 283,
      "index": 989,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.OwnerStringList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to a query structure, serialize to JSON format, and deserialize from JSON. Works with lists of string-type values from the Aws.BaseTypes module. Used to handle AWS query parameters and JSON representations of string lists.",
      "description_length": 324,
      "index": 990,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RestorableByStringList",
      "description": "Provides functions to create a value from a default, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize from JSON. Works with lists of strings and AWS-specific types for queries and JSON. Used to handle RESTful API parameters and responses in a structured, type-safe manner.",
      "description_length": 346,
      "index": 991,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyAvailabilityZoneOptInStatus",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to query and JSON formats. Works with a custom type `t` that likely represents availability zone opt-in status configurations. Used to transform and serialize data for AWS API interactions.",
      "description_length": 305,
      "index": 992,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FlowLogIdList",
      "description": "Provides operations to create a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string-type values representing flow log identifiers. Used to handle AWS flow log ID data in API requests and responses.",
      "description_length": 308,
      "index": 993,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreErrorSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of error items related to enabling fast snapshot restore. Operates on lists of `EnableFastSnapshotRestoreErrorItem.t` structures. Used to handle error responses from AWS API calls involving snapshot restore configurations.",
      "description_length": 292,
      "index": 994,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoreSuccessSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of items representing successful fast snapshot restore operations. Works with XML nodes and JSON structures, and handles lists of structured data items. Used to process and generate AWS API responses for fast snapshot restore success states.",
      "description_length": 311,
      "index": 995,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceIdSet",
      "description": "Provides operations to create, parse, and serialize a list of string-based instance IDs. Works with lists of strings representing AWS instance identifiers. Used to generate query parameters from instance IDs and to convert between XML nodes and JSON representations.",
      "description_length": 266,
      "index": 996,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RouteTableList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of route table objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit route table data in network infrastructure configurations.",
      "description_length": 247,
      "index": 997,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet",
      "description": "Provides operations to create, parse, and serialize a list of strings as a structured identifier for virtual interface group associations. Works with AWS base string lists and XML or JSON representations. Used to handle route table virtual interface group association IDs in API requests and responses.",
      "description_length": 302,
      "index": 998,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulItemList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of unsuccessful items. Operates on XML nodes, AWS query parameters, and JSON structures. Used to handle error responses from AWS services by converting raw data into structured lists and back.",
      "description_length": 262,
      "index": 999,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.IamInstanceProfileAssociationSet",
      "description": "Provides functions to create, parse, and serialize lists of instance profile associations, including converting between XML, query parameters, and JSON formats. Operates on lists of `IamInstanceProfileAssociation.t` values, representing AWS IAM instance profile associations. Used to process and transmit association data in API requests and responses.",
      "description_length": 352,
      "index": 1000,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateVersionSet",
      "description": "Provides functions to create, parse, and serialize lists of launch template versions. Operates on lists of `LaunchTemplateVersion.t` values and XML nodes. Parses XML input into version lists, converts them to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 282,
      "index": 1001,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CarrierGatewaySet",
      "description": "Provides operations to create a list of carrier gateways, parse XML nodes into such a list, convert the list to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query parameters, and JSON values. Used to process and transmit carrier gateway data in API requests and responses.",
      "description_length": 338,
      "index": 1002,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CapacityReservationGroupSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of capacity reservation groups. Operates on lists of `CapacityReservationGroup.t` values and XML or JSON representations. Used to construct query parameters from group data and reconstruct group lists from JSON responses.",
      "description_length": 291,
      "index": 1003,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointRouteTableIdList",
      "description": "Provides functions to create, parse, and serialize lists of VPC endpoint route table IDs. Operates on lists of string values representing route table identifiers. Used to handle AWS API request parameters and JSON serialization for route table ID collections.",
      "description_length": 259,
      "index": 1004,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointSecurityGroupIdList",
      "description": "Provides functions to create, parse, and serialize lists of security group IDs as strings. Works with the `t` type, which is a list of string-based security group identifiers. Used to handle AWS VPC endpoint security group data in query parameters and JSON formats.",
      "description_length": 265,
      "index": 1005,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcEndpointSubnetIdList",
      "description": "Provides functions to create, parse, and serialize lists of subnet IDs as part of VPC endpoint configurations. Operates on lists of strings representing subnet identifiers. Used to convert between XML node structures, query parameters, and JSON representations for AWS API interactions.",
      "description_length": 286,
      "index": 1006,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayAttachmentIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of string-based transit gateway attachment IDs. Operates on lists of strings and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS API responses and requests involving multiple attachment identifiers.",
      "description_length": 294,
      "index": 1007,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastGroupList",
      "description": "Handles creation, parsing, and serialization of transit gateway multicast group data. Operates on lists of `TransitGatewayMulticastGroup.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to process and format multicast group information in AWS API interactions.",
      "description_length": 309,
      "index": 1008,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstanceIdRequestSet",
      "description": "Provides functions to create, parse, and serialize a list of instance IDs as part of an AWS request. Operates on a type representing a list of strings, converting between XML nodes, query parameters, and JSON structures. Used to handle instance ID parameters in API requests and responses.",
      "description_length": 289,
      "index": 1009,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SlotStartTimeRangeRequest",
      "description": "Provides operations to construct, parse, and serialize time range constraints using AWS date-time values. Works with a structured type containing optional earliest and latest time fields. Used to format request parameters for API calls requiring time window specifications.",
      "description_length": 273,
      "index": 1010,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayVirtualInterfaceSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of local gateway virtual interface objects. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between raw API data and structured representations for network configuration management.",
      "description_length": 284,
      "index": 1011,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CpuOptionsRequest",
      "description": "Provides operations to construct, parse, and serialize CPU configuration options, including core count and threads per core. Works with integer values and JSON or query string representations. Used to generate request parameters for cloud infrastructure provisioning.",
      "description_length": 267,
      "index": 1012,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuSpecifications",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of Elastic GPU specifications. Operates on XML nodes, JSON values, and AWS query parameters. Used to process and convert GPU configuration data from API responses into structured formats for further handling.",
      "description_length": 278,
      "index": 1013,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticInferenceAccelerators",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of ElasticInferenceAccelerator records. Operates on XML nodes, AWS query structures, and JSON values for data interchange. Used to convert between raw XML input and structured data representations in AWS-related processing pipelines.",
      "description_length": 303,
      "index": 1014,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EnclaveOptionsRequest",
      "description": "Provides operations to create, parse, and serialize options for an enclave request, including converting between XML nodes, query parameters, and JSON representations. Works with boolean flags and structured data types representing enclave configuration. Used to generate HTTP requests and process XML responses in AWS SDK integration.",
      "description_length": 335,
      "index": 1015,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.HibernationOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize options for hibernation settings, including creating a default configuration, parsing XML nodes, and converting between query, JSON, and internal representations. Works with boolean flags and structured data types for cloud instance configurations. Used to generate API requests and process responses in AWS EC2 integration scenarios.",
      "description_length": 388,
      "index": 1016,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMarketOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize request objects for instance market options, including creating with optional market type and spot options, converting from XML nodes, and serializing to query parameters and JSON. Works with types such as MarketType.t, SpotMarketOptions.t, and Aws.Query.t. Used to generate AWS API requests for EC2 instance market options configuration.",
      "description_length": 392,
      "index": 1017,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMetadataOptionsRequest",
      "description": "Provides methods to construct, parse, and serialize configuration options for instance metadata requests, including HTTP token state, response hop limit, and endpoint settings. Works with custom types for HTTP token states, integer hop limits, and endpoint states. Used to generate AWS API requests and handle metadata configuration in cloud infrastructure setups.",
      "description_length": 364,
      "index": 1018,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LaunchTemplateSpecification",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS EC2 launch template specifications, including creating instances with optional template ID, name, or version. Works with string-based identifiers and JSON/XML data formats. Used to generate API requests and process responses in AWS infrastructure management workflows.",
      "description_length": 347,
      "index": 1019,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LicenseSpecificationListRequest",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of license configuration requests. Operates on lists of `LicenseConfigurationRequest.t` values and XML or JSON representations. Used to process and generate AWS API-compatible query parameters and JSON payloads for license management operations.",
      "description_length": 315,
      "index": 1020,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayVirtualInterfaceGroupSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of local gateway virtual interface groups. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between raw XML data from API responses and structured OCaml representations for further processing.",
      "description_length": 294,
      "index": 1021,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExecutableByStringList",
      "description": "Provides functions to construct a list of strings, parse XML nodes into such a list, convert the list to a query structure, serialize it to JSON, and deserialize JSON back into a list. Operates on lists of string-type values, specifically `Aws.BaseTypes.String.t`. Used to process and encode command-line arguments or similar structured string data.",
      "description_length": 349,
      "index": 1022,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImageIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON representations. Operates on lists of string values, converting them between XML nodes, query parameters, and JSON structures. Used to handle AWS image ID lists in request and response data.",
      "description_length": 301,
      "index": 1023,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcPeeringConnectionIdList",
      "description": "Provides operations to create, parse, and serialize lists of VPC peering connection IDs. Works with lists of string-type identifiers representing AWS VPC peering connections. Parses XML nodes into a list of IDs, converts them to query parameters, and serializes/deserializes them in JSON format.",
      "description_length": 295,
      "index": 1024,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.MovingAddressStatusSet",
      "description": "Handles creation, parsing, and serialization of moving address status data. Operates on lists of `MovingAddressStatus.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to process and transmit status information in AWS-related workflows.",
      "description_length": 284,
      "index": 1025,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTaskIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of AWS query and JSON representations. Operates on lists of base string types, converting them to and from XML nodes, query parameters, and JSON structures. Used to handle task ID lists in AWS API interactions, such as exporting or processing multiple task identifiers.",
      "description_length": 358,
      "index": 1026,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesOfferingIdStringList",
      "description": "Handles conversion and parsing of lists of reserved instance offering IDs. Accepts XML nodes, JSON values, and query parameters, transforming them into and from lists of string values. Used to process AWS API responses and construct requests involving multiple offering IDs.",
      "description_length": 274,
      "index": 1027,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestLaunchTemplateData",
      "description": "Provides methods to construct, parse, and serialize AWS EC2 launch template data structures with detailed configuration options. Works with specific types such as instance types, block device mappings, network interfaces, and security group lists. Used to generate structured requests for launching EC2 instances with customized settings like IAM profiles, monitoring, and placement constraints.",
      "description_length": 395,
      "index": 1028,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkAclIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string-based network ACL IDs. Operates on lists of strings representing AWS resource identifiers. Used to handle AWS API responses and query parameters for network access control lists.",
      "description_length": 258,
      "index": 1029,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorSessionSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of TrafficMirrorSession objects. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between raw data formats and session data structures in network monitoring workflows.",
      "description_length": 266,
      "index": 1030,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientVpnEndpointIdList",
      "description": "Provides functions to create, parse, and serialize lists of strings as AWS query parameters and JSON structures. Operates on lists of string values, typically used for handling multiple client VPN endpoint identifiers. Used to convert between XML node structures and JSON representations for API interactions.",
      "description_length": 309,
      "index": 1031,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceAttachmentChanges",
      "description": "Provides operations to construct, parse, and serialize network interface attachment configurations, including setting an attachment ID and delete-on-termination flag. Works with a record type containing string and boolean fields. Used to generate AWS API queries and JSON payloads for network interface management.",
      "description_length": 314,
      "index": 1032,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PublicIpv4PoolIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of public IPv4 pool IDs. Operates on lists of strings representing AWS resource identifiers. Used to handle query parameters and JSON payloads in AWS API interactions.",
      "description_length": 237,
      "index": 1033,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.Ipv6PoolSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of IPv6 pool objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between XML configuration data and structured AWS API inputs or outputs.",
      "description_length": 251,
      "index": 1034,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateVersionsResponseErrorSet",
      "description": "Handles parsing and serialization of error responses from AWS EC2 delete launch template versions operations. Processes lists of error items using XML and JSON formats, converting between structured data and query parameters. Enables integration with AWS API interactions by transforming error data into required representations.",
      "description_length": 329,
      "index": 1035,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateVersionsResponseSuccessSet",
      "description": "Provides functions to create, parse, and serialize lists of launch template version success items, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of `DeleteLaunchTemplateVersionsResponseSuccessItem.t` values. Used to process responses from AWS EC2 API operations that delete launch template versions.",
      "description_length": 355,
      "index": 1036,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.KeyNameStringList",
      "description": "Provides operations to create an empty list, parse XML nodes into a list of strings, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string values encoded as Aws.BaseTypes.String.t. Used to handle key-name string lists in AWS API requests and responses.",
      "description_length": 310,
      "index": 1037,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.KeyPairIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of string-based key pair IDs. Operates on lists of strings and XML nodes, converting between XML, query parameters, and JSON formats. Used to handle AWS key pair identifiers in API requests and responses.",
      "description_length": 261,
      "index": 1038,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastRegisteredGroupSources",
      "description": "Provides functions to construct, parse, and serialize data structures representing registered sources in a transit gateway multicast group, including methods to convert between XML, query parameters, and JSON formats. Works with string-based identifiers, IP addresses, and lists of network interface IDs. Used to manage multicast group source registrations in AWS API interactions.",
      "description_length": 381,
      "index": 1039,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotInstanceRequestList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of spot instance requests. Operates on lists of `SpotInstanceRequest.t` values, converting them to query parameters, JSON structures, and from JSON. Used to handle AWS API responses and requests involving multiple spot instance configurations.",
      "description_length": 313,
      "index": 1040,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FailedQueuedPurchaseDeletionSet",
      "description": "Constructs a value of type 'a, parses XML nodes into a list of deletion records, converts deletion records to AWS query parameters, serializes to a JSON list structure, and deserializes from JSON back to a list of deletion records. Operates on XML node sequences, AWS query structures, and JSON values. Used to process and exchange failed purchase deletion data in API interactions.",
      "description_length": 382,
      "index": 1041,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SuccessfulQueuedPurchaseDeletionSet",
      "description": "Constructs a value of type 'a, parses XML nodes into a list of deletion records, converts the list to an AWS query structure, serializes to JSON format, and deserializes from JSON back to the list. Operates on XML node structures, AWS query parameters, and JSON values. Used to process and transmit successful purchase deletion responses in API interactions.",
      "description_length": 358,
      "index": 1042,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTaskList",
      "description": "Provides functions to create, parse, and convert lists of export tasks between XML, query, and JSON formats. Operates on lists of `ExportTask.t` values and AWS-specific data structures like `Ezxmlm.nodes` and `Aws.Query.t`. Used to process and serialize task data for API requests and external systems.",
      "description_length": 302,
      "index": 1043,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceMonitoringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance monitoring data. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert raw XML responses from AWS into structured monitoring lists and back for API interactions.",
      "description_length": 271,
      "index": 1044,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SecurityGroupList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of security group objects. Operates on lists of `SecurityGroup.t` values and XML or JSON representations. Used to process AWS security group data from XML responses and convert it into structured JSON for API interactions.",
      "description_length": 292,
      "index": 1045,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ServiceDetailSet",
      "description": "Provides operations to create a list of service details, parse XML nodes into structured service data, convert service lists to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with XML node structures, AWS query representations, and JSON values. Used to process and exchange service information in API requests and responses.",
      "description_length": 358,
      "index": 1046,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EndpointSet",
      "description": "Creates and manipulates lists of client VPN endpoints through parsing XML, generating AWS queries, and serializing/deserializing to JSON. Operates on XML node sequences and JSON values, producing or consuming lists of endpoint records. Used to process API responses and construct requests in AWS integration workflows.",
      "description_length": 318,
      "index": 1047,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetLaunchTemplateConfigListRequest",
      "description": "Handles the creation, parsing, and serialization of lists of launch template configuration requests. Processes XML nodes into structured request lists and converts between JSON and query formats. Used to manage multiple launch template configurations in AWS API interactions.",
      "description_length": 275,
      "index": 1048,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.OnDemandOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize request objects for on-demand EC2 fleet options, including setting allocation strategies, capacity reservation settings, and constraints on instance types and availability zones. Works with custom types for allocation strategies, boolean flags, integers, and strings, as well as AWS-specific query and JSON formats. Used to configure and transmit on-demand fleet parameters in cloud infrastructure setups.",
      "description_length": 459,
      "index": 1049,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotOptionsRequest",
      "description": "Provides methods to construct, parse, and serialize objects representing AWS Spot instance request configurations. Works with types such as allocation strategies, interruption behaviors, and availability zone settings. Used to generate query parameters and JSON representations for API interactions with EC2 Spot Fleet requests.",
      "description_length": 328,
      "index": 1050,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TargetCapacitySpecificationRequest",
      "description": "Provides operations to construct, parse, and serialize a target capacity configuration, including methods to set total, on-demand, and spot capacities, and specify the default capacity type. Works with integer values and a custom type for the default capacity strategy. Used to generate API requests and handle JSON or query string representations in cloud infrastructure configurations.",
      "description_length": 387,
      "index": 1051,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDeregisteredGroupSources",
      "description": "Provides functions to construct, parse, and serialize data structures for deregistering network interfaces from a multicast group in a transit gateway. Works with string identifiers, IP addresses, and lists of strings. Used to prepare API requests for removing sources from multicast group memberships.",
      "description_length": 302,
      "index": 1052,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InternetGatewayList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of InternetGateway objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert gateway information from API responses into structured data for further handling.",
      "description_length": 273,
      "index": 1053,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceIdList",
      "description": "Provides operations to create, parse, and serialize lists of string-based network interface identifiers. Works with lists of strings representing AWS network interface IDs. Parses XML nodes into such lists, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 293,
      "index": 1054,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AccountAttributeNameStringList",
      "description": "Provides functions to create, parse, and serialize lists of account attribute names. Operates on lists of `AccountAttributeName.t` values and XML or JSON representations. Parses XML nodes into a list of attributes, converts lists to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 306,
      "index": 1055,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConversionIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as query parameters, JSON lists, and parse XML nodes into string lists. Operates on lists of AWS base string types. Used to convert XML data into structured string lists and prepare them for API queries or JSON encoding.",
      "description_length": 288,
      "index": 1056,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CarrierGatewayIdSet",
      "description": "Provides operations to create, parse, and serialize a list of string-based carrier gateway identifiers. Works with lists of strings representing AWS identifiers and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into a list of identifiers and constructs JSON lists from them.",
      "description_length": 313,
      "index": 1057,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FleetSet",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of fleet data records. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert raw XML input into structured fleet data and generate AWS API-compatible query parameters.",
      "description_length": 268,
      "index": 1058,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportTaskIdList",
      "description": "Provides functions to create, parse, and serialize lists of string-based task IDs. Operates on lists of strings and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS task ID lists in API requests and responses.",
      "description_length": 247,
      "index": 1059,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InternetGatewayIdList",
      "description": "Provides functions to create, parse, and serialize lists of Internet Gateway IDs. Operates on lists of string-type identifiers and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS API responses and requests involving multiple Internet Gateway IDs.",
      "description_length": 285,
      "index": 1060,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteQueuedReservedInstancesIdList",
      "description": "Provides functions to create, parse, query, and serialize lists of strings as part of AWS request parameters. Operates on lists of string values, typically used for handling multiple reserved instance identifiers. Used to construct and interpret query parameters and JSON structures in AWS API interactions.",
      "description_length": 307,
      "index": 1061,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SpotFleetRequestConfigSet",
      "description": "Handles creation, parsing, and serialization of Spot Fleet request configurations. Operates on lists of `SpotFleetRequestConfig.t` values, converting them to query parameters, JSON structures, and parsing XML input into structured data. Used to generate API requests and process responses from AWS EC2 Spot Fleet services.",
      "description_length": 322,
      "index": 1062,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImageAttributeName",
      "description": "Provides conversion between a custom type `t` and string, JSON, and query representations, along with parsing from XML nodes. Works with a type `t` that represents FPGA image attribute names, supporting serialization and deserialization. Used to handle AWS API attribute values in XML, JSON, and query parameter formats.",
      "description_length": 320,
      "index": 1063,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VolumeAttributeName",
      "description": "Provides conversion between a custom type `t` and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a type `t` that serves as a named volume identifier, supporting bidirectional mappings with strings. Used to transform volume attribute names in AWS API interactions, ensuring consistent encoding and decoding across data formats.",
      "description_length": 392,
      "index": 1064,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseRequestSet",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of purchase requests. Works with XML nodes, AWS query parameters, and JSON structures. Parses XML into a list of purchase requests, converts them to AWS query format, and handles JSON serialization and deserialization.",
      "description_length": 292,
      "index": 1065,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AvailabilityZoneList",
      "description": "Provides functions to create, parse, and serialize lists of availability zone objects. Operates on lists of `AvailabilityZone.t` and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS availability zone data in API requests and responses.",
      "description_length": 273,
      "index": 1066,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CoipPoolIdSet",
      "description": "Provides operations to create, parse, and serialize a list of strings as a set, including converting between XML nodes, query parameters, and JSON formats. Works with lists of string-type values representing identifiers. Used to handle AWS resource identifiers in structured data formats for API interactions.",
      "description_length": 309,
      "index": 1067,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CustomerGatewayList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of customer gateway objects. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML response data and internal list representations for network configuration management.",
      "description_length": 274,
      "index": 1068,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VolumeStatusList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of volume status items. Operates on lists of `VolumeStatusItem.t` and XML nodes, converting between them and AWS query or JSON formats. Used to process and transmit volume status data in AWS API interactions.",
      "description_length": 278,
      "index": 1069,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRequestOptions",
      "description": "Provides constructors and parsers for configuring transit gateway options, including settings for ASN, auto-accepting shared attachments, route table associations, and DNS support. Works with custom types representing AWS transit gateway configuration parameters. Used to generate query strings and JSON payloads for API requests involving transit gateway settings.",
      "description_length": 365,
      "index": 1070,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTableAssociationList",
      "description": "Provides functions to create, parse, and serialize lists of transit gateway route table associations, including converting between XML nodes, query parameters, and JSON structures. Operates on lists of `TransitGatewayRouteTableAssociation.t` values. Used to process and transmit route table association data in AWS API interactions.",
      "description_length": 332,
      "index": 1071,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HostOfferingSet",
      "description": "Provides functions to create, parse, and serialize host offering data. Operates on lists of HostOffering.t values and converts them to query parameters, JSON structures, and vice versa. Parses XML nodes into a list of host offerings for API interactions.",
      "description_length": 254,
      "index": 1072,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of string identifiers, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of strings formatted as AWS base types. Used to handle transit gateway ID collections in API requests and responses.",
      "description_length": 298,
      "index": 1073,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.Affinity",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse XML input into structured data and generate JSON or query parameters for API interactions.",
      "description_length": 303,
      "index": 1074,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HostTenancy",
      "description": "Provides conversion between a custom type `t` and strings, XML nodes, and JSON, including bidirectional mappings and serialization to AWS query parameters. Operates on the abstract type `t` and associated data structures like lists of string-tuples. Used to parse and generate AWS-compatible representations from domain-specific values.",
      "description_length": 336,
      "index": 1075,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NatGatewayIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string-based NAT gateway identifiers. Operates on lists of strings representing AWS resource IDs. Used to handle query parameters and JSON representations of multiple NAT gateway IDs in API interactions.",
      "description_length": 276,
      "index": 1076,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EgressOnlyInternetGatewayIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize a list of Egress Only Internet Gateway IDs. Operates on a type representing a list of string-based identifiers. Used to handle AWS API responses and requests involving multiple Egress Only Internet Gateway IDs.",
      "description_length": 274,
      "index": 1077,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfacePermissionIdList",
      "description": "Provides functions to create, parse, and serialize lists of network interface permission IDs. Operates on lists of strings representing unique identifiers. Parses XML nodes into lists, converts to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 266,
      "index": 1078,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorFilterIdList",
      "description": "Provides functions to create, parse, and serialize lists of string-based traffic mirror filter IDs. Operates on lists of strings representing filter identifiers. Used to handle AWS API input and output for traffic mirror filter references.",
      "description_length": 239,
      "index": 1079,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnTunnelOptionsSpecification",
      "description": "Constructs and manipulates VPN tunnel configuration options, including CIDR ranges, encryption and integrity algorithms, key exchange parameters, and rekey settings. Operates on custom types for encryption algorithms, DH groups, and IKE versions, as well as standard string and integer types. Used to generate AWS API requests for modifying VPN tunnel properties, parse XML responses, and serialize/deserialize configurations in query and JSON formats.",
      "description_length": 452,
      "index": 1080,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayRouteTableList",
      "description": "Provides functions to create, parse, and serialize lists of transit gateway route tables. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert between raw API responses and structured data for route table management.",
      "description_length": 245,
      "index": 1081,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RemovePrefixListEntries",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of prefix list entries, including converting XML nodes to entry lists, generating AWS query parameters, and handling JSON serialization and deserialization. Operates on lists of entries represented as tuples containing a prefix and a description. Used to process and transmit network prefix configurations in AWS API interactions.",
      "description_length": 400,
      "index": 1082,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RouteTableIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS query and JSON representations. Operates on lists of string values, converting them between XML nodes, query parameters, and JSON structures. Used to handle route table identifiers in AWS API interactions.",
      "description_length": 288,
      "index": 1083,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ClientData",
      "description": "Creates a structured representation of client data with optional fields for comments, upload timestamps, and size. Processes XML nodes into this structure and serializes it to query parameters, JSON associations, and deserializes from JSON. Used to handle incoming client metadata in AWS-related data processing workflows.",
      "description_length": 322,
      "index": 1084,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SnapshotDiskContainer",
      "description": "Represents a disk container with methods to construct, parse XML, and serialize to query parameters, JSON, or deserialize from JSON. Works with string-based identifiers, user buckets, and XML node structures. Used to manage and convert disk container metadata in AWS-related workflows.",
      "description_length": 285,
      "index": 1085,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDeregisteredGroupMembers",
      "description": "Provides functions to construct, parse, and serialize data structures for deregistering network interface members from a transit gateway multicast group. Works with string identifiers, IP addresses, and lists of network interface IDs. Used to prepare and process requests for updating multicast group memberships in AWS infrastructure.",
      "description_length": 335,
      "index": 1086,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AuthorizationRuleSet",
      "description": "Provides functions to create, parse, and serialize authorization rules. Operates on lists of `AuthorizationRule.t` and converts them to AWS query parameters, JSON structures, and vice versa. Parses XML nodes into a structured list of rules for policy evaluation.",
      "description_length": 262,
      "index": 1087,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TransitGatewayMulticastDomainAssociationList",
      "description": "Handles creation, parsing, and serialization of lists of transit gateway multicast domain associations. Processes XML nodes into structured lists and converts between JSON and query parameters. Used to manage network association data in AWS API interactions.",
      "description_length": 258,
      "index": 1088,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TrafficMirrorSessionFieldList",
      "description": "Provides functions to construct, parse, and serialize lists of traffic mirror session fields. Operates on lists of `TrafficMirrorSessionField.t` values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS API request and response data for traffic mirror session field listings.",
      "description_length": 326,
      "index": 1089,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SuccessfulInstanceCreditSpecificationSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of credit specification items. Operates on lists of `SuccessfulInstanceCreditSpecificationItem.t` and XML nodes. Used to process and encode credit configuration data for API requests and responses.",
      "description_length": 267,
      "index": 1090,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UnsuccessfulInstanceCreditSpecificationSet",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of unsuccessful instance credit specification items. Operates on lists of `UnsuccessfulInstanceCreditSpecificationItem.t` and XML or JSON representations. Used to process error responses from AWS API calls involving instance credit configurations.",
      "description_length": 320,
      "index": 1091,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstancesOfferingList",
      "description": "Handles conversion and parsing of reserved instances offering data. Accepts XML nodes to generate a list of offering records, and supports serialization to AWS query parameters and JSON formats. Used to process and transmit EC2 reserved instance configurations in API interactions.",
      "description_length": 281,
      "index": 1092,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstanceAvailabilitySet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of scheduled instance availability data. Operates on XML nodes, JSON values, and AWS query parameters. Used to process and transmit availability information for scheduled EC2 instances in API requests and responses.",
      "description_length": 285,
      "index": 1093,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReservationList",
      "description": "Provides functions to create a new reservation list, parse XML nodes into a list of reservations, convert the list to an AWS query, serialize to JSON format, and deserialize from JSON. Works with lists of Reservation.t values and JSON/AWS query data structures. Used to process and format reservation data for API interactions and data exchange.",
      "description_length": 345,
      "index": 1094,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayVirtualInterfaceGroupIdSet",
      "description": "Provides operations to create a list of string identifiers, parse XML nodes into such a list, convert the list to a query structure, serialize to JSON, and deserialize from JSON. Works with lists of string values representing virtual interface group IDs. Used to handle AWS API parameters for local gateway virtual interface groups in XML and JSON formats.",
      "description_length": 356,
      "index": 1095,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PublicIpv4PoolSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of PublicIpv4Pool.t values. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert public IPv4 pool data in network configuration workflows.",
      "description_length": 249,
      "index": 1096,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VpcList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of Vpc records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to convert Vpc data between different representation formats for API interactions.",
      "description_length": 239,
      "index": 1097,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewaySet",
      "description": "Provides functions to create a list of local gateways, parse XML nodes into this list, convert the list to AWS query parameters, serialize to JSON format, and deserialize from JSON. Works with lists of `LocalGateway.t` values and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit local gateway data in AWS API interactions.",
      "description_length": 380,
      "index": 1098,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PrefixListResourceIdStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of AWS resource identifiers. Operates on lists of strings and converts them to query parameters, JSON structures, and vice versa. Used to handle AWS resource ID lists in XML, query, and JSON formats during request and response processing.",
      "description_length": 314,
      "index": 1099,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SubnetList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of subnet objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert subnet data between different formats for API interactions and configuration management.",
      "description_length": 264,
      "index": 1100,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ElasticGpuSet",
      "description": "Creates and manipulates lists of Elastic GPU configurations through initialization, XML parsing, query construction, and JSON serialization/deserialization. Operates on lists of `ElasticGpus.t` values, converting them between formats and enabling data exchange with AWS APIs. Used to process and transmit Elastic GPU metadata in API requests and responses.",
      "description_length": 356,
      "index": 1101,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcClassicLinkList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of VpcClassicLink records. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and convert VpcClassicLink data between different representation formats in AWS API interactions.",
      "description_length": 279,
      "index": 1102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageTaskList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of import image tasks. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert task data between different formats for API interactions and data processing.",
      "description_length": 257,
      "index": 1103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FlowLogResourceIds",
      "description": "Provides functions to create, parse, and serialize resource IDs as lists of strings. Operates on XML nodes, query parameters, and JSON structures. Used to convert between XML representations of flow logs and structured data formats for API interactions.",
      "description_length": 253,
      "index": 1104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FlowLogsResourceType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and supports parsing from XML nodes, serializing to query parameters, and encoding/decoding from JSON. Works with a custom type `t` that represents resource types in AWS flow logs. Used to process and serialize resource type data in API requests and responses.",
      "description_length": 345,
      "index": 1105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.VpcTenancy",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS VPC tenancy configurations from XML and JSON inputs.",
      "description_length": 282,
      "index": 1106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.FpgaImageIdList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of string identifiers representing FPGA images. Operates on lists of strings, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS FPGA image ID collections in API requests and responses.",
      "description_length": 305,
      "index": 1107,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DhcpOptionsIdStringList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of strings as part of DHCP options configuration. Operates on lists of AWS base string types, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle DHCP option sets in AWS API interactions, such as extracting or encoding list-based parameters in requests and responses.",
      "description_length": 382,
      "index": 1108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SpotPriceHistoryList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of spot price data. Operates on lists of `SpotPrice.t` values and XML or JSON representations. Used to process and transmit historical spot price data in AWS API requests and responses.",
      "description_length": 255,
      "index": 1109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReasonCodesList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of reason codes for AWS report instances. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML input and structured data for API interactions.",
      "description_length": 249,
      "index": 1110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReportStatusType",
      "description": "Converts between string representations and a custom type, including XML parsing and JSON serialization. Works with a polymorphic type that can be instantiated with any value. Used to generate AWS query parameters and JSON payloads from status objects.",
      "description_length": 252,
      "index": 1111,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceCreditSpecificationListRequest",
      "description": "Provides functions to create, parse, and serialize lists of instance credit specification requests. Operates on lists of `InstanceCreditSpecificationRequest.t` values and XML or JSON representations. Used to generate AWS API queries and handle JSON input for instance credit configuration data.",
      "description_length": 294,
      "index": 1112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.VersionStringList",
      "description": "Provides functions to create, parse, and serialize lists of strings as XML nodes, query parameters, and JSON values. Operates on lists of string values, converting between XML, query, and JSON representations. Used to handle versioned string lists in AWS API interactions, such as processing response data or constructing request payloads.",
      "description_length": 339,
      "index": 1113,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NetworkInterfaceCreationType",
      "description": "Converts between string representations and a type `t` using bidirectional mappings, and provides serialization to and from query parameters and JSON. Works with XML nodes for parsing and supports generic value creation through a constructor function. Used to handle network interface configuration types in AWS API interactions.",
      "description_length": 329,
      "index": 1114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.HostReservationIdSet",
      "description": "Provides operations to create, parse, and serialize a list of host reservation IDs. Works with lists of string-type identifiers representing AWS host reservations. Parses XML nodes into a list of IDs, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 287,
      "index": 1115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstanceRecurrenceRequest",
      "description": "Provides operations to construct, parse, and serialize objects representing scheduled instance recurrence configurations, including frequency, interval, occurrence days, and relative timing. Works with string, integer, boolean, and custom set types for recurrence parameters. Used to generate AWS API requests and handle JSON/XML serialization for instance scheduling logic.",
      "description_length": 374,
      "index": 1116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SlotDateTimeRangeRequest",
      "description": "Provides operations to construct, parse, serialize, and deserialize a time range structure using AWS date-time values. Works with a record type containing earliest and latest time fields. Used to encode and decode request parameters for API operations that require a specific time window.",
      "description_length": 288,
      "index": 1117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImageDiskContainerList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of image disk container objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process and transmit disk container data from XML responses into structured OCaml representations and vice versa.",
      "description_length": 293,
      "index": 1118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageLicenseSpecificationListRequest",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of image license configuration requests. Operates on lists of `ImportImageLicenseConfigurationRequest.t` values and XML or JSON representations. Used to process and transmit license specifications for image imports in AWS-related workflows.",
      "description_length": 313,
      "index": 1119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.LocalGatewayRouteList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of local gateway route objects. Operates on XML nodes, AWS query parameters, and JSON structures. Used to process route data from API responses and prepare it for network requests.",
      "description_length": 250,
      "index": 1120,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ScheduledInstancesLaunchSpecification",
      "description": "Provides functions to construct, parse, and serialize a structured representation of instance launch configurations for scheduled EC2 instances. Works with specific data types such as block device mappings, IAM instance profiles, network interfaces, and placement constraints. Used to generate AWS API requests for launching instances with predefined settings.",
      "description_length": 360,
      "index": 1121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExportImageTaskIdList",
      "description": "Provides functions to create, parse, and serialize lists of strings as part of an image export task identifier. Operates on lists of string values, converting them to query parameters, JSON structures, and parsing from XML nodes. Used to handle AWS image task identifiers in request and response processing.",
      "description_length": 307,
      "index": 1122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RegisterInstanceTagAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for tagging EC2 instance attributes, including setting tags and specifying which instance tag keys to include. Works with boolean flags and sets of instance tag keys. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2 tagging services.",
      "description_length": 334,
      "index": 1123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.NatGatewayList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of NAT gateways. Operates on lists of `NatGateway.t` values and XML or JSON representations. Used to generate AWS query parameters from gateway lists and parse XML responses into structured data.",
      "description_length": 265,
      "index": 1124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.InstanceUsageSet",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of instance usage data. Operates on XML nodes and JSON structures, converting them to and from lists of `InstanceUsage.t` values. Used to process and transmit instance usage information in AWS API interactions.",
      "description_length": 280,
      "index": 1125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFastSnapshotRestoreSuccessSet",
      "description": "Provides functions to construct, parse, and serialize lists of fast snapshot restore success items, including converting between XML nodes, query parameters, and JSON representations. Operates on lists of `DescribeFastSnapshotRestoreSuccessItem.t` records. Used to process and format response data from AWS API calls related to fast snapshot restore configurations.",
      "description_length": 365,
      "index": 1126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReservedInstanceLimitPrice",
      "description": "Provides operations to create, parse, and serialize objects representing reserved instance limit prices, including converting between XML, JSON, and query formats. Works with numeric amounts, currency codes, and structured data types. Used to handle AWS EC2 reserved instance pricing configurations in API requests and responses.",
      "description_length": 329,
      "index": 1127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ConnectionNotificationIdsList",
      "description": "Provides operations to create, parse, and serialize a list of connection notification IDs. Works with lists of string-type identifiers and XML or JSON representations. Parses XML nodes into a list of IDs, converts them to query parameters, and handles JSON serialization and deserialization.",
      "description_length": 291,
      "index": 1128,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EgressOnlyInternetGatewayList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of EgressOnlyInternetGateway objects. Operates on XML nodes, AWS query structures, and JSON values. Used to process and convert gateway data from API responses into structured OCaml representations.",
      "description_length": 268,
      "index": 1129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.LoadPermissionModifications",
      "description": "Provides operations to construct, parse, and serialize load permission modifications, including adding or removing permissions from a list. Works with XML nodes, JSON structures, and AWS query parameters. Used to generate AWS API requests for modifying load permissions in cloud infrastructure.",
      "description_length": 294,
      "index": 1130,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCapacityReservationsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing EC2 capacity reservations, including setting reservation IDs, pagination tokens, result limits, and filters. Works with custom types such as CapacityReservationIdSet, FilterList, and AWS-specific base types for strings and integers. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2.",
      "description_length": 398,
      "index": 1131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNetworkAclRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a network ACL, including converting between XML, query parameters, and JSON formats. Works with AWS base types such as Boolean and String, and represents requests as a structured record type. Used to generate HTTP requests for AWS EC2 API interactions, specifically for network ACL management.",
      "description_length": 370,
      "index": 1132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateImageRequest",
      "description": "Creates and manipulates image creation requests with specific parameters such as instance ID, name, and block device mappings. Works with types like BlockDeviceMappingRequestList, String, Boolean, and JSON structures. Used to generate AWS API-compatible queries and JSON payloads for creating EC2 images.",
      "description_length": 304,
      "index": 1133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateCapacityReservationRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing AWS EC2 capacity reservation requests. Works with specific data types such as instance types, availability zones, tenancy options, and date/time values. Used to generate structured API inputs for reserving EC2 instances with precise configuration parameters.",
      "description_length": 333,
      "index": 1134,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorFilterResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of creating a traffic mirror filter, including parsing XML responses and converting to JSON or query parameters. Works with custom types such as `TrafficMirrorFilter.t` and AWS-specific string and JSON types. Used to handle API responses in AWS SDK interactions, enabling structured data processing and transmission.",
      "description_length": 402,
      "index": 1135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTagsResult",
      "description": "Provides operations to construct, parse, and serialize objects representing the result of describing tags, including handling pagination tokens and tag lists. Works with `Aws.BaseTypes.String.t` for tokens and `TagDescriptionList.t` for tag data. Used to generate HTTP queries and JSON representations for API responses.",
      "description_length": 320,
      "index": 1136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeDhcpOptionsResult",
      "description": "Provides functions to construct, parse, and serialize DHCP options results, including converting between XML, JSON, and query formats. Works with `DhcpOptionsList.t` and AWS-specific types for handling network configuration data. Used to process API responses from AWS EC2 when retrieving DHCP options sets.",
      "description_length": 307,
      "index": 1137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpnGatewaysResult",
      "description": "Provides functions to construct, parse, and serialize objects containing a list of VPN gateways, including conversion to and from JSON and query parameters. Works with VpnGatewayList.t and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process API responses from services that return multiple VPN gateway configurations.",
      "description_length": 343,
      "index": 1138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayAttachmentPropagationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing propagation configurations for a transit gateway attachment, including methods to convert between XML, JSON, and query parameters. Works with types such as TransitGatewayAttachmentPropagationList.t and Aws.BaseTypes.String.t to manage network route propagation settings. Used to process API responses from cloud infrastructure services that require detailed control over route propagation rules.",
      "description_length": 478,
      "index": 1139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayPrefixListReferencesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving prefix list references associated with a transit gateway route table. Works with types such as strings, integers, boolean flags, and custom filter lists. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS Transit Gateway services.",
      "description_length": 345,
      "index": 1140,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCapacityReservationsResult",
      "description": "Provides functions to construct, parse, and serialize objects representing EC2 capacity reservation results, including handling pagination tokens and reservation sets. Works with custom types for AWS query parameters, JSON serialization, and XML parsing. Used to process API responses from EC2 capacity reservation operations.",
      "description_length": 326,
      "index": 1141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeElasticGpusRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing Elastic GPUs, including setting specific GPU IDs, filters, pagination parameters, and dry-run flags. Works with custom types such as ElasticGpuIdSet, FilterList, and AWS-specific base types for query and JSON formatting. Used to generate structured API requests for AWS EC2 describe-elastic-gpus operations.",
      "description_length": 386,
      "index": 1142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLocalGatewayRouteTableVpcAssociationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a local gateway route table VPC association, including handling AWS query parameters and JSON formatting. Works with string identifiers and boolean flags to control request behavior. Used to generate structured API calls for network configuration management in AWS.",
      "description_length": 342,
      "index": 1143,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AuthorizeSecurityGroupEgressRequest",
      "description": "Provides operations to construct, parse, and serialize requests for authorizing egress rules on a security group. Works with types such as boolean, string, integer, and custom structures like IpPermissionList. Used to generate AWS API-compatible queries and JSON payloads for configuring network access controls.",
      "description_length": 312,
      "index": 1144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesModificationsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing AWS EC2 reserved instances modifications results. Works with types such as string tokens and lists of reserved instances modifications. Used to process API responses and generate query parameters or JSON payloads for AWS EC2 interactions.",
      "description_length": 322,
      "index": 1145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkAclEntryRequest",
      "description": "Provides functions to construct, parse, and serialize network ACL entry requests with specific parameters like CIDR blocks, port ranges, and protocol settings. Works with types such as `IcmpTypeCode`, `PortRange`, and `RuleAction` to define rule details. Used to generate AWS API-compatible requests for adding or modifying network access control list entries.",
      "description_length": 360,
      "index": 1146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTagsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing tags, including setting dry run flags, filters, result limits, and pagination tokens. Works with custom types such as boolean flags, integer limits, string tokens, and filter lists. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 339,
      "index": 1147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribePlacementGroupsResult",
      "description": "Provides functions to construct, parse, and serialize a result structure containing a list of placement groups, including conversion to and from JSON and query parameters. Works with `PlacementGroupList.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process API responses and prepare data for HTTP requests in AWS integration code.",
      "description_length": 377,
      "index": 1148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayRouteTablePropagationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the propagation settings of a transit gateway route table. Works with custom types for route table propagations and pagination tokens. Used to process API responses and prepare data for HTTP queries or JSON serialization.",
      "description_length": 304,
      "index": 1149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateSubnetRequest",
      "description": "Creates and manipulates requests to establish a new subnet within a VPC, supporting parameters like CIDR blocks, availability zones, and tags. Operates on structured data including string-based identifiers, CIDR ranges, and tag specifications. Used to generate API-compatible queries and JSON payloads for cloud infrastructure provisioning.",
      "description_length": 340,
      "index": 1150,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeletePlacementGroupRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a placement group, including creating with a group name and optional dry run flag, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with AWS base types for booleans and strings, and a structured record type containing the group name and dry run flag. Used to generate HTTP requests for AWS EC2 API operations related to placement group management.",
      "description_length": 490,
      "index": 1151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeKeyPairsResult",
      "description": "Provides functions to construct, parse, serialize, and deserialize a structure containing key pairs, including parsing from XML nodes, converting to AWS query parameters, and handling JSON representations. Works with a record type containing key pair data and a list of key pair records. Used to process AWS API responses that return key pair information.",
      "description_length": 355,
      "index": 1152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLaunchTemplateResult",
      "description": "Provides functions to construct, parse, and serialize a launch template result, including creating an instance with optional launch template and warning data, parsing XML nodes into the structure, and converting between JSON and query formats. Works with types such as LaunchTemplate.t, ValidationWarning.t, and Aws.Json.t. Used to process and encode responses from AWS API calls involving launch templates.",
      "description_length": 407,
      "index": 1153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetHistoryResult",
      "description": "Provides operations to construct, parse, and serialize fleet history data, including methods to convert between XML, JSON, and query parameters. Works with data types such as datetime, strings, and sets of history records. Used to process and transmit detailed fleet activity logs from AWS API responses.",
      "description_length": 304,
      "index": 1154,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeHostReservationsResult",
      "description": "Provides operations to construct, parse, and serialize host reservation results, including converting between XML nodes, query parameters, and JSON representations. Works with HostReservationSet.t and AWS-specific types for handling API responses. Used to process and format AWS EC2 host reservation data in API interactions.",
      "description_length": 325,
      "index": 1155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyImageAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying image attributes in AWS, including setting or removing launch permissions, product codes, and descriptions. Works with specific types such as image IDs, attribute values, user groups, and permission modifications. Used to generate API-compatible queries and JSON payloads for EC2 image attribute updates.",
      "description_length": 381,
      "index": 1156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for retrieving specific instance attributes, including methods to convert between XML, query parameters, and JSON formats. Works with instance IDs, attribute names, and boolean flags for dry runs. Used to generate structured API requests for cloud infrastructure management tasks.",
      "description_length": 343,
      "index": 1157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeprovisionByoipCidrRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deprovisioning a BYOIP CIDR block, including converting between XML, query parameters, and JSON formats. Works with string-based CIDR notations and boolean flags for dry-run scenarios. Used to prepare and transmit deprovisioning commands in AWS API interactions.",
      "description_length": 330,
      "index": 1158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetNetworkInterfaceAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for resetting network interface attributes, including setting dry run flags, network interface IDs, and source-destination check settings. Works with types such as boolean, string, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with network interface configurations.",
      "description_length": 381,
      "index": 1159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReleaseHostsRequest",
      "description": "Provides functions to construct, parse, and serialize a request containing a list of host IDs, including converting between XML, query parameters, and JSON formats. Works with `RequestHostIdList.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate and process API requests for releasing specified hosts in a cloud infrastructure context.",
      "description_length": 391,
      "index": 1160,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayVpcAttachmentRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating a transit gateway VPC attachment, including handling subnet IDs, options, tags, and dry run flags. Works with AWS-specific types such as string identifiers, lists of subnet IDs, tag specifications, and boolean flags. Used to generate API-compatible query parameters and JSON payloads for AWS EC2 operations.",
      "description_length": 383,
      "index": 1161,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing local gateways, including setting identifiers, filters, result limits, pagination tokens, and dry-run flags. Works with custom types such as LocalGatewayIdSet, FilterList, and AWS-specific data structures for query and JSON formatting. Used to generate structured API requests for AWS EC2 describe-local-gateways operations.",
      "description_length": 403,
      "index": 1162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyReservedInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying reserved instances, including creating a request from instance IDs and configuration lists, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with custom types for reserved instance IDs, client tokens, and configurations. Used to generate API-compatible requests for cloud infrastructure management systems.",
      "description_length": 450,
      "index": 1163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointConnectionsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing VPC endpoint connections, including handling pagination tokens. Works with custom types such as `VpcEndpointConnectionSet.t` and AWS-specific JSON and query formats. Used to process API responses from services that return lists of VPC endpoint connections with optional continuation tokens.",
      "description_length": 374,
      "index": 1164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateRouteTableRequest",
      "description": "Provides operations to construct, parse, and serialize requests for associating a route table with a subnet or gateway. Works with types including boolean flags, string identifiers, and AWS query and JSON structures. Used to generate API-compatible request payloads for cloud networking configurations.",
      "description_length": 302,
      "index": 1165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLocalGatewayRouteTableVpcAssociationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for associating a VPC with a local gateway route table, including handling optional parameters like tag specifications and dry run flags. Works with string identifiers for route tables and VPCs, and structured data for tags. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure management.",
      "description_length": 392,
      "index": 1166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateAddressResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of associating an address, including converting between XML, query parameters, and JSON formats. Works with a record type containing an optional association ID. Used to process API responses from services that manage IP address associations.",
      "description_length": 332,
      "index": 1167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateCustomerGatewayRequest",
      "description": "Provides functions to construct, parse, and serialize a customer gateway request, including setting BGP ASN, public IP, certificate ARN, gateway type, and tags. Works with types such as integers, strings, boolean, and custom records for gateway configuration. Used to generate AWS API-compatible query parameters and JSON payloads for creating customer gateways.",
      "description_length": 362,
      "index": 1168,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointConnectionNotificationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC endpoint connection notifications, including handling filters, pagination, and dry-run flags. Works with types such as boolean, string, integer, and custom filter lists. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 344,
      "index": 1169,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSecurityGroupsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing security groups, including handling filters, group IDs, group names, dry run flags, pagination tokens, and result limits. Works with custom types such as filter lists, group ID and name lists, boolean flags, and pagination tokens. Used to generate HTTP query parameters and JSON payloads for API calls, and to parse XML responses into request objects.",
      "description_length": 430,
      "index": 1170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeExportImageTasksResult",
      "description": "Provides functions to construct, parse, and serialize a result structure containing exported image tasks and a pagination token. Works with `ExportImageTaskList.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to generate HTTP query parameters and JSON representations for API responses.",
      "description_length": 306,
      "index": 1171,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportImageRequest",
      "description": "Provides operations to construct, parse, and serialize an image export request, including setting client tokens, descriptions, disk formats, S3 locations, and tags. Works with types such as string, boolean, custom record types for S3 locations, and tag specifications. Used to generate AWS API-compatible requests for exporting EC2 images to S3.",
      "description_length": 345,
      "index": 1172,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotInstancesRequest",
      "description": "Constructs and manipulates requests for spot instance launches, supporting parameters like availability zones, spot price, instance count, and launch specifications. Operates on types such as datetime, integer, string, and custom records like RequestSpotLaunchSpecification and TagSpecificationList. Used to generate API-compatible queries and JSON payloads for cloud infrastructure provisioning.",
      "description_length": 396,
      "index": 1173,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetAssociatedEnclaveCertificateIamRolesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing associated roles for an enclave certificate, including conversion to and from JSON and query parameters. Works with `AssociatedRolesList.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit enclave certificate role associations in AWS API interactions.",
      "description_length": 392,
      "index": 1174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFlowLogsResult",
      "description": "Provides constructors and parsers for handling AWS VPC flow log creation results, including building instances from XML, converting to query parameters, and serializing/deserializing JSON. Works with AWS-specific types such as string lists, JSON values, and query structures. Used to process API responses and prepare data for network requests or storage.",
      "description_length": 355,
      "index": 1175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkInterfaceResult",
      "description": "Provides a constructor for creating a network interface result, a parser for XML nodes, and conversions to and from query parameters and JSON. Works with the NetworkInterface.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process and serialize responses from network interface creation operations in AWS APIs.",
      "description_length": 343,
      "index": 1176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RestoreAddressToClassicResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of restoring an address to a classic instance. Works with types including a record containing optional public IP and status fields. Used to generate AWS query parameters, JSON representations, and parse XML responses from API calls.",
      "description_length": 323,
      "index": 1177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayRouteTablesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing AWS Transit Gateway Route Tables, including handling identifiers, filters, pagination, and dry-run flags. Works with custom types such as TransitGatewayRouteTableIdStringList, FilterList, and AWS-specific data structures. Used to generate HTTP queries and JSON payloads for API interactions with AWS EC2.",
      "description_length": 382,
      "index": 1178,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateTransitGatewayRouteTableRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disassociating a transit gateway route table from an attachment, including converting between XML, query parameters, and JSON formats. Works with string identifiers for route tables and attachments, and boolean flags for dry runs. Used to prepare API requests for cloud infrastructure management tasks.",
      "description_length": 370,
      "index": 1179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateIamInstanceProfileRequest",
      "description": "Creates a request to disassociate an IAM instance profile from an EC2 instance using a specific association ID. Operates on AWS query parameters, XML nodes, and JSON structures for request construction and parsing. Used to generate and process API requests in AWS SDK interactions.",
      "description_length": 281,
      "index": 1180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RejectTransitGatewayPeeringAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for rejecting a transit gateway peering attachment, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate structured API requests for AWS EC2 operations involving transit gateway management.",
      "description_length": 379,
      "index": 1181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateClientVpnTargetNetworkRequest",
      "description": "Provides functions to construct, parse, and serialize requests for disassociating a target network from an AWS Client VPN endpoint, including creating a request with endpoint and association IDs, and converting between XML, query, and JSON formats. Works with string identifiers and boolean flags to represent request parameters. Used to manage network associations in AWS Client VPN configurations through programmatic API interactions.",
      "description_length": 437,
      "index": 1182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpnGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a VPN gateway, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate HTTP requests for AWS API interactions, particularly for managing VPN gateway resources.",
      "description_length": 345,
      "index": 1183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTrafficMirrorFiltersResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of describing traffic mirror filters, including handling associated filter sets and pagination tokens. Works with custom types for traffic mirror filters and AWS query and JSON formats. Used to process API responses from services that manage network traffic monitoring configurations.",
      "description_length": 379,
      "index": 1184,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTrafficMirrorTargetsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing traffic mirror targets, including handling query parameters, JSON representation, and XML parsing. Works with types such as traffic mirror target IDs, boolean flags, filters, and pagination tokens. Used to generate HTTP requests for AWS API calls querying network traffic mirror configurations.",
      "description_length": 372,
      "index": 1185,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UnassignPrivateIpAddressesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for unassigning private IP addresses from a network interface. Works with string identifiers and lists of private IP addresses. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 269,
      "index": 1186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayPeeringAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a transit gateway peering attachment, including converting between XML, query parameters, and JSON formats. Works with string identifiers and boolean flags to represent request parameters. Used to generate structured API calls for cloud infrastructure management tasks.",
      "description_length": 346,
      "index": 1187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceNetworkAclAssociationResult",
      "description": "Provides functions to construct, parse, and serialize a network ACL association result, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing an optional string for a new association ID. Used to process API responses from AWS EC2 when replacing network ACL associations.",
      "description_length": 336,
      "index": 1188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttachClassicLinkVpcResult",
      "description": "Provides functions to construct, parse, and serialize a VPC link attachment result, including conversion to query parameters, JSON, and parsing from XML. Works with boolean values and structured data representing the result of attaching a classic link to a VPC. Used to handle API responses in AWS SDK interactions, such as validating successful VPC link attachments.",
      "description_length": 367,
      "index": 1189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateManagedPrefixListResult",
      "description": "Provides operations to construct, parse, and serialize a managed prefix list result, including converting between XML nodes, query parameters, and JSON representations. Works with the `ManagedPrefixList.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API responses in AWS SDK interactions, such as creating or updating managed prefix lists in VPC configurations.",
      "description_length": 407,
      "index": 1190,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteSpotDatafeedSubscriptionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a data feed subscription, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as Boolean, Query, and Json. Used to generate HTTP requests for AWS IoT Greengrass service interactions.",
      "description_length": 312,
      "index": 1191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteRouteTableRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a route table, including creating with optional dry-run flag, parsing XML nodes, and converting to query parameters or JSON. Works with AWS base types for boolean and string, and internal request structure. Used to generate API-compatible requests for cloud infrastructure management.",
      "description_length": 361,
      "index": 1192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetDefaultCreditSpecificationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving default credit specifications, including creating instances with specified families and converting data between XML, query, and JSON formats. Works with boolean flags, instance family identifiers, and structured request data. Used to generate API-compatible queries and handle JSON serialization for cloud infrastructure configurations.",
      "description_length": 415,
      "index": 1193,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateVpcCidrBlockRequest",
      "description": "Provides functions to construct, parse, and serialize a VPC CIDR block disassociation request, including creating an instance from an association ID, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS-specific types such as strings, query parameters, and JSON structures. Used to generate and process requests for removing a CIDR block from a VPC in AWS API interactions.",
      "description_length": 420,
      "index": 1194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateTransitGatewayMulticastDomainRequest",
      "description": "Provides functions to construct, parse, and serialize requests for associating a transit gateway with a multicast domain, including setting the domain ID, attachment ID, subnet IDs, and dry run flag. Works with string-based identifiers, lists of subnets, and boolean flags. Used to prepare API calls for cloud networking configurations involving multicast domain associations.",
      "description_length": 376,
      "index": 1195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for canceling spot fleet requests, including setting dry-run flags, specifying fleet IDs, and controlling instance termination. Works with types such as boolean flags, lists of spot fleet request IDs, and AWS query and JSON representations. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 397,
      "index": 1196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetManagedPrefixListEntriesResult",
      "description": "Provides functions to construct, parse, and serialize a structure containing managed prefix list entries and a next token. Works with `PrefixListEntrySet.t` and AWS-specific types for query and JSON formatting. Used to process API responses from services that return paginated prefix list data.",
      "description_length": 294,
      "index": 1197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIpv6PoolsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing IPv6 pools, including setting pool IDs, pagination tokens, result limits, dry run flags, and filters. Works with custom types such as Ipv6PoolIdList, Aws.BaseTypes.String, Aws.BaseTypes.Integer, Aws.BaseTypes.Boolean, and FilterList. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 404,
      "index": 1198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyManagedPrefixListResult",
      "description": "Provides operations to construct, parse, and serialize a managed prefix list result, including converting between XML, JSON, and query formats. Works with `ManagedPrefixList.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses for modifying managed prefix lists in AWS services.",
      "description_length": 344,
      "index": 1199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewaysResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of describing transit gateways, including handling a list of transit gateway objects and a pagination token. Works with custom types such as `TransitGatewayList.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses from AWS EC2 when retrieving detailed information about multiple transit gateways in a structured format.",
      "description_length": 464,
      "index": 1200,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointServiceConfigurationResult",
      "description": "Provides operations to construct, parse, and serialize a VPC endpoint service configuration object, including converting between XML, query, and JSON formats. Works with boolean values and structured data representing AWS VPC endpoint service settings. Used to process API responses and prepare data for transmission in AWS interactions.",
      "description_length": 337,
      "index": 1201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelBundleTaskRequest",
      "description": "Provides operations to construct, parse, and serialize requests for canceling a bundle task, including creating with a bundle ID and optional dry run flag, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with AWS base types for strings and booleans, and internal request records. Used to generate HTTP requests for AWS EC2 bundle task cancellation and process incoming XML or JSON payloads.",
      "description_length": 457,
      "index": 1202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CopyImageResult",
      "description": "Provides operations to construct, parse, and serialize image result data, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing an optional image ID. Used to process and format responses from image-related API calls.",
      "description_length": 282,
      "index": 1203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterInstanceEventNotificationAttributesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing event notification attributes for a register instance operation. Works with the `InstanceTagNotificationAttribute.t` type and a record type `t` containing configuration details. Used to generate AWS API queries and JSON representations for event-driven resource tracking.",
      "description_length": 350,
      "index": 1204,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateClientVpnEndpointRequest",
      "description": "Creates a client VPN endpoint configuration with specified CIDR block, server certificate ARN, and authentication options. Works with structured data types such as client VPN authentication lists, connection log options, and tag specifications. Used to generate API requests for setting up client VPN endpoints in AWS, including configuring DNS servers, transport protocol, and security groups.",
      "description_length": 394,
      "index": 1205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateInstanceExportTaskResult",
      "description": "Creates and manipulates objects representing the result of exporting an instance, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with `ExportTask.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format export task outcomes in AWS integration workflows.",
      "description_length": 343,
      "index": 1206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableTransitGatewayRouteTablePropagationResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of disabling transit gateway route table propagation. Works with `TransitGatewayPropagation.t` and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 277,
      "index": 1207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayRouteTableRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a transit gateway route table, including converting between XML, query parameters, and JSON formats. Works with string identifiers for transit gateway route tables and boolean flags for dry-run validation. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 376,
      "index": 1208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcClassicLinkDnsSupportResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing VPC classic link DNS support results, including handling pagination tokens and VPC lists. Works with types such as strings, lists of classic link DNS support configurations, and AWS query and JSON formats. Used to process API responses from AWS EC2, enabling structured data manipulation and transmission.",
      "description_length": 389,
      "index": 1209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyLaunchTemplateRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for modifying EC2 launch templates, including setting dry run flags, client tokens, template identifiers, names, and default versions. Works with AWS-specific data types such as Boolean, String, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API calls to update launch template configurations.",
      "description_length": 399,
      "index": 1210,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateVpcCidrBlockResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of disassociating a VPC CIDR block, including handling IPv6 and IPv4 associations and VPC identifiers. Works with types such as VpcIpv6CidrBlockAssociation and VpcCidrBlockAssociation, as well as string and JSON representations. Used to process API responses and prepare data for HTTP queries in AWS VPC management workflows.",
      "description_length": 411,
      "index": 1211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImportSnapshotTasksRequest",
      "description": "Provides operations to construct, parse, and serialize requests for importing snapshot tasks, including setting dry-run flags, filters, task IDs, result limits, and pagination tokens. Works with custom types such as boolean flags, filter lists, task ID lists, and pagination tokens. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 361,
      "index": 1212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeManagedPrefixListsResult",
      "description": "Provides operations to construct, parse, and serialize a structured response containing managed prefix lists and a pagination token. Works with `Aws.BaseTypes.String.t` for tokens and `ManagedPrefixListSet.t` for collections of prefix lists. Used to process API responses from services managing network prefix lists, enabling efficient data handling and integration with AWS SDKs.",
      "description_length": 380,
      "index": 1213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotFleetRequest",
      "description": "Provides operations to construct, parse, and serialize a spot fleet request object, including creating with optional dry run and configuring with a specific data structure. Works with AWS-specific types such as Boolean and Query, and JSON representations. Used to generate API-compatible requests for provisioning spot instances in cloud environments.",
      "description_length": 351,
      "index": 1214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesListingsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS Reserved Instances listings. Works with custom types for reserved instances listings and JSON/XML data formats. Used to process API responses and generate query parameters for AWS EC2 operations.",
      "description_length": 282,
      "index": 1215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnTunnelCertificateRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying a VPN tunnel's certificate, including creating a request with a VPN connection ID and tunnel IP address, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with string and boolean types for configuration parameters and structured data for request encoding. Used to prepare and process API calls for updating certificate settings in a VPN tunnel configuration.",
      "description_length": 501,
      "index": 1216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnRoutesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing client VPN routes, including handling filters, pagination, and dry-run flags. Works with AWS-specific data types such as strings, integers, and JSON structures. Used to generate HTTP queries and JSON payloads for API interactions with client VPN route configurations.",
      "description_length": 346,
      "index": 1217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcEndpointsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting VPC endpoints, including converting between XML, query parameters, and JSON formats. Works with boolean flags, lists of VPC endpoint IDs, and structured data types. Used to generate HTTP requests for AWS API interactions, such as removing multiple endpoints in a single operation.",
      "description_length": 357,
      "index": 1218,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcEndpointServiceConfigurationResult",
      "description": "Provides functions to construct, parse, and serialize a VPC endpoint service configuration, including converting between XML nodes, query parameters, and JSON representations. Works with the `ServiceConfiguration.t` type and AWS string types. Used to process API responses and prepare data for HTTP requests in AWS VPC endpoint service interactions.",
      "description_length": 349,
      "index": 1219,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SearchLocalGatewayRoutesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying local gateway routes, including building with specific route table IDs, filters, and pagination parameters. Works with custom types such as string, integer, boolean, and structured data for AWS query and JSON formats. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS networking services.",
      "description_length": 402,
      "index": 1220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableVpcClassicLinkRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disabling ClassicLink in a VPC, including converting between XML, query parameters, and JSON formats. Works with VPC identifiers and boolean flags for dry runs. Used to generate API-compatible request structures for AWS EC2 operations.",
      "description_length": 303,
      "index": 1221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNetworkAclEntryRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a network ACL entry, including converting between XML, JSON, and query parameters. Works with boolean flags, string identifiers, and integer rule numbers. Used to generate structured API requests for AWS network configuration changes.",
      "description_length": 311,
      "index": 1222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterInstanceEventNotificationAttributesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of deregistering instance event notification attributes. Works with `InstanceTagNotificationAttribute.t` and AWS-specific query and JSON formats. Used to handle API responses in AWS EC2 event notification management workflows.",
      "description_length": 316,
      "index": 1223,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AllocateAddressResult",
      "description": "Provides constructors and parsers for handling AWS address allocation results, including methods to create instances from optional fields, parse XML nodes, and serialize/deserialize to query parameters and JSON. Works with string-based identifiers, domain types, and AWS-specific data structures. Used to process responses from EC2 address allocation APIs, extracting public IPs, allocation IDs, and network details.",
      "description_length": 416,
      "index": 1224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnTargetNetworksRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing client VPN target networks, including handling filters, pagination, and dry-run flags. Works with AWS-specific types such as string lists, integer limits, and JSON structures. Used to generate API-compatible queries and JSON payloads for AWS EC2 operations.",
      "description_length": 335,
      "index": 1225,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTrafficMirrorFilterRuleResult",
      "description": "Provides functions to construct, parse, and serialize a traffic mirror filter rule result, including converting between XML nodes, query parameters, and JSON representations. Works with the `TrafficMirrorFilterRule.t` type and AWS-specific data structures. Used to process and format responses from AWS API calls related to traffic mirror rules.",
      "description_length": 345,
      "index": 1226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateDefaultVpcResult",
      "description": "Provides operations to construct, parse, and serialize a VPC creation result, including converting between XML, JSON, and query formats. Works with the Vpc.t type and a custom record type representing the result of creating a default VPC. Used to handle AWS API responses by parsing XML input and generating structured JSON or query parameters for further processing.",
      "description_length": 367,
      "index": 1227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcEndpointConnectionNotificationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating a VPC endpoint connection notification, including setting dry run flags, service IDs, VPC endpoint IDs, notification ARNs, events, and client tokens. Works with AWS base types and a list of string values for connection events. Used to generate API-compatible query parameters and JSON payloads for AWS VPC endpoint notifications.",
      "description_length": 405,
      "index": 1228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportClientVpnClientConfigurationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for exporting client VPN client configurations, including creating a request with a client VPN endpoint ID and optional dry run flag, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate and process export configuration requests in AWS API interactions.",
      "description_length": 468,
      "index": 1229,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TerminateInstancesResult",
      "description": "Provides functions to construct, parse, and serialize instances of terminated AWS EC2 instances, including converting between XML, JSON, and query parameters. Works with `InstanceStateChangeList.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses from terminating EC2 instances and prepare data for HTTP requests.",
      "description_length": 364,
      "index": 1230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateClientVpnRouteRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to create client VPN routes. Works with string-based identifiers, CIDR blocks, and boolean flags. Used to generate API-compatible query parameters and JSON payloads for AWS client VPN route configuration.",
      "description_length": 288,
      "index": 1231,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateManagedPrefixListRequest",
      "description": "Provides operations to construct, parse, and serialize requests for creating a managed prefix list, including setting dry run flags, specifying name, entries, maximum entries, tag specifications, address family, and client tokens. Works with types such as boolean, string, integer, and custom records for entries and tag specifications. Used to generate structured API requests for cloud infrastructure management systems.",
      "description_length": 422,
      "index": 1232,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExportClientVpnClientCertificateRevocationListResult",
      "description": "Provides operations to construct, parse, and serialize data related to client certificate revocation lists, including converting between XML nodes, query parameters, and JSON representations. Works with string-based certificate revocation lists and status indicators. Used to handle AWS client VPN certificate revocation list responses in API interactions.",
      "description_length": 356,
      "index": 1233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TerminateClientVpnConnectionsResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of terminating client VPN connections, including setting client VPN endpoint IDs, usernames, and connection statuses. Works with string types, a set of connection statuses, and JSON or query format data. Used to generate API responses or process incoming XML data in AWS SDK interactions.",
      "description_length": 378,
      "index": 1234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayPrefixListReferenceResult",
      "description": "Provides operations to construct, parse, and serialize a transit gateway prefix list reference object, including converting between XML nodes, query parameters, and JSON representations. Works with the `TransitGatewayPrefixListReference.t` type and AWS-specific data structures. Used to handle API responses and data exchange in networking-related workflows.",
      "description_length": 358,
      "index": 1235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceTypeOfferingsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing instance type offerings, including methods to convert between XML nodes, query parameters, and JSON representations. Works with custom types such as instance type offerings lists and string-based tokens. Used to process and transmit AWS API responses related to available instance types.",
      "description_length": 370,
      "index": 1236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceStatusResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing EC2 instance status information, including instance statuses and pagination tokens. Works with `InstanceStatusList.t` and AWS-specific types for query and JSON formatting. Used to process and transmit EC2 status responses from API calls.",
      "description_length": 316,
      "index": 1237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateReservedInstancesListingResult",
      "description": "Provides functions to construct, parse, and serialize objects representing reserved instances listing results, including converting between XML, JSON, and query formats. Works with custom types for reserved instances listings and JSON structures. Used to process and transmit EC2 reserved instances data in AWS API interactions.",
      "description_length": 328,
      "index": 1238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RejectTransitGatewayPeeringAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of rejecting a transit gateway peering attachment. Works with the `TransitGatewayPeeringAttachment.t` type and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 289,
      "index": 1239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteInternetGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting an internet gateway, including creating with optional dry run, parsing XML input, and converting to query parameters or JSON. Works with AWS base types such as Boolean and String, and represents request data in a structured record type. Used to generate HTTP requests for AWS EC2 API interactions, specifically for the delete-internet-gateway action.",
      "description_length": 427,
      "index": 1240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpnConnectionRouteRequest",
      "description": "Provides functions to construct, parse, and serialize a request for creating a VPN connection route, including parsing from XML nodes, converting to query parameters, and handling JSON serialization and deserialization. Works with string-based identifiers and CIDR blocks to define network routes. Used to generate structured API requests for cloud networking configurations.",
      "description_length": 375,
      "index": 1241,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyFleetResult",
      "description": "Provides operations to construct, parse, and serialize a fleet modification result, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing a boolean return value. Used to handle responses from fleet modification API calls, enabling data exchange and validation.",
      "description_length": 330,
      "index": 1242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConfirmProductInstanceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for confirming a product instance, including creating with instance ID and product code, parsing XML nodes, generating query parameters, and converting to and from JSON. Works with string-based identifiers and boolean flags for dry runs. Used to validate and prepare instance-product associations in AWS API interactions.",
      "description_length": 385,
      "index": 1243,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceEventNotificationAttributesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing instance event notification attributes, including methods to convert between XML, JSON, and query parameters. Works with a record type containing optional instance tag notification attributes. Used to process and transmit configuration details for instance event notifications in AWS API interactions.",
      "description_length": 380,
      "index": 1244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetGroupsForCapacityReservationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for retrieving groups associated with a capacity reservation, including handling pagination and dry-run flags. Works with string, integer, and boolean types, as well as XML and JSON data formats. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 337,
      "index": 1245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StartVpcEndpointServicePrivateDnsVerificationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for verifying private DNS configuration of a VPC endpoint service. Works with AWS query parameters and JSON structures, using a type representing the request state. Used to generate HTTP requests for AWS API interactions involving VPC endpoint verification.",
      "description_length": 321,
      "index": 1246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFpgaImageResult",
      "description": "Provides constructors and parsers for handling FPGA image result data, including conversion to query parameters, JSON serialization, and deserialization. Works with string-based identifiers and structured data types representing FPGA image metadata. Used to process API responses and prepare data for network transmission or storage.",
      "description_length": 333,
      "index": 1247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayPrefixListReferencesResult",
      "description": "Provides functions to construct, parse, and serialize data structures containing AWS transit gateway prefix list references, including conversion to query parameters and JSON formats. Works with `TransitGatewayPrefixListReferenceSet.t` and string tokens for pagination. Used to process API responses from AWS EC2 when retrieving prefix list associations with transit gateways.",
      "description_length": 376,
      "index": 1248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImagesResult",
      "description": "Provides operations to construct, parse, and serialize image recognition results. Works with image lists and XML or JSON data structures. Used to convert raw XML responses from image analysis services into structured data and vice versa.",
      "description_length": 237,
      "index": 1249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CopyFpgaImageRequest",
      "description": "Provides functions to construct, parse, and serialize requests for copying an FPGA image, including creating with optional parameters like dry run, description, and client token. Works with AWS base types such as strings and booleans, and JSON or query structures for API communication. Used to generate structured API calls for cloud image management workflows.",
      "description_length": 362,
      "index": 1250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcEndpointServiceConfigurationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting VPC endpoint service configurations, including creating with optional dry-run flags and service IDs. Works with boolean flags, lists of service IDs, and AWS query and JSON formats. Used to generate API requests for removing endpoint services in cloud infrastructure management workflows.",
      "description_length": 364,
      "index": 1251,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateReservedInstancesListingRequest",
      "description": "Provides functions to construct, parse, and serialize a request for creating a reserved instances listing, including setting a client token, instance count, price schedules, and reserved instances ID. Works with types such as strings, integers, and custom lists for price schedules. Used to generate HTTP queries and JSON payloads for API interactions with AWS EC2.",
      "description_length": 365,
      "index": 1252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImportSnapshotTasksResult",
      "description": "Provides functions to construct, parse, and serialize objects containing a list of import snapshot tasks and a pagination token. Works with `ImportSnapshotTaskList.t` and AWS query and JSON formats. Used to process API responses from EC2 import snapshot task listings.",
      "description_length": 268,
      "index": 1253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorFilterRuleResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of creating a traffic mirror filter rule, working with `TrafficMirrorFilterRule.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to generate HTTP query parameters and JSON representations for API responses. Parses XML nodes into structured result objects for processing AWS API outputs.",
      "description_length": 402,
      "index": 1254,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkInterfacePermissionsResult",
      "description": "Provides operations to construct, parse, and serialize responses containing network interface permissions and pagination tokens. Works with `NetworkInterfacePermissionList.t` and AWS query/json formats. Used to handle EC2 network interface permission updates and responses in API interactions.",
      "description_length": 293,
      "index": 1255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway result structure. Works with the `TransitGateway.t` type and AWS query and JSON formats. Used to generate HTTP request parameters and process XML responses from AWS API calls.",
      "description_length": 247,
      "index": 1256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpnConnectionRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deleting a VPN connection, including creating with a connection ID and optional dry run flag, parsing XML input, and converting to query parameters or JSON format. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate structured API requests for AWS EC2 VPN connection management.",
      "description_length": 388,
      "index": 1257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorTargetRequest",
      "description": "Creates a request to establish a traffic mirror target, supporting parameters like network interface, load balancer ARN, description, tags, and dry run flag. Operates on string, boolean, and list types, along with AWS-specific data structures. Used to generate API-compatible requests for cloud networking configurations.",
      "description_length": 321,
      "index": 1258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotInstanceRequestsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for canceling spot instance requests, including creating with optional dry-run flags and converting between XML, query, and JSON formats. Works with boolean flags, lists of spot instance request IDs, and AWS-specific data types. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 385,
      "index": 1259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateTransitGatewayRouteTableResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway route table association result, including converting between XML, JSON, and a structured type. Works with the `TransitGatewayAssociation.t` type and AWS query and JSON formats. Used to process API responses related to associating route tables with transit gateways.",
      "description_length": 337,
      "index": 1260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotPriceHistoryRequest",
      "description": "Provides functions to construct, parse, and serialize requests for retrieving spot price history data. Works with data types such as filters, availability zones, timestamps, instance types, and product descriptions. Used to generate AWS API-compatible queries and JSON representations for fetching historical spot price information.",
      "description_length": 332,
      "index": 1261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelImportTaskResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of canceling an import task, including setting the task ID, previous state, and new state. Works with string-based identifiers and structured data formats like XML, query parameters, and JSON. Used to generate HTTP query strings from task cancellation responses and to convert between XML and internal representations.",
      "description_length": 409,
      "index": 1262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateSubnetCidrBlockRequest",
      "description": "Provides operations to construct, parse, and serialize a request for disassociating a subnet CIDR block, including converting between XML, query, and JSON formats. Works with string-based association IDs and structured data types for network configuration requests. Used to generate API-compatible queries and handle JSON serialization for cloud infrastructure management tasks.",
      "description_length": 378,
      "index": 1263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTrafficMirrorFilterNetworkServicesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying network services for a traffic mirror filter. Works with `TrafficMirrorFilter.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process API responses and prepare data for HTTP requests in AWS SDK interactions.",
      "description_length": 355,
      "index": 1264,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ResetInstanceAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for resetting instance attributes, including methods to convert between XML, JSON, and query string formats. Works with specific types such as instance attribute names, boolean flags, and string identifiers. Used to generate and process API requests for modifying EC2 instance configurations.",
      "description_length": 356,
      "index": 1265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CopySnapshotResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of copying an EC2 snapshot, including setting a snapshot ID and tags. Works with AWS string types, tag lists, and JSON or query parameter formats. Used to generate API responses and process XML or JSON input from AWS services.",
      "description_length": 317,
      "index": 1266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllocateHostsResult",
      "description": "Provides operations to construct, parse, and serialize host allocation results. Works with host ID lists and AWS query/json formats. Used to generate AWS API responses and process XML input from EC2 service outputs.",
      "description_length": 215,
      "index": 1267,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorTargetRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a traffic mirror target, including converting between XML, query, and JSON formats. Works with string-based target IDs and boolean flags for dry runs. Used to generate API-compatible payloads for cloud infrastructure management tasks.",
      "description_length": 311,
      "index": 1268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AdvertiseByoipCidrRequest",
      "description": "Provides functions to construct, parse, and serialize a BYOIP CIDR advertisement request, including creating instances with a CIDR and optional dry-run flag, converting to query parameters, and encoding/decoding from JSON. Works with AWS base types such as strings and booleans, and JSON structures. Used to prepare and process requests for advertising customer-owned IP ranges in AWS.",
      "description_length": 385,
      "index": 1269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SearchTransitGatewayMulticastGroupsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for searching transit gateway multicast groups, including setting domain IDs, filters, result limits, pagination tokens, and dry-run flags. Works with AWS-specific data types such as strings, integers, booleans, and JSON structures. Used to generate query parameters for API calls and convert request data to and from JSON format.",
      "description_length": 394,
      "index": 1270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpnGatewayResult",
      "description": "Provides functions to construct, parse, and serialize a VPN gateway result structure, including converting between XML, JSON, and query parameters. Works with the VpnGateway.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process and format responses from AWS API calls related to VPN gateway creation.",
      "description_length": 335,
      "index": 1271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateCapacityReservationResult",
      "description": "Provides operations to construct, parse, and serialize a capacity reservation result, including converting between XML nodes, query parameters, and JSON representations. Works with the `CapacityReservation.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format responses from AWS API calls related to capacity reservations.",
      "description_length": 373,
      "index": 1272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLaunchTemplateVersionResult",
      "description": "Provides functions to construct, parse, and serialize a launch template version response, including handling validation warnings. Works with custom types such as LaunchTemplateVersion.t and ValidationWarning.t, and supports XML and JSON serialization. Used to generate and process AWS API responses for launch template version creation.",
      "description_length": 336,
      "index": 1273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeHostsResult",
      "description": "Provides operations to construct, parse, and serialize host information along with pagination tokens. Works with HostList.t and AWS-specific query and JSON structures. Used to process and encode responses from AWS API calls involving host listings.",
      "description_length": 248,
      "index": 1274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCustomerGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing customer gateways, including handling IDs, filters, and dry run flags. Works with custom types for customer gateway IDs, filters, and JSON/Query representations. Used to generate API-compatible request structures for cloud networking queries.",
      "description_length": 321,
      "index": 1275,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateTransitGatewayMulticastDomainResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of disassociating a transit gateway from a multicast domain. Works with a record type containing optional associations and supports XML and JSON serialization. Used to process API responses in AWS SDK interactions involving network configurations.",
      "description_length": 337,
      "index": 1276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLaunchTemplatesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS EC2 launch template results, including methods to convert between XML, JSON, and query formats. Works with `LaunchTemplateSet.t` and AWS-specific types for strings and JSON. Used to process and transmit responses from AWS API calls related to launch templates.",
      "description_length": 347,
      "index": 1277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribePrefixListsResult",
      "description": "Provides constructors and parsers for handling AWS EC2 prefix list responses, including building instances from XML nodes and serializing to query parameters or JSON. Works with AWS base string types and custom prefix list sets. Used to process and format API responses from EC2 describe-prefix-lists operations.",
      "description_length": 312,
      "index": 1278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayAttachmentPropagationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving propagation configurations of a transit gateway attachment, including handling filters, pagination, and dry-run flags. Works with AWS-specific data types such as strings, integers, booleans, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API calls to AWS EC2.",
      "description_length": 373,
      "index": 1279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayMulticastDomainRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating a transit gateway multicast domain, including handling optional parameters like tag specifications and dry run flags. Works with AWS-specific data types such as strings, boolean flags, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 373,
      "index": 1280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLocalGatewayRouteRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a route from a local gateway route table. Works with string-based identifiers and boolean flags to represent request parameters. Used to generate HTTP query strings and JSON payloads for API interactions.",
      "description_length": 281,
      "index": 1281,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTrafficMirrorSessionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing traffic mirror sessions, including handling session IDs, filters, pagination, and dry-run flags. Works with custom types such as TrafficMirrorSessionIdList, FilterList, and AWS-specific base types. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 368,
      "index": 1282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeprovisionByoipCidrResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deprovisioning a BYOIP CIDR block. Works with the `ByoipCidr.t` type and AWS query and JSON formats. Used to generate HTTP requests and process API responses in network management workflows.",
      "description_length": 284,
      "index": 1283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpnConnectionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing VPN connections, including handling filters and connection IDs. Works with custom types such as filter lists, VPN connection ID lists, and boolean flags for dry runs. Used to generate AWS API-compatible query parameters and JSON payloads for querying VPN connection details.",
      "description_length": 352,
      "index": 1284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstancePlacementResult",
      "description": "Provides a constructor for creating a result structure with an optional boolean return value, a parser for XML nodes into this structure, and conversions to query parameters, JSON associations, and from JSON. Works with boolean values and XML/JSON data formats. Used to process and serialize the outcome of modifying instance placement in cloud infrastructure systems.",
      "description_length": 368,
      "index": 1285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVolumeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying Amazon EC2 volume properties. Works with types such as volume IDs, sizes, volume types, and IOPS values. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 260,
      "index": 1286,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetDefaultCreditSpecificationResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing default credit specifications for instance families. Works with `InstanceFamilyCreditSpecification.t` and AWS query and JSON formats. Used to handle API responses and data exchange in cloud infrastructure workflows.",
      "description_length": 295,
      "index": 1287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of deleting a launch template, including conversion to query parameters, JSON, and parsing from XML. Works with the `LaunchTemplate.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API responses in AWS SDK interactions where deletion outcomes need structured representation.",
      "description_length": 408,
      "index": 1288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotFleetInstancesResponse",
      "description": "Provides functions to construct, parse, and serialize data structures representing the response from describing Spot Fleet instances, including active instance sets, pagination tokens, and request IDs. Works with types such as ActiveInstanceSet.t, Aws.BaseTypes.String.t, and Aws.Query.t. Used to process API responses from AWS EC2, enabling integration with tools that require structured data for instance management.",
      "description_length": 418,
      "index": 1289,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSnapshotAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing snapshot attributes, including setting dry-run flags. Works with snapshot IDs and attribute names represented as custom types. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 284,
      "index": 1290,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DetachClassicLinkVpcRequest",
      "description": "Provides operations to construct, parse, and serialize requests for detaching a classic link VPC, including creating with instance and VPC IDs, parsing XML nodes, and converting to query parameters or JSON. Works with AWS base types such as Boolean, String, and custom query and JSON representations. Used to generate structured API requests for cloud infrastructure management tasks.",
      "description_length": 384,
      "index": 1291,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AttachClassicLinkVpcRequest",
      "description": "Provides operations to construct, parse, and serialize requests for attaching a classic link VPC, including creating with instance ID, VPC ID, and security groups, and converting between XML, query, and JSON formats. Works with types such as boolean flags, string lists, and JSON structures. Used to generate structured API requests for cloud infrastructure management tasks.",
      "description_length": 375,
      "index": 1292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying specific attributes of an EC2 instance, including network settings, block device configurations, and instance behavior. Works with types such as boolean attributes, instance identifiers, block device mappings, and security group lists. Used to generate API-compatible query parameters and JSON payloads for updating instance configurations in AWS.",
      "description_length": 424,
      "index": 1293,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFpgaImageAttributeResult",
      "description": "Provides operations to construct, parse, and serialize FPGA image attribute data, including converting between XML nodes, query parameters, and JSON representations. Works with the FpgaImageAttribute.t type and a structured record type t. Used to process and format responses from AWS API calls related to FPGA image attributes.",
      "description_length": 328,
      "index": 1294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateSnapshotsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating EC2 instance snapshots, including setting descriptions, instance specifications, tag configurations, and dry-run flags. Works with types such as instance specifications, tag specifications, and boolean flags. Used to generate structured API requests for cloud infrastructure automation workflows.",
      "description_length": 372,
      "index": 1295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateDefaultSubnetResult",
      "description": "Provides a constructor for creating an object with an optional subnet, a parser for XML nodes, and conversions to and from query parameters and JSON. Works with the Subnet.t type and AWS-specific data structures like Query.t and Json.t. Used to process and serialize results from subnet creation operations in AWS API responses.",
      "description_length": 328,
      "index": 1296,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateTransitGatewayRouteTableRequest",
      "description": "Provides operations to construct, parse, and serialize requests for associating a transit gateway route table with an attachment, including converting between XML, query parameters, and JSON formats. Works with string identifiers for transit gateway route tables and attachments, along with a boolean flag for dry runs. Used to prepare and process API requests in AWS EC2 interactions.",
      "description_length": 385,
      "index": 1297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttachVpnGatewayRequest",
      "description": "Provides functions to construct, parse, and serialize requests for attaching a VPN gateway to a VPC, including creating instances from XML nodes, generating query parameters, and converting to and from JSON. Works with string-based identifiers for VPCs and VPN gateways, along with a boolean flag for dry runs. Used to prepare API requests for cloud infrastructure management systems.",
      "description_length": 384,
      "index": 1298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceTypeOfferingsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing instance type offerings, including handling query parameters, JSON representation, and filtering. Works with types such as boolean, integer, string, and custom data structures like filter lists and location types. Used to generate HTTP query strings and JSON payloads for API interactions with AWS EC2.",
      "description_length": 380,
      "index": 1299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteEgressOnlyInternetGatewayResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the outcome of deleting an egress-only internet gateway. Works with boolean return codes and XML or JSON data formats. Used to process API responses and generate query parameters for AWS interactions.",
      "description_length": 287,
      "index": 1300,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetSnapshotAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for resetting a snapshot attribute, including creating with a specific attribute and snapshot ID, converting to query parameters, and handling JSON serialization and deserialization. Works with custom types for snapshot attributes, string identifiers, and boolean flags. Used to prepare and process API requests for modifying snapshot access settings in AWS.",
      "description_length": 421,
      "index": 1301,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAvailabilityZonesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing availability zones, including filtering by zone names, IDs, and flags for all zones or dry runs. Works with custom types such as filter lists, zone name and ID lists, and boolean flags. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 356,
      "index": 1302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StopInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for stopping EC2 instances, including handling instance IDs, hibernate flags, dry run, and force parameters. Works with instance ID lists, boolean flags, and AWS query and JSON formats. Used to generate API-compatible requests for cloud management systems.",
      "description_length": 320,
      "index": 1303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayMulticastDomainsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of describing transit gateway multicast domains, including handling lists of domains and pagination tokens. Works with custom types such as TransitGatewayMulticastDomainList.t and AWS-specific string and query types. Used to process API responses from cloud infrastructure services, enabling structured data manipulation and integration with JSON-based workflows.",
      "description_length": 458,
      "index": 1304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayVpcAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a transit gateway VPC attachment, including converting between XML, query parameters, and JSON formats. Works with string identifiers and boolean flags to represent request parameters. Used to generate HTTP requests for AWS API interactions involving VPC attachment removal.",
      "description_length": 351,
      "index": 1305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribePrincipalIdFormatResult",
      "description": "Provides functions to construct, parse, and serialize a result containing principal ID formats and a pagination token. Works with `PrincipalIdFormatList.t` and AWS query/json structures. Used to handle API responses from services that return structured principal information with pagination.",
      "description_length": 291,
      "index": 1306,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterTransitGatewayMulticastGroupSourcesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deregistering sources from a transit gateway multicast group. Works with string identifiers, network interface lists, and boolean flags. Used to prepare API calls for removing specific network interfaces from multicast group membership in AWS infrastructure.",
      "description_length": 326,
      "index": 1307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize request parameters for querying instance details, including filtering, instance ID selection, and pagination. Works with custom types such as filter lists, instance ID strings, and boolean flags. Used to generate HTTP query strings and JSON payloads for API calls in cloud management systems.",
      "description_length": 347,
      "index": 1308,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpnGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPN gateways, including filtering by identifiers and setting dry-run flags. Works with custom types for filters, VPN gateway IDs, and boolean flags. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure management.",
      "description_length": 331,
      "index": 1309,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptVpcEndpointConnectionsResult",
      "description": "Provides functions to construct, parse, and serialize a response containing results of accepting VPC endpoint connections, including handling unsuccessful items. Works with custom types such as `UnsuccessfulItemSet.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format API responses in AWS SDK interactions.",
      "description_length": 353,
      "index": 1310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotFleetRequestsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing Spot Fleet requests, including handling dry runs, pagination, and filtering by request IDs. Works with types such as boolean flags, integers, strings, and lists of Spot Fleet request IDs. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 358,
      "index": 1311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointServicePermissionsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing permissions for VPC endpoint services, including setting allowed principals and handling pagination tokens. Works with custom types such as `AllowedPrincipalSet.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to generate HTTP requests and process XML responses in AWS API interactions.",
      "description_length": 398,
      "index": 1312,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayPrefixListReferenceRequest",
      "description": "Creates a request to associate a prefix list with a transit gateway route table, including optional parameters like attachment ID, blackhole routing, and dry run flags. Works with string and boolean types for route table IDs, prefix lists, and configuration flags. Used to generate API requests for AWS Transit Gateway configurations.",
      "description_length": 334,
      "index": 1313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeByoipCidrsResult",
      "description": "Provides operations to construct, parse, and serialize data structures containing BYOIP CIDR information and pagination tokens. Works with `ByoipCidrSet.t` and AWS-specific types for query and JSON formatting. Used to generate HTTP query parameters and JSON payloads for API interactions involving IP address ranges.",
      "description_length": 316,
      "index": 1314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCoipPoolsResult",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS EC2 CoIP pool results, including handling of pagination tokens. Works with `CoipPoolSet.t` for pool data and AWS-specific types for query and JSON formatting. Used to process API responses and prepare data for HTTP requests or JSON serialization.",
      "description_length": 326,
      "index": 1315,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotDatafeedSubscriptionResult",
      "description": "Provides operations to construct, parse, and serialize a spot datafeed subscription result, including converting between XML nodes, query parameters, and JSON representations. Works with the `SpotDatafeedSubscription.t` type and AWS-specific data structures like `Ezxmlm.nodes` and `Aws.Json.t`. Used to process and transmit AWS EC2 spot datafeed subscription responses in API interactions.",
      "description_length": 390,
      "index": 1316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RevokeSecurityGroupEgressRequest",
      "description": "Provides functions to construct, parse, and serialize requests for revoking egress rules from a security group. Works with types such as boolean, string, integer, and custom lists of IP permissions. Used to generate AWS API queries and JSON payloads for network access control adjustments.",
      "description_length": 289,
      "index": 1317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetsResult",
      "description": "Provides operations to construct, parse, and serialize results of fleet deletion actions, including building instances from success and error sets, parsing XML nodes, and converting to AWS query and JSON formats. Works with custom types representing sets of successful deletions and error details. Used to process and format responses from fleet management APIs after deletion attempts.",
      "description_length": 386,
      "index": 1318,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoresResult",
      "description": "Provides operations to construct, parse, and serialize responses related to disabling fast snapshot restores, including handling success and error sets. Works with custom types for success sets, error sets, and structured JSON data. Used to process API responses and generate query parameters for AWS interactions.",
      "description_length": 314,
      "index": 1319,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetEbsDefaultKmsKeyIdResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the default KMS key ID for EBS volumes. Works with a record type containing a string for the KMS key ID. Used to extract and format the default KMS key ID from XML responses and convert it to JSON for API interactions.",
      "description_length": 298,
      "index": 1320,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorFilterResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for deleting a traffic mirror filter, including conversion to query parameters and JSON format. Works with string-based identifiers and JSON/XML data structures. Used to generate HTTP requests and process API responses in AWS SDK interactions.",
      "description_length": 318,
      "index": 1321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesModificationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing reserved instances modifications, including handling filters, modification IDs, and pagination tokens. Works with custom types such as filter lists, modification ID lists, and AWS-specific string and query types. Used to generate HTTP query parameters and JSON payloads for API calls related to EC2 reserved instances.",
      "description_length": 397,
      "index": 1322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceTypesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing EC2 instance types, including handling dry run flags, instance type lists, filters, pagination, and query parameters. Works with custom types such as boolean flags, instance type lists, filter lists, and JSON or query-encoded representations. Used to generate structured API requests for cloud infrastructure monitoring and management tasks.",
      "description_length": 420,
      "index": 1323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNatGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a NAT gateway, including creating with optional dry-run flag, parsing XML input, and converting to query and JSON formats. Works with AWS base types for boolean and string, and internal request structure. Used to generate API-compatible payloads for AWS EC2 delete NAT gateway actions.",
      "description_length": 362,
      "index": 1324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotInstanceRequestsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing spot instance requests, including handling filters, pagination, and request IDs. Works with custom types such as filter lists, boolean flags, and JSON or query parameter representations. Used to generate API-compatible request structures for querying cloud infrastructure services.",
      "description_length": 360,
      "index": 1325,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribePlacementGroupsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing AWS EC2 placement groups, including filtering by names, IDs, and dry-run flags. Works with custom types such as filter lists, boolean flags, and string lists representing placement group identifiers. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 369,
      "index": 1326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssignIpv6AddressesRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to assign IPv6 addresses to a network interface. Works with types such as integer counts, lists of IPv6 addresses, and string-based network interface IDs. Used to generate query parameters and JSON payloads for API interactions involving IPv6 address allocation.",
      "description_length": 346,
      "index": 1327,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointServicesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC endpoint services, including handling dry run flags, service name filters, pagination, and query parameters. Works with types such as boolean flags, string lists, filter lists, and JSON structures. Used to generate HTTP queries and JSON payloads for API interactions with VPC endpoint service data.",
      "description_length": 381,
      "index": 1328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeScheduledInstancesResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing scheduled instance results, including methods to generate query parameters and JSON representations. Works with types such as strings, JSON values, and custom record types for scheduled instance sets. Used to process API responses and prepare data for HTTP requests in AWS integration scenarios.",
      "description_length": 379,
      "index": 1329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceMetadataOptionsResult",
      "description": "Provides constructors and parsers for handling AWS instance metadata options responses, including conversion to query parameters, JSON serialization, and deserialization. Works with string-based instance IDs and structured metadata option responses. Used to process and format API responses from EC2 instance metadata updates.",
      "description_length": 326,
      "index": 1330,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFlowLogsResult",
      "description": "Provides operations to construct, parse, and serialize flow log results, including creating instances with optional flow logs and pagination tokens, parsing XML nodes into structured data, and converting between JSON and query formats. Works with `FlowLogSet.t` for managing collections of flow logs and AWS-specific types for query and JSON serialization. Used to process and transmit AWS VPC flow log responses in API interactions.",
      "description_length": 433,
      "index": 1331,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcEndpointServiceConfigurationRequest",
      "description": "Provides functions to construct, parse, and serialize a request for creating a VPC endpoint service configuration, including setting parameters like dry run, acceptance required, private DNS name, and load balancer ARNs. Works with types such as boolean flags, strings, lists of strings, and JSON structures. Used to generate AWS API-compatible requests for provisioning endpoint services with specific networking and tagging configurations.",
      "description_length": 441,
      "index": 1332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeBundleTasksResult",
      "description": "Provides operations to construct, parse, and serialize bundle task results, including converting between XML nodes, query parameters, and JSON structures. Works with bundle task lists and AWS-specific data types like `Ezxmlm.nodes` and `Aws.Json.t`. Used to process and format responses from AWS EC2 bundle tasks.",
      "description_length": 313,
      "index": 1333,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceCreditSpecificationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing instance credit specifications, including conversion to query parameters, JSON, and parsing from XML. Works with custom types for instance credit specifications and string tokens for pagination. Used to process API responses from cloud infrastructure services that return detailed credit configuration data.",
      "description_length": 390,
      "index": 1334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportClientVpnClientCertificateRevocationListRequest",
      "description": "Provides operations to construct, parse, and serialize requests for revoking client certificates in a client VPN endpoint, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate API-compatible requests for certificate revocation in network configuration workflows.",
      "description_length": 374,
      "index": 1335,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSubnetsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing subnets, including filtering by subnet IDs, setting dry-run flags, and managing pagination. Works with custom types for filters, subnet ID lists, boolean flags, and pagination tokens. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 363,
      "index": 1336,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetCoipPoolUsageResult",
      "description": "Provides constructors and parsers for handling AWS EC2 COIP pool usage data, including methods to convert between XML, JSON, and query string formats. Works with string identifiers and sets of COIP address usage records. Used to process API responses and prepare data for HTTP requests in AWS integration code.",
      "description_length": 310,
      "index": 1337,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportKeyPairResult",
      "description": "Provides methods to construct, parse, and serialize objects containing key pair metadata, including fingerprint, name, ID, and tags. Works with string-based identifiers and a list of tags. Used to process and transmit key pair information from XML responses to JSON formats in AWS integration workflows.",
      "description_length": 303,
      "index": 1338,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptReservedInstancesExchangeQuoteRequest",
      "description": "Provides operations to construct, parse, and serialize requests for exchanging reserved instances, including setting dry-run flags, specifying reserved instance IDs, and defining target configurations. Works with custom types such as reserved instance ID sets and target configuration requests. Used to prepare and process exchange quote requests in AWS EC2 operations.",
      "description_length": 369,
      "index": 1339,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayRouteTableVpcAssociationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing local gateway route table VPC associations, including handling identifiers, filters, pagination, and dry-run flags. Works with sets of local gateway route table VPC association IDs, filter lists, and AWS query and JSON formats. Used to generate API requests for querying network configuration details in cloud infrastructure.",
      "description_length": 404,
      "index": 1340,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeStaleSecurityGroupsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing results of stale security group checks. Works with custom types for security group sets and AWS query/json formats. Used to process API responses and generate HTTP requests for cloud infrastructure audits.",
      "description_length": 289,
      "index": 1341,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateKeyPairRequest",
      "description": "Creates and manipulates requests for generating cryptographic key pairs, supporting AWS API serialization and deserialization. Operates on structured data including key names, boolean flags, and tag specifications. Used to construct API-compatible parameters for cloud infrastructure setup and configuration.",
      "description_length": 308,
      "index": 1342,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateAddressRequest",
      "description": "Provides operations to construct, parse, and serialize a request for disassociating an Elastic IP address, including setting association ID, public IP, and dry run flag. Works with string and boolean types from Aws.BaseTypes, and JSON and query structures for API communication. Used to generate API-compatible requests for cloud infrastructure management tasks.",
      "description_length": 362,
      "index": 1343,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSecurityGroupReferencesResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing security group references, including converting between XML, JSON, and query parameters. Works with `SecurityGroupReferences.t` and AWS-specific data types for query and JSON formatting. Used to process and transmit security group reference data in API responses.",
      "description_length": 343,
      "index": 1344,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceRouteRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to replace routes in a route table. Works with AWS-specific data types such as CIDR blocks, VPC identifiers, and gateway IDs. Used to generate API-compatible queries and JSON payloads for updating route configurations in cloud networking setups.",
      "description_length": 329,
      "index": 1345,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetConsoleOutputRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving console output, including setting instance IDs and flags for dry runs or latest outputs. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate query parameters and JSON payloads for API interactions with EC2 console output endpoints.",
      "description_length": 353,
      "index": 1346,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayRouteTableRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating a transit gateway route table, including setting the transit gateway ID, optional tag specifications, and dry run flags. Works with AWS base types, tag specifications, and JSON or query parameter formats. Used to generate API-compatible request structures for cloud networking configurations.",
      "description_length": 368,
      "index": 1347,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpnConnectionResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a VPN connection result. Works with the VpnConnection.t type and AWS-specific data structures like Ezxmlm.nodes and Aws.Json.t. Used to process API responses and generate query parameters for AWS VPN connection management.",
      "description_length": 290,
      "index": 1348,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.KeyPair",
      "description": "Provides operations to construct, parse, and serialize key pair data, including methods to convert between XML nodes, query parameters, and JSON representations. Works with string-based key fingerprints, material, names, optional IDs, and tag lists. Used to process AWS key pair responses and prepare data for API requests.",
      "description_length": 323,
      "index": 1349,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointServicePermissionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying permissions on a VPC endpoint service, including adding and removing allowed principals. Works with types such as boolean flags, strings, and lists of strings to represent request parameters. Used to update service access controls in AWS API interactions.",
      "description_length": 332,
      "index": 1350,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RestoreAddressToClassicRequest",
      "description": "Provides operations to construct, parse, and serialize a request for restoring an address to a classic instance, including converting between XML, query parameters, and JSON formats. Works with types such as boolean flags, strings, and structured data representations. Used to generate HTTP requests for cloud infrastructure management tasks.",
      "description_length": 342,
      "index": 1351,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssignPrivateIpAddressesResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of assigning private IP addresses, including parsing XML responses and converting to query and JSON formats. Works with string identifiers and lists of assigned private IP address records. Used to process API responses from cloud services when managing network interface configurations.",
      "description_length": 372,
      "index": 1352,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIdentityIdFormatRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing identity ID formats, including converting between XML nodes, query parameters, and JSON representations. Works with AWS ARN strings and optional resource identifiers. Used to prepare and process API requests in AWS SDK interactions.",
      "description_length": 311,
      "index": 1353,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcPeeringConnectionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a VPC peering connection, including converting between XML, query parameters, and JSON formats. Works with AWS base types such as Boolean and String, and represents request data as a structured record. Used to generate HTTP requests for AWS API interactions, specifically for the delete VPC peering connection action.",
      "description_length": 394,
      "index": 1354,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceEventStartTimeResult",
      "description": "Provides functions to construct, parse, and serialize an instance event start time result, working with `InstanceStatusEvent.t` and AWS query/json formats. Includes a constructor with optional event parameters, XML parsing, and conversions to and from JSON and query structures. Used to handle AWS instance status event responses in API interactions.",
      "description_length": 350,
      "index": 1355,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterTransitGatewayMulticastGroupMembersResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of registering multicast group members in a transit gateway. Works with types like TransitGatewayMulticastRegisteredGroupMembers.t and AWS query or JSON structures. Used to process API responses from cloud infrastructure services handling multicast networking.",
      "description_length": 346,
      "index": 1356,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateCustomerGatewayResult",
      "description": "Provides operations to construct, parse, and serialize a customer gateway result, including converting between XML, JSON, and query parameters. Works with the `CustomerGateway.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process API responses and prepare data for HTTP requests in AWS integration workflows.",
      "description_length": 365,
      "index": 1357,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyReservedInstancesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying reserved instances, including parsing XML nodes, generating query parameters, and converting to and from JSON. Works with a record type containing a reserved instances modification ID and other related fields. Used to process API responses from cloud service operations that alter reserved instance configurations.",
      "description_length": 417,
      "index": 1358,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayRouteTableVpcAssociationsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing local gateway route table VPC associations, including methods to convert between XML, JSON, and query parameters. Works with `LocalGatewayRouteTableVpcAssociationSet.t` and string-based tokens for pagination. Used to process API responses from cloud infrastructure services that manage network routing configurations.",
      "description_length": 401,
      "index": 1359,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLocalGatewayRouteRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to create a local gateway route. Works with string-based identifiers and boolean flags for route configuration. Used to generate API-compatible query parameters and JSON payloads for network routing setup.",
      "description_length": 289,
      "index": 1360,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIamInstanceProfileAssociationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying IAM instance profile associations, including setting association IDs, filters, pagination parameters, and converting between XML, query, and JSON formats. Works with types such as association ID lists, filters, and pagination tokens. Used to generate structured API requests for AWS IAM service interactions.",
      "description_length": 385,
      "index": 1361,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifySnapshotAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying snapshot attributes, including setting create volume permissions, specifying user groups, and defining operation types. Works with types such as snapshot IDs, permission modifications, group names, and user IDs. Used to generate AWS API-compatible queries and JSON representations for snapshot attribute updates.",
      "description_length": 389,
      "index": 1362,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVolumeResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize volume modification results. Works with XML nodes, JSON structures, and AWS query parameters. Used to process and encode responses from volume modification API calls.",
      "description_length": 234,
      "index": 1363,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReleaseAddressRequest",
      "description": "Provides operations to construct, parse, and serialize request data for releasing an Elastic IP address, including setting allocation ID, public IP, network border group, and dry run flag. Works with string, boolean, and JSON data structures. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 334,
      "index": 1364,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportSnapshotResult",
      "description": "{ description : Aws.BaseTypes.String.t option; import_task_id : Aws.BaseTypes.String.t option; snapshot_task_detail : SnapshotTaskDetail.t option; tags : TagList.t option } Handles creation, parsing, and serialization of import snapshot result data, including optional fields like description, import task ID, task details, and tags. Used to process XML responses from AWS API calls and convert them into structured data for further handling.",
      "description_length": 442,
      "index": 1365,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumesResult",
      "description": "Provides operations to construct, parse, and serialize volume result data, including converting between XML nodes, query parameters, and JSON representations. Works with volume lists and string tokens to manage pagination and data structure serialization. Used to process and format AWS volume response data for API interactions.",
      "description_length": 329,
      "index": 1366,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoresRequest",
      "description": "Provides operations to construct, parse, and serialize requests for enabling fast snapshot restores, including creating a request from availability zones and snapshot IDs, parsing XML input, and converting between query, JSON, and internal representations. Works with custom types for availability zones, snapshot IDs, and boolean flags. Used to generate structured API requests for cloud storage management systems.",
      "description_length": 416,
      "index": 1367,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnConnectionsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing client VPN connection results, including methods to convert between XML, JSON, and query formats. Works with custom types such as ClientVpnConnectionSet.t and AWS-specific string and query types. Used to process API responses from AWS, enabling structured handling of connection data in network management workflows.",
      "description_length": 399,
      "index": 1368,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetInstancesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the result of describing fleet instances, including active instances, a next token for pagination, and a fleet ID. Works with ActiveInstanceSet.t, Aws.BaseTypes.String.t, and JSON or query format representations. Used to process API responses from cloud infrastructure services that manage instance fleets.",
      "description_length": 389,
      "index": 1369,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttachNetworkInterfaceResult",
      "description": "Provides functions to construct, parse, and serialize a network interface attachment result, including setting an attachment ID and network card index. Works with a record type containing optional string and integer fields. Used to process API responses and generate query or JSON representations for AWS interactions.",
      "description_length": 318,
      "index": 1370,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorFilterRuleRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to create a traffic mirror filter rule. Works with types such as traffic direction, port ranges, CIDR blocks, and rule actions. Used to generate structured API requests for network traffic filtering configurations.",
      "description_length": 298,
      "index": 1371,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumesModificationsRequest",
      "description": "Describes volume modifications with support for filtering, pagination, and dry runs, using volume IDs, filters, and pagination tokens. Works with custom types such as volume ID lists, filter lists, and JSON/Query representations. Used to construct and serialize requests for querying EC2 volume modification details.",
      "description_length": 316,
      "index": 1372,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayRouteTablesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing local gateway route table information, including methods to convert between XML, query parameters, and JSON formats. Works with `LocalGatewayRouteTableSet.t` and standard AWS types like `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to process API responses from AWS EC2 when retrieving local gateway route table configurations.",
      "description_length": 412,
      "index": 1373,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing reserved instances, including setting filters, offering classes, instance IDs, dry run flags, and offering types. Works with custom types such as filter lists, offering class identifiers, instance ID lists, boolean flags, and offering type values. Used to generate AWS API-compatible queries and JSON payloads for querying reserved instance configurations.",
      "description_length": 434,
      "index": 1374,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcClassicLinkRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC classic link configurations, including handling filters, dry run flags, and VPC IDs. Works with custom types such as filter lists, boolean flags, and VPC ID lists. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 347,
      "index": 1375,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableVpcClassicLinkDnsSupportRequest",
      "description": "Provides operations to construct, parse, and serialize a request for enabling DNS support for VPC classic link, including converting between XML, query parameters, and JSON formats. Works with AWS VPC identifiers and structured request data. Used to prepare and process API calls for configuring network settings in AWS.",
      "description_length": 320,
      "index": 1376,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnTunnelOptionsResult",
      "description": "Provides functions to construct, parse, and serialize a VPN tunnel options result, working with VpnConnection.t and AWS query/json formats. Includes parsing from XML nodes, conversion to AWS query parameters, and encoding/decoding with JSON. Used to handle responses from AWS API calls modifying VPN tunnel configurations.",
      "description_length": 322,
      "index": 1377,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayPeeringAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of deleting a transit gateway peering attachment. Works with the `TransitGatewayPeeringAttachment.t` type and AWS query and JSON formats. Used to handle API responses in network management workflows.",
      "description_length": 285,
      "index": 1378,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeRegionsResult",
      "description": "Provides operations to construct, parse, and serialize region data structures. Works with region lists and AWS query/json formats. Used to generate AWS API requests and process XML responses containing region information.",
      "description_length": 221,
      "index": 1379,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpnConnectionRequest",
      "description": "Provides functions to construct, parse, and serialize a VPN connection request, including setting customer gateway ID, type, optional gateway IDs, dry run flag, options, and tags. Works with string, boolean, and custom types like VpnConnectionOptionsSpecification and TagSpecificationList. Used to generate AWS API-compatible query parameters and JSON payloads for creating VPN connections.",
      "description_length": 390,
      "index": 1380,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ExportImageResult",
      "description": "A module that constructs and processes objects representing the result of an image export operation, including fields like export task ID, image ID, status, and S3 export location. It works with custom types such as `DiskImageFormat.t`, `ExportTaskS3Location.t`, and `TagList.t` to encapsulate structured data. It supports parsing XML responses, generating query parameters, and serializing/deserializing to JSON for API interactions.",
      "description_length": 434,
      "index": 1381,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteClientVpnEndpointRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a client VPN endpoint, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate HTTP requests for AWS API interactions, particularly in scenarios involving VPN endpoint management.",
      "description_length": 365,
      "index": 1382,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetAssociatedIpv6PoolCidrsResult",
      "description": "Provides functions to construct, parse, and serialize data structures containing IPv6 CIDR associations and pagination tokens. Works with custom types for IPv6 CIDR associations and AWS query/json formats. Used to process responses from API calls that retrieve associated IPv6 pool CIDRs.",
      "description_length": 288,
      "index": 1383,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllocateHostsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for allocating EC2 hosts, including setting availability zones, instance types, quantities, and tags. Works with types such as availability zone strings, instance family strings, host recovery options, and tag specifications. Used to generate HTTP query parameters and JSON payloads for API calls to provision dedicated hosts in AWS.",
      "description_length": 396,
      "index": 1384,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyCapacityReservationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying capacity reservations, including setting the reservation ID, instance count, end date, end date type, and dry run flag. Works with AWS-specific data types such as strings, integers, dates, and JSON structures. Used to generate API-compatible query parameters and JSON payloads for EC2 capacity reservation updates.",
      "description_length": 391,
      "index": 1385,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateDhcpOptionsResult",
      "description": "Provides functions to construct, parse, and serialize DHCP options results, including converting between XML nodes, query parameters, and JSON representations. Works with `DhcpOptions.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle DHCP options response data in AWS API interactions, such as creating or updating VPC configurations.",
      "description_length": 389,
      "index": 1386,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ProvisionByoipCidrRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to provision a BYOIP CIDR block, including setting the CIDR, authorization context, public advertisement flag, description, dry run flag, and tag specifications. Works with types such as strings, booleans, and custom records for CIDR authorization context and tag specifications. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure provisioning workflows.",
      "description_length": 479,
      "index": 1387,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ConfirmProductInstanceResult",
      "description": "Provides operations to construct, parse, and serialize a product instance confirmation result, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing optional fields for owner ID and a boolean return value. Used to process and encode responses from AWS service interactions involving product instance validation.",
      "description_length": 377,
      "index": 1388,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayVpcAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying a transit gateway VPC attachment, including adding or removing subnet IDs and adjusting configuration options. Works with specific types such as transit gateway attachment IDs, subnet ID lists, and request options. Used to prepare API calls for updating network configurations in AWS infrastructure.",
      "description_length": 377,
      "index": 1389,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateRouteRequest",
      "description": "Constructs and manipulates route configuration requests with specific destination and target parameters, including CIDR blocks, gateway IDs, and VPC endpoints. Operates on structured data types representing network routes and AWS query/json formats. Used to generate API requests for adding routes to route tables in cloud networking setups.",
      "description_length": 341,
      "index": 1390,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisableEbsEncryptionByDefaultRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disabling EBS encryption by default, including converting between XML, query parameters, and JSON formats. Works with AWS request structures and standard OCaml data types like lists and associations. Used to generate and process API requests in AWS SDK integrations.",
      "description_length": 334,
      "index": 1391,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAddressesRequest",
      "description": "Provides functions to construct, parse, and serialize request parameters for describing EC2 addresses, including filters, public IP addresses, and allocation IDs. Works with custom types such as filter lists, public IP strings, and boolean flags for dry runs. Used to generate AWS API-compatible queries and JSON representations for address description requests.",
      "description_length": 362,
      "index": 1392,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayRouteTableResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway route table result, including conversion to query parameters and JSON format. Works with the `TransitGatewayRouteTable.t` type and AWS-specific data structures. Used to handle API responses when deleting a transit gateway route table in AWS SDK interactions.",
      "description_length": 330,
      "index": 1393,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateVpcCidrBlockResult",
      "description": "Provides operations to construct, parse, and serialize VPC CIDR block association results, including handling IPv6 and standard CIDR block associations and VPC IDs. Works with types such as VpcIpv6CidrBlockAssociation.t, VpcCidrBlockAssociation.t, and Aws.BaseTypes.String.t. Used to process and format responses from AWS API calls related to VPC network configurations.",
      "description_length": 370,
      "index": 1394,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcPeeringConnectionOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying VPC peering connection options, including setting options for both accepter and requester sides, and handling dry run flags. Works with types such as PeeringConnectionOptionsRequest.t, Boolean.t, and String.t. Used to configure and send precise API requests for updating peering connection settings in AWS.",
      "description_length": 383,
      "index": 1395,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterTransitGatewayMulticastGroupMembersRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deregistering members from a transit gateway multicast group. Works with string identifiers, network interface lists, and boolean flags. Used to prepare API calls for removing specific network interfaces from a multicast group in AWS.",
      "description_length": 302,
      "index": 1396,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DetachVolumeRequest",
      "description": "Constructs and manipulates a request to detach a volume, supporting parameters like device, force, instance ID, volume ID, and dry run. Operates on string and boolean types from the Aws.BaseTypes module. Used to generate HTTP query parameters and JSON representations for API interactions.",
      "description_length": 289,
      "index": 1397,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetManagedPrefixListAssociationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures containing managed prefix list associations, including conversion to query parameters and JSON format. Works with custom types for prefix list associations and string-based tokens. Used to process API responses from services that manage VPC prefix lists.",
      "description_length": 324,
      "index": 1398,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAddressesResult",
      "description": "Provides functions to construct, parse, and serialize address data structures, including converting between XML nodes, query parameters, and JSON representations. Works with address lists and structured JSON data containing nested associations. Used to process and format address information from AWS API responses into a usable OCaml data structure.",
      "description_length": 350,
      "index": 1399,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceTypesResult",
      "description": "Provides operations to construct, parse, and serialize instances of AWS EC2 instance type information, including handling pagination tokens. Works with `InstanceTypeInfoList.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format responses from AWS API calls querying instance types.",
      "description_length": 327,
      "index": 1400,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNatGatewayRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating a NAT gateway, including setting allocation ID, client token, dry run flag, subnet ID, and tag specifications. Works with string, boolean, and list types, as well as custom record structures for AWS query and JSON formatting. Used to generate structured API requests for cloud infrastructure provisioning.",
      "description_length": 381,
      "index": 1401,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateSubnetResult",
      "description": "Provides a constructor for creating a result structure with an optional subnet, a parser for XML nodes into the result, and conversions to AWS query parameters, JSON format, and from JSON. Works with the Subnet.t type and AWS-specific data structures for query and JSON serialization. Used to process and represent the outcome of subnet creation operations in AWS API interactions.",
      "description_length": 381,
      "index": 1402,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnRoutesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of describing client VPN routes, including handling route sets and pagination tokens. Works with custom types for client VPN routes and string-based pagination tokens. Used to process API responses from services that manage client VPN configurations.",
      "description_length": 345,
      "index": 1403,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceCapacityReservationAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying instance capacity reservation attributes, including setting instance IDs and capacity reservation specifications. Works with AWS-specific data types such as strings, booleans, and JSON structures. Used to prepare API requests for updating instance configurations in cloud environments.",
      "description_length": 363,
      "index": 1404,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ApplySecurityGroupsToClientVpnTargetNetworkResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the result of applying security groups to a Client VPN target network. Works with a record type containing optional security group IDs and XML or JSON representations of the data. Used to generate AWS API queries and handle JSON responses from operations involving Client VPN configurations.",
      "description_length": 374,
      "index": 1405,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpnConnectionsResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing VPN connection results, working with a list of VpnConnection objects and JSON or XML data formats. Includes parsing from XML nodes, conversion to AWS query parameters, and serialization to and from JSON. Used to process API responses containing detailed VPN connection information.",
      "description_length": 360,
      "index": 1406,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateSubnetCidrBlockRequest",
      "description": "Provides operations to construct, parse, and serialize a request for associating an IPv6 CIDR block with a subnet. Works with string-based identifiers for IPv6 CIDR blocks and subnet IDs. Used to generate HTTP query parameters and JSON payloads for API interactions involving subnet CIDR block associations.",
      "description_length": 307,
      "index": 1407,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetHostReservationPurchasePreviewRequest",
      "description": "Provides functions to construct, parse, and serialize a request for previewing a host reservation purchase, including converting between XML, query parameters, and JSON formats. Works with a structured type containing host ID sets and offering IDs. Used to generate and process API requests for AWS EC2 host reservation previews.",
      "description_length": 329,
      "index": 1408,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcEndpointConnectionNotificationsResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deleting VPC endpoint connection notifications, including handling unsuccessful items. Works with `UnsuccessfulItemSet.t` and AWS query and JSON formats. Used to process API responses and prepare data for HTTP requests in AWS VPC management workflows.",
      "description_length": 345,
      "index": 1409,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AcceptTransitGatewayVpcAttachmentResult",
      "description": "Provides operations to construct, parse, and serialize a transit gateway VPC attachment result, including converting between XML, JSON, and query formats. Works with the `TransitGatewayVpcAttachment.t` type and AWS query and JSON structures. Used to process API responses from actions like accepting a transit gateway VPC attachment request.",
      "description_length": 341,
      "index": 1410,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyIdentityIdFormatRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying identity ID formats, including converting between XML nodes, query parameters, and JSON representations. Works with AWS ARN strings, resource identifiers, and boolean flags to control ID formatting. Used to prepare and process API requests for AWS services that require explicit ID format specifications.",
      "description_length": 382,
      "index": 1411,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLocalGatewayRouteTableVpcAssociationResult",
      "description": "Provides functions to construct, parse, and serialize a local gateway route table VPC association object. Works with the `LocalGatewayRouteTableVpcAssociation.t` type and AWS query and JSON formats. Used to generate and process responses from AWS API calls related to VPC route table associations.",
      "description_length": 297,
      "index": 1412,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyClientVpnEndpointRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying a client VPN endpoint, including setting parameters like endpoint ID, server certificate ARN, connection log options, DNS servers, and security groups. Works with specific types such as client VPN endpoint IDs, certificate ARNs, log options, DNS server configurations, and security group sets. Used to generate API-compatible query strings, JSON payloads, and to parse XML responses from AWS services.",
      "description_length": 479,
      "index": 1413,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetPasswordDataResult",
      "description": "Encapsulates AWS EC2 instance password data with an instance ID, password string, and timestamp. Parses XML nodes into structured data, converts to query parameters, and serializes/deserializes JSON representations. Used to process and transmit EC2 password retrieval responses from API calls.",
      "description_length": 293,
      "index": 1414,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnTargetNetworksResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing client VPN target networks, including methods to convert between XML nodes, query parameters, and JSON representations. Works with `TargetNetworkSet.t` and AWS-specific types for handling network configurations. Used to process API responses and prepare data for HTTP requests in network management workflows.",
      "description_length": 392,
      "index": 1415,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayPrefixListReferenceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying a transit gateway prefix list reference, including setting the route table ID, prefix list ID, optional attachment ID, blackhole flag, and dry run flag. Works with string and boolean types, as well as AWS-specific data structures like Query and Json. Used to generate API-compatible request payloads for cloud infrastructure management tasks.",
      "description_length": 420,
      "index": 1416,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeRegionsRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for describing AWS regions, including setting filters, region names, dry run flags, and all regions flag. Works with custom types such as filter lists, region name strings, and boolean flags. Used to generate HTTP query parameters and JSON representations for API calls to AWS services.",
      "description_length": 357,
      "index": 1417,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointServicePermissionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC endpoint service permissions, including handling query parameters, JSON representation, and filtering. Works with types such as boolean, string, integer, and custom filter lists. Used to generate structured API requests for AWS VPC endpoint service configuration queries.",
      "description_length": 354,
      "index": 1418,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointServicePermissionsResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for modifying VPC endpoint service permissions, including converting between XML, query parameters, and JSON formats. Works with boolean return values and structured data representing API responses. Used to handle AWS API interactions where permission changes for VPC endpoint services need to be confirmed and formatted for transmission or logging.",
      "description_length": 424,
      "index": 1419,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifySubnetAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying subnet attributes, including settings for IPv6 address creation, public IP mapping, and customer-owned IP pools. Works with types such as AttributeBooleanValue, String, and Json to represent and manipulate subnet configuration parameters. Used to generate HTTP query parameters and JSON payloads for API interactions involving subnet attribute updates.",
      "description_length": 429,
      "index": 1420,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableFastSnapshotRestoresRequest",
      "description": "Provides functions to construct, parse, and serialize requests for disabling fast snapshot restores, working with availability zones and snapshot IDs. Operates on custom list types for availability zones and snapshot identifiers. Used to generate AWS API-compatible query parameters and JSON payloads for specific EC2 operations.",
      "description_length": 329,
      "index": 1421,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportInstanceResult",
      "description": "Provides operations to construct an instance result from a conversion task, parse XML nodes into a structured format, convert to AWS query parameters, serialize to JSON, and deserialize from JSON. Works with XML node lists, AWS query structures, and JSON values. Used to process and format import instance results for API interactions and data exchange.",
      "description_length": 353,
      "index": 1422,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterImageRequest",
      "description": "Constructs and manipulates a request for registering an EC2 image, supporting parameters like image location, architecture, block device mappings, and description. Operates on types such as strings, booleans, lists, and custom record structures. Used to generate HTTP query parameters, JSON payloads, and parse XML responses from AWS API calls.",
      "description_length": 344,
      "index": 1423,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateSecurityGroupRequest",
      "description": "{ description : Aws.BaseTypes.String.t; group_name : Aws.BaseTypes.String.t; vpc_id : Aws.BaseTypes.String.t option; tag_specifications : TagSpecificationList.t option; dry_run : Aws.BaseTypes.Boolean.t option } Provides functions to construct, parse, and serialize requests for creating AWS security groups, including setting descriptions, group names, VPC IDs, tag specifications, and dry-run flags. Works with string, option, and list types, as well as AWS-specific types like Query and Json. Used to generate API-compatible request structures for cloud infrastructure provisioning.",
      "description_length": 585,
      "index": 1424,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceEventNotificationAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize request data for describing instance event notification attributes, including handling AWS query parameters and JSON representations. Works with a structured type containing optional dry-run flags. Used to prepare and process requests for retrieving instance event notification settings in AWS EC2.",
      "description_length": 353,
      "index": 1425,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableVpcClassicLinkDnsSupportRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disabling VPC ClassicLink DNS support, including converting between XML, query parameters, and JSON formats. Works with AWS VPC identifiers and structured request data. Used to generate and process API requests for modifying VPC network configurations.",
      "description_length": 320,
      "index": 1426,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcPeeringConnectionsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing VPC peering connection results, including conversion to query parameters and JSON formats. Works with custom types for VPC peering connections and string-based tokens for pagination. Used to process API responses from cloud services that return lists of VPC peering connections and associated pagination tokens.",
      "description_length": 394,
      "index": 1427,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkAclsResult",
      "description": "Provides functions to construct, parse, and serialize network ACL results, including converting between XML, JSON, and query formats. Works with `NetworkAclList.t` and AWS-specific types for handling pagination tokens. Used to process API responses containing network ACL configurations and continuation tokens.",
      "description_length": 311,
      "index": 1428,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorTargetResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for deleting a traffic mirror target, including conversion to query parameters and JSON format. Works with string-based identifiers and JSON/XML data structures. Used to handle API responses in AWS SDK interactions where a deletion operation's result needs structured representation.",
      "description_length": 358,
      "index": 1429,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorFilterRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a traffic mirror filter, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate HTTP requests for AWS API interactions involving traffic mirror filters.",
      "description_length": 339,
      "index": 1430,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing associations between local gateway route tables and virtual interface groups. Works with custom types for associations and string-based tokens for pagination. Used to process and transmit API responses from AWS networking services.",
      "description_length": 315,
      "index": 1431,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateEnclaveCertificateIamRoleRequest",
      "description": "Provides operations to construct, parse, and serialize requests for associating an enclave certificate with an IAM role, including converting between XML, query, and JSON formats. Works with string-based ARNs and boolean flags to represent request parameters. Used to prepare and process API inputs for AWS EC2 enclave configuration tasks.",
      "description_length": 339,
      "index": 1432,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeManagedPrefixListsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing managed prefix lists, including handling dry run flags, filters, pagination, and specific prefix list IDs. Works with types such as boolean flags, filter lists, integer limits, string tokens, and string lists. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 380,
      "index": 1433,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EnableEbsEncryptionByDefaultResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of enabling EBS encryption by default. Works with boolean values and JSON/XML data formats. Used to generate API responses and handle deserialization from XML or JSON input.",
      "description_length": 264,
      "index": 1434,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseHostReservationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for purchasing EC2 host reservations, including setting client tokens, currency codes, host IDs, limit prices, offering IDs, and tag specifications. Works with types such as string, currency code values, host ID sets, and tag specifications. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2 reservation services.",
      "description_length": 414,
      "index": 1435,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelConversionRequest",
      "description": "Provides operations to construct, parse, and serialize a cancellation request for a conversion task, including parsing XML nodes, generating query parameters, and converting to and from JSON. Works with string-based identifiers, boolean flags, and structured JSON data. Used to generate API requests for canceling specific conversion tasks with optional reasons and dry-run flags.",
      "description_length": 380,
      "index": 1436,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateClientVpnTargetNetworkRequest",
      "description": "Provides functions to construct, parse, and serialize requests for associating a target network with a Client VPN endpoint, including setting client token and dry run flags. Works with string-based identifiers and JSON/XML data structures. Used to prepare API requests for AWS Client VPN operations, such as linking a subnet to an endpoint.",
      "description_length": 340,
      "index": 1437,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AttachInternetGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for attaching an internet gateway to a VPC, including creating a request from XML nodes, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS base types for boolean, string, and custom request structures. Used to generate structured API calls for cloud infrastructure management tasks.",
      "description_length": 396,
      "index": 1438,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetHistoryRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving fleet history data, including setting parameters like fleet ID, start time, event type, and pagination tokens. Works with types such as boolean, integer, string, and datetime to represent request configurations. Used to generate HTTP query parameters and JSON payloads for API interactions with fleet history endpoints.",
      "description_length": 398,
      "index": 1439,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing fleets, including setting parameters like dry run, max results, pagination tokens, fleet IDs, and filters. Works with types such as boolean, integer, string, set of fleet IDs, and list of filters. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 354,
      "index": 1440,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLaunchTemplatesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing EC2 launch templates, including setting dry-run flags, template IDs, names, filters, pagination tokens, and result limits. Works with AWS-specific types such as boolean flags, string lists, and JSON structures. Used to generate API-compatible queries and JSON payloads for AWS EC2 describe-launch-templates calls.",
      "description_length": 392,
      "index": 1441,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotFleetRequestsResponse",
      "description": "Provides functions to construct, parse, and serialize responses for canceling Spot Fleet requests, including handling successful and unsuccessful request sets. Operates with custom types representing sets of successful and error responses, and JSON or query parameter structures. Used to process API responses from cloud infrastructure services when managing Spot Fleet operations.",
      "description_length": 381,
      "index": 1442,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateSnapshotRequest",
      "description": "Creates a snapshot from a specified EBS volume, supporting optional description, tag specifications, and dry run flags. Operates on string-based volume IDs and tag specifications, and converts between XML, query, and JSON formats. Used to generate API requests for snapshot creation in AWS EC2.",
      "description_length": 294,
      "index": 1443,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAccountAttributesResult",
      "description": "Provides functions to construct, parse, and serialize account attribute data, including converting between XML nodes, query parameters, and JSON structures. Works with account attribute lists and JSON associations. Used to process and format AWS account attribute responses in API interactions.",
      "description_length": 294,
      "index": 1444,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayPeeringAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of creating a transit gateway peering attachment. Works with the `TransitGatewayPeeringAttachment.t` type and AWS query and JSON formats. Used to process API responses and prepare data for HTTP requests in networking workflows.",
      "description_length": 313,
      "index": 1445,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceRouteTableAssociationResult",
      "description": "Provides constructors and parsers for handling AWS route table association results, including creating instances with optional association IDs and states. Works with string and custom state types to represent network configuration changes. Used to process API responses and generate query or JSON representations for network routing updates.",
      "description_length": 341,
      "index": 1446,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetCapacityReservationUsageRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving capacity reservation usage, including setting the reservation ID, pagination tokens, result limits, and dry-run flags. Works with AWS-specific data types such as strings, integers, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2 capacity reservations.",
      "description_length": 390,
      "index": 1447,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumeStatusRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing volume status, including handling filters, result limits, pagination tokens, and volume IDs. Works with custom types such as filter lists, integer limits, string tokens, volume ID lists, and boolean flags. Used to generate HTTP queries and JSON representations for API interactions with volume status information.",
      "description_length": 391,
      "index": 1448,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAggregateIdFormatRequest",
      "description": "Provides operations to construct, parse, and serialize a request structure for describing an aggregate ID format, including converting between XML, query, and JSON representations. Works with a record type containing optional dry-run flags and other request-specific parameters. Used to process incoming XML data from API requests and prepare structured outputs for further processing or transmission.",
      "description_length": 401,
      "index": 1449,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetAssociatedIpv6PoolCidrsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving associated IPv6 pool CIDRs, including setting pool IDs, pagination tokens, result limits, and dry-run flags. Works with AWS-specific data types such as strings, integers, and JSON structures. Used to generate query parameters for API calls and to convert request data into JSON format for transmission.",
      "description_length": 381,
      "index": 1450,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetEbsDefaultKmsKeyIdRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving the default KMS key ID for EBS volumes, including converting between XML, query parameters, and JSON formats. Works with AWS request structures and JSON-encoded data. Used to generate and process API requests in AWS SDK interactions.",
      "description_length": 312,
      "index": 1451,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLocalGatewayRouteResult",
      "description": "Provides operations to construct, parse, and serialize a local gateway route result, including converting between XML, query parameters, and JSON formats. Works with the `LocalGatewayRoute.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit route configuration responses in AWS API interactions.",
      "description_length": 367,
      "index": 1452,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTagsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting tags from AWS resources. Works with types such as boolean flags, resource ID lists, and tag lists. Used to generate HTTP query parameters and JSON payloads for AWS API interactions.",
      "description_length": 258,
      "index": 1453,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterInstanceEventNotificationAttributesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deregistering instance event notification attributes, including handling dry run flags and instance tag attributes. Works with boolean flags, custom request types for instance tags, and AWS query and JSON formats. Used to prepare and process API calls for modifying instance event notifications in cloud infrastructure workflows.",
      "description_length": 396,
      "index": 1454,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcPeeringConnectionOptionsResult",
      "description": "Provides functions to construct, parse, and serialize VPC peering connection options, including building instances with specified options and converting between XML, query, and JSON formats. Works with `PeeringConnectionOptions.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit VPC peering configuration updates in AWS API interactions.",
      "description_length": 405,
      "index": 1455,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportClientVpnClientCertificateRevocationListRequest",
      "description": "Provides operations to construct, parse, and serialize requests for uploading a client certificate revocation list to a client VPN endpoint. Works with string-based identifiers and JSON/XML data structures. Used to manage certificate revocation lists in AWS client VPN configurations.",
      "description_length": 284,
      "index": 1456,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTrafficMirrorFilterNetworkServicesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying network services in a traffic mirror filter, including adding or removing specified services and setting a dry-run flag. Works with types such as string, boolean, and custom lists of traffic mirror network services. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure management tasks.",
      "description_length": 402,
      "index": 1457,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcPeeringConnectionRequest",
      "description": "Constructs and manipulates a request to create a VPC peering connection, supporting parameters like VPC IDs, peer owner ID, region, and tags. Operates on types such as boolean, string, and custom lists for tag specifications. Used to generate API-compatible queries and JSON representations for cloud infrastructure setup.",
      "description_length": 322,
      "index": 1458,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPCs, including setting filters, VPC IDs, dry run flags, pagination tokens, and result limits. Works with custom types such as filter lists, VPC ID strings, and JSON structures. Used to generate AWS API-compatible queries and handle JSON input for VPC description workflows.",
      "description_length": 353,
      "index": 1459,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SendDiagnosticInterruptRequest",
      "description": "Provides operations to construct, parse, and serialize a request for sending a diagnostic interrupt, including creating with an instance ID and optional dry run flag, converting to query parameters, and encoding/decoding from JSON. Works with AWS instance identifiers and structured request data. Used to generate and process diagnostic interrupt commands in cloud infrastructure management workflows.",
      "description_length": 401,
      "index": 1460,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RevokeClientVpnIngressResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of revoking client VPN ingress rules. Works with a record type containing a status field of type ClientVpnAuthorizationRuleStatus.t. Used to generate HTTP query parameters and JSON representations for API responses.",
      "description_length": 305,
      "index": 1461,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorFilterRuleResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for deleting a traffic mirror filter rule, working with strings and JSON/Query data formats. Includes parsing from XML nodes and conversion to AWS query parameters and JSON objects. Used to handle API responses in AWS SDK interactions involving network filtering rules.",
      "description_length": 344,
      "index": 1462,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcClassicLinkDnsSupportRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying VPC classic link DNS support, including handling pagination and VPC identifiers. Works with types such as integers, strings, and lists of VPC classic link IDs. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 328,
      "index": 1463,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyDefaultCreditSpecificationResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing modified default credit specifications for EC2 instances. Works with `InstanceFamilyCreditSpecification.t` and AWS query and JSON formats. Used to handle responses from API calls that update instance credit settings, enabling integration with AWS SDKs for instance configuration management.",
      "description_length": 369,
      "index": 1464,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.BundleInstanceRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for bundle instance actions, including creating instances with specified storage configurations and handling XML and JSON representations. Works with types such as instance IDs, storage configurations, and boolean flags for dry runs. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 383,
      "index": 1465,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a transit gateway, including converting between XML, JSON, and query parameters. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate API-compatible request payloads for AWS EC2 operations.",
      "description_length": 308,
      "index": 1466,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportInstanceRequest",
      "description": "Provides operations to construct, parse, and serialize import instance requests, including setting platform, description, disk images, and launch specifications. Works with types such as strings, boolean flags, lists of disk images, and platform values. Used to generate AWS API-compatible query parameters and JSON payloads for importing EC2 instances.",
      "description_length": 353,
      "index": 1467,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportVolumeRequest",
      "description": "Provides operations to construct, parse, and serialize import volume request data, including creating instances from parameters like availability zone, image, and volume details, and converting between XML, query, and JSON formats. Works with types such as `DiskImageDetail.t`, `VolumeDetail.t`, and AWS-specific string and boolean wrappers. Used to generate API-compatible requests for importing volumes into cloud infrastructure.",
      "description_length": 431,
      "index": 1468,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceStatusRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing instance status, including filtering, instance ID selection, and pagination controls. Works with custom types such as filter lists, instance ID strings, and boolean flags. Used to generate HTTP query parameters and JSON payloads for API interactions with instance status information.",
      "description_length": 362,
      "index": 1469,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyClientVpnEndpointResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of modifying a client VPN endpoint, including converting between XML, query parameters, and JSON formats. Works with a record type containing a boolean flag indicating success or failure. Used to handle API responses in AWS SDK interactions, enabling structured data processing and transmission.",
      "description_length": 386,
      "index": 1470,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelImportTaskRequest",
      "description": "Provides operations to construct, parse, and serialize requests for canceling import tasks, including setting a cancellation reason, enabling dry run mode, and specifying the import task ID. Works with string and boolean types for request parameters and uses XML and JSON formats for parsing and serialization. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 389,
      "index": 1471,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointsResult",
      "description": "Provides operations to construct, parse, and serialize VPC endpoint results, including converting between XML, JSON, and query formats. Works with VpcEndpointSet.t and AWS-specific types for handling API responses. Used to process and transmit VPC endpoint data from AWS API calls.",
      "description_length": 281,
      "index": 1472,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClassicLinkInstancesResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of describing classic link instances. Works with a record type containing a list of classic link instances and an optional pagination token. Used to process API responses and prepare data for HTTP queries or JSON serialization.",
      "description_length": 318,
      "index": 1473,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetHostReservationPurchasePreviewResult",
      "description": "Provides functions to construct, parse, and serialize data related to EC2 host reservation purchase previews, including currency code, purchase details, and pricing information. Works with custom types such as CurrencyCodeValues.t, PurchaseSet.t, and AWS-specific string and JSON representations. Used to generate query parameters and JSON payloads for API interactions involving host reservation previews.",
      "description_length": 406,
      "index": 1474,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayAttachmentsResult",
      "description": "Provides functions to construct, parse, and serialize objects containing a list of transit gateway attachments and a pagination token. Works with `TransitGatewayAttachmentList.t` and AWS query and JSON formats. Used to process API responses from services managing virtual private cloud connections.",
      "description_length": 298,
      "index": 1475,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying a transit gateway, including setting the gateway ID, description, options, and dry-run flag. Works with AWS-specific types such as strings, booleans, and custom options structures. Used to generate API-compatible query parameters and JSON payloads for AWS EC2 transit gateway modifications.",
      "description_length": 367,
      "index": 1476,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateInternetGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for creating an internet gateway, including handling tag specifications and dry run flags. Works with custom types for AWS query parameters, JSON structures, and XML nodes. Used to generate structured API requests for cloud infrastructure setup.",
      "description_length": 309,
      "index": 1477,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImageAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing image attributes, including setting the image ID and attribute name. Works with custom types for image attribute names and AWS string identifiers. Used to generate query parameters and JSON representations for API interactions.",
      "description_length": 306,
      "index": 1478,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnConnectionRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to modify a VPN connection, including setting identifiers for transit gateways, customer gateways, and VPN gateways, as well as specifying a dry run flag. Works with string and boolean types from the Aws.BaseTypes module and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS VPN services.",
      "description_length": 426,
      "index": 1479,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnTunnelCertificateResult",
      "description": "Provides functions to construct, parse, and serialize a VPN tunnel certificate modification result. Works with VpnConnection.t and AWS query/json formats. Used to handle responses from AWS API calls modifying VPN tunnel certificates.",
      "description_length": 233,
      "index": 1480,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSnapshotsResult",
      "description": "Provides operations to construct, parse, and serialize a result containing a list of snapshots and a pagination token. Works with `SnapshotList.t` and AWS-specific types for query and JSON formatting. Used to process API responses from snapshot-related services, enabling structured data handling and interoperability with AWS tools.",
      "description_length": 333,
      "index": 1481,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetEbsEncryptionByDefaultResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the default EBS encryption setting, including converting between XML, query parameters, and JSON formats. Works with boolean values and structured data types for AWS EBS configuration. Used to process API responses and generate query strings for AWS service interactions.",
      "description_length": 351,
      "index": 1482,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateIamInstanceProfileResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing an IAM instance profile association, including conversion to and from JSON and query parameters. Works with the `IamInstanceProfileAssociation.t` type and AWS-specific data structures. Used to process API responses from AWS EC2 when associating instance profiles with instances.",
      "description_length": 357,
      "index": 1483,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.EnableVolumeIORequest",
      "description": "Creates a request to enable volume I/O with a specified volume ID and optional dry run flag. Operates on AWS query and JSON formats for request serialization and parsing. Used to generate and interpret API requests for volume I/O operations in cloud storage systems.",
      "description_length": 266,
      "index": 1484,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorFilterRequest",
      "description": "{ description : Aws.BaseTypes.String.t option; tag_specifications : TagSpecificationList.t option; dry_run : Aws.BaseTypes.Boolean.t option; client_token : Aws.BaseTypes.String.t option } Provides operations to construct, parse, and serialize request objects for creating a traffic mirror filter, including setting descriptions, tag specifications, dry run flags, and client tokens. Works with AWS-specific types such as strings, boolean flags, and lists of tag specifications. Used to generate structured API requests for AWS VPC traffic mirroring configurations.",
      "description_length": 564,
      "index": 1485,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayMulticastDomainsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing AWS Transit Gateway multicast domains, including handling identifiers, filters, pagination, and dry-run flags. Works with custom types such as TransitGatewayMulticastDomainIdStringList, FilterList, and AWS-specific base types. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 397,
      "index": 1486,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayMulticastDomainResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway multicast domain result, including conversion to query parameters and JSON format. Works with the TransitGatewayMulticastDomain.t type and AWS-specific data structures. Used to process API responses from Amazon EC2 when creating a multicast domain.",
      "description_length": 320,
      "index": 1487,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseScheduledInstancesResult",
      "description": "Provides functions to construct, parse, and serialize a structured representation of scheduled instance purchases, including converting between XML nodes, query parameters, and JSON formats. Works with a record type containing a set of purchased scheduled instances. Used to process API responses and prepare data for HTTP requests in cloud infrastructure interactions.",
      "description_length": 369,
      "index": 1488,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFleetResult",
      "description": "Provides operations to construct, parse, and serialize a structured result containing fleet identifiers, errors, and instance data. Works with custom types for fleet IDs, error sets, instance sets, and JSON/Query representations. Used to process and encode responses from fleet creation operations in AWS interactions.",
      "description_length": 318,
      "index": 1489,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateCarrierGatewayResult",
      "description": "Provides a constructor for building results with an optional carrier gateway, a parser for XML nodes, and conversions to and from query parameters and JSON structures. Works with XML nodes, AWS query parameters, and JSON values to represent and manipulate carrier gateway creation outcomes. Used to process and serialize responses from AWS API calls related to carrier gateway setup.",
      "description_length": 383,
      "index": 1490,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateSnapshotsResult",
      "description": "Provides operations to construct, parse, and serialize a result containing snapshot data. Works with `SnapshotSet.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate query parameters from a snapshot result and convert between XML and JSON representations for API interactions.",
      "description_length": 331,
      "index": 1491,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTrafficMirrorTargetsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing traffic mirror target results, including creating instances with optional targets and pagination tokens. Works with `TrafficMirrorTargetSet.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses and prepare data for HTTP requests or JSON serialization.",
      "description_length": 373,
      "index": 1492,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkInterfaceAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing network interface attributes, including setting the attribute, dry run flag, and network interface ID. Works with types such as NetworkInterfaceAttribute.t, Boolean.t, and String.t. Used to generate AWS API-compatible queries and JSON payloads for network interface configuration checks.",
      "description_length": 366,
      "index": 1493,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableVpcClassicLinkDnsSupportResult",
      "description": "Provides operations to construct, parse, and serialize a result indicating the status of VPC ClassicLink DNS support, including converting between XML, query parameters, and JSON formats. Works with boolean values and structured data representing AWS API responses. Used to process and transmit API responses in networked applications interacting with AWS services.",
      "description_length": 365,
      "index": 1494,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTrafficMirrorFilterRuleRequest",
      "description": "Creates and manipulates requests to modify specific traffic mirror filter rules, supporting operations like updating rule actions, port ranges, and CIDR blocks. Works with types such as traffic direction, port ranges, and rule fields. Used to construct API requests for modifying network traffic monitoring configurations in AWS.",
      "description_length": 329,
      "index": 1495,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayRouteRequest",
      "description": "Provides functions to construct, parse, and serialize a request for creating a transit gateway route, including setting destination CIDR blocks, route table IDs, and optional parameters like attachment IDs, blackhole flags, and dry run indicators. Works with string, boolean, and JSON data types, as well as XML nodes for parsing. Used to generate API-compatible queries and JSON payloads for cloud networking configurations.",
      "description_length": 425,
      "index": 1496,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateClientVpnEndpointResult",
      "description": "Provides functions to construct, parse, and serialize a client VPN endpoint result, including creating an instance with optional fields, parsing XML nodes, and converting to query parameters or JSON. Works with string identifiers, status objects, and JSON structures. Used to process API responses and prepare data for network configuration tasks.",
      "description_length": 347,
      "index": 1497,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.StartVpcEndpointServicePrivateDnsVerificationResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of verifying private DNS for a VPC endpoint service. Works with boolean values and JSON or query-encoded data formats. Used to process API responses from AWS services during DNS verification workflows.",
      "description_length": 292,
      "index": 1498,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcEndpointResult",
      "description": "Provides functions to construct, parse, and serialize a VPC endpoint result structure. Works with AWS VPC endpoint data and JSON/Query formats. Used to generate HTTP requests and process API responses in network service integrations.",
      "description_length": 233,
      "index": 1499,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeMovingAddressesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing moving Elastic IP addresses, including handling filters, pagination, and dry-run flags. Works with custom types such as filter lists, boolean flags, integer limits, string tokens, and string lists. Used to generate AWS API-compatible query parameters and JSON payloads for network address tracking.",
      "description_length": 376,
      "index": 1500,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MoveAddressToVpcRequest",
      "description": "Provides functions to construct, parse, and serialize a request for moving an elastic IP to a VPC, including creating with optional dry run and public IP, parsing XML nodes, and converting to query parameters or JSON. Works with boolean and string types for configuration and data representation. Used to prepare and process AWS EC2 move address requests in API interactions.",
      "description_length": 375,
      "index": 1501,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumesModificationsResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing volume modifications, including a list of volume modifications and a pagination token. Works with `VolumeModificationList.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Query.t`. Used to process and transmit volume change data from AWS API responses in a structured format.",
      "description_length": 370,
      "index": 1502,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterTransitGatewayMulticastGroupSourcesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for registering sources in a transit gateway multicast group, including setting the multicast domain ID, group IP address, network interface IDs, and dry run flag. Works with string, boolean, and list types, as well as AWS-specific data structures like TransitGatewayNetworkInterfaceIdList. Used to configure API calls for network traffic management in cloud environments.",
      "description_length": 435,
      "index": 1503,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ResetEbsDefaultKmsKeyIdResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of resetting an EBS default KMS key ID, including converting between XML, query, and JSON formats. Works with string-based identifiers and structured data types for AWS API interactions. Used to handle API responses in AWS SDK workflows, particularly for EBS key management operations.",
      "description_length": 376,
      "index": 1504,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetImageAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for resetting specific image attributes. Works with custom types for image attributes, image IDs, and boolean flags. Used to generate AWS API-compatible query parameters and JSON payloads for image attribute modifications.",
      "description_length": 285,
      "index": 1505,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptVpcEndpointConnectionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for accepting VPC endpoint connections, including creating a request with a service ID and list of endpoint IDs, parsing XML input, and converting between query, JSON, and internal representations. Works with types such as boolean, string, and custom lists for VPC endpoint identifiers. Used to integrate with AWS API workflows for managing VPC endpoint approvals.",
      "description_length": 427,
      "index": 1506,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteManagedPrefixListRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a managed prefix list, including converting between XML, query parameters, and JSON formats. Works with boolean flags, string identifiers, and structured data types. Used to generate API-compatible requests for cloud infrastructure management systems.",
      "description_length": 328,
      "index": 1507,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SearchTransitGatewayRoutesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for searching routes in a transit gateway, including building with specific route table IDs and filters, and converting between XML, query, and JSON formats. Works with AWS-specific types such as strings, integers, booleans, and structured filter lists. Used to generate API-compatible request payloads for querying network route configurations in cloud infrastructure.",
      "description_length": 432,
      "index": 1508,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelCapacityReservationResult",
      "description": "Provides operations to construct, parse, and serialize a response structure for canceling a capacity reservation, including converting between XML, query, and JSON formats. Works with boolean return values and structured data types for AWS API interactions. Used to process and encode API responses in network communication and data exchange scenarios.",
      "description_length": 352,
      "index": 1509,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CopySnapshotRequest",
      "description": "Creates and manipulates a request to copy an EC2 snapshot, including parameters like source and destination regions, encryption settings, and tags. Works with string, boolean, and list types, as well as AWS-specific types like `TagSpecificationList`. Used to generate API requests for cloud infrastructure automation and snapshot management.",
      "description_length": 341,
      "index": 1510,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateDhcpOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize DHCP options requests, including creating a request from configuration lists, tags, and a dry run flag. Operates on custom types such as DHCP configuration lists, tag specifications, and boolean flags. Used to generate AWS API-compatible query parameters and JSON representations for DHCP options setup.",
      "description_length": 357,
      "index": 1511,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UpdateSecurityGroupRuleDescriptionsIngressResult",
      "description": "Provides functions to construct, parse, and serialize a result structure representing the outcome of updating ingress rule descriptions in a security group. Works with boolean return values and XML or JSON data formats. Used to handle API responses in AWS-related workflows where ingress rule descriptions are modified.",
      "description_length": 319,
      "index": 1512,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for querying VPC attribute details. Works with VpcAttributeName.t and Aws.BaseTypes.String.t to represent VPC attributes and identifiers. Used to generate AWS API-compatible queries and JSON payloads for retrieving specific VPC configurations.",
      "description_length": 306,
      "index": 1513,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetConsoleScreenshotResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of capturing a console screenshot from an EC2 instance. Works with string-based image data and instance identifiers, and supports XML parsing, query string generation, and JSON serialization. Used to process API responses from cloud infrastructure services that return screenshot metadata.",
      "description_length": 380,
      "index": 1514,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkInterfacesResult",
      "description": "Provides functions to construct, parse, and serialize network interface results, including converting between XML, JSON, and query formats. Works with `NetworkInterfaceList.t` and AWS-specific types for handling API responses. Used to process and transmit network interface data from AWS API calls.",
      "description_length": 298,
      "index": 1515,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcRequest",
      "description": "Provides functions to construct, parse, and serialize VPC creation requests, including handling CIDR blocks, IPv6 configurations, and tags. Works with types such as string, boolean, and custom records for VPC parameters. Used to generate AWS API-compatible request structures for creating virtual private clouds.",
      "description_length": 312,
      "index": 1516,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointConnectionNotificationsResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing VPC endpoint connection notifications, including handling a set of connection notifications and a pagination token. Works with custom types such as ConnectionNotificationSet.t and AWS-specific string and query types. Used to process and format responses from AWS API calls related to VPC endpoint notifications.",
      "description_length": 390,
      "index": 1517,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetFpgaImageAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for resetting FPGA image attributes, including setting dry-run flags and specifying attributes. Works with AWS base types such as boolean, string, and custom attribute names. Used to generate query parameters and JSON payloads for API interactions with FPGA image configurations.",
      "description_length": 343,
      "index": 1518,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteManagedPrefixListResult",
      "description": "Provides functions to construct, parse, and serialize a managed prefix list result, including conversion to and from JSON and query parameters. Works with the `ManagedPrefixList.t` type and AWS-specific data structures. Used to handle API responses for deleting managed prefix lists in network configurations.",
      "description_length": 309,
      "index": 1519,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnConnectionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing client VPN connections, including handling filters, pagination, and dry-run flags. Works with AWS-specific types such as strings, integers, boolean flags, and JSON structures. Used to generate query parameters for API calls and to convert between XML and JSON representations of the request.",
      "description_length": 369,
      "index": 1520,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateImageResult",
      "description": "Creates a structured result containing an optional image ID, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to process and format responses from image creation operations in AWS APIs.",
      "description_length": 310,
      "index": 1521,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkAclRequest",
      "description": "Provides functions to construct, parse, and serialize network ACL request data, including setting VPC ID, dry run flags, and tag specifications. Works with AWS base types and JSON structures for request formatting. Used to generate structured API requests for creating network ACLs in AWS EC2.",
      "description_length": 293,
      "index": 1522,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CopyImageRequest",
      "description": "Provides operations to construct, parse, and serialize image copy requests with specific parameters like client token, description, encryption settings, and source details. Works with string, boolean, and JSON data types to represent and exchange request configurations. Used to generate AWS API-compatible queries and JSON payloads for copying machine images across regions.",
      "description_length": 375,
      "index": 1523,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RejectTransitGatewayVpcAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for rejecting a transit gateway VPC attachment, working with `TransitGatewayVpcAttachment.t` and JSON or query formats. Includes parsing from XML nodes and conversion to AWS query parameters or JSON objects. Used to handle API responses in network configuration workflows.",
      "description_length": 347,
      "index": 1524,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteCarrierGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a carrier gateway, including converting between XML, query, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate API-compatible request payloads and parse incoming XML responses in AWS SDK interactions.",
      "description_length": 339,
      "index": 1525,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkInterfaceAttributeResult",
      "description": "Provides operations to construct, parse, and serialize objects representing the result of describing a network interface attribute, including attachment details, description, security groups, interface ID, and source/destination check status. Works with types such as NetworkInterfaceAttachment.t, AttributeValue.t, GroupIdentifierList.t, and AttributeBooleanValue.t. Used to process API responses from AWS EC2 when retrieving network interface configurations.",
      "description_length": 460,
      "index": 1526,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesResult",
      "description": "Provides functions to construct, parse, and serialize data related to reserved instances, including converting between XML, JSON, and a structured record type. Works with a record type containing a list of reserved instances and supports parsing from XML nodes and generating AWS query parameters. Used to process API responses that include details about reserved compute instances.",
      "description_length": 382,
      "index": 1527,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSecurityGroupReferencesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing security group references, including converting between XML, query, and JSON formats. Works with types such as Boolean, GroupIds, and custom request structures. Used to generate structured API calls for cloud infrastructure management tasks.",
      "description_length": 320,
      "index": 1528,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNatGatewayResult",
      "description": "Provides constructors and parsers for handling AWS NAT gateway creation results, including conversion to and from JSON and query parameters. Works with custom types representing client tokens and NAT gateway objects. Used to process API responses and prepare data for network configuration tasks.",
      "description_length": 296,
      "index": 1529,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribePrincipalIdFormatRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing principal ID formats, including setting dry-run flags, resource lists, result limits, and pagination tokens. Works with types such as boolean, integer, string, and custom resource lists. Used to generate HTTP queries and JSON payloads for API interactions involving identity and resource filtering.",
      "description_length": 377,
      "index": 1530,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayPeeringAttachmentsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing results from describing transit gateway peering attachments. Works with custom types for transit gateway peering attachments and string tokens for pagination. Used to convert XML responses from API calls into structured data and generate query parameters for subsequent requests.",
      "description_length": 362,
      "index": 1531,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptTransitGatewayPeeringAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for accepting a transit gateway peering attachment, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate and process API requests in interactions with AWS networking services.",
      "description_length": 351,
      "index": 1532,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelSpotInstanceRequestsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of canceling spot instance requests, including converting between XML, JSON, and query parameters. Works with a record type containing a list of canceled spot instance request details. Used to process API responses from cloud services when managing EC2 spot instances.",
      "description_length": 363,
      "index": 1533,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateSpotDatafeedSubscriptionResult",
      "description": "Provides a constructor for creating an object from a spot datafeed subscription, a parser for XML nodes, and conversions to and from query parameters and JSON. Works with XML nodes, JSON values, and AWS query structures. Used to process and serialize responses from AWS API calls related to spot datafeed subscriptions.",
      "description_length": 319,
      "index": 1534,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayRouteRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a route from a transit gateway route table, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers and CIDR blocks, along with boolean flags for dry runs. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 376,
      "index": 1535,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointServiceConfigurationsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing VPC endpoint service configurations, including handling service configuration sets and pagination tokens. Works with custom types such as ServiceConfigurationSet.t and AWS-specific string and query types. Used to process and transmit AWS API responses related to VPC endpoint services.",
      "description_length": 369,
      "index": 1536,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateFpgaImageRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating an FPGA image, including setting storage locations, descriptions, names, and tags. Works with types such as `StorageLocation.t`, `TagSpecificationList.t`, and `Aws.Json.t`. Used to generate AWS API-compatible query parameters and JSON payloads for image creation workflows.",
      "description_length": 349,
      "index": 1537,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeBundleTasksRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing bundle tasks, including setting bundle IDs, filters, and dry-run flags. Works with custom types such as BundleIdStringList, FilterList, and Boolean for structured request handling. Used to generate AWS API-compatible query parameters and JSON payloads for bundle task descriptions.",
      "description_length": 360,
      "index": 1538,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeConversionTasksResult",
      "description": "Provides operations to construct, parse, and serialize a result containing conversion tasks, including converting to and from JSON and query parameters. Works with a record type containing a list of conversion tasks and supports XML parsing. Used to handle API responses and requests involving task descriptions in cloud infrastructure workflows.",
      "description_length": 346,
      "index": 1539,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayRouteTablesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing local gateway route tables, including handling identifiers, filters, pagination, and dry-run flags. Works with custom types such as LocalGatewayRouteTableIdSet, FilterList, and AWS-specific base types for integers and strings. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 397,
      "index": 1540,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateDefaultVpcRequest",
      "description": "Creates a request to establish a default VPC with optional dry-run flag. Operates on AWS query and JSON formats, parsing and serializing request data. Used to generate and interpret API requests for VPC setup in cloud infrastructure workflows.",
      "description_length": 243,
      "index": 1541,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayVpcAttachmentsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing results from describing transit gateway VPC attachments, including handling lists of attachments and pagination tokens. Works with custom types for transit gateway VPC attachments and string-based pagination tokens. Used to process API responses and prepare data for HTTP queries or JSON serialization.",
      "description_length": 385,
      "index": 1542,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateInstanceExportTaskRequest",
      "description": "Provides functions to construct, parse, and serialize a request for exporting an instance, including setting a description, specifying S3 export details, instance ID, target environment, and tag specifications. Works with types such as strings, S3 task specifications, environment identifiers, and tag lists. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 387,
      "index": 1543,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetReservedInstancesExchangeQuoteResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of a Reserved Instances exchange quote, including currency details, expiration timestamps, payment information, and value summaries. Works with types such as datetime, boolean, string, and custom records for reservation values. Used to process and format API responses from cloud infrastructure services.",
      "description_length": 395,
      "index": 1544,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SearchTransitGatewayRoutesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of searching transit gateway routes, including route lists and availability flags. Works with custom types for transit gateway routes and boolean indicators. Used to process API responses from cloud infrastructure services, enabling route data extraction and query parameter generation.",
      "description_length": 381,
      "index": 1545,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateSecurityGroupResult",
      "description": "Provides functions to construct, parse, and serialize a security group result, including creating an instance with a group ID and optional tags, parsing XML nodes into the structure, and converting between JSON and query formats. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `TagList.t`. Used to process and represent the outcome of a security group creation in AWS API interactions.",
      "description_length": 405,
      "index": 1546,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotFleetRequestHistoryResponse",
      "description": "Provides functions to construct, parse, and serialize objects containing historical data about Spot Fleet requests, including filtering by time ranges and pagination tokens. Works with data types such as datetime, strings, and custom record structures representing fleet history. Used to process API responses for auditing or monitoring changes in Spot Fleet configurations over time.",
      "description_length": 384,
      "index": 1547,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelReservedInstancesListingRequest",
      "description": "Provides operations to construct, parse, and serialize requests for canceling reserved instances listings, including converting between XML, JSON, and query parameters. Works with string-based reserved instances listing IDs and structured data types for request representation. Used to generate HTTP requests for AWS API interactions and process incoming XML responses.",
      "description_length": 369,
      "index": 1548,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFpgaImagesResult",
      "description": "Provides functions to construct, parse, and serialize FPGA image results, including converting between XML, query parameters, and JSON formats. Works with `FpgaImageList.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses containing FPGA image metadata and pagination tokens.",
      "description_length": 316,
      "index": 1549,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSnapshotsRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for describing EC2 snapshots, including setting filters, pagination parameters, and ownership criteria. Works with types such as filter lists, string lists, and boolean flags to configure query parameters. Used to generate HTTP queries and JSON representations for API calls to retrieve snapshot metadata.",
      "description_length": 376,
      "index": 1550,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyAvailabilityZoneGroupRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying an availability zone group's opt-in status, including creating instances with a specified group name and opt-in status, and converting between XML, query, and JSON formats. Works with string-based group names, boolean dry-run flags, and custom opt-in status types. Used to configure cloud infrastructure settings through structured request objects.",
      "description_length": 425,
      "index": 1551,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceMetadataOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying instance metadata options, including setting HTTP tokens, response hop limits, endpoint state, and dry-run flags. Works with AWS-specific types such as strings, integers, booleans, and custom state enums. Used to generate API-compatible query parameters and JSON payloads for EC2 instance configuration updates.",
      "description_length": 388,
      "index": 1552,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceNetworkAclEntryRequest",
      "description": "Provides functions to construct, parse, and serialize requests for replacing network ACL entries in AWS, including setting parameters like CIDR blocks, port ranges, and ICMP types. Works with types such as Boolean, String, Integer, and custom types like IcmpTypeCode, PortRange, and RuleAction. Used to generate HTTP query parameters and JSON payloads for API interactions with Amazon VPC.",
      "description_length": 389,
      "index": 1553,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnassignIpv6AddressesResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of unassigning IPv6 addresses. Works with AWS-specific types such as string, list of IPv6 addresses, and JSON structures. Used to process API responses and generate query parameters for AWS network interface management.",
      "description_length": 305,
      "index": 1554,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFlowLogsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing flow logs, including setting dry run flags, filters, log IDs, result limits, and pagination tokens. Works with custom types such as boolean flags, lists of filters and flow log IDs, integers, and strings. Used to generate HTTP query parameters and JSON payloads for API interactions, and to parse XML responses into request structures.",
      "description_length": 414,
      "index": 1555,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableFastSnapshotRestoresResult",
      "description": "Provides operations to construct, parse, and serialize responses related to enabling fast snapshot restores, including handling success and error sets. Works with custom types for success and error sets, as well as XML and JSON data formats. Used to process API responses from cloud infrastructure services that manage snapshot restoration configurations.",
      "description_length": 355,
      "index": 1556,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssignPrivateIpAddressesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for assigning private IP addresses to a network interface. Works with boolean flags, string identifiers, and lists of private IP addresses. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 282,
      "index": 1557,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableTransitGatewayRouteTablePropagationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for enabling route table propagation in a transit gateway, including converting between XML, query parameters, and JSON formats. Works with string identifiers for transit gateway route tables and attachments, along with a boolean flag for dry runs. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 406,
      "index": 1558,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RunScheduledInstancesResult",
      "description": "Provides operations to construct, parse, and serialize a structured result containing instance IDs from scheduled instance runs. Works with `InstanceIdSet.t` and AWS-specific query and JSON formats. Used to process and encode responses from EC2 instance scheduling APIs.",
      "description_length": 270,
      "index": 1559,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeStaleSecurityGroupsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing stale security groups, including setting dry run flags, limiting results, and handling pagination. Works with AWS-specific data types such as Boolean, Integer, String, and JSON structures. Used to generate HTTP queries and JSON payloads for API interactions with AWS EC2.",
      "description_length": 350,
      "index": 1560,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeRouteTablesResult",
      "description": "Provides functions to construct, parse, and serialize route table results, including converting between XML, JSON, and query parameters. Works with route table lists and string tokens for pagination. Used to process API responses containing network routing configurations.",
      "description_length": 272,
      "index": 1561,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotDatafeedSubscriptionRequest",
      "description": "Provides operations to construct, parse, and serialize a request for subscribing to a spot data feed, including creating a request with optional dry-run flag, parsing XML nodes into the request structure, and converting between query, JSON, and internal representations. Works with AWS base types, XML nodes, and JSON values. Used to generate and process subscription requests for real-time spot instance data in cloud infrastructure management workflows.",
      "description_length": 455,
      "index": 1562,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSnapshotAttributeResult",
      "description": "Provides functions to construct, parse, and serialize objects representing snapshot attribute results, including creation permissions and product codes. Works with types such as CreateVolumePermissionList, ProductCodeList, and Aws.BaseTypes.String. Used to process and transmit snapshot metadata in AWS API interactions.",
      "description_length": 320,
      "index": 1563,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.WithdrawByoipCidrResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of withdrawing a BYOIP CIDR block. Works with the `ByoipCidr.t` type and AWS query and JSON formats. Used to handle API responses in network management workflows.",
      "description_length": 253,
      "index": 1564,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway deletion result, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with the `TransitGateway.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle responses from AWS API calls that delete a transit gateway, enabling structured data processing and integration with AWS SDKs.",
      "description_length": 433,
      "index": 1565,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateSubnetCidrBlockResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of disassociating a subnet's CIDR block, including handling IPv6 associations and subnet IDs. Works with types such as SubnetIpv6CidrBlockAssociation.t and AWS-specific string and query structures. Used to process API responses and generate JSON or query parameters for network configuration updates.",
      "description_length": 386,
      "index": 1566,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointConnectionNotificationResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying a VPC endpoint connection notification. Works with boolean values and AWS-specific data types for query and JSON formatting. Used to handle API responses in AWS SDK interactions, particularly for VPC endpoint configuration updates.",
      "description_length": 334,
      "index": 1567,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for associating local gateway route table virtual interface groups, including setting IDs, filters, pagination parameters, and dry-run flags. Works with custom types such as sets of association IDs, filter lists, and JSON/Query representations. Used to generate API-compatible request structures for cloud networking configurations.",
      "description_length": 396,
      "index": 1568,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReleaseHostsResult",
      "description": "Provides operations to construct, parse, and serialize a result structure containing lists of successfully and unsuccessfully processed hosts. Works with custom types for host IDs and error items, as well as AWS query and JSON formats. Used to handle responses from host management APIs, enabling structured data exchange and validation.",
      "description_length": 337,
      "index": 1569,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableVpcClassicLinkResult",
      "description": "Provides operations to construct, parse, and serialize a result indicating whether VPC classic link is enabled, working with boolean values and AWS query/json formats. Includes parsing from XML nodes, converting to query parameters, and serializing/deserializing from JSON. Used to process API responses from AWS EC2 when checking VPC classic link status.",
      "description_length": 355,
      "index": 1570,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateDefaultSubnetRequest",
      "description": "Creates a request to define a default subnet with a specified availability zone and optional dry run flag. Operates on AWS query and JSON formats, and parses XML nodes into structured requests. Used to generate and serialize subnet configuration data for API interactions.",
      "description_length": 272,
      "index": 1571,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkInterfacePermissionRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating network interface permissions, including setting the network interface ID, permission type, and optional AWS account or service. Works with types such as strings, booleans, and custom record structures representing permission configurations. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure management tasks.",
      "description_length": 427,
      "index": 1572,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseReservedInstancesOfferingResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of reserving an EC2 instance offering. Works with a record type containing a reserved instances ID and methods to convert between XML, query parameters, and JSON formats. Used to process API responses from AWS EC2 when reserving instances.",
      "description_length": 329,
      "index": 1573,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying VPC attributes, including DNS hostnames and support. Works with AWS-specific types such as `AttributeBooleanValue.t` and `Aws.BaseTypes.String.t`. Used to generate HTTP query parameters and JSON payloads for API interactions with VPC configuration settings.",
      "description_length": 334,
      "index": 1574,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RejectVpcPeeringConnectionResult",
      "description": "Provides operations to construct, parse, and serialize a VPC peering connection rejection result, including converting between XML, JSON, and query formats. Works with a record type containing a boolean return value. Used to handle API responses in AWS SDK interactions where VPC peering connections are explicitly rejected.",
      "description_length": 324,
      "index": 1575,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIamInstanceProfileAssociationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS IAM instance profile associations, including methods to convert between XML, JSON, and query parameters. Works with `IamInstanceProfileAssociationSet.t` and AWS-specific type aliases for strings and JSON. Used to process API responses from AWS EC2, extracting and formatting association details for further processing or logging.",
      "description_length": 416,
      "index": 1576,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointResult",
      "description": "Provides operations to construct, parse, and serialize a VPC endpoint modification result, including converting between XML, query parameters, and JSON formats. Works with a record type containing a boolean flag indicating success or failure. Used to process API responses and prepare data for HTTP requests in AWS SDK interactions.",
      "description_length": 332,
      "index": 1577,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.TerminateInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for terminating EC2 instances, working with instance ID lists and boolean flags. Supports converting between XML node structures, query parameters, and JSON representations. Used to generate structured API calls for cloud instance management workflows.",
      "description_length": 316,
      "index": 1578,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateRouteResult",
      "description": "Provides operations to construct, parse, and serialize route creation results, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional boolean return values. Used to handle AWS API responses for route creation in network configurations.",
      "description_length": 313,
      "index": 1579,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcEndpointsResult",
      "description": "Provides functions to construct, parse, and serialize a response structure containing information about failed VPC endpoint deletions. Works with a record type containing an optional set of unsuccessful items and a list of VPC endpoint identifiers. Used to process API responses from AWS services when deleting multiple VPC endpoints, allowing extraction and representation of failure details.",
      "description_length": 393,
      "index": 1580,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLaunchTemplateVersionsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing launch template versions, including conversion to query parameters and JSON format. Works with `LaunchTemplateVersionSet.t` and AWS-specific string and JSON types. Used to process API responses containing versioned launch templates from AWS EC2.",
      "description_length": 328,
      "index": 1581,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCarrierGatewaysResult",
      "description": "Provides operations to construct, parse, and serialize objects containing carrier gateway data and pagination tokens. Works with `CarrierGatewaySet.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses from AWS EC2, extracting and formatting gateway information for further handling.",
      "description_length": 322,
      "index": 1582,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetGroupsForCapacityReservationResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing groups associated with capacity reservations, including handling pagination tokens and group sets. Works with custom types for capacity reservation groups and AWS query/json formats. Used to process API responses and prepare data for network transmission or storage.",
      "description_length": 350,
      "index": 1583,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreatePlacementGroupResult",
      "description": "Provides a constructor for creating an object from a placement group, a parser for XML nodes, and conversions to query parameters, JSON, and from JSON. Works with the PlacementGroup.t type and AWS-specific data structures. Used to process and serialize results from creating a placement group in AWS API interactions.",
      "description_length": 317,
      "index": 1584,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcEndpointRequest",
      "description": "Creates and manipulates requests for establishing a VPC endpoint, including setting parameters like VPC ID, service name, route tables, subnets, and security groups. Operates on types such as VPC endpoint IDs, service names, and JSON-based configurations. Used to generate AWS API-compatible queries and JSON payloads for VPC endpoint creation.",
      "description_length": 344,
      "index": 1585,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteDhcpOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deleting DHCP options, including creating with a specific ID and optional dry-run flag, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate and process API requests in AWS EC2 operations.",
      "description_length": 382,
      "index": 1586,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptTransitGatewayPeeringAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway peering attachment result, including conversion to and from JSON and query parameters. Works with the `TransitGatewayPeeringAttachment.t` type and AWS-specific data structures. Used to process API responses from actions like accepting a peering request in a VPC environment.",
      "description_length": 346,
      "index": 1587,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointConnectionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC endpoint connections, including handling filters, pagination, and dry-run flags. Works with custom types such as boolean flags, integer limits, string tokens, and filter lists. Used to generate HTTP query parameters and JSON payloads for API interactions with VPC endpoint connection data.",
      "description_length": 372,
      "index": 1588,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayPeeringAttachmentsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing transit gateway peering attachments, including handling identifiers, filters, pagination, and dry-run flags. Works with custom types such as transit gateway attachment ID lists, filter lists, and AWS-specific data structures. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 396,
      "index": 1589,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.SearchTransitGatewayMulticastGroupsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing results from searching transit gateway multicast groups, including handling a list of multicast groups and a pagination token. Works with custom types for transit gateway multicast group lists and AWS query and JSON formats. Used to process API responses and prepare data for HTTP requests or JSON serialization.",
      "description_length": 395,
      "index": 1590,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeScheduledInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing scheduled EC2 instances, including handling filters, pagination, and time ranges. Works with types such as boolean flags, integer limits, string tokens, instance ID sets, and time range structures. Used to generate HTTP queries and JSON payloads for API interactions with AWS EC2.",
      "description_length": 359,
      "index": 1591,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteSecurityGroupRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a security group, including setting group ID, name, and dry run flags. Works with string and boolean types, as well as XML and JSON data structures. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure management.",
      "description_length": 329,
      "index": 1592,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayVirtualInterfacesResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing results of describing local gateway virtual interfaces, including handling sets of virtual interfaces and pagination tokens. Works with custom types such as LocalGatewayVirtualInterfaceSet.t and AWS-specific string and query types. Used to process API responses from AWS services, enabling structured data manipulation and JSON serialization.",
      "description_length": 426,
      "index": 1593,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteEgressOnlyInternetGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting an egress-only internet gateway, including converting between XML, query parameters, and JSON formats. Works with boolean flags and string identifiers representing gateway resources. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 353,
      "index": 1594,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RunInstancesRequest",
      "description": "Constructs and serializes AWS EC2 run instances requests with detailed configuration for instance types, networking, storage, and metadata. Operates on types like block device mappings, instance types, security groups, and network interfaces. Used to generate API-compatible request structures for launching EC2 instances with custom settings.",
      "description_length": 343,
      "index": 1595,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.StartInstancesResult",
      "description": "Provides functions to construct, parse, and serialize a result structure containing instance state changes, including creating an instance list, parsing XML nodes, generating query parameters, and converting to and from JSON format. Works with `InstanceStateChangeList.t` and AWS-specific data types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit the outcome of starting EC2 instances in AWS API interactions.",
      "description_length": 445,
      "index": 1596,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayVirtualInterfaceGroupsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing local gateway virtual interface groups, including conversion to query parameters and JSON format. Works with `LocalGatewayVirtualInterfaceGroupSet.t` and AWS-specific types for strings and JSON. Used to process API responses from AWS EC2 when retrieving details about virtual interface groups associated with a local gateway.",
      "description_length": 408,
      "index": 1597,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayVpcAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of creating a transit gateway VPC attachment. Works with the `TransitGatewayVpcAttachment.t` type and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 280,
      "index": 1598,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImagesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing EC2 images, including setting executable users, filters, image IDs, owners, and dry-run flags. Works with custom types such as ExecutableByStringList, FilterList, ImageIdStringList, OwnerStringList, and Boolean. Used to generate AWS API-compatible query parameters and JSON payloads for image description operations.",
      "description_length": 394,
      "index": 1599,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceNetworkAclAssociationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for replacing a network ACL association, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers for associations and network ACLs, and internal request structures. Used to generate API-compatible requests for cloud infrastructure management tasks.",
      "description_length": 362,
      "index": 1600,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateEnclaveCertificateIamRoleResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing the result of associating an enclave certificate with an IAM role. Works with string-based data types for S3 bucket names, object keys, and KMS keys. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 312,
      "index": 1601,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC endpoints, including setting dry run flags, filtering, pagination, and specifying endpoint IDs. Works with types such as boolean flags, lists of endpoint IDs, filters, and pagination tokens. Used to generate HTTP queries and JSON payloads for API interactions with VPC endpoint data.",
      "description_length": 366,
      "index": 1602,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcPeeringConnectionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC peering connections, including handling filters, dry run flags, connection IDs, pagination tokens, and result limits. Works with specific data types such as filter lists, boolean flags, connection ID lists, strings, and integers. Used to generate HTTP query parameters and JSON payloads for API calls, and to parse XML responses into request structures.",
      "description_length": 436,
      "index": 1603,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateTransitGatewayRouteTableResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway route table disassociation result, including conversion to and from JSON and query parameters. Works with the `TransitGatewayAssociation.t` type and AWS-specific data structures. Used to handle API responses in network configuration workflows.",
      "description_length": 315,
      "index": 1604,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeMovingAddressesResult",
      "description": "Provides functions to construct, parse, and serialize data structures containing moving address statuses and pagination tokens. Works with sets of moving address statuses and string-based tokens. Used to process XML responses from AWS API calls and generate query or JSON representations for API requests.",
      "description_length": 305,
      "index": 1605,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeExportTasksRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for exporting tasks, including creating instances with optional task IDs and filters, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with custom types such as ExportTaskIdStringList, FilterList, and Aws.Query. Used to generate HTTP requests for task export operations in AWS SDK interactions.",
      "description_length": 431,
      "index": 1606,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesOfferingsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for filtering Reserved Instances offerings, including setting parameters like availability zone, instance type, and duration ranges. Works with types such as instance types, filters, and offering classes to refine query results. Used to generate API-compatible queries for AWS EC2 Reserved Instances.",
      "description_length": 364,
      "index": 1607,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcPeeringConnectionResult",
      "description": "Provides operations to construct, parse, and serialize VPC peering connection results, including converting between XML, JSON, and query formats. Works with the VpcPeeringConnection.t type and AWS-specific data structures. Used to process and transmit VPC peering connection metadata in API responses and requests.",
      "description_length": 314,
      "index": 1608,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateLaunchTemplateVersionRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating a new version of an EC2 launch template, including setting parameters like dry run flag, client token, template ID or name, source version, version description, and launch template data. Works with types such as boolean, string, and a structured data type for launch template configuration. Used to generate HTTP query parameters, JSON payloads, and to reconstruct request objects from XML or JSON input.",
      "description_length": 480,
      "index": 1609,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkAclsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing network ACLs, including handling filters, dry runs, and pagination parameters. Works with custom types such as filter lists, boolean flags, network ACL ID lists, and pagination tokens. Used to generate HTTP query parameters and JSON payloads for API calls to describe AWS network access control lists.",
      "description_length": 380,
      "index": 1610,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTrafficMirrorSessionsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of describing traffic mirror sessions, including handling session sets and pagination tokens. Works with custom types such as TrafficMirrorSessionSet.t and AWS-specific string and query types. Used to process API responses from AWS EC2 when retrieving details about configured traffic mirror sessions.",
      "description_length": 396,
      "index": 1611,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyHostsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying EC2 host configurations, including setting auto-placement, host recovery, instance type, and instance family. Works with custom types for host IDs, auto placement, host recovery, and string values. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 366,
      "index": 1612,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RevokeClientVpnIngressRequest",
      "description": "Provides functions to construct, parse, and serialize requests for revoking client VPN ingress rules, including setting the client VPN endpoint ID, target network CIDR, access group ID, and flags for revoking all groups or performing a dry run. Works with string, boolean, and JSON data types to represent and manipulate the request parameters. Used to generate HTTP query parameters and JSON payloads for API interactions with client VPN services.",
      "description_length": 448,
      "index": 1613,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnEndpointsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing Client VPN endpoints, including handling pagination, filters, and dry-run flags. Works with types such as ClientVpnEndpointIdList, FilterList, and AWS query and JSON representations. Used to generate HTTP requests for AWS API calls that retrieve details about configured Client VPN endpoints.",
      "description_length": 370,
      "index": 1614,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorSessionRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deleting a traffic mirror session, including converting between XML, query, and JSON formats. Works with AWS-specific types such as session IDs and boolean flags. Used to generate API-compatible requests for AWS EC2 operations.",
      "description_length": 294,
      "index": 1615,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayVpcAttachmentsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing transit gateway VPC attachments, including handling attachment IDs, filters, pagination, and dry run flags. Works with custom types such as TransitGatewayAttachmentIdStringList, FilterList, and AWS-specific base types for integers and strings. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 413,
      "index": 1616,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyCapacityReservationResult",
      "description": "Provides operations to construct, parse, and serialize a capacity reservation result, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a boolean return value. Used to handle AWS API responses for modifying capacity reservations.",
      "description_length": 299,
      "index": 1617,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyNetworkInterfaceAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying network interface attributes, including attachment changes, description, security groups, and source/destination checks. Works with types such as NetworkInterfaceAttachmentChanges.t, AttributeValue.t, SecurityGroupIdStringList.t, and AttributeBooleanValue.t. Used to generate AWS API-compatible queries and JSON payloads for network interface configuration updates.",
      "description_length": 443,
      "index": 1618,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVolumeRequest",
      "description": "Provides functions to construct, parse, and serialize volume creation requests with specific parameters like availability zone, size, encryption, and volume type. Works with types such as strings, integers, booleans, and custom records for AWS volume configurations. Used to generate HTTP query parameters and JSON payloads for API interactions when provisioning new volumes.",
      "description_length": 375,
      "index": 1619,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribePublicIpv4PoolsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying public IPv4 pools, including setting pool IDs, pagination tokens, result limits, and filters. Works with custom types such as pool ID lists, string tokens, integer limits, and filter lists. Used to generate AWS API-compatible query parameters and JSON payloads for pool information retrieval.",
      "description_length": 369,
      "index": 1620,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableVpcClassicLinkRequest",
      "description": "Provides functions to construct, parse, and serialize requests for enabling ClassicLink on a VPC, including converting between XML, query parameters, and JSON formats. Works with VPC identifiers and boolean flags for dry runs. Used to generate API-compatible request structures for cloud infrastructure management.",
      "description_length": 314,
      "index": 1621,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteClientVpnEndpointResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of deleting a Client VPN endpoint, including converting between XML, JSON, and query parameters. Works with types such as ClientVpnEndpointStatus.t and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process API responses and prepare data for HTTP requests in AWS SDK interactions.",
      "description_length": 393,
      "index": 1622,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateEnclaveCertificateIamRoleResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of disassociating an IAM role from an enclave certificate. Works with a record type containing a boolean flag indicating success or failure. Used to handle API responses in AWS SDK interactions, enabling conversion between XML, query, and JSON formats.",
      "description_length": 343,
      "index": 1623,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateRouteTableRequest",
      "description": "Provides functions to construct, parse, and serialize a request to disassociate a route table from a subnet, using an association ID and an optional dry run flag. Works with AWS-specific data types such as strings, booleans, and JSON structures. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 337,
      "index": 1624,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AdvertiseByoipCidrResult",
      "description": "Provides operations to construct, parse, and serialize a BYOIP CIDR result, including converting between XML nodes, query parameters, and JSON representations. Works with the ByoipCidr.t type and AWS-specific data structures like Query.t and Json.t. Used to handle responses from AWS API calls involving bring-your-own IP CIDR blocks.",
      "description_length": 334,
      "index": 1625,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayRouteTableResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway route table result, including conversion to query parameters and JSON format. Works with the `TransitGatewayRouteTable.t` type and AWS-specific data structures. Used to handle API responses when creating a transit gateway route table in AWS SDK interactions.",
      "description_length": 330,
      "index": 1626,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIpv6PoolsResult",
      "description": "Provides operations to construct, parse, and serialize data structures containing IPv6 pools and pagination tokens. Works with `Ipv6PoolSet.t` and AWS-specific string and query types. Used to process and transmit results from IPv6 pool listings in API responses.",
      "description_length": 262,
      "index": 1627,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFpgaImageResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the outcome of deleting an FPGA image. Works with boolean return values and XML or JSON data formats. Used to process API responses and generate query parameters for AWS FPGA management tasks.",
      "description_length": 279,
      "index": 1628,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateCarrierGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for creating a carrier gateway, including setting VPC ID, tag specifications, dry run flags, and client tokens. Works with AWS-specific types such as string, boolean, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 330,
      "index": 1629,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetFpgaImageAttributeResult",
      "description": "Provides operations to construct, parse, and serialize an FPGA image attribute result, including converting between XML, query parameters, and JSON formats. Works with boolean values and structured data representing FPGA image attributes. Used to handle AWS API responses for modifying FPGA image properties.",
      "description_length": 308,
      "index": 1630,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateRequest",
      "description": "Provides operations to construct, parse, and serialize request objects for deleting an EC2 launch template, including setting dry run flags and specifying either a template ID or name. Works with boolean and string types to represent request parameters. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 345,
      "index": 1631,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UnassignIpv6AddressesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for unassigning IPv6 addresses, including converting between XML, JSON, and query string formats. Works with `Ipv6AddressList.t` and string-based network interface identifiers. Used to generate HTTP request payloads and parse incoming XML data in AWS API interactions.",
      "description_length": 331,
      "index": 1632,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayMulticastDomainAssociationsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for retrieving associations of a transit gateway multicast domain, including handling filters, pagination, and dry-run flags. Works with string, integer, boolean, and structured filter list types. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 351,
      "index": 1633,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateVersionsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing the results of deleting EC2 launch template versions, including success and error sets. Works with custom types for success and error sets, as well as JSON and query format representations. Used to process API responses from EC2 service operations involving template version deletions.",
      "description_length": 369,
      "index": 1634,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeKeyPairsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing key pairs, including filtering by names, IDs, and dry-run flags. Works with custom types such as filter lists, key name lists, key pair ID lists, and boolean flags. Used to generate AWS API-compatible query parameters and JSON payloads for querying key pair information.",
      "description_length": 349,
      "index": 1635,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterTransitGatewayMulticastGroupSourcesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of registering multicast group sources with a transit gateway. Works with types such as `TransitGatewayMulticastRegisteredGroupSources.t` and AWS-specific query and JSON formats. Used to process API responses from AWS EC2 when adding sources to a multicast group.",
      "description_length": 353,
      "index": 1636,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UpdateSecurityGroupRuleDescriptionsEgressRequest",
      "description": "Provides operations to construct, parse, and serialize requests for updating egress security group rule descriptions, including setting dry-run flags, specifying group identifiers, and defining IP permissions. Works with types such as boolean flags, string identifiers, and lists of IP permission structures. Used to generate HTTP query parameters and JSON payloads for API interactions with cloud security group management systems.",
      "description_length": 432,
      "index": 1637,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotInstancesResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of requesting spot instances, including converting between XML, JSON, and query parameters. Works with a record type containing a list of spot instance request details. Used to process API responses and prepare data for HTTP requests in cloud infrastructure interactions.",
      "description_length": 357,
      "index": 1638,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTransitGatewayRoutesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for exporting transit gateway routes, including handling filters, S3 buckets, and dry run flags. Works with string identifiers, filter lists, and JSON/XML data structures. Used to generate API-compatible queries and JSON payloads for cloud infrastructure management tasks.",
      "description_length": 335,
      "index": 1639,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesListingsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying reserved instances listings, including filtering by specific identifiers. Works with custom types for filters, string-based identifiers, and AWS query and JSON formats. Used to generate structured API requests for AWS EC2 reserved instances data.",
      "description_length": 323,
      "index": 1640,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.MoveAddressToVpcResult",
      "description": "Provides functions to construct, parse, and serialize a result structure containing an allocation ID and a status, working with AWS XML and JSON formats. Operates on a record type with fields for an optional allocation ID and status. Used to process and encode responses from VPC-related API calls, such as moving an elastic IP address.",
      "description_length": 336,
      "index": 1641,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteRouteRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deleting routes from a route table, supporting IPv4, IPv6, and prefix list destinations. Works with string-based identifiers and boolean flags to specify route parameters. Used to generate AWS API-compatible query and JSON payloads for route deletion operations.",
      "description_length": 329,
      "index": 1642,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteQueuedReservedInstancesResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of deleting queued reserved instances, including successful and failed deletions. Works with custom types for sets of successful and failed queued purchase deletions. Used to process API responses and generate query parameters or JSON payloads for AWS interactions.",
      "description_length": 360,
      "index": 1643,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetLaunchTemplateDataResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS EC2 launch template configurations. Works with XML nodes, JSON values, and query parameters for API interactions. Used to convert raw API responses into structured data for further processing or inspection.",
      "description_length": 293,
      "index": 1644,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a VPC, including creating with a VPC ID and optional dry run flag, parsing XML input, and converting to query parameters or JSON format. Works with AWS base types for strings and booleans, and internal request structures. Used to generate API-compatible requests for VPC deletion in cloud management workflows.",
      "description_length": 387,
      "index": 1645,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateTransitGatewayMulticastDomainResult",
      "description": "Provides functions to construct, parse, and serialize data related to associating resources with a transit gateway multicast domain. Works with structured data types including associations and JSON representations. Used to generate AWS API queries and handle JSON responses from transit gateway operations.",
      "description_length": 306,
      "index": 1646,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNetworkInterfacePermissionResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deleting a network interface permission. Works with a record type containing a boolean flag indicating success. Used to generate HTTP query parameters, JSON representations, and parse XML responses from AWS API calls.",
      "description_length": 311,
      "index": 1647,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelExportTaskRequest",
      "description": "Provides operations to construct, parse, and serialize a request for canceling an export task, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing an export task ID. Used to generate HTTP requests for terminating specific data export processes in AWS services.",
      "description_length": 332,
      "index": 1648,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayMulticastDomainRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a transit gateway multicast domain, including converting between XML, JSON, and query parameters. Works with string identifiers and boolean flags to represent request attributes. Used to generate API-compatible payloads for cloud infrastructure management tasks.",
      "description_length": 339,
      "index": 1649,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeExportTasksResult",
      "description": "Provides operations to construct, parse, and serialize a result structure containing exported task lists. Works with `ExportTaskList.t` and AWS query/json formats. Used to generate AWS API responses and handle XML parsing for task export data.",
      "description_length": 243,
      "index": 1650,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnmonitorInstancesResult",
      "description": "Provides functions to construct, parse, and serialize instances of monitored resources, including creating from a list of instance monitorings, parsing XML nodes, and converting to and from query and JSON formats. Works with instance monitoring data structures and AWS-specific types. Used to process and transmit results from instance monitoring operations in cloud management systems.",
      "description_length": 386,
      "index": 1651,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayRouteResult",
      "description": "Provides operations to construct, parse, and serialize transit gateway route results, including converting between XML, JSON, and internal representations. Works with `TransitGatewayRoute.t` and AWS-specific query and JSON structures. Used to process API responses for creating routes in a transit gateway.",
      "description_length": 306,
      "index": 1652,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnAuthorizationRulesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for authorizing client VPN rules, including setting endpoint IDs, dry-run flags, pagination tokens, filters, and result limits. Works with AWS-specific data types such as strings, booleans, integers, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with client VPN authorization configurations.",
      "description_length": 407,
      "index": 1653,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSecurityGroupsResult",
      "description": "Provides operations to construct, parse, and serialize objects containing security group data and pagination tokens. Works with custom types for security group lists and AWS query/json formats. Used to process API responses from EC2 describing security groups.",
      "description_length": 260,
      "index": 1654,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLocalGatewayRouteTableVpcAssociationResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of deleting a local gateway route table VPC association, including conversion to query parameters and JSON format. Works with the `LocalGatewayRouteTableVpcAssociation.t` type and AWS-specific data structures. Used to handle API responses in AWS SDK interactions involving route table associations.",
      "description_length": 388,
      "index": 1655,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnConnectionOptionsRequest",
      "description": "Provides methods to construct, parse, and serialize objects representing requests to modify VPN connection options, including setting network CIDRs and dry-run flags. Works with string and boolean types for configuration parameters and XML or JSON data formats. Used to generate API-compatible query parameters or JSON payloads for updating VPN settings in cloud infrastructure.",
      "description_length": 378,
      "index": 1656,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteSubnetRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a subnet, including creating with a subnet ID and optional dry run flag, parsing XML input, and converting to query parameters or JSON format. Works with AWS base types for strings and booleans, and JSON structures. Used to generate structured API calls for subnet deletion in cloud infrastructure management.",
      "description_length": 386,
      "index": 1657,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorTargetResult",
      "description": "Provides functions to construct, parse, and serialize a response structure for creating a traffic mirror target, including conversion to query parameters and JSON format. Works with the `TrafficMirrorTarget.t` type and AWS-specific string and JSON types. Used to generate and process API responses in AWS SDK interactions.",
      "description_length": 322,
      "index": 1658,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointServicesResult",
      "description": "Provides functions to construct, parse, and serialize data structures containing VPC endpoint service information, including service names, details, and pagination tokens. Works with custom types such as string lists, service detail sets, and JSON or query parameters. Used to process API responses from AWS services that return endpoint service configurations.",
      "description_length": 361,
      "index": 1659,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayVpcAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize a response structure containing a transit gateway VPC attachment. Works with the `TransitGatewayVpcAttachment.t` type and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 268,
      "index": 1660,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelCapacityReservationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for canceling capacity reservations, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate HTTP requests for AWS EC2 API interactions, particularly for handling capacity reservation cancellation workflows.",
      "description_length": 380,
      "index": 1661,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetConsoleOutputResult",
      "description": "Provides methods to construct, parse, and serialize a structure representing console output results, including setting instance ID, output text, and timestamp. Works with string and datetime data types, and supports XML parsing and JSON serialization. Used to process and transmit console output data from AWS instances.",
      "description_length": 320,
      "index": 1662,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnEndpointsResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the results of describing Client VPN endpoints, including handling endpoint sets and pagination tokens. Works with `EndpointSet.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses and prepare data for HTTP requests or JSON serialization.",
      "description_length": 357,
      "index": 1663,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceCapacityReservationAttributesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying instance capacity reservation attributes. Works with a record type containing a boolean flag indicating success or failure. Used to generate HTTP queries and JSON representations for API responses.",
      "description_length": 300,
      "index": 1664,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpnConnectionRouteRequest",
      "description": "Provides functions to construct, parse, and serialize a request for deleting a route from a VPN connection, using a structured type that includes a destination CIDR block and a VPN connection ID. Works with string types from Aws.BaseTypes and JSON or query parameters for API interactions. Used to generate API-compatible requests for managing network routes in cloud infrastructure.",
      "description_length": 383,
      "index": 1665,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateSpotDatafeedSubscriptionRequest",
      "description": "Provides functions to construct, parse, and serialize a request for creating a data feed subscription, including setting a bucket name, optional dry run flag, and prefix. Works with string and boolean types, as well as XML and JSON data structures. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 327,
      "index": 1666,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayAttachmentsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing AWS Transit Gateway attachments, including setting attachment IDs, filters, pagination parameters, and dry-run flags. Works with specific data types such as lists of attachment IDs, filter lists, integers, and strings. Used to generate HTTP query parameters and JSON payloads for API calls to describe transit gateway attachments.",
      "description_length": 409,
      "index": 1667,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFleetRequest",
      "description": "Creates and manipulates requests for launching EC2 fleets with specific configurations. It handles structured data including launch templates, capacity specifications, and termination policies. Used to generate API-compatible queries and JSON representations for cloud infrastructure provisioning.",
      "description_length": 297,
      "index": 1668,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RejectVpcEndpointConnectionsResult",
      "description": "Provides functions to construct, parse, and serialize a response structure containing rejected VPC endpoint connections, including conversion to and from JSON and query formats. Works with a record type containing an optional set of unsuccessful items. Used to process API responses where specific VPC endpoint connection attempts have failed.",
      "description_length": 343,
      "index": 1669,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ResetEbsDefaultKmsKeyIdRequest",
      "description": "Provides operations to construct, parse, and serialize requests for resetting the default KMS key ID of an EBS volume, including converting between XML, query parameters, and JSON formats. Works with AWS request structures and JSON-encoded data. Used to generate and process API requests in AWS SDK interactions.",
      "description_length": 312,
      "index": 1670,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFlowLogsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting flow logs, including creating a request with optional dry run and flow log IDs, parsing XML input, and converting to query and JSON formats. Works with types such as boolean flags, lists of flow log identifiers, and structured JSON data. Used to generate API-compatible requests for cloud infrastructure management systems.",
      "description_length": 400,
      "index": 1671,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableVgwRoutePropagationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for enabling route propagation from a virtual private gateway to a route table. Works with string-based identifiers for gateways and route tables, and boolean flags for dry-run scenarios. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure management tasks.",
      "description_length": 361,
      "index": 1672,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterTransitGatewayMulticastGroupSourcesResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deregistering sources from a transit gateway multicast group. Works with the `TransitGatewayMulticastDeregisteredGroupSources.t` type and AWS query and JSON formats. Used to handle API responses in network management workflows involving multicast group configurations.",
      "description_length": 362,
      "index": 1673,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInternetGatewaysResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing internet gateway results, including methods to convert between XML, JSON, and query formats. Works with `InternetGatewayList.t` and AWS-specific type aliases for strings and JSON. Used to process API responses from cloud infrastructure services, enabling structured data handling and interoperability.",
      "description_length": 385,
      "index": 1674,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkInterfacesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing network interfaces, including handling filters, dry runs, and pagination parameters. Works with custom types such as filter lists, network interface IDs, and pagination tokens. Used to generate HTTP query parameters and JSON payloads for API interactions with cloud infrastructure services.",
      "description_length": 369,
      "index": 1675,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateLaunchTemplateRequest",
      "description": "Provides functions to construct, parse, and serialize a request for creating an EC2 launch template, including setting parameters like dry run, client token, template name, version description, launch template data, and tag specifications. Works with types such as Boolean, String, RequestLaunchTemplateData, and TagSpecificationList. Used to generate HTTP query parameters or JSON payloads for API calls to create launch templates in AWS.",
      "description_length": 439,
      "index": 1676,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAccountAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing account attributes, including setting attribute names and dry-run flags. Works with custom types for account attribute names and boolean flags. Used to generate AWS API-compatible query parameters and JSON payloads for account attribute retrieval.",
      "description_length": 326,
      "index": 1677,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeConversionTasksRequest",
      "description": "Provides functions to construct, parse, and serialize request data for describing conversion tasks, including building with optional task IDs and dry-run flags. Works with custom types such as ConversionIdStringList and boolean flags for request configuration. Used to generate AWS query parameters and JSON payloads for API interactions.",
      "description_length": 338,
      "index": 1678,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateTransitGatewayMulticastDomainRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disassociating a transit gateway multicast domain, including setting domain ID, attachment ID, subnet IDs, and dry run flags. Works with string, boolean, and list-of-strings data types. Used to generate API-compatible query parameters and JSON payloads for network configuration changes.",
      "description_length": 355,
      "index": 1679,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying VPC endpoint configurations. Works with specific types such as route table IDs, subnet IDs, security group IDs, and boolean flags for configuration changes. Used to update endpoint policies, route tables, subnets, security groups, and DNS settings in AWS API interactions.",
      "description_length": 349,
      "index": 1680,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVolumeAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying volume attributes, including setting auto-enable I/O and specifying volume IDs. Works with AWS base types such as strings, booleans, and JSON structures. Used to generate API-compatible queries and JSON payloads for volume configuration changes.",
      "description_length": 322,
      "index": 1681,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableTransitGatewayRouteTablePropagationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disabling route table propagation in a transit gateway, including converting between XML, query parameters, and JSON formats. Works with string identifiers for transit gateway route tables and attachments, along with a boolean flag for dry runs. Used to generate structured API inputs for cloud infrastructure management tools.",
      "description_length": 395,
      "index": 1682,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptVpcPeeringConnectionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for accepting a VPC peering connection, including parsing XML responses and converting between query and JSON formats. Works with AWS-specific data types such as boolean flags, string identifiers, and structured JSON. Used to generate HTTP requests for AWS API interactions and process incoming XML-based responses.",
      "description_length": 379,
      "index": 1683,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RevokeSecurityGroupIngressResult",
      "description": "Provides operations to construct, parse, and serialize a result structure for revoking security group ingress, including handling boolean return values and lists of IP permissions. Works with custom types such as boolean flags and lists of IP permission records. Used to process API responses and generate query or JSON representations for network access control adjustments.",
      "description_length": 375,
      "index": 1684,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorSessionResult",
      "description": "Provides functions to construct, parse, and serialize traffic mirror session results, including creating instances with optional session and client token parameters, parsing XML nodes into structured data, and converting between JSON and query formats. Works with the `TrafficMirrorSession.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API responses in network traffic monitoring scenarios, such as validating and transforming session creation outputs.",
      "description_length": 499,
      "index": 1685,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCarrierGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing carrier gateways, including setting identifiers, filters, result limits, pagination tokens, and dry-run flags. Works with custom types such as CarrierGatewayIdSet, FilterList, and AWS-specific base types for integers and strings. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 400,
      "index": 1686,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetsResult",
      "description": "Provides operations to construct, parse, and serialize fleet data structures, including creating instances with optional next token and fleet sets, parsing XML nodes into internal representations, and converting between JSON and query formats. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `FleetSet.t`. Used to process and transmit fleet information from AWS API responses in a structured and interoperable manner.",
      "description_length": 436,
      "index": 1687,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImportImageTasksRequest",
      "description": "Provides functions to construct, parse, and serialize requests for importing image tasks, including setting dry run flags, filters, task IDs, result limits, and pagination tokens. Works with custom types such as boolean flags, filter lists, task ID lists, integers, and strings. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 357,
      "index": 1688,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UnmonitorInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for unmonitoring EC2 instances, including creating instances from a list of instance IDs, parsing XML input, and converting to query and JSON formats. Works with instance ID lists, boolean flags, and AWS-specific data types. Used to generate API requests for batch instance monitoring adjustments in cloud management workflows.",
      "description_length": 391,
      "index": 1689,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportKeyPairRequest",
      "description": "Provides operations to construct, parse, and serialize objects representing AWS EC2 key pair import requests, including handling of key names, public key material, and optional tags. Works with types such as boolean, string, blob, and a list of tag specifications. Used to generate HTTP query parameters and JSON payloads for API interactions, and to convert XML responses into structured data.",
      "description_length": 394,
      "index": 1690,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorSessionResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of deleting a traffic mirror session, including converting between XML, query, and JSON formats. Works with string-based session identifiers and structured data types for AWS API interactions. Used to process API responses and prepare data for transmission in web service requests.",
      "description_length": 367,
      "index": 1691,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetEbsEncryptionByDefaultRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving EBS encryption settings, including creating with optional dry-run flags and converting between XML, query, and JSON formats. Works with XML nodes, query parameters, and JSON structures. Used to generate and process AWS API requests for EBS encryption configuration.",
      "description_length": 344,
      "index": 1692,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInternetGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing internet gateways, including filtering, pagination, and dry-run options. Works with data types such as filters, gateway IDs, tokens, and result limits. Used to generate API-compatible queries and JSON payloads for cloud infrastructure management systems.",
      "description_length": 333,
      "index": 1693,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcPeeringConnectionResult",
      "description": "Provides functions to construct, parse, and serialize a VPC peering connection deletion result, including converting between XML, query parameters, and JSON formats. Works with boolean values and structured data representing the outcome of a VPC peering connection deletion. Used to process API responses and prepare data for HTTP requests in AWS SDK interactions.",
      "description_length": 364,
      "index": 1694,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteQueuedReservedInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting queued reserved instances, including creating with optional dry-run flags and instance IDs. Works with boolean flags, instance ID lists, and AWS query and JSON formats. Used to generate API-compatible request structures for cloud infrastructure management.",
      "description_length": 333,
      "index": 1695,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.WithdrawByoipCidrRequest",
      "description": "Provides operations to construct, parse, and serialize a request for withdrawing a BYOIP CIDR block, including converting between XML, query parameters, and JSON formats. Works with string-based CIDR notations and boolean flags for dry-run validation. Used to generate structured API requests for cloud infrastructure management systems.",
      "description_length": 337,
      "index": 1696,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotFleetRequestsResponse",
      "description": "Provides operations to construct, parse, and serialize responses for querying Spot Fleet requests, including handling pagination tokens and request configurations. Works with AWS query parameters, JSON structures, and XML nodes. Used to process API responses from EC2 for managing Spot Fleet configurations.",
      "description_length": 307,
      "index": 1697,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportVolumeResult",
      "description": "Provides operations to construct, parse, and serialize volume import results, including converting to AWS query parameters and JSON representations. Works with XML nodes, AWS query structures, and JSON values. Used to process and format import result data from XML responses into structured formats for further handling.",
      "description_length": 320,
      "index": 1698,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFpgaImageAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing FPGA image attributes, including converting between XML, query parameters, and JSON formats. Works with AWS base types, XML nodes, and JSON structures. Used to generate and process API requests for querying specific FPGA image properties like launch permissions or product codes.",
      "description_length": 358,
      "index": 1699,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumeAttributeRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing volume attributes, including setting the dry run flag. Works with volume attribute names and volume IDs as core data types. Used to generate AWS API-compatible queries and JSON representations for volume attribute retrieval.",
      "description_length": 303,
      "index": 1700,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseScheduledInstancesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for purchasing scheduled instances, including creating with client tokens and dry run flags, and converting between XML, query, and JSON formats. Works with client tokens, boolean flags, and sets of purchase requests. Used to generate API-compatible request structures for cloud provisioning systems.",
      "description_length": 363,
      "index": 1701,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkAclResult",
      "description": "Provides operations to construct, parse, and serialize network ACL result data, including converting between XML, JSON, and query formats. Works with the `NetworkAcl.t` type and AWS-specific data structures. Used to process and transmit network ACL creation responses in API interactions.",
      "description_length": 288,
      "index": 1702,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateIamInstanceProfileResult",
      "description": "Provides functions to construct, parse, and serialize a result structure representing the disassociation of an IAM instance profile from an EC2 instance. Works with the `IamInstanceProfileAssociation.t` type and AWS query and JSON formats. Used to handle API responses in AWS SDK interactions where instance profile disassociation is confirmed.",
      "description_length": 344,
      "index": 1703,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateRouteTableResult",
      "description": "Creates and manipulates route table results from AWS API responses, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with AWS-specific data structures like `RouteTable.t` and JSON associations. Used to process and format route table creation outcomes in cloud infrastructure workflows.",
      "description_length": 330,
      "index": 1704,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNetworkInterfaceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a network interface, including creating with optional dry-run flag, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS base types for boolean and string, and a structured request type containing network interface ID. Used to generate API-compatible requests for cloud infrastructure management tasks.",
      "description_length": 426,
      "index": 1705,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableEbsEncryptionByDefaultRequest",
      "description": "Provides operations to construct, parse, and serialize requests for enabling EBS encryption by default, including creating a request with an optional dry run flag. Works with AWS query parameters and JSON structures, using a record type to represent the request configuration. Used to generate HTTP requests for AWS API calls related to encryption settings.",
      "description_length": 357,
      "index": 1706,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAvailabilityZonesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing available AWS availability zones, including conversion to query parameters, JSON, and parsing from XML. Works with a record type containing availability zone data and a list of availability zone objects. Used to process API responses and prepare data for AWS service requests.",
      "description_length": 355,
      "index": 1707,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCoipPoolsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing COIP pools, including setting pool IDs, filters, result limits, pagination tokens, and dry-run flags. Works with custom types such as CoipPoolIdSet, FilterList, and AWS-specific base types for structured data representation. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 395,
      "index": 1708,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.StartInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for starting EC2 instances, including setting instance IDs, additional info, and dry run flags. Works with custom types for instance IDs, boolean flags, and JSON/Query representations. Used to generate API-compatible request structures for cloud infrastructure management.",
      "description_length": 336,
      "index": 1709,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageResult",
      "description": "Constructs and manipulates objects containing details of imported EC2 images, including metadata like image ID, encryption status, and import task ID. Operates on structured data types such as strings, booleans, lists of snapshot details, and tag lists. Used to parse XML responses from AWS API calls and convert data into query parameters or JSON format for further processing.",
      "description_length": 378,
      "index": 1710,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeCustomerGatewaysResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing customer gateway information, including conversion to and from JSON and query parameters. Works with a record type containing a list of customer gateway objects. Used to process API responses from cloud infrastructure services that return multiple customer gateway configurations.",
      "description_length": 363,
      "index": 1711,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotFleetRequestHistoryRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving history of a specific Spot Fleet request, including filtering by event type, time range, and pagination. Works with data types such as boolean, integer, string, and datetime to represent request parameters. Used to generate HTTP queries and JSON payloads for API interactions with AWS EC2.",
      "description_length": 368,
      "index": 1712,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnConnectionResult",
      "description": "Provides operations to construct, parse, and serialize a VPN connection result, including converting between XML, query parameters, and JSON formats. Works with the VpnConnection.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process and transmit VPN connection update responses in API interactions.",
      "description_length": 333,
      "index": 1713,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVolumeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deleting a volume, including creating with a volume ID and optional dry run flag, converting to query parameters, and encoding/decoding from JSON. Works with AWS base types for strings and booleans, and JSON structures. Used to generate structured API calls for volume deletion in cloud infrastructure management.",
      "description_length": 380,
      "index": 1714,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceIamInstanceProfileAssociationResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing an IAM instance profile association, including conversion to and from JSON and query parameters. Works with the `IamInstanceProfileAssociation.t` type and AWS-specific data structures. Used to handle API responses in AWS SDK interactions involving instance profile associations.",
      "description_length": 357,
      "index": 1715,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeByoipCidrsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing BYOIP CIDR blocks, including handling dry run flags, result limits, and pagination tokens. Works with AWS query parameters, JSON structures, and XML nodes. Used to generate API-compatible request payloads and parse incoming XML responses from AWS services.",
      "description_length": 335,
      "index": 1716,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumeStatusResult",
      "description": "Provides operations to construct, parse, and serialize volume status results, including handling pagination tokens and status lists. Works with AWS-specific types such as strings, lists of volume statuses, and JSON structures. Used to process API responses and prepare data for HTTP queries or JSON serialization.",
      "description_length": 313,
      "index": 1717,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateClientVpnTargetNetworkResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the result of associating a client VPN target network, including creating instances with optional association IDs and status, parsing XML nodes into the structure, and converting between JSON and query formats. Works with types such as strings, status enums, and JSON objects. Used to process API responses from cloud services that manage client VPN configurations.",
      "description_length": 448,
      "index": 1718,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceTransitGatewayRouteResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of replacing a transit gateway route. Works with `TransitGatewayRoute.t` and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 255,
      "index": 1719,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcEndpointServiceConfigurationsResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing the results of deleting VPC endpoint service configurations. Works with `UnsuccessfulItemSet.t` and AWS query and JSON formats. Used to process API responses and generate HTTP requests for VPC endpoint management.",
      "description_length": 297,
      "index": 1720,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyEbsDefaultKmsKeyIdResult",
      "description": "Provides functions to construct, parse, and serialize an object representing the result of modifying an EBS default KMS key ID, including converting between XML, query, and JSON formats. Works with string-based KMS key identifiers and structured data types. Used to handle AWS API responses and prepare data for HTTP requests.",
      "description_length": 326,
      "index": 1721,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisableVpcClassicLinkResult",
      "description": "Provides operations to construct, parse, and serialize a result indicating VPC Classic Link status, including converting between XML, query parameters, and JSON formats. Works with boolean values and structured data representing API responses. Used to handle AWS API responses for disabling VPC Classic Link in network configuration workflows.",
      "description_length": 343,
      "index": 1722,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFlowLogsResult",
      "description": "Provides operations to construct, parse, and serialize a flow logs deletion result, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing an optional set of unsuccessful items. Used to process and format responses from AWS API calls related to deleting flow logs.",
      "description_length": 329,
      "index": 1723,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AttachVpnGatewayResult",
      "description": "Provides operations to construct, parse, and serialize a VPN gateway attachment result, including converting between XML, JSON, and query formats. Works with the VpcAttachment.t type and a record type representing the result structure. Used to process API responses from AWS when attaching a VPN gateway to a VPC.",
      "description_length": 313,
      "index": 1724,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to create a transit gateway, including setting a description, options, tag specifications, and dry-run flags. Works with types such as strings, boolean flags, custom options records, and tag specification lists. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure provisioning.",
      "description_length": 401,
      "index": 1725,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ImageAttribute",
      "description": "Provides operations to construct, parse, serialize, and deserialize image attributes, including block device mappings, launch permissions, and kernel/ramdisk IDs. Works with custom types such as BlockDeviceMappingList, LaunchPermissionList, and AttributeValue. Used to generate AWS API requests and process XML or JSON responses related to EC2 image configurations.",
      "description_length": 365,
      "index": 1726,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DetachClassicLinkVpcResult",
      "description": "Provides operations to construct, parse, and serialize a result structure representing the outcome of detaching a classic link VPC, including converting between XML, query parameters, and JSON formats. Works with a record type containing a boolean return value. Used to process API responses and prepare data for HTTP requests in AWS integration code.",
      "description_length": 351,
      "index": 1727,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayRouteTableAssociationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing associations between transit gateway route tables and resources. Works with custom types for route table associations and pagination tokens. Used to process API responses from cloud infrastructure services that manage network routing configurations.",
      "description_length": 332,
      "index": 1728,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceEventStartTimeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying the start time of an instance event. Works with types including boolean, string, and date-time values, and a structured record type. Used to generate HTTP query parameters and JSON payloads for API interactions involving instance event scheduling.",
      "description_length": 324,
      "index": 1729,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteSnapshotRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a snapshot, including converting between XML, JSON, and query parameters. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate HTTP requests for snapshot deletion in AWS EC2 interactions.",
      "description_length": 306,
      "index": 1730,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceIamInstanceProfileAssociationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for replacing an EC2 instance profile association, using an IAM instance profile specification and an association ID. Works with types such as IamInstanceProfileSpecification.t and Aws.BaseTypes.String.t. Used to update an EC2 instance's IAM role by replacing its existing association.",
      "description_length": 348,
      "index": 1731,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateEnclaveCertificateIamRoleRequest",
      "description": "Provides operations to construct, parse, and serialize requests for disassociating an IAM role from an enclave certificate, including converting between XML, query, and JSON formats. Works with string-based ARNs and boolean flags to represent request parameters. Used to prepare and process API calls in AWS SDK interactions involving enclave configurations.",
      "description_length": 358,
      "index": 1732,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetAssociatedEnclaveCertificateIamRolesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving IAM roles associated with an enclave certificate, including converting between XML, query, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to prepare and process API requests for AWS EC2 enclave certificate role associations.",
      "description_length": 357,
      "index": 1733,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeHostReservationOfferingsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing host reservation offerings, including handling pagination tokens and offering sets. Works with custom types for JSON and query parameters, as well as XML nodes for parsing. Used to process API responses from cloud infrastructure services that manage reserved host instances.",
      "description_length": 357,
      "index": 1734,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing transit gateways, including handling IDs, filters, pagination, and dry-run flags. Works with custom types such as TransitGatewayIdStringList, FilterList, and AWS-specific base types for integers and strings. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 378,
      "index": 1735,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstancePlacementRequest",
      "description": "Provides functions to construct, parse, and serialize instances of an EC2 placement configuration, including setting affinity, group name, host ID, instance ID, tenancy, partition number, and host resource group ARN. Works with custom types such as Affinity.t, HostTenancy.t, and Aws.BaseTypes.String.t. Used to generate AWS API requests for modifying instance placement settings in a structured and serializable format.",
      "description_length": 420,
      "index": 1736,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNatGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing NAT gateways, including support for filters, pagination, and dry-run flags. Works with specific types such as boolean flags, integer limits, string lists, and query or JSON representations. Used to generate API-compatible queries for cloud infrastructure management systems.",
      "description_length": 353,
      "index": 1737,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeEgressOnlyInternetGatewaysRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing egress-only internet gateways, including handling dry run flags, filtering, pagination, and identifier lists. Works with types such as boolean, integer, string, and custom lists for gateway IDs and filters. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 377,
      "index": 1738,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotInstanceRequestsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS EC2 spot instance request results, including handling lists of spot instance requests and pagination tokens. Works with custom types for spot instance requests and string-based pagination tokens. Used to process API responses and prepare data for HTTP queries or JSON serialization.",
      "description_length": 369,
      "index": 1739,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayVpcAttachmentResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway VPC attachment result, including conversion to and from JSON and query parameters. Works with the `TransitGatewayVpcAttachment.t` type and AWS-specific data structures. Used to process API responses from actions modifying transit gateway VPC attachments.",
      "description_length": 326,
      "index": 1740,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyFpgaImageAttributeResult",
      "description": "Provides functions to construct, parse, and serialize FPGA image attribute results, including converting between XML nodes, query parameters, and JSON representations. Works with the `FpgaImageAttribute.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and format responses from AWS API calls related to FPGA image attributes.",
      "description_length": 387,
      "index": 1741,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFpgaImageRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting an FPGA image, including converting between XML, query parameters, and JSON formats. Works with AWS base types such as Boolean and String, and a request structure containing a FPGA image ID. Used to generate API-compatible requests for AWS EC2 operations involving FPGA image removal.",
      "description_length": 361,
      "index": 1742,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetManagedPrefixListAssociationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving managed prefix list associations, including setting dry run flags, specifying prefix list IDs, and handling pagination parameters. Works with types such as boolean, string, and integer to represent request configurations. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 401,
      "index": 1743,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFastSnapshotRestoresRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing fast snapshot restores, including handling filters, pagination, and dry-run flags. Works with custom types for filters, integers, strings, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 317,
      "index": 1744,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AcceptVpcPeeringConnectionResult",
      "description": "Provides functions to construct, parse, and serialize a VPC peering connection result, including converting between XML, JSON, and a structured record type. Works with the `VpcPeeringConnection.t` type and AWS query and JSON representations. Used to process and format responses from VPC peering connection acceptance operations in AWS API interactions.",
      "description_length": 353,
      "index": 1745,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayRouteTablePropagationsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for retrieving route table propagations associated with a transit gateway. Works with types such as strings, integers, boolean flags, and filter lists to represent request parameters. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 338,
      "index": 1746,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkInterfacePermissionResult",
      "description": "Provides operations to construct, parse, and serialize network interface permission results. Works with `NetworkInterfacePermission.t` and AWS query/json formats. Used to generate API responses for network interface permissions in AWS interactions.",
      "description_length": 248,
      "index": 1747,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AuthorizeClientVpnIngressRequest",
      "description": "Provides functions to construct, parse, and serialize requests for authorizing client VPN ingress rules. Works with string, boolean, and JSON data types to represent configuration parameters like client VPN endpoint IDs, network CIDRs, and access groups. Used to generate AWS API-compatible query parameters and JSON payloads for managing network access permissions.",
      "description_length": 366,
      "index": 1748,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNetworkInterfacePermissionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing network interface permissions, including handling pagination and filtering. Works with custom types such as network interface permission IDs, filters, and pagination tokens. Used to generate HTTP queries and JSON payloads for API interactions with AWS EC2.",
      "description_length": 335,
      "index": 1749,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTrafficMirrorFiltersRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing traffic mirror filters, including handling pagination, filters, and dry-run flags. Works with custom types such as TrafficMirrorFilterIdList, FilterList, and AWS-specific base types for query and JSON serialization. Used to generate API-compatible request structures for AWS EC2 operations.",
      "description_length": 368,
      "index": 1750,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceTransitGatewayRouteRequest",
      "description": "Provides functions to construct, parse, and serialize requests for replacing a transit gateway route, including setting the destination CIDR block, route table ID, optional attachment ID, blackhole flag, and dry run flag. Works with string and boolean types, as well as AWS-specific types for query and JSON formatting. Used to generate API-compatible request structures for cloud network configuration updates.",
      "description_length": 411,
      "index": 1751,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpnGatewayRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to create a VPN gateway, including setting availability zone, gateway type, tag specifications, Amazon side ASN, and dry run flags. Works with types such as strings, booleans, longs, and custom records for AWS API interactions. Used to generate structured API inputs for cloud infrastructure provisioning.",
      "description_length": 389,
      "index": 1752,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetManagedPrefixListEntriesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving managed prefix list entries, including setting dry run flags, specifying prefix list IDs, and controlling result pagination. Works with types such as boolean, string, integer, and long to represent request parameters. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS services.",
      "description_length": 393,
      "index": 1753,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTrafficMirrorSessionResult",
      "description": "Provides operations to construct, parse, and serialize traffic mirror session results, including converting between XML nodes, query parameters, and JSON representations. Works with the `TrafficMirrorSession.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format responses from AWS API calls related to traffic mirror sessions.",
      "description_length": 377,
      "index": 1754,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableVpcClassicLinkDnsSupportResult",
      "description": "Provides operations to construct, parse, and serialize a response structure for disabling VPC classic link DNS support, including converting between XML, query parameters, and JSON formats. Works with boolean values and structured data representing API responses. Used to process and transmit API results in AWS-compatible formats.",
      "description_length": 331,
      "index": 1755,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterImageResult",
      "description": "Provides operations to construct, parse, and serialize image result data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing an optional image ID. Used to process and format responses from AWS EC2 image management operations.",
      "description_length": 298,
      "index": 1756,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttachVolumeRequest",
      "description": "Creates a structured request to attach a volume to an EC2 instance, including parameters like device name, instance ID, and volume ID, with optional dry-run support. Processes XML nodes into request objects and serializes requests into query parameters and JSON format. Used to generate API-compatible payloads for EC2 volume attachment operations.",
      "description_length": 348,
      "index": 1757,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLocalGatewayRouteResult",
      "description": "Provides operations to construct, parse, and serialize a local gateway route result, including converting between XML, query parameters, and JSON formats. Works with the `LocalGatewayRoute.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle responses from AWS API calls related to local gateway route management.",
      "description_length": 370,
      "index": 1758,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CancelReservedInstancesListingResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the result of canceling Reserved Instances listings, including parsing XML responses and converting to and from JSON. Works with custom types for Reserved Instances listings and AWS query parameters. Used to process API responses and prepare data for HTTP requests in AWS EC2 interactions.",
      "description_length": 364,
      "index": 1759,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTagsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for creating tags, including building a request from resource IDs and tags, converting to query parameters, and handling JSON serialization and deserialization. Works with resource ID lists, tag lists, and boolean flags for dry runs. Used to generate structured API requests for cloud resource tagging systems.",
      "description_length": 374,
      "index": 1760,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RegisterTransitGatewayMulticastGroupMembersRequest",
      "description": "Provides operations to construct, parse, and serialize requests for adding members to a transit gateway multicast group, including setting the multicast domain ID, group IP address, network interface IDs, and dry run flag. Works with string, boolean, and list types, as well as AWS-specific data structures like TransitGatewayNetworkInterfaceIdList. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS VPC.",
      "description_length": 441,
      "index": 1761,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreatePlacementGroupRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating placement groups, including setting dry run flags, group names, strategies, partition counts, and tag specifications. Works with types such as boolean, string, integer, and custom records for placement strategy and tag specifications. Used to generate AWS API-compatible query parameters and JSON payloads for placement group creation.",
      "description_length": 411,
      "index": 1762,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RejectTransitGatewayVpcAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for rejecting a transit gateway VPC attachment, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate and process API requests in interactions with AWS networking services.",
      "description_length": 347,
      "index": 1763,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateAddressRequest",
      "description": "Provides functions to construct, parse, and serialize an AWS EC2 associate address request, including setting parameters like allocation ID, instance ID, public IP, and reassociation flags. Works with string and boolean types for AWS resource identifiers and configuration options. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2 address association endpoints.",
      "description_length": 399,
      "index": 1764,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTrafficMirrorFilterRuleRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a specific traffic mirror filter rule, including converting between XML, query parameters, and JSON formats. Works with string-based rule identifiers and boolean flags for dry-run validation. Used to generate API-compatible request structures for cloud networking management systems.",
      "description_length": 360,
      "index": 1765,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnConnectionOptionsResult",
      "description": "Provides functions to construct, parse, and serialize a VPN connection options modification result. Works with the VpnConnection.t type and AWS query and JSON formats. Used to handle responses from API calls modifying VPN connection settings.",
      "description_length": 242,
      "index": 1766,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpnTunnelOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize a request for modifying VPN tunnel options, including setting the VPN connection ID, tunnel IP address, and tunnel options. Works with string, boolean, and custom structured data types representing VPN configuration details. Used to generate HTTP query parameters and JSON payloads for API interactions with virtual private network services.",
      "description_length": 395,
      "index": 1767,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RejectVpcPeeringConnectionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for rejecting a VPC peering connection, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as boolean flags, strings, and JSON structures. Used to generate and process rejection requests in AWS API interactions.",
      "description_length": 329,
      "index": 1768,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AllocateAddressRequest",
      "description": "Creates and manipulates objects representing requests to allocate an IPv4 address, supporting parameters like domain, public IP pool, network border group, and dry run flags. Operates on custom record types and standard AWS types such as strings and booleans. Used to generate query parameters for API calls and to serialize/deserialize request data from XML and JSON formats.",
      "description_length": 376,
      "index": 1769,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateTrafficMirrorSessionRequest",
      "description": "Creates and manipulates a request to establish a traffic mirror session, handling network interface, target, and filter identifiers, along with optional parameters like packet length, session number, and tags. Operates on string, integer, and list types, including custom types like `TagSpecificationList`. Used to generate API-compatible queries, JSON representations, and parse XML input for network traffic monitoring configurations.",
      "description_length": 436,
      "index": 1770,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.BundleInstanceResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize bundle instance result data. Works with XML nodes, AWS query parameters, and JSON structures. Used to process and convert bundle instance responses from AWS API interactions.",
      "description_length": 242,
      "index": 1771,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeTransitGatewayRouteTablesResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing the results of describing transit gateway route tables, including handling lists of route tables and pagination tokens. Works with custom types for transit gateway route tables and AWS query and JSON formats. Used to process API responses from AWS EC2 when retrieving details about route table configurations.",
      "description_length": 393,
      "index": 1772,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateSubnetCidrBlockResult",
      "description": "Provides functions to construct, parse, and serialize a subnet CIDR block association result, including handling IPv6 associations and subnet IDs. Works with types such as SubnetIpv6CidrBlockAssociation.t and AWS-specific string and query structures. Used to process API responses and generate JSON or query parameters for network configuration updates.",
      "description_length": 353,
      "index": 1773,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateRouteTableRequest",
      "description": "Provides operations to construct, parse, and serialize requests for creating a route table, including setting a VPC ID, dry run flag, and tag specifications. Works with AWS base types, query structures, and JSON representations. Used to generate API-compatible request payloads for cloud infrastructure setup.",
      "description_length": 309,
      "index": 1774,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.InstanceAttribute",
      "description": "Provides functions to construct, parse, and serialize instance attribute data, including settings like block device mappings, termination protection, and instance type. Works with custom types such as group identifiers, block device mappings, and boolean attributes. Used to generate AWS API requests and process XML or JSON responses related to EC2 instance configurations.",
      "description_length": 374,
      "index": 1775,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateEgressOnlyInternetGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for creating an egress-only internet gateway, including setting client tokens, dry run flags, VPC IDs, and tag specifications. Works with AWS-specific data types such as strings, booleans, and lists of tag specifications. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 377,
      "index": 1776,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayResult",
      "description": "Provides operations to construct, parse, and serialize transit gateway results, including converting between XML nodes, query parameters, and JSON representations. Works with the `TransitGateway.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process and format responses from AWS API calls involving transit gateways.",
      "description_length": 356,
      "index": 1777,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyManagedPrefixListRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying managed prefix lists, including setting dry-run flags, updating version numbers, renaming prefix lists, and adding/removing entries. Works with types such as boolean, string, long, and custom structures for entries. Used to generate API-compatible queries and JSON payloads for cloud infrastructure management tasks.",
      "description_length": 394,
      "index": 1778,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeRouteTablesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing route tables, including filtering, pagination, and dry-run options. Works with custom types such as filter lists, route table ID lists, and AWS-specific data structures. Used to generate HTTP queries and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 339,
      "index": 1779,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportSnapshotRequest",
      "description": "Creates and manipulates objects representing requests to import a snapshot, supporting client data, tokens, descriptions, disk containers, and encryption settings. Operates on types such as ClientData.t, SnapshotDiskContainer.t, and TagSpecificationList.t. Used to generate query parameters, JSON representations, and parse XML input for API interactions.",
      "description_length": 355,
      "index": 1780,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyHostsResult",
      "description": "Provides operations to construct, parse, and serialize results from host modification actions. Works with response host ID lists and unsuccessful item lists. Used to generate AWS query parameters and JSON representations from parsed XML data.",
      "description_length": 242,
      "index": 1781,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterTransitGatewayMulticastGroupMembersResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deregistering multicast group members from a transit gateway. Works with the `TransitGatewayMulticastDeregisteredGroupMembers.t` type and AWS query and JSON formats. Used to process API responses and prepare data for HTTP requests in network management workflows.",
      "description_length": 357,
      "index": 1782,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClientVpnAuthorizationRulesResult",
      "description": "Provides functions to construct, parse, and serialize objects containing client VPN authorization rules and a pagination token. Works with `AuthorizationRuleSet.t` and string-based pagination tokens. Used to process API responses from AWS for managing client VPN access controls.",
      "description_length": 279,
      "index": 1783,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFleetInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing instances in an EC2 fleet, including support for filtering, pagination, and dry-run flags. Works with types such as boolean, integer, string, and custom filter lists. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 337,
      "index": 1784,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.StopInstancesResult",
      "description": "Provides a constructor for building results of instance stopping operations, a parser for XML responses, and conversions to query parameters and JSON formats. Works with instance state change lists and AWS-specific data structures. Used to process and serialize responses from stopping EC2 instances in AWS API interactions.",
      "description_length": 324,
      "index": 1785,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RequestSpotFleetResponse",
      "description": "Provides functions to construct, parse, and serialize a response structure for a Spot Fleet request, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a Spot Fleet request ID and associated data. Used to process and format API responses from cloud infrastructure services.",
      "description_length": 342,
      "index": 1786,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayMulticastDomainAssociationsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing associations between transit gateways and multicast domains. Works with a custom type `t` and a list of transit gateway multicast domain associations. Used to process and encode responses from AWS API calls related to multicast domain configurations.",
      "description_length": 333,
      "index": 1787,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTrafficMirrorSessionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying a traffic mirror session, including setting session attributes and specifying fields to remove. Works with types such as session IDs, target and filter IDs, packet lengths, and boolean flags. Used to generate API-compatible queries and JSON representations for updating network monitoring configurations.",
      "description_length": 382,
      "index": 1788,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateTransitGatewayPeeringAttachmentRequest",
      "description": "Provides functions to construct, parse, and serialize objects representing requests to create a transit gateway peering attachment, including handling tag specifications and dry run flags. Works with string types for identifiers and regions, and a list of tag specifications. Used to generate API-compatible query parameters and JSON payloads for cloud infrastructure provisioning.",
      "description_length": 381,
      "index": 1789,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceCreditSpecificationResult",
      "description": "Provides functions to construct, parse, and serialize instances of a result containing successful and unsuccessful instance credit specifications. Works with custom types representing sets of credit specifications and JSON/XML data formats. Used to process API responses from cloud infrastructure services that manage instance credit configurations.",
      "description_length": 349,
      "index": 1790,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyTransitGatewayPrefixListReferenceResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying a transit gateway prefix list reference. Works with the `TransitGatewayPrefixListReference.t` type and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 298,
      "index": 1791,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeReservedInstancesOfferingsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing AWS Reserved Instances Offerings. Works with custom types for offering lists and pagination tokens. Used to process API responses and prepare data for HTTP requests or JSON serialization.",
      "description_length": 270,
      "index": 1792,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateDhcpOptionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for associating DHCP options with a VPC, using string-based identifiers and boolean flags. Operates on structured data types representing AWS EC2 request parameters. Used to generate HTTP query strings and JSON payloads for API interactions.",
      "description_length": 304,
      "index": 1793,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AuthorizeClientVpnIngressResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of authorizing client VPN ingress, including converting between XML, JSON, and query parameters. Works with a record type containing optional status information related to client VPN authorization rules. Used to process API responses and prepare data for HTTP requests in AWS SDK interactions.",
      "description_length": 383,
      "index": 1794,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteKeyPairRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting an EC2 key pair, including setting key name, key pair ID, and dry run flags. Works with string and boolean types from the Aws.BaseTypes module, as well as query and JSON data structures. Used to generate API-compatible request payloads for cloud infrastructure management tasks.",
      "description_length": 355,
      "index": 1795,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeScheduledInstanceAvailabilityResult",
      "description": "Provides operations to construct, parse, and serialize data structures representing scheduled instance availability, including methods to convert between XML, query parameters, and JSON formats. Works with types such as `next_token` and `scheduled_instance_availability_set` to manage pagination and instance data. Used to process API responses from cloud infrastructure services that track available scheduled instances.",
      "description_length": 421,
      "index": 1796,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RestoreManagedPrefixListVersionResult",
      "description": "Provides a constructor for creating an object from a managed prefix list, a parser for XML nodes, and functions to convert the object to AWS query and JSON formats, as well as a decoder from JSON. Works with the ManagedPrefixList.t type and AWS-specific data structures like Query.t and Json.t. Used to process and serialize responses from AWS API calls involving managed prefix list versions.",
      "description_length": 393,
      "index": 1797,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstancesResult",
      "description": "Provides functions to construct, parse, and serialize instance information, including handling reservations and pagination tokens. Works with reservation lists and AWS query and JSON structures. Used to process and format responses from instance description APIs.",
      "description_length": 263,
      "index": 1798,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteClientVpnRouteResult",
      "description": "Provides functions to construct, parse, and serialize a client VPN route result, including converting between XML nodes, query parameters, and JSON representations. Works with the `ClientVpnRouteStatus.t` type and a structured record type `t`. Used to handle responses from AWS API calls related to client VPN route management.",
      "description_length": 327,
      "index": 1799,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteFleetsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting fleets, including setting dry-run flags, specifying fleet IDs, and controlling instance termination. Works with custom types such as `FleetIdSet.t` and `Aws.BaseTypes.Boolean.t`. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 347,
      "index": 1800,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayPrefixListReferenceResult",
      "description": "Provides operations to construct, parse, and serialize objects representing the result of deleting a transit gateway prefix list reference. Works with the `TransitGatewayPrefixListReference.t` type and AWS query and JSON formats. Used to handle API responses in network configuration management workflows.",
      "description_length": 305,
      "index": 1801,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayVirtualInterfaceGroupsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing local gateway virtual interface groups, including setting IDs, filters, pagination, and dry-run flags. Works with custom types such as LocalGatewayVirtualInterfaceGroupIdSet, FilterList, and AWS-specific base types. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS EC2.",
      "description_length": 386,
      "index": 1802,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIdentityIdFormatResult",
      "description": "Provides operations to construct, parse, and serialize identity ID format results, including converting between XML nodes, query parameters, and JSON structures. Works with XML nodes, JSON values, and AWS query parameters. Used to process and encode responses from identity management systems that return format-specific metadata.",
      "description_length": 330,
      "index": 1803,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize VPC result data. Works with Vpc.t and AWS query and JSON structures. Used to generate AWS API responses and process XML input into structured VPC information.",
      "description_length": 226,
      "index": 1804,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing EC2 volumes, including filtering by volume IDs, setting dry-run flags, and controlling result pagination. Works with custom types for filters, volume IDs, and query parameters. Used to generate HTTP query strings and JSON payloads for API interactions with AWS EC2.",
      "description_length": 343,
      "index": 1805,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MonitorInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for monitoring EC2 instances, including creating instances with specific IDs and optional dry-run flags, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with instance ID lists, boolean flags, and AWS-specific data types. Used to generate API-compatible requests for monitoring instance states in cloud infrastructure workflows.",
      "description_length": 458,
      "index": 1806,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseHostReservationResult",
      "description": "Provides operations to construct, parse, and serialize objects representing the result of purchasing a host reservation, including handling client tokens, currency codes, purchase details, and pricing information. Works with custom types such as currency codes, purchase sets, and JSON/Query structures for API interactions. Used to process and format API responses from cloud service providers when managing reserved host instances.",
      "description_length": 433,
      "index": 1807,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateClientVpnRouteResult",
      "description": "Provides functions to construct, parse, and serialize a client VPN route result, including converting between XML nodes, query parameters, and JSON representations. Works with the `ClientVpnRouteStatus.t` type and a structured record type `t` containing route information. Used to handle API responses from AWS for client VPN route management.",
      "description_length": 343,
      "index": 1808,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyEbsDefaultKmsKeyIdRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying the default KMS key ID for EBS volumes, including parsing XML nodes, generating query parameters, and converting to and from JSON format. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to prepare and process API requests in AWS SDK interactions involving EBS encryption settings.",
      "description_length": 392,
      "index": 1809,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIdFormatRequest",
      "description": "Provides operations to construct, parse, and serialize request parameters for an AWS describe ID format operation. Works with string resources and AWS query and JSON data structures. Used to generate HTTP requests and process XML responses from AWS services.",
      "description_length": 258,
      "index": 1810,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribePublicIpv4PoolsResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing public IPv4 pool results, including handling of pool sets and pagination tokens. Works with custom types such as `PublicIpv4PoolSet.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses from services that return public IPv4 pool information, enabling integration with AWS networking tools.",
      "description_length": 421,
      "index": 1811,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetLaunchTemplateDataRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving launch template data, including creating instances with optional dry-run flags and instance IDs. Works with AWS-specific types such as boolean flags, strings, and JSON structures. Used to generate query parameters for API calls and convert between XML and JSON representations in AWS integration workflows.",
      "description_length": 385,
      "index": 1812,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewayVirtualInterfacesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing local gateway virtual interfaces, including setting IDs, filters, pagination, and dry run flags. Works with custom types such as LocalGatewayVirtualInterfaceIdSet, FilterList, and AWS-specific data structures for query and JSON formatting. Used to generate API-compatible request payloads for AWS EC2 operations.",
      "description_length": 391,
      "index": 1813,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVolumeAttributeResult",
      "description": "Provides constructors and parsers for handling AWS volume attribute results, including methods to convert between XML, JSON, and query formats. Works with specific types such as boolean attribute values, product code lists, and string identifiers. Used to process and serialize responses from AWS API calls related to volume configuration details.",
      "description_length": 347,
      "index": 1814,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcsResult",
      "description": "Provides operations to construct, parse, and serialize VPC result data, including converting between XML, JSON, and query formats. Works with VpcList.t and AWS-specific type aliases for handling network configurations. Used to process API responses containing virtual private cloud information and pagination tokens.",
      "description_length": 316,
      "index": 1815,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLocalGatewaysResult",
      "description": "Provides functions to construct, parse, and serialize objects containing local gateway data and pagination tokens. Works with `LocalGatewaySet.t` and AWS-specific types for query and JSON formatting. Used to process API responses from AWS EC2 describing local gateways.",
      "description_length": 269,
      "index": 1816,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribePrefixListsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing prefix lists, including setting dry run flags, filters, result limits, pagination tokens, and specific prefix list IDs. Works with types such as boolean flags, integer limits, string tokens, and lists of filter criteria and resource IDs. Used to generate HTTP query parameters and JSON payloads for API interactions, and to parse XML responses into structured request objects.",
      "description_length": 455,
      "index": 1817,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyLaunchTemplateResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of modifying a launch template, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with the `LaunchTemplate.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses from AWS EC2 when updating launch template configurations.",
      "description_length": 429,
      "index": 1818,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSubnetsResult",
      "description": "Provides operations to construct, parse, and serialize subnet result data, including converting between XML, JSON, and query formats. Works with subnet lists and string tokens to manage network configuration responses. Used to process API outputs from cloud services that return grouped subnet information.",
      "description_length": 306,
      "index": 1819,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetTransitGatewayRouteTableAssociationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving associations of a transit gateway route table, including filtering, pagination, and dry-run support. Works with AWS-specific data types such as strings, integers, booleans, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API calls to fetch route table associations in cloud infrastructure management workflows.",
      "description_length": 423,
      "index": 1820,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CancelBundleTaskResult",
      "description": "Provides operations to construct, parse, and serialize results of bundle task cancellation, including converting between XML nodes, query parameters, and JSON representations. Works with BundleTask.t and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to handle responses from AWS API calls related to bundle task management.",
      "description_length": 344,
      "index": 1821,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifySpotFleetRequestRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying a Spot Fleet request, including setting excess capacity termination policies, launch template configurations, target capacities, and the Spot Fleet request ID. Works with types such as ExcessCapacityTerminationPolicy, LaunchTemplateConfigList, and base types for strings and integers. Used to generate AWS API-compatible query parameters and JSON payloads for updating existing Spot Fleet configurations.",
      "description_length": 481,
      "index": 1822,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssignIpv6AddressesResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the results of assigning IPv6 addresses, including parsing XML responses and converting to query parameters or JSON. Works with custom types for IPv6 address lists and AWS string identifiers. Used to process API responses from services that return assigned IPv6 address information.",
      "description_length": 357,
      "index": 1823,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DetachInternetGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for detaching an internet gateway from a VPC, including converting between XML, query parameters, and JSON formats. Works with AWS base types for boolean, string, and custom request structures. Used to generate HTTP requests for AWS API interactions and process incoming XML responses.",
      "description_length": 349,
      "index": 1824,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeElasticGpusResult",
      "description": "Provides functions to construct, parse, and serialize objects representing the results of describing Elastic GPUs, including handling sets of Elastic GPU objects, pagination tokens, and result limits. Works with custom types such as ElasticGpuSet.t, Integer.t, and String.t for structured data manipulation. Used to process API responses from cloud services, enabling efficient data extraction and transformation for monitoring or management tools.",
      "description_length": 448,
      "index": 1825,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisassociateClientVpnTargetNetworkResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of disassociating a client VPN target network. Works with string and status data types, and AWS-specific query and JSON formats. Used to handle API responses in network management workflows.",
      "description_length": 280,
      "index": 1826,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcClassicLinkResult",
      "description": "Provides operations to construct, parse, and serialize VPC classic link results, including converting between XML, JSON, and query parameters. Works with VpcClassicLinkList.t and AWS-specific data structures for query and JSON formatting. Used to process and transmit VPC classic link information in API responses and requests.",
      "description_length": 327,
      "index": 1827,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeImportImageTasksResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of importing image tasks, including converting between XML, query parameters, and JSON formats. Works with `ImportImageTaskList.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to process API responses from image import operations and prepare data for HTTP requests.",
      "description_length": 376,
      "index": 1828,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableEbsEncryptionByDefaultResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of disabling EBS encryption by default. Works with a record type containing a boolean flag and JSON/XML data formats. Used to process API responses from AWS services that return encryption configuration status.",
      "description_length": 301,
      "index": 1829,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyIdFormatRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying ID formats in AWS operations. Works with string resources and boolean flags to control ID length. Used to generate query parameters and JSON payloads for API interactions requiring format adjustments.",
      "description_length": 278,
      "index": 1830,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ProvisionByoipCidrResult",
      "description": "Provides operations to construct, parse, and serialize a BYOIP CIDR result, including converting between XML nodes, query parameters, and JSON representations. Works with the `ByoipCidr.t` type and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle AWS EC2 BYOIP CIDR allocation responses in API interactions.",
      "description_length": 339,
      "index": 1831,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateFlowLogsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for creating flow logs, including setting parameters like log group, resource IDs, and traffic type. Works with types such as FlowLogResourceIds, TrafficType, and TagSpecificationList. Used to generate AWS API-compatible query strings and JSON payloads for flow log configuration.",
      "description_length": 343,
      "index": 1832,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CreateEgressOnlyInternetGatewayResult",
      "description": "Provides operations to construct, parse, and serialize objects representing the result of creating an egress-only internet gateway, including handling client tokens and gateway details. Works with custom types for egress-only internet gateways and AWS query/json formats. Used to process API responses and prepare data for network configuration tasks.",
      "description_length": 351,
      "index": 1833,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifySpotFleetRequestResponse",
      "description": "Provides functions to construct, parse, and serialize a response structure for modifying a Spot Fleet request, including conversion to query parameters, JSON, and parsing from XML. Works with boolean values and structured data types representing API responses. Used to handle AWS API interactions where Spot Fleet configurations are updated and validated.",
      "description_length": 355,
      "index": 1834,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateIamInstanceProfileRequest",
      "description": "Provides functions to construct, parse, and serialize requests for associating an IAM instance profile with an EC2 instance. Works with `IamInstanceProfileSpecification.t` and `Aws.BaseTypes.String.t` to represent the profile and instance ID. Used to generate HTTP query parameters and JSON payloads for API interactions.",
      "description_length": 321,
      "index": 1835,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcEndpointServiceConfigurationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing VPC endpoint service configurations, including handling dry run flags, service IDs, filters, pagination, and query parameters. Works with types such as boolean flags, lists of service IDs, filter lists, integers, and strings. Used to generate HTTP queries and JSON payloads for API interactions with VPC endpoint services.",
      "description_length": 401,
      "index": 1836,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointConnectionNotificationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying VPC endpoint connection notifications, including setting dry-run flags, updating notification ARNs, and specifying connection events. Works with types such as boolean, string, and list of strings to represent request parameters. Used to update notification configurations for AWS VPC endpoints through API interactions.",
      "description_length": 396,
      "index": 1837,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcTenancyRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying VPC tenancy, including creating a request from a VPC ID and tenancy setting, converting to query parameters, and handling JSON serialization and deserialization. Works with AWS VPC identifiers, tenancy configurations, and XML or JSON data formats. Used to prepare and process API requests for adjusting VPC instance placement policies in cloud infrastructure workflows.",
      "description_length": 446,
      "index": 1838,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFpgaImagesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing FPGA images, including setting parameters like dry run, image IDs, owners, filters, pagination, and result limits. Works with types such as boolean flags, lists of image IDs and owners, filter lists, and pagination tokens. Used to generate HTTP query parameters and JSON payloads for API calls to retrieve FPGA image metadata.",
      "description_length": 405,
      "index": 1839,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyAvailabilityZoneGroupResult",
      "description": "Provides functions to construct, parse, and serialize a result structure representing the outcome of modifying an availability zone group. Works with boolean return values and XML or JSON data formats. Used to handle API responses in AWS-related workflows, converting between internal representations and external data formats.",
      "description_length": 327,
      "index": 1840,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ApplySecurityGroupsToClientVpnTargetNetworkRequest",
      "description": "Provides functions to construct, parse, and serialize requests for associating security groups with a Client VPN target network. Works with types such as client VPN endpoint IDs, VPC IDs, security group ID sets, and boolean flags for dry runs. Used to prepare API requests for AWS EC2 operations involving Client VPN configurations.",
      "description_length": 332,
      "index": 1841,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.CopyFpgaImageResult",
      "description": "Provides operations to construct, parse, and serialize FPGA image result data, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing an optional FPGA image ID. Used to process and transmit results from copying FPGA images in AWS interactions.",
      "description_length": 308,
      "index": 1842,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptReservedInstancesExchangeQuoteResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of an Reserved Instances exchange quote request. Works with a record type containing an optional exchange ID and other related fields. Used to process API responses and prepare data for HTTP queries or JSON serialization.",
      "description_length": 311,
      "index": 1843,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayPrefixListReferenceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for removing a prefix list reference from a transit gateway route table. Works with string identifiers for transit gateway route tables and prefix lists, along with a boolean flag for dry runs. Used to generate HTTP query parameters and JSON representations for API interactions.",
      "description_length": 343,
      "index": 1844,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeDhcpOptionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing DHCP options, including setting DHCP options IDs, filters, dry run flags, pagination tokens, and result limits. Works with custom types such as DHCP options ID lists, filter lists, and JSON/Query representations. Used to generate structured API requests for cloud infrastructure management systems.",
      "description_length": 377,
      "index": 1845,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyDefaultCreditSpecificationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying default credit specifications, including creating instances with specified CPU credits and instance families. Works with types such as boolean flags, instance families, and CPU credit strings. Used to configure EC2 instance defaults in AWS API interactions.",
      "description_length": 334,
      "index": 1846,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.AssociateVpcCidrBlockRequest",
      "description": "Provides functions to construct, parse, and serialize a request for associating a CIDR block with a VPC, including handling IPv4 and IPv6 ranges, VPC identifiers, and network border groups. Works with types such as boolean, string, and custom record structures representing the request parameters. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS VPC services.",
      "description_length": 398,
      "index": 1847,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeAggregateIdFormatResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing aggregate ID format settings, including options for long IDs and status lists. Works with boolean flags and lists of ID format statuses. Used to generate query parameters, JSON representations, and parse XML responses from AWS API calls.",
      "description_length": 317,
      "index": 1848,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeHostsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing hosts, including filtering by host IDs, setting result limits, and handling pagination. Works with custom types such as filter lists, host ID lists, and AWS-specific integer and string types. Used to generate query parameters and JSON payloads for API calls querying host information.",
      "description_length": 363,
      "index": 1849,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotPriceHistoryResult",
      "description": "Provides operations to construct, parse, and serialize objects containing AWS EC2 spot price history data, including handling pagination tokens and structured history lists. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `SpotPriceHistoryList.t`. Used to process XML responses from AWS API calls and convert them into JSON for further processing or storage.",
      "description_length": 377,
      "index": 1850,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReportInstanceStatusRequest",
      "description": "{ description : Aws.BaseTypes.String.t option; dry_run : Aws.BaseTypes.Boolean.t option; end_time : Aws.BaseTypes.DateTime.t option; instances : InstanceIdStringList.t; reason_codes : ReasonCodesList.t; start_time : Aws.BaseTypes.DateTime.t option; status : ReportStatusType.t; } Provides methods to construct, parse, and serialize request data for reporting instance status changes, including handling optional fields like description, dry run flag, timestamps, and status codes. Works with structured data types such as instance ID lists, reason code lists, and date-time values. Used to generate HTTP query parameters and JSON payloads for API interactions with AWS services.",
      "description_length": 678,
      "index": 1851,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportClientVpnClientCertificateRevocationListResult",
      "description": "Provides operations to construct, parse, and serialize a client certificate revocation list result, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing a boolean flag indicating success or failure. Used to process responses from AWS ImportClientVpnClientCertificateRevocationList API calls.",
      "description_length": 362,
      "index": 1852,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyInstanceCreditSpecificationRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying instance credit specifications, including creating with optional dry run and client token, and converting between XML, query, and JSON formats. Works with types such as boolean, string, and custom lists of instance credit specifications. Used to prepare and process API requests for cloud instance configuration adjustments.",
      "description_length": 401,
      "index": 1853,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AssociateRouteTableResult",
      "description": "Provides constructors and parsers for handling AWS route table association results, including building instances with optional association IDs and states. Works with structured data types like `Aws.BaseTypes.String.t` and `RouteTableAssociationState.t`, and supports serialization to query parameters and JSON. Used to process and represent the outcome of associating a route table with a subnet in AWS API responses.",
      "description_length": 417,
      "index": 1854,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateVpcEndpointConnectionNotificationResult",
      "description": "Provides functions to construct, parse, and serialize a VPC endpoint connection notification result, including conversion to query parameters and JSON format. Works with the `ConnectionNotification.t` type and AWS-specific string and JSON types. Used to handle responses from AWS API calls related to VPC endpoint notifications.",
      "description_length": 328,
      "index": 1855,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteClientVpnRouteRequest",
      "description": "Provides functions to construct, parse, and serialize requests for deleting a client VPN route, including setting the client VPN endpoint ID, target subnet ID, destination CIDR block, and dry run flag. Works with string-based identifiers and JSON/Query data formats. Used to generate API-compatible request structures for cloud networking operations.",
      "description_length": 350,
      "index": 1856,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyFleetRequest",
      "description": "Provides operations to construct, parse, and serialize requests for modifying AWS EC2 fleet configurations, including setting dry run flags, excess capacity termination policies, launch template configurations, and target capacity specifications. Works with AWS-specific types such as Boolean, String, and custom record types for fleet and launch template settings. Used to generate HTTP query parameters and JSON payloads for API interactions, and to parse XML responses into structured request objects.",
      "description_length": 504,
      "index": 1857,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DetachNetworkInterfaceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for detaching a network interface, including creating with an attachment ID and optional flags, parsing XML nodes into request structures, and converting between query, JSON, and internal representations. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate API-compatible requests for cloud infrastructure management tasks.",
      "description_length": 430,
      "index": 1858,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeLaunchTemplateVersionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing versions of EC2 launch templates, including filtering by ID, name, version ranges, and pagination parameters. Works with types such as boolean flags, strings, version lists, and JSON structures. Used to retrieve specific launch template versions from AWS EC2, supporting operations like version range queries and result pagination.",
      "description_length": 409,
      "index": 1859,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateNetworkInterfaceRequest",
      "description": "Creates and manipulates network interface request objects with specific parameters such as subnet ID, private IP addresses, security groups, and tags. Works with types like string, boolean, integer, lists of security group IDs, and complex structures for IP addresses and tags. Used to generate AWS API-compatible requests for creating network interfaces with precise configurations.",
      "description_length": 383,
      "index": 1860,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetReservedInstancesExchangeQuoteRequest",
      "description": "Provides operations to construct, parse, and serialize requests for exchanging reserved EC2 instances, including setting dry-run flags, specifying reserved instance IDs, and defining target configurations. Works with custom types such as reserved instance ID sets and target configuration requests. Used to generate HTTP query parameters and JSON representations for API interactions with AWS EC2.",
      "description_length": 397,
      "index": 1861,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetPasswordDataRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving password data, including creating instances with an optional dry run flag, converting to query parameters, and handling JSON serialization and deserialization. Works with string and boolean types for instance identifiers and validation flags, and structured data for HTTP requests. Used to generate and process API calls in cloud infrastructure interactions.",
      "description_length": 437,
      "index": 1862,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeregisterImageRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deregistering an EC2 image, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as image IDs and boolean flags for dry runs. Used to generate HTTP requests for EC2 image management workflows.",
      "description_length": 312,
      "index": 1863,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeHostReservationsRequest",
      "description": "Provides operations to construct, parse, and serialize request parameters for querying host reservations, including filtering, pagination, and identifier sets. Works with custom types such as filter lists, host reservation ID sets, and pagination tokens. Used to generate HTTP query strings and JSON payloads for API interactions with AWS EC2.",
      "description_length": 343,
      "index": 1864,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayRouteResult",
      "description": "Provides operations to construct, parse, and serialize transit gateway route removal results. Works with `TransitGatewayRoute.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses for deleting specific routes in a transit gateway.",
      "description_length": 295,
      "index": 1865,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RebootInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for rebooting EC2 instances, including converting between XML, JSON, and query parameters. Works with instance ID lists and boolean flags for dry runs. Used to generate API-compatible request structures for cloud management workflows.",
      "description_length": 298,
      "index": 1866,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RestoreManagedPrefixListVersionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for restoring a specific version of a managed prefix list. Works with boolean, string, and long data types to represent request parameters. Used to generate HTTP queries and JSON payloads for API interactions involving version restoration.",
      "description_length": 303,
      "index": 1867,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ReplaceRouteTableAssociationRequest",
      "description": "Provides operations to construct, parse, and serialize requests for replacing a route table association, including setting the association ID, route table ID, and optional dry run flag. Works with string-based identifiers and AWS-specific data structures for query and JSON formatting. Used to generate API-compatible requests for network configuration updates in cloud infrastructure.",
      "description_length": 385,
      "index": 1868,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeClassicLinkInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing classic link instances, including handling filters, dry runs, instance IDs, pagination, and query parameters. Works with custom types such as filter lists, boolean flags, instance ID lists, integers, and strings. Used to generate HTTP query strings and JSON payloads for API interactions with AWS EC2.",
      "description_length": 380,
      "index": 1869,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RevokeSecurityGroupEgressResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of revoking egress rules from a security group, including handling boolean return values and lists of IP permissions. Works with custom types such as boolean flags and lists of IP permission records. Used to process API responses and generate query parameters or JSON payloads for network security configuration updates.",
      "description_length": 410,
      "index": 1870,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetCoipPoolUsageRequest",
      "description": "Provides operations to construct, parse, and serialize requests for retrieving information about IP address pool usage, including setting pool identifiers, filters, result limits, pagination tokens, and dry-run flags. Works with types such as strings, integers, boolean flags, and custom filter lists. Used to generate HTTP query parameters and JSON representations for API interactions.",
      "description_length": 387,
      "index": 1871,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.CreateInternetGatewayResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a result structure representing an internet gateway creation. Works with the InternetGateway.t type and AWS query and JSON formats. Used to handle API responses in network configuration workflows.",
      "description_length": 264,
      "index": 1872,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeIdFormatResult",
      "description": "Provides operations to construct, parse, serialize, and deserialize a structured result containing ID format information. Works with XML nodes, AWS query parameters, and JSON structures representing ID format lists. Used to process XML responses from AWS APIs and convert them into a standardized internal representation for further handling.",
      "description_length": 342,
      "index": 1873,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeScheduledInstanceAvailabilityRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying scheduled instance availability, including setting time ranges, recurrence patterns, and filtering options. Works with custom types such as slot time ranges, recurrence configurations, and filter lists. Used to generate AWS API-compatible query parameters and JSON payloads for availability checks.",
      "description_length": 375,
      "index": 1874,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ImportImageRequest",
      "description": "Provides methods to construct, parse, and serialize requests for importing images, including setting attributes like architecture, disk containers, encryption, and tags. Works with types such as strings, boolean flags, lists of disk containers, and JSON structures. Used to generate AWS API-compatible queries and JSON payloads for image import operations.",
      "description_length": 356,
      "index": 1875,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcEndpointServiceConfigurationRequest",
      "description": "Modifies configuration parameters for a VPC endpoint service by allowing updates to service ID, private DNS name, acceptance requirements, and network/gateway load balancer ARNs. It supports parsing XML input, generating query parameters, and serializing/deserializing JSON representations. The module works with AWS-specific types like Boolean, String, and list structures for load balancer ARNs.",
      "description_length": 397,
      "index": 1876,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AcceptTransitGatewayVpcAttachmentRequest",
      "description": "Provides operations to construct, parse, and serialize requests for accepting a transit gateway VPC attachment, including converting between XML, query parameters, and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate and process API requests in interactions with AWS networking services.",
      "description_length": 347,
      "index": 1877,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeInstanceCreditSpecificationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing instance credit specifications, including setting dry run flags, filters, instance IDs, pagination parameters, and converting between XML, query, and JSON formats. Works with types such as boolean flags, filter lists, instance ID lists, integers, and strings. Used to generate structured API requests for cloud infrastructure monitoring and resource management.",
      "description_length": 440,
      "index": 1878,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.EnableTransitGatewayRouteTablePropagationResult",
      "description": "Provides functions to construct, parse, and serialize a transit gateway route table propagation result, including conversion to query parameters and JSON format. Works with the `TransitGatewayPropagation.t` type and AWS-specific data structures. Used to handle API responses related to propagating routes in AWS Transit Gateways.",
      "description_length": 329,
      "index": 1879,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.GetConsoleScreenshotRequest",
      "description": "Provides operations to construct, parse, and serialize requests for capturing a console screenshot of an EC2 instance, including setting dry run flags and instance identifiers. Works with AWS base types such as boolean and string, and JSON or query parameter representations. Used to generate API-compatible request structures for interacting with EC2 console screenshot endpoints.",
      "description_length": 381,
      "index": 1880,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.RejectVpcEndpointConnectionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for rejecting VPC endpoint connections, including creating a request with a service ID and list of endpoint IDs, converting to query parameters, and handling JSON serialization and deserialization. Works with types such as boolean, string, and a list of VPC endpoint IDs. Used to generate structured API requests for AWS VPC endpoint management.",
      "description_length": 409,
      "index": 1881,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeSpotFleetInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for describing instances in a Spot Fleet, including setting dry run flags, limiting results, and handling pagination. Works with AWS-specific types such as boolean, integer, and string, as well as XML and JSON data formats. Used to generate HTTP query parameters for API calls and to convert between XML responses and structured data.",
      "description_length": 398,
      "index": 1882,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DetachVpnGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for detaching a VPN gateway from a VPC, including converting between XML, query parameters, and JSON formats. Works with string-based identifiers for VPCs and VPN gateways, along with a boolean flag for dry runs. Used to generate API-compatible request structures for cloud infrastructure management tasks.",
      "description_length": 370,
      "index": 1883,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.MonitorInstancesResult",
      "description": "Provides functions to construct, parse, and serialize instances of monitored EC2 instances, including converting between XML, query parameters, and JSON formats. Works with instance monitoring data structured as a list of monitoring records. Used to process API responses and prepare data for AWS requests.",
      "description_length": 306,
      "index": 1884,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AuthorizeSecurityGroupIngressRequest",
      "description": "Provides functions to construct, parse, and serialize requests for authorizing inbound traffic to a security group, including setting CIDR ranges, port ranges, IP protocols, and security group references. Works with types such as IP permission lists, strings, integers, and booleans to represent network access rules. Used to generate AWS API-compatible query parameters and JSON payloads for configuring firewall rules in cloud environments.",
      "description_length": 442,
      "index": 1885,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteTransitGatewayMulticastDomainResult",
      "description": "Provides operations to construct, parse, and serialize a structure representing the result of deleting a transit gateway multicast domain. Works with the `TransitGatewayMulticastDomain.t` type and AWS query and JSON formats. Used to generate HTTP requests and process API responses in AWS SDK interactions.",
      "description_length": 306,
      "index": 1886,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.SearchLocalGatewayRoutesResult",
      "description": "Provides operations to construct, parse, and serialize objects representing local gateway route search results, including handling route lists and pagination tokens. Works with `LocalGatewayRouteList.t` and AWS-specific types for query and JSON formatting. Used to process API responses from AWS EC2 when querying local gateway routes.",
      "description_length": 335,
      "index": 1887,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RunScheduledInstancesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for scheduling EC2 instances, including setting client tokens, dry run flags, instance counts, and launch specifications. Works with structured data types like `ScheduledInstancesLaunchSpecification.t` and AWS-specific primitives such as `String.t` and `Integer.t`. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2 scheduling services.",
      "description_length": 436,
      "index": 1888,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeExportImageTasksRequest",
      "description": "Provides operations to construct, parse, and serialize request parameters for exporting image tasks, including setting dry run flags, filters, task IDs, result limits, and pagination tokens. Works with custom types such as boolean flags, filter lists, task ID lists, integers, and strings. Used to generate HTTP query parameters and JSON payloads for API interactions with image export services.",
      "description_length": 395,
      "index": 1889,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteCustomerGatewayRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a customer gateway, including creating with a gateway ID and optional dry run flag, parsing XML responses, and converting to query and JSON formats. Works with AWS-specific types such as strings, booleans, and JSON structures. Used to generate structured API calls for cloud infrastructure management tasks.",
      "description_length": 384,
      "index": 1890,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RevokeSecurityGroupIngressRequest",
      "description": "Provides functions to construct, parse, and serialize requests for revoking ingress rules from a security group. Works with data types such as IP permissions, port ranges, and security group identifiers. Used to generate HTTP query parameters and JSON payloads for API interactions with cloud infrastructure services.",
      "description_length": 317,
      "index": 1891,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.UpdateSecurityGroupRuleDescriptionsEgressResult",
      "description": "Provides operations to construct, parse, and serialize a response structure for updating egress security group rule descriptions, including conversion to query parameters and JSON format. Works with a record type containing a boolean return value. Used to handle API responses in AWS-related workflows where egress rule descriptions are modified.",
      "description_length": 346,
      "index": 1892,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteCarrierGatewayResult",
      "description": "Provides a constructor for creating a result structure associated with a carrier gateway, a parser for XML nodes into this structure, and conversions to query parameters, JSON, and from JSON. Works with the CarrierGateway.t type and JSON and query data structures. Used to process and serialize responses from AWS API calls involving carrier gateway deletions.",
      "description_length": 360,
      "index": 1893,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DisableVgwRoutePropagationRequest",
      "description": "Provides functions to construct, parse, and serialize a request to disable route propagation from a virtual private gateway, working with string-based identifiers and boolean flags. Supports converting the request into query parameters, JSON format, and parsing from XML nodes. Used to interact with AWS EC2 API for managing route table propagations.",
      "description_length": 350,
      "index": 1894,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.RegisterInstanceEventNotificationAttributesRequest",
      "description": "Provides operations to construct, parse, and serialize request data for registering instance event notification attributes, including optional dry run flags and instance tag attributes. Works with boolean flags and custom request types for instance tags. Used to prepare and convert configuration data for API calls related to instance monitoring and event tracking.",
      "description_length": 366,
      "index": 1895,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeVpcAttributeResult",
      "description": "Provides functions to construct, parse, and serialize VPC attribute results, including VPC ID and DNS settings. Works with AWS-specific types such as string, boolean attributes, and JSON structures. Used to process and transmit VPC configuration data from API responses.",
      "description_length": 270,
      "index": 1896,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteLaunchTemplateVersionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting specific versions of EC2 launch templates, including handling boolean flags and version lists. Works with AWS-specific types such as boolean flags, string identifiers, and version lists. Used to generate HTTP queries and JSON payloads for API interactions with Amazon EC2.",
      "description_length": 349,
      "index": 1897,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeNatGatewaysResult",
      "description": "Provides functions to construct, parse, and serialize objects containing a list of NAT gateways and a pagination token. Works with `NatGatewayList.t` and AWS-specific types for query and JSON formatting. Used to process API responses from AWS EC2 describing NAT gateway configurations.",
      "description_length": 285,
      "index": 1898,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.TerminateClientVpnConnectionsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for terminating client VPN connections, including setting endpoint IDs, connection IDs, usernames, and dry-run flags. Works with string and boolean types from Aws.BaseTypes, and JSON and query structures from Aws modules. Used to generate API-compatible payloads for AWS client VPN management operations.",
      "description_length": 367,
      "index": 1899,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.GetCapacityReservationUsageResult",
      "description": "Provides operations to construct, parse, and serialize data related to capacity reservation usage, including methods to create instances with specific attributes like reservation ID, instance type, and usage counts, and to convert between XML, query, and JSON formats. Works with types such as strings, integers, and custom records representing reservation states and instance usage sets. Used to process and exchange detailed capacity reservation data in AWS API interactions.",
      "description_length": 477,
      "index": 1900,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeFastSnapshotRestoresResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the results of describing fast snapshot restores, including handling success sets and pagination tokens. Works with custom types for success sets and AWS-specific string and query structures. Used to process API responses from AWS services that return detailed fast snapshot restore configurations.",
      "description_length": 381,
      "index": 1901,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DescribeHostReservationOfferingsRequest",
      "description": "Provides functions to construct, parse, and serialize requests for describing EC2 host reservation offerings, including filtering by duration, offering ID, and pagination. Works with custom types for filters, integers, strings, and JSON structures. Used to generate API queries for AWS EC2 host reservation information and to process XML or JSON responses.",
      "description_length": 356,
      "index": 1902,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.PurchaseReservedInstancesOfferingRequest",
      "description": "Constructs a request to purchase a reserved instances offering, including parameters such as instance count, offering ID, dry run flag, limit price, and purchase time. Operates on types like integers, strings, dates, and custom price structures. Used to generate API-compatible queries and JSON payloads for cloud infrastructure provisioning.",
      "description_length": 342,
      "index": 1903,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNatGatewayResult",
      "description": "Provides operations to construct, parse, and serialize a result structure associated with deleting a NAT gateway, including converting between XML, query, and JSON formats. Works with string-based identifiers and structured data types for cloud infrastructure management. Used to handle API responses in AWS-related workflows, ensuring consistent data representation across different serialization formats.",
      "description_length": 406,
      "index": 1904,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportClientVpnClientConfigurationResult",
      "description": "Provides functions to construct, parse, and serialize client configuration data for exporting VPN client settings. Works with string-based client configurations and AWS query/json data structures. Used to generate HTTP query parameters and JSON representations for API interactions.",
      "description_length": 282,
      "index": 1905,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.DeleteVpcEndpointConnectionNotificationsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting VPC endpoint connection notifications, including converting between XML, query parameters, and JSON formats. Works with boolean flags, lists of connection notification IDs, and structured data types. Used to generate HTTP requests for AWS API interactions involving VPC endpoint notifications.",
      "description_length": 370,
      "index": 1906,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DescribeEgressOnlyInternetGatewaysResult",
      "description": "Provides functions to construct, parse, and serialize data structures representing the result of describing egress-only internet gateways, including handling lists of gateway objects and pagination tokens. Works with custom types for gateway lists and AWS-specific string and query structures. Used to process API responses from cloud services, enabling integration with tools that require structured data representation.",
      "description_length": 421,
      "index": 1907,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.Types.ModifyFpgaImageAttributeRequest",
      "description": "Provides functions to construct, parse, and serialize requests for modifying attributes of an FPGA image, including setting permissions, descriptions, and names. Works with types such as boolean flags, strings, lists of user IDs and groups, and structured permission modifications. Used to generate AWS API-compatible queries and JSON payloads for updating FPGA image configurations.",
      "description_length": 383,
      "index": 1908,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ModifyVpcTenancyResult",
      "description": "Provides operations to construct, parse, and serialize a result indicating the success of a VPC tenancy modification, using a boolean return value. Works with AWS query parameters, XML nodes, and JSON structures. Used to handle API responses from VPC configuration updates.",
      "description_length": 273,
      "index": 1909,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.ExportTransitGatewayRoutesResult",
      "description": "Provides functions to construct, parse, and serialize a structure representing the result of exporting transit gateway routes, including handling S3 location data. Works with a record type containing optional S3 location information. Used to prepare responses for AWS API calls involving route exports.",
      "description_length": 302,
      "index": 1910,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.AttachNetworkInterfaceRequest",
      "description": "Provides functions to construct, parse, and serialize requests for attaching a network interface to an EC2 instance, including setting device index, instance ID, network interface ID, and optional dry run or network card index. Works with AWS base types such as integers, strings, and JSON structures. Used to generate HTTP query parameters and JSON payloads for API interactions with EC2.",
      "description_length": 389,
      "index": 1911,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.DeleteNetworkInterfacePermissionRequest",
      "description": "Provides operations to construct, parse, and serialize requests for deleting a network interface permission, including setting optional parameters like force and dry_run. Works with string-based identifiers and boolean flags, and handles XML and JSON data formats. Used to generate API-compatible queries and JSON payloads for cloud infrastructure management tasks.",
      "description_length": 365,
      "index": 1912,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types.UpdateSecurityGroupRuleDescriptionsIngressRequest",
      "description": "Provides operations to construct, parse, and serialize requests for updating ingress rule descriptions in a security group, including parsing XML input, generating query parameters, and converting to and from JSON. Works with types such as boolean flags, string identifiers, and lists of IP permission configurations. Used to prepare and process API requests for modifying security group rules in cloud infrastructure workflows.",
      "description_length": 428,
      "index": 1913,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AcceptReservedInstancesExchangeQuote",
      "description": "Handles conversion between native input and HTTP requests for AWS Reserved Instances exchange quotes, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations matching the API specification.",
      "description_length": 366,
      "index": 1914,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AcceptTransitGatewayPeeringAttachment",
      "description": "Converts AWS API input into HTTP requests with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 319,
      "index": 1915,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AcceptTransitGatewayVpcAttachment",
      "description": "Handles AWS EC2 API requests to accept a transit gateway VPC attachment by encoding input parameters into HTTP queries and decoding response data. Processes input structures representing attachment acceptance requests and outputs containing confirmation details. Parses AWS error responses into specific internal error types for accurate handling.",
      "description_length": 347,
      "index": 1916,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AcceptVpcEndpointConnections",
      "description": "Handles AWS VPC endpoint connection acceptance by converting input to HTTP requests and parsing responses. Processes query-encoded API calls for services like EC2, using specific request and response types. Decodes error responses into native error types based on HTTP status and XML content.",
      "description_length": 292,
      "index": 1917,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AcceptVpcPeeringConnection",
      "description": "Converts input parameters into an HTTP request for accepting a VPC peering connection, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML formatting. Handles error parsing by matching HTTP status codes with expected error structures from the API.",
      "description_length": 329,
      "index": 1918,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AdvertiseByoipCidr",
      "description": "Handles AWS BYOIP CIDR advertisement by converting input to HTTP requests and parsing responses. Operates on specific request and result types for EC2 operations, including error decoding from HTTP responses. Processes query-encoded API calls with defined signing versions and service identifiers.",
      "description_length": 297,
      "index": 1919,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AllocateAddress",
      "description": "Handles conversion between native input and HTTP requests for AWS address allocation, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 341,
      "index": 1920,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AllocateHosts",
      "description": "Handles conversion between native input and HTTP requests for AWS host allocation, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 391,
      "index": 1921,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ApplySecurityGroupsToClientVpnTargetNetwork",
      "description": "Converts input parameters into an HTTP request for applying security groups to a Client VPN target network, including setting action and version parameters. Processes HTTP responses to extract results or decode specific AWS error types based on status codes. Operates on structured request and response types defined for EC2 Client VPN operations.",
      "description_length": 347,
      "index": 1922,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssignIpv6Addresses",
      "description": "Handles AWS EC2 API requests for assigning IPv6 addresses by converting between native input and HTTP requests, and decoding HTTP responses into structured outputs. Processes input of type `Types.AssignIpv6AddressesRequest.t` and produces output of type `Types.AssignIpv6AddressesResult.t`. Parses AWS error responses into service-specific errors based on HTTP status codes and XML content.",
      "description_length": 390,
      "index": 1923,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AssignPrivateIpAddresses",
      "description": "Handles request signing and HTTP conversion for assigning private IP addresses in AWS EC2. Converts input data into HTTP requests and parses HTTP responses into structured outputs or specific error types. Processes AWS error responses to map them to native error representations based on HTTP status and XML content.",
      "description_length": 316,
      "index": 1924,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AssociateAddress",
      "description": "Handles AWS EC2 address association by converting request inputs to HTTP format and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Designed for direct integration with HTTP clients and AWS API interactions.",
      "description_length": 339,
      "index": 1925,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssociateClientVpnTargetNetwork",
      "description": "Handles AWS API requests for associating a target network with a Client VPN endpoint. Converts input parameters to HTTP requests and parses HTTP responses into structured outputs or errors. Processes AWS error responses into native error types based on specified status codes and XML content.",
      "description_length": 292,
      "index": 1926,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AssociateDhcpOptions",
      "description": "Handles AWS request signing and HTTP conversion for associating DHCP options with a VPC. Converts input parameters into signed HTTP requests and parses response bodies into structured outputs or errors. Processes AWS error responses by mapping them to internal error types based on status codes and XML content.",
      "description_length": 311,
      "index": 1927,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AssociateEnclaveCertificateIamRole",
      "description": "Handles request signing and HTTP conversion for associating an enclave certificate with an IAM role. Processes input containing certificate and role details, generates signed HTTP requests, and decodes responses into structured output or error types. Parses AWS error responses into domain-specific error representations based on HTTP status and XML content.",
      "description_length": 358,
      "index": 1928,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssociateIamInstanceProfile",
      "description": "Handles AWS IAM instance profile association by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on specific request and result types defined in the AWS API, including error handling for malformed or unexpected responses. Used to programmatically link IAM roles to EC2 instances via the AWS API.",
      "description_length": 355,
      "index": 1929,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssociateRouteTable",
      "description": "Handles AWS EC2 route table association by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Designed for direct interaction with the EC2 API to manage route table associations.",
      "description_length": 365,
      "index": 1930,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssociateSubnetCidrBlock",
      "description": "Handles the conversion of subnet CIDR block association requests into HTTP format and parses responses, using specific input and output types derived from AWS EC2 API definitions. Processes error responses by matching HTTP status codes with expected error structures from the API. Designed for direct integration with AWS API interactions, particularly for managing subnet CIDR block associations.",
      "description_length": 397,
      "index": 1931,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AssociateTransitGatewayMulticastDomain",
      "description": "Handles the conversion of request parameters into HTTP format for associating a multicast domain with a transit gateway, using specific input and output types derived from AWS EC2 definitions. Decodes HTTP responses into structured results or error representations based on predefined AWS error formats. Processes AWS error responses by mapping them to internal error types according to specified HTTP status codes and error codes.",
      "description_length": 431,
      "index": 1932,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssociateTransitGatewayRouteTable",
      "description": "Handles the conversion of request inputs into HTTP format for associating a transit gateway route table with a resource, using specific AWS signing methods. Processes HTTP responses to extract structured results or decode error information according to AWS specifications. Operates on input and output types defined by the AWS EC2 API, tailored for transit gateway route table associations.",
      "description_length": 390,
      "index": 1933,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AssociateVpcCidrBlock",
      "description": "Handles AWS VPC CIDR block association by converting input parameters into HTTP requests and parsing responses. Processes input of type `Types.AssociateVpcCidrBlockRequest.t` and returns results or errors of type `Types.AssociateVpcCidrBlockResult.t` or `Errors_internal.t`. Manages request signing, query encoding, and error decoding for EC2 API interactions.",
      "description_length": 360,
      "index": 1934,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AttachClassicLinkVpc",
      "description": "Handles AWS EC2 classic link VPC attachment by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Designed for direct interaction with the EC2 service to link EC2-Classic instances to a VPC.",
      "description_length": 377,
      "index": 1935,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AttachInternetGateway",
      "description": "Handles AWS EC2 internet gateway attachment by converting input parameters into signed HTTP requests and parsing responses. Processes query-encoded API calls with specific input and error types, using HTTP status codes and XML content for error detection. Manages request signing and response decoding for direct interaction with the EC2 service.",
      "description_length": 346,
      "index": 1936,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AttachNetworkInterface",
      "description": "Handles conversion of network interface attachment requests into HTTP format and decodes responses from AWS. Processes input containing network interface and instance identifiers, producing results with attachment details. Parses AWS error responses into structured error types for specific API interactions.",
      "description_length": 308,
      "index": 1937,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.AttachVolume",
      "description": "Handles AWS volume attachment requests by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `Types.AttachVolumeRequest.t` and produces output of type `Types.VolumeAttachment.t`, with error handling for AWS-specific error responses. Used to programmatically attach volumes to EC2 instances via the AWS API.",
      "description_length": 385,
      "index": 1938,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AttachVpnGateway",
      "description": "Handles AWS EC2 VPN gateway attachment by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to integrate with AWS EC2 API for programmatically attaching VPN gateways to VPCs.",
      "description_length": 367,
      "index": 1939,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AuthorizeClientVpnIngress",
      "description": "Handles AWS Client VPN ingress authorization by converting input requests to HTTP format and parsing HTTP responses into structured results. Processes input containing Client VPN configuration details and returns outcomes with associated error handling. Specifically manages request signing, query encoding, and error decoding for AWS EC2 API interactions.",
      "description_length": 356,
      "index": 1940,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AuthorizeSecurityGroupEgress",
      "description": "Handles AWS EC2 security group egress rule authorization by converting request inputs to HTTP format and parsing responses. Operates on structured request and error types specific to EC2 API interactions. Used to programmatically update network access controls in cloud infrastructure.",
      "description_length": 285,
      "index": 1941,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.AuthorizeSecurityGroupIngress",
      "description": "Handles AWS security group ingress rule creation by converting input requests into HTTP format and parsing responses. Operates on structured input representing security group ingress parameters and returns no meaningful output. Processes HTTP responses to detect and translate AWS-specific error codes into internal error representations.",
      "description_length": 338,
      "index": 1942,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.BundleInstance",
      "description": "Handles conversion between native input and HTTP requests for AWS BundleInstance operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Works with AWS request signing configurations, service identifiers, and structured data types for bundle instance actions.",
      "description_length": 396,
      "index": 1943,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CancelBundleTask",
      "description": "Handles conversion between native input and HTTP requests for AWS bundle task cancellation, encoding parameters into query format and setting action-specific headers. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Parses AWS error responses into domain-specific errors, validating status codes and error codes against predefined specifications.",
      "description_length": 409,
      "index": 1944,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelCapacityReservation",
      "description": "Handles AWS API requests for canceling capacity reservations by converting input data into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific input and output types representing reservation cancellation requests and results, along with error types for AWS-specific error handling. Used to send signed API calls to AWS services like EC2 and process their responses accurately.",
      "description_length": 411,
      "index": 1945,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelConversionTask",
      "description": "Handles conversion task cancellation by encoding requests into HTTP format with specified signing and service parameters. Decodes HTTP responses into success or error states, including parsing AWS-specific error messages against defined schemas. Works with input structures representing conversion requests and error types from internal AWS error definitions.",
      "description_length": 359,
      "index": 1946,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelExportTask",
      "description": "Handles conversion between native input and HTTP requests for AWS export task cancellation, encoding parameters into query format and setting action-specific fields. Processes HTTP responses to extract results or decode specific AWS error formats based on status codes. Works with AWS request signing configurations and service-specific endpoints.",
      "description_length": 347,
      "index": 1947,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelImportTask",
      "description": "Handles conversion between native input and HTTP requests for AWS import task cancellation, encoding parameters into query format and setting action-specific fields. Processes HTTP responses into structured output or error representations based on AWS XML deserialization. Parses AWS error responses into service-specific error types, validating status codes and error codes against expected values.",
      "description_length": 399,
      "index": 1948,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelReservedInstancesListing",
      "description": "Handles the conversion of request inputs into HTTP format for AWS EC2 operations, specifically for canceling reserved instances listings. Processes HTTP responses and maps them to structured output or error types defined by the EC2 API. Parses AWS error responses into native error representations for precise error handling.",
      "description_length": 325,
      "index": 1949,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelSpotFleetRequests",
      "description": "Handles AWS Spot Fleet request cancellation by encoding and decoding HTTP requests and responses. Processes input containing Spot Fleet request IDs and returns cancellation status or errors. Parses AWS error responses into native error types for specific API validation.",
      "description_length": 270,
      "index": 1950,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CancelSpotInstanceRequests",
      "description": "Handles AWS EC2 spot instance request cancellation by converting input data into signed HTTP requests and parsing response bodies. Processes query-encoded API calls with specific request and response types tied to EC2's cancel spot instance functionality. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 350,
      "index": 1951,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ConfirmProductInstance",
      "description": "Handles conversion between native input and HTTP requests for AWS product instance confirmation, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 379,
      "index": 1952,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CopyFpgaImage",
      "description": "Handles conversion between native input and HTTP requests for copying an FPGA image, setting necessary parameters like Action and Version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors matching the API's defined set.",
      "description_length": 331,
      "index": 1953,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CopyImage",
      "description": "Converts AWS CopyImage requests into HTTP format and handles response decoding, including error parsing based on HTTP status codes and XML content. Operates on input and output types specific to the CopyImage API, along with AWS error responses. Used to construct and process CopyImage API calls within an AWS SDK workflow.",
      "description_length": 323,
      "index": 1954,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CopySnapshot",
      "description": "Handles AWS snapshot copying by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific AWS service signing and validates error responses against defined API specifications. Works with AWS-specific request and response types, including error parsing for snapshot-related operations.",
      "description_length": 379,
      "index": 1955,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateCapacityReservation",
      "description": "Handles AWS request signing and HTTP conversion for capacity reservation operations. Converts input data structures into HTTP requests and parses HTTP responses into result or error types specific to the API. Processes AWS error responses and maps them to internal error representations based on status codes and XML content.",
      "description_length": 325,
      "index": 1956,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateCarrierGateway",
      "description": "Handles conversion between native input and HTTP requests for creating a carrier gateway, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error codes against defined specifications.",
      "description_length": 398,
      "index": 1957,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateClientVpnEndpoint",
      "description": "Generates AWS HTTP requests for creating a client VPN endpoint, encoding input parameters into query format and setting necessary action and version headers. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 361,
      "index": 1958,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateClientVpnRoute",
      "description": "Generates HTTP requests for creating client VPN routes, encoding input parameters into query format and setting necessary action and version headers. Processes HTTP responses to extract results or decode specific AWS error formats based on status codes. Operates on structured request and response types defined in the module's type definitions.",
      "description_length": 345,
      "index": 1959,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateCustomerGateway",
      "description": "Handles AWS request signing and HTTP conversion for creating a customer gateway. Converts input parameters into HTTP requests with proper encoding and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types based on specified status codes and error definitions.",
      "description_length": 316,
      "index": 1960,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateDefaultSubnet",
      "description": "Handles conversion between native input and HTTP requests for creating a default subnet in AWS, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 378,
      "index": 1961,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateDefaultVpc",
      "description": "Handles conversion of input parameters into AWS HTTP requests for creating a default VPC, including proper query encoding and setting action/version parameters. Processes HTTP responses to extract structured results or specific error representations based on AWS XML formatting. Works with AWS service-specific request and response types, particularly for EC2-related operations.",
      "description_length": 379,
      "index": 1962,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateDhcpOptions",
      "description": "Handles conversion between native DHCP options request data and HTTP requests, including encoding parameters and setting action/version. Processes HTTP responses into structured results or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS EC2 API to create DHCP options sets.",
      "description_length": 321,
      "index": 1963,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateEgressOnlyInternetGateway",
      "description": "Handles the conversion of input parameters into an HTTP request for creating an egress-only internet gateway, encoding necessary query parameters and setting the appropriate action and version. Processes HTTP responses to extract results or specific AWS error codes, ensuring proper mapping between HTTP status codes and API-defined errors. Operates on structured input and output types representing the request and response for this specific EC2 API operation.",
      "description_length": 461,
      "index": 1964,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateFleet",
      "description": "Handles conversion of CreateFleet requests into HTTP format and parses responses, including error decoding. Operates on input containing fleet configuration details, output containing fleet creation results, and error structures from AWS API responses. Used to construct and interpret CreateFleet API calls within AWS SDK integration.",
      "description_length": 334,
      "index": 1965,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateFlowLogs",
      "description": "Handles conversion of flow log creation requests into HTTP format and decodes responses. Processes input containing flow log parameters and outputs results or specific AWS error types. Parses HTTP error responses into structured error representations based on defined API specifications.",
      "description_length": 287,
      "index": 1966,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateFpgaImage",
      "description": "Converts AWS API input to HTTP requests and handles response decoding for FPGA image creation. Processes structured input and output types specific to the CreateFpgaImage API, including error parsing based on HTTP status and XML content. Used to generate signed HTTP requests and interpret API responses in AWS integration workflows.",
      "description_length": 333,
      "index": 1967,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateImage",
      "description": "Converts input data into an HTTP request for AWS API calls, encoding parameters and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 326,
      "index": 1968,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateInstanceExportTask",
      "description": "Handles conversion between native input and HTTP requests for creating EC2 instance export tasks, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 406,
      "index": 1969,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateInternetGateway",
      "description": "Handles AWS EC2 internet gateway creation by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Designed for direct integration with HTTP clients and AWS API interactions.",
      "description_length": 358,
      "index": 1970,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateKeyPair",
      "description": "Handles creation of AWS key pairs by converting input data into signed HTTP requests and parsing HTTP responses. Processes AWS-specific error structures and maps them to internal error types. Works with request and response data structures tailored for the EC2 service.",
      "description_length": 269,
      "index": 1971,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateLaunchTemplate",
      "description": "Handles conversion between native input and HTTP requests for AWS launch template creation, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 369,
      "index": 1972,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateLaunchTemplateVersion",
      "description": "Handles conversion between native input and HTTP requests for creating a new version of an EC2 launch template, including proper query encoding and setting action and version parameters. Processes HTTP responses to extract results or specific AWS error types, ensuring validation against expected status codes and error structures. Works with input and output types defined in the EC2 API, enabling precise interaction with the AWS API for launch template versioning.",
      "description_length": 467,
      "index": 1973,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateLocalGatewayRoute",
      "description": "Handles conversion between native input and HTTP requests for creating a local gateway route, encoding parameters into query format and setting necessary request fields. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 413,
      "index": 1974,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateLocalGatewayRouteTableVpcAssociation",
      "description": "Handles the creation of an association between a local gateway route table and a VPC by converting input parameters into HTTP requests and parsing response data. Operates on structured request and result types specific to AWS EC2 API interactions. Processes HTTP responses to extract success outcomes or detailed error information from AWS service calls.",
      "description_length": 354,
      "index": 1975,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateManagedPrefixList",
      "description": "Converts AWS API input to HTTP requests and handles response decoding for creating managed prefix lists. Operates on structured request and result types specific to the EC2 service, including error parsing from XML responses. Used to generate properly signed HTTP requests and process server-side outcomes in AWS SDK integration.",
      "description_length": 329,
      "index": 1976,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateNatGateway",
      "description": "Handles creation of a NAT gateway in AWS EC2 by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on specific request and response types defined in the AWS EC2 API, including error decoding based on HTTP status codes. Used to initialize and manage NAT gateway resources through direct API interaction.",
      "description_length": 366,
      "index": 1977,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateNetworkAcl",
      "description": "Encodes and decodes AWS API requests and responses for network ACL creation, handling query parameters and HTTP formatting. Processes input of type CreateNetworkAclRequest and outputs results or errors of type CreateNetworkAclResult or Errors_internal. Parses HTTP responses to extract structured results or specific error conditions based on status codes and XML content.",
      "description_length": 372,
      "index": 1978,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateNetworkAclEntry",
      "description": "Handles conversion between native input and HTTP requests for creating a network ACL entry, encoding parameters in query format and setting necessary action and version fields. Processes HTTP responses to extract results or decode specific AWS error structures. Designed for direct interaction with AWS EC2 API endpoints using defined input and error types.",
      "description_length": 357,
      "index": 1979,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateNetworkInterface",
      "description": "Converts AWS CreateNetworkInterface requests into HTTP format and handles response decoding. Processes input containing network interface parameters and outputs resulting interface data or service-specific errors. Parses HTTP responses to extract structured results or error details based on defined API specifications.",
      "description_length": 319,
      "index": 1980,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateNetworkInterfacePermission",
      "description": "Handles the creation of network interface permissions by converting input data into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific AWS request and response types, including error representations tied to the EC2 service. Used to interact with AWS API endpoints for managing network interface permissions through direct request signing and response decoding.",
      "description_length": 396,
      "index": 1981,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreatePlacementGroup",
      "description": "Handles AWS API requests for creating placement groups by converting between native input and HTTP formats, and decoding responses into structured outputs or errors. Operates on specific AWS request and response types, including error representations from the API. Used to construct and process CreatePlacementGroup API calls within AWS SDK integration.",
      "description_length": 353,
      "index": 1982,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateReservedInstancesListing",
      "description": "Handles request signing and HTTP conversion for creating reserved instances listings in AWS EC2. Processes input structured as a reserved instances listing request and returns results or service-specific errors. Converts between HTTP requests and native types, including parsing error responses from AWS.",
      "description_length": 304,
      "index": 1983,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateRoute",
      "description": "Handles conversion of route creation requests into HTTP format, including encoding parameters and setting action/version. Processes HTTP responses to extract results or specific AWS error structures. Works with input and output types representing route creation requests and results, and error types for AWS-specific error decoding.",
      "description_length": 332,
      "index": 1984,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateRouteTable",
      "description": "Handles AWS route table creation by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific AWS service signing and decodes XML error responses into typed error representations. Used to interact with AWS EC2 API for programmatic route table management.",
      "description_length": 349,
      "index": 1985,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateSecurityGroup",
      "description": "Handles AWS EC2 security group creation by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded HTTP requests and responses using specific input, output, and error types tied to the EC2 API. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 321,
      "index": 1986,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateSnapshot",
      "description": "Handles conversion between native input and HTTP requests for creating AWS snapshots, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service identifiers, request signatures, and custom error parsing for snapshot operations.",
      "description_length": 346,
      "index": 1987,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateSnapshots",
      "description": "Converts native input data into HTTP requests for AWS operations, handling query encoding and required parameters like Action and Version. Parses HTTP responses into structured output or specific error types based on AWS XML formatting and status codes. Designed for direct interaction with AWS services by translating between internal representations and HTTP protocols.",
      "description_length": 371,
      "index": 1988,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateSpotDatafeedSubscription",
      "description": "Handles conversion between native input and HTTP requests for creating a Spot Datafeed subscription, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 383,
      "index": 1989,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateSubnet",
      "description": "Handles conversion between native subnet creation requests and HTTP format, including signing and encoding. Processes input of type CreateSubnetRequest and outputs CreateSubnetResult, with error handling for AWS-specific responses. Parses HTTP error responses into structured error types based on status code and XML content.",
      "description_length": 325,
      "index": 1990,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateTags",
      "description": "Handles AWS request signing and HTTP conversion for tag creation operations. Converts input data into HTTP requests with proper encoding and parses HTTP responses into native error or success states. Works with AWS service identifiers, request inputs, and error responses specific to the CreateTags API.",
      "description_length": 303,
      "index": 1991,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTrafficMirrorFilter",
      "description": "Handles the conversion of input parameters into an HTTP request for creating a traffic mirror filter, including encoding and setting action/version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML formatting. Works with structured input and output types defined in the AWS EC2 API, and parses AWS error responses into native error representations.",
      "description_length": 395,
      "index": 1992,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateTrafficMirrorFilterRule",
      "description": "Handles the conversion of request inputs into HTTP format for creating a traffic mirror filter rule, including proper encoding and setting of action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS service conventions. Works with structured request and response types defined for the EC2 service.",
      "description_length": 352,
      "index": 1993,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTrafficMirrorSession",
      "description": "Handles the conversion of input parameters into an HTTP request for creating a traffic mirror session, including encoding and setting action/version parameters. Processes HTTP responses to extract results or specific error details based on AWS XML formatting. Works with structured input and output types defined in the AWS API specification for EC2-related operations.",
      "description_length": 369,
      "index": 1994,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateTrafficMirrorTarget",
      "description": "Handles creation of a traffic mirror target by encoding request parameters into HTTP queries and decoding responses. Operates on input containing target configuration and output containing the created target's details, with error parsing for AWS-specific response formats. Used to interact directly with AWS EC2 API for network traffic mirroring setup.",
      "description_length": 352,
      "index": 1995,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTransitGateway",
      "description": "Handles conversion of input parameters into AWS HTTP requests for creating a transit gateway, including proper query encoding and setting action/version parameters. Processes HTTP responses to extract structured results or specific error conditions based on AWS XML formatting. Works with native request and response types specific to the EC2 service, enabling direct integration with AWS API interactions.",
      "description_length": 406,
      "index": 1996,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTransitGatewayMulticastDomain",
      "description": "Converts input parameters into an HTTP request for creating a transit gateway multicast domain, including setting action and version parameters. Processes HTTP responses to extract results or specific AWS error types based on status codes. Operates on structured request and response types defined for EC2 API interactions.",
      "description_length": 323,
      "index": 1997,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTransitGatewayPeeringAttachment",
      "description": "Handles the creation of a transit gateway peering attachment by encoding request parameters into HTTP queries and decoding response data. Operates on structured input and output types specific to AWS EC2 API operations. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 298,
      "index": 1998,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTransitGatewayPrefixListReference",
      "description": "Handles the conversion of request inputs into HTTP format for creating a transit gateway prefix list reference, including setting action and version parameters. Processes HTTP responses to extract results or decode specific AWS error structures. Operates on native request and result types defined in the EC2 API, tailored for transit gateway operations.",
      "description_length": 354,
      "index": 1999,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTransitGatewayRoute",
      "description": "Handles the creation of a transit gateway route by encoding request parameters into HTTP queries and decoding response data. Operates on structured input and output types representing route configuration and results, along with error types for AWS-specific failures. Used to construct and process HTTP requests for AWS EC2 API interactions involving route table updates.",
      "description_length": 370,
      "index": 2000,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateTransitGatewayRouteTable",
      "description": "Handles the creation of a transit gateway route table in AWS EC2 by converting input parameters into HTTP requests and parsing corresponding responses. Operates on structured input and output types specific to the EC2 API, including request and result objects. Processes HTTP interactions for API calls, including error decoding and validation against expected response formats.",
      "description_length": 378,
      "index": 2001,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateTransitGatewayVpcAttachment",
      "description": "Handles the creation of a transit gateway VPC attachment by encoding request parameters into HTTP queries and decoding response data. Operates on input containing VPC and transit gateway identifiers, and produces output with attachment details. Parses AWS error responses to identify specific API errors during the attachment process.",
      "description_length": 334,
      "index": 2002,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateVolume",
      "description": "Handles AWS EC2 volume creation requests by converting input parameters into signed HTTP requests and parsing HTTP responses into structured volume data. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to interact with the EC2 API for programmatic volume provisioning and management.",
      "description_length": 372,
      "index": 2003,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateVpc",
      "description": "Converts native VPC creation requests into HTTP requests with proper query encoding and sets action and version parameters. Parses HTTP responses into structured VPC results or specific AWS error types based on XML content and status codes. Works with input containing VPC configuration details and output returning created VPC identifiers and attributes.",
      "description_length": 355,
      "index": 2004,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateVpcEndpoint",
      "description": "Handles conversion between native input and HTTP requests for creating a VPC endpoint, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into result or error types specific to VPC endpoint creation. Parses AWS error responses into internal error representations based on HTTP status and XML content.",
      "description_length": 359,
      "index": 2005,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateVpcEndpointConnectionNotification",
      "description": "Handles the creation of a VPC endpoint connection notification by encoding request parameters into HTTP queries and decoding response data. Operates on input containing notification configuration and produces output with endpoint details or specific AWS error types. Used to interact with AWS services like EC2, ensuring correct request signing and error handling for connection notifications.",
      "description_length": 393,
      "index": 2006,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateVpcEndpointServiceConfiguration",
      "description": "Handles conversion between native input and HTTP requests for creating a VPC endpoint service configuration, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS service conventions. Parses AWS error responses into internal error representations, validating against expected status codes and error types.",
      "description_length": 422,
      "index": 2007,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateVpcPeeringConnection",
      "description": "Converts input parameters into an HTTP request for creating a VPC peering connection, encoding necessary query parameters and setting the appropriate service and signing version. Processes HTTP responses to extract results or specific AWS error details based on the response structure. Works with native request and result types, as well as error representations from AWS XML responses.",
      "description_length": 386,
      "index": 2008,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateVpnConnection",
      "description": "Handles conversion between native input and HTTP requests for creating a VPN connection, including encoding parameters and setting action/version. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with input and output types defined in the API specification for VPN connection operations.",
      "description_length": 340,
      "index": 2009,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.CreateVpnConnectionRoute",
      "description": "Handles conversion between native input and HTTP requests for creating a VPN connection route, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into a unit type or specific error structures. Parses AWS error responses to map them to internal error types based on HTTP status and XML content.",
      "description_length": 352,
      "index": 2010,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.CreateVpnGateway",
      "description": "Handles creation of an AWS VPN gateway by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Operates on input containing gateway configuration and output representing the created gateway's details, along with error types specific to AWS API responses. Processes HTTP request encoding, response decoding, and error validation for VPN gateway operations.",
      "description_length": 408,
      "index": 2011,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteCarrierGateway",
      "description": "Handles AWS API requests for deleting a carrier gateway by converting input to HTTP requests and parsing HTTP responses into structured outputs. Operates on specific input and output types representing the delete carrier gateway request and result, along with error types for AWS-specific error handling. Used to send signed HTTP requests to AWS services like EC2 and process the resulting XML responses.",
      "description_length": 404,
      "index": 2012,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteClientVpnEndpoint",
      "description": "Handles AWS API requests to delete a Client VPN endpoint by encoding input parameters into HTTP queries and decoding response data. Processes input of type DeleteClientVpnEndpointRequest and returns output of type DeleteClientVpnEndpointResult, with error handling for AWS-specific error responses. Uses defined error parsing to map HTTP status codes and XML error structures to internal error types.",
      "description_length": 400,
      "index": 2013,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteClientVpnRoute",
      "description": "Handles AWS Client VPN route deletion by encoding request parameters into HTTP queries and decoding response data. Processes input containing route configuration and returns result or service-specific errors. Parses HTTP responses to identify and structure AWS error codes for precise troubleshooting.",
      "description_length": 301,
      "index": 2014,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteCustomerGateway",
      "description": "Handles AWS EC2 customer gateway deletion by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific error handling for AWS XML responses. Works with request and error types defined in the EC2 API specification.",
      "description_length": 260,
      "index": 2015,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteDhcpOptions",
      "description": "Handles AWS EC2 requests to delete DHCP options sets by converting input to HTTP requests and parsing responses. Operates on structured input representing a DHCP options deletion request and returns no output on success. Processes HTTP responses to detect and translate AWS-specific errors into internal error types.",
      "description_length": 316,
      "index": 2016,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteEgressOnlyInternetGateway",
      "description": "Handles the deletion of an egress-only internet gateway by encoding and decoding HTTP requests and responses. Operates on input containing the gateway ID and produces output confirming the deletion or an error. Parses AWS-specific error responses to provide structured error information for failed operations.",
      "description_length": 309,
      "index": 2017,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteFleets",
      "description": "Handles AWS API requests for deleting fleets by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs. Processes input containing fleet identifiers and configuration, returning results or specific error types based on API responses. Utilizes AWS signing protocols and query encoding to interact with services like EC2.",
      "description_length": 363,
      "index": 2018,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteFlowLogs",
      "description": "Handles AWS EC2 flow log deletion by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Processes query-encoded API calls with specific request and response formats tied to AWS service signing. Decodes AWS error responses into internal error types for precise error handling.",
      "description_length": 330,
      "index": 2019,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteFpgaImage",
      "description": "Handles AWS FPGA image deletion by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on input containing image identifiers and outputs confirming deletion status, along with internal error representations. Processes AWS error responses to map them to specific API errors based on HTTP status and XML content.",
      "description_length": 373,
      "index": 2020,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteInternetGateway",
      "description": "Handles AWS EC2 internet gateway deletion by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific input and output types, including error decoding from XML. Used to interface directly with AWS EC2 service for gateway management tasks.",
      "description_length": 286,
      "index": 2021,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteKeyPair",
      "description": "Handles AWS key pair deletion by converting input to HTTP requests and parsing responses. Processes input containing key pair identifiers and returns no output on success. Parses AWS error responses into native error types for specific API validation.",
      "description_length": 251,
      "index": 2022,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteLaunchTemplate",
      "description": "Handles the conversion of input parameters into an HTTP request for deleting an EC2 launch template, including proper query encoding and setting action-specific parameters. Processes HTTP responses to extract result data or specific error information based on AWS XML formatting. Designed for direct interaction with the EC2 service to manage launch template deletions.",
      "description_length": 369,
      "index": 2023,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteLaunchTemplateVersions",
      "description": "Handles AWS EC2 launch template version deletion by converting input to HTTP requests and parsing responses. Operates on structured request and result types specific to the DeleteLaunchTemplateVersions API. Processes HTTP payloads to extract success outcomes or error details based on defined AWS error formats.",
      "description_length": 311,
      "index": 2024,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteLocalGatewayRoute",
      "description": "Handles AWS EC2 route deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls with specific request and response formats for route management. Decodes error responses into structured error types based on HTTP status and XML content.",
      "description_length": 303,
      "index": 2025,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteLocalGatewayRouteTableVpcAssociation",
      "description": "Handles the conversion of request inputs into HTTP format for deleting a VPC association with a local gateway route table, and decodes HTTP responses into structured outputs. Operates on specific AWS request and response types related to EC2 resource management. Processes error responses by mapping AWS XML errors to internal error representations based on HTTP status codes.",
      "description_length": 376,
      "index": 2026,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteManagedPrefixList",
      "description": "Handles AWS API requests for deleting managed prefix lists by converting input to HTTP requests and parsing HTTP responses into structured outputs. Operates on specific request and result types defined in the AWS SDK, including error handling for API-specific responses. Used to interface with AWS services like EC2, ensuring proper request signing and error decoding.",
      "description_length": 368,
      "index": 2027,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteNatGateway",
      "description": "Handles AWS EC2 NAT gateway deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls with specific request and response types tied to EC2's delete NAT gateway operation. Parses AWS error responses into native error types based on HTTP status and XML content.",
      "description_length": 328,
      "index": 2028,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteNetworkAcl",
      "description": "Handles AWS EC2 network ACL deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls with specific request and response formats, using defined input and error types. Decodes error responses from AWS API to native error representations based on HTTP status and XML content.",
      "description_length": 342,
      "index": 2029,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteNetworkAclEntry",
      "description": "Handles AWS EC2 network ACL entry deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded HTTP requests and responses for the EC2 service, using specific input and error types defined in the AWS API. Directly interacts with AWS infrastructure to remove specified network ACL entries.",
      "description_length": 344,
      "index": 2030,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteNetworkInterface",
      "description": "Handles AWS EC2 network interface deletion by converting input parameters into signed HTTP requests and parsing responses. Processes query-encoded API calls with specific input and output types, including error decoding based on HTTP status codes. Designed for direct interaction with the EC2 service to manage network interface resources.",
      "description_length": 339,
      "index": 2031,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteNetworkInterfacePermission",
      "description": "Handles AWS EC2 network interface permission deletion by converting input to HTTP requests and parsing responses. Processes query-encoded HTTP requests and responses for the specific `DeleteNetworkInterfacePermission` action. Uses native request and response types to manage EC2 resource permissions.",
      "description_length": 300,
      "index": 2032,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeletePlacementGroup",
      "description": "Handles AWS EC2 placement group deletion by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific error handling for AWS XML responses. Works with request and error types defined in AWS EC2 specifications.",
      "description_length": 256,
      "index": 2033,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteQueuedReservedInstances",
      "description": "Handles AWS EC2 operations for deleting queued reserved instances by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific request and response types tied to EC2's delete functionality. Decodes error responses into native error types based on HTTP status and XML content.",
      "description_length": 322,
      "index": 2034,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteRoute",
      "description": "Handles AWS route deletion by converting request inputs to HTTP format and parsing responses. Processes inputs with specific route parameters and outputs no data upon success. Parses AWS error responses into native error types based on HTTP status and XML content.",
      "description_length": 264,
      "index": 2035,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteRouteTable",
      "description": "Handles AWS EC2 route table deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded requests and decodes error responses from AWS API calls. Works with structured input representing route table identifiers and returns no output on success.",
      "description_length": 300,
      "index": 2036,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteSecurityGroup",
      "description": "Handles AWS security group deletion by converting input parameters into signed HTTP requests and parsing responses. Operates on structured request and error types specific to AWS EC2 operations. Processes HTTP interactions for programmatic security group management in cloud infrastructure workflows.",
      "description_length": 300,
      "index": 2037,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteSnapshot",
      "description": "Handles AWS snapshot deletion by converting input parameters into signed HTTP requests and parsing response data. Processes input of type `Types.DeleteSnapshotRequest.t` and returns no output, with error handling for AWS-specific response formats. Parses HTTP status codes and XML error responses into structured error types for precise failure reporting.",
      "description_length": 355,
      "index": 2038,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteSpotDatafeedSubscription",
      "description": "Handles AWS API requests for deleting a Spot Datafeed subscription by encoding and decoding HTTP requests and responses. Processes input of type `Types.DeleteSpotDatafeedSubscriptionRequest.t` and returns no output. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 310,
      "index": 2039,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteSubnet",
      "description": "Handles AWS EC2 subnet deletion by converting input parameters into signed HTTP requests and parsing responses. Processes query-encoded API calls with specific input and output types, including error decoding from XML. Designed for direct interaction with the EC2 service to remove subnets using AWS request signing.",
      "description_length": 316,
      "index": 2040,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteTags",
      "description": "Handles conversion between native input and HTTP requests for AWS tag deletion, encoding parameters and setting action-specific fields. Processes HTTP responses to extract results or decode service-specific errors. Parses AWS error responses into internal error types based on status codes and predefined specifications.",
      "description_length": 320,
      "index": 2041,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteTrafficMirrorFilter",
      "description": "Handles AWS EC2 traffic mirror filter deletion by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific request and response types tied to EC2's delete traffic mirror filter operation. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 314,
      "index": 2042,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteTrafficMirrorFilterRule",
      "description": "Handles the conversion of request parameters into an HTTP request for deleting a traffic mirror filter rule, using specific AWS signing methods and service identifiers. Processes HTTP responses to extract results or decode error information according to AWS API specifications. Operates on structured input and output types representing the deletion request and its outcome.",
      "description_length": 374,
      "index": 2043,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteTrafficMirrorSession",
      "description": "Handles the conversion of request parameters into an HTTP request for deleting a traffic mirror session, including setting the appropriate action and version. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Works with input and output types defined in the AWS EC2 API for session deletion operations.",
      "description_length": 355,
      "index": 2044,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteTrafficMirrorTarget",
      "description": "Handles AWS API requests for deleting a traffic mirror target by encoding and decoding HTTP requests and responses. Operates on specific input and output types representing the delete operation's parameters and results, along with error types for AWS-specific failures. Used to construct signed HTTP requests for the EC2 service and process corresponding server responses.",
      "description_length": 372,
      "index": 2045,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGateway",
      "description": "Handles the deletion of an AWS Transit Gateway by encoding request parameters into HTTP queries and decoding response data. Processes input of type `Types.DeleteTransitGatewayRequest.t` and returns results of type `Types.DeleteTransitGatewayResult.t`. Parses AWS error responses into native error types for specific handling of API failures.",
      "description_length": 341,
      "index": 2046,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGatewayMulticastDomain",
      "description": "Handles the deletion of a transit gateway multicast domain by encoding and decoding HTTP requests and responses. Operates on specific input and output types representing the request and result structures for this AWS EC2 operation. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 310,
      "index": 2047,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGatewayPeeringAttachment",
      "description": "Handles AWS EC2 API requests to delete a transit gateway peering attachment by encoding input parameters into HTTP queries and decoding response data. Processes input structures representing the peering attachment ID and outputs results containing the deletion status. Parses AWS error responses to identify specific API-related issues during the deletion process.",
      "description_length": 364,
      "index": 2048,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGatewayPrefixListReference",
      "description": "Handles AWS EC2 API requests to delete a prefix list reference from a transit gateway. Converts input parameters into HTTP requests and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types for precise error handling.",
      "description_length": 274,
      "index": 2049,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGatewayRoute",
      "description": "Handles the deletion of a specific transit gateway route by encoding request parameters into HTTP queries and decoding the response into structured data. Operates on input containing route identifiers and output returning confirmation of the deletion. Parses AWS error responses into internal error types for precise error handling.",
      "description_length": 332,
      "index": 2050,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGatewayRouteTable",
      "description": "Handles deletion of a transit gateway route table by encoding request parameters into HTTP format and decoding response data. Operates on input containing route table identifiers and outputs containing deletion results. Parses AWS error responses to identify specific API errors during the deletion process.",
      "description_length": 307,
      "index": 2051,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteTransitGatewayVpcAttachment",
      "description": "Handles AWS EC2 API requests to delete a transit gateway VPC attachment by encoding input parameters into HTTP requests and decoding response data. Processes input of type `DeleteTransitGatewayVpcAttachmentRequest` and returns results of type `DeleteTransitGatewayVpcAttachmentResult`. Parses HTTP responses and AWS error messages into structured error types for precise error handling.",
      "description_length": 386,
      "index": 2052,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteVolume",
      "description": "Handles AWS volume deletion by converting request inputs into signed HTTP requests and parsing responses. Processes inputs of type `Types.DeleteVolumeRequest.t` and returns no output, only success or error states. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 308,
      "index": 2053,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeleteVpc",
      "description": "Handles AWS VPC deletion by converting input parameters into signed HTTP requests and parsing responses. Processes input of type `Types.DeleteVpcRequest.t` and returns no output. Decodes HTTP responses into native error types or confirms successful deletion.",
      "description_length": 258,
      "index": 2054,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpcEndpointConnectionNotifications",
      "description": "Handles the conversion of request inputs into HTTP format for deleting VPC endpoint connection notifications, including proper query encoding and setting action and version parameters. Processes HTTP responses to extract results or specific AWS error structures related to VPC endpoint operations. Works with native request and result types, as well as AWS-specific error representations.",
      "description_length": 388,
      "index": 2055,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpcEndpointServiceConfigurations",
      "description": "Converts input parameters into an HTTP request for deleting VPC endpoint service configurations, setting action and version parameters, and encoding the request. Processes HTTP responses to extract results or specific AWS error types based on status codes. Works with request and response structures defined in the AWS EC2 API.",
      "description_length": 327,
      "index": 2056,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpcEndpoints",
      "description": "Handles AWS VPC endpoint deletion by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on specific AWS request and response types, including error decoding based on HTTP status codes and XML content. Used to interact with AWS EC2 service for programmatic VPC endpoint management.",
      "description_length": 344,
      "index": 2057,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpcPeeringConnection",
      "description": "Converts input parameters into an HTTP request for deleting a VPC peering connection, including setting action and version parameters. Processes HTTP responses to extract result data or specific AWS error information. Handles parsing of error responses based on HTTP status codes and predefined error structures.",
      "description_length": 312,
      "index": 2058,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpnConnection",
      "description": "Handles AWS API requests for deleting a VPN connection by converting input to HTTP requests and parsing responses. Operates on structured input representing a VPN connection request and returns no output upon success. Parses AWS error responses into internal error types for specific handling.",
      "description_length": 293,
      "index": 2059,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpnConnectionRoute",
      "description": "Handles AWS API requests for deleting a route from a VPN connection, encoding inputs into HTTP queries and decoding responses. Operates on structured input representing the VPN route deletion request and returns no meaningful output. Parses AWS error responses into internal error types for precise error handling.",
      "description_length": 314,
      "index": 2060,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeleteVpnGateway",
      "description": "Handles AWS API requests for deleting a VPN gateway by converting input to HTTP requests and parsing responses. Operates on structured input representing the delete request and returns no output upon success. Parses AWS error responses into native error types for specific validation and handling.",
      "description_length": 297,
      "index": 2061,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DeprovisionByoipCidr",
      "description": "Handles the conversion of input parameters into an HTTP request for deprovisioning a BYOIP CIDR block, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML formatting. Works with structured input and output types representing the deprovisioning request and result, and internal error representations.",
      "description_length": 381,
      "index": 2062,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeregisterImage",
      "description": "Handles AWS image deregistration by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with image registration data and HTTP-based communication with AWS services.",
      "description_length": 307,
      "index": 2063,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeregisterInstanceEventNotificationAttributes",
      "description": "Handles AWS EC2 instance event notification attribute deregistration by converting requests to HTTP format and parsing responses. Operates on structured input and output types representing the deregistration request and result. Processes HTTP responses and AWS error messages specific to EC2 event notifications.",
      "description_length": 312,
      "index": 2064,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeregisterTransitGatewayMulticastGroupMembers",
      "description": "Handles AWS EC2 API requests to deregister members from a transit gateway multicast group. Converts input parameters into HTTP requests and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types for precise handling.",
      "description_length": 272,
      "index": 2065,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DeregisterTransitGatewayMulticastGroupSources",
      "description": "Handles AWS EC2 API requests to deregister sources from a transit gateway multicast group. Converts input parameters to HTTP requests and parses HTTP responses into structured outputs or errors. Processes AWS error responses into native error types for precise handling.",
      "description_length": 270,
      "index": 2066,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeAccountAttributes",
      "description": "Handles conversion between native input and HTTP requests for AWS account attribute queries, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors matching defined specifications.",
      "description_length": 335,
      "index": 2067,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeAddresses",
      "description": "Handles conversion between native input and HTTP requests for AWS address descriptions, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 393,
      "index": 2068,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeAggregateIdFormat",
      "description": "Handles conversion between native input and HTTP requests for AWS DescribeAggregateIdFormat operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Validates and maps AWS error responses to internal error representations using HTTP status codes and predefined error structures.",
      "description_length": 416,
      "index": 2069,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeAvailabilityZones",
      "description": "Handles conversion between native input and HTTP requests for AWS availability zone queries, setting action and version parameters. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations matching the API specification.",
      "description_length": 329,
      "index": 2070,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeBundleTasks",
      "description": "Handles AWS request signing and HTTP conversion for bundle task operations. Converts between native input types and HTTP requests, and decodes HTTP responses into structured outputs or errors. Parses AWS error responses into service-specific error types based on HTTP status and XML content.",
      "description_length": 291,
      "index": 2071,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeByoipCidrs",
      "description": "Converts AWS request inputs into HTTP format and parses HTTP responses into structured outputs for BYOIP CIDR operations. Handles encoding of query parameters and decoding of error responses specific to EC2 API interactions. Processes input and output types defined in the EC2 API specification for managing Bring Your Own IP ranges.",
      "description_length": 333,
      "index": 2072,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeCapacityReservations",
      "description": "Converts AWS DescribeCapacityReservations requests into HTTP format, handling query encoding and parameter setting. Parses HTTP responses into structured results or specific error types based on AWS XML deserialization. Processes error responses by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 331,
      "index": 2073,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeCarrierGateways",
      "description": "Handles conversion between native input and HTTP requests for AWS carrier gateway operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS specifications. Works with AWS service identifiers and request-specific data structures to facilitate API interactions.",
      "description_length": 384,
      "index": 2074,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeClassicLinkInstances",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 classic link instance queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into internal error representations matching the API specification.",
      "description_length": 371,
      "index": 2075,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeClientVpnAuthorizationRules",
      "description": "Handles conversion between native input and HTTP requests for describing client VPN authorization rules, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Utilizes defined input and output types to interact with AWS EC2 service, ensuring correct request signing and error parsing.",
      "description_length": 406,
      "index": 2076,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeClientVpnConnections",
      "description": "Handles AWS API requests for describing client VPN connections by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific request and result types defined in the AWS API, including error handling for malformed or unexpected responses. Used to retrieve detailed information about client VPN connections from AWS EC2 service.",
      "description_length": 387,
      "index": 2077,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeClientVpnEndpoints",
      "description": "Handles conversion between native input and HTTP requests for querying AWS Client VPN endpoints, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 376,
      "index": 2078,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeClientVpnRoutes",
      "description": "Handles conversion between native input and HTTP requests for describing client VPN routes, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing client VPN route parameters and output containing route details, using defined error types for API-specific failures.",
      "description_length": 413,
      "index": 2079,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeClientVpnTargetNetworks",
      "description": "Handles AWS API requests for describing client VPN target networks by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `DescribeClientVpnTargetNetworksRequest.t` and returns results of type `DescribeClientVpnTargetNetworksResult.t` or error details from AWS. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 427,
      "index": 2080,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeCoipPools",
      "description": "Handles conversion between native input and HTTP requests for describing COIP pools, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 388,
      "index": 2081,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeConversionTasks",
      "description": "Converts AWS DescribeConversionTasks requests between native input and HTTP formats, handling query encoding and decoding. Processes service-specific parameters, error parsing, and HTTP response validation. Used to interface with AWS EC2 or similar services for managing conversion task data.",
      "description_length": 292,
      "index": 2082,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeCustomerGateways",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 customer gateway queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 372,
      "index": 2083,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeDhcpOptions",
      "description": "Handles conversion between native DHCP options request data and HTTP format, including setting action and version parameters. Processes HTTP responses into structured output or specific error types based on AWS API definitions. Utilizes defined input and output types to interact with AWS EC2 service for DHCP configuration queries.",
      "description_length": 332,
      "index": 2084,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeEgressOnlyInternetGateways",
      "description": "Handles AWS EC2 API requests to describe egress-only internet gateways by converting input parameters into HTTP queries and parsing HTTP responses into structured results. Processes input containing gateway identifiers and filters, and returns output with gateway details or service-specific errors. Parses AWS error responses to map them to native error types based on HTTP status codes and XML content.",
      "description_length": 404,
      "index": 2085,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeElasticGpus",
      "description": "Converts AWS Elastic GPU request parameters into HTTP requests and parses HTTP responses into structured results or specific error types. Operates on input containing filter criteria and output returning GPU metadata, using AWS signing protocols. Handles error decoding for API-specific issues based on HTTP status codes and XML content.",
      "description_length": 337,
      "index": 2086,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeExportImageTasks",
      "description": "Handles conversion between native input and HTTP requests for AWS image export task operations, encoding parameters into query format and setting required Action and Version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 377,
      "index": 2087,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeExportTasks",
      "description": "Handles conversion between native input and HTTP requests for AWS export task operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service-specific signing, request formatting, and error parsing for task-related API calls.",
      "description_length": 373,
      "index": 2088,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeFastSnapshotRestores",
      "description": "Converts AWS API requests and responses for fast snapshot restore operations, handling query encoding and decoding. Works with input and output types specific to EC2's describe-fast-snapshot-restores API. Parses HTTP responses into structured error or result types based on status codes and XML content.",
      "description_length": 303,
      "index": 2089,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeFleetHistory",
      "description": "Handles conversion between native input and HTTP requests for AWS fleet history operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service identifiers and request-specific input/output structures to manage fleet history data retrieval.",
      "description_length": 388,
      "index": 2090,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeFleetInstances",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 fleet instance queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types.",
      "description_length": 368,
      "index": 2091,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeFleets",
      "description": "Handles conversion between native input and HTTP requests for AWS fleet management, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured outputs or specific error types based on AWS XML format. Works with AWS service identifiers and custom input/output types for fleet-related API calls.",
      "description_length": 343,
      "index": 2092,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeFlowLogs",
      "description": "Handles conversion between native input and HTTP requests for AWS flow log queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS EC2 service to retrieve flow log information.",
      "description_length": 346,
      "index": 2093,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeFpgaImageAttribute",
      "description": "Handles conversion between native input and HTTP requests for AWS FPGA image attribute queries, including encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, ensuring alignment with expected status codes and error definitions.",
      "description_length": 381,
      "index": 2094,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeFpgaImages",
      "description": "Handles conversion between native input and HTTP requests for AWS FPGA image queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 385,
      "index": 2095,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeHostReservationOfferings",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 host reservation offerings, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 374,
      "index": 2096,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeHostReservations",
      "description": "Handles conversion between native input and HTTP requests for AWS host reservation queries, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 389,
      "index": 2097,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeHosts",
      "description": "Handles conversion between native input and HTTP requests for AWS host description operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 394,
      "index": 2098,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeIamInstanceProfileAssociations",
      "description": "Handles conversion between native input and HTTP requests for describing IAM instance profile associations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Works with input and output types representing AWS EC2 request and result structures, and internal error representations.",
      "description_length": 411,
      "index": 2099,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeIdFormat",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters and setting action/version. Decodes HTTP responses into structured output or error types based on AWS specifications. Parses AWS error responses into service-specific error representations.",
      "description_length": 299,
      "index": 2100,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeIdentityIdFormat",
      "description": "Handles conversion between native input and HTTP requests for AWS identity ID format queries, encoding parameters and setting action/version. Decodes HTTP responses into structured outputs or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 318,
      "index": 2101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeImageAttribute",
      "description": "Handles AWS request signing and HTTP conversion for image attribute operations. Converts input parameters into HTTP requests with proper encoding and parses HTTP responses into structured output or error types. Processes AWS error responses into native error representations based on specified status codes and error definitions.",
      "description_length": 329,
      "index": 2102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeImages",
      "description": "Handles conversion between native input and HTTP requests for AWS image description, including query parameter encoding and signing. Processes HTTP responses to extract structured results or specific error types based on AWS XML format. Designed for direct interaction with AWS services like EC2, using defined request and response types.",
      "description_length": 338,
      "index": 2103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeImportImageTasks",
      "description": "Handles conversion between native input and HTTP requests for AWS image task descriptions, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status to validate and map to internal error representations.",
      "description_length": 356,
      "index": 2104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeImportSnapshotTasks",
      "description": "Handles conversion between native input and HTTP requests for AWS import snapshot task queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with request and result types defined in the AWS API specification for import snapshot tasks.",
      "description_length": 372,
      "index": 2105,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeInstanceAttribute",
      "description": "Handles conversion of instance attribute requests into HTTP format and parses responses, using specific input and output types tied to AWS EC2 operations. Processes error responses by matching HTTP status codes with expected error structures from AWS. Utilizes defined signing methods and service identifiers to ensure correct request formatting and validation.",
      "description_length": 361,
      "index": 2106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeInstanceCreditSpecifications",
      "description": "Handles conversion between native input and HTTP requests for describing instance credit specifications, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS API definitions. Works with request and result types specific to EC2 instance credit configuration queries.",
      "description_length": 367,
      "index": 2107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeInstanceEventNotificationAttributes",
      "description": "Handles conversion between native input and HTTP requests for AWS instance event notification attribute queries, encoding parameters in query format. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Utilizes service-specific signing and validation to ensure correct request and response handling.",
      "description_length": 353,
      "index": 2108,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeInstanceStatus",
      "description": "Handles conversion between native input and HTTP requests for AWS instance status queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 368,
      "index": 2109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeInstanceTypeOfferings",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 instance type offerings, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 374,
      "index": 2110,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeInstanceTypes",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 instance type descriptions, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 375,
      "index": 2111,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeInstances",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 instance queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into application-specific error representations.",
      "description_length": 353,
      "index": 2112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeInternetGateways",
      "description": "Handles conversion between native input and HTTP requests for describing internet gateways, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Utilizes defined input and output types to interact with EC2 service, ensuring proper request signing and error handling.",
      "description_length": 390,
      "index": 2113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeIpv6Pools",
      "description": "Converts AWS API input for IPv6 pool descriptions into HTTP requests, handling query encoding and signing parameters. Processes HTTP responses to extract structured results or specific error types based on AWS XML formatting. Supports parsing of error responses to validate and map them to internal error representations.",
      "description_length": 321,
      "index": 2114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeKeyPairs",
      "description": "Handles conversion between native input and HTTP requests for AWS key pair operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Utilizes service-specific signing and error parsing to ensure compatibility with AWS API expectations.",
      "description_length": 366,
      "index": 2115,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeLaunchTemplateVersions",
      "description": "Handles conversion between native input and HTTP requests for describing launch template versions, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing template version details and output returning version metadata from AWS EC2.",
      "description_length": 379,
      "index": 2116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeLaunchTemplates",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 launch template operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into application-specific error representations.",
      "description_length": 362,
      "index": 2117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "description": "Handles AWS EC2 API requests to describe associations between local gateway route tables and virtual interface groups. Converts input parameters to HTTP requests and parses HTTP responses into structured output or error types. Processes AWS error responses into native error representations for specific API calls.",
      "description_length": 314,
      "index": 2118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeLocalGatewayRouteTableVpcAssociations",
      "description": "Converts input parameters into an HTTP request for describing VPC associations with local gateway route tables, including setting action and version parameters. Processes HTTP responses to extract structured results or specific error types based on AWS XML formatting. Handles error parsing by matching HTTP status codes with predefined error structures from the API specification.",
      "description_length": 381,
      "index": 2119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeLocalGatewayRouteTables",
      "description": "Handles conversion of request inputs to HTTP format for describing local gateway route tables, including setting action and version parameters. Processes HTTP responses to extract structured results or specific error types based on AWS XML decoding. Works with native request and response types specific to EC2's describe local gateway route tables operation.",
      "description_length": 359,
      "index": 2120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeLocalGatewayVirtualInterfaceGroups",
      "description": "Handles conversion between native input and HTTP requests for describing local gateway virtual interface groups, setting necessary parameters like Action and Version. Processes HTTP responses into structured output or error types specific to the API. Parses AWS error responses into internal error representations based on HTTP status and XML content.",
      "description_length": 351,
      "index": 2121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeLocalGatewayVirtualInterfaces",
      "description": "Handles conversion between native input and HTTP requests for describing local gateway virtual interfaces, including encoding parameters and setting action/version. Processes HTTP responses into structured output or specific error types based on AWS XML format. Utilizes defined input and output types to interact with AWS EC2 service, ensuring proper request signing and error handling.",
      "description_length": 387,
      "index": 2122,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeLocalGateways",
      "description": "Handles conversion between native input and HTTP requests for AWS local gateway queries, setting action and version parameters. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service identifiers and request-specific data structures to enable precise API interactions.",
      "description_length": 342,
      "index": 2123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeManagedPrefixLists",
      "description": "Handles AWS API requests for describing managed prefix lists by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Operates on specific request and response types defined in the AWS SDK, including error handling for API-specific error messages. Used to retrieve managed prefix list details from AWS services like EC2.",
      "description_length": 372,
      "index": 2124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeMovingAddresses",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 describe moving addresses operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into API-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 408,
      "index": 2125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeNatGateways",
      "description": "Handles conversion between native input and HTTP requests for describing NAT gateways, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 366,
      "index": 2126,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeNetworkAcls",
      "description": "Handles conversion between native input and HTTP requests for AWS network ACL operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against API specifications.",
      "description_length": 385,
      "index": 2127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeNetworkInterfaceAttribute",
      "description": "Handles conversion between native input and HTTP requests for describing network interface attributes, including encoding parameters and setting action/version. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with AWS service identifiers, request signing configurations, and structured data types for EC2 network interfaces.",
      "description_length": 378,
      "index": 2128,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeNetworkInterfacePermissions",
      "description": "Handles conversion between native input and HTTP requests for describing network interface permissions, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Parses AWS error responses into internal error representations, validating status codes and error types.",
      "description_length": 391,
      "index": 2129,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeNetworkInterfaces",
      "description": "Handles conversion between native input and HTTP requests for network interface operations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Parses AWS error responses into internal error representations, validating status codes and error types.",
      "description_length": 378,
      "index": 2130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribePlacementGroups",
      "description": "Handles conversion between native input and HTTP requests for AWS placement group queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against API specifications.",
      "description_length": 386,
      "index": 2131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribePrefixLists",
      "description": "Handles conversion between native input and HTTP requests for AWS prefix list operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types.",
      "description_length": 364,
      "index": 2132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribePrincipalIdFormat",
      "description": "Handles AWS request signing and HTTP conversion for principal ID format queries. Processes input structured as a DescribePrincipalIdFormatRequest and outputs a DescribePrincipalIdFormatResult, with error parsing tailored to AWS XML responses. Converts between HTTP request and response formats while enforcing signature versions and service-specific endpoints.",
      "description_length": 360,
      "index": 2133,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribePublicIpv4Pools",
      "description": "Converts AWS EC2 request parameters into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP responses into structured results or specific error types based on AWS XML format. Handles error decoding by matching HTTP status codes with expected error structures from the API specification.",
      "description_length": 330,
      "index": 2134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeRegions",
      "description": "Handles conversion between native input and HTTP requests for AWS region descriptions, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS service conventions. Parses AWS error responses into domain-specific error representations for reliable error handling.",
      "description_length": 340,
      "index": 2135,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeReservedInstances",
      "description": "Handles AWS EC2 reserved instance queries by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Processes request signing, query encoding, and error decoding for specific AWS API interactions. Works with native request and response types to facilitate direct API communication.",
      "description_length": 332,
      "index": 2136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeReservedInstancesListings",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 reserved instances listings, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes error responses by matching HTTP status codes with expected error types from the API specification.",
      "description_length": 373,
      "index": 2137,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeReservedInstancesModifications",
      "description": "Handles conversion between native request structures and HTTP format for AWS EC2 operations, specifically for querying reserved instance modifications. Processes input containing modification request parameters and outputs structured results or error details from HTTP responses. Parses AWS error messages into domain-specific error types based on HTTP status codes and XML content.",
      "description_length": 382,
      "index": 2138,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeReservedInstancesOfferings",
      "description": "Handles conversion between native input and HTTP requests for querying AWS Reserved Instances offerings, including encoding parameters and setting action/version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the AWS EC2 API specification.",
      "description_length": 344,
      "index": 2139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeRouteTables",
      "description": "Handles conversion between native input and HTTP requests for AWS route table operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with AWS service identifiers and request-specific data structures for EC2 route table interactions.",
      "description_length": 371,
      "index": 2140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeScheduledInstanceAvailability",
      "description": "Handles conversion between native input and HTTP requests for AWS scheduled instance availability queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 386,
      "index": 2141,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeScheduledInstances",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 scheduled instances queries, encoding parameters into query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 344,
      "index": 2142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeSecurityGroupReferences",
      "description": "Handles conversion between native input and HTTP requests for AWS security group reference queries, encoding parameters in query format. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status responses into internal error representations for precise handling.",
      "description_length": 344,
      "index": 2143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeSecurityGroups",
      "description": "Handles conversion between native input and HTTP requests for AWS security group queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS EC2 API to retrieve security group configurations.",
      "description_length": 357,
      "index": 2144,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeSnapshotAttribute",
      "description": "Handles conversion between native input and HTTP requests for AWS snapshot attribute operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types.",
      "description_length": 371,
      "index": 2145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeSnapshots",
      "description": "Converts AWS request inputs into HTTP requests with proper encoding and sets action and version parameters. Parses HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 319,
      "index": 2146,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeSpotDatafeedSubscription",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 spot datafeed subscription operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and messages into internal error representations for precise error handling.",
      "description_length": 384,
      "index": 2147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeSpotFleetInstances",
      "description": "Converts AWS API requests into HTTP format and parses responses for spot fleet instance data, handling error decoding based on HTTP status codes. Operates on structured input and output types representing fleet instance requests and responses. Used to fetch and interpret AWS EC2 spot fleet instance information from HTTP interactions.",
      "description_length": 335,
      "index": 2148,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeSpotFleetRequestHistory",
      "description": "Converts input parameters into an HTTP request for querying Spot Fleet history, encoding necessary parameters and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML formatting. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 350,
      "index": 2149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeSpotFleetRequests",
      "description": "Converts input parameters into HTTP requests for querying Spot Fleet configurations, encoding necessary parameters and setting action and version headers. Processes HTTP responses to extract structured output or specific error details based on AWS API definitions. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 372,
      "index": 2150,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeSpotInstanceRequests",
      "description": "Handles conversion between native input and HTTP requests for querying spot instance requests, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing request parameters and output containing results from the EC2 service.",
      "description_length": 369,
      "index": 2151,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeSpotPriceHistory",
      "description": "Handles conversion between native input and HTTP requests for querying AWS EC2 spot price history, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 375,
      "index": 2152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeStaleSecurityGroups",
      "description": "Converts AWS request parameters into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error validation by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 333,
      "index": 2153,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeSubnets",
      "description": "Handles conversion between native input and HTTP requests for describing subnets, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 381,
      "index": 2154,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeTags",
      "description": "Handles conversion between native input and HTTP requests for AWS tag descriptions, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 389,
      "index": 2155,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeTrafficMirrorFilters",
      "description": "Handles conversion between native input and HTTP requests for describing traffic mirror filters, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types.",
      "description_length": 371,
      "index": 2156,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeTrafficMirrorSessions",
      "description": "Handles conversion between native input and HTTP requests for describing traffic mirror sessions, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input containing session identifiers and output returning session details, supporting error parsing for AWS-specific response codes.",
      "description_length": 415,
      "index": 2157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeTrafficMirrorTargets",
      "description": "Handles AWS EC2 traffic mirror target queries by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes request and response data using specific AWS XML formats and error handling logic. Used to retrieve detailed information about configured traffic mirror targets in an AWS environment.",
      "description_length": 348,
      "index": 2158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeTransitGatewayAttachments",
      "description": "Handles conversion between native input and HTTP requests for describing transit gateway attachments, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with request and result types defined in the transit gateway attachments module.",
      "description_length": 364,
      "index": 2159,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeTransitGatewayMulticastDomains",
      "description": "Converts input parameters into an HTTP request for describing AWS Transit Gateway multicast domains, including setting action and version parameters. Processes HTTP responses into structured output or error types based on AWS API specifications. Handles error parsing by matching HTTP status codes with expected error formats from the API.",
      "description_length": 339,
      "index": 2160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeTransitGatewayPeeringAttachments",
      "description": "Handles AWS EC2 API requests to describe transit gateway peering attachments. Converts input parameters into HTTP requests and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types for precise error handling.",
      "description_length": 265,
      "index": 2161,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeTransitGatewayRouteTables",
      "description": "Converts AWS EC2 transit gateway route table requests into HTTP format and parses responses, handling error decoding based on status codes and XML content. Operates on structured input and output types representing route table descriptions and associated errors. Used to fetch detailed information about transit gateway route tables from AWS EC2.",
      "description_length": 346,
      "index": 2162,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeTransitGatewayVpcAttachments",
      "description": "Handles AWS EC2 API requests to describe transit gateway VPC attachments by converting input parameters into HTTP requests and parsing HTTP responses into structured results. Processes query-encoded API calls with specific request and response formats tied to the EC2 service. Decodes AWS error responses into internal error types for precise error handling.",
      "description_length": 358,
      "index": 2163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeTransitGateways",
      "description": "Converts AWS EC2 transit gateway requests into HTTP format and parses responses, handling query encoding and error decoding. Operates on structured input and output types representing transit gateway descriptions and associated errors. Used to interface with AWS API for retrieving detailed transit gateway information.",
      "description_length": 319,
      "index": 2164,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVolumeAttribute",
      "description": "Handles conversion between native input and HTTP requests for AWS volume attribute queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into internal error representations, validating status codes and error types against defined specifications.",
      "description_length": 399,
      "index": 2165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVolumeStatus",
      "description": "Handles conversion between native input and HTTP requests for AWS volume status queries, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Designed for direct interaction with AWS EC2 API to retrieve volume status information.",
      "description_length": 350,
      "index": 2166,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVolumes",
      "description": "Handles conversion between native input and HTTP requests for AWS volume descriptions, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Parses AWS error responses into domain-specific errors, validating against expected status codes and error codes.",
      "description_length": 383,
      "index": 2167,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVolumesModifications",
      "description": "Handles conversion between native input and HTTP requests for AWS volume modification queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for volume modification operations.",
      "description_length": 383,
      "index": 2168,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVpcAttribute",
      "description": "Handles conversion between native input and HTTP requests for VPC attribute queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with AWS EC2 service requests and responses, including error parsing for API-specific conditions.",
      "description_length": 364,
      "index": 2169,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVpcClassicLink",
      "description": "Handles conversion between native input and HTTP requests for VPC ClassicLink operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the VPC ClassicLink API specification.",
      "description_length": 349,
      "index": 2170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpcClassicLinkDnsSupport",
      "description": "Converts input parameters into an HTTP request for querying VPC ClassicLink DNS support status, encoding necessary parameters and setting the appropriate action and version. Processes HTTP responses to extract structured results or specific error details based on AWS XML formatting. Handles error parsing by matching HTTP status codes with expected error types from the API specification.",
      "description_length": 389,
      "index": 2171,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVpcEndpointConnectionNotifications",
      "description": "Handles conversion between native input and HTTP requests for querying VPC endpoint connection notifications, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS service conventions. Works with request and response data structures defined for VPC endpoint notifications in AWS EC2.",
      "description_length": 384,
      "index": 2172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpcEndpointConnections",
      "description": "Handles conversion between native input and HTTP requests for describing VPC endpoint connections, including encoding parameters and setting action/version. Processes HTTP responses to extract structured results or specific error types based on AWS XML formatting. Works with request and response types defined in the AWS API for VPC endpoint operations.",
      "description_length": 354,
      "index": 2173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVpcEndpointServiceConfigurations",
      "description": "Handles conversion between native input and HTTP requests for describing VPC endpoint service configurations, including encoding parameters and setting action/version. Processes HTTP responses to extract structured results or specific error types based on AWS XML formatting. Utilizes service-specific signing and error parsing to ensure accurate interaction with AWS APIs.",
      "description_length": 373,
      "index": 2174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpcEndpointServicePermissions",
      "description": "Handles conversion between native input and HTTP requests for describing VPC endpoint service permissions, encoding parameters into query format. Processes HTTP responses to extract structured results or specific AWS error types. Works with AWS service identifiers and custom request/response types tied to VPC endpoint operations.",
      "description_length": 331,
      "index": 2175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpcEndpointServices",
      "description": "Handles conversion between native input and HTTP requests for AWS VPC endpoint service queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS service definitions. Works with request and result types specific to VPC endpoint service descriptions.",
      "description_length": 354,
      "index": 2176,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DescribeVpcEndpoints",
      "description": "Handles conversion between native input and HTTP requests for VPC endpoint queries, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 381,
      "index": 2177,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpcPeeringConnections",
      "description": "Converts AWS VPC peering connection requests into HTTP format and parses responses, handling error decoding based on status codes and XML content. Operates on structured input and output types representing VPC peering connection data. Used to fetch and validate VPC peering connection details from AWS EC2 service.",
      "description_length": 314,
      "index": 2178,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpcs",
      "description": "Handles conversion between native input and HTTP requests for VPC description operations, encoding parameters into query format and setting action and version. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Works with AWS EC2 service requests and responses, including error parsing for VPC-related API calls.",
      "description_length": 370,
      "index": 2179,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpnConnections",
      "description": "Handles conversion between native input and HTTP requests for AWS VPN connection queries, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 369,
      "index": 2180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DescribeVpnGateways",
      "description": "Handles conversion between native input and HTTP requests for describing VPN gateways, setting necessary parameters like Action and Version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the AWS EC2 API specification.",
      "description_length": 322,
      "index": 2181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DetachClassicLinkVpc",
      "description": "Converts AWS EC2 request inputs into HTTP queries with proper encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML format. Handles error decoding by matching HTTP status codes with expected error structures from the API specification.",
      "description_length": 316,
      "index": 2182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DetachInternetGateway",
      "description": "Handles AWS EC2 internet gateway detachment by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific request signing and error handling. Works with structured request and error types to manage EC2 resource disconnection workflows.",
      "description_length": 281,
      "index": 2183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DetachNetworkInterface",
      "description": "Handles conversion of network interface detachment requests into HTTP format and parses responses. Processes input of type `Types.DetachNetworkInterfaceRequest.t` and returns unit output. Decodes AWS error responses into native error types based on HTTP status and XML content.",
      "description_length": 277,
      "index": 2184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DetachVolume",
      "description": "Handles AWS volume detachment by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes input of type `Types.DetachVolumeRequest.t` and produces output of type `Types.VolumeAttachment.t`, with error handling for AWS-specific error responses. Parses HTTP status codes and XML error bodies to map to internal error types defined in `Errors_internal.t`.",
      "description_length": 411,
      "index": 2185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DetachVpnGateway",
      "description": "Handles AWS API requests for detaching a VPN gateway by setting the appropriate signing version and service, converting input to HTTP requests with proper query encoding, and parsing HTTP responses into native error or success states. Operates on input types representing VPN gateway detachment requests and outputs unit, with error handling for AWS-specific XML responses. Used to manage the lifecycle of VPN gateway associations in AWS EC2.",
      "description_length": 442,
      "index": 2186,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisableEbsEncryptionByDefault",
      "description": "Handles AWS EC2 requests to disable default EBS encryption by converting input parameters into HTTP requests and parsing response data. Processes query-encoded API calls with specific request signing and error handling for EC2 service interactions. Works with structured request and result types, and custom error representations specific to the EC2 API.",
      "description_length": 354,
      "index": 2187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisableFastSnapshotRestores",
      "description": "Handles AWS EC2 API requests for disabling fast snapshot restores by converting between native input and HTTP formats, parsing responses, and validating error conditions. Operates on structured request and response types specific to the EC2 service. Used to construct and process API calls for managing snapshot restore configurations in AWS.",
      "description_length": 342,
      "index": 2188,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DisableTransitGatewayRouteTablePropagation",
      "description": "Handles AWS EC2 API requests to disable route propagation from a transit gateway route table. Converts input parameters into HTTP requests and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types for precise error handling.",
      "description_length": 281,
      "index": 2189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisableVgwRoutePropagation",
      "description": "Handles AWS EC2 route propagation disable requests by converting input to HTTP requests and parsing responses. Operates on specific request and error types defined for the EC2 service. Used to manage virtual private gateway route propagation settings in cloud infrastructure.",
      "description_length": 275,
      "index": 2190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisableVpcClassicLink",
      "description": "Handles AWS EC2 requests to disable ClassicLink for a VPC by encoding and decoding HTTP requests and responses. Operates on specific input and output types representing the disable ClassicLink request and result, and parses AWS error responses into native error types. Used to integrate AWS EC2 API interactions into applications requiring programmatic control over VPC configurations.",
      "description_length": 385,
      "index": 2191,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisableVpcClassicLinkDnsSupport",
      "description": "Converts input parameters into an HTTP request for disabling DNS support in a VPC's ClassicLink, setting necessary query parameters and encoding the request. Parses HTTP responses into structured output or specific error types based on AWS XML formatting and status codes. Operates on input and output records representing VPC ClassicLink DNS configuration changes.",
      "description_length": 365,
      "index": 2192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisassociateAddress",
      "description": "Handles AWS EC2 address disassociation by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded requests and decodes error responses from AWS API calls. Works with specific request and error types defined for EC2 operations.",
      "description_length": 275,
      "index": 2193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisassociateClientVpnTargetNetwork",
      "description": "Handles AWS Client VPN target network disassociation by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls for EC2 service, using specific request and response structures. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 330,
      "index": 2194,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisassociateEnclaveCertificateIamRole",
      "description": "Handles the conversion of request inputs into HTTP format for AWS API calls, specifically for disassociating an IAM role from an enclave certificate. Processes HTTP responses and maps them to structured output or error types defined by the AWS service. Utilizes specific input and output types tied to the EC2 service's disassociation operation.",
      "description_length": 345,
      "index": 2195,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DisassociateIamInstanceProfile",
      "description": "Handles the conversion of input parameters into HTTP requests for AWS IAM instance profile disassociation, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with native request and result types, as well as AWS-specific error representations.",
      "description_length": 342,
      "index": 2196,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DisassociateRouteTable",
      "description": "Handles AWS EC2 route table disassociation by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls with specific input and output types, including error decoding based on HTTP status codes. Designed for direct interaction with the EC2 service to manage route table associations.",
      "description_length": 340,
      "index": 2197,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DisassociateSubnetCidrBlock",
      "description": "Generates AWS HTTP requests for disassociating a CIDR block from a subnet, encoding parameters into query format and setting action and version headers. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Handles error parsing by matching HTTP status codes with predefined error definitions.",
      "description_length": 335,
      "index": 2198,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.DisassociateTransitGatewayMulticastDomain",
      "description": "Handles AWS EC2 API requests to disassociate a multicast domain from a transit gateway, encoding inputs into HTTP queries and decoding responses. Processes input containing domain and transit gateway identifiers, returning results or service-specific errors. Parses HTTP error responses into structured error types for precise handling.",
      "description_length": 336,
      "index": 2199,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DisassociateTransitGatewayRouteTable",
      "description": "Handles AWS API requests to disassociate a transit gateway route table from a resource. Converts input parameters into HTTP requests and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types for specific API interactions.",
      "description_length": 278,
      "index": 2200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.DisassociateVpcCidrBlock",
      "description": "Converts AWS VPC CIDR block disassociation requests into HTTP format, including setting action and version parameters. Processes HTTP responses into structured output or error types specific to VPC operations. Parses AWS error responses into internal error representations based on HTTP status and XML content.",
      "description_length": 310,
      "index": 2201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.EnableEbsEncryptionByDefault",
      "description": "Handles AWS EC2 API requests to enable EBS encryption by default, encoding inputs into HTTP queries and decoding responses. Processes input structures representing encryption configuration requests and output structures containing result data from the EC2 service. Parses HTTP error responses into specific error types for accurate error handling.",
      "description_length": 347,
      "index": 2202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.EnableFastSnapshotRestores",
      "description": "Handles AWS API requests for enabling fast snapshot restores by converting input data into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific input and output types representing the enable fast snapshot restore request and result, along with error types for AWS-specific error responses. Processes HTTP encoding and decoding for interactions with the EC2 service, ensuring proper request signing and error handling.",
      "description_length": 451,
      "index": 2203,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.EnableTransitGatewayRouteTablePropagation",
      "description": "Converts input parameters into an HTTP request for enabling route table propagation in an AWS transit gateway, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML formatting. Handles error parsing by matching HTTP status codes with defined error structures from the API specification.",
      "description_length": 366,
      "index": 2204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.EnableVgwRoutePropagation",
      "description": "Handles AWS EC2 API requests to enable route propagation from a virtual private gateway. Converts input to HTTP requests with proper encoding and parses HTTP responses into native error or success states. Processes AWS error responses to map them to service-specific error types.",
      "description_length": 279,
      "index": 2205,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.EnableVolumeIO",
      "description": "Converts AWS request inputs into HTTP requests with proper encoding and signing, and decodes HTTP responses into native output or error types. Operates on specific input types representing volume I/O enablement requests and output types indicating success or failure. Used to interface with AWS APIs for managing volume I/O operations, handling error parsing based on HTTP status and XML content.",
      "description_length": 396,
      "index": 2206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.EnableVpcClassicLink",
      "description": "Handles conversion between native input and HTTP requests for enabling VPC classic link, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 366,
      "index": 2207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.EnableVpcClassicLinkDnsSupport",
      "description": "Converts input parameters into an HTTP request for enabling DNS support in a VPC's classic link, setting necessary query parameters and encoding the request. Processes HTTP responses to extract results or specific AWS error types, ensuring validation against expected error codes and structures. Operates on structured request and response types defined within the AWS EC2 API specification.",
      "description_length": 391,
      "index": 2208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and from strings, along with a list of common errors. Works with the abstract type `t` representing error states. Used to handle error serialization and mapping in HTTP responses.",
      "description_length": 268,
      "index": 2209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ExportClientVpnClientCertificateRevocationList",
      "description": "Handles AWS Client VPN certificate revocation list exports by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls for services like EC2, using specific request and response types tied to the ExportClientVpnClientCertificateRevocationList action. Decodes error responses from AWS API calls into native error types based on HTTP status and XML content.",
      "description_length": 413,
      "index": 2210,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ExportClientVpnClientConfiguration",
      "description": "Converts native input structures into HTTP requests with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 329,
      "index": 2211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ExportImage",
      "description": "Converts native input data into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP response bodies into structured output or error types, and maps AWS error responses to service-specific native errors based on status code and XML content. Works with input, output, and error types defined in the module's type definitions.",
      "description_length": 366,
      "index": 2212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ExportTransitGatewayRoutes",
      "description": "Converts native input structures into HTTP requests for exporting transit gateway routes, including encoding parameters and setting action and version. Processes HTTP responses to extract result data or specific error information based on AWS XML formatting. Handles error parsing by matching HTTP status codes with expected error types from the API specification.",
      "description_length": 364,
      "index": 2213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetAssociatedEnclaveCertificateIamRoles",
      "description": "Handles conversion between native input and HTTP requests for retrieving IAM roles associated with an enclave certificate, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the associated API module, and internal error representations.",
      "description_length": 406,
      "index": 2214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetAssociatedIpv6PoolCidrs",
      "description": "Handles AWS EC2 API requests to retrieve associated IPv6 pool CIDRs by encoding input parameters into HTTP queries and decoding response data. Processes input structured as a GetAssociatedIpv6PoolCidrsRequest and returns results as a GetAssociatedIpv6PoolCidrsResult. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 346,
      "index": 2215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetCapacityReservationUsage",
      "description": "Handles AWS API requests for retrieving capacity reservation usage by encoding input parameters into HTTP queries and decoding response data. Processes input structured as a capacity reservation request and returns results or specific error types based on AWS response formats. Used to fetch detailed usage metrics from AWS services like EC2 through direct API interaction.",
      "description_length": 373,
      "index": 2216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetCoipPoolUsage",
      "description": "Handles conversion between native input and HTTP requests for retrieving COIP pool usage, encoding parameters into query format and setting necessary request fields. Processes HTTP responses to extract structured results or specific error types based on AWS XML deserialization. Works with input and output types defined in the AWS EC2 API, and parses error responses according to specified HTTP status codes and error codes.",
      "description_length": 425,
      "index": 2217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetConsoleOutput",
      "description": "Converts AWS API input to HTTP requests and processes HTTP responses into structured output or error types. Handles encoding of request parameters and parsing of error responses based on specific AWS service conventions. Used to interact with AWS services by transforming native data into HTTP-compatible formats and decoding service-specific responses.",
      "description_length": 353,
      "index": 2218,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.GetConsoleScreenshot",
      "description": "Converts AWS API input to HTTP requests and handles response decoding, including error parsing based on HTTP status codes and XML content. Operates on structured request and response types specific to the GetConsoleScreenshot API. Used to fetch console screenshots from AWS instances by encoding requests and interpreting server responses.",
      "description_length": 339,
      "index": 2219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetDefaultCreditSpecification",
      "description": "Handles AWS request signing and HTTP conversion for retrieving default credit specifications. Processes input of type `Types.GetDefaultCreditSpecificationRequest.t` and returns HTTP requests with proper encoding, and decodes responses into `Types.GetDefaultCreditSpecificationResult.t` or specific error types. Parses AWS error responses into native error representations based on HTTP status and XML content.",
      "description_length": 409,
      "index": 2220,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetEbsDefaultKmsKeyId",
      "description": "Handles AWS EBS default KMS key ID retrieval by encoding request parameters into HTTP queries and decoding response data. Processes input containing EBS volume configuration and returns the associated KMS key ID. Parses AWS error responses to identify specific API-related issues during the request lifecycle.",
      "description_length": 309,
      "index": 2221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetEbsEncryptionByDefault",
      "description": "Handles AWS EC2 requests to retrieve the default EBS encryption setting by encoding and decoding HTTP queries. Processes input of type `Types.GetEbsEncryptionByDefaultRequest.t` and returns output of type `Types.GetEbsEncryptionByDefaultResult.t`. Parses HTTP responses and AWS error messages into structured results or error types specific to the EC2 API.",
      "description_length": 356,
      "index": 2222,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.GetGroupsForCapacityReservation",
      "description": "Handles conversion between native input and HTTP requests for retrieving groups associated with a capacity reservation, encoding parameters into query format and setting action and version. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with input containing reservation identifiers and outputs group information, including error decoding for API-specific issues.",
      "description_length": 418,
      "index": 2223,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.GetHostReservationPurchasePreview",
      "description": "Handles AWS EC2 host reservation purchase previews by converting input to HTTP requests and parsing responses. Processes query-encoded API calls with specific request and response structures. Decodes AWS error responses into native error types for precise error handling.",
      "description_length": 271,
      "index": 2224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetLaunchTemplateData",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 launch template data retrieval, encoding parameters in query format and setting action and version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Processes AWS error responses to map them to API-specific error representations.",
      "description_length": 345,
      "index": 2225,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetManagedPrefixListAssociations",
      "description": "Handles AWS API requests for retrieving managed prefix list associations by encoding input parameters into HTTP queries and decoding response data. Operates on structured request and result types specific to the EC2 service, including error parsing for API-specific responses. Used to fetch network configuration details from AWS infrastructure through direct API interaction.",
      "description_length": 376,
      "index": 2226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetManagedPrefixListEntries",
      "description": "Handles AWS API requests for retrieving managed prefix list entries by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific input and output types representing the request and result of the GetManagedPrefixListEntries API action. Processes error responses by mapping AWS XML errors to internal error types based on HTTP status codes.",
      "description_length": 400,
      "index": 2227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetPasswordData",
      "description": "Handles conversion of input data into AWS HTTP requests for password retrieval, including proper query encoding and setting action/version parameters. Processes HTTP responses to extract result data or specific error structures based on AWS XML formatting. Works with service-specific request and response types, and parses AWS error codes into internal error representations.",
      "description_length": 376,
      "index": 2228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetReservedInstancesExchangeQuote",
      "description": "Handles AWS EC2 Reserved Instances exchange quote requests by converting input to HTTP requests and parsing HTTP responses. Processes query-encoded API calls with specific input and output types related to reserved instance exchanges. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 313,
      "index": 2229,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetTransitGatewayAttachmentPropagations",
      "description": "Converts input parameters into an HTTP request for querying AWS transit gateway attachment propagations, setting action and version parameters. Processes HTTP responses into structured output or error types based on AWS API specifications. Handles error parsing by matching HTTP status codes with expected error formats from the API.",
      "description_length": 333,
      "index": 2230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetTransitGatewayMulticastDomainAssociations",
      "description": "Handles AWS EC2 API requests to retrieve multicast domain associations for a transit gateway. Converts input parameters to HTTP requests and parses HTTP responses into structured output or error types. Processes AWS error responses into native error representations for precise handling.",
      "description_length": 287,
      "index": 2231,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.GetTransitGatewayPrefixListReferences",
      "description": "Handles AWS EC2 API requests to retrieve transit gateway prefix list references. Converts input parameters into HTTP requests and parses HTTP responses into structured output or error types. Processes AWS error responses into native error representations for specific API calls.",
      "description_length": 278,
      "index": 2232,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetTransitGatewayRouteTableAssociations",
      "description": "Handles AWS EC2 API requests to retrieve transit gateway route table associations. Converts input parameters into HTTP requests and parses HTTP responses into structured results or errors. Processes AWS error responses into native error types for precise handling.",
      "description_length": 264,
      "index": 2233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.GetTransitGatewayRouteTablePropagations",
      "description": "Converts AWS EC2 requests for retrieving transit gateway route table propagations into HTTP format, including setting action and version parameters. Processes HTTP responses to extract structured results or specific error details from XML. Handles input and output types defined by the EC2 API for route table propagation data.",
      "description_length": 327,
      "index": 2234,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ImportClientVpnClientCertificateRevocationList",
      "description": "Handles AWS Client VPN certificate revocation list imports by converting input data to HTTP requests and parsing responses. Processes input containing certificate details and returns results or specific AWS error types. Utilizes AWS signing protocols and HTTP encoding for secure, structured API communication.",
      "description_length": 310,
      "index": 2235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ImportImage",
      "description": "Converts AWS import image requests between native input and HTTP formats, encoding parameters into query strings and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 359,
      "index": 2236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ImportInstance",
      "description": "Handles AWS import instance requests by converting between native input and HTTP formats, setting necessary parameters like Action and Version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with input, output, and error types defined for the import instance API.",
      "description_length": 329,
      "index": 2237,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ImportKeyPair",
      "description": "Handles AWS key pair import operations by converting between native input and HTTP requests, and parsing HTTP responses into structured outputs or errors. Works with AWS-specific request and response types, including error representations from XML. Used to construct signed requests for key pair imports and validate server responses against expected formats.",
      "description_length": 359,
      "index": 2238,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ImportSnapshot",
      "description": "Handles conversion between native input and HTTP requests for AWS import snapshot operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 397,
      "index": 2239,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ImportVolume",
      "description": "Handles conversion between native input and HTTP requests for AWS import volume operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error responses into domain-specific errors, validating status codes and error types against API specifications.",
      "description_length": 391,
      "index": 2240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyAvailabilityZoneGroup",
      "description": "Handles conversion between native input and HTTP requests for modifying an availability zone group, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 382,
      "index": 2241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyCapacityReservation",
      "description": "Handles conversion between native input and HTTP requests for modifying capacity reservations, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Works with AWS EC2 service, using defined request and response types for precise interaction with the API.",
      "description_length": 382,
      "index": 2242,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyClientVpnEndpoint",
      "description": "Converts input parameters for modifying a client VPN endpoint into an HTTP request, including encoding and setting action/version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML format and HTTP status codes. Handles error validation to ensure compatibility between parsed errors and expected API responses.",
      "description_length": 356,
      "index": 2243,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyDefaultCreditSpecification",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types.",
      "description_length": 364,
      "index": 2244,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyEbsDefaultKmsKeyId",
      "description": "Converts input parameters into an HTTP request for modifying an EBS default KMS key ID, encoding necessary query parameters and setting the appropriate action and version. Parses HTTP responses into structured output or specific error types based on AWS XML formatting and HTTP status codes. Handles error decoding by matching AWS error codes to predefined internal error representations.",
      "description_length": 388,
      "index": 2245,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyFleet",
      "description": "Converts native input data into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles AWS error parsing by matching status codes and validating against API specifications.",
      "description_length": 311,
      "index": 2246,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyFpgaImageAttribute",
      "description": "Handles AWS FPGA image attribute modifications by converting input data to HTTP requests and parsing HTTP responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with AWS service-specific signing and structured request/response data.",
      "description_length": 326,
      "index": 2247,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyHosts",
      "description": "Handles AWS API requests for modifying hosts by setting the signing version and service, converting between native input and HTTP requests, and parsing HTTP responses into structured outputs or errors. Operates on specific input and output types derived from AWS API definitions, including error parsing based on HTTP status codes and XML content. Used to construct and process ModifyHosts API calls within an AWS integration.",
      "description_length": 426,
      "index": 2248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyIdFormat",
      "description": "Handles conversion between native input and HTTP requests for AWS API calls, specifically encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into a native output or a specific error structure. Parses AWS error responses into API-specific errors based on status code and XML content.",
      "description_length": 341,
      "index": 2249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyIdentityIdFormat",
      "description": "Handles conversion between native input and HTTP requests for AWS identity ID format modifications, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into a unit type or specific error structures. Parses AWS error responses into internal error types based on HTTP status and XML content.",
      "description_length": 347,
      "index": 2250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyImageAttribute",
      "description": "Handles AWS request signing and HTTP conversion for image attribute modifications. Converts input requests to HTTP format and parses HTTP responses into native error or success states. Processes AWS error responses by matching status codes and deserializing XML into specific error types.",
      "description_length": 288,
      "index": 2251,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyInstanceAttribute",
      "description": "Handles conversion between native input and HTTP requests for modifying AWS instance attributes, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into a unit type or specific error structures. Parses AWS error responses into API-specific errors based on HTTP status and XML content.",
      "description_length": 343,
      "index": 2252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyInstanceCapacityReservationAttributes",
      "description": "Handles conversion between native input and HTTP requests for modifying instance capacity reservation attributes, including setting query parameters and encoding data. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with input and output types defined in the EC2 API specification for capacity reservation adjustments.",
      "description_length": 372,
      "index": 2253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyInstanceCreditSpecification",
      "description": "Handles AWS EC2 instance credit specification modifications by converting input data into HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to adjust instance credit settings in cloud infrastructure workflows.",
      "description_length": 362,
      "index": 2254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyInstanceEventStartTime",
      "description": "Handles conversion between native input and HTTP requests for modifying instance event start times, including encoding parameters and setting action/version. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with input and output types defined in the associated module, and error types from the internal error module.",
      "description_length": 369,
      "index": 2255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyInstanceMetadataOptions",
      "description": "Handles conversion between native input and HTTP requests for AWS instance metadata options modification, including encoding query parameters and setting signing details. Processes HTTP responses to extract structured output or specific error information based on AWS XML formatting. Works with AWS service-specific request and response types for precise interaction with the EC2 API.",
      "description_length": 384,
      "index": 2256,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyInstancePlacement",
      "description": "Handles AWS EC2 instance placement modifications by converting request inputs to HTTP format and parsing response outputs. Processes structured input and output types specific to instance placement changes, including error decoding from HTTP responses. Used to construct and interpret API calls for modifying instance availability zones or groups.",
      "description_length": 347,
      "index": 2257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyLaunchTemplate",
      "description": "Handles conversion between native input and HTTP requests for AWS launch template modifications, encoding parameters in query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 375,
      "index": 2258,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyManagedPrefixList",
      "description": "Handles conversion between native input and HTTP requests for modifying managed prefix lists, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types.",
      "description_length": 368,
      "index": 2259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyNetworkInterfaceAttribute",
      "description": "Handles AWS API requests for modifying network interface attributes by converting input to HTTP requests and parsing responses. Processes query-encoded HTTP requests and responses for specific AWS services, using defined input and error types. Parses AWS error responses into native error types based on HTTP status codes and predefined error specifications.",
      "description_length": 358,
      "index": 2260,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyReservedInstances",
      "description": "Handles AWS Reserved Instances modification by converting input data into signed HTTP requests and parsing response bodies. Operates on structured request and result types specific to the EC2 service, including error decoding from XML responses. Used to programmatically adjust Reserved Instances parameters through direct API interaction.",
      "description_length": 339,
      "index": 2261,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifySnapshotAttribute",
      "description": "Handles AWS API requests for modifying snapshot attributes by setting the signing method and service, converting input to HTTP requests with proper encoding, and parsing HTTP responses into native error or success states. Operates on specific request and error types defined for the API. Used to prepare and process snapshot attribute modification calls in AWS EC2 operations.",
      "description_length": 376,
      "index": 2262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifySpotFleetRequest",
      "description": "Converts input parameters into an HTTP request for modifying a Spot Fleet, encoding necessary fields and setting action and version parameters. Processes HTTP responses into structured output or specific error types based on AWS API definitions. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 353,
      "index": 2263,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifySubnetAttribute",
      "description": "Handles conversion of subnet attribute modification requests into HTTP format and parses responses. Processes input of type `Types.ModifySubnetAttributeRequest.t` and returns unit output. Decodes AWS error responses into native error types based on HTTP status and XML content.",
      "description_length": 277,
      "index": 2264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyTrafficMirrorFilterNetworkServices",
      "description": "Handles conversion between native input and HTTP requests for modifying traffic mirror filter network services, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Parses AWS error responses into internal error representations, validating status codes and error types against defined specifications.",
      "description_length": 429,
      "index": 2265,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyTrafficMirrorFilterRule",
      "description": "Handles conversion between native input and HTTP requests for modifying a traffic mirror filter rule, encoding parameters in query format and setting necessary headers. Processes HTTP responses to extract results or specific error types based on AWS XML deserialization. Works with structured input and output types representing the API's request and response models.",
      "description_length": 367,
      "index": 2266,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyTrafficMirrorSession",
      "description": "Handles AWS EC2 traffic mirror session modifications by converting input data to HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Designed for direct interaction with the EC2 API to update traffic mirror session configurations.",
      "description_length": 376,
      "index": 2267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyTransitGateway",
      "description": "Converts native input structures into HTTP requests for AWS EC2 transit gateway modifications, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 378,
      "index": 2268,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyTransitGatewayPrefixListReference",
      "description": "Handles the conversion of request inputs into HTTP format for modifying a transit gateway prefix list reference, including setting action and version parameters. Processes HTTP responses to extract structured results or decode specific AWS error formats. Operates on native request and response types defined for the EC2 service's modify transit gateway prefix list reference operation.",
      "description_length": 386,
      "index": 2269,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyTransitGatewayVpcAttachment",
      "description": "Converts input parameters into an HTTP request for modifying a transit gateway VPC attachment, including setting action and version parameters. Processes HTTP responses into structured output or specific error types based on AWS XML formatting. Handles error parsing by matching HTTP status codes with expected error conditions from the API specification.",
      "description_length": 355,
      "index": 2270,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyVolume",
      "description": "Handles AWS API requests for modifying volumes by converting between native input and HTTP request formats, and decoding HTTP responses into structured outputs or errors. Operates on specific AWS request and response types, including error structures defined by the API. Used to construct signed requests for the EC2 service and process server responses accurately.",
      "description_length": 365,
      "index": 2271,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVolumeAttribute",
      "description": "Handles AWS API requests for modifying volume attributes by converting between native input and HTTP formats, and parsing error responses. Operates on specific request and error types defined by the AWS API. Used to construct signed requests for volume attribute updates and decode corresponding HTTP responses.",
      "description_length": 311,
      "index": 2272,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpcAttribute",
      "description": "Handles AWS VPC attribute modification by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Designed for direct interaction with EC2 service endpoints using defined input and output structures.",
      "description_length": 332,
      "index": 2273,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpcEndpoint",
      "description": "Handles AWS VPC endpoint modifications by converting input data into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific AWS service signing and validates error responses against defined API specifications. Works with native request and result types, ensuring accurate translation between HTTP and internal representations.",
      "description_length": 391,
      "index": 2274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpcEndpointConnectionNotification",
      "description": "Handles the conversion of request inputs into HTTP format for modifying VPC endpoint connection notifications, including proper query encoding and setting action parameters. Processes HTTP responses to extract structured results or specific AWS error types based on defined mappings. Operates on native request and response types tied to VPC endpoint configuration changes.",
      "description_length": 373,
      "index": 2275,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyVpcEndpointServiceConfiguration",
      "description": "Handles AWS VPC endpoint service configuration modifications by setting the signing method, specifying the service, and converting between native input and HTTP requests. Processes HTTP responses and parses AWS error messages into structured error types. Used to interact with AWS EC2 or similar services for managing VPC endpoint configurations.",
      "description_length": 346,
      "index": 2276,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpcEndpointServicePermissions",
      "description": "Handles request signing and HTTP conversion for modifying permissions on an AWS VPC endpoint service. Processes input containing service configuration and returns structured HTTP requests, decoding responses into native output or error types. Specifically manages AWS EC2 service interactions with precise error parsing and query parameter encoding.",
      "description_length": 349,
      "index": 2277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpcPeeringConnectionOptions",
      "description": "Converts input parameters into an HTTP request for modifying VPC peering connection options, including setting the action, version, and query encoding. Processes HTTP responses to extract results or specific AWS error types based on status codes and XML content. Operates on structured request and response types defined for VPC peering configuration changes.",
      "description_length": 359,
      "index": 2278,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyVpcTenancy",
      "description": "Converts AWS VPC tenancy modification requests into HTTP format, including encoding parameters and setting action and version. Parses HTTP responses into structured results or specific error types based on AWS XML deserialization. Handles error validation by matching HTTP status codes with expected error formats.",
      "description_length": 314,
      "index": 2279,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpnConnection",
      "description": "Handles conversion between native input and HTTP requests for modifying a VPN connection, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types.",
      "description_length": 364,
      "index": 2280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ModifyVpnConnectionOptions",
      "description": "Handles conversion between native input and HTTP requests for modifying VPN connection options, including encoding parameters and setting action/version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types.",
      "description_length": 358,
      "index": 2281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyVpnTunnelCertificate",
      "description": "Handles conversion between native input and HTTP requests for modifying a VPN tunnel certificate, including setting action and version parameters. Processes HTTP responses and maps them to specific output or error types based on AWS service conventions. Parses AWS error responses into internal error representations matching the API's defined error set.",
      "description_length": 354,
      "index": 2282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ModifyVpnTunnelOptions",
      "description": "Handles conversion between native input and HTTP requests for modifying VPN tunnel options, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error codes against defined specifications.",
      "description_length": 400,
      "index": 2283,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.MonitorInstances",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 instance monitoring, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types.",
      "description_length": 365,
      "index": 2284,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.MoveAddressToVpc",
      "description": "Handles conversion between native input and HTTP requests for moving an Elastic IP address to a VPC, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error codes against defined specifications.",
      "description_length": 409,
      "index": 2285,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ProvisionByoipCidr",
      "description": "Handles the conversion of input parameters into an HTTP request for provisioning a BYOIP CIDR block, including setting action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML formatting. Works with structured request and response types defined for the EC2 service.",
      "description_length": 330,
      "index": 2286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.PurchaseHostReservation",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 host reservation purchases, encoding parameters in query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into application-specific errors, validating status codes and error types.",
      "description_length": 369,
      "index": 2287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.PurchaseReservedInstancesOffering",
      "description": "Converts input parameters into an HTTP request for purchasing reserved instances, encoding necessary parameters and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS service conventions. Handles error parsing from XML responses to match API-defined error cases.",
      "description_length": 324,
      "index": 2288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.PurchaseScheduledInstances",
      "description": "Handles conversion between native input and HTTP requests for purchasing scheduled instances, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Works with AWS service-specific request and response structures, including error parsing tied to HTTP status codes.",
      "description_length": 391,
      "index": 2289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RebootInstances",
      "description": "Handles AWS EC2 instance reboot requests by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls with specific input and error types tied to EC2's reboot operation. Decodes HTTP responses to determine success or specific error conditions based on AWS XML structure.",
      "description_length": 327,
      "index": 2290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RegisterImage",
      "description": "Handles conversion between native input and HTTP requests for AWS image registration, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 394,
      "index": 2291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RegisterInstanceEventNotificationAttributes",
      "description": "Handles conversion between native input and HTTP requests for AWS instance event notification configuration. Processes specific input and output types related to registering instance event attributes, and decodes error responses from AWS API calls. Used to construct and interpret requests for managing EC2 instance event notifications.",
      "description_length": 336,
      "index": 2292,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.RegisterTransitGatewayMulticastGroupMembers",
      "description": "Handles AWS EC2 API requests to register members in a transit gateway multicast group. Converts input data to HTTP requests and parses HTTP responses into structured outputs or errors. Processes AWS error responses into native error types for specific API interactions.",
      "description_length": 269,
      "index": 2293,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RegisterTransitGatewayMulticastGroupSources",
      "description": "Handles AWS EC2 API requests to register sources with a transit gateway multicast group. Converts input parameters to HTTP requests and parses HTTP responses into structured output or error types. Processes AWS error responses into native error representations for precise handling.",
      "description_length": 282,
      "index": 2294,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RejectTransitGatewayPeeringAttachment",
      "description": "Handles the conversion of input parameters into HTTP requests for rejecting a transit gateway peering attachment, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with request and response types defined in the AWS EC2 API for this particular operation.",
      "description_length": 354,
      "index": 2295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RejectTransitGatewayVpcAttachment",
      "description": "Handles AWS EC2 API requests to reject a transit gateway VPC attachment by encoding and decoding HTTP requests and responses. Operates on specific input and output types representing the request and result structures of the operation. Parses AWS error responses into native error types for precise error handling.",
      "description_length": 313,
      "index": 2296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RejectVpcEndpointConnections",
      "description": "Handles conversion between native input and HTTP requests for rejecting VPC endpoint connections, encoding parameters in query format and setting action and version. Processes HTTP responses to extract results or specific AWS error types, ensuring alignment with defined API structures. Works with input and output types representing VPC endpoint connection rejection requests and results, and internal error representations.",
      "description_length": 425,
      "index": 2297,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.RejectVpcPeeringConnection",
      "description": "Handles the conversion of input parameters into HTTP requests for rejecting a VPC peering connection, including setting action and version parameters. Processes HTTP responses to extract results or specific error types based on AWS XML structure. Works with native request and result types, as well as AWS-specific error representations.",
      "description_length": 337,
      "index": 2298,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ReleaseAddress",
      "description": "Handles AWS request signing and HTTP conversion for releasing an EC2 address. Converts input parameters into signed HTTP requests and decodes response bodies into success or error states. Parses AWS error responses into specific internal error types based on HTTP status and XML content.",
      "description_length": 287,
      "index": 2299,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ReleaseHosts",
      "description": "Handles AWS request signing and HTTP conversion for releasing hosts, including encoding requests with action and version parameters. Processes input of type `Types.ReleaseHostsRequest.t` and outputs `Types.ReleaseHostsResult.t`, with error parsing from XML responses. Decodes HTTP responses into structured results or specific error types based on status codes.",
      "description_length": 361,
      "index": 2300,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ReplaceIamInstanceProfileAssociation",
      "description": "Handles the replacement of an IAM instance profile association by encoding and decoding HTTP requests and responses for AWS EC2. Operates on structured input and output types representing the association request and result, and parses AWS-specific error responses into native error types. Used to update instance profile associations in EC2 instances via direct API interaction.",
      "description_length": 378,
      "index": 2301,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ReplaceNetworkAclAssociation",
      "description": "Handles AWS EC2 network ACL association replacement by encoding request parameters into HTTP queries and decoding response data. Processes input containing association IDs and ACL IDs, returning results or service-specific errors. Parses HTTP responses to identify and structure AWS API errors based on status codes and XML content.",
      "description_length": 332,
      "index": 2302,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ReplaceNetworkAclEntry",
      "description": "Handles AWS EC2 network ACL entry replacement by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded HTTP requests and responses for the EC2 service, using specific input and error types defined in the AWS API. Parses AWS error responses into native error representations for accurate error handling.",
      "description_length": 353,
      "index": 2303,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ReplaceRoute",
      "description": "Handles conversion between native input and HTTP requests for AWS route replacement, encoding parameters and setting action and version. Processes HTTP responses, decoding them into output or specific error types. Parses AWS error responses into internal error representations based on status code and XML content.",
      "description_length": 314,
      "index": 2304,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ReplaceRouteTableAssociation",
      "description": "Handles AWS EC2 route table association replacement by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to dynamically update route table associations in network configurations.",
      "description_length": 346,
      "index": 2305,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ReplaceTransitGatewayRoute",
      "description": "Handles AWS EC2 transit gateway route replacement by converting input parameters into signed HTTP requests and parsing HTTP responses into structured results. Operates on specific request and response types defined in the EC2 API, including error decoding based on HTTP status codes. Used to update route entries in a transit gateway by specifying the destination CIDR and target attachment.",
      "description_length": 391,
      "index": 2306,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ReportInstanceStatus",
      "description": "Handles conversion between native input and HTTP requests for AWS instance status reporting, including query parameter encoding and signing configuration. Processes HTTP responses to extract results or decode specific AWS error formats. Works with AWS service identifiers, request inputs, and error responses tied to instance status operations.",
      "description_length": 344,
      "index": 2307,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RequestSpotFleet",
      "description": "Converts AWS RequestSpotFleet requests into HTTP format, handling query encoding and setting action/version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Processes error responses by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 334,
      "index": 2308,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RequestSpotInstances",
      "description": "Handles conversion between native input and HTTP requests for AWS EC2 spot instance requests, encoding parameters into query format and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 393,
      "index": 2309,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ResetEbsDefaultKmsKeyId",
      "description": "Handles AWS EC2 API requests to reset the default KMS key for EBS volumes, encoding inputs into HTTP queries and decoding responses. Processes input containing volume identifiers and output returning confirmation of the reset action. Parses AWS error responses into specific internal error types for precise handling.",
      "description_length": 317,
      "index": 2310,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ResetFpgaImageAttribute",
      "description": "Handles conversion between native input and HTTP requests for AWS FPGA image attribute resets, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Works with AWS service-specific signing, request formatting, and error parsing for FPGA-related API calls.",
      "description_length": 378,
      "index": 2311,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ResetImageAttribute",
      "description": "Handles AWS request signing and HTTP conversion for image attribute resets. Converts input data into signed HTTP requests and parses response bodies into structured outputs or errors. Processes AWS error responses by mapping them to service-specific error types based on status codes and XML content.",
      "description_length": 300,
      "index": 2312,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.ResetInstanceAttribute",
      "description": "Handles AWS instance attribute reset operations by defining request signing parameters, converting between native input and HTTP requests, and parsing HTTP responses into structured outputs or errors. Works with AWS-specific request and error types, including signature versions and service identifiers. Used to construct and validate AWS EC2 instance attribute reset requests and interpret their responses.",
      "description_length": 407,
      "index": 2313,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ResetNetworkInterfaceAttribute",
      "description": "Handles AWS API requests for resetting network interface attributes by converting between native input and HTTP formats, and decoding responses. Operates on specific input types representing network interface reset requests and outputs no data. Parses AWS error responses into internal error types for precise error handling during API calls.",
      "description_length": 342,
      "index": 2314,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.ResetSnapshotAttribute",
      "description": "Handles AWS request signing and HTTP conversion for snapshot attribute resets, including encoding requests and parsing error responses. Operates on input structures representing snapshot attribute reset requests and outputs no data. Used to construct and process AWS API calls for modifying snapshot attributes, ensuring proper formatting and error handling.",
      "description_length": 358,
      "index": 2315,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.RestoreAddressToClassic",
      "description": "Converts AWS request inputs into HTTP requests with proper query encoding and sets action and version parameters. Parses HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 325,
      "index": 2316,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RestoreManagedPrefixListVersion",
      "description": "Handles conversion between native input and HTTP requests for restoring a managed prefix list version, including setting action and version parameters. Processes HTTP responses into structured outputs or specific error types based on AWS API conventions. Works with input and output records defined in the associated types module, and parses AWS error responses into internal error representations.",
      "description_length": 398,
      "index": 2317,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RevokeClientVpnIngress",
      "description": "Handles AWS Client VPN ingress rule revocation by converting input parameters into signed HTTP requests and parsing response data. Operates on structured request and result types specific to the RevokeClientVpnIngress API action. Processes HTTP interactions for error handling and response decoding in AWS EC2 operations.",
      "description_length": 321,
      "index": 2318,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.RevokeSecurityGroupEgress",
      "description": "Handles AWS EC2 security group egress rule revocation by converting input parameters into HTTP requests and parsing HTTP responses into structured outputs. Operates on specific request and result types defined in the EC2 API, including error handling for AWS-specific error formats. Processes HTTP interactions for security group management tasks such as removing network access rules.",
      "description_length": 385,
      "index": 2319,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RevokeSecurityGroupIngress",
      "description": "Handles AWS security group egress revocation by converting input parameters into HTTP requests and parsing response data. Operates on structured request and result types specific to the RevokeSecurityGroupIngress API action. Processes HTTP responses to extract success results or detailed error information from AWS.",
      "description_length": 316,
      "index": 2320,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.RunInstances",
      "description": "Converts AWS RunInstances requests into HTTP format and handles response decoding, including error parsing based on HTTP status codes and XML content. Operates on input types representing instance launch configurations and output types encapsulating reservation data. Used to initiate EC2 instance launches and process corresponding API responses.",
      "description_length": 347,
      "index": 2321,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.RunScheduledInstances",
      "description": "Handles AWS EC2 instance scheduling by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded API calls with specific request and response formats for instance launch configurations. Parses AWS error responses into typed error representations for precise handling.",
      "description_length": 339,
      "index": 2322,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.SearchLocalGatewayRoutes",
      "description": "Handles conversion between native input and HTTP requests for AWS local gateway route searches, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured output or specific error types based on AWS XML format. Parses AWS error responses into domain-specific errors, validating status codes and error codes against defined specifications.",
      "description_length": 405,
      "index": 2323,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.SearchTransitGatewayMulticastGroups",
      "description": "Handles AWS EC2 API requests to search transit gateway multicast groups by converting input to HTTP requests and parsing responses. Operates on structured request and result types specific to the EC2 service. Decodes error responses from AWS API calls into native error types for precise handling.",
      "description_length": 297,
      "index": 2324,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.SearchTransitGatewayRoutes",
      "description": "Handles AWS EC2 API requests to search transit gateway routes by converting input parameters into HTTP requests and parsing HTTP responses into structured results. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to retrieve route information from AWS transit gateways in a programmatic and reliable manner.",
      "description_length": 395,
      "index": 2325,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.SendDiagnosticInterrupt",
      "description": "Converts AWS service requests into HTTP format and handles response decoding, specifically for sending diagnostic interrupts. Operates on input structures representing the request and outputs unit, with error handling for AWS-specific XML responses. Parses HTTP status codes and error messages to validate and translate AWS error responses into internal error types.",
      "description_length": 366,
      "index": 2326,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.StartInstances",
      "description": "Converts AWS instance start requests into HTTP format and processes responses, handling encoding, decoding, and error parsing. Operates on structured input and output types specific to EC2 instance initiation and error responses. Used to interface with AWS API for launching instances and managing associated errors.",
      "description_length": 316,
      "index": 2327,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.StartVpcEndpointServicePrivateDnsVerification",
      "description": "Handles AWS VPC endpoint service private DNS verification by converting input requests to HTTP format and parsing HTTP responses into structured outputs. Processes input containing VPC endpoint service configuration and returns results or specific AWS error types. Utilizes HTTP query encoding and decodes error responses based on defined AWS error codes and status codes.",
      "description_length": 372,
      "index": 2328,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.StopInstances",
      "description": "Handles AWS EC2 instance termination by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded API calls with specific input and output types representing instance stop requests and results. Decodes error responses from AWS API into structured error types based on HTTP status and XML content.",
      "description_length": 343,
      "index": 2329,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.TerminateClientVpnConnections",
      "description": "Handles AWS Client VPN connection termination by encoding request parameters into HTTP queries and decoding response data. Processes input containing connection identifiers and returns result structures with termination status. Parses AWS error responses into typed exceptions for specific API errors.",
      "description_length": 301,
      "index": 2330,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.TerminateInstances",
      "description": "Handles AWS EC2 instance termination by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to manage instance lifecycle operations within AWS infrastructure.",
      "description_length": 349,
      "index": 2331,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.Types",
      "description": "OCaml module Types containing: Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query parameters. Works with a polymorphic type `t` and includes bidirectional mappings for string representation. Used to parse and encode volume-related data in AWS API interactions.; Creates and manipulates IPv6 address representations, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on string-based IPv6 addresses and structured JSON data. Used to process AWS API responses and construct requests involving IPv6 addresses.; Provides functions to construct, parse, and serialize objects representing private IP address specifications, including setting a primary flag and a specific IP address. Works with boolean and string values, as well as structured data formats like XML, query strings, and JSON. Used to generate AWS API requests and process responses involving network interface configurations.",
      "description_length": 994,
      "index": 2332,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.UnassignIpv6Addresses",
      "description": "Handles the conversion of input parameters into HTTP requests for unassigning IPv6 addresses, including proper query encoding and setting action-specific parameters. Processes HTTP responses to extract results or decode specific AWS error formats. Works with structured request and response types defined in the AWS EC2 API.",
      "description_length": 324,
      "index": 2333,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.UnassignPrivateIpAddresses",
      "description": "Handles AWS API requests for unassigning private IP addresses by setting the appropriate signing version and service, converting input to HTTP requests with query parameters, and parsing HTTP responses into native error or success states. Operates on structured request and error types specific to the AWS EC2 service. Used to interface with AWS EC2 to release private IP addresses programmatically.",
      "description_length": 399,
      "index": 2334,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.UnmonitorInstances",
      "description": "Handles AWS EC2 instance unmonitoring by converting input requests to HTTP format and parsing HTTP responses into structured outputs. Processes query-encoded API calls with specific signing methods and service identifiers, and maps AWS error responses to internal error types. Used to manage instance monitoring status changes in cloud infrastructure workflows.",
      "description_length": 361,
      "index": 2335,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_ec2.UpdateSecurityGroupRuleDescriptionsEgress",
      "description": "Handles conversion of input data into AWS HTTP requests for updating egress security group rule descriptions, including proper encoding and setting of action and version parameters. Processes HTTP responses to extract results or specific error information based on AWS XML structure. Works with native request and result types specific to EC2 security group updates.",
      "description_length": 366,
      "index": 2336,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.UpdateSecurityGroupRuleDescriptionsIngress",
      "description": "Handles AWS EC2 security group ingress rule description updates by converting input parameters to HTTP requests and parsing responses. Operates on structured request and result types specific to EC2's API, including error handling for AWS XML responses. Processes HTTP queries to apply changes to security group rules efficiently.",
      "description_length": 330,
      "index": 2337,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2.WithdrawByoipCidr",
      "description": "Converts AWS API input into an HTTP request with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or error types specific to the API. Handles error decoding by matching HTTP status codes with expected error formats.",
      "description_length": 273,
      "index": 2338,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "aws-ec2",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as HTTP methods, headers, query parameters, and AWS-specific credentials. Used to interact with S3 for object storage, DynamoDB for key-value data retrieval, and EC2 for instance management.",
      "description_length": 355,
      "index": 2339,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_ec2",
      "description": "The `Aws_ec2` module provides a comprehensive set of functions for interacting with AWS EC2 services, handling request signing, HTTP conversion, and response parsing. It supports a wide range of operations, including instance management, network configuration, volume handling, and resource associations, with specific data types like `Types.AssignIpv6AddressesRequest.t`, `Types.VolumeAttachment.t`, and `Types.DescribeInstancesResult.t`. It enables actions such as launching instances, attaching volumes, managing security groups, and handling VPC configurations, while accurately mapping AWS error responses to internal error types for robust error handling.",
      "description_length": 661,
      "index": 2340,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2341,
    "meaningful_modules": 2341,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 994,
    "min_description_length": 214,
    "avg_description_length": 339.7753096967108,
    "embedding_file_size_mb": 8.503191947937012
  }
}