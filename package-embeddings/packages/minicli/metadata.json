{
  "package": "minicli",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:58.686887",
  "modules": [
    {
      "module_path": "Minicli.CLI",
      "library": "minicli",
      "description": "This module enables structured parsing of command-line arguments into typed values (int, char, string, float, bool), supporting both mandatory and optional parameters with default fallbacks. It processes a transformed `Sys.argv` list alongside option strings to handle flag toggling, enforce required arguments, and validate against unused options. Typical use cases include building CLI tools requiring precise argument validation, such as parsing configuration flags, numeric thresholds, or file paths with safety checks.",
      "description_length": 523,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Minicli",
      "library": "minicli",
      "description": "This module parses command-line arguments into typed values, supporting both mandatory and optional parameters with defaults. It processes `Sys.argv` to handle flags, enforce required arguments, and validate against unused options. Main data types include option specifications for int, char, string, float, and bool, with operations to parse and validate inputs. You can build CLI tools that safely parse configuration flags, numeric thresholds, or file paths with strict validation.",
      "description_length": 484,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 523,
    "min_description_length": 484,
    "avg_description_length": 503.5,
    "embedding_file_size_mb": 0.007693290710449219
  }
}