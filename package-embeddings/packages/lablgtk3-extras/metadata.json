{
  "package": "lablgtk3-extras",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:32:37.138756",
  "modules": [
    {
      "module_path": "lablgtk3-extras",
      "description": "Provides functions for creating and managing GTK+ widgets, handling signals, and simplifying UI layout. Works with GTK+ data types such as buttons, labels, and containers. Enables rapid development of interactive GUIs by offering direct access to widget properties and event callbacks.",
      "description_length": 285,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gdir",
      "description": "Provides functions to manage and retrieve a selected directory path, supporting operations to update and query the current selection. Works with string options to represent the directory path. Used to track user-selected directories in interactive command-line tools.",
      "description_length": 267,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Configwin_ihm",
      "description": "Provides functions to create and manage a graphical checkbox interface for boolean parameters. Works with boolean values and GUI event handlers to reflect user interactions. Used to implement configuration options in a graphical settings panel.",
      "description_length": 244,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Configwin",
      "description": "The module provides functions to create and manage graphical interfaces for editing configuration parameters, supporting types like strings, booleans, colors, and hotkeys, along with layout constructs such as boxes and tabbed interfaces. It operates on configuration structures and parameter kinds, enabling customizable UIs for applications requiring user-configurable settings, with options for apply actions and interactive controls. Specific use cases include building tools for theme customization, application preferences, or data entry forms with dynamic input validation.",
      "description_length": 579,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gmylist",
      "description": "Provides functions to manage and manipulate a list of tree-view items, including sorting and rendering. Operates on tree structures and integer-based sorting indices. Used to dynamically update displayed data based on user interactions or application state changes.",
      "description_length": 265,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Okey",
      "description": "Provides functions to register and manage key press event handlers for GTK widgets, allowing precise control over key combinations and event propagation. Works with modifier lists, key symbols (Gdk.keysym), and custom handler structures to define conditional key responses. Used to bind specific key presses to actions, ignore certain keys, and manage handler trees for complex input scenarios.",
      "description_length": 394,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gstuff",
      "description": "Locates the first child of a tree node using a tree store and iter, retrieves a row reference for the iter above in a model, and finds a row reference for the iter below in a tree store. Works with Gtk tree iterators and row references within GTree structures. Used to navigate and reference specific positions in hierarchical data displays.",
      "description_length": 341,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Configwin_keys",
      "description": "The module provides integer constants mapping X11 key symbols to OCaml values, enabling low-level keyboard event handling, input method switching, and support for international layouts. It includes specific key codes for Japanese, Arabic, Cyrillic, and Hangul input, along with function keys, modifiers, and special characters, facilitating precise control over keyboard interactions in X11 environments.",
      "description_length": 404,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Configwin_types",
      "description": "The module provides functionality for managing key symbol conversions, configuration parameter declarations, and HTML element mappings, focusing on GUI and keyboard interaction logic. It works with structured data types like key modifiers, strings, and custom records such as `html_binding` to facilitate UI element value associations. Specific use cases include defining keyboard options and organizing configuration settings for interactive interfaces.",
      "description_length": 454,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gmytree",
      "description": "Provides functions to manage and query a tree structure with mutable node selection, supporting operations like node traversal and subtree modification. Works with hierarchical data represented as a tree, where each node may hold optional values. Used to dynamically track and update the currently selected node during tree navigation or editing tasks.",
      "description_length": 352,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gtksv_utils",
      "description": "Provides functions to read and store user-selected source style schemes, and applies a given function to update registered source buffers when a scheme changes. Works with style scheme selections and registered source buffers. Used to persist and apply custom syntax highlighting settings in a text editor interface.",
      "description_length": 316,
      "index": 10,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 579,
    "min_description_length": 244,
    "avg_description_length": 354.6363636363636,
    "embedding_file_size_mb": 0.04036903381347656
  }
}