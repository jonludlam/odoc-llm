{
  "package": "slipshow",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 7,
  "creation_timestamp": "2025-06-18T16:30:31.989048",
  "modules": [
    {
      "module_path": "Data_contents.Internal",
      "description": "This module provides functions for retrieving precomputed string constants and hash values, primarily serving as fixed identifiers or checksums. It operates on string data, including fixed-length hexadecimal representations, and supports use cases like data integrity verification, unique identifier generation, and file-related data processing through predefined static values. Specific operations include hashing arbitrary inputs into 32-character hex strings and managing hardcoded identifiers for reference within the codebase.",
      "description_length": 531,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "slipshow",
      "description": "Processes and manipulates slide sequences by parsing markdown content, extracting headers and content blocks, and generating structured output. Operates on strings, lists, and custom slide records. Used to transform raw lecture notes into formatted presentation slides with embedded metadata.",
      "description_length": 292,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Previewer",
      "description": "Provides functions to create a live previewer with a callback, preview raw source code, and preview compiled content. Works with HTML elements and delayed compilation data. Used to dynamically update a web interface with source or compiled output without refreshing the page.",
      "description_length": 275,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Slipshow",
      "description": "Converts raw content into a delayed structure that defers rendering decisions, supports asset resolution, and enables server-side image processing. Operates on strings, assets, and starting_state tuples, which represent page indices and identifiers. Used to generate preview-ready outputs or markdown equivalents while managing external resources dynamically.",
      "description_length": 359,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Data_files",
      "description": "Reads the contents of a specific file path and returns its raw string data. Operates on a custom file type representing file paths and metadata. Used to load configuration files and text-based data sources at runtime.",
      "description_length": 217,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Data_contents",
      "description": "contains precomputed string constants and hash values for data integrity checks, unique identifiers, and reference management. it handles 32-character hex strings generated from arbitrary inputs and manages hardcoded identifiers. operations include hashing, verification, and lookup of static values. examples include generating checksums for data validation and retrieving predefined identifiers for internal references.",
      "description_length": 421,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Communication",
      "description": "Converts between a string representation and a structured message type, supporting optional parsing. Handles payload data and message envelopes with explicit encoding and decoding. Used to serialize and deserialize communication records in network protocols.",
      "description_length": 258,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 531,
    "min_description_length": 217,
    "avg_description_length": 336.14285714285717,
    "embedding_file_size_mb": 0.025857925415039062
  }
}