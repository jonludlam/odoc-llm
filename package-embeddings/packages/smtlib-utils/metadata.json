{
  "package": "smtlib-utils",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T23:00:20.436328",
  "modules": [
    {
      "module_path": "Smtlib_utils.V_2_6.Lexer.A",
      "library": "smtlib-utils",
      "description": "This module enables the construction and manipulation of SMT-LIB 2.6 abstract syntax elements\u2014such as terms, types, declarations, and solver commands\u2014with support for arithmetic, bitvector, and higher-order logic operations. It provides combinators for building complex expressions, algebraic data type definitions",
      "description_length": 314,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtlib_utils.V_2_6.Loc",
      "library": "smtlib-utils",
      "description": "This module defines a location type with file, line, and column ranges for precise source positioning. It provides functions to create and compare locations, format them for output, and extract positional data from lexing buffers. Use cases include tracking source code positions during parsing and generating error messages with accurate file and line information.",
      "description_length": 365,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtlib_utils.V_2_6.Parser",
      "library": "smtlib-utils",
      "description": "This module defines a parser for SMT-LIB version 2.6, handling token types like identifiers, parentheses, and SMT-specific keywords. It provides functions to parse types, terms, and statements from a lexing buffer using a given tokenization function. It is used to convert SMT-LIB input into an abstract syntax tree for further processing or analysis.",
      "description_length": 351,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtlib_utils.V_2_6.Lexer",
      "library": "smtlib-utils",
      "description": "This module provides functions for lexing SMT-LIB 2.6 input, including newline counting, token parsing, and internal lexing table handling. It operates on lex buffers and produces tokens for parser consumption. Useful for implementing custom SMT-LIB frontends or analysis tools requiring low-level input processing.",
      "description_length": 315,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtlib_utils.V_2_6",
      "library": "smtlib-utils",
      "description": "This module implements a parser and lexer for SMT-LIB version 2.6, converting input from files, strings, or channels into an abstract syntax tree. It processes SMT-LIB tokens such as identifiers, parentheses, and keywords, and tracks source locations for error reporting. Use cases include building SMT solver interfaces, static analysis tools, and formal verification systems that require precise parsing of SMT-LIB scripts.",
      "description_length": 425,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Smtlib_utils",
      "library": "smtlib-utils",
      "description": "Parses SMT-LIB version 2.6 input from files, strings, or channels into an abstract syntax tree. Handles tokens like identifiers, parentheses, and keywords while tracking source locations for error reporting. Useful for building SMT solvers, static analyzers, and formal verification tools that process SMT-LIB scripts.",
      "description_length": 318,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 425,
    "min_description_length": 314,
    "avg_description_length": 348.0,
    "embedding_file_size_mb": 0.08739280700683594
  }
}