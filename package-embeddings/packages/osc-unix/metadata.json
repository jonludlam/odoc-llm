{
  "package": "osc-unix",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:06.975585",
  "modules": [
    {
      "module_path": "Osc_unix.Udp.Client",
      "description": "Manages network communication by creating and destroying instances that handle sending OSC packets to specified socket addresses. It operates with a custom type `t` representing client sessions and uses Unix socket addresses for target destinations. This is used to transmit real-time audio control data over a network.",
      "description_length": 319,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osc_unix.Udp.Server",
      "description": "Handles socket creation and destruction for network communication, with support for receiving OSC packets along with sender addresses. Operates on Unix socket addresses and OSC packet structures. Used to manage incoming data in real-time audio applications.",
      "description_length": 257,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Osc_unix.Udp",
      "description": "Manages network communication for real-time audio control by creating and destroying client sessions, sending OSC packets to Unix socket addresses, and receiving OSC packets along with sender addresses. The core type `t` represents active sessions, while Unix socket addresses and OSC packet structures define communication endpoints and data formats. It enables bidirectional transmission and reception of control data in real-time audio systems. Examples include sending volume adjustments to a remote server or receiving MIDI input from a networked device.",
      "description_length": 559,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "osc-unix",
      "description": "Handles encoding and decoding of OSC messages and bundles using binary and textual representations. Operates on custom types such as `osc_message`, `osc_bundle`, and `osc_type` to represent OSC data. Enables real-time audio control communication in applications like live performance software and multimedia systems.",
      "description_length": 316,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osc_unix",
      "description": "creates and manages real-time audio control sessions over Unix sockets, handling bidirectional OSC packet transmission and reception. It uses `t` to represent active sessions, with Unix socket addresses and OSC packet structures defining communication endpoints and data formats. Users can send control messages like volume changes to remote servers or receive MIDI input from networked devices. Operations include session initialization, packet sending, and address-aware reception.",
      "description_length": 483,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 559,
    "min_description_length": 257,
    "avg_description_length": 386.8,
    "embedding_file_size_mb": 0.018606185913085938
  }
}