{
  "package": "osc-unix",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:53:22.012691",
  "modules": [
    {
      "module_path": "Osc_unix.Udp.Server",
      "library": "osc-unix",
      "description": "This module implements a UDP server for handling OSC packets. It provides functions to create and destroy a server instance, and to receive packets along with their source addresses. The server processes incoming data into OSC packets, handling errors related to malformed or unsupported typetags.",
      "description_length": 297,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Osc_unix.Udp.Client",
      "library": "osc-unix",
      "description": "This module implements UDP client functionality for sending OSC packets over a network. It provides operations to create and destroy client instances, and to send OSC packets to a specified socket address. The module works with OSC packet data structures and Unix socket addresses, enabling direct communication with UDP-based OSC servers.",
      "description_length": 339,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Osc_unix.Udp",
      "library": "osc-unix",
      "description": "This module implements UDP-based OSC communication with functions to send and receive OSC packets using Unix sockets. It provides client operations for transmitting packets to a target address and server operations for listening on a port, parsing incoming packets, and extracting source addresses. Concrete use cases include real-time audio control over a network, such as sending parameter updates to a synthesizer or receiving sensor data from a remote device.",
      "description_length": 463,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Osc_unix",
      "library": "osc-unix",
      "description": "This module implements UDP-based OSC communication using Unix sockets, offering functions to send and receive OSC packets. It supports client operations for transmitting packets to a target address and server operations for listening on a port, parsing incoming packets, and extracting source addresses. Use cases include real-time audio control over a network, such as sending parameter updates to a synthesizer or receiving sensor data from a remote device.",
      "description_length": 459,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 463,
    "min_description_length": 297,
    "avg_description_length": 389.5,
    "embedding_file_size_mb": 0.05840778350830078
  }
}