{
  "package": "weberizer",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:30:42.726713",
  "modules": [
    {
      "module_path": "Weberizer.Binding",
      "description": "Provides operations to create and manage a collection of variable bindings, supporting string, HTML, and function-based assignments. Works with a custom type `t` representing the collection, allowing variables to be bound to values, HTML fragments, or functions that generate content dynamically. Used to inject dynamic content into templates, handle variable substitutions, and manage error handling during function execution.",
      "description_length": 427,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Weberizer.Path",
      "description": "Provides operations to manipulate and analyze file paths, including extracting filenames, generating relative paths, and determining navigation and translation links. Works with a custom path type `t` that represents file or directory locations. Used to generate navigation menus and translation links for web content, and to compute relative paths between directories.",
      "description_length": 369,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Weberizer.Cache",
      "description": "Provides functions to create and manage a persistent cache with dependency tracking and time-based refresh. Operates on values of any marshal-able type and caches them under a string key, supporting updates based on a provided function and dependencies between caches. Used to store and retrieve computed results that may need periodic regeneration or depend on other cached values.",
      "description_length": 382,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "weberizer",
      "description": "Generates OCaml modules from templates, allowing variable assignment and context-aware string escaping. Works with string templates and custom functions to extend rendering capabilities. Enables secure template rendering by enforcing variable presence and custom logic integration.",
      "description_length": 281,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Weberizer",
      "description": "combines variable binding, path manipulation, and caching to enable dynamic HTML generation. it manages variable substitutions, path relationships, and cached computations, using custom types for bindings, paths, and cached values. it allows injecting dynamic content, generating navigation links, and storing computed results with dependencies. examples include replacing HTML sections with OCaml variables, creating relative links between files, and caching rendered templates for performance.",
      "description_length": 495,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 495,
    "min_description_length": 281,
    "avg_description_length": 390.8,
    "embedding_file_size_mb": 0.018599510192871094
  }
}