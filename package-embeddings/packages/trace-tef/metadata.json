{
  "package": "trace-tef",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:05:01.159540",
  "modules": [
    {
      "module_path": "Trace_tef.Subscriber.Callbacks",
      "library": "trace-tef",
      "description": "This module defines callbacks invoked during tracing events, handling initialization, thread/process naming, span entry/exit, data attachment, logging, counters, and manual span management. It works with trace subscribers, spans, timestamps, and structured data. Concrete use cases include capturing thread names, logging span durations, attaching metadata to traces, and emitting counter metrics during application execution.",
      "description_length": 426,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Trace_tef.Subscriber.Buf_pool",
      "library": "trace-tef",
      "description": "Manages a pool of buffers for efficiently handling trace event data. It allows creating a pool with specified maximum size and buffer capacity, recycling buffers to reduce allocations during high-throughput tracing scenarios. Useful for buffering and reusing memory when processing streams of trace events in real-time.",
      "description_length": 319,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trace_tef.Exporter",
      "library": "trace-tef",
      "description": "This module provides functions to create exporters that write JSON objects to output channels or buffers. It supports writing in JSONL format and manages resource handling with explicit close and flush operations. Use cases include exporting trace data to files, network streams, or in-memory buffers for logging or analysis.",
      "description_length": 325,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trace_tef.Subscriber",
      "library": "trace-tef",
      "description": "Handles trace event subscription with buffer pooling for efficient memory reuse. Provides operations to create, flush, and close subscribers, along with active status checks. Supports structured tracing through callbacks for span management, logging, and metric emission.",
      "description_length": 271,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trace_tef.Writer",
      "library": "trace-tef",
      "description": "This module writes TEF-compliant JSON trace events to a buffer. It provides functions to emit specific event types such as duration, instant, counter, and manual start/end events, along with thread and process naming. These operations work with raw event data, including timestamps, process and thread IDs, spans, and key-value arguments. Use cases include logging performance traces for analysis in tools like Chrome Tracing or Jaeger.",
      "description_length": 436,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trace_tef",
      "library": "trace-tef",
      "description": "Handles structured trace event subscription, export, and TEF-compliant JSON writing. Works with trace spans, logs, metrics, and raw event data including timestamps and thread/process IDs. Used to log performance traces into files, stdout, or buffers for analysis in tools like Chrome Tracing or Jaeger.",
      "description_length": 302,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Trace_tef_tldrs",
      "library": "trace-tef.tldrs",
      "description": "This module provides functions to configure trace collection and subscription by writing output to a specified file or environment. It defines a `collector` and `subscriber` that both target a file output, and includes `setup` and `with_setup` to manage collector lifecycle and configuration. Concrete use cases include logging trace events to disk for analysis or forwarding trace data to an external monitoring system via file output.",
      "description_length": 436,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 436,
    "min_description_length": 271,
    "avg_description_length": 359.2857142857143,
    "embedding_file_size_mb": 0.1018514633178711
  }
}