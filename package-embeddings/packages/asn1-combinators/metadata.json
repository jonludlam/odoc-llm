{
  "package": "asn1-combinators",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:17.230655",
  "modules": [
    {
      "module_path": "Asn.OID",
      "description": "Provides operations to construct, compare, and manipulate object identifiers (OIDs) as sequences of integers. Works with a custom type representing OIDs, supporting parsing from strings, conversion to node lists, and pretty-printing. Constructs OIDs from base components or appended integers, and validates their structure against specific numerical constraints.",
      "description_length": 362,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Asn.S",
      "description": "This module offers constructs for building and manipulating ASN.1-like abstract syntax trees, including recursive definitions, tagged unions, and sequence/set structures, operating on OCaml values wrapped in a typed 'a t representation. It supports encoding/decoding via custom projection/injection functions, handles specific data types like integers, bit strings, and string encodings, and includes error management for parsing. Use cases include ASN.1 type construction, data serialization, and validation with explicit tagging and structural rules.",
      "description_length": 552,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "asn1-combinators",
      "description": "Provides functions for parsing, serializing, and generating random data based on ASN.1 abstract syntax structures. Works with OCaml types that represent ASN.1 constructs such as sequences, choices, and tags. Used to handle BER and DER encoded data in protocols requiring strict ASN.1 compliance.",
      "description_length": 295,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Asn",
      "description": "Encapsulates ASN.1 grammars as OCaml types, enabling the creation and manipulation of abstract syntax trees with recursive, tagged, and structured elements. Supports encoding and decoding through projection and injection functions, handling integers, bit strings, and string types with error handling. Provides OID construction, validation, and string parsing, allowing precise control over ASN.1 object identifiers and their representation. Enables serialization of OCaml values into ASN.1 formats and validation of encoded data against defined grammars.",
      "description_length": 555,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 555,
    "min_description_length": 295,
    "avg_description_length": 441.0,
    "embedding_file_size_mb": 0.014946937561035156
  }
}