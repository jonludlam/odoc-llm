{
  "package": "bitmasks",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T23:01:11.458426",
  "modules": [
    {
      "module_path": "BitMaskSet.Int64",
      "library": "bitmasks",
      "description": "This module implements bitwise set operations using 64-bit integers as storage. It provides functions for logical AND, OR, NOT, left/right shifts, and comparisons, along with constants for zero and one. It is used to efficiently represent and manipulate sets of up to 64 elements using individual bits within an `int64`.",
      "description_length": 320,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "BitMaskSet.Int",
      "library": "bitmasks",
      "description": "This module implements bitwise set operations using integers as bitmasks, where each bit represents a set element. It supports operations like intersection (`logand`), union (`logor`), inversion (`lognot`), and bit shifting for efficient set manipulation. It is useful for compactly representing and operating on small sets of integers, particularly when elements correspond directly to bit positions.",
      "description_length": 401,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "BitMaskSet.Make",
      "library": "bitmasks",
      "description": "This module provides bitmask set operations including union, intersection, difference, and subset checks, along with transformation functions like mapping, filtering, and folding. It works with bitmask representations stored as integers, treating individual bits as ordered elements where the least significant bit is the smallest, and supports handling invalid bits through explicit masking. Typical use cases involve efficiently managing permission flags, converting between bitmasks and collections such as lists or sequences, and iterating over bit positions in specified orders.",
      "description_length": 583,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "BitMaskSet",
      "library": "bitmasks",
      "description": "This module implements bitmask-based set operations using integers as storage, where each bit represents a distinct element. It supports efficient union, intersection, difference, and comparison operations through bitwise logic, along with mapping and iteration over bit positions. It is used for managing compact sets of flags, permissions, or enumerated values where elements correspond directly to bit positions in an integer.",
      "description_length": 429,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 583,
    "min_description_length": 320,
    "avg_description_length": 433.25,
    "embedding_file_size_mb": 0.058381080627441406
  }
}