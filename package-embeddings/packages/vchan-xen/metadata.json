{
  "package": "vchan-xen",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:59.044120",
  "modules": [
    {
      "module_path": "vchan-xen",
      "description": "Provides functions for establishing and managing bidirectional communication channels using shared memory, including binding to a port, connecting to a remote domain, and sending/receiving data. Works with domain IDs, port strings, and byte sequences to facilitate low-latency data exchange. Used to enable real-time data transfer between Xen virtual machines, such as synchronizing state or exchanging control signals.",
      "description_length": 419,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Vchan_xen",
      "description": "Establishes bidirectional communication channels between domains using server and client endpoints, supporting asynchronous data transfer through read, write, and writev operations on Cstruct buffers. Manages connection state with shutdown and close methods, and provides error reporting for failed operations. Processes data streams in a non-blocking manner, suitable for networked applications requiring reliable message passing.",
      "description_length": 431,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Events_xen",
      "description": "Provides functions to manage event channels and ports for inter-domain communication, including converting between string and port representations, sending and receiving events, and establishing connections. Operates on custom types `port`, `channel`, and `event` to facilitate asynchronous event handling. Used to coordinate actions between domains, such as notifying a guest OS of a state change or triggering a process upon receiving a signal.",
      "description_length": 446,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Memory_xen",
      "description": "Provides conversion between integers and grant identifiers, and operations to map and unmap memory regions between domains. Works with custom types such as `grant`, `share`, `mapping`, and `Io_page.t` for low-level memory management. Enables direct memory access between virtual machines by creating shared memory regions and mapping them for read or write access.",
      "description_length": 364,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 446,
    "min_description_length": 364,
    "avg_description_length": 415.0,
    "embedding_file_size_mb": 0.014982223510742188
  }
}