{
  "package": "type_conv",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:55:01.469082",
  "modules": [
    {
      "module_path": "Pa_type_conv.Rewrite_tds",
      "library": "pa_type_conv",
      "description": "Performs type-directed rewriting of signature and structure items in OCaml abstract syntax trees. It transforms type expressions into corresponding signature or structure items, supporting boolean flags to control behavior. Useful for generating code based on type definitions during syntax extension or meta-programming tasks.",
      "description_length": 327,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pa_type_conv.Gen",
      "library": "pa_type_conv",
      "description": "This component provides utilities for constructing and transforming OCaml abstract syntax trees (ASTs), focusing on type definitions, expressions, and code generation tasks. It handles operations like type-to-string conversion, function application building, type parameter management, and AST node traversal/modification, while supporting delayed signature processing and record default value resolution. Designed for use in type-driven code generation and AST manipulation workflows within the Camlp4 framework.",
      "description_length": 513,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pa_type_conv",
      "library": "pa_type_conv",
      "description": "This module implements type-driven code generation and AST transformation workflows. It provides functions to register and remove type-specific code generators for both structure and signature items, supporting both immediate and delayed execution, along with record field generators and set manipulation utilities. Key operations include AST node creation based on type information, path management, and variant hashing, used in syntax extensions and type-based meta-programming tasks.",
      "description_length": 486,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 513,
    "min_description_length": 327,
    "avg_description_length": 442.0,
    "embedding_file_size_mb": 0.043888092041015625
  }
}