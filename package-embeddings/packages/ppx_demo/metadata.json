{
  "package": "ppx_demo",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:47:23.929703",
  "modules": [
    {
      "module_path": "Ppx_demo",
      "library": "ppx_demo",
      "description": "This module implements custom syntax extensions for OCaml using PPX by transforming abstract syntax trees. It provides functions to read and manipulate source files, generate demo strings with location information, and expand expressions and structures during compilation. Concrete use cases include automatically generating boilerplate code or injecting debugging information into specific parts of a program.",
      "description_length": 410,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_demo_test",
      "library": "ppx_demo.test",
      "description": "Handles test case definition and execution with functions for asserting expected outcomes and reporting results. Works with test suites, individual test cases, and custom reporters. Used to implement unit tests with structured output and failure tracking.",
      "description_length": 255,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 2,
    "filtered_empty_modules": 1,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 410,
    "min_description_length": 255,
    "avg_description_length": 332.5,
    "embedding_file_size_mb": 0.02939605712890625
  }
}