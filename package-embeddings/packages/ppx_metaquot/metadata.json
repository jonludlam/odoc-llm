{
  "package": "ppx_metaquot",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-06-18T16:28:31.195688",
  "modules": [
    {
      "module_path": "ppx_metaquot",
      "description": "Provides syntax extensions for embedding quoted expressions and patterns directly in code, supporting type-safe manipulation of abstract syntax trees. Works with OCaml's core types, including expressions, patterns, and type expressions. Enables metaprogramming tasks such as generating boilerplate code or inspecting and transforming syntax at compile time.",
      "description_length": 357,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_metaquot",
      "description": "provides a framework for meta-programming through syntax extensions, enabling the creation of custom quotation and anti-quotation syntax. it supports the definition of new syntax forms and integrates with OCaml's parsing and expansion mechanisms. users can define and manipulate abstract syntax trees, inject code at compile time, and extend the language with domain-specific notations. examples include generating boilerplate code, implementing DSLs, and transforming code structures during compilation.",
      "description_length": 504,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 2,
    "filtered_empty_modules": 6,
    "retention_rate": 0.25
  },
  "statistics": {
    "max_description_length": 504,
    "min_description_length": 357,
    "avg_description_length": 430.5,
    "embedding_file_size_mb": 0.007683753967285156
  }
}