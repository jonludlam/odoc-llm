{
  "package": "phonetic",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:59.740470",
  "modules": [
    {
      "module_path": "Phonetic.Soundex",
      "library": "phonetic",
      "description": "Implements the Soundex algorithm to convert names into phonetic codes. Works with string inputs to produce 4-character byte sequences representing their phonetic encoding. Useful for matching names that sound similar in databases or search applications.",
      "description_length": 253,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Phonetic.DoubleMetaphone",
      "library": "phonetic",
      "description": "This module implements the Double Metaphone phonetic algorithm for generating primary and secondary phonetic keys of strings. It includes functions to check for Slavo-Germanic origins, determine if a character is a vowel, and match substrings at specific positions. It operates on strings and character arrays, providing precise phonetic encoding for names and words in English and related languages. Use cases include name matching, record linkage, and fuzzy searching in databases and contact lists.",
      "description_length": 501,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Phonetic",
      "library": "phonetic",
      "description": "This module provides phonetic encoding algorithms for converting strings into phonetic keys that represent how they sound. It includes two main implementations: one for the Soundex algorithm, which generates 4-character codes useful for matching similar-sounding names, and another for the Double Metaphone algorithm, which produces primary and secondary keys to capture variations in pronunciation, including support for Slavo-Germanic names. The module operates on strings and character arrays, offering functions to detect vowels, match substrings, and generate phonetic codes for applications like fuzzy searching, record linkage, and database queries. For example, names like \"Smith\" and \"Smyth\" can be converted into matching phonetic codes to identify potential duplicates or variants.",
      "description_length": 792,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 792,
    "min_description_length": 253,
    "avg_description_length": 515.3333333333334,
    "embedding_file_size_mb": 0.011325836181640625
  }
}