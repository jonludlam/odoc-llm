{
  "package": "jsoo_storage",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:25.858548",
  "modules": [
    {
      "module_path": "WebStorage.STORAGE",
      "library": "jsoo_storage",
      "description": "This module provides low-level key-value storage operations using strings for keys and values, supporting CRUD functionality and event listeners to track changes like insertions, removals, and updates. It utilizes Hashtbl.t for filtered data representation and interfaces with browser storage systems such as localStorage or sessionStorage. It is suited for managing persistent or session-scoped data in web applications and enabling reactive updates through targeted event subscriptions with optional key prefix filtering.",
      "description_length": 523,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "WebStorage.Local",
      "library": "jsoo_storage",
      "description": "This module provides persistent client-side storage operations for managing key-value pairs in a browser's LocalStorage, including retrieval, mutation, iteration, and predicate-based filtering. It works with string-keyed data structures, hash tables for bulk operations, and event streams that track changes like insertions, updates, or deletions\u2014optionally scoped to specific key prefixes. Typical use cases include caching application state across sessions, synchronizing user preferences between browser tabs, and reacting to storage modifications in real-time with targeted event handlers.",
      "description_length": 593,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "WebStorage.Session",
      "library": "jsoo_storage",
      "description": "This module provides persistent key-value storage scoped to a browser session, supporting operations to read, write, and delete string-based entries, as well as monitor changes through event listeners. It works with string keys and values, enabling use cases like tracking temporary user state across page reloads or synchronizing data between tabs via storage events. Observers can filter changes by key prefixes to handle related data updates efficiently.",
      "description_length": 457,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "WebStorage",
      "library": "jsoo_storage",
      "description": "This module provides access to browser storage mechanisms through its `Local` and `Session` submodules, enabling persistent and session-scoped key-value storage with operations to set, get, remove, and clear entries using string keys and values. It supports event listeners for tracking insertions, updates, and deletions, with optional filtering by key prefixes, allowing applications to react to storage changes across tabs. The `Local` submodule handles persistent data such as user preferences and cached state, while `Session` manages temporary data that persists only for the duration of a session. Examples include synchronizing application settings between tabs, caching API responses, and maintaining form state across page reloads.",
      "description_length": 741,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 4,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8
  },
  "statistics": {
    "max_description_length": 741,
    "min_description_length": 457,
    "avg_description_length": 578.5,
    "embedding_file_size_mb": 0.014925003051757812
  }
}