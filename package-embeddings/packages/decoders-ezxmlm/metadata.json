{
  "package": "decoders-ezxmlm",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:44:05.691107",
  "modules": [
    {
      "module_path": "Decoders_ezxmlm.Decode.Infix",
      "library": "decoders-ezxmlm",
      "description": "This module provides infix operators for composing decoders that process XML data using the `Decoders` library. It supports monadic and applicative-style operations like `>>=`, `>|=`, `<*>`, and custom `let*`/`and*` constructs for working with nested XML structures. Concrete use cases include parsing and transforming XML documents into OCaml values with precise error handling and structure validation.",
      "description_length": 404,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Decoders_ezxmlm",
      "library": "decoders-ezxmlm",
      "description": "The module provides functions for decoding XML documents into OCaml values, including parsing elements, attributes, and nested structures. It works with XML trees represented as custom types, allowing traversal and extraction of data based on tag names and paths. Concrete use cases include reading configuration files, processing RSS feeds, and extracting data from XML-based APIs.",
      "description_length": 382,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 2,
    "filtered_empty_modules": 1,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 404,
    "min_description_length": 382,
    "avg_description_length": 393.0,
    "embedding_file_size_mb": 0.029410362243652344
  }
}