{
  "package": "happy-eyeballs-mirage",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:45.155673",
  "modules": [
    {
      "module_path": "Happy_eyeballs_mirage.S",
      "library": "happy-eyeballs-mirage",
      "description": "This module implements connection handling with dual-stack support, performing parallel IPv4/IPv6 connection attempts according to the Happy Eyeballs algorithm. It works with IP addresses, domain names, and Mirage network stacks, providing functions to resolve hostnames, connect to IP addresses directly, or connect to hosts by name with configurable timeouts and retries. Concrete use cases include establishing resilient network connections in clients that need to handle both IPv4 and IPv6, with fallback and connection prioritization managed automatically.",
      "description_length": 561,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Happy_eyeballs_mirage.Make",
      "library": "happy-eyeballs-mirage",
      "description": "This module implements connection establishment with IPv4/IPv6 race conditions handling according to RFC 8305. It provides functions to connect to hosts by name or IP address, with configurable timeouts for DNS resolution, connection attempts, and address family fallback delays. The module works with IP addresses, TCP flows, and domain names, integrating with MirageOS network stacks for asynchronous I/O operations.",
      "description_length": 418,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Happy_eyeballs_mirage",
      "library": "happy-eyeballs-mirage",
      "description": "This module implements the Happy Eyeballs algorithm to optimize connection establishment for hosts with multiple IP addresses, particularly in dual-stack IPv4/IPv6 environments. It manages parallel connection attempts, address resolution, and fallback logic, using configurable timeouts and delays to balance speed and reliability. The main data types include IP addresses, connection states, and TCP flows, with operations for resolving hostnames, initiating connections, and handling race conditions as defined in RFC 8305. Users can connect to hosts by name or IP, prioritize fast connections, and automatically handle network failures across different address families.",
      "description_length": 673,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 673,
    "min_description_length": 418,
    "avg_description_length": 550.6666666666666,
    "embedding_file_size_mb": 0.011301994323730469
  }
}