{
  "package": "current_docker",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:32:20.062702",
  "modules": [
    {
      "module_path": "Current_docker.Make.Image",
      "description": "Generates a unique string identifier for image data to ensure equality checks, serializes and deserializes image objects for database storage, and converts between hash strings and image representations. Operates on the opaque `t` type representing image data. Used to store and retrieve images in a persistent system, and to compare images based on their content.",
      "description_length": 364,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.Raw.Image",
      "description": "Generates a unique string identifier for image data to ensure equality checks, serializes and deserializes images for database storage, and converts between hash strings and image representations. Operates on a custom type `t` that encapsulates image content. Used to store and retrieve images in a persistent system, and to compare images based on their digest.",
      "description_length": 362,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.Raw.Cmd",
      "description": "Builds and manages Docker command structures using `Lwt_process.command`. Executes Docker commands with context support and facilitates container lifecycle management, including creation, execution, and cleanup. Enables running jobs inside containers, with optional termination on job cancellation.",
      "description_length": 298,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.Default.Image",
      "description": "Generates a unique string identifier for image data to serve as a database key, and converts between image objects and their serialized string representations. Handles reconstruction of image objects from stored strings and provides a hash-based lookup mechanism. Formats image objects for human-readable output.",
      "description_length": 312,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.S.Image",
      "description": "Generates a unique string identifier for image data structures, enabling efficient storage and retrieval. Converts image representations to and from serialized string formats for persistent storage. Provides methods to construct and inspect image objects using hash values, with a pretty-printing function for debugging.",
      "description_length": 320,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Current_docker.S",
      "description": "Provides functions to handle Docker context configuration, including retrieving and manipulating context names. Works with string options to represent optional context values. Used to configure Docker commands dynamically based on environment settings.",
      "description_length": 252,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.Default",
      "description": "Manages Docker image data through identifier generation, serialization, and reconstruction. Supports hash-based lookups and human-readable formatting of image objects. Converts between structured image data and string representations for storage or display. Enables efficient retrieval and manipulation of image metadata using unique keys.",
      "description_length": 339,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.Make",
      "description": "Provides functions to handle Docker context configuration, including retrieving and setting the context value for Docker commands. Works with string options to represent optional context parameters. Used to customize Docker builds based on environment-specific configurations.",
      "description_length": 276,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker.Raw",
      "description": "Encapsulates image data with a custom type `t`, enabling unique identifier generation, serialization, and hash-based comparisons for persistent storage and equality checks. Provides low-level Docker command execution and container management, allowing job execution within containers and context-aware lifecycle control. Combines image handling with process orchestration to support custom component development. Examples include storing images in a database, comparing image digests, and running jobs in isolated Docker environments.",
      "description_length": 534,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "current_docker",
      "description": "Handles asynchronous workflows with operations like fetching, building, testing, and deploying. Works with Git repositories, commits, and build artifacts. Used to automate continuous integration pipelines and update build statuses in real time.",
      "description_length": 244,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_docker",
      "description": "handles Docker context configuration and image management through string options, custom types, and low-level command execution. it supports dynamic environment-based configuration, image identifier generation, serialization, and hash-based comparisons for efficient data handling. operations include setting context values, storing images, comparing digests, and running jobs in isolated containers. examples include customizing builds with environment variables and managing image metadata for persistent storage.",
      "description_length": 515,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 534,
    "min_description_length": 244,
    "avg_description_length": 346.90909090909093,
    "embedding_file_size_mb": 0.04040813446044922
  }
}