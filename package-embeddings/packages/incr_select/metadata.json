{
  "package": "incr_select",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:50.973860",
  "modules": [
    {
      "module_path": "Incr_select.Make",
      "library": "incr_select",
      "description": "This module creates efficient incremental outputs based on a single input, where specific outputs are selected to have distinct values and others take a default. It supports selecting one or multiple keys from a hashable type, each mapping to boolean or custom values, with updates optimized to only modified outputs. Concrete use cases include managing UI focus states and dynamic configuration switches where only a subset of values change over time.",
      "description_length": 452,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Incr_select",
      "library": "incr_select",
      "description": "This module creates a dynamic set of incremental values driven by a single input, where specific outputs are selectively assigned distinct values while others take a default. The main data types include a selection key type (typically hashable), a value type for outputs, and a default value. Operations allow selecting keys to assign custom values and efficiently updating only the affected outputs. For example, it can track UI focus across many components by updating only the currently focused component's state while keeping others at a default.",
      "description_length": 550,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 550,
    "min_description_length": 452,
    "avg_description_length": 501.0,
    "embedding_file_size_mb": 0.007679939270019531
  }
}