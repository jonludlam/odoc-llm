{
  "package": "dkim",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 8,
  "creation_timestamp": "2025-08-14T23:01:55.589832",
  "modules": [
    {
      "module_path": "Dkim.Sign",
      "library": "dkim",
      "description": "This module implements DKIM signing operations for email messages, handling the creation and processing of digital signatures. It works with DKIM-specific data types including unsigned and signed message structures, cryptographic keys, and signer state. Concrete use cases include generating a signer from a DKIM key and unsigned message, streaming message data into the signer, and producing a final DKIM signature or error.",
      "description_length": 425,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim.Verify",
      "library": "dkim",
      "description": "This module verifies DKIM signatures by processing email content and querying DNS records for domain keys. It handles expiration checks, signature validation, and DNS errors during the verification process. Concrete use cases include validating incoming email authenticity and checking domain key alignment during message delivery.",
      "description_length": 331,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim.Decoder",
      "library": "dkim",
      "description": "This library provides parsing and validation operations for DKIM-related data, focusing on structured email headers, cryptographic parameters, and tag-value syntax. It works with character streams, strings, and hash maps (Hmap) to decode DKIM keys, domain names, canonicalization modes, and quoted-printable encoded values. Specific use cases include extracting service types from DKIM tags, validating header syntax during email authentication, and decoding cryptographic algorithm identifiers like RSA or SHA-256.",
      "description_length": 515,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim.Digest",
      "library": "dkim",
      "description": "This module computes and verifies DKIM message digests by processing email fields and whitespace sequences. It operates on structured email fields, domain keys, and raw strings to generate or validate cryptographic signatures. Concrete use cases include signing outgoing emails with a domain key and verifying the authenticity of incoming signed emails.",
      "description_length": 353,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim.Canon",
      "library": "dkim",
      "description": "Performs header canonicalization for DKIM signing and verification. It processes email headers using custom accumulation functions to handle field values, working with DKIM contexts, header names, and unstructured data. Useful when generating or validating DKIM signatures by normalizing header content according to DKIM rules.",
      "description_length": 327,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim.Encoder",
      "library": "dkim",
      "description": "This module encodes DKIM-related data structures into textual representations. It handles algorithms, domain names, timestamps, and signatures, producing properly formatted DKIM signature fields. It is used to generate the `DKIM-Signature` header in email messages based on provided signing parameters.",
      "description_length": 302,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim.Body",
      "library": "dkim",
      "description": "This module processes email message bodies by decoding their content according to DKIM specifications. It maintains internal state during decoding, handling data chunks, whitespace, line endings, and message termination. Concrete use cases include parsing email content for signature verification and normalizing message bodies during DKIM validation.",
      "description_length": 351,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Dkim",
      "library": "dkim",
      "description": "This module implements DKIM cryptographic workflows for email authentication, offering operations to sign and verify message headers and bodies using RSA or ED25519 algorithms with SHA1/SHA256 hashing. It manipulates structured data representations like `Dkim.map` and `Unstrctrd.t` for key-value transformations, canonicalizes content, computes message digests, and performs DNS-based public key retrieval. These capabilities enable secure email signing pipelines and validation of sender domains in mail transfer agents or anti-spoofing systems.",
      "description_length": 547,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 547,
    "min_description_length": 302,
    "avg_description_length": 393.875,
    "embedding_file_size_mb": 0.11630916595458984
  }
}