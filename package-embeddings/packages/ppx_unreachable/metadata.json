{
  "package": "ppx_unreachable",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:47:41.610187",
  "modules": [
    {
      "module_path": "Ppx_unreachable.Unreachable",
      "library": "ppx_unreachable",
      "description": "This module implements custom syntax extensions for generating unreachable code annotations in OCaml. It provides functions to expand `[%unreachable]` and `[%unreachable_msg \"message\"]` into appropriate expressions, supporting static analysis tools and runtime enforcement. The extensions are used to mark code paths that should never be reached, improving code safety and documentation in pattern matching or conditional logic.",
      "description_length": 428,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ppx_unreachable",
      "library": "ppx_unreachable",
      "description": "This module implements syntax extensions for annotating unreachable code in OCaml, expanding `[%unreachable]` and `[%unreachable_msg \"message\"]` into expressions that signal impossible code paths. It works with OCaml's parsetree structures to inject assertions or warnings during compilation. Use cases include documenting incomplete pattern matches, enforcing logical invariants, and aiding static analysis tools in detecting logic errors.",
      "description_length": 440,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 440,
    "min_description_length": 428,
    "avg_description_length": 434.0,
    "embedding_file_size_mb": 0.02935791015625
  }
}