{
  "package": "ppx_unreachable",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:14.803157",
  "modules": [
    {
      "module_path": "Ppx_unreachable.Unreachable",
      "library": "ppx_unreachable",
      "description": "This module provides functions to generate expressions that signal unreachable code during compilation. It works with OCaml's abstract syntax trees and location information to inject errors with optional custom messages. Use it to explicitly mark code paths that should never execute, such as in incomplete pattern matches or defensive programming scenarios.",
      "description_length": 358,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_unreachable",
      "library": "ppx_unreachable",
      "description": "This module generates expressions that mark code as unreachable, triggering compilation errors when such paths are accidentally used. It operates on OCaml abstract syntax trees, allowing insertion of unreachable checks with optional custom messages. Main data types include location and expression structures used to construct error signals. For example, it can inject an error into an unused pattern match branch or an unhandled exception case, ensuring such code never compiles.",
      "description_length": 480,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 480,
    "min_description_length": 358,
    "avg_description_length": 419.0,
    "embedding_file_size_mb": 0.0076885223388671875
  }
}