{
  "package": "yocaml_otoml",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:12.533611",
  "modules": [
    {
      "module_path": "Yocaml_otoml.Eff",
      "library": "yocaml_otoml",
      "description": "This module provides functions to read and parse files containing metadata described by TOML, handling both metadata extraction and content loading. It works with paths and data types that implement the `DATA_READABLE` signature, allowing direct parsing into structured values. Concrete use cases include loading configuration files or document metadata from source or target locations during static site generation.",
      "description_length": 416,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_otoml.Pipeline",
      "library": "yocaml_otoml",
      "description": "This module provides functions for reading files and parsing their metadata using TOML, specifically handling metadata extraction strategies. It operates on file paths and data-readable types, producing tasks that yield parsed metadata or combined metadata and content. Concrete use cases include extracting structured metadata from files during static site generation or configuration processing.",
      "description_length": 397,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Yocaml_otoml",
      "library": "yocaml_otoml",
      "description": "This module processes TOML-formatted metadata into structured values using the `Otoml.t` type, enabling configuration parsing and normalization for static site generation or data workflows. It includes the `Eff` submodule for effectful file reading and metadata extraction, and the `Pipeline` submodule for composing data-processing workflows. Direct operations support parsing TOML strings, reading files, and converting metadata into standardized formats. Example use cases include loading and processing configuration files or document frontmatter from source directories.",
      "description_length": 575,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 575,
    "min_description_length": 397,
    "avg_description_length": 462.6666666666667,
    "embedding_file_size_mb": 0.011303901672363281
  }
}