{
  "package": "httpun-ws-lwt",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:27:52.952092",
  "modules": [
    {
      "module_path": "Httpun_ws_lwt.Server",
      "description": "Handles TCP connections by initializing protocol-specific processing, managing read buffers, and routing requests based on address and socket inputs. Operates on socket and address types to establish and manage network interactions. Used to set up custom protocol handlers for real-time data exchange and request routing in networked applications.",
      "description_length": 347,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_ws_lwt.Client",
      "description": "Provides functions to initialize a connection with a specified buffer size and protocol, upgrade the connection to a different implementation, gracefully shut down the connection, and check if the connection is closed. Works with a custom connection type and socket abstraction. Used to manage network interactions in a non-blocking I/O context, such as handling WebSocket upgrades or terminating persistent connections.",
      "description_length": 420,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "httpun-ws-lwt",
      "description": "Provides functions for establishing and managing WebSocket connections, handling message framing, and processing binary or text data. Works with byte sequences, message buffers, and connection state objects. Used to implement real-time communication in networked applications, such as chat systems or live data streaming.",
      "description_length": 321,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httpun_ws_lwt",
      "description": "Handles WebSocket connection setup and message routing, accepting a socket and address to initialize a connection with custom configuration and error handling. Operates on socket and addr types, managing input handlers for real-time data exchange. Used to establish persistent, bidirectional communication channels in networked applications.",
      "description_length": 341,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 420,
    "min_description_length": 321,
    "avg_description_length": 357.25,
    "embedding_file_size_mb": 0.014925003051757812
  }
}