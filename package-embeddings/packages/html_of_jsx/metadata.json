{
  "package": "html_of_jsx",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:24.167898",
  "modules": [
    {
      "module_path": "Ppx",
      "library": "ppx",
      "description": "This module facilitates the transformation of OCaml abstract syntax trees by providing utilities to manipulate expressions, attributes, and labeled arguments, particularly for JSX-like syntax. It includes functions to rewrite expressions, validate attributes, split arguments, and add type constraints, supporting the development of ppx rewriters that enable React-style component usage through AST node traversal and JSX-to-OCaml code conversion. A core feature is the `rewrite_jsx` function, which systematically rewrites JSX expressions into equivalent OCaml constructs, allowing seamless integration of declarative UI patterns in OCaml codebases.",
      "description_length": 650,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "JSX.Debug",
      "library": "html_of_jsx",
      "description": "Converts and inspects JSX elements into a structured format for debugging, supporting analysis of HTML element trees. Works with `html_element` and recursive `element` types, including strings, nodes, and lists. Useful for logging or visualizing the structure of JSX-generated HTML during development.",
      "description_length": 301,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "JSX.Html",
      "library": "html_of_jsx",
      "description": "Handles low-level HTML element validation and string escaping for JSX transformations. Works directly with string tags and buffers to determine element types and safely inject content. Used during JSX compilation to ensure proper HTML/SVG tag handling and prevent injection vulnerabilities.",
      "description_length": 290,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "JSX",
      "library": "html_of_jsx",
      "description": "This module enables declarative HTML construction using JSX syntax, supporting elements with attributes, text, fragments, and lists, along with safe rendering of primitives like strings and numbers. Its core types include `html_element` and recursive `element` structures, allowing for composable UI components and server-rendered views. Submodule 1 provides tools to inspect and analyze JSX element trees, useful for debugging and visualizing HTML structure during development. Submodule 2 ensures safe HTML generation by validating tags and escaping content, preventing injection issues during JSX transformation.",
      "description_length": 615,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 650,
    "min_description_length": 290,
    "avg_description_length": 464.0,
    "embedding_file_size_mb": 0.014939308166503906
  }
}