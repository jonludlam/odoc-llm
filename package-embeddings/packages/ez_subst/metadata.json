{
  "package": "ez_subst",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:05:22.165595",
  "modules": [
    {
      "module_path": "Ez_subst.V1.EZ_SUBST",
      "library": "ez_subst",
      "description": "This module performs string substitutions for expressions like `${expr}`, `$(expr)`, `$[expr]`, and `$var`, supporting recursion and customizable delimiters. It operates on strings and buffers, allowing substitutions using a context or an association list with optional default values. Concrete use cases include templating configuration files, expanding environment variables, and processing user-defined macros with nested expressions.",
      "description_length": 437,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ez_subst.V2.EZ_SUBST",
      "library": "ez_subst",
      "description": "This module performs string substitutions for expressions like `${expr}`, `$(expr)`, `$[expr]`, and `$var`, supporting recursion and customizable syntax. It operates on strings and buffers, using context values or association lists to resolve variable references. Concrete use cases include templating configuration files, expanding environment variables, and processing user-defined macros with customizable delimiters and escaping.",
      "description_length": 433,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ez_subst.V1",
      "library": "ez_subst",
      "description": "This module processes strings by replacing placeholders like `${expr}`, `$(expr)`, `$[expr]`, and `$var` with values from a context or association list, supporting recursive expansion and customizable delimiters. It operates on both strings and buffers, enabling flexible text transformation for tasks such as configuration templating and macro processing. Users can define default values and control substitution behavior through context functions. For example, it can expand environment variables or evaluate nested expressions within user-defined templates.",
      "description_length": 560,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_subst.V2",
      "library": "ez_subst",
      "description": "This module processes strings by replacing variable and expression references in formats like `${expr}`, `$(expr)`, `$[expr]`, and `$var`, supporting recursive expansion and custom syntax. It operates on both strings and buffers, resolving variables through context values or association lists. Users can template configuration files, expand environment variables, or implement custom macro systems with configurable delimiters and escaping rules. For example, substituting `$USER` from the environment or evaluating `${x + 1}` using a custom evaluation function.",
      "description_length": 563,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ez_subst",
      "library": "ez_subst",
      "description": "This module processes strings by replacing placeholders like `${expr}`, `$(expr)`, `$[expr]`, and `$var` with values from a context or association list, supporting recursive expansion and customizable delimiters. It operates on both strings and buffers, enabling flexible text transformation for tasks such as configuration templating and macro processing. Users can define default values, control substitution behavior through context functions, and implement custom macro systems with configurable escaping rules. For example, it can substitute environment variables like `$USER` or evaluate nested expressions like `${x + 1}` using custom logic.",
      "description_length": 648,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 648,
    "min_description_length": 433,
    "avg_description_length": 528.2,
    "embedding_file_size_mb": 0.01859283447265625
  }
}