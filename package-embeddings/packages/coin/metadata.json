{
  "package": "coin",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:44:00.761694",
  "modules": [
    {
      "module_path": "Coin.Char",
      "library": "coin",
      "description": "This module provides operations to validate, compare, and decode characters based on a given encoding scheme. It works with `char` values and encoding-specific representations, including Unicode decoding via `Stdlib.Uchar.t`. Concrete use cases include checking valid scalar values, performing character equality and ordering, and converting encoded characters to their Unicode representation.",
      "description_length": 393,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Coin.String",
      "library": "coin",
      "description": "Processes strings using a custom encoding by folding over each character with its position. It works with `string` values and an encoding specification to handle variable-width character boundaries correctly. This is useful for parsing or transforming substrings in formats like UTF-8 where character positions matter.",
      "description_length": 318,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Coin",
      "library": "coin",
      "description": "This module handles character encoding conversion and decoding with support for KOI8-U and KOI8-R encodings. It provides functions to create and manipulate decoders that process input from manual sources, channels, or strings, yielding Unicode characters or malformed sequences. Use cases include reading and decoding files or byte buffers in specific encodings, tracking byte positions during decoding, and converting character sets to and from IANA names.",
      "description_length": 457,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 457,
    "min_description_length": 318,
    "avg_description_length": 389.3333333333333,
    "embedding_file_size_mb": 0.04386615753173828
  }
}