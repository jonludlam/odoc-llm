{
  "package": "fmlib_pretty",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:46.166384",
  "modules": [
    {
      "module_path": "Fmlib_pretty.Print",
      "library": "fmlib_pretty",
      "description": "The module enables constructing and formatting structured documents through combinators that manage layout, indentation, and line-breaking strategies, using documents and character streams as core data structures. It provides tools to compose text elements, control formatting constraints (like width and ribbon length), and serialize results into streams for output. This supports use cases such as code formatting, report generation, and arbitrary text-based layouts requiring precise 2D arrangement.",
      "description_length": 502,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Fmlib_pretty",
      "library": "fmlib_pretty",
      "description": "This module enables the construction and formatting of structured documents using combinators that manage layout, indentation, and line-breaking. Core data types include documents and character streams, with operations to compose text elements, enforce formatting constraints like width and ribbon length, and serialize results into output streams. It supports precise 2D text arrangement for tasks like code formatting, report generation, and custom document layout. Example uses include aligning code blocks, wrapping text to fit specified widths, and generating formatted output from structured data.",
      "description_length": 603,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 603,
    "min_description_length": 502,
    "avg_description_length": 552.5,
    "embedding_file_size_mb": 0.007679939270019531
  }
}