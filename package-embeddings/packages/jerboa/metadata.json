{
  "package": "jerboa",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 11,
  "creation_timestamp": "2025-06-18T16:31:25.453301",
  "modules": [
    {
      "module_path": "Jerboa.Meth",
      "description": "Encapsulates HTTP method values using Cohttp's method type for consistent representation. Operates on string-based HTTP methods like GET, POST, and PUT. Used to standardize method comparisons and conversions in HTTP request handling.",
      "description_length": 233,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Jerboa.Cookie",
      "description": "Creates a cookie with specified attributes such as expiration, path, domain, secure, and http_only, and serializes it into a string pair suitable for HTTP headers. Works with cookie attributes and HTTP cookie header structures. Used to generate and format cookies for HTTP responses in web applications.",
      "description_length": 303,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jerboa.Header",
      "description": "Provides functions to create, modify, and query HTTP headers, including adding, replacing, and removing key-value pairs, extracting cookies, and converting headers to strings or lists. Works with `Cohttp.Header.t` type, which represents HTTP headers. Used to construct and manipulate request/response headers in HTTP communication, such as setting user agents or cookies.",
      "description_length": 371,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jerboa.Request",
      "description": "Provides functions to create request objects from Cohttp structures, extract and add path parameters from and to request data. Operates on Cohttp.Request.t, Cohttp_lwt.Body.t, and custom path-based data structures. Used to process HTTP requests by parsing URL segments and enriching request objects with route information.",
      "description_length": 322,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jerboa.Response",
      "description": "Creates a response with a specified HTTP status code and body, incorporating optional headers. Works with HTTP status codes, string bodies, and header collections. Used to construct HTTP responses in web server implementations.",
      "description_length": 227,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Jerboa.Path",
      "description": "Provides functions to construct path components and variables using regular expressions or fixed strings, and to split a path string into its individual parts. Works with regex patterns, string literals, and path variables that capture segments of a URL or file path. Used to define structured route patterns in web frameworks or parse hierarchical data structures.",
      "description_length": 365,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Jerboa.Request_handler",
      "description": "Handles HTTP requests by transforming `Request.t` instances into `Response.t` objects through a single function application. Operates directly on request and response structures defined in the Jerboa framework. Used to process incoming HTTP traffic in web server implementations.",
      "description_length": 279,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jerboa.Path_mapping",
      "description": "Creates a mapping between a base path and a list of paths by applying a composition logic. Operates on lists of `Path.t` values and regular expressions derived from them. Used to generate regex patterns for routing or matching structured path data.",
      "description_length": 248,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jerboa.Path_handler",
      "description": "Handles HTTP requests by matching a specific method and path, then applying a request handler to generate a response. Works with HTTP methods, path mappings, and request handlers. Used to route incoming requests to appropriate endpoints based on defined routes and methods.",
      "description_length": 273,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "jerboa",
      "description": "Handles HTTP request routing, middleware composition, and response generation using custom request and response types. Processes URL paths with pattern matching and manages asynchronous handlers through a dedicated execution model. Used to build lightweight APIs and dynamic web services with fine-grained control over incoming requests and outgoing responses.",
      "description_length": 360,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jerboa",
      "description": "Encapsulates HTTP method values, cookie generation, header manipulation, request and response construction, path routing, and request handling into a unified framework for building web applications. Provides types like method, cookie, header, request, response, and path, along with operations to standardize methods, generate cookies, modify headers, parse paths, and route requests. Enables tasks such as creating a POST request with custom headers, generating a secure cookie, or routing a GET request to a specific endpoint. Supports complex workflows like parsing URL segments, applying route patterns, and transforming requests into responses.",
      "description_length": 649,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 11,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 649,
    "min_description_length": 227,
    "avg_description_length": 330.0,
    "embedding_file_size_mb": 0.040389060974121094
  }
}