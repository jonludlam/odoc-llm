{
  "package": "resto-directory",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:04.045771",
  "modules": [
    {
      "module_path": "Resto_directory.Make.Service",
      "library": "resto-directory",
      "description": "This module defines and manipulates HTTP services with typed endpoints, handling request methods, path parameters, query parameters, input/output encodings, and error representations. It supports constructing services for standard HTTP methods (GET, POST, DELETE, PATCH, PUT) with precise path routing and parameter handling, using GADTs to enforce correctness. Concrete use cases include building RESTful APIs where endpoints require strict type safety and structured request/response handling.",
      "description_length": 495,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Resto_directory.Make",
      "library": "resto-directory",
      "description": "This module organizes HTTP services into a hierarchical routing structure, allowing typed endpoints and dynamic directories to coexist and be merged safely. It provides data types for services and directories, with operations to register services at specific paths, resolve incoming requests, and handle conflicts during route composition. Functions like `register2` to `register5` support services requiring multiple parameters, while dynamic directory builders handle parameterized path segments. For example, a REST API can be constructed by composing multiple typed services under a common route prefix, with automatic parameter extraction and method dispatch.",
      "description_length": 664,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_directory.Answer",
      "library": "resto-directory",
      "description": "This module constructs responses for services in a server directory, providing functions to return plain values or streaming data as answers. It handles the final step of service execution by packaging results into a type that the server can send back to clients. Use it to define the output of API endpoints, either as a direct value or a stream of data chunks.",
      "description_length": 362,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Resto_directory",
      "library": "resto-directory",
      "description": "This module organizes HTTP services into a hierarchical routing structure, allowing typed endpoints and dynamic directories to coexist and be merged safely. It provides data types for services and directories, with operations to register services at specific paths, resolve incoming requests, and handle conflicts during route composition. Functions like `register2` to `register5` support services requiring multiple parameters, while dynamic directory builders handle parameterized path segments. For example, a REST API can be constructed by composing multiple typed services under a common route prefix, with automatic parameter extraction and method dispatch.",
      "description_length": 664,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 664,
    "min_description_length": 362,
    "avg_description_length": 546.25,
    "embedding_file_size_mb": 0.011356353759765625
  }
}