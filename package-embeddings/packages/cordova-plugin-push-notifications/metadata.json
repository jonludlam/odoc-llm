{
  "package": "cordova-plugin-push-notifications",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 10,
  "creation_timestamp": "2025-06-18T16:30:59.625696",
  "modules": [
    {
      "module_path": "Cordova_push.Init_options.Android",
      "description": "Creates a notification configuration with customizable icon, color, sound, vibration, and display settings, targeting specific topics and sender IDs. Operates on strings, boolean flags, and arrays to define notification behavior. Used to generate structured notification payloads for targeted message delivery.",
      "description_length": 310,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push.Init_options.Ios",
      "description": "Handles iOS-specific push notification configuration with options to set alert, badge, sound, clear badge, categories, sender ID, GCM sandbox mode, and topics. Operates on string arrays and boolean flags to define notification behavior. Used to initialize notification settings for app-specific delivery and user interaction rules.",
      "description_length": 331,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push.Init_options",
      "description": "Combines notification and iOS push configuration capabilities, enabling detailed control over message delivery and user interaction. Supports string-based identifiers, boolean flags, and arrays to define notification properties and iOS-specific settings. Allows creation of targeted notifications with custom visuals and behavior, as well as setup of iOS-specific alert rules and topic subscriptions. Examples include configuring a notification with a custom sound for a specific topic or enabling badge updates with GCM sandbox mode.",
      "description_length": 534,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push.Additional_data",
      "description": "Extracts boolean flags like foreground and cold_start from a data structure. Retrieves various typed values (strings, integers, floats, booleans) and optional variants from a key-value store, supporting both inline replies and unique identifiers. Enables precise access to embedded data for runtime configuration or event processing.",
      "description_length": 333,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push.Data_notification",
      "description": "Provides functions to extract specific fields from a structured notification object, including message, title, count, sound, image, launch arguments, and additional data. Works with a custom type `t` that encapsulates notification details. Used to retrieve and process notification content for display or integration with external systems.",
      "description_length": 339,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cordova_push.Data_registration",
      "description": "Generates and retrieves unique identifiers for data entries using a custom type `t` that encapsulates registration metadata. It supports operations to validate, serialize, and compare registration records. Used in systems requiring traceable data ingestion and audit logging.",
      "description_length": 275,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push.Error",
      "description": "Provides a way to extract a human-readable string from an error value. Works with the abstract type t to encapsulate error information. Used to generate error messages for logging or user display.",
      "description_length": 196,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push.Data_permission",
      "description": "Checks if a specific data access flag is active, returning a boolean result. Operates on a custom type `t` that represents permission states. Used to determine whether a user or system component has access to restricted data sources.",
      "description_length": 233,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "cordova-plugin-push-notifications",
      "description": "Handles registration and management of push notifications using Cordova's plugin interface, including methods to register for notifications, handle incoming messages, and retrieve device tokens. Operates with JSON data structures for message payloads and device information. Used to integrate real-time alerting and user engagement features in mobile applications.",
      "description_length": 364,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cordova_push",
      "description": "Combines notification and iOS push configuration, offering control over message delivery through string identifiers, boolean flags, and arrays. Extracts typed values and boolean flags from data structures, enabling precise runtime configuration and event processing. Provides access to structured notification fields and generates unique identifiers for traceable data entries. Supports error message extraction and permission checks, facilitating robust error handling and access control.",
      "description_length": 489,
      "index": 9,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 10,
    "meaningful_modules": 10,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 534,
    "min_description_length": 196,
    "avg_description_length": 340.4,
    "embedding_file_size_mb": 0.036746978759765625
  }
}