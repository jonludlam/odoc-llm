{
  "package": "ez_search",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 10,
  "creation_timestamp": "2025-06-18T16:32:27.736211",
  "modules": [
    {
      "module_path": "Ez_search.V1.EzSearch.TYPES",
      "description": "Provides functions to manipulate database handles, file metadata, and occurrence data, including parsing file structures and extracting contextual information from occurrences. Works with custom types such as `db`, `file`, `occurrence`, and nested structures like `occurrence_file` and `occurrence_context`. Used to process structured data from source files and associate occurrences with their specific contexts.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ez_search.V1.EzSearch",
      "description": "manages full-text search operations by handling database creation and query execution, with support for structured data like files, occurrences, and their contexts. It defines core types such as `db`, `file`, `occurrence`, and nested structures for detailed data representation. Functions include parsing file content, extracting contextual snippets, and linking occurrences to their source files. Users can build searchable databases from source files and retrieve occurrences with surrounding text for analysis.",
      "description_length": 513,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_search.Main",
      "description": "Provides functions to search through a database using specified parameters like case sensitivity, regular expressions, and parallel processing. Operates on database structures and string-based queries, with options to control output verbosity and search depth. Initializes and manages the application's core workflow, including directory configuration and execution entry point.",
      "description_length": 378,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_search.ReStr",
      "description": "The module provides regex-driven operations for matching, substitution, splitting, and substring extraction, supporting case-insensitive searches, group capture, and backreference replacements. It manipulates strings and text patterns, enabling tasks like parsing log files, extracting structured data from unstructured text, or transforming content via pattern-based rules. Specific use cases include processing delimited data, validating input formats, or generating dynamic string replacements.",
      "description_length": 497,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_search.Str",
      "description": "The module provides regex-driven string manipulation, including matching, substitution, splitting, and substring extraction, operating on strings and patterns with support for case insensitivity, group capture, and backreferences. It enables precise text processing tasks like log parsing, data extraction, and structured text transformation through customizable split behaviors and replacement strategies.",
      "description_length": 406,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_search.UseParmap",
      "description": "Provides functions to determine the default number of cores and apply a function in parallel to elements of a custom list type, returning a list of results. Operates on a polymorphic list structure and a function that transforms elements. Used to efficiently process large datasets by leveraging multi-core execution.",
      "description_length": 317,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_search.V1",
      "description": "handles full-text search by constructing and querying databases that organize structured data such as files, occurrences, and their contextual snippets. It introduces core types like `db`, `file`, and `occurrence`, along with functions to parse content, extract context, and link occurrences to sources. Users can generate searchable databases from files and retrieve occurrences with surrounding text for detailed analysis. For example, it enables finding all occurrences of a term within a specific file, along with their immediate textual context.",
      "description_length": 550,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ez_search.Version",
      "description": "Provides functions to retrieve the version string, optional commit hash, and optional commit date. Works with strings and optional values representing version control metadata. Used to embed build information into applications for debugging or logging purposes.",
      "description_length": 261,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ez_search",
      "description": "Provides functions for parsing and evaluating search queries, including wildcard matching, boolean logic, and field-based filtering. Operates on strings, lists of strings, and custom query ASTs. Used to implement interactive search interfaces and backend query processing in applications requiring flexible text filtering.",
      "description_length": 322,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ez_search",
      "description": "combines database search, regex processing, and parallel computation to enable efficient text analysis and data extraction. It includes types for database structures, files, occurrences, and polymorphic lists, along with operations for regex matching, substitution, parallel processing, and full-text querying. Users can perform case-insensitive pattern matching, extract structured data from logs, and search large datasets across multiple cores. It supports building searchable databases from files and retrieving contextual text snippets for detailed examination.",
      "description_length": 566,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 11,
    "meaningful_modules": 10,
    "filtered_empty_modules": 1,
    "retention_rate": 0.9090909090909091
  },
  "statistics": {
    "max_description_length": 566,
    "min_description_length": 261,
    "avg_description_length": 422.3,
    "embedding_file_size_mb": 0.0367431640625
  }
}