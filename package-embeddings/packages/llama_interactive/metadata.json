{
  "package": "llama_interactive",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:31:25.938323",
  "modules": [
    {
      "module_path": "Llama_interactive.Input.All_keyboard",
      "description": "Provides functions to create and transform a structured data container representing keyboard state. Operates on a polymorphic type 'a t that encapsulates key events and their associated values. Initializes a keyboard state with a default value and maps over key presses to generate new states.",
      "description_length": 293,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Llama_interactive.Input.Mouse_pos",
      "description": "Tracks and transforms mouse position data through a functional pipeline. Operates on a monadic structure that encapsulates coordinate values and applies transformations. Used to dynamically update UI elements based on real-time cursor movement.",
      "description_length": 244,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Llama_interactive.Window",
      "description": "Provides functions to create and manage a graphical window with Lwt-based asynchronous operations, render visualizations using signal data, and capture input signals. Operates on a `t` type representing the window state, and works with signal types from the Llama library. Used to display real-time data visualizations with customizable color mapping and scaling.",
      "description_length": 363,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Llama_interactive.Input",
      "description": "Manages input events by maintaining and updating state for keyboard and mouse interactions. Supports a polymorphic keyboard state type and a monadic structure for coordinate tracking, enabling dynamic updates based on user input. Allows for initializing default states, transforming key presses, and applying real-time coordinate adjustments. Can be used to build responsive UIs that react to both key presses and cursor movements.",
      "description_length": 431,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "llama_interactive",
      "description": "Provides operations for creating and connecting audio components like oscillators, filters, and envelope generators, with functions to define signal flow and parameter modulation. Works with data types representing audio signals, control signals, and modular components. Used to build real-time audio synthesis systems and interactive music performances in OCaml environments.",
      "description_length": 376,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Llama_interactive",
      "description": "Provides tools for creating and interacting with graphical windows, managing input events, and visualizing signal data in real time. Operates on a window state type `t` and integrates with signal data from the Llama library, supporting custom color mapping and scaling. Handles keyboard and mouse input through a polymorphic state system, enabling real-time UI updates and coordinate tracking. Can be used to build interactive visualizations that respond to user input and display dynamic data streams.",
      "description_length": 502,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 13,
    "meaningful_modules": 6,
    "filtered_empty_modules": 7,
    "retention_rate": 0.46153846153846156
  },
  "statistics": {
    "max_description_length": 502,
    "min_description_length": 244,
    "avg_description_length": 368.1666666666667,
    "embedding_file_size_mb": 0.022210121154785156
  }
}