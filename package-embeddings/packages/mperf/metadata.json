{
  "package": "mperf",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:29:57.983014",
  "modules": [
    {
      "module_path": "Mperf.Attr.Kind",
      "description": "Converts between a custom type and its string representation, supporting parsing and serialization. Works with an abstract type that encapsulates specific domain values. Used to generate human-readable output from internal representations and to reconstruct values from external input.",
      "description_length": 285,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mperf.Attr",
      "description": "Handles conversion between an abstract domain-specific type and its string representation, enabling parsing and serialization. Supports generating human-readable output and reconstructing values from input. Operations include encoding and decoding, with examples like converting a status code to \"active\" or parsing \"error:404\" into a structured error type. Designed for seamless integration with systems requiring external data exchange.",
      "description_length": 438,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mperf.KindMap",
      "description": "This module provides operations for managing ordered maps with keys of type `Attr.Kind.t`, including adding, removing, updating, and querying key-value bindings, as well as merging and iterating through sequences of pairs. It supports ordered traversal, predicate-based filtering, and transformations, enabling efficient manipulation of structured data where key order and sequence-based access are critical. Use cases include processing attribute configurations, dynamic data aggregation, and scenarios requiring ordered key inspections or modifications.",
      "description_length": 555,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "mperf",
      "description": "Records monotonic clock and garbage collection metrics for function execution. Operates on OCaml functions and timing data. Enables performance analysis of specific code paths under Linux using low-level system metrics.",
      "description_length": 219,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Mperf",
      "description": "manages the conversion of domain-specific types to and from strings, along with operations for handling ordered maps keyed by `Attr.Kind.t`, enabling structured data manipulation and serialization. It supports encoding, decoding, and efficient key-based operations such as adding, removing, and merging entries, as well as filtering and transforming sequences. For example, it can convert a status code to a string or manage attribute configurations with ordered access. These capabilities are essential for processing and exchanging structured data in performance monitoring contexts.",
      "description_length": 585,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 585,
    "min_description_length": 219,
    "avg_description_length": 416.4,
    "embedding_file_size_mb": 0.01861095428466797
  }
}