{
  "package": "jsonm",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:04:48.145366",
  "modules": [
    {
      "module_path": "Jsonm.Manual",
      "library": "jsonm",
      "description": "This module provides low-level functions to manually manage input and output buffers for streaming JSON decoding and encoding. It works directly with byte buffers, allowing precise control over data flow by specifying memory regions for reading and writing. Concrete use cases include integrating with custom IO systems or processing JSON data in constrained memory environments where automatic buffering is unsuitable.",
      "description_length": 419,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Jsonm.Uncut",
      "library": "jsonm",
      "description": "This module decodes and encodes JSON with support for whitespace and JavaScript-style comments, handling non-standard JSON input. It works with the same data model as the base module, extending lexeme sequences with `White` and `Comment` tags. Use it to parse JSON files that include comments or to reconstruct JSON with original formatting preserved, such as for configuration files or code transformation tools.",
      "description_length": 413,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 2,
    "filtered_empty_modules": 1,
    "retention_rate": 0.6666666666666666
  },
  "statistics": {
    "max_description_length": 419,
    "min_description_length": 413,
    "avg_description_length": 416.0,
    "embedding_file_size_mb": 0.007686614990234375
  }
}