{
  "package": "ortac-dune",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:25.105962",
  "modules": [
    {
      "module_path": "Ortac_dune.Dune_rules.Plugin",
      "description": "Provides a command-line interface for executing plugin-related tasks using the Cmdliner library. Operates with command structures defined by the Cmdliner module. Used to register and invoke plugin commands from the application's CLI.",
      "description_length": 233,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ortac_dune.Dune_rules",
      "description": "Executes plugin-related tasks through a command-line interface built with Cmdliner, enabling registration and invocation of custom commands. Supports structured command definitions and integrates seamlessly with application-level CLI workflows. Users can define new commands, parse arguments, and execute plugin logic directly from the terminal. Examples include generating code, inspecting plugin metadata, or triggering build steps via CLI.",
      "description_length": 442,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ortac_dune.Qcheck_stm",
      "description": "Generates Dune build rules based on a configuration record containing build parameters and options. It processes a `config` type that includes fields for source directories, build targets, and compiler flags. This is used to automatically produce Dune files for projects with custom build setups.",
      "description_length": 296,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ortac-dune",
      "description": "Generates test programs using QCheck-STM to validate module behavior against Gospel specifications by executing random function calls and comparing results with a model. Operates on OCaml module interfaces and Gospel annotations. Enables verification of concurrent and stateful code properties through randomized testing.",
      "description_length": 321,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ortac_dune",
      "description": "Provides a command-line interface for executing plugin tasks and generating Dune build configurations. It supports defining and running custom commands with argument parsing, and constructs build rules from a structured configuration record. Users can generate code, inspect plugin metadata, or create Dune files for custom build setups. Operations include command registration, argument validation, and rule generation based on project-specific parameters.",
      "description_length": 457,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 457,
    "min_description_length": 233,
    "avg_description_length": 349.8,
    "embedding_file_size_mb": 0.018647193908691406
  }
}