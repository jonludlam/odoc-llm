{
  "package": "ortac-dune",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 4,
  "creation_timestamp": "2025-08-14T22:53:08.533555",
  "modules": [
    {
      "module_path": "Ortac_dune.Dune_rules.Plugin",
      "library": "ortac-dune.plugin",
      "description": "This module defines command-line interface rules for a Dune plugin, specifically providing a `cmd` value that integrates with the Cmdliner library to handle command-line parsing and execution. It works with Dune's internal data structures to enable plugin-specific behavior within the Dune build system. A concrete use case is extending Dune's command-line interface with custom subcommands for project-specific build logic.",
      "description_length": 424,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ortac_dune.Dune_rules",
      "library": "ortac-dune.plugin",
      "description": "This module defines command-line interface rules for a Dune plugin, centering on the `cmd` value that integrates with the Cmdliner library for parsing and executing custom commands. It operates on Dune's internal data structures to enable plugin-specific extensions to the build system's CLI. A concrete use case is adding project-specific subcommands to Dune for custom build workflows.",
      "description_length": 387,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ortac_dune.Qcheck_stm",
      "library": "ortac-dune.plugin",
      "description": "This module generates Dune build rules for QCheck test cases based on a configuration. It works with a `config` type containing paths and options for interface, configuration, output files, and module settings. Use it to automate Dune file generation when integrating QCheck tests into a project's build system.",
      "description_length": 311,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ortac_dune",
      "library": "ortac-dune.plugin",
      "description": "This module defines command-line interface rules for a Dune plugin, centering on the `cmd` value that integrates with the Cmdliner library for parsing and executing custom commands. It operates on Dune's internal data structures to enable plugin-specific extensions to the build system's CLI. A concrete use case is adding project-specific subcommands to Dune for custom build workflows.",
      "description_length": 387,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 424,
    "min_description_length": 311,
    "avg_description_length": 377.25,
    "embedding_file_size_mb": 0.05831336975097656
  }
}