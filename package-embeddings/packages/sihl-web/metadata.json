{
  "package": "sihl-web",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 14,
  "creation_timestamp": "2025-08-14T23:14:20.242058",
  "modules": [
    {
      "module_path": "Sihl_web.Csrf",
      "library": "sihl-web",
      "description": "This module handles CSRF token validation and cryptographic operations for web requests. It extracts tokens from requests, performs XOR decryption, and validates tokens using a middleware that checks for valid CSRF protection. It works with `Rock.Request.t` and `char list` types, focusing on secure form submissions and stateful web interactions.",
      "description_length": 347,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.User",
      "library": "sihl-web",
      "description": "This module handles user authentication and session management in web applications. It provides functions to retrieve the current user from a request, log out a user, and apply middleware for session and token-based authentication. Use cases include securing routes by ensuring a user is logged in or validating API requests with authentication tokens.",
      "description_length": 352,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Authentication",
      "library": "sihl-web",
      "description": "This module handles user authentication in web applications using email and password credentials. It provides functions to create and manage authentication sessions, including login operations, middleware for session and token-based authentication, and error handling for authentication failures. The module works with Opium web frameworks and Rock middleware, supporting both JSON and site-based response formats.",
      "description_length": 414,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Flash",
      "library": "sihl-web",
      "description": "This module handles flash messages in web requests and responses, providing functions to set and retrieve alert, notice, and custom messages. It operates on `Rock.Request.t` and `Rock.Response.t` types, using a middleware to manage flash message persistence across requests. Concrete use cases include displaying one-time notifications after form submissions or user actions, such as success or error messages.",
      "description_length": 410,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Static",
      "library": "sihl-web",
      "description": "Handles serving static files in a web application. It provides a Rock middleware that efficiently serves files from a specified directory, supporting common web scenarios like delivering CSS, JavaScript, or images. Useful for exposing an `assets` folder directly to clients without manual route handling.",
      "description_length": 304,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Http",
      "library": "sihl-web",
      "description": "This module provides operations for defining HTTP routes and composing middleware pipelines, enabling functional route handling and request processing chains. It works with HTTP methods, route paths, middleware stacks, and handlers to build web applications, while also supporting server lifecycle management through asynchronous startup, router registration, and service container integration. Specific use cases include constructing type-safe REST APIs with composable middleware and deploying embedded HTTP servers with controlled initialization and shutdown behavior.",
      "description_length": 571,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_web.Form",
      "library": "sihl-web",
      "description": "Handles form data extraction and manipulation from HTTP requests. It provides functions to retrieve form fields, consume values, and process request bodies in key-value list format. Useful for parsing user input in web applications, such as handling login forms or user registration data.",
      "description_length": 288,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Json",
      "library": "sihl-web",
      "description": "Handles JSON data extraction and injection in HTTP requests. It provides direct access to JSON payloads through `find` and `find_opt`, and allows setting JSON content with `set`. The middleware automatically parses incoming JSON, making it suitable for building and consuming JSON-based APIs.",
      "description_length": 292,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Authorization",
      "library": "sihl-web",
      "description": "This module provides middleware functions to enforce user and admin authentication in web applications. It works with the `Rock.Middleware.t` type to wrap routes, redirecting unauthenticated users to a login path. Concrete use cases include protecting admin dashboards or user-specific resources by ensuring valid sessions before allowing access.",
      "description_length": 346,
      "index": 8,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_web.Id",
      "library": "sihl-web",
      "description": "This module handles request-specific identifier extraction and injection in HTTP requests. It provides functions to retrieve, optionally retrieve, and set identifiers within a request context. Concrete use cases include managing session IDs or request-specific tokens during web application processing.",
      "description_length": 302,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Bearer_token",
      "library": "sihl-web",
      "description": "This module handles extraction and injection of bearer tokens in HTTP requests. It provides functions to retrieve a token from a request, optionally retrieve it, and set a token on a request. Use it to implement authentication flows where tokens are passed in the `Authorization` header.",
      "description_length": 287,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_web.Session",
      "library": "sihl-web",
      "description": "This module handles session management by extracting, setting, and persisting session data through HTTP cookies. It operates on `Rock.Request.t` and `Rock.Response.t` values, working with `Sihl_contract.Session.t` to represent session state. Concrete use cases include authenticating users by session data, storing temporary user preferences, and securely managing session identifiers across requests.",
      "description_length": 401,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web.Error",
      "library": "sihl-web",
      "description": "Handles error responses in web applications by providing middleware for both HTML and JSON request types. Converts exceptions into appropriate HTTP responses with status codes and error messages. Use when building web services that require structured JSON error handling or user-friendly HTML error pages.",
      "description_length": 305,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_web",
      "library": "sihl-web",
      "description": "This module provides web-specific functionality for building and managing HTTP-based applications. It includes operations for authentication, session handling, CSRF protection, form and JSON data processing, error handling, and static file serving. Designed for use with the Opium web framework and Rock middleware, it supports concrete use cases like securing user sessions, validating form submissions, and building JSON APIs with structured error responses.",
      "description_length": 460,
      "index": 13,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 14,
    "meaningful_modules": 14,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 571,
    "min_description_length": 287,
    "avg_description_length": 362.7857142857143,
    "embedding_file_size_mb": 0.2032794952392578
  }
}