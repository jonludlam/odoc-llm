{
  "package": "httph",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:03:50.656836",
  "modules": [
    {
      "module_path": "Httph.Request",
      "library": "httph",
      "description": "This module provides access to the components of an HTTP request, including the request body, target path, and headers. It operates on the `Httph.http_request` type, allowing retrieval of request data for processing or inspection. Concrete use cases include extracting header values for authentication, reading the request body for data processing, and accessing the target path for routing decisions.",
      "description_length": 401,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Httph.Response",
      "library": "httph",
      "description": "This module constructs HTTP responses by setting status codes, headers, and body content. It operates on the `http_response` type, allowing incremental building through functions like `status`, `header`, and `body`. Concrete use cases include assembling responses for web servers, such as setting a 200 OK status, adding content-type headers, or attaching JSON payloads.",
      "description_length": 370,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Httph",
      "library": "httph",
      "description": "This module provides core data structures and operations for working with HTTP requests and responses, enabling the construction and manipulation of `http_request` and `http_response` values. The request-handling submodule allows extraction of method, path, headers, and body from incoming requests, supporting tasks like routing and authentication. The response-building submodule supports incremental creation of responses with status codes, headers, and bodies, such as returning JSON with a 200 OK status. Together, these components facilitate building custom HTTP servers and handling full request-response cycles programmatically.",
      "description_length": 636,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 636,
    "min_description_length": 370,
    "avg_description_length": 469.0,
    "embedding_file_size_mb": 0.011321067810058594
  }
}