{
  "package": "pattern",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:53:20.887723",
  "modules": [
    {
      "module_path": "Pattern",
      "library": "pattern",
      "description": "This module provides functions for pattern matching and validation in the context of OCaml AST manipulation. It supports operations like checking expressions against patterns, formatting and reporting match failures, and eliminating type constraints from expressions. Concrete use cases include validating code transformations, enforcing AST structures during analysis, and debugging pattern match issues in compiler extensions.",
      "description_length": 428,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Pattern_ppx",
      "library": "pattern_ppx",
      "description": "This module offers utilities for building and transforming OCaml patterns and expressions, focusing on pattern matching constructs, tuple and record handling, and variable binding. It operates on AST nodes, paths, and PPX extension points to support code generation tasks like creating match expressions, managing extension points, and manipulating structured data patterns during rewrites. Use cases include automating boilerplate for data destructuring, enforcing exhaustiveness in matches, and embedding custom syntax extensions via AST manipulation.",
      "description_length": 553,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 553,
    "min_description_length": 428,
    "avg_description_length": 490.5,
    "embedding_file_size_mb": 0.029386520385742188
  }
}