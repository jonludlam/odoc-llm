{
  "package": "session-cohttp-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:48:03.016031",
  "modules": [
    {
      "module_path": "Session_cohttp_lwt.Make",
      "library": "session-cohttp-lwt",
      "description": "This module creates a session manager that uses Cohttp and Lwt for handling HTTP sessions asynchronously. It provides functions to load, create, update, and clear sessions using a backend module B, which must implement the required storage interface. Key operations include session retrieval from headers, generating response headers for session management, and manipulating session data and expiry in the backend.",
      "description_length": 414,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Session_cohttp_lwt",
      "library": "session-cohttp-lwt",
      "description": "This module implements an asynchronous session manager for Cohttp using Lwt, providing functions to load, create, update, and clear sessions via a pluggable backend. It operates on session data stored in a backend module that satisfies a specific storage interface, handling tasks like session expiration and response header generation. Concrete use cases include managing user authentication state and persistent session data across HTTP requests in web applications.",
      "description_length": 468,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 468,
    "min_description_length": 414,
    "avg_description_length": 441.0,
    "embedding_file_size_mb": 0.029387474060058594
  }
}