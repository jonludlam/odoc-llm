{
  "package": "aws-cloudtrail",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 129,
  "creation_timestamp": "2025-07-15T23:22:42.717315",
  "modules": [
    {
      "module_path": "Aws_cloudtrail.Types.Trails",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization, deserialization, and querying of AWS CloudTrail trail data. It works with lists of `TrailInfo.t` records, converting them to and from XML, JSON, and AWS query formats. Concrete use cases include processing API responses containing trail metadata and constructing requests for trail management operations.",
      "description_length": 343,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTagsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for making requests to list tags on AWS CloudTrail resources, including a list of resource IDs and an optional pagination token. It provides functions to construct, serialize, and deserialize these requests in various formats such as JSON and query parameters. Concrete use cases include retrieving tags for trails or events in AWS CloudTrail, especially when paginating through large result sets.",
      "description_length": 434,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.UpdateTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the response from updating an AWS CloudTrail trail, with fields for configuration details like S3 bucket name, SNS topic ARN, and logging options. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module to handle trail update responses when interacting with the CloudTrail API, such as retrieving or modifying trail settings.",
      "description_length": 448,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceIdList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of string-based resource IDs, providing functions to convert between XML, JSON, and query string formats. It supports parsing resource ID lists from XML nodes and serializing them for use in AWS queries or JSON payloads. Use this module when working with AWS CloudTrail operations that require handling multiple resource identifiers in different data formats.",
      "description_length": 385,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.KmsKeyDisabledException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing the state of a KMS key being disabled. It includes operations to construct, parse, and convert the state to query parameters or JSON format. Use this module when handling AWS CloudTrail events that require signaling a KMS key as disabled, ensuring consistent serialization across APIs.",
      "description_length": 339,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.OrganizationsNotInUseException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception where Organizations is not in use. It includes functions to construct, parse, and convert the exception to query parameters, JSON, or from JSON. Use this when handling errors related to Organizations being disabled or unavailable in AWS CloudTrail operations.",
      "description_length": 326,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightType",
      "library": "aws-cloudtrail",
      "description": "This module defines a single enumerated type representing insight types in AWS CloudTrail, specifically for tracking API call rate anomalies. It provides conversions to and from strings, JSON, and query formats, along with parsing and serialization functions for XML and JSON inputs. Concrete use cases include processing CloudTrail event data, generating CloudTrail queries, and integrating with AWS SDKs for monitoring and analysis.",
      "description_length": 434,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.CreateTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the response from creating an AWS CloudTrail trail, with optional fields for configuration details like S3 bucket name, SNS topic ARN, and logging options. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module to handle trail creation responses when interacting with AWS CloudTrail, particularly for retrieving and configuring trail metadata and logging destinations.",
      "description_length": 492,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.RemoveTagsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for removing tags from a resource in AWS CloudTrail, including the resource ID and a list of tags to remove. It provides functions to create, parse, and convert the structure to and from JSON and query formats. Use this module when managing tag-based metadata for CloudTrail resources programmatically.",
      "description_length": 339,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PublicKeyList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of public keys in AWS CloudTrail, providing functions to parse, convert to query format, and serialize to and from JSON. It works with XML nodes, JSON values, and AWS query parameters. Use this module when managing CloudTrail public key lists during event processing or API interactions.",
      "description_length": 313,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutInsightSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying which CloudTrail insights to log by associating a trail with a set of insight selectors. It provides functions to construct, serialize, and parse these specifications, enabling configuration of CloudTrail's insight logging behavior. Use this module when setting up or modifying CloudTrail trails to control which types of operational insights are recorded.",
      "description_length": 408,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupAttribute",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing lookup attributes used in CloudTrail event filtering. It includes functions to create, serialize, and parse these attributes using JSON, query strings, or XML. Concrete use cases include specifying criteria like event source or resource type when querying CloudTrail logs.",
      "description_length": 326,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DescribeTrailsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from describing AWS CloudTrail trails, primarily working with the `trail_list` structure. It provides functions to construct, parse, and serialize trail responses in formats like JSON and query strings. Use this when processing outputs from CloudTrail trail description operations in AWS.",
      "description_length": 318,
      "index": 12,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutEventSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for configuring event selectors on a CloudTrail trail, including the trail name and a list of event selectors. It provides functions to construct, serialize, and parse this configuration for use with CloudTrail's API. Use this module when setting up logging policies to specify which events to record in a trail.",
      "description_length": 349,
      "index": 13,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupEventsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for querying CloudTrail events, including filters like time ranges, event categories, and custom attributes. It provides functions to construct, parse, and serialize requests for API calls, supporting both JSON and query string formats. Concrete use cases include searching for specific API activity within a time window or filtering events by user or resource type.",
      "description_length": 406,
      "index": 14,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidSnsTopicNameException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid SNS topic name exceptions. It provides operations for constructing, parsing, and converting exception data to query parameters or JSON format. Use this module when interacting with AWS CloudTrail APIs that require validation and serialization of SNS topic names in error scenarios.",
      "description_length": 359,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListPublicKeysRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for listing public keys with optional time range and pagination. It supports creating, parsing, and converting requests to query parameters or JSON format. Concrete use cases include interacting with AWS CloudTrail APIs to retrieve public keys for event validation or audit purposes.",
      "description_length": 323,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DataResources",
      "library": "aws-cloudtrail",
      "description": "Handles data resource lists for CloudTrail events, including parsing from XML, converting to query parameters, and serializing to and from JSON. Works with `DataResource.t` lists containing ARN and type fields. Used to process CloudTrail logs with specific data resource constraints in AWS event monitoring workflows.",
      "description_length": 317,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailStatusResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the status of an AWS CloudTrail trail, including fields for logging state, delivery and notification times, and error details. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. Concrete use cases include retrieving and processing trail status information for monitoring and troubleshooting CloudTrail activity.",
      "description_length": 415,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceTypeNotSupportedException",
      "library": "aws-cloudtrail",
      "description": "This module handles the empty type representing an unsupported resource type error in AWS CloudTrail. It provides operations to construct, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this module when interacting with AWS CloudTrail APIs to manage error responses related to unsupported resource types.",
      "description_length": 342,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutInsightSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses for configuring insight selectors in a cloudtrail service. It provides functions to construct, serialize, and parse responses containing the trail ARN and insight selector configurations. Use this module when managing cloudtrail insights, such as setting up event monitoring or querying configuration responses.",
      "description_length": 341,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailStatusRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for a request to retrieve the status of a trail in AWS CloudTrail. It includes operations to create, parse, and serialize the request to JSON, query parameters, or XML. A typical use case involves preparing and sending a `GetTrailStatus` API call to check if a trail is logging or stopped.",
      "description_length": 326,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.KmsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a placeholder type `t` and associated functions for handling KMS exceptions in AWS CloudTrail. It includes operations for creating an instance, parsing from a generic type, and converting to and from query, JSON formats. Use this module when interacting with AWS CloudTrail APIs that require handling KMS-related exception data in specific wire formats.",
      "description_length": 373,
      "index": 22,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightSelector",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying insight types in AWS CloudTrail configurations. It includes functions to create, serialize, and parse insight selectors, primarily working with XML and JSON formats. Use it to configure and manage CloudTrail insights, such as filtering and analyzing specific event patterns in CloudTrail logs.",
      "description_length": 345,
      "index": 23,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailNotFoundException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the absence of a trail in AWS CloudTrail operations. It includes functions for creating a unit value, parsing optional unit values, and converting unit values to query parameters or JSON representations. This is used specifically to manage error cases where a requested trail does not exist, enabling consistent handling across API interactions.",
      "description_length": 415,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Resource",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing AWS CloudTrail resources with optional resource type and name fields. It provides functions to construct, parse, and convert these structures to and from JSON and query formats. It is used to handle resource data in CloudTrail event processing and API interactions.",
      "description_length": 319,
      "index": 25,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.Trail",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing an AWS CloudTrail trail configuration with optional fields for storage, logging, and notification settings. It provides functions to construct, parse, and serialize trail instances to and from XML, JSON, and query formats. Concrete use cases include configuring trail settings for AWS CloudTrail management and processing trail data for monitoring and compliance.",
      "description_length": 413,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.StopLoggingResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response type for stopping logging operations, where the only value is the unit type. It includes functions to create, parse, and convert the response to query or JSON formats. It is used specifically for handling API responses that indicate completion of stopping a logging operation without returning additional data.",
      "description_length": 341,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidInsightSelectorsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid insight selectors in AWS CloudTrail. It includes operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON. This is used specifically for error handling when working with CloudTrail insight selectors in AWS API interactions.",
      "description_length": 345,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.UpdateTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a record type and operations for constructing, parsing, and serializing requests to update AWS CloudTrail configurations. It handles data such as trail name, S3 bucket and key settings, SNS topic, log validation, and CloudWatch logging ARNs. Use this module when programmatically modifying CloudTrail logging behavior in AWS environments.",
      "description_length": 358,
      "index": 29,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceTagList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of resource tags in AWS CloudTrail by providing serialization, deserialization, and query conversion operations. It works with XML nodes, JSON values, and query parameters to facilitate tag management during CloudTrail resource operations. Use this module when processing CloudTrail event tags in JSON format, building queries, or parsing XML responses.",
      "description_length": 379,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.UnsupportedOperationException",
      "library": "aws-cloudtrail",
      "description": "This module defines a minimal type `t` and associated functions for handling unsupported operations in AWS CloudTrail. It includes parsing, query conversion, and JSON serialization functions, all targeting a unit type to represent the absence of data. Use this module when interfacing with AWS CloudTrail APIs to manage cases where an operation is not supported.",
      "description_length": 362,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DataResource",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying resource types and their associated values in AWS CloudTrail logging configurations. It includes functions to construct, serialize, and deserialize these resource specifications, supporting operations like filtering log events by specific resources. The module works with XML, JSON, and AWS query formats, making it suitable for integrating with AWS APIs and configuration management tools.",
      "description_length": 442,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTrailNameException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid trail name exceptions. It provides operations for creating, parsing, and converting exception data to query parameters, JSON, and back. Use this module when validating or handling errors related to improperly formatted trail names in API requests.",
      "description_length": 325,
      "index": 33,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.TagsList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of tags in AWS CloudTrail, providing functions to convert tag lists to and from JSON and query formats, and to parse XML nodes into tag lists. It works with lists of `Tag.t` records, which represent key-value pairs. Use this module when managing resource tags for CloudTrail events, such as when creating trails or logging events with custom metadata.",
      "description_length": 377,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DeleteTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a single data type `t` representing a request to delete a trail, containing a `name` field for the trail identifier. It provides functions to construct, parse, and convert the request to various formats including JSON and query parameters. Use this module when interacting with AWS CloudTrail's deletion API to specify which trail to remove by name.",
      "description_length": 369,
      "index": 35,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupAttributeKey",
      "library": "aws-cloudtrail",
      "description": "This module defines a set of specific attribute keys used for filtering and identifying events in AWS CloudTrail. It provides direct conversions between string representations and their corresponding typed values, supporting operations like parsing from XML, serializing to JSON or query parameters, and mapping to and from strings. Concrete use cases include constructing lookup attributes for event filtering in CloudTrail queries and converting between wire formats and internal types during API interactions.",
      "description_length": 512,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidKmsKeyIdException",
      "library": "aws-cloudtrail",
      "description": "This module defines a minimal unit type and associated functions for handling invalid KMS key ID exceptions. It provides operations to construct, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this to represent and serialize errors related to invalid KMS key identifiers in AWS CloudTrail operations.",
      "description_length": 338,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ExcludeManagementEventSources",
      "library": "aws-cloudtrail",
      "description": "This module defines a list of string values representing sources to exclude from management events in AWS CloudTrail. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. It is used when configuring event selectors to filter out specific management events from being logged.",
      "description_length": 337,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTrailsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for listing AWS CloudTrail trails, containing an optional pagination token. It provides functions to construct, serialize, and parse this request data, specifically working with string and JSON representations. Use this module when interacting with the CloudTrail API to retrieve trail information with support for paginated responses.",
      "description_length": 375,
      "index": 39,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientS3BucketPolicyException",
      "library": "aws-cloudtrail",
      "description": "This module defines a type and associated functions for handling the `InsufficientS3BucketPolicyException` error in AWS CloudTrail operations. It provides functions to create, parse, and convert the exception to query or JSON formats, primarily working with unit type and JSON-like structures. Concrete use cases include error handling when interacting with S3 bucket policies in CloudTrail APIs.",
      "description_length": 396,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutEventSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response structure for configuring event selectors on a trail, including the trail's ARN and the event selectors applied. It provides functions to construct, parse, and serialize the response for use in API interactions. The module handles XML, JSON, and query parameter formats for transport and processing.",
      "description_length": 330,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TagsLimitExceededException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated conversions for handling the `TagsLimitExceededException` in AWS CloudTrail. It includes operations for creating, parsing, and serializing the exception data to query parameters or JSON. Use this module when interacting with AWS CloudTrail APIs to manage tag limits and related error handling.",
      "description_length": 340,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidLookupAttributesException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid lookup attributes in CloudTrail operations. It provides operations to construct, parse, and serialize unit values to query parameters or JSON, primarily used for error handling in attribute validation. Concrete use cases include validating event lookup attributes and returning structured error responses in CloudTrail APIs.",
      "description_length": 402,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.CloudTrailARNInvalidException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid CloudTrail ARN exceptions. It includes operations for parsing, converting to query format, and serializing to and from JSON. Use cases include validating ARN inputs and handling errors in CloudTrail-related API interactions.",
      "description_length": 302,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetEventSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from retrieving event selectors in AWS CloudTrail, providing functions to construct, parse, and serialize the response data. It works with XML, JSON, and query string formats, specifically handling event selector configurations tied to a trail ARN. Use this module to process and manipulate event selector responses when managing CloudTrail logging settings.",
      "description_length": 388,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of AWS CloudTrail resource objects, providing direct conversions to and from XML, JSON, and query formats. It includes parsing from XML nodes, JSON serialization and deserialization, and query parameter construction. Use this module when processing CloudTrail event data that involves multiple resources, such as logging or analyzing trail activity across different AWS services.",
      "description_length": 405,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientEncryptionPolicyException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an insufficient encryption policy exception, with operations to construct, parse, and serialize the type to query parameters or JSON. It primarily handles unit values and is used to signal encryption policy validation failures in AWS CloudTrail operations. Concrete use cases include error handling during CloudTrail configuration validation and API response processing.",
      "description_length": 424,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidHomeRegionException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the invalid home region exception. It provides operations to construct, parse, and convert the unit value to query parameters, JSON, or back from JSON. Use this when interacting with AWS CloudTrail APIs that require validation and serialization of region-related errors.",
      "description_length": 340,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventSelectors",
      "library": "aws-cloudtrail",
      "description": "Handles serialization and deserialization of event selector lists for AWS CloudTrail configurations. Works with XML, JSON, and query string formats to convert between internal OCaml structures and external AWS-compatible representations. Used when configuring or retrieving event selectors for CloudTrail trails, enabling precise control over logged events.",
      "description_length": 357,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the response from retrieving a CloudTrail trail, containing an optional `Trail.t` value. It provides functions to construct, parse, and convert the response to and from XML, JSON, and query formats. Concrete use cases include handling AWS CloudTrail API responses when fetching trail details, enabling integration with AWS services and SDKs.",
      "description_length": 391,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a single data type `t` representing a request to retrieve a trail by name. It provides functions to construct, parse, and serialize the request in various formats including JSON and query parameters. It is used to interact with AWS CloudTrail APIs when managing trail configurations programmatically.",
      "description_length": 320,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTagParameterException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InvalidTagParameterException` error in AWS CloudTrail. It includes operations for creating, parsing, and converting the exception to query or JSON formats. Use this module when interacting with AWS CloudTrail APIs to manage tag-related error conditions.",
      "description_length": 328,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ReadWriteType",
      "library": "aws-cloudtrail",
      "description": "This module defines a sum type with three variants (`ReadOnly`, `WriteOnly`, `All`) representing access modes. It provides bidirectional conversions between strings and the type, JSON and query parameter serialization, and XML parsing. It is used to specify and handle read/write access types in AWS CloudTrail configurations.",
      "description_length": 326,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DeleteTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response type for a deleted trail operation, with unit type `t`. It provides functions to construct, parse, and serialize the response to query parameters, JSON, and back, ensuring compatibility with AWS API interactions. Use this when handling responses from deleting a trail in AWS CloudTrail, particularly for confirming deletion success or integrating with HTTP clients.",
      "description_length": 396,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.AddTagsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of the response data for adding tags to AWS CloudTrail resources. It defines a unit type to represent the empty response structure, along with functions to convert data to query parameters, JSON format, and back from JSON. It is used specifically for processing API responses when tagging operations are performed on CloudTrail trails.",
      "description_length": 393,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.S3BucketDoesNotExistException",
      "library": "aws-cloudtrail",
      "description": "This module represents an error condition for a missing S3 bucket. It provides functions to construct, parse, and serialize the error in various formats, including JSON and AWS query format. It is used when handling or propagating errors related to non-existent S3 buckets in AWS CloudTrail operations.",
      "description_length": 302,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.OperationNotPermittedException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an operation not permitted error, with operations to construct, parse, and serialize the error in various formats. It includes functions to convert the error to AWS query parameters, JSON, and back from JSON, ensuring compatibility with AWS API interactions. Concrete use cases include handling and propagating permission errors when interacting with AWS CloudTrail APIs, particularly during unauthorized operation attempts.",
      "description_length": 478,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientSnsTopicPolicyException",
      "library": "aws-cloudtrail",
      "description": "This module defines a type `t` representing an exception raised when an SNS topic policy is insufficient for a CloudTrail operation. It provides functions to construct, parse, and serialize the exception into query or JSON formats. Use this module when handling or propagating errors related to SNS topic permissions in CloudTrail configurations.",
      "description_length": 346,
      "index": 58,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupAttributesList",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization, deserialization, and manipulation of a list of lookup attributes used in CloudTrail event filtering. It provides functions to convert between XML, JSON, and query string formats, and works with lists of `LookupAttribute.t` records. Use this module when constructing or processing CloudTrail lookup events, especially when interfacing with AWS APIs or handling event data in different formats.",
      "description_length": 431,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTagsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from listing tags on AWS CloudTrail resources, providing structured access to tag lists and pagination tokens. It includes operations for creating, parsing, and serializing responses in JSON and query formats. Concrete use cases include retrieving and processing tags for CloudTrail trails or event data stores with support for paginated results.",
      "description_length": 376,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTokenException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid token exceptions. It provides operations to create, parse, and convert unit values to query parameters, JSON, and back from JSON. Useful for managing error responses in authentication flows where token validation fails.",
      "description_length": 297,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DescribeTrailsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for describing AWS CloudTrail trails, including an optional list of trail names and a flag to include shadow trails. It provides functions to construct, parse, and serialize the request for use with AWS API operations. Use this module when querying CloudTrail configurations, such as retrieving specific trails or including multi-region shadow trails in the response.",
      "description_length": 407,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.AddTagsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for adding tags to a resource in AWS CloudTrail, consisting of a resource ID and a list of tags. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. Use this module when managing trail tags programmatically, such as in configuration scripts or monitoring tools.",
      "description_length": 351,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.MaximumNumberOfTrailsExceededException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the exception when the maximum number of trails is exceeded. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON. Use this module to manage error responses related to trail limits in CloudTrail operations.",
      "description_length": 336,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceTag",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for associating tags with AWS CloudTrail resources, including operations to create, parse, and serialize tag data. It works with XML nodes, JSON values, and AWS query parameters to facilitate tag management during CloudTrail configuration. Concrete use cases include attaching metadata tags to trails or event data stores in AWS CloudTrail workflows.",
      "description_length": 387,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.CloudWatchLogsDeliveryUnavailableException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception scenario where CloudWatch Logs delivery is unavailable. It provides functions to construct, parse, and serialize the exception for handling AWS CloudTrail event errors. Use this module to detect and respond to CloudWatch Logs delivery failures in AWS CloudTrail processing workflows.",
      "description_length": 350,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidParameterCombinationException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid parameter combinations in AWS CloudTrail operations. It includes functions to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. Concrete use cases include validating input parameters and handling errors in AWS CloudTrail API requests.",
      "description_length": 351,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.CreateTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for configuring a new CloudTrail trail, including required fields like trail name and S3 bucket, and optional settings such as S3 key prefix, SNS topic, and multi-region support. It provides functions to construct, serialize, and parse trail configurations, enabling integration with AWS CloudTrail APIs. Use this module when programmatically creating or modifying CloudTrail trails with custom storage, notification, and logging options.",
      "description_length": 475,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Event",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing individual AWS CloudTrail events, including metadata like event ID, name, time, and associated resources. It provides functions to construct, parse, and serialize events to and from JSON and query formats. Concrete use cases include processing CloudTrail logs for auditing, analyzing API activity, and tracking resource changes in AWS environments.",
      "description_length": 402,
      "index": 69,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.PublicKey",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for handling public key information with optional fields for the key value, validity period, and fingerprint. It provides functions to construct, parse, and convert public key data to and from XML, JSON, and query formats. Concrete use cases include managing cryptographic key metadata in AWS CloudTrail logs and validating key usage periods for security auditing.",
      "description_length": 401,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailNotProvidedException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing the absence of a trail in CloudTrail operations. It includes functions to construct, parse, and convert the unit value to AWS query format, JSON, and back from JSON. Use this module when handling cases where a trail configuration is expected but not provided, such as in error handling or optional trail setup workflows.",
      "description_length": 374,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailNameList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of string-based trail names in AWS CloudTrail operations. It provides functions to convert, parse, and serialize these lists to and from JSON, query parameters, and XML nodes. Use this module when managing multiple trail names in API requests or responses, such as listing or referencing trails in logging configurations.",
      "description_length": 347,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidS3PrefixException",
      "library": "aws-cloudtrail",
      "description": "This module defines a minimal unit type `t` representing an invalid S3 prefix error in CloudTrail configurations. It includes operations to construct, parse, and convert the error to query or JSON formats, primarily used when handling malformed S3 prefix inputs in API requests. The module is typically used during request validation to ensure proper S3 prefix formatting before submitting to CloudTrail services.",
      "description_length": 413,
      "index": 73,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailList",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization, deserialization, and manipulation of a list of trail records from AWS CloudTrail. It provides functions to convert trail lists to and from XML, JSON, and AWS query formats, enabling direct interaction with AWS APIs and response parsing. Use this module when processing CloudTrail responses or constructing requests to list trails.",
      "description_length": 369,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidEventCategoryException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid event category exceptions. It provides operations to construct, parse, and convert values to query parameters, JSON, and back from JSON. Use this module when working with AWS CloudTrail event validation errors that require signaling unsupported or malformed event categories.",
      "description_length": 353,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidEventSelectorsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid event selectors in AWS CloudTrail. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all returning or operating on unit values. Use cases include validating and transforming event selector data when interacting with AWS CloudTrail APIs.",
      "description_length": 378,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DataResourceValues",
      "library": "aws-cloudtrail",
      "description": "This module handles list-based data resources, specifically working with string lists from `Aws.BaseTypes`. It provides functions to parse, convert to query format, and serialize to and from JSON. Use this module when handling data resource values in AWS CloudTrail operations, such as processing event data resources or constructing API requests.",
      "description_length": 347,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventsList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of CloudTrail events, providing direct conversions to and from JSON, query parameters, and XML. It includes parsing from XML nodes and serialization for API requests or storage. Use this module when processing batches of CloudTrail events, such as when retrieving or exporting event data from AWS.",
      "description_length": 323,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailAlreadyExistsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception for when a CloudTrail trail already exists. It includes operations to construct, parse, and convert the exception to and from JSON and query formats. It is used to handle duplicate trail errors in CloudTrail API interactions.",
      "description_length": 292,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidNextTokenException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid pagination token errors. It provides operations to create, parse, and convert unit values to query parameters, JSON, and back from JSON. Useful for managing API responses where a next token is invalid or improperly formatted.",
      "description_length": 303,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidS3BucketNameException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid S3 bucket name exceptions. It provides operations for creating, parsing, and converting exception data to query parameters, JSON, and back. Use this when interacting with AWS CloudTrail APIs to manage errors related to malformed S3 bucket names.",
      "description_length": 323,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTimeRangeException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid time range exceptions. It provides operations to create, parse, and convert the unit value to query parameters, JSON, or back from JSON. Use this when interacting with AWS CloudTrail APIs that require handling errors related to invalid time ranges.",
      "description_length": 326,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceNotFoundException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling resource not found errors. It provides operations to convert values to query parameters, JSON, and back from JSON, while parsing returns an optional unit value. Use this module when working with error responses that require serialization to AWS query format or JSON, particularly for representing missing resources.",
      "description_length": 385,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.RemoveTagsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of responses for removing tags from AWS CloudTrail resources. It defines a unit type for successful responses and provides functions to convert unit values to AWS query format, JSON, and back from JSON. Use this module when interacting with AWS CloudTrail's tag removal API operations to structure and interpret responses.",
      "description_length": 380,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.StartLoggingRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for initiating logging in a cloud environment, specifically handling a single string field `name`. It provides functions to construct, serialize, and parse this structure to and from JSON, query parameters, and XML. Use this when configuring logging for cloud resources, where the `name` field identifies the target resource.",
      "description_length": 362,
      "index": 85,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.StopLoggingRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for stopping logging in a cloud trail service. It includes operations to create, parse, and convert the request to various formats like JSON and query parameters. It works with XML input for parsing and handles a string-based name field for identification.",
      "description_length": 296,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization, deserialization, and manipulation of insight selectors used in AWS CloudTrail configurations. It works with lists of `InsightSelector.t` records, converting them to and from XML, JSON, and query parameters. Concrete use cases include processing CloudTrail insight selector data when configuring or retrieving trail settings via AWS SDK.",
      "description_length": 375,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailInfo",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for holding information about a CloudTrail trail, including its ARN, name, and home region. It provides functions to construct, parse, and serialize trail data to and from JSON and query formats. Concrete use cases include retrieving trail metadata from AWS responses and preparing trail data for API requests.",
      "description_length": 347,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTrailsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from listing AWS CloudTrail trails, providing functions to construct, parse, and serialize trail data. It works with trail lists and optional pagination tokens for handling large result sets. Use this module to process and manage trail information returned by AWS CloudTrail's ListTrails API operation.",
      "description_length": 332,
      "index": 89,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetEventSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing a request to retrieve event selectors for a specific AWS CloudTrail trail. It provides functions to construct, serialize, and parse the request, which includes a single field for the trail name. Use this module when configuring or querying event logging settings for a CloudTrail trail, such as determining whether events are being logged from specific data or management sources.",
      "description_length": 430,
      "index": 90,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupEventsResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response structure for lookup events in AWS CloudTrail, containing a list of events and an optional next token for pagination. It provides functions to construct, parse, and serialize the response to query parameters or JSON format. Use this module when handling event lookup responses from the CloudTrail API, particularly for processing logs or implementing paginated retrieval.",
      "description_length": 402,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventCategory",
      "library": "aws-cloudtrail",
      "description": "This module defines a single enumerated type representing categories of events in AWS CloudTrail, specifically supporting conversion between string representations and type values. It provides functions for serializing and deserializing event categories to and from JSON, XML, and query parameters, ensuring compatibility with AWS APIs. Concrete use cases include processing CloudTrail logs, filtering events by category, and integrating with AWS services that emit or consume CloudTrail event data.",
      "description_length": 499,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightNotEnabledException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception state where insights are not enabled. It includes operations to construct, parse, and convert the exception to AWS query or JSON formats. Use this module when handling service responses that indicate missing insight configurations.",
      "description_length": 298,
      "index": 93,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.CloudTrailAccessNotEnabledException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `CloudTrailAccessNotEnabledException` error. It provides operations to create, parse, and convert the exception to query parameters or JSON format. Use this when interacting with AWS CloudTrail APIs to manage error responses related to disabled CloudTrail access.",
      "description_length": 337,
      "index": 94,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidMaxResultsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InvalidMaxResultsException` error in AWS CloudTrail. It provides operations for parsing, converting to query format, and serializing to and from JSON. Use this module when interacting with AWS CloudTrail APIs to manage error responses related to invalid max results parameters.",
      "description_length": 352,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidCloudWatchLogsRoleArnException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InvalidCloudWatchLogsRoleArnException` error. It provides operations for constructing, parsing, and converting the error to query or JSON formats. Use this module when interacting with AWS CloudTrail APIs to manage invalid role ARN error responses.",
      "description_length": 323,
      "index": 96,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientDependencyServiceAccessPermissionException",
      "library": "aws-cloudtrail",
      "description": "This module defines a single type `t` representing an exception for insufficient service access permissions in a cloudtrail context. It includes operations to construct, parse, and convert the exception to query or JSON formats. Use this to handle or propagate errors related to missing permissions for dependent services.",
      "description_length": 322,
      "index": 97,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.OrganizationNotInAllFeaturesModeException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type exception used to represent an organization not operating in all features mode. It includes functions to construct, parse, and convert the exception to query or JSON formats. It is used when handling AWS CloudTrail errors related to organization feature limitations.",
      "description_length": 298,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetInsightSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module handles the construction, parsing, and serialization of requests to retrieve insight selectors for a CloudTrail trail. It works with XML, JSON, and query string formats, converting between these representations and the internal request type. A concrete use case is preparing and sending a request to AWS CloudTrail to fetch insight selector configurations for a specific trail.",
      "description_length": 389,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetInsightSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses for retrieving insight selectors in AWS CloudTrail, providing constructors, JSON serialization, and XML parsing for the response structure. It works with AWS CloudTrail's `InsightSelectors` type and optional ARN strings. Use this module to process and serialize insight selector responses when managing CloudTrail event insights.",
      "description_length": 359,
      "index": 100,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.StartLoggingResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of the empty response type for a logging operation. It provides functions to convert unit values to AWS query format, JSON, and back, ensuring compatibility with AWS API expectations. It is used specifically for representing and processing responses that carry no payload, such as acknowledgments.",
      "description_length": 355,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.KmsKeyNotFoundException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling KMS key not found errors. It includes operations for creating, parsing, and converting error values to query parameters, JSON, and back. Use this when interacting with AWS CloudTrail APIs to manage missing KMS key scenarios.",
      "description_length": 294,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Tag",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for handling tags in AWS CloudTrail, consisting of a key-value pair where the value is optional. It provides functions to construct, parse, and convert tags to and from JSON and query formats. Use this module when managing metadata tags for CloudTrail resources like trails or events.",
      "description_length": 321,
      "index": 103,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventSelector",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying event selection criteria in AWS CloudTrail, including fields to filter by read/write type, management events, data resources, and excluded management event sources. It provides functions to construct, serialize, and deserialize these criteria for use in API requests and responses. Concrete use cases include configuring trail event logging with precise filtering and processing event selector configurations from JSON or XML inputs.",
      "description_length": 485,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.NotOrganizationMasterAccountException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `NotOrganizationMasterAccountException` error in AWS CloudTrail. It provides operations to create, parse, and convert the exception to query parameters, JSON, and back, specifically for signaling when an account is not the organization's master account. Use cases include error handling in CloudTrail API interactions when managing organization-level events.",
      "description_length": 432,
      "index": 105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListPublicKeysResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from listing public keys in AWS CloudTrail, providing constructors, parsers, and serializers for the response data. It works with XML, JSON, and query string formats to facilitate API interactions. Use it to process and transform public key list responses in CloudTrail workflows.",
      "description_length": 310,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidCloudWatchLogsLogGroupArnException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling errors related to invalid CloudWatch Logs log group ARNs. It provides operations for constructing, parsing, and serializing error data in both query and JSON formats. Concrete use cases include validating ARN inputs and handling malformed ARN errors in API requests.",
      "description_length": 336,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.LookupEvents",
      "library": "aws-cloudtrail",
      "description": "This module handles querying AWS CloudTrail for events by translating native OCaml types to and from HTTP requests and responses. It works with `LookupEventsRequest` and `LookupEventsResponse` types, encoding requests into properly signed HTTP queries and decoding responses or errors. Concrete use cases include retrieving CloudTrail event logs for auditing or monitoring specific API activity in AWS services like S3 or IAM.",
      "description_length": 426,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.PutEventSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles the conversion of event selector configurations into HTTP requests and responses for interacting with AWS CloudTrail. It works with input and output types specific to the `PutEventSelectors` operation, along with error handling for failed requests. It is used when setting up or modifying event selectors on a CloudTrail trail, ensuring proper request signing and encoding.",
      "description_length": 393,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.RemoveTags",
      "library": "aws-cloudtrail",
      "description": "This module handles removing tags from AWS CloudTrail resources by defining the request and response types for the `RemoveTags` API call. It works with the `RemoveTagsRequest` and `unit` output types, along with internal error types for handling failures. It is used when interacting with AWS CloudTrail to strip metadata tags from trails, ensuring proper request signing and response decoding.",
      "description_length": 394,
      "index": 110,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.ListPublicKeys",
      "library": "aws-cloudtrail",
      "description": "This module handles listing public keys from AWS CloudTrail by converting input requests to HTTP format and parsing responses. It works with `ListPublicKeysRequest` and `ListPublicKeysResponse` types, along with internal error types for failure handling. Use this module to retrieve public keys for verifying CloudTrail digest files or validating signed API requests.",
      "description_length": 367,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.PutInsightSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles the conversion of input and output types for the PutInsightSelectors API call in AWS CloudTrail. It provides functions to serialize requests into HTTP format and deserialize HTTP responses into result types, specifically working with the PutInsightSelectorsRequest and PutInsightSelectorsResponse structures. It is used when configuring insight selectors for CloudTrail trails, enabling tracking of management and data events.",
      "description_length": 446,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types",
      "library": "aws-cloudtrail",
      "description": "This module structures data for AWS CloudTrail trails, event selectors, insight selectors, resource tags, and error responses, enabling configuration, filtering, and auditing workflows. It supports S3 bucket integration, KMS key validation, and trail lifecycle operations through types like `TrailInfo.t`, `EventSelector.t`, and `Tag.t`, with functions for serialization, parsing, and API interaction. Submodules handle trail metadata, tag management, insight configuration, and error handling, allowing tasks like querying API events, updating trail settings, paginating through resource tags, and managing KMS key states across XML, JSON, and query formats. Specific use cases include filtering API activity by time range or user, configuring insight logging for anomalies, and handling service errors like missing S3 buckets or invalid ARNs.",
      "description_length": 844,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.ListTags",
      "library": "aws-cloudtrail",
      "description": "This module handles listing tags for AWS CloudTrail resources by converting input requests into HTTP queries and parsing responses. It works with `ListTagsRequest` and `ListTagsResponse` types, along with internal error types for handling failures. Use this module to retrieve tags associated with CloudTrail trails or other supported resources directly via AWS SDK calls.",
      "description_length": 372,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.UpdateTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles the updating of AWS CloudTrail trails by defining the request and response types, along with functions to serialize requests into HTTP format and deserialize HTTP responses. It works directly with `UpdateTrailRequest` and `UpdateTrailResponse` data structures, encoding and decoding them using query parameters and XML. Concrete use cases include modifying trail settings such as logging status, S3 bucket targets, or CloudWatch Logs integration programmatically.",
      "description_length": 483,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.ListTrails",
      "library": "aws-cloudtrail",
      "description": "This module handles listing AWS CloudTrail trails by converting input requests to HTTP format and parsing responses. It works with `ListTrailsRequest` and `ListTrailsResponse` types, along with internal error types for handling failures. Use this module to programmatically retrieve trail configurations, including trail ARNs and S3 bucket details, from AWS CloudTrail.",
      "description_length": 369,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.DeleteTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles the deletion of AWS CloudTrail trails by converting deletion requests into properly signed HTTP queries and processing responses. It works with `DeleteTrailRequest` input to produce API requests and interprets HTTP responses into unit outputs or specific CloudTrail errors. Concrete use cases include removing trail configurations and ensuring proper AWS service endpoint and versioning during deletion.",
      "description_length": 423,
      "index": 117,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.AddTags",
      "library": "aws-cloudtrail",
      "description": "This module handles adding tags to AWS CloudTrail resources by defining the request structure, error types, and serialization logic. It works with CloudTrail ARNs and tag lists, converting native requests to signed HTTP queries and parsing responses. Use it to programmatically associate metadata tags with CloudTrail trails for resource organization and billing tracking.",
      "description_length": 372,
      "index": 118,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Errors_internal",
      "library": "aws-cloudtrail",
      "description": "This module defines a comprehensive set of error types specific to AWS CloudTrail operations, including validation failures, access issues, and service errors. It provides functions to convert errors to HTTP status codes, string representations, and parse them from strings. These operations are used to handle and interpret CloudTrail service responses and error conditions in API interactions.",
      "description_length": 395,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.GetInsightSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving insight selectors from AWS CloudTrail by defining the request and response types, along with functions to serialize requests to HTTP and deserialize HTTP responses. It works directly with CloudTrail's GetInsightSelectorsRequest and GetInsightSelectorsResponse types, and handles service-specific errors. It is used when querying CloudTrail to determine which insights are being logged for a trail, such as identifying unusual API activity or management events.",
      "description_length": 491,
      "index": 120,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.CreateTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles the creation of AWS CloudTrail trails by defining the request and response types, along with functions to serialize requests to HTTP and deserialize HTTP responses. It works directly with `CreateTrailRequest` and `CreateTrailResponse` types, and processes errors specific to trail creation. Concrete use cases include configuring trail settings, specifying storage locations, and handling failure scenarios when setting up logging infrastructure.",
      "description_length": 466,
      "index": 121,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.GetTrailStatus",
      "library": "aws-cloudtrail",
      "description": "This module retrieves the status of an AWS CloudTrail trail, providing functions to construct and send HTTP requests for trail status checks and to parse the corresponding responses. It works with input and output types specific to the `GetTrailStatus` operation, including encoded query parameters and XML-parsed responses. Concrete use cases include monitoring trail health, verifying logging activity, and debugging delivery issues to S3 or CloudWatch.",
      "description_length": 455,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.GetEventSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving event selectors for AWS CloudTrail trails by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with AWS CloudTrail event selector configurations, allowing precise control over logging settings for data and management events. Concrete use cases include querying the current event selector settings of a trail to audit or modify logging behavior for specific AWS services or data resources.",
      "description_length": 520,
      "index": 123,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.StopLogging",
      "library": "aws-cloudtrail",
      "description": "This module handles stopping logging for an AWS CloudTrail trail by defining the request structure, converting it to an HTTP request, and parsing responses or errors. It works with the `StopLoggingRequest` type to send a formatted query request to the CloudTrail service endpoint. Use this module to disable logging on a specific trail when managing audit trails or pausing activity tracking in AWS environments.",
      "description_length": 412,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.DescribeTrails",
      "library": "aws-cloudtrail",
      "description": "This module handles the AWS CloudTrail `DescribeTrails` API operation, converting native input types to properly signed HTTP requests and parsing HTTP responses into either success outputs or specific CloudTrail errors. It works directly with `DescribeTrailsRequest` and `DescribeTrailsResponse` types, along with internal CloudTrail error types. It is used to retrieve metadata about existing CloudTrail trails, such as their configuration and status, by making authenticated AWS API calls and decoding the results.",
      "description_length": 516,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.StartLogging",
      "library": "aws-cloudtrail",
      "description": "This module handles starting logging for a trail in AWS CloudTrail by defining the request structure, sending the appropriate HTTP request, and parsing responses or errors. It works with the `StartLoggingRequest` type to specify which trail to start logging and converts these into signed HTTP requests targeting the CloudTrail service. Concrete use cases include enabling logging for a specific trail after creation or resuming logging after a pause, ensuring the correct AWS service endpoint and signature version are used.",
      "description_length": 525,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.GetTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving AWS CloudTrail trail details by defining the input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with `GetTrailRequest` and `GetTrailResponse` structures, encoding requests into properly formatted HTTP queries and decoding responses or errors from XML. Concrete use cases include querying trail configuration data such as S3 bucket locations and logging status, and handling specific AWS service errors like invalid trail names or access permissions.",
      "description_length": 567,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail",
      "library": "aws-cloudtrail",
      "description": "This module provides tools to interact with AWS CloudTrail for managing trails, event selectors, insight selectors, and resource tags through HTTP requests. It supports operations like creating, updating, and deleting trails, configuring logging settings, and retrieving event logs, public keys, and trail metadata. Developers can use it to audit AWS API activity, monitor resource changes, and manage trail configurations programmatically. Examples include filtering S3 or IAM events, enabling insight logging for anomalies, and handling trail lifecycle operations like starting or stopping logging.",
      "description_length": 600,
      "index": 128,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 129,
    "meaningful_modules": 129,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 844,
    "min_description_length": 292,
    "avg_description_length": 382.47286821705427,
    "embedding_file_size_mb": 0.4690523147583008
  }
}