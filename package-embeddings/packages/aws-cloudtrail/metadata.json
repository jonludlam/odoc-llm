{
  "package": "aws-cloudtrail",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 129,
  "creation_timestamp": "2025-08-15T16:25:09.134511",
  "modules": [
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTagParameterException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InvalidTagParameterException` error. It provides operations to create, parse, and convert the exception to query or JSON formats, typically used in AWS CloudTrail API interactions. The module works with unit values and integrates with AWS SDK types for error handling in tag-related operations.",
      "description_length": 369,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetInsightSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses for retrieving insight selectors from AWS CloudTrail, providing constructors, JSON serialization/deserialization, and query conversion. It works with AWS CloudTrail's `InsightSelectors` type and optional ARN strings. Concrete use cases include processing and formatting responses when querying CloudTrail for insight selector configurations.",
      "description_length": 371,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetEventSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from retrieving event selectors in AWS CloudTrail. It defines a data structure with optional ARN and event selectors, and provides functions to construct, parse, and serialize the response to query parameters or JSON. It is used when configuring or inspecting logging event rules for CloudTrail trails.",
      "description_length": 332,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailStatusResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the status of an AWS CloudTrail trail, including fields for logging state, delivery times, and error messages. It provides functions to construct, parse, and convert the structure to and from JSON and query formats. Use this module to retrieve and process detailed status information about CloudTrail logging activity, such as checking if logging is active or inspecting the latest delivery errors.",
      "description_length": 448,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTrailsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from listing AWS CloudTrail trails, providing functions to construct, parse, and serialize trail data with optional pagination tokens. It works with trail lists and string tokens for pagination, supporting JSON and XML formats for API interactions. Concrete use cases include processing and serializing AWS CloudTrail list responses for API clients or logging tools.",
      "description_length": 396,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightType",
      "library": "aws-cloudtrail",
      "description": "This module defines a single type `t` representing insight types in AWS CloudTrail, specifically `ApiCallRateInsight`. It provides conversions to and from strings, JSON, and query formats, along with parsing functions for XML input. Use cases include serializing and deserializing insight type data when interacting with AWS CloudTrail APIs or processing trail logs.",
      "description_length": 366,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the response data from retrieving an AWS CloudTrail trail. It provides functions to construct, parse, and serialize a `GetTrailResponse` containing an optional `Trail` object. Use cases include processing API responses when fetching trail details, converting trail data to JSON or query formats, and parsing XML input into structured trail response data.",
      "description_length": 374,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.AddTagsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for adding tags to a resource in AWS CloudTrail, consisting of a resource ID and a list of tags. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Use this module when managing trail tags programmatically, such as in configuration scripts or monitoring tools.",
      "description_length": 357,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetEventSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing a request to retrieve event selectors for a specific AWS CloudTrail trail. It includes operations to create, parse, and serialize the request in various formats, such as JSON and query parameters. It works directly with XML nodes, JSON values, and AWS-specific string types to facilitate interaction with the CloudTrail API.",
      "description_length": 374,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightNotEnabledException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InsightNotEnabledException` case. It includes operations for creating, parsing, and converting the exception to query or JSON formats. Use this when working with AWS CloudTrail APIs that require signaling insight-related exceptions.",
      "description_length": 307,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailStatusRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for a request to retrieve the status of a trail in AWS CloudTrail. It includes functions to construct the request, convert it to query parameters or JSON, and parse it from XML or JSON. Use this module when interacting with AWS CloudTrail APIs to check the status of a specific trail by name.",
      "description_length": 329,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventSelectors",
      "library": "aws-cloudtrail",
      "description": "Handles serialization and deserialization of AWS CloudTrail event selectors. Works with lists of event selector records, converting between XML, JSON, and query parameter formats. Used when configuring or retrieving CloudTrail event logging rules that specify which events to record.",
      "description_length": 283,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTrailNameException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid trail name exceptions. It provides operations for creating, parsing, and converting exception values to query parameters, JSON, and back. Use this when validating or handling errors related to improperly named trails in AWS CloudTrail operations.",
      "description_length": 324,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailNotProvidedException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing the absence of a trail in CloudTrail operations. It includes functions to construct, parse, and convert the value to query or JSON formats, ensuring consistent handling of missing trail data. Use this when interacting with AWS CloudTrail APIs to manage or validate trail configurations where a trail is expected but not provided.",
      "description_length": 383,
      "index": 13,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ReadWriteType",
      "library": "aws-cloudtrail",
      "description": "This module defines a sum type with three variants (`ReadOnly`, `WriteOnly`, `All`) representing access levels. It provides bidirectional conversions between strings and the type, JSON and query parameter serialization, and XML parsing. It is used to specify and handle access type values in AWS CloudTrail configurations and event processing.",
      "description_length": 343,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceIdList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of string-based resource IDs, providing direct conversions to and from JSON and query formats. It includes parsing from XML nodes and constructing empty lists. Useful for managing collections of identifiers in AWS CloudTrail operations.",
      "description_length": 262,
      "index": 15,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidSnsTopicNameException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid SNS topic name exceptions. It provides operations for constructing, parsing, and serializing exception data to query parameters or JSON. Use cases include validating SNS topic names in AWS CloudTrail event processing and handling malformed input in SNS-related API calls.",
      "description_length": 349,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.UpdateTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for configuring AWS CloudTrail updates, with fields representing trail properties like S3 bucket name, SNS topic, and logging options. It provides functions to construct, parse, and serialize trail configurations for use in API requests. Use this module when programmatically modifying CloudTrail settings, such as enabling multi-region logging or log validation.",
      "description_length": 400,
      "index": 17,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.OperationNotPermittedException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing the `OperationNotPermittedException` error, with operations to construct, parse, and serialize the exception into query and JSON formats. It works with unit values and is used when handling AWS CloudTrail API errors that indicate unauthorized operations. A concrete use case is returning or handling error responses in AWS CloudTrail service interactions where an operation is denied due to permissions.",
      "description_length": 457,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailList",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization, deserialization, and manipulation of a list of trail records from AWS CloudTrail. It provides functions to convert trail lists to and from XML, JSON, and query formats, enabling direct interaction with AWS APIs. Use this module when processing CloudTrail responses or constructing requests that require lists of trails.",
      "description_length": 358,
      "index": 19,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.CloudTrailAccessNotEnabledException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `CloudTrailAccessNotEnabledException` error. It provides operations to construct, parse, and convert the exception to query parameters or JSON format. Use this module when interacting with AWS CloudTrail APIs to manage cases where access is not enabled.",
      "description_length": 327,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PublicKeyList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of public keys in AWS CloudTrail. It provides functions to convert public key lists to and from XML, JSON, and query formats. Use this module when processing CloudTrail public key responses or constructing requests involving public key data.",
      "description_length": 267,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of insight selectors for AWS CloudTrail configurations. It works with lists of `InsightSelector.t` records, converting them to and from XML, JSON, and query parameters. Use this module when managing CloudTrail logging configurations that involve insight selectors, such as setting up or retrieving event selectors for CloudTrail trails.",
      "description_length": 394,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventCategory",
      "library": "aws-cloudtrail",
      "description": "This module defines a single enumerated type representing categories of events in AWS CloudTrail, with operations to convert between string representations and the enumerated values. It supports serialization to and from JSON, query parameters, and XML, as well as parsing from XML nodes. Concrete use cases include handling event category data when processing CloudTrail logs or interacting with AWS services that require event categorization.",
      "description_length": 444,
      "index": 23,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventsList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of CloudTrail events, providing direct conversions to and from JSON and query formats. It includes parsing from XML nodes and constructing empty event lists. Use this when processing batches of CloudTrail events returned by API calls or preparing them for further analysis.",
      "description_length": 299,
      "index": 24,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailNotFoundException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the absence of a trail in AWS CloudTrail operations. It includes functions for creating a unit value, parsing optional unit values, and converting unit values to query parameters, JSON, and back from JSON. Use this module when interacting with AWS CloudTrail APIs to manage cases where a trail does not exist.",
      "description_length": 379,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TagsList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of tags in AWS CloudTrail operations. It provides functions to convert tag lists to and from XML, JSON, and query formats, ensuring proper serialization and deserialization. It works specifically with lists of `Tag.t` structures, supporting use cases like logging resource tags during API calls or processing trail event data.",
      "description_length": 352,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TagsLimitExceededException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling cases where the limit on tags has been exceeded. It provides operations to create, parse, and convert the unit value to query parameters, JSON, and back from JSON. Use this when managing tag limits in AWS CloudTrail configurations.",
      "description_length": 301,
      "index": 27,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidLookupAttributesException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid lookup attributes in AWS CloudTrail operations. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all returning unit values. It is used to represent and process invalid attribute errors in API requests without carrying additional data.",
      "description_length": 377,
      "index": 28,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DataResource",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing resources in AWS CloudTrail events, specifically capturing the type and values of data resources involved in API calls. It provides constructors, JSON and XML parsers, and serialization functions for interacting with AWS CloudTrail logs. Use this module when processing or analyzing CloudTrail event data to extract information about specific resources accessed or modified.",
      "description_length": 428,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupEventsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for querying CloudTrail events with filtering options. It supports operations to create, serialize, and parse event lookup requests using JSON, query strings, or XML. Concrete use cases include retrieving CloudTrail events by time range, event category, or custom lookup attributes like user name or event ID.",
      "description_length": 349,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListPublicKeysResponse",
      "library": "aws-cloudtrail",
      "description": "Handles responses from listing public keys in AWS CloudTrail, providing functions to construct, serialize, and deserialize the response data. Works with public key lists and optional pagination tokens. Used to retrieve and process public key information for verifying CloudTrail log integrity.",
      "description_length": 293,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidParameterCombinationException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type exception for handling invalid parameter combinations in AWS CloudTrail operations. It includes functions to create, parse, and convert the exception to query or JSON formats, ensuring proper error handling during API requests. Use this when validating input parameters for CloudTrail operations to ensure correct combinations are provided.",
      "description_length": 372,
      "index": 32,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceTag",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for handling resource tags in AWS CloudTrail, including a resource ID and a list of tags. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when managing tagged resources in CloudTrail configurations or event logging workflows.",
      "description_length": 343,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailAlreadyExistsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the exception case where a trail already exists. It provides operations for creating a unit value, parsing input into a unit, and converting unit values to query parameters or JSON format. Use this module when interacting with AWS CloudTrail APIs to manage trail creation and error responses.",
      "description_length": 362,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidCloudWatchLogsLogGroupArnException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid CloudWatch Logs log group ARN exceptions. It provides operations for creating, parsing, and converting the exception data to query parameters, JSON, or from JSON. Use this module when validating or processing ARNs in CloudTrail event logging workflows.",
      "description_length": 330,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.KmsKeyDisabledException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing the state of a KMS key being disabled. It includes operations to construct, parse, and convert the state to query parameters or JSON format. It is used to handle error responses when interacting with AWS KMS services where a key is explicitly disabled.",
      "description_length": 306,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DataResourceValues",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of string-based data resources in AWS CloudTrail operations. It provides functions to convert these lists to and from JSON and query formats, as well as parsing from XML nodes. It is used when working with event data stores or advanced event selectors that require filtering by resource values.",
      "description_length": 320,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.RemoveTagsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for removing tags from a resource in AWS CloudTrail, including the resource ID and a list of tags to remove. It provides functions to create, parse, and convert the structure to and from JSON and query formats. Use this module when interacting with AWS CloudTrail's tag management API to remove specific tags from a tracked resource.",
      "description_length": 370,
      "index": 38,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.KmsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a KMS exception type and related functions for handling AWS CloudTrail key management service errors. It includes operations to create, parse, and convert exception data to query parameters or JSON format. Use this module when interacting with AWS KMS operations that require exception handling, such as decrypting or encrypting data in CloudTrail logs.",
      "description_length": 373,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.DescribeTrailsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for describing CloudTrail trails, including an optional list of trail names and a flag to include shadow trails. It provides functions to construct, parse, and serialize the request for use with AWS API calls. Use this module when querying CloudTrail trail configurations, particularly when filtering by specific trail names or including shadow trails in the response.",
      "description_length": 408,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceNotFoundException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling resource not found errors. It provides operations to convert values to query parameters, JSON, and back from JSON, always resulting in a unit value. Use this module when you need to represent absence of a resource in API responses or error handling scenarios.",
      "description_length": 329,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidKmsKeyIdException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type representing an invalid KMS key ID exception, with operations to create, parse, and convert the exception to query parameters, JSON, or from JSON. It is used specifically for handling errors related to invalid KMS key identifiers in AWS CloudTrail operations. Concrete use cases include validating KMS key IDs during API request processing and serializing error responses for client communication.",
      "description_length": 429,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidEventSelectorsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid event selectors in AWS CloudTrail. It includes operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON. Use this module when validating or processing event selector configurations in AWS CloudTrail APIs.",
      "description_length": 326,
      "index": 43,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidNextTokenException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid pagination token errors. It includes operations to create, parse, and convert error data to query parameters, JSON, and back from JSON. It is used when an invalid `NextToken` is provided in a paginated request, ensuring consistent error handling across API calls.",
      "description_length": 341,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DeleteTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a single data type `t` representing a request to delete an AWS CloudTrail trail, containing a `name` field for the trail identifier. It provides functions to construct, parse, and convert the request to various formats including JSON, query parameters, and XML. Use this module when interacting with the AWS CloudTrail API to delete trails by name.",
      "description_length": 368,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupAttributeKey",
      "library": "aws-cloudtrail",
      "description": "This module defines a set of specific attribute keys used for filtering and identifying events in AWS CloudTrail. It provides direct conversions between string representations and their corresponding typed values, supporting operations like parsing from XML, serialization to JSON or query parameters, and string conversion. Concrete use cases include processing CloudTrail event data, constructing lookup requests, and handling event attributes in API interactions.",
      "description_length": 466,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTagsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for making requests to list tags on AWS CloudTrail resources, including a list of resource IDs and an optional pagination token. It provides functions to construct, serialize, and parse these requests in various formats such as JSON and query parameters. Concrete use cases include retrieving tags for trails or events by their resource IDs, with support for paginated results.",
      "description_length": 414,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.CreateTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for configuring a new AWS CloudTrail trail, including settings like S3 storage, logging options, and tags. It provides functions to construct, serialize, and parse trail configurations, supporting operations like converting to HTTP query parameters or JSON format. Use this module when programmatically creating or modifying CloudTrail trails in AWS environments.",
      "description_length": 400,
      "index": 48,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.RemoveTagsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of the response for removing tags from AWS CloudTrail resources. It defines a unit type to represent the absence of a meaningful response payload, along with functions to convert to and from JSON and query formats. It is used when processing AWS CloudTrail API responses that do not return data beyond a success or failure indication.",
      "description_length": 392,
      "index": 49,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.UnsupportedOperationException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling unsupported operations. It provides parsing, query conversion, and JSON serialization/deserialization for values of unit type. Useful for representing and handling operations that are intentionally not implemented or recognized.",
      "description_length": 298,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.StartLoggingRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing a request to start logging in a cloudtrail service. It includes operations to create, parse, and convert the structure to query parameters or JSON format. Use this module when initiating logging actions by providing the target resource name.",
      "description_length": 291,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.CloudWatchLogsDeliveryUnavailableException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception scenario where CloudWatch Logs delivery is unavailable. It provides functions to construct, parse, and serialize this exception state into query and JSON formats. This is used to handle and communicate specific error conditions during interactions with AWS CloudWatch Logs services.",
      "description_length": 349,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidInsightSelectorsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid insight selectors in AWS CloudTrail. It includes operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON. Use this when validating or processing insight selector configurations in CloudTrail event data.",
      "description_length": 325,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.AddTagsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of an empty response type for a service operation. It provides functions to convert unit values to AWS query format, JSON, and back, ensuring compatibility with API request/response handling. Useful when working with AWS SDK operations that return no meaningful data, such as certain tag management calls.",
      "description_length": 363,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidHomeRegionException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the invalid home region exception. It provides operations to construct, parse, and convert the unit value to query parameters, JSON, or back from JSON. Use this when interacting with AWS CloudTrail APIs to manage errors related to incorrect region endpoints.",
      "description_length": 328,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DescribeTrailsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses from describing AWS CloudTrail trails, primarily by encapsulating a list of trail configurations. It provides functions to construct, parse, and serialize trail responses in various formats including XML, JSON, and query parameters. Use this module when retrieving and processing trail metadata from AWS CloudTrail API calls.",
      "description_length": 355,
      "index": 56,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetTrailRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for retrieving an AWS CloudTrail trail by name. It provides functions to construct, serialize, and deserialize the request, supporting operations like converting to a JSON object or querying from XML input. Use this module when interacting with AWS CloudTrail APIs to fetch trail details programmatically.",
      "description_length": 342,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidMaxResultsException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InvalidMaxResultsException` error in AWS CloudTrail. It provides operations for parsing, converting to query format, and serializing to and from JSON. Use this module when interacting with AWS CloudTrail APIs that require handling of invalid max results exceptions.",
      "description_length": 340,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutEventSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for configuring event selectors on a CloudTrail trail, including the trail name and event selector rules. It provides functions to construct, parse, and serialize the configuration for use in API requests. Use this module when setting up or modifying logging policies for AWS CloudTrail events, such as specifying read or write management events.",
      "description_length": 383,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutInsightSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying which CloudTrail insights to log, including the trail name and insight selectors. It provides functions to construct, serialize, and deserialize these specifications for use in API requests. Use this module when configuring CloudTrail to track specific management or data events in AWS accounts.",
      "description_length": 347,
      "index": 60,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Event",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing AWS CloudTrail events, including fields like event ID, name, time, and associated resources. It provides functions to construct, parse, and serialize events to and from XML, JSON, and query formats. Use this module to process and analyze CloudTrail logs, such as tracking user activity or auditing AWS resource changes.",
      "description_length": 373,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidS3BucketNameException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid S3 bucket name exceptions. It provides operations for creating, parsing, and converting exception data to query parameters or JSON format. Use this module when processing AWS CloudTrail errors related to malformed S3 bucket names in API requests or logs.",
      "description_length": 332,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsightSelector",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying insight types in AWS CloudTrail configurations. It includes functions to create, serialize, and parse insight selectors, primarily working with XML and JSON formats. Use this module when configuring or retrieving CloudTrail insights, such as filtering specific types of unusual API activity.",
      "description_length": 343,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientS3BucketPolicyException",
      "library": "aws-cloudtrail",
      "description": "This module defines a placeholder type `t` and associated functions for handling the `InsufficientS3BucketPolicyException` error in AWS CloudTrail. It includes operations for creating, parsing, and converting the exception to query or JSON formats, all functioning as no-ops due to the unit type. It is used specifically for signaling and handling this particular error condition in AWS API interactions.",
      "description_length": 404,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.OrganizationNotInAllFeaturesModeException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type exception used to represent the state of an organization not operating in all features mode. It includes operations to construct, parse, and convert the exception to query or JSON formats. This is used when handling AWS CloudTrail errors related to organization feature limitations.",
      "description_length": 314,
      "index": 65,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceTypeNotSupportedException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing the exception raised when an unsupported resource type is encountered in CloudTrail operations. It includes functions to construct, parse, and convert the exception to common data formats like JSON and AWS query parameters. It is used to handle errors during resource type validation in CloudTrail event processing.",
      "description_length": 369,
      "index": 66,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailNameList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of string-based trail names in AWS CloudTrail operations. It provides functions to convert, parse, and serialize these lists to and from JSON, XML, and query parameters. Use this module when managing multiple trail names in API requests or responses, such as listing or referencing trails in logging configurations.",
      "description_length": 341,
      "index": 67,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.DataResources",
      "library": "aws-cloudtrail",
      "description": "Handles data resource lists in AWS CloudTrail events, providing functions to convert, parse, and serialize data resources to and from XML, JSON, and query formats. Works with lists of `DataResource.t` structures, which represent resource metadata in CloudTrail logs. Useful for processing and inspecting CloudTrail event data during log analysis or auditing workflows.",
      "description_length": 368,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.CreateTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the response from creating an AWS CloudTrail trail, with optional fields for configuration details like S3 bucket name, SNS topic ARN, and logging options. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when handling CloudTrail trail creation responses to access trail metadata and verify logging configuration.",
      "description_length": 443,
      "index": 69,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.NotOrganizationMasterAccountException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception for non-master organization accounts in AWS CloudTrail. It provides operations to construct, parse, and serialize the exception to query parameters or JSON format. Use this module to handle errors related to organization master account validation in CloudTrail service interactions.",
      "description_length": 349,
      "index": 70,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.StartLoggingResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles the serialization and deserialization of the empty response type for a logging start operation. It provides functions to convert unit values to AWS query format, JSON, and back, ensuring correct data representation for API interactions. It is used specifically for processing responses indicating successful initiation of logging actions in a cloud service.",
      "description_length": 377,
      "index": 71,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.GetInsightSelectorsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying a CloudTrail trail name in API requests. It includes functions to construct, serialize, and parse the structure, primarily used when retrieving insight selectors for a specific trail. The module works directly with XML, JSON, and query string formats for request transmission.",
      "description_length": 328,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of AWS CloudTrail resource objects, providing direct conversions to and from XML, JSON, and query formats. It supports parsing resource lists from XML nodes and serializing them for API requests or JSON output. Use this module when processing CloudTrail event data that involves multiple resources, such as logging or analyzing trail activity across different AWS services.",
      "description_length": 399,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.DeleteTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response type for deleting a trail in AWS CloudTrail, representing successful operations with a unit value. It includes functions to construct, parse, and serialize the response in various formats like JSON and AWS Query. Use this module when handling deletion responses from CloudTrail to ensure correct type handling and format compatibility.",
      "description_length": 366,
      "index": 74,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidS3PrefixException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid S3 prefix exceptions. It provides operations for creating, parsing, and converting exception data to query parameters, JSON, and back. Use this when processing AWS CloudTrail events that involve malformed S3 prefixes in event data.",
      "description_length": 309,
      "index": 75,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTokenException",
      "library": "aws-cloudtrail",
      "description": "This module defines a minimal unit type `t` representing an invalid token exception, with operations to construct, parse, and convert values to query parameters, JSON, or from JSON. It primarily handles unit values and interacts with AWS-specific data formats like `Aws.Query.t` and JSON associations. Concrete use cases include handling authentication failures or malformed token responses in AWS service interactions.",
      "description_length": 419,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Resource",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing AWS CloudTrail resources with optional resource type and name fields. It provides functions to construct, parse, and serialize these resources to and from XML, JSON, and query formats. Use this module when handling CloudTrail event data that involves tracking or filtering by specific resource types or names.",
      "description_length": 363,
      "index": 77,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutEventSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response structure for configuring event selectors on a trail, including the trail's ARN and the event selectors applied. It provides functions to construct, parse, and serialize the response for use in API interactions. The module handles XML and JSON input/output formats commonly used in AWS service communications.",
      "description_length": 340,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.S3BucketDoesNotExistException",
      "library": "aws-cloudtrail",
      "description": "This module represents an error condition for a missing S3 bucket in CloudTrail operations. It defines a unit type to model the absence of a bucket, along with functions to construct, parse, and serialize the error in query or JSON formats. It is used when handling or propagating S3 bucket validation failures in CloudTrail service interactions.",
      "description_length": 346,
      "index": 79,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.StopLoggingResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response type for stopping logging operations, where the only value is the unit type. It includes functions to create, parse, and convert the response to query or JSON formats. It is used when handling API responses that indicate successful termination of logging without returning any additional data.",
      "description_length": 324,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.TrailInfo",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for holding information about a CloudTrail trail, including its ARN, name, and home region. It provides functions to construct, parse, and serialize trail data to and from XML, JSON, and query formats. It is used when managing CloudTrail configurations, such as retrieving trail metadata or preparing trail data for API requests.",
      "description_length": 366,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupEventsResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response structure for lookup events in AWS CloudTrail, containing a list of events and an optional next token for pagination. It provides functions to construct, parse, and serialize the response in various formats such as JSON and query parameters. It is used to handle and process event data retrieved from CloudTrail logs, enabling efficient traversal of large result sets.",
      "description_length": 399,
      "index": 82,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidTimeRangeException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid time range exceptions. It provides operations for creating, parsing, and converting the unit value to query parameters, JSON, and back from JSON. It is used to represent and manage errors related to invalid time ranges in API interactions.",
      "description_length": 317,
      "index": 83,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.MaximumNumberOfTrailsExceededException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the exception when the maximum number of trails is exceeded. It provides operations for parsing, converting to query format, serializing to JSON, and deserializing from JSON, all acting on a unit value. Use this module to manage the trail limit exceeded error in API responses and requests.",
      "description_length": 360,
      "index": 84,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTrailsRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for listing AWS CloudTrail trails, containing an optional pagination token. It provides functions to construct, serialize, and deserialize the request for use with AWS API calls. Useful when retrieving a list of trails, especially when paginating through large result sets.",
      "description_length": 313,
      "index": 85,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.CloudTrailARNInvalidException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid CloudTrail ARN exceptions. It includes operations for creating, parsing, and converting exception values to query parameters or JSON format. Use this module when validating or handling ARN-related errors in CloudTrail service interactions.",
      "description_length": 317,
      "index": 86,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ResourceTagList",
      "library": "aws-cloudtrail",
      "description": "This module handles lists of resource tags in AWS CloudTrail by providing serialization, deserialization, and query conversion operations. It works with XML nodes, JSON values, and AWS query types to facilitate tag management during API interactions. Concrete use cases include converting tag lists to HTTP query parameters and parsing tag responses from CloudTrail events.",
      "description_length": 373,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PublicKey",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing a public key with optional fields for the key value, validity period, and fingerprint. It provides functions to construct, parse, and convert the structure to and from XML, JSON, and query formats. Concrete use cases include handling public key information in AWS CloudTrail logs, such as validating key timestamps or extracting key metadata from API responses.",
      "description_length": 411,
      "index": 88,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidEventCategoryException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling invalid event category exceptions. It provides operations to convert values to query parameters, JSON, and back from JSON, while parsing always returns a unit value. It is used to represent and serialize errors related to unsupported event categories in event processing workflows.",
      "description_length": 351,
      "index": 89,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.Tag",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for representing tags in AWS CloudTrail, consisting of a key-value pair where the value is optional. It provides functions to construct, parse, and convert tags to and from JSON and query formats. Use this module when managing resource tags in CloudTrail, such as attaching metadata to trails or events for organizational or billing purposes.",
      "description_length": 379,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ExcludeManagementEventSources",
      "library": "aws-cloudtrail",
      "description": "This module defines a list of string-based management event sources to exclude from CloudTrail logging. It provides functions to convert, parse, and serialize these exclusion lists to and from JSON, query parameters, and XML formats. Use this module when configuring CloudTrail trails to filter out specific service events like \"Lambda\" or \"DynamoDB\".",
      "description_length": 351,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientEncryptionPolicyException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InsufficientEncryptionPolicyException` case. It provides operations for parsing, converting to query format, and serializing to and from JSON. Use this module when working with AWS CloudTrail exceptions related to encryption policy validation.",
      "description_length": 318,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.KmsKeyNotFoundException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling KMS key not found errors. It includes operations for creating, parsing, and converting error data to query parameters, JSON, and back. Use this module when interacting with AWS CloudTrail APIs to manage missing KMS key scenarios.",
      "description_length": 299,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientDependencyServiceAccessPermissionException",
      "library": "aws-cloudtrail",
      "description": "This module defines a placeholder type `t` and associated functions for handling errors related to missing service access permissions in dependency services. It includes operations for creating, parsing, and converting error values to query parameters, JSON, and back. Concrete use cases include error handling and API response processing when interacting with AWS services that require specific access permissions.",
      "description_length": 415,
      "index": 94,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.InsufficientSnsTopicPolicyException",
      "library": "aws-cloudtrail",
      "description": "This module defines a single type `t` representing an empty value, used to model exceptions related to insufficient SNS topic policies. It includes operations to construct, parse, and convert the value to common formats like JSON and AWS query parameters. This type is used specifically to handle error responses when SNS topic policies do not grant sufficient permissions in AWS CloudTrail operations.",
      "description_length": 402,
      "index": 95,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.InvalidCloudWatchLogsRoleArnException",
      "library": "aws-cloudtrail",
      "description": "This module defines a unit type and associated functions for handling the `InvalidCloudWatchLogsRoleArnException` error. It provides operations to create, parse, and serialize the exception into query parameters or JSON format. Use this module when interacting with AWS CloudTrail APIs to handle invalid role ARN errors in CloudWatch Logs configurations.",
      "description_length": 354,
      "index": 96,
      "embedding_norm": 1.0000001192092896
    },
    {
      "module_path": "Aws_cloudtrail.Types.UpdateTrailResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing the response from updating an AWS CloudTrail trail, with fields for configuration details like S3 bucket name, SNS topic ARN, and logging options. It provides functions to construct, parse, and serialize the structure to and from XML, JSON, and query formats. Use this module when handling CloudTrail trail updates to manage trail configuration responses programmatically.",
      "description_length": 422,
      "index": 97,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListPublicKeysRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a request structure for listing public keys with optional start and end times and a next token for pagination. It provides functions to construct, parse, and convert the request to query or JSON formats. It is used to interact with AWS CloudTrail's public key listing API, enabling retrieval of public keys within a specified time range or across multiple pages.",
      "description_length": 382,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Trail",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure representing an AWS CloudTrail trail configuration with optional fields for storage, logging, and notification settings. It provides functions to construct, parse, and serialize trail data to and from XML, JSON, and query formats. Concrete use cases include configuring trail settings for event logging, validating trail configurations, and integrating trail data with AWS services like S3, SNS, and CloudWatch Logs.",
      "description_length": 453,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.EventSelector",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying event selection criteria in AWS CloudTrail configurations, including read/write type, management event inclusion, data resource filters, and exclusion of specific management event sources. It provides functions to construct, serialize, and deserialize these criteria for use in API requests. Concrete use cases include configuring trail event logging with precise filtering and handling event data in JSON or XML formats.",
      "description_length": 473,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupAttribute",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for specifying lookup attributes used in CloudTrail event filtering. It includes functions to create, serialize, and parse these attributes using JSON or query parameters. Concrete use cases include building and processing event lookup requests based on specific attribute keys and values, such as event source or resource type.",
      "description_length": 365,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.Trails",
      "library": "aws-cloudtrail",
      "description": "This module handles the manipulation and conversion of CloudTrail trail data. It provides functions to parse XML into trail information, convert trails to query parameters or JSON, and reconstruct trails from JSON. It works directly with lists of `TrailInfo.t` structures, enabling interactions with AWS CloudTrail APIs and data serialization tasks.",
      "description_length": 349,
      "index": 102,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.LookupAttributesList",
      "library": "aws-cloudtrail",
      "description": "This module handles list operations for lookup attributes in AWS CloudTrail, providing functions to convert, parse, and serialize data. It works with lists of `LookupAttribute.t` records, supporting query parameters, XML parsing, and JSON serialization. Use this module when interacting with CloudTrail's lookup attributes in API requests or log analysis workflows.",
      "description_length": 365,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.ListTagsResponse",
      "library": "aws-cloudtrail",
      "description": "This module defines a response structure for listing tags on AWS CloudTrail resources, containing a list of tags and an optional pagination token. It provides functions to construct, parse, and serialize the response in various formats including JSON and query parameters. It is used to handle tag metadata when interacting with CloudTrail resources in AWS.",
      "description_length": 357,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types.PutInsightSelectorsResponse",
      "library": "aws-cloudtrail",
      "description": "This module handles responses for configuring insight selectors in a cloudtrail service. It provides functions to create, parse, and serialize response data containing the trail ARN and insight selectors. Use this module when managing cloudtrail insights configuration via API calls, allowing for structured data exchange in XML, JSON, or query formats.",
      "description_length": 353,
      "index": 105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.StopLoggingRequest",
      "library": "aws-cloudtrail",
      "description": "This module defines a data structure for stopping logging in a cloud trail service, specifically containing a `name` field. It provides functions to construct, serialize, and deserialize this structure for use in API requests. Use this module when interacting with cloud trail logging operations that require stopping logging by trail name.",
      "description_length": 340,
      "index": 106,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Types.OrganizationsNotInUseException",
      "library": "aws-cloudtrail",
      "description": "This module defines a singleton type `t` representing an exception state where Organizations is not in use. It provides functions to construct, parse, and convert the exception to query or JSON formats, typically used in handling AWS CloudTrail API errors. The module is used to signal and manage error conditions related to Organizations service availability in AWS CloudTrail operations.",
      "description_length": 389,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.AddTags",
      "library": "aws-cloudtrail",
      "description": "This module handles adding tags to AWS CloudTrail resources by defining the request and response types for the `AddTags` operation. It provides functions to convert native input into an HTTP request, parse HTTP responses into unit output or errors, and decode AWS XML errors into typed errors specific to the operation. It works directly with CloudTrail ARNs and tag lists through the `AddTagsRequest` structure.",
      "description_length": 412,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.ListPublicKeys",
      "library": "aws-cloudtrail",
      "description": "This module handles listing public keys from AWS CloudTrail by converting requests to HTTP format and parsing responses. It works with input and output types defined in `Aws_cloudtrail.Types` for structured interaction with AWS. Use this module to retrieve public keys for verifying log file integrity or managing encryption configurations directly from CloudTrail.",
      "description_length": 365,
      "index": 109,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.StartLogging",
      "library": "aws-cloudtrail",
      "description": "This module handles starting logging for a trail in AWS CloudTrail by defining the request structure, converting requests to HTTP format, and parsing responses or errors. It works with the `StartLoggingRequest` type to specify which trail to start logging and interacts with HTTP requests and responses directly. Concrete use cases include enabling logging for a specific trail name and handling success or failure responses from the AWS CloudTrail API.",
      "description_length": 453,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.PutInsightSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles the configuration of CloudTrail insight selectors by defining the request and response types for enabling or modifying insights on a trail. It works with structured data types representing insight selector configurations and AWS error responses. Concrete use cases include specifying which management events or data events to log for insights and handling the resulting service responses or errors.",
      "description_length": 418,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.GetTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving AWS CloudTrail trail details by defining the request and response types for the `GetTrail` API call. It provides functions to convert requests to HTTP format and parse HTTP responses into results or errors, specifically working with CloudTrail trail identifiers. Use this module to fetch configuration details of a specific CloudTrail trail by its name or ARN.",
      "description_length": 391,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.Types",
      "library": "aws-cloudtrail",
      "description": "This module provides serialization and deserialization operations for AWS CloudTrail data types, enabling conversion between OCaml structures and JSON, XML, or AWS query formats. It works with tags, resources, event selectors, cryptographic keys, trail configurations, and API request/response types to support tasks like filtering events by resource attributes, managing trail state, and handling service-specific errors during CloudTrail interactions. Key use cases include configuring trails, processing logs, and robustly handling API exceptions such as invalid parameters or missing resources.",
      "description_length": 598,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.PutEventSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles the configuration of event selectors for logging AWS CloudTrail events by defining the request and response types for specifying data event sources and management events. It works with CloudTrail's event selector types to control which events are logged, including data events for S3 objects and Lambda functions. Concrete use cases include setting up trail logging for specific S3 buckets or enabling management event logging for compliance and auditing.",
      "description_length": 475,
      "index": 114,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.ListTrails",
      "library": "aws-cloudtrail",
      "description": "This module handles listing AWS CloudTrail trails by converting input requests to HTTP format and parsing responses. It works with `ListTrailsRequest` and `ListTrailsResponse` types, along with internal error types for handling failures. It is used to interact directly with the CloudTrail API, enabling programmatic retrieval of trail configurations and handling of API-specific errors.",
      "description_length": 387,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.CreateTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles the creation of AWS CloudTrail trails by defining the request and response types, along with functions to serialize requests to HTTP and deserialize HTTP responses. It works directly with `CreateTrailRequest` and `CreateTrailResponse` data structures, encoding them into HTTP queries and decoding responses into structured results or errors. Concrete use cases include setting up trail configurations, enabling logging, and integrating with AWS services for audit and compliance monitoring.",
      "description_length": 510,
      "index": 116,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.LookupEvents",
      "library": "aws-cloudtrail",
      "description": "This module handles querying AWS CloudTrail for events by converting input requests into properly signed HTTP queries and parsing responses into structured outputs or errors. It works with `LookupEventsRequest` and `LookupEventsResponse` types to manage event lookup parameters and results, including handling AWS-specific error responses. It is used to retrieve CloudTrail event data for auditing and monitoring purposes, such as tracking user activity or API changes in AWS services like S3 or EC2.",
      "description_length": 500,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.StopLogging",
      "library": "aws-cloudtrail",
      "description": "This module handles stopping logging for AWS CloudTrail by providing functions to construct and interpret HTTP requests and responses. It works with the `StopLoggingRequest` type as input and returns no output on success, using internal CloudTrail error types for failure cases. It is used to disable logging on a specific CloudTrail trail, typically when managing audit trails or temporarily halting log collection.",
      "description_length": 416,
      "index": 118,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.ListTags",
      "library": "aws-cloudtrail",
      "description": "This module handles listing tags for AWS CloudTrail resources by converting input requests into properly signed HTTP queries and parsing responses or errors from the service. It works with CloudTrail's specific request and response types, including ARNs for which tags are listed. Use this module to retrieve tag metadata for CloudTrail trails or other supported resources in AWS.",
      "description_length": 380,
      "index": 119,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.UpdateTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles updating AWS CloudTrail trails by providing functions to construct HTTP requests and parse responses for the `UpdateTrail` API operation. It works with input and output types defined in `Aws_cloudtrail.Types`, specifically `UpdateTrailRequest.t` and `UpdateTrailResponse.t`, along with error handling via `Errors_internal.t`. Use this module to programmatically modify trail configurations, such as adjusting logging settings or changing S3 bucket targets, directly through the AWS CloudTrail API.",
      "description_length": 517,
      "index": 120,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.Errors_internal",
      "library": "aws-cloudtrail",
      "description": "This module defines a comprehensive set of error types specific to AWS CloudTrail operations, including authentication failures, invalid parameters, resource not found, and service unavailable errors. It provides functions to convert errors to HTTP status codes and strings, and to parse error strings back into typed values. These capabilities are used to handle and respond to CloudTrail API errors in a structured and consistent manner.",
      "description_length": 439,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.GetTrailStatus",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving and interpreting the status of an AWS CloudTrail trail. It provides functions to construct HTTP requests for fetching trail status, parse responses into structured data, and decode potential errors. It works directly with trail status request and response types, translating them to and from HTTP representations.",
      "description_length": 344,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.DescribeTrails",
      "library": "aws-cloudtrail",
      "description": "This module handles describing AWS CloudTrail trails by converting input requests into HTTP calls and parsing responses. It works with `DescribeTrailsRequest` and `DescribeTrailsResponse` types, along with internal error types for handling failure cases. It is used to retrieve information about existing CloudTrail trails, such as their configuration and status, by making signed HTTP requests to the AWS CloudTrail service endpoint.",
      "description_length": 434,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.DeleteTrail",
      "library": "aws-cloudtrail",
      "description": "This module handles the deletion of AWS CloudTrail trails by converting deletion requests into properly signed HTTP requests and processing responses. It works with the `DeleteTrailRequest` type for inputs and returns no output on success, using internal error types for failure scenarios. Concrete use cases include removing trail configurations and ensuring proper AWS service endpoint communication during trail management.",
      "description_length": 426,
      "index": 124,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.RemoveTags",
      "library": "aws-cloudtrail",
      "description": "This module handles the removal of tags from AWS CloudTrail resources by converting native input into HTTP requests and parsing responses. It works with `RemoveTagsRequest` input and returns no output on success, using standard AWS error types for failures. Concrete use cases include untagging CloudTrail trails or other supported resources via AWS API calls.",
      "description_length": 360,
      "index": 125,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail.GetInsightSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving insight selectors from AWS CloudTrail by defining input and output types for the operation, along with functions to convert between HTTP requests and native OCaml types. It works directly with CloudTrail's GetInsightSelectors request and response structures, encoding and decoding them for HTTP transmission. Concrete use cases include querying which insight selectors are currently configured for a trail and integrating with AWS SDK workflows to manage CloudTrail insights programmatically.",
      "description_length": 523,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_cloudtrail.GetEventSelectors",
      "library": "aws-cloudtrail",
      "description": "This module handles retrieving event selectors for AWS CloudTrail trails by defining the input and output types for the operation, along with functions to convert between native OCaml types and HTTP requests/responses. It works directly with AWS CloudTrail event selector configurations, allowing precise control over logging settings for data and management events. Concrete use cases include querying event selector settings to audit or modify logging behavior on specific trails.",
      "description_length": 482,
      "index": 127,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_cloudtrail",
      "library": "aws-cloudtrail",
      "description": "This module provides operations for managing AWS CloudTrail trails and related configurations through a set of structured API clients. It supports creating, updating, starting, stopping, and deleting trails, as well as managing tags, event selectors, and insight selectors. The module works directly with AWS CloudTrail request and response types, handling serialization to HTTP and error decoding for precise control over audit logging and compliance workflows.",
      "description_length": 462,
      "index": 128,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 129,
    "meaningful_modules": 129,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 598,
    "min_description_length": 262,
    "avg_description_length": 373.90697674418607,
    "embedding_file_size_mb": 1.8694000244140625
  }
}