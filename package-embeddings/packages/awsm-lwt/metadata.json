{
  "package": "awsm-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-07-15T23:05:15.171703",
  "modules": [
    {
      "module_path": "Awsm_lwt.Http.Io",
      "library": "awsm-lwt",
      "description": "This module provides direct support for building and executing HTTP requests using Lwt for asynchronous operations. It works with Lwt threads, HTTP methods, URIs, and streams to handle responses and errors. Concrete use cases include making authenticated API calls, streaming HTTP responses, and composing asynchronous HTTP logic with custom error handling.",
      "description_length": 357,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Awsm_lwt.Import.Cohttp",
      "library": "awsm-lwt",
      "description": "This module translates between HTTP types in Cohttp and Awsm.Http. It converts request methods, headers, and response versions, statuses, and headers between the two libraries. Useful when integrating Lwt-based HTTP services using both Cohttp and Awsm.Http for handling requests and responses.",
      "description_length": 293,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt.Cfg",
      "library": "awsm-lwt",
      "description": "Handles AWS configuration retrieval with customizable parameters like profile, credentials, and region. Works with `Awsm.Cfg.t` and `Awsm.Region.t` to construct and return AWS configuration values. Useful for initializing AWS clients with resolved credentials and regional settings in Lwt-based applications.",
      "description_length": 308,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt.Http",
      "library": "awsm-lwt",
      "description": "This module enables building and executing HTTP requests with Lwt-based asynchronous operations, supporting standard HTTP methods, URIs, and streaming. It provides types for requests, responses, and errors, along with operations for sending requests, handling streams, and composing asynchronous workflows. You can use it to make authenticated API calls, stream large HTTP responses efficiently, or integrate custom error handling into HTTP pipelines. Example: sending a GET request to a REST API and streaming the response body for processing.",
      "description_length": 544,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Awsm_lwt.Import",
      "library": "awsm-lwt",
      "description": "This module reads file contents asynchronously using Lwt and provides direct access to HTTP client operations through the Cohttp and Cohttp_async submodules. It works with Lwt threads and string data types, making it suitable for loading configuration files or fetching remote resources in concurrent applications. The first child module translates HTTP types between Cohttp and Awsm.Http, enabling interoperability for request and response handling. Specific uses include converting request methods and headers during HTTP service integration or fetching remote JSON configurations asynchronously.",
      "description_length": 598,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt",
      "library": "awsm-lwt",
      "description": "This module provides AWS configuration handling, HTTP request execution, and asynchronous file reading for Lwt-based applications. It supports constructing AWS configurations with customizable credentials and regions, making authenticated HTTP requests with streaming support, and loading files or remote resources asynchronously. Key data types include `Awsm.Cfg.t`, `Awsm.Region.t`, and Lwt threads, with operations for request/response handling, error composition, and HTTP type conversion. Example uses include initializing AWS clients, streaming large API responses, and fetching remote JSON configurations.",
      "description_length": 612,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 612,
    "min_description_length": 293,
    "avg_description_length": 452.0,
    "embedding_file_size_mb": 0.022222518920898438
  }
}