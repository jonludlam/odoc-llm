{
  "package": "awsm-lwt",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:56:05.063945",
  "modules": [
    {
      "module_path": "Awsm_lwt.Http.Io",
      "library": "awsm-lwt",
      "description": "This module provides functions to bridge Lwt-based asynchronous operations with HTTP client functionality, enabling direct execution of HTTP requests and handling of streaming responses. It works with Lwt threads, HTTP methods, request/response types, and URIs, offering concrete tools for making AWS service calls. Use it to implement asynchronous HTTP clients that integrate with Lwt, handle response streams, and execute requests against configured endpoints.",
      "description_length": 462,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt.Import.Cohttp",
      "library": "awsm-lwt",
      "description": "This module converts between HTTP types in Awsm and Cohttp. It translates request methods, headers, and response versions and statuses between the two libraries. Use it to integrate Awsm HTTP clients or servers with Cohttp-based services or middleware.",
      "description_length": 252,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt.Import",
      "library": "awsm-lwt",
      "description": "Reads file contents asynchronously with Lwt and translates HTTP types between Awsm and Cohttp for client-server integration. Works with Lwt threads, file names, and HTTP request/response structures. Use to load static files in Lwt-based applications or bridge HTTP handling between Awsm and Cohttp services.",
      "description_length": 307,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt.Http",
      "library": "awsm-lwt",
      "description": "This module provides functions for executing HTTP requests and handling responses asynchronously using Lwt. It works with HTTP methods, URIs, headers, and streaming response bodies, offering direct integration with Lwt threads for non-blocking I/O. Use it to implement AWS service clients that perform authenticated HTTP calls and process large or streaming responses efficiently.",
      "description_length": 380,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt.Cfg",
      "library": "awsm-lwt",
      "description": "This module loads AWS configuration values using a provider chain that checks environment variables, configuration files, and optional explicit parameters. It produces a configuration value containing credentials, region, and output format, suitable for initializing AWS service clients. Use cases include authenticating AWS API requests and setting up regional and output preferences for command-line tools or server applications.",
      "description_length": 431,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Awsm_lwt",
      "library": "awsm-lwt",
      "description": "This module provides AWS configuration loading, asynchronous HTTP request execution, and file import functionality. It works with AWS configuration values, HTTP methods and responses, and Lwt threads. Use it to authenticate AWS API calls, send non-blocking HTTP requests with streaming bodies, and load files or translate HTTP types in Lwt-based applications.",
      "description_length": 359,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 462,
    "min_description_length": 252,
    "avg_description_length": 365.1666666666667,
    "embedding_file_size_mb": 0.0872945785522461
  }
}