{
  "package": "zdd",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T23:19:08.497807",
  "modules": [
    {
      "module_path": "Zdd.Make_Zdd",
      "library": "zdd",
      "description": "This module provides operations for constructing and manipulating families of finite sets encoded as Zero-Suppressed Decision Diagrams (ZDDs), supporting set-theoretic transformations (union, intersection, difference), cardinality analysis, membership queries, and logical substitutions. It works with elements of type `elt` and ZDDs (`t`) representing boolean expressions in disjunctive normal form, enabling efficient traversal, filtering by minimality/maximality, and closure operations. Specific use cases include combinatorial optimization, symbolic computation, and formal verification tasks requiring compact representations of set families with structural constraints.",
      "description_length": 676,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zdd.UpSet",
      "library": "zdd",
      "description": "This module implements upward closed set families using ZDDs, offering operations to construct and manipulate these families through set-theoretic operations (union, intersection, subset checks), element traversal, and minimal set enumeration. It works with ZDD-based representations of upward closed families and their minimal elements, which are stored as sorted lists. Specific use cases include combinatorial optimization and formal verification tasks where efficient manipulation of upward closed structures and their minimal generators is required.",
      "description_length": 554,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zdd.Make_ZddZE",
      "library": "zdd",
      "description": "This structure provides combinatorial set family manipulation through core operations like creation, cardinality computation, and algebraic set transformations (union, intersection, difference) alongside advanced constrained joins. It operates on zero-suppressed decision diagrams (`t`) parameterized by element types (`elt`), supporting extremal set extraction (minima, maxima), closure operations, and graph-based visualizations. Designed for applications in combinatorial optimization and formal verification where compact representation of sparse set families enables efficient algebraic and structural analysis.",
      "description_length": 616,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zdd.DownSet",
      "library": "zdd",
      "description": "This module supports manipulation of downward-closed families of finite sets (downsets) encoded as ZDDs, offering operations like subset inclusion checks, union, intersection, and closure via join/meet. It provides iteration over individual elements and maximal sets, substitution, and folding over maximal sets represented as sorted element lists. These capabilities are particularly useful in combinatorial optimization, formal verification, and probabilistic modeling where efficient subset-closed set family operations are required.",
      "description_length": 536,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zdd.Make",
      "library": "zdd",
      "description": "This module provides operations for constructing and manipulating ZDDs (Zero-suppressed Binary Decision Diagrams) to represent families of finite sets, supporting set-theoretic operations like union, intersection, and difference, as well as cardinality computations and structural queries. It works with a parameterized type `t` representing a family of sets over elements of type `elt`, leveraging symbolic set manipulation and combinatorial algebra. Typical use cases include formal verification, combinatorial optimization, and symbolic computation where efficient representation and transformation of sparse set families are required.",
      "description_length": 638,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zdd",
      "library": "zdd",
      "description": "This module implements families of finite sets using Zero-Suppressed Binary Decision Diagrams (ZDDs), providing core operations such as union, intersection, difference, cardinality computation, and membership queries. It works with parameterized types representing elements and ZDDs encoding boolean expressions in disjunctive normal form, supporting extremal set extraction and closure operations. It is used in combinatorial optimization, symbolic computation, and formal verification for efficiently representing and transforming sparse set families under structural constraints.",
      "description_length": 582,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 676,
    "min_description_length": 536,
    "avg_description_length": 600.3333333333334,
    "embedding_file_size_mb": 0.08735275268554688
  }
}