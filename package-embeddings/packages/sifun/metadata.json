{
  "package": "sifun",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 1,
  "creation_timestamp": "2025-06-18T16:27:01.185231",
  "modules": [
    {
      "module_path": "sifun",
      "description": "Provides type inference and checking for lambda expressions using Hindley\u2013Milner and System F-style type application, with support for polymorphic function definitions and type annotations. Operates on abstract syntax trees representing lambda terms, type annotations, and type constraints. Used to validate and interpret programs written in a subset of OCaml with explicit type abstractions and applications.",
      "description_length": 409,
      "index": 0,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 1,
    "meaningful_modules": 1,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 409,
    "min_description_length": 409,
    "avg_description_length": 409.0,
    "embedding_file_size_mb": 0.004071235656738281
  }
}