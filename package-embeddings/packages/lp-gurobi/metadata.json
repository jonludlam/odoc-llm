{
  "package": "lp-gurobi",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:04:49.660104",
  "modules": [
    {
      "module_path": "Lp_grb.Stat",
      "library": "lp-gurobi",
      "description": "This module defines status codes returned by the solver after model processing. It includes conversions between integer codes and descriptive string representations. Use this module to interpret the outcome of optimization runs, such as determining if a solution is optimal, infeasible, or unbounded.",
      "description_length": 300,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lp_grb.Vt",
      "library": "lp-gurobi",
      "description": "This module defines variable types for optimization models, including continuous, binary, integer, semi-continuous, and semi-integer types. It provides conversions between these types and their character representations, along with a Ctypes binding for interfacing with the Gurobi C API. Use this module to specify variable domains when building mixed-integer programming problems.",
      "description_length": 381,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Lp_grb.Cs",
      "library": "lp-gurobi",
      "description": "This module defines constraint sense types (`LT`, `GT`, `EQ`) for linear programming constraints. It provides conversions between these types and characters, along with a Ctypes type definition for interfacing with Gurobi's C API. Use this module when specifying constraint senses in models that require direct interaction with Gurobi's constraint handling.",
      "description_length": 357,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lp_gurobi",
      "library": "lp-gurobi",
      "description": "This module provides a function to solve linear programming problems using the Gurobi solver, returning the objective value and variable assignments. It works with problem definitions represented by the `Lp.Problem.t` type. A concrete use case is optimizing resource allocation in operations research scenarios.",
      "description_length": 311,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lp_grb",
      "library": "lp-gurobi",
      "description": "This module enables creating, configuring, and solving optimization models using Gurobi's C API, supporting linear and quadratic constraints, variable management, and solution retrieval. It provides core operations for model construction, parameter tuning, and serialization, working directly with Gurobi's environment and model structures. The module includes submodules for handling solver statuses, variable types (continuous, binary, integer), and constraint senses (`LT`, `GT`, `EQ`), allowing precise control over optimization problems. Use it to build mixed-integer programs, inspect solver outcomes, or integrate Gurobi into OCaml-based optimization workflows.",
      "description_length": 668,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 668,
    "min_description_length": 300,
    "avg_description_length": 403.4,
    "embedding_file_size_mb": 0.018594741821289062
  }
}