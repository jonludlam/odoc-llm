{
  "package": "gluten-lwt-unix",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 8,
  "creation_timestamp": "2025-06-18T16:31:17.713985",
  "modules": [
    {
      "module_path": "Gluten_lwt_unix.Server.TLS",
      "description": "Handles TLS-secured network connections by creating upgradable and standard connection handlers that manage protocol initialization and request processing. Operates with socket and address types to establish secure communication channels. Used to set up HTTPS servers with custom protocols and certificate-based authentication.",
      "description_length": 327,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_lwt_unix.Server.SSL",
      "description": "Handles secure socket connections with support for protocol upgrades and ALPN. Operates on Lwt-based sockets and Unix socket addresses, providing low-level control over SSL/TLS negotiation and request processing. Used to establish encrypted communication channels with custom protocol handling and certificate-based authentication.",
      "description_length": 331,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_lwt_unix.Client.TLS",
      "description": "Handles TLS encryption and protocol upgrades for network sockets, supporting custom read buffer sizes and protocol configurations. Operates on socket descriptors and opaque TLS state objects, enabling secure communication streams. Used to establish encrypted connections, upgrade existing sockets to TLS, and manage connection termination and status checks.",
      "description_length": 357,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gluten_lwt_unix.Client.SSL",
      "description": "Provides functions to create and manage secure socket connections, including upgrading to SSL, shutting down the connection, and checking closure status. Operates on socket descriptors and SSL session objects, supporting protocol-specific configurations. Used to establish encrypted communication channels with custom protocol negotiation and secure termination.",
      "description_length": 362,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_lwt_unix.Server",
      "description": "Manages secure, protocol-aware network communication through TLS and ALPN, enabling custom protocol handling and certificate-based authentication. Operates on Lwt sockets and Unix addresses, supporting protocol upgrades and low-level SSL/TLS control. Processes requests by initializing secure channels and handling encrypted data streams. Can be used to build HTTPS servers, implement custom encrypted protocols, or manage secure Unix socket communications.",
      "description_length": 457,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Gluten_lwt_unix.Client",
      "description": "Manages secure network communication through TLS encryption, protocol upgrades, and connection control. Operates on socket descriptors and TLS/SSL state objects, supporting custom buffer sizes and protocol configurations. Enables establishing encrypted connections, upgrading unsecured sockets, and checking or terminating sessions. Examples include securing a TCP socket, negotiating TLS protocols, and safely closing encrypted channels.",
      "description_length": 438,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "gluten-lwt-unix",
      "description": "Provides functions for managing protocol state transitions and handling protocol upgrades in network connections, including support for HTTP/1.1 to Websocket and h2c upgrades. Operates on connection state records and protocol-specific event streams. Used to implement protocol negotiation and transition logic in network applications.",
      "description_length": 334,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gluten_lwt_unix",
      "description": "Provides secure, protocol-aware network communication using TLS and ALPN, operating on Lwt sockets and Unix addresses with support for custom protocol handling and certificate-based authentication. Offers low-level control over SSL/TLS states, buffer sizes, and connection upgrades, enabling tasks like establishing encrypted TCP connections, negotiating protocol versions, and managing session termination. Processes encrypted data streams by initializing secure channels and handling protocol-specific logic. Examples include building HTTPS servers, implementing custom encrypted protocols, and securing Unix socket communications.",
      "description_length": 633,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 633,
    "min_description_length": 327,
    "avg_description_length": 404.875,
    "embedding_file_size_mb": 0.029474258422851562
  }
}