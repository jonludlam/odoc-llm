{
  "package": "xkbcommon",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:01:00.868163",
  "modules": [
    {
      "module_path": "Xkbcommon.Context",
      "library": "xkbcommon",
      "description": "This module manages the creation and lifecycle of XKB context objects, which are used to handle keyboard input configurations. It initializes and maintains the internal state required for processing keyboard layouts and keymaps. Concrete use cases include setting up the environment for parsing keymaps or tracking keyboard layout changes in graphical applications.",
      "description_length": 365,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Xkbcommon.State",
      "library": "xkbcommon",
      "description": "This module tracks the state of a keyboard, including key presses, modifier keys, and layout groups. It provides functions to retrieve keysyms and UTF-8 characters for pressed keys, check modifier status, and update the internal state based on key events or modifier masks. Use it to handle keyboard input and translation in applications like text editors or terminal emulators.",
      "description_length": 378,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Xkbcommon.Keysym",
      "library": "xkbcommon",
      "description": "This module defines an enumerated type `t` representing XKB key symbols, including standard keyboard keys, Unicode characters, and special function keys. It provides functions to convert between integer values and key symbols, as well as retrieving and matching key symbol names. Use cases include handling keyboard input in graphical applications, mapping key events to actions, and configuring keyboard layouts.",
      "description_length": 413,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Xkbcommon.Keycode",
      "library": "xkbcommon",
      "description": "This module provides functions for working with XKB keycodes, which are represented as 32-bit integers. It includes operations for converting keycodes to and from strings, as well as checking whether a keycode is within valid bounds. Use cases include handling keyboard input in low-level graphics or windowing applications where direct XKB integration is required.",
      "description_length": 365,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Xkbcommon.Mod",
      "library": "xkbcommon",
      "description": "This module provides functions for working with XKB modifier masks, including combining, comparing, and converting modifier sets. It operates on the `t` type, which represents a bitmask of keyboard modifiers. Concrete use cases include handling keyboard shortcuts and determining active modifiers in X11 applications.",
      "description_length": 317,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Xkbcommon.Keymap",
      "library": "xkbcommon",
      "description": "This module manages keymap configurations for keyboard input handling. It provides functions to load keymaps from file descriptors, check key repeat behavior, retrieve and resolve key names, and obtain modifier indices. Use cases include configuring keyboard layouts in graphical applications or input systems that require low-level key handling.",
      "description_length": 346,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Xkbcommon",
      "library": "xkbcommon",
      "description": "This module provides low-level handling of XKB keycodes, key symbols, and keyboard state management. It includes functions for converting keycodes to keysyms, managing modifier masks, and tracking keyboard layouts and groups. Use it to implement custom keyboard input handling in graphical applications, terminal emulators, or windowing systems requiring direct XKB integration.",
      "description_length": 378,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 413,
    "min_description_length": 317,
    "avg_description_length": 366.0,
    "embedding_file_size_mb": 0.10185527801513672
  }
}