{
  "package": "process",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:28:33.653354",
  "modules": [
    {
      "module_path": "Process.Signal",
      "description": "Converts integers to signal representations and formats signals as strings. Works with an abstract type representing signal values. Used to generate human-readable representations of system signals in logging and error reporting.",
      "description_length": 229,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Process.Exit",
      "description": "Converts Unix process statuses to a custom type and provides string representations for both the status and error values. Works with Unix process status data and an error record type containing exit code and signal information. Used to format process termination details for logging or user feedback.",
      "description_length": 300,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Process.Output",
      "description": "Provides functions to format and serialize structured data into human-readable strings, including pretty-printing and JSON serialization. Works with custom data types defined as records and variants, supporting nested structures. Used to generate debug logs and API response outputs in a consistent format.",
      "description_length": 306,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "process",
      "description": "Processes and manages asynchronous tasks with non-blocking I/O, offering start, monitor, and terminate operations. It works with process identifiers, event loops, and status tracking structures. Used to handle background logging, system command execution, and real-time data processing pipelines.",
      "description_length": 296,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Process",
      "description": "Processes a command with optional stdin and exit status handling, returning output as a structured result. Operates on strings, byte sequences, and lists to manage command execution and output retrieval. Used to capture and process command-line tool outputs in asynchronous workflows.",
      "description_length": 284,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 306,
    "min_description_length": 229,
    "avg_description_length": 283.0,
    "embedding_file_size_mb": 0.018583297729492188
  }
}