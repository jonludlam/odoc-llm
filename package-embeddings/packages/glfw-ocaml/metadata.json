{
  "package": "glfw-ocaml",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:57:07.970726",
  "modules": [
    {
      "module_path": "GLFW.GammaRamp",
      "library": "glfw-ocaml",
      "description": "This module defines a gamma ramp structure composed of red, green, and blue intensity channels, each represented as a 1D unsigned 16-bit big array. It provides functions to create a gamma ramp from existing channels or to initialize one with a specified size. This structure is used to control the color output of a monitor by setting custom gamma correction values for each color channel.",
      "description_length": 389,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GLFW.WindowUpdateableAttribute",
      "library": "glfw-ocaml",
      "description": "This module manages window attributes that can be updated dynamically, such as size, position, and visibility. It operates on window objects, applying changes in a controlled sequence to ensure consistency. Use it to modify window state in response to user input or application events without reallocating the window.",
      "description_length": 317,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GLFW.A",
      "library": "glfw-ocaml",
      "description": "This module defines window hints and attributes for configuring and querying window properties in the GLFW library. It supports operations like setting hints for window creation, retrieving attribute values, and modifying attributes post-creation, working with data types such as boolean flags, integers, and specific enums like `opengl_profile`. Concrete use cases include disabling window resizing, specifying OpenGL profiles, setting refresh rates, and checking whether a window is hovered.",
      "description_length": 493,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GLFW.Image",
      "library": "glfw-ocaml",
      "description": "Handles image data for custom cursors and window icons with pixel-level manipulation. Works with raw pixel data as bytes, along with width and height dimensions. Used to load or generate images for GUI elements like cursors and window icons.",
      "description_length": 241,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GLFW.WindowHint",
      "library": "glfw-ocaml",
      "description": "This module sets window creation hints for OpenGL context and window behavior, such as version, profile, and visibility. It works with integer and boolean values to configure options before creating a window. Use it to enforce specific OpenGL versions or enable features like transparent frames.",
      "description_length": 295,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "GLFW.WindowAttribute",
      "library": "glfw-ocaml",
      "description": "This module retrieves window-related attributes such as size, position, and state in an OCaml binding for GLFW 3.3. It operates on window objects, returning concrete values like integers for dimensions or boolean flags for window modes. Use it to query active window properties for rendering or UI adjustments.",
      "description_length": 310,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 493,
    "min_description_length": 241,
    "avg_description_length": 340.8333333333333,
    "embedding_file_size_mb": 0.08734798431396484
  }
}