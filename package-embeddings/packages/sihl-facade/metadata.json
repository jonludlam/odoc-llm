{
  "package": "sihl-facade",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 13,
  "creation_timestamp": "2025-06-18T16:33:04.324119",
  "modules": [
    {
      "module_path": "Sihl_facade.Email",
      "description": "Converts email data to Sexp and Yojson formats, parses from Yojson, and pretty-prints email structures. Manages email creation with text, HTML, and headers, and supports in-memory email interception for testing. Sends individual or bulk emails through an asynchronous transport.",
      "description_length": 278,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Email_template",
      "description": "Converts email templates to and from Sexp and JSON formats, and supports rendering with dynamic content. Operates on email template records containing labels, text, and optional HTML content. Enables dynamic email generation by replacing placeholders and fetching templates by identifier or label.",
      "description_length": 297,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_facade.Migration",
      "description": "Converts migration data to S-expression and pretty-prints it. Handles creation and registration of migration steps, executes registered migrations, and manages lifecycle integration. Supports batch registration and execution of migration sequences for database schema updates.",
      "description_length": 276,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Password_reset",
      "description": "Generates and validates password reset tokens for user authentication. Operates on email addresses and tokens to facilitate password changes. Used to securely update a user's password after verifying a time-sensitive token.",
      "description_length": 223,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Queue",
      "description": "Converts queue instances to S-expressions and pretty-prints them. Manages queue configuration such as maximum retry attempts and delay between retries. Dispatches queued jobs with optional delays, registers jobs for execution, and integrates with a service lifecycle for managed operation.",
      "description_length": 289,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Random",
      "description": "Generates random byte sequences and encodes them as base64 strings, with options to create lifecycle-aware random value providers. Operates on integers to define size and returns character lists or strings. Integrates with service containers to register random value generators.",
      "description_length": 278,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Schedule",
      "description": "Handles scheduling and lifecycle management for services, allowing execution of timed tasks and registration of schedule implementations. Operates with schedule definitions and container lifecycle structures. Used to start background tasks and integrate service logic into application workflows.",
      "description_length": 295,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Session",
      "description": "Converts session data to S-expression and pretty-prints session objects. Operates on session records containing expiration timestamps, keys, and key-value pairs. Enables asynchronous retrieval and modification of session values, session creation, and lifecycle management for session storage.",
      "description_length": 292,
      "index": 7,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sihl_facade.Storage",
      "description": "Converts storage file and stored data to and from S-expression formats, with pretty-printing capabilities. Provides mutation functions to update MIME type, filename, and size for both file and stored records. Enables asynchronous storage operations such as uploading, downloading, retrieving, and deleting files by ID.",
      "description_length": 318,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.Token",
      "description": "Creates and manages signed tokens with expiration and activation states, supporting key-value data storage. Reads, verifies, and deactivates tokens using a secret key, with options to bypass expiration or validation checks. Handles token lifecycle management and integrates with service containers.",
      "description_length": 298,
      "index": 9,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade.User",
      "description": "The module handles serialization, pretty-printing, and validation of user data, along with password management, confirmation, and role checks, operating on `Sihl_contract.User.t`. It supports user authentication, creation, and lifecycle management, including admin-driven password resets and registration with policy enforcement. Specific use cases involve securing user credentials, validating email-based logins, and managing role-based access through structured data workflows.",
      "description_length": 480,
      "index": 10,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "sihl-facade",
      "description": "Provides functions for routing HTTP requests, parsing query parameters, and generating JSON responses. Works with request objects, response builders, and associative lists for query data. Handles endpoint definitions and structured data serialization in web service implementations.",
      "description_length": 282,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sihl_facade",
      "description": "Provides email, migration, queue, session, storage, and user management capabilities through structured data conversion, validation, and operation. Handles email creation, template rendering, migration execution, job scheduling, token generation, and user authentication using specialized data types like email records, migration steps, queues, sessions, storage files, and user objects. Enables dynamic content replacement, asynchronous task execution, secure password handling, and lifecycle-aware operations across multiple domains. Examples include sending templated emails, executing database migrations, scheduling background jobs, generating password reset tokens, and managing user authentication workflows.",
      "description_length": 715,
      "index": 12,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 13,
    "meaningful_modules": 13,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 715,
    "min_description_length": 223,
    "avg_description_length": 332.38461538461536,
    "embedding_file_size_mb": 0.04767131805419922
  }
}