{
  "package": "influxdb",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 6,
  "creation_timestamp": "2025-08-14T22:57:43.194767",
  "modules": [
    {
      "module_path": "Influxdb.Precision",
      "library": "influxdb",
      "description": "This module defines a variant type for timestamp precision levels used in InfluxDB, including nanoseconds to hours. It provides conversions between these precision values and their string representations in the InfluxDB line protocol. Use this module when constructing or parsing time series data to ensure correct timestamp formatting and validation.",
      "description_length": 351,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Influxdb.Field",
      "library": "influxdb",
      "description": "This module defines and manipulates key-value pairs for InfluxDB data points, supporting float, integer, string, and boolean values. It provides functions to construct fields with optional custom names and convert them to strings following the InfluxDB line protocol. Use cases include building time series data points with typed measurements before writing to an InfluxDB server.",
      "description_length": 380,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Influxdb.TimestampNS",
      "library": "influxdb",
      "description": "This module defines a type `t` as an `int64` representing a UNIX timestamp with nanosecond precision. It includes functions to convert a float in seconds to a timestamp and to format a timestamp as a string truncated to a specified precision. Use this module when handling time values in InfluxDB line protocol where timestamps require high precision or specific formatting.",
      "description_length": 374,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Influxdb.Protocol",
      "library": "influxdb",
      "description": "This module constructs HTTP headers for InfluxDB API requests and parses version information from server responses. It operates on string values representing header fields and response payloads. A concrete use case is forming the `Authorization` and `Content-Type` headers when writing data points to an InfluxDB server.",
      "description_length": 320,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Influxdb.Point",
      "library": "influxdb",
      "description": "This module defines a data structure for representing time series data points with a name, one primary field, optional tags, and additional fields. It provides operations to construct points with customizable tags, fields, and timestamps, and to serialize them into the InfluxDB line protocol format. Use this module when preparing structured data for writing to InfluxDB, such as recording metrics with associated metadata and timestamps.",
      "description_length": 439,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Influxdb",
      "library": "influxdb",
      "description": "This module implements core components for working with InfluxDB's line protocol and HTTP API. It defines precise timestamp handling, field value serialization, data point construction with tags and measurements, and HTTP header formatting for InfluxDB requests. Use it to build and serialize time series data points with nanosecond timestamps, typed fields, and custom tags, then send them to an InfluxDB server using correctly formatted HTTP headers.",
      "description_length": 452,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 452,
    "min_description_length": 320,
    "avg_description_length": 386.0,
    "embedding_file_size_mb": 0.08733272552490234
  }
}