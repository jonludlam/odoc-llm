{
  "package": "ordma",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:59:00.915336",
  "modules": [
    {
      "module_path": "Lwt_rsocket.Bytes",
      "library": "ordma",
      "description": "This module implements efficient byte buffer operations for networking using Bigarray-based byte arrays. It provides functions to send and receive data over a lightweight socket connection, handling partial transfers and message flags. Typical use cases include low-level network communication where precise control over memory buffers and transmission behavior is required.",
      "description_length": 374,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rsocket.Version",
      "library": "ordma",
      "description": "This module defines version constants and a summary tuple containing major, minor, patch, and git revision string. It provides direct access to version components as individual values. Use this module to retrieve version information for logging, diagnostics, or service identification.",
      "description_length": 285,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Ordma_version",
      "library": "ordma",
      "description": "This module defines version information including major, minor, and patch numbers, along with a git revision string. It provides direct access to these version components as individual values and as a summarized tuple. Use this module to retrieve and expose version metadata for builds or runtime diagnostics.",
      "description_length": 309,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rsocket",
      "library": "ordma",
      "description": "This module implements a low-level socket interface for network communication, providing functions for connection setup, data transmission, and socket configuration. It operates on socket descriptors of type `rsocket` and supports both standard `bytes` buffers and Bigarray-based `ba` buffers for efficient data handling. Concrete use cases include building network servers with `rbind`, `rlisten`, and `raccept`, sending and receiving data with `rsend`, `rrecv`, and their Bigarray variants, and managing socket options and non-blocking mode.",
      "description_length": 543,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lwt_rsocket",
      "library": "ordma",
      "description": "This module implements lightweight socket operations for asynchronous networking with precise control over connection handling, data transmission, and socket options. It works directly with `Unix.sockaddr`, `Unix.socket_domain`, `Unix.socket_type`, and `bytes` buffers, supporting operations like connection setup, message sending/receiving with flags, and socket configuration. Concrete use cases include implementing custom network protocols, managing asynchronous client-server communication, and handling low-level socket interactions with explicit memory management.",
      "description_length": 571,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 5,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8333333333333334
  },
  "statistics": {
    "max_description_length": 571,
    "min_description_length": 285,
    "avg_description_length": 416.4,
    "embedding_file_size_mb": 0.07287883758544922
  }
}