{
  "package": "obi",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-07-15T23:04:55.361505",
  "modules": [
    {
      "module_path": "Obi.Index",
      "library": "obi",
      "description": "This module provides data structures and serialization mechanisms for representing and processing opam2 build results. It defines types for build dependencies, outcomes, parameters, metadata, packages, maintainers, and tags, with S-expression conversion functions enabling structured storage and retrieval. These capabilities support use cases such as analyzing build data, generating reports, and integrating with tools that process or visualize build outcomes.",
      "description_length": 462,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Obi.VersionCompare",
      "library": "obi",
      "description": "Compares two version strings using semantic versioning rules. Works directly with string inputs representing package versions. Useful for determining upgrade paths or dependency resolution in package management systems.",
      "description_length": 219,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Obi.OpamJsonActions",
      "library": "obi",
      "description": "Parses JSON output from opam commands to extract package installation dependencies. Converts structured JSON data into indexed dependency lists for build analysis. Useful for interpreting opam solver results and generating build matrices.",
      "description_length": 238,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Obi.Builds",
      "library": "obi",
      "description": "This module represents individual build results for opam packages under specific build parameters, including metadata like start and end times, exit codes, and executed actions. It structures data into batches tied to a git revision and a list of packages, each with version-specific build outcomes. It is used to store and serialize detailed build outcomes for later aggregation and analysis by tools consuming the Index module.",
      "description_length": 429,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Obi",
      "library": "obi",
      "description": "This module organizes data structures and utilities for processing opam package build results, integrating version comparison, dependency parsing, and detailed outcome tracking. It centers around types representing build results, versions, dependencies, and metadata, with operations for parsing JSON, comparing versions semantically, and serializing data via S-expressions. You can use it to analyze build outcomes across package versions, determine dependency resolution paths, or generate structured reports from opam solver output. For example, it enables comparing \"1.2.3\" vs \"1.3.0\" to determine upgrade compatibility or extracting dependency trees from opam's JSON output for build matrix generation.",
      "description_length": 707,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 707,
    "min_description_length": 219,
    "avg_description_length": 411.0,
    "embedding_file_size_mb": 0.01861572265625
  }
}