{
  "package": "obi",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 5,
  "creation_timestamp": "2025-08-14T22:52:40.825492",
  "modules": [
    {
      "module_path": "Obi.Builds",
      "library": "obi",
      "description": "This module represents individual package build results with structured metadata, including outcome codes, timestamps, and execution details. It defines types for build results, packages with versioned outcomes, and batches tied to specific build environments and repository revisions. Direct use cases include parsing and serializing build data for analysis or storage, particularly for tracking how different package versions perform across architectures and OCaml versions.",
      "description_length": 476,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Obi.OpamJsonActions",
      "library": "obi",
      "description": "Parses JSON values to extract package installation dependencies from opam build results. Converts structured JSON data into indexed dependency lists for further processing. Useful for analyzing opam package build outputs and generating dependency graphs.",
      "description_length": 254,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Obi.VersionCompare",
      "library": "obi",
      "description": "Compares version strings using standard semantic versioning rules. Works with string-encoded versions containing numeric and alphanumeric components separated by dots. Useful for determining upgrade paths or dependency resolution in package management systems.",
      "description_length": 260,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Obi.Index",
      "library": "obi",
      "description": "This module provides data structures and serialization utilities for managing opam2 build metadata, including dependencies, build outcomes, maintainers, and tags represented as string-pair lists. It supports structured storage and retrieval of build results through S-expression conversions, enabling use cases like persistent build record storage, dependency analysis, and metadata-driven querying of package build histories.",
      "description_length": 426,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Obi",
      "library": "obi",
      "description": "This module provides data structures and utilities for managing and analyzing opam2 package build results. It includes types for build metadata, version comparisons, and JSON-based dependency extraction, working with constructs like string-pair lists, version strings, and JSON values. Concrete use cases involve tracking package build outcomes across environments, resolving dependencies based on semantic versions, and generating dependency graphs from JSON build outputs.",
      "description_length": 474,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 476,
    "min_description_length": 254,
    "avg_description_length": 378.0,
    "embedding_file_size_mb": 0.07287216186523438
  }
}