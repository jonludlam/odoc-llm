{
  "package": "openQASM",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:46:47.858951",
  "modules": [
    {
      "module_path": "OpenQASM.AST",
      "library": "openQASM",
      "description": "This module defines the abstract syntax tree for a quantum assembly language, including types for quantum and classical registers, gates, and operations. It supports expressions with arithmetic and trigonometric operations, gate applications, measurements, resets, and conditional execution. Concrete use cases include parsing and manipulating quantum circuits and gate sequences for quantum computing simulations.",
      "description_length": 414,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "OpenQASM",
      "library": "openQASM",
      "description": "This module provides functions for parsing quantum assembly code into an abstract syntax tree (AST), printing source positions, and handling lexing buffers. It operates on string inputs and lex buffers to produce structured program representations with quantum registers, gates, and control flow. Concrete use cases include building and analyzing quantum circuit descriptions for simulation or transformation tools.",
      "description_length": 415,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 415,
    "min_description_length": 414,
    "avg_description_length": 414.5,
    "embedding_file_size_mb": 0.029402732849121094
  }
}