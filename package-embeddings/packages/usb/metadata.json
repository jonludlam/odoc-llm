{
  "package": "usb",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:05:10.327387",
  "modules": [
    {
      "module_path": "USB.Class",
      "library": "usb",
      "description": "This module provides constants for identifying USB device categories and converting those identifiers to human-readable labels. It operates on integer-based class codes representing device types like human interface devices, audio equipment, and hubs, which are used during USB protocol negotiation and device enumeration. These values enable developers to implement class-specific communication logic or validate device capabilities in host controller software.",
      "description_length": 462,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "USB.DT",
      "library": "usb",
      "description": "This module defines descriptor types used in USB communication, such as device, configuration, string, interface, endpoint, HID, report, physical, and hub descriptors. It provides constants representing these descriptor types as integer values. These values are used directly in USB protocol operations to identify and handle different kinds of device descriptors during enumeration and communication.",
      "description_length": 401,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "USB.Request",
      "library": "usb",
      "description": "This module defines standard USB control request operations used to manage device state and configuration. It provides specific functions for getting and setting device status, features, addresses, descriptors, configurations, interfaces, and synchronization frames. These operations directly map to standard USB protocol requests for device control and enumeration.",
      "description_length": 366,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "USB",
      "library": "usb",
      "description": "This module enables low-level USB communication through device management, configuration, and data transfer mechanisms. It supports operations like device enumeration, interface claiming, and endpoint-based data exchange for bulk, interrupt, and control transfers, using handles, descriptors, and endpoint references. The module includes constants for USB device classes and descriptor types, facilitating protocol negotiation and class-specific logic, along with standard control requests for managing device status, addresses, and configurations. Examples include querying device properties, handling kernel drivers, and executing control transfers to retrieve descriptors or set device configurations.",
      "description_length": 704,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 704,
    "min_description_length": 366,
    "avg_description_length": 483.25,
    "embedding_file_size_mb": 0.014950752258300781
  }
}