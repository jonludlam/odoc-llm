{
  "package": "pgocaml_ppx",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:47:14.657475",
  "modules": [
    {
      "module_path": "Pgocaml_ppx.Ppx_pgsql",
      "library": "pgocaml_ppx",
      "description": "This module facilitates embedding SQL queries directly into OCaml code through syntax extensions, enabling compile-time validation and type-safe execution against PostgreSQL databases. It processes SQL strings and database schemas to generate corresponding OCaml type definitions and query execution boilerplate, handling conversions between SQL and OCaml data representations. Designed for use during the compilation pipeline, it supports declarative database interactions with strong typing guarantees, such as automatically mapping query results to OCaml records or variant types.",
      "description_length": 583,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Pgocaml_ppx",
      "library": "pgocaml_ppx",
      "description": "This module enables embedding SQL queries directly in OCaml code with compile-time validation and type-safe execution against PostgreSQL. It generates OCaml types and boilerplate from SQL strings and database schemas, handling data conversion between SQL and OCaml representations. It supports declarative database interactions with strong typing, such as mapping query results to OCaml records or variants.",
      "description_length": 407,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 583,
    "min_description_length": 407,
    "avg_description_length": 495.0,
    "embedding_file_size_mb": 0.02936077117919922
  }
}