{
  "package": "zbar",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:30:47.954614",
  "modules": [
    {
      "module_path": "Zbar.Symbol",
      "description": "Encodes and decodes symbols using a specific format, extracting both the underlying string and the encoding type. It handles internal representations of symbols and their associated encoding schemes. Used to process encoded data in applications requiring precise symbol identification and decoding.",
      "description_length": 298,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zbar.Image",
      "description": "Provides functions to manipulate image data, including destroying an image to free memory and converting images between pixel formats using fourcc notation. Operates on a custom type `t` representing image data. Used to prepare images for decoding by converting to grayscale format compatible with ZBar.",
      "description_length": 303,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zbar.ImageScanner",
      "description": "Provides functions to configure and manage image scanning operations, including enabling caching to avoid duplicate symbol detection and scanning images to extract symbols. Works with image data structures and symbol configurations. Used to process video frames and detect encoded symbols like QR codes or barcodes efficiently.",
      "description_length": 327,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zbar.Video",
      "description": "Requests and configures video device parameters such as size, interface version, and I/O mode before opening the device. Manages device lifecycle with open and close operations, and provides a stream of image frames for real-time video processing. Used to initialize and retrieve video data from a specified device node, such as /dev/video0.",
      "description_length": 341,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "zbar",
      "description": "Processes barcode and QR code data from image buffers using zbar library. Accepts raw pixel data and returns decoded symbols with their types and values. Used for scanning product codes in inventory systems and reading QR codes from user-uploaded images.",
      "description_length": 254,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Zbar",
      "description": "Processes images and video streams to detect and decode symbols like QR codes and barcodes. Manages image conversion, symbol extraction, and device configuration through custom types for images and symbols. Supports real-time video decoding by initializing devices, converting frames to grayscale, and scanning for encoded data. Enables precise identification of encoded strings and their formats during video or image analysis.",
      "description_length": 428,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 428,
    "min_description_length": 254,
    "avg_description_length": 325.1666666666667,
    "embedding_file_size_mb": 0.02221393585205078
  }
}