{
  "package": "aws-route53",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 300,
  "creation_timestamp": "2025-06-18T17:02:57.499992",
  "modules": [
    {
      "module_path": "Aws_route53.Types.ResourceRecord",
      "description": "Creates a structured representation of a DNS resource record from a string, parses XML nodes into this structure, and converts it to query parameters or JSON format. Works with string values and XML node sequences to generate or extract resource record data. Used to process DNS responses from AWS services and prepare them for API requests.",
      "description_length": 341,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.Dimension",
      "description": "Provides operations to construct, parse, serialize, and deserialize dimension data. Works with a record type containing a name and value as strings. Used to generate query parameters and JSON representations for AWS API interactions.",
      "description_length": 233,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CloudWatchRegion",
      "description": "Provides conversion between region identifiers and their string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` representing AWS region codes. Used to transform raw XML data from CloudWatch into structured region values and vice versa.",
      "description_length": 311,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckRegion",
      "description": "Provides conversion between a region identifier and its string representation, including parsing from XML nodes and serialization to query and JSON formats. Works with a custom type `t` representing geographic regions. Used to transform region data for API requests and configuration files.",
      "description_length": 290,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.AliasTarget",
      "description": "Provides operations to construct, parse, and serialize DNS target information including hosted zone ID, DNS name, and health evaluation flag. Works with structured data types representing DNS targets and XML or JSON representations. Used to generate query parameters for DNS API requests and to convert between XML responses and internal target objects.",
      "description_length": 353,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GeoLocation",
      "description": "Provides methods to construct, parse, serialize, and deserialize geographic location data using continent, country, and subdivision codes. Works with a record type containing optional string fields for geographic identifiers. Used to convert XML input into structured location data and generate query or JSON representations for API interactions.",
      "description_length": 346,
      "index": 5,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.RRType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON representations, along with bidirectional mappings for specific string pairs. Works with a polymorphic type `t` and associated serialization formats like AWS query and JSON. Used to parse XML input into structured data and serialize data for API requests.",
      "description_length": 330,
      "index": 6,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ResourceRecordSetFailover",
      "description": "Provides conversion between string representations and a structured type, including parsing from XML nodes and serialization to AWS query and JSON formats. Works with a custom type `t` that encapsulates resource record set failover configurations. Used to transform XML-based DNS records into a usable format for AWS API interactions.",
      "description_length": 334,
      "index": 7,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ResourceRecordSetRegion",
      "description": "Converts between string representations and a structured type, including XML parsing and AWS query/json serialization. Operates on a custom type representing resource record sets, supporting bidirectional mapping between internal and external formats. Used to process DNS record data in AWS services, enabling data exchange and configuration management.",
      "description_length": 353,
      "index": 8,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ResourceRecords",
      "description": "Provides functions to create, parse, and convert resource record data between XML, AWS queries, and JSON formats. Operates on lists of resource records, each representing DNS information. Parses XML node sequences into structured records, generates AWS query parameters, and serializes/deserializes records to and from JSON.",
      "description_length": 324,
      "index": 9,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ComparisonOperator",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON values, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize data structures in XML and JSON formats for API interactions.",
      "description_length": 291,
      "index": 10,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DimensionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of dimension objects. Operates on XML nodes, AWS query structures, and JSON representations. Used to convert between XML input and structured AWS request data.",
      "description_length": 229,
      "index": 11,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.Statistic",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON representations, along with serialization to AWS query parameters. Works with a polymorphic type that can represent various data structures. Used to parse and encode data for API interactions and configuration settings.",
      "description_length": 294,
      "index": 12,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.AlarmIdentifier",
      "description": "Represents an AWS CloudWatch alarm identifier, supporting creation from region and name, parsing from XML nodes, and conversion to query parameters, JSON format, and reconstruction from JSON. Works with CloudWatchRegion.t and string-based identifiers. Used to construct and process alarm references in AWS monitoring interactions.",
      "description_length": 330,
      "index": 13,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChildHealthCheckList",
      "description": "Provides functions to create a list from a value, parse XML nodes into a string list, convert the list to an AWS query, serialize to JSON, and deserialize from JSON. Operates on a list of strings wrapped as a custom type. Used to process and format health check data for API interactions.",
      "description_length": 288,
      "index": 14,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckRegionList",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of health check regions. Operates on lists of `HealthCheckRegion.t` values and XML or JSON representations. Used to process region data from XML responses and convert it into structured JSON for API interactions.",
      "description_length": 282,
      "index": 15,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckType",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and encode health check statuses in API requests and responses.",
      "description_length": 272,
      "index": 16,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.InsufficientDataHealthStatus",
      "description": "Provides conversion between string representations and a custom type `t`, including parsing from XML nodes and serialization to query and JSON formats. Works with `t` and string types, supporting structured data exchange. Used to handle health status information in API requests and responses.",
      "description_length": 293,
      "index": 17,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.Tag",
      "description": "Provides operations to create, parse, and serialize tag structures with key-value pairs. Works with XML nodes, query parameters, and JSON representations. Used to process AWS tag data from XML responses and convert it into structured JSON for API interactions.",
      "description_length": 260,
      "index": 18,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChangeAction",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with serialization to AWS query format. Works with a polymorphic type `t` and associated string representations. Used to parse and generate AWS-compatible data structures from XML and JSON inputs.",
      "description_length": 278,
      "index": 19,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ResourceRecordSet",
      "description": "Provides operations to construct, parse, and serialize DNS resource record sets, including methods to create records with specific attributes like name, type, weight, and alias targets. Works with types such as RRType, GeoLocation, and ResourceRecords to represent DNS configurations. Used to generate AWS Route 53 API requests and process XML or JSON representations of DNS records.",
      "description_length": 383,
      "index": 20,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneConfig",
      "description": "Creates and manipulates DNS host zone configurations, supporting both public and private zones with optional comments. Operates on structured data representing DNS settings, including zone names, visibility, and metadata. Used to generate AWS API requests and parse XML responses for route53 zone management.",
      "description_length": 308,
      "index": 21,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.LinkedService",
      "description": "Represents a linked service with methods to construct, parse XML, serialize to query parameters, and convert to and from JSON. It works with string-based service principals and descriptions, and handles structured data for AWS interactions. Used to initialize and manipulate service configurations in API requests and responses.",
      "description_length": 328,
      "index": 22,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.StatusReport",
      "description": "Provides operations to construct, parse, and serialize status reports with optional status and checked time fields. Works with custom record types containing string and datetime fields, and XML or JSON representations. Used to generate query parameters from status data and reconstruct objects from JSON input.",
      "description_length": 310,
      "index": 23,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneOwner",
      "description": "Encapsulates information about the owner of a DNS hosted zone, including the account and service responsible. It supports parsing XML data from AWS responses, converting to query parameters, and serializing/deserializing to JSON. Used to process and represent ownership details in AWS Route 53 interactions.",
      "description_length": 307,
      "index": 24,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.VPCRegion",
      "description": "Provides conversion between a region identifier and its string representation, including parsing from XML, serializing to query parameters, and encoding/decoding from JSON. Works with a custom type `t` representing AWS VPC regions. Used to transform XML responses from AWS API calls into region values and to prepare region parameters for API requests.",
      "description_length": 352,
      "index": 25,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CloudWatchAlarmConfiguration",
      "description": "Provides functions to construct, parse, and serialize configuration data for CloudWatch alarms, including setting evaluation periods, thresholds, comparison operators, and metric statistics. Works with types such as integers, doubles, strings, and custom data structures like DimensionList and Statistic. Used to generate HTTP query parameters and JSON representations for API interactions with AWS CloudWatch.",
      "description_length": 410,
      "index": 26,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckConfig",
      "description": "Provides methods to construct, parse, and serialize health check configurations, including setting IP addresses, ports, health check types, and associated resources. Works with structured data types such as strings, integers, booleans, lists, and custom records representing health check parameters. Used to generate AWS-compatible query parameters and JSON payloads for configuring health checks in cloud infrastructure.",
      "description_length": 421,
      "index": 27,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.TagList",
      "description": "Creates a singleton list containing a single value. Parses XML nodes into a list of tag objects. Converts a list of tags to an AWS query structure, serializes to JSON format, and deserializes from JSON back to a list of tags. Works with tag objects and AWS-specific data structures for API interactions.",
      "description_length": 303,
      "index": 28,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.TagResourceType",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings, JSON, and query parameters. Works with a polymorphic type `t` that can be instantiated via a generic `make` function. Parses XML nodes into `t` and serializes it into AWS-compatible query and JSON formats.",
      "description_length": 313,
      "index": 29,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DelegationSetNameServers",
      "description": "Provides functions to create, parse, and serialize a list of DNS server names. Operates on a type representing a list of strings, used for handling DNS configuration data. Parses XML nodes into a list of server names, converts them to query parameters, and serializes/deserializes them in JSON format.",
      "description_length": 301,
      "index": 30,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.Change",
      "description": "Provides operations to construct, parse, and serialize change records for DNS updates, including converting between XML nodes, query parameters, and JSON representations. Works with `ChangeAction.t` and `ResourceRecordSet.t` to define DNS record modifications. Used to generate AWS Route 53 API requests and process incoming change data from XML responses.",
      "description_length": 356,
      "index": 31,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZone",
      "description": "Provides operations to construct, parse, serialize, and deserialize hosted zone data, including methods to generate query parameters and JSON representations. Works with types such as string, long, and custom records for DNS configuration and linked services. Used to manage DNS zone definitions in AWS Route 53 interactions.",
      "description_length": 325,
      "index": 32,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ChangeStatus",
      "description": "Provides conversion between a custom type `t` and string representations, including bidirectional mappings via `str_to_t` and `t_to_str`, and direct serialization/deserialization to and from strings, XML nodes, and JSON structures. Works with a polymorphic type `t` that can be instantiated with `make` and parsed from XML using `parse`. Used to transform internal state representations into formats suitable for HTTP queries and JSON payloads in AWS interactions.",
      "description_length": 464,
      "index": 33,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicy",
      "description": "Provides operations to construct, parse, serialize, and deserialize DNS traffic policy data. Works with structured data including policy identifiers, versions, names, record types, and configuration documents. Used to generate AWS-compatible query parameters and JSON representations for DNS policy management.",
      "description_length": 310,
      "index": 34,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckObservation",
      "description": "Provides operations to construct, parse, and serialize health check observation data, including converting between XML nodes, query parameters, and JSON representations. Works with custom types such as region identifiers, IP addresses, and status reports. Used to process and transmit health check results in AWS-compatible formats.",
      "description_length": 332,
      "index": 35,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneSummary",
      "description": "Provides operations to construct, parse, and serialize hosted zone summaries, including converting between XML nodes, query parameters, and JSON representations. Works with types representing hosted zone identifiers, names, and owners. Used to process and transmit DNS zone data in AWS API interactions.",
      "description_length": 303,
      "index": 36,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicyInstance",
      "description": "Provides operations to construct, parse, and serialize traffic policy instances with fields including ID, hosted zone ID, name, TTL, state, message, policy ID, version, and type. Works with custom types for strings, longs, integers, and DNS record types. Used to generate API requests and handle JSON/XML data in DNS traffic management workflows.",
      "description_length": 346,
      "index": 37,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ResettableElementName",
      "description": "Provides conversion between a custom type and strings, XML nodes, and JSON, along with a generic creation function. Works with a polymorphic type `t` and associated string representations. Used to serialize and deserialize elements in XML and JSON formats, and to generate query parameters for AWS requests.",
      "description_length": 307,
      "index": 38,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.VPC",
      "description": "Provides operations to construct, parse, and serialize VPC data structures, including converting between XML, query parameters, and JSON formats. Works with custom types such as VPCRegion.t and Aws.BaseTypes.String.t to represent VPC configurations. Used to generate AWS API requests and process XML responses from VPC-related services.",
      "description_length": 336,
      "index": 39,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GeoLocationDetails",
      "description": "Constructs a structured geographic information object from optional continent and country codes and names, along with subdivision details. Parses XML node sequences into this structured format and converts instances to query parameters, JSON associations, and from JSON. Used to process and serialize geolocation data from API responses or configuration files.",
      "description_length": 360,
      "index": 40,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneLimitType",
      "description": "Provides conversion between a type `t` and string representations, including parsing from XML nodes and serializing to AWS query and JSON formats. Works with a custom type `t` used to represent limits in hosted zones. Used to validate and transform zone limit values during AWS API interactions.",
      "description_length": 295,
      "index": 41,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheck",
      "description": "Provides operations to construct, parse, serialize, and deserialize health check configurations using XML, query strings, and JSON. Works with types such as health check configurations, linked services, and cloud watch alarm configurations. Used to generate AWS API requests and process responses for health monitoring services.",
      "description_length": 328,
      "index": 42,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.QueryLoggingConfig",
      "description": "Provides functions to construct, parse, and serialize configuration data for query logging, including creating instances from string parameters, parsing XML nodes, and converting to AWS query and JSON formats. Works with string-based identifiers and ARNs, and a structured record type containing logging configuration details. Used to generate AWS API requests and process configuration data from XML responses.",
      "description_length": 411,
      "index": 43,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ResourceTagSet",
      "description": "Provides operations to construct, parse, and serialize resource tag data, including creating instances from XML nodes, converting to query parameters, and encoding/decoding from JSON. Works with structured data representing AWS resource tags, including resource type, ID, and a list of key-value pairs. Used to generate HTTP query strings for API requests and to process XML responses containing tag information.",
      "description_length": 412,
      "index": 44,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.AccountLimitType",
      "description": "Provides conversion between string representations and a type `t` through bidirectional mappings, along with serialization to and from JSON and query formats. Works with a custom type `t` that represents account limit configurations. Used to parse XML nodes into account limit values and generate AWS-compatible query and JSON representations.",
      "description_length": 343,
      "index": 45,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ReusableDelegationSetLimitType",
      "description": "Provides conversion between a custom type and string representations, including parsing from XML nodes and serialization to query and JSON formats. Works with a polymorphic type `t` that can be instantiated with any value through a factory function. Used to handle delegated AWS service limits in a structured, serializable manner.",
      "description_length": 331,
      "index": 46,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DelegationSet",
      "description": "Provides operations to construct, parse, and serialize delegation set data, including converting between XML nodes, query parameters, and JSON. Works with custom types for DNS name servers and structured data representing delegation sets. Used to handle DNS delegation information in AWS API interactions, such as creating or updating hosted zones.",
      "description_length": 348,
      "index": 47,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicySummary",
      "description": "Provides operations to construct, parse, and serialize traffic policy summary data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data containing identifiers, names, record types, and version numbers. Used to process and transmit DNS traffic policy information in API interactions.",
      "description_length": 341,
      "index": 48,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.Changes",
      "description": "Provides functions to create, parse, and serialize change records. Operates on XML nodes and JSON structures, converting them to and from a list of change objects. Used to generate AWS query parameters from changes and to decode JSON responses into structured change data.",
      "description_length": 272,
      "index": 49,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.HostedZones",
      "description": "Provides functions to create, parse, and serialize hosted zone data. Operates on lists of `HostedZone.t` values and XML or JSON representations. Used to generate AWS API queries and process responses from DNS management services.",
      "description_length": 229,
      "index": 50,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChangeInfo",
      "description": "Provides operations to construct, parse, and serialize change information with an ID, status, timestamp, and optional comment. Works with structured data including AWS string, date-time, and JSON types. Used to convert between XML node representations and JSON-compatible formats for API interactions.",
      "description_length": 301,
      "index": 51,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicies",
      "description": "Provides functions to create, parse, serialize, and deserialize traffic policy data. Operates on XML nodes, JSON values, and lists of traffic policy records. Used to convert policy configurations between XML, JSON, and query parameters for API interactions.",
      "description_length": 257,
      "index": 52,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckObservations",
      "description": "Constructs a value of type 'a with a side-effecting initialization function. Parses XML nodes into a list of observation records. Serializes and deserializes observation lists to and from AWS query and JSON formats.",
      "description_length": 215,
      "index": 53,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CheckerIpRanges",
      "description": "Provides functions to create, parse, and serialize IP range data. Operates on lists of strings representing IP ranges and converts them to query parameters, JSON structures, and vice versa. Used to process and format IP range data for API requests and responses.",
      "description_length": 262,
      "index": 54,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneSummaries",
      "description": "Provides functions to create, parse, and serialize hosted zone summaries between XML, query parameters, and JSON formats. Operates on lists of `HostedZoneSummary.t` records, which represent DNS zone metadata. Used to convert DNS zone data for API requests and responses, and to process XML-based API outputs into structured data.",
      "description_length": 329,
      "index": 55,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicyInstances",
      "description": "Provides functions to create, parse, serialize, and deserialize lists of traffic policy instances. Operates on XML nodes, AWS query structures, and JSON values. Used to convert between XML input and structured data for API interactions.",
      "description_length": 236,
      "index": 56,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ErrorMessages",
      "description": "Provides functions to construct, parse, and serialize error messages as lists of strings. Operates on lists of strings and converts them to query parameters, JSON lists, and vice versa. Parses XML nodes into error message lists and ensures consistent representation across different data formats.",
      "description_length": 296,
      "index": 57,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ResettableElementNameList",
      "description": "Creates a list of resettable element names, supporting parsing from XML nodes, conversion to AWS query parameters, and serialization/deserialization to JSON. Operates on lists of `ResettableElementName.t` values, enabling structured data handling in API interactions. Used to process and encode element name lists for AWS service requests and responses.",
      "description_length": 353,
      "index": 58,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.VPCs",
      "description": "Creates and manipulates VPC data structures from XML and JSON formats. Processes XML nodes into VPC lists, converts VPC lists to AWS query parameters, and serializes/deserializes VPC data to and from JSON. Used for parsing API responses and preparing data for AWS service requests.",
      "description_length": 281,
      "index": 59,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TagResourceIdList",
      "description": "Provides operations to create, parse, serialize, and deserialize lists of string resources from XML, query parameters, and JSON. Works with lists of strings representing resource identifiers. Used to handle AWS resource tags in API requests and responses.",
      "description_length": 255,
      "index": 60,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GeoLocationDetailsList",
      "description": "Provides functions to construct, parse, serialize, and deserialize lists of geographic location details. Operates on lists of `GeoLocationDetails.t` values and XML nodes. Used to convert XML responses from AWS services into structured data and generate query parameters or JSON representations for API interactions.",
      "description_length": 315,
      "index": 61,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneLimit",
      "description": "Provides operations to create, parse, and serialize hosted zone limit data, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing a limit type and a numeric value. Used to handle AWS Route 53 hosted zone limits in API requests and responses.",
      "description_length": 307,
      "index": 62,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthChecks",
      "description": "Provides functions to create, parse, serialize, and deserialize health check configurations. Operates on XML nodes and JSON structures to convert between external representations and internal list-based health check data. Used to process health check definitions from XML input and generate query parameters or JSON output for API interactions.",
      "description_length": 344,
      "index": 63,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.QueryLoggingConfigs",
      "description": "Provides functions to create, parse, and serialize query logging configurations. Operates on lists of `QueryLoggingConfig.t` and XML or JSON representations. Parses XML nodes into configuration lists, converts them to AWS query parameters, and handles JSON serialization and deserialization.",
      "description_length": 291,
      "index": 64,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TagKeyList",
      "description": "Provides functions to create an empty list, parse XML nodes into a list of strings, convert the list to an AWS query structure, serialize to JSON format, and deserialize from JSON. Works with lists of strings and AWS-specific types for query and JSON encoding. Used to process and format tag keys in AWS API requests and responses.",
      "description_length": 331,
      "index": 65,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ResourceTagSetList",
      "description": "Provides operations to construct, parse, serialize, and deserialize lists of resource tag sets. Works with XML nodes, AWS query parameters, and JSON structures. Used to convert between XML representations of resource tags and JSON-compatible formats for API interactions.",
      "description_length": 271,
      "index": 66,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.AccountLimit",
      "description": "Provides operations to construct, parse, serialize, and deserialize account limit data. Works with a record type containing an account limit type and a numeric value. Used to handle AWS account limit configurations in API requests and responses.",
      "description_length": 245,
      "index": 67,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ResourceRecordSets",
      "description": "Provides functions to create, parse, and convert resource record sets between XML, AWS queries, and JSON formats. Operates on lists of resource record set structures, each containing domain name, type, TTL, and associated values. Used to process DNS configuration data from XML responses and serialize it for API requests or storage.",
      "description_length": 333,
      "index": 68,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ReusableDelegationSetLimit",
      "description": "Provides operations to create, parse, and serialize a limit value associated with a reusable delegation set, using a specific type and long integer value. Works with XML nodes, query parameters, and JSON structures for data interchange. Used to handle AWS API limit configurations in a structured and serializable format.",
      "description_length": 321,
      "index": 69,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DelegationSets",
      "description": "Provides functions to create, parse, serialize, and deserialize delegation sets. Operates on lists of delegation set records, XML nodes, and AWS query and JSON structures. Used to convert between XML input and AWS API-compatible query parameters or JSON representations.",
      "description_length": 270,
      "index": 70,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicySummaries",
      "description": "Provides functions to create, parse, and serialize traffic policy summaries. Operates on lists of `TrafficPolicySummary.t` and XML nodes, converting between XML, query parameters, and JSON formats. Used to process and transmit DNS traffic policy data in AWS API interactions.",
      "description_length": 275,
      "index": 71,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ChangeBatch",
      "description": "Provides operations to construct, parse, and serialize a batch of changes, including creating with a comment, converting to query parameters, and encoding/decoding from JSON. Works with `Changes.t` and AWS-specific types like `Aws.Query.t` and `Aws.Json.t`. Used to generate structured API requests and process XML responses in AWS interaction workflows.",
      "description_length": 354,
      "index": 72,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.RecordData",
      "description": "Provides functions to create a value from a single element, parse XML nodes into a list of strings, convert string lists to query parameters, serialize to JSON lists, and deserialize from JSON to string lists. Works with lists of string-type values and AWS-specific type aliases. Used to process and transform XML and JSON data into query-compatible formats for API interactions.",
      "description_length": 379,
      "index": 73,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ListHostedZonesByNameResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing a list of hosted DNS zones, including support for pagination and filtering by name or ID. Works with custom types for hosted zones, strings, and boolean flags, as well as AWS query and JSON formats. Used to process API responses from DNS management services, enabling retrieval of zone information with pagination controls.",
      "description_length": 399,
      "index": 74,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteReusableDelegationSetResponse",
      "description": "Provides functions to create, parse, and serialize responses for deleting a reusable delegation set, working with the unit type and AWS query and JSON formats. Includes a constructor, a parser that returns optional unit values, and methods to convert between internal representations and AWS-compatible structures. Used to handle HTTP response data in AWS SDK interactions.",
      "description_length": 373,
      "index": 75,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneNotFound",
      "description": "Provides functions to create, parse, and serialize error data related to missing DNS host zones, including converting between XML, query parameters, and JSON formats. Works with custom error types encapsulating optional messages and structured data. Used to handle AWS API responses where a requested hosted zone is not found.",
      "description_length": 326,
      "index": 76,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DeleteQueryLoggingConfigResponse",
      "description": "Provides functions to create, parse, and serialize a unit type into query parameters and JSON. Works with the unit data type to represent empty responses. Used to handle AWS API responses that require no additional data beyond a confirmation.",
      "description_length": 242,
      "index": 77,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetTrafficPolicyInstanceResponse",
      "description": "Provides functions to construct, parse, and serialize a traffic policy instance response, including converting between XML, JSON, and query parameters. Works with the `TrafficPolicyInstance.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and format responses from AWS Route 53 API calls involving traffic policy instances.",
      "description_length": 385,
      "index": 78,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListHealthChecksRequest",
      "description": "Provides operations to construct, parse, and serialize request structures for listing health checks, including setting pagination parameters. Works with AWS query and JSON formats, as well as XML nodes from responses. Used to generate HTTP requests for fetching health check summaries from AWS Route 53.",
      "description_length": 303,
      "index": 79,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.AssociateVPCWithHostedZoneResponse",
      "description": "Provides operations to construct, parse, and serialize responses for associating a VPC with a hosted zone, including converting between XML, JSON, and query parameters. Works with `ChangeInfo.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle API response formatting and deserialization in DNS management workflows.",
      "description_length": 352,
      "index": 80,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyVersionsResponse",
      "description": "Provides functions to construct, parse, and serialize data structures representing traffic policy version listings, including methods to convert between XML, query parameters, and JSON formats. Works with custom types for traffic policies, boolean flags, and string-based pagination markers and limits. Used to process API responses from services managing DNS traffic policies, enabling structured data handling and interoperability with HTTP-based interfaces.",
      "description_length": 460,
      "index": 81,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DelegationSetAlreadyReusable",
      "description": "Provides operations to create, parse, and serialize delegation set data, including converting between XML nodes, query parameters, and JSON representations. Works with XML nodes, query parameters, and JSON values to handle AWS delegation set information. Used to process and transmit delegation set configurations in API requests and responses.",
      "description_length": 344,
      "index": 82,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetChangeRequest",
      "description": "Provides operations to construct, parse, and serialize change request data structures. Works with a record type containing an ID and other structured fields. Used to generate AWS query parameters from a change request and to convert between XML and JSON representations.",
      "description_length": 270,
      "index": 83,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetGeoLocationResponse",
      "description": "Provides a constructor for building objects from geographic location details, a parser for XML nodes into the structure, and conversions to AWS query parameters and JSON formats. Works with XML node structures, AWS query parameters, and JSON values. Used to process and serialize geographic data from API responses into structured formats for further handling.",
      "description_length": 360,
      "index": 84,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckLastFailureReasonResponse",
      "description": "Provides functions to construct, parse, and serialize a health check failure reason from XML and JSON formats. Works with `HealthCheckObservations.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to extract and format detailed failure information from AWS health check responses for logging or debugging purposes.",
      "description_length": 359,
      "index": 85,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.VPCAssociationAuthorizationNotFound",
      "description": "Provides functions to construct, parse, and serialize error responses related to VPC association authorization failures, working with AWS XML and JSON formats. Operates on a structured type representing the error, including optional message fields. Used to handle and communicate specific VPC authorization issues in AWS API interactions.",
      "description_length": 338,
      "index": 86,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DeleteVPCAssociationAuthorizationRequest",
      "description": "Provides operations to construct, parse, and serialize a request for deleting VPC association authorization, including converting between XML, query, and JSON formats. Works with a record type containing a hosted zone ID and a VPC structure. Used to prepare and process API requests in AWS Route 53 interactions.",
      "description_length": 312,
      "index": 87,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TooManyTrafficPolicyInstances",
      "description": "Provides operations to create, parse, and serialize traffic policy instance data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data representing AWS traffic policy instances. Used to handle HTTP request parsing and response formatting in AWS API interactions.",
      "description_length": 320,
      "index": 88,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetHostedZoneRequest",
      "description": "Provides operations to construct, parse, and serialize a request for retrieving a hosted zone, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types representing AWS request parameters. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 323,
      "index": 89,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DelegationSetAlreadyCreated",
      "description": "Creates a structured representation for delegation set creation errors, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Operates on a custom type encapsulating error details and optional messages. Used to handle and transmit error states in AWS API interactions.",
      "description_length": 302,
      "index": 90,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetAccountLimitRequest",
      "description": "Provides operations to construct, parse, and serialize account limit request data. Works with `AccountLimitType.t` and AWS query/json structures. Used to generate AWS API requests and process XML responses for account limit queries.",
      "description_length": 232,
      "index": 91,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetTrafficPolicyInstanceRequest",
      "description": "Constructs and manipulates a request to retrieve a traffic policy instance, operating on a structured type containing an identifier. Parses XML nodes into the request structure and serializes it to query parameters, JSON, or deserializes from JSON. Used to fetch specific traffic policy instance details in AWS Route 53 interactions.",
      "description_length": 333,
      "index": 92,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListReusableDelegationSetsRequest",
      "description": "Provides operations to construct, parse, and serialize request data for listing reusable delegation sets, including parsing XML nodes into a structured format, converting to query parameters, and serializing/deserializing JSON. Works with AWS-specific types such as strings for markers and maximum items. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 370,
      "index": 93,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DeleteTrafficPolicyInstanceResponse",
      "description": "Provides functions to create, parse, and serialize responses for deleting a traffic policy instance, working with the unit type. Includes parsing from various input types, converting to AWS query format, and handling JSON serialization and deserialization. Used to process and generate HTTP responses in AWS API interactions.",
      "description_length": 325,
      "index": 94,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.InvalidArgument",
      "description": "Provides functions to create, parse, and serialize an exception type with a message, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with a record type containing a message string and an optional cause. Used to handle and transmit invalid argument errors in AWS-related operations.",
      "description_length": 333,
      "index": 95,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.CreateHostedZoneResponse",
      "description": "Provides functions to construct, parse, and serialize responses containing DNS hosted zone details, including change information, delegation sets, and VPC configurations. Works with types such as HostedZone, ChangeInfo, DelegationSet, and VPC to represent DNS infrastructure data. Used to generate HTTP query parameters and JSON payloads for API interactions with domain management services.",
      "description_length": 391,
      "index": 96,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetHostedZoneLimitRequest",
      "description": "Provides operations to construct, parse, and serialize requests for querying hosted zone limits, including converting between XML nodes, query parameters, and JSON representations. Works with hosted zone identifiers and limit types defined in the HostedZoneLimitType module. Used to generate and process API requests for AWS Route 53 limit checks.",
      "description_length": 347,
      "index": 97,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetQueryLoggingConfigResponse",
      "description": "Provides operations to construct, parse, and serialize query logging configuration data, including converting between XML nodes, JSON, and AWS query parameters. Works with `QueryLoggingConfig.t` and AWS-specific types like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and transmit AWS Route 53 query logging configuration responses in API interactions.",
      "description_length": 372,
      "index": 98,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckStatusResponse",
      "description": "Provides functions to construct, parse, and serialize health check status responses. Works with `HealthCheckObservations.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to generate HTTP query parameters from a health check response and convert between XML and JSON representations for API interactions.",
      "description_length": 349,
      "index": 99,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetCheckerIpRangesResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing IP ranges for a checker, including conversion to query parameters, JSON format, and deserialization from JSON. Works with the `CheckerIpRanges.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and encode responses from AWS API calls involving IP range checks.",
      "description_length": 396,
      "index": 100,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListHostedZonesByVPCResponse",
      "description": "Provides functions to construct, parse, and serialize responses containing hosted zone summaries associated with a VPC, including handling pagination through a next token. Works with `HostedZoneSummaries.t` and AWS query and JSON formats. Used to process API responses from services like Route 53, enabling integration with VPC-based DNS management workflows.",
      "description_length": 359,
      "index": 101,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyInstancesResponse",
      "description": "Provides operations to construct, parse, and serialize responses containing traffic policy instances, including markers for pagination and truncation status. Works with custom types for traffic policy instances, string markers, and DNS record types. Used to process and format API responses from DNS services managing traffic policies.",
      "description_length": 335,
      "index": 102,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ThrottlingException",
      "description": "Provides functions to create, parse, and serialize exceptions with a message, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with a custom exception type containing an optional message. Used to handle and transmit throttling errors in AWS API interactions.",
      "description_length": 309,
      "index": 103,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.InvalidInput",
      "description": "Provides functions to create, parse, and serialize error objects with optional messages, working with XML nodes, query parameters, and JSON structures. Supports conversion between internal representations and external formats like XML and JSON. Used to handle invalid input errors in AWS request processing by constructing and validating error payloads.",
      "description_length": 353,
      "index": 104,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchDelegationSet",
      "description": "Provides operations to create, parse, and serialize a structure representing a missing delegation set, including converting to and from JSON and query parameters. Works with a custom type `t` that encapsulates optional error messages. Used to handle AWS API responses where a delegation set is expected but not found.",
      "description_length": 317,
      "index": 105,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteTrafficPolicyRequest",
      "description": "Provides operations to construct, parse, and serialize a request for deleting a traffic policy, including converting between XML, query parameters, and JSON formats. Works with string identifiers, integer versions, and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 350,
      "index": 106,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckResponse",
      "description": "Provides functions to construct, parse, and serialize health check response data. Works with XML nodes, AWS query structures, and JSON representations. Used to generate HTTP responses for health check endpoints and validate incoming XML data from client requests.",
      "description_length": 263,
      "index": 107,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckStatusRequest",
      "description": "Provides functions to construct, parse, and serialize a request for retrieving health check status, including converting between XML, query parameters, and JSON formats. Works with string-based health check identifiers and structured data types for request representation. Used to generate HTTP requests for health status queries in AWS Route 53 interactions.",
      "description_length": 359,
      "index": 108,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateTrafficPolicyInstanceRequest",
      "description": "Creates and manipulates a request structure for defining a traffic policy instance, handling DNS configuration with specific parameters like hosted zone ID, domain name, TTL, policy ID, and version. Operates on a record type containing string, integer, and long values. Used to generate HTTP query parameters, JSON representations, and parse XML input for API interactions.",
      "description_length": 373,
      "index": 109,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListVPCAssociationAuthorizationsRequest",
      "description": "Provides functions to construct, parse, and serialize request objects for listing VPC association authorizations, including handling pagination parameters. Works with string-based identifiers and AWS query and JSON formats. Used to generate HTTP requests for querying DNS zone authorization data in AWS Route 53.",
      "description_length": 312,
      "index": 110,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTagsForResourceRequest",
      "description": "Provides functions to construct, parse, and serialize requests for listing tags associated with a specific resource. Works with resource type and ID, using custom types for structured data. Used to generate HTTP queries and JSON payloads for API interactions.",
      "description_length": 259,
      "index": 111,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneNotEmpty",
      "description": "Provides operations to create, parse, and serialize a structure representing a non-empty hosted zone, including converting to and from JSON and query parameters. Works with a custom record type containing optional message information. Used to validate and transmit hosted zone data in AWS API interactions.",
      "description_length": 306,
      "index": 112,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetCheckerIpRangesRequest",
      "description": "Provides functions to create, parse, and serialize request data for fetching IP ranges from a checker service, working with unit types and AWS query structures. Converts request data into query parameters and JSON representations for API interactions. Parses incoming data into a structured format suitable for processing IP range information.",
      "description_length": 343,
      "index": 113,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckLastFailureReasonRequest",
      "description": "Provides functions to construct, parse, and serialize a request for the last failure reason of a health check, using a string identifier. Works with AWS query parameters, XML nodes, and JSON structures. Used to generate HTTP requests and process responses from AWS health check APIs.",
      "description_length": 283,
      "index": 114,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetTrafficPolicyResponse",
      "description": "Provides functions to construct, parse, and serialize traffic policy responses. Works with `TrafficPolicy.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to convert between XML-based API responses and internal representations, and to prepare data for JSON serialization or HTTP queries.",
      "description_length": 333,
      "index": 115,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.LimitsExceeded",
      "description": "Provides a constructor for creating error instances with optional messages, a parser for XML nodes into error representations, and conversions to query parameters, JSON format, and from JSON. Works with XML nodes, query parameters, and JSON structures. Used to handle and serialize AWS API response errors that indicate request limits have been exceeded.",
      "description_length": 354,
      "index": 116,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.PublicZoneVPCAssociation",
      "description": "Provides functions to construct, parse, and serialize data structures representing VPC associations in a public zone, including conversion to query parameters, JSON, and parsing from XML nodes. Works with a structured type containing optional message fields and internal state. Used to generate API requests and handle responses in AWS-related workflows.",
      "description_length": 354,
      "index": 117,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TooManyTrafficPolicyVersionsForCurrentPolicy",
      "description": "Provides operations to construct, parse, and serialize error data related to exceeding the allowed number of traffic policy versions. Works with a custom type representing the error state, including a message field. Used to handle AWS Route 53 API responses where policy version limits are exceeded.",
      "description_length": 299,
      "index": 118,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.NoSuchTrafficPolicyInstance",
      "description": "Provides operations to construct, parse, and serialize error responses related to invalid traffic policy instances, including converting between XML nodes, query parameters, and JSON representations. Works with custom error types encapsulating optional message strings. Used to handle AWS API errors where a specified traffic policy instance does not exist.",
      "description_length": 357,
      "index": 119,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckRequest",
      "description": "Constructs a request object from a health check ID, parses XML nodes into the request structure, converts the request to a query string, serializes to JSON, and deserializes from JSON. Works with string-based health check identifiers and XML/JSON data formats. Used to generate and process HTTP requests for retrieving health check details in AWS SDK interactions.",
      "description_length": 364,
      "index": 120,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.InvalidPaginationToken",
      "description": "Represents an invalid pagination token error, providing creation, XML parsing, query construction, and JSON serialization/deserialization. Works with AWS query and JSON structures, and string messages. Used to handle pagination errors in API responses by converting between XML nodes, JSON, and query parameters.",
      "description_length": 312,
      "index": 121,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListResourceRecordSetsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing resource record sets, including setting hosted zone ID, pagination parameters, and record filters. Works with types such as hosted zone IDs, record names, record types, and pagination limits. Used to generate HTTP queries and JSON payloads for DNS management APIs, and to parse XML responses into request structures.",
      "description_length": 392,
      "index": 122,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TestDNSAnswerRequest",
      "description": "Constructs a request for DNS answer validation using a hosted zone ID, record name, and type, with optional parameters for resolver IP and client subnet details. Processes XML nodes into a structured request and serializes/deserializes the request to and from query and JSON formats. Used to generate and parse DNS validation requests for testing or integration with DNS services.",
      "description_length": 380,
      "index": 123,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.NoSuchChange",
      "description": "Provides operations to create, parse, and serialize a change object with an optional message. Works with XML nodes, query parameters, and JSON structures. Used to construct and validate change representations from XML input or convert them to JSON for API interactions.",
      "description_length": 269,
      "index": 124,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateQueryLoggingConfigRequest",
      "description": "Creates a request object for logging DNS queries, accepting a hosted zone ID and a CloudWatch Logs log group ARN. It supports parsing XML nodes into the request structure, converting the request to AWS query parameters, and serializing/deserializing to and from JSON. Used to configure DNS query logging in AWS Route 53.",
      "description_length": 320,
      "index": 125,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetReusableDelegationSetResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing a reusable delegation set, including conversion to and from JSON and query parameters. Works with the `DelegationSet.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses in AWS Route 53 operations involving delegation sets.",
      "description_length": 370,
      "index": 126,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChangeResourceRecordSetsResponse",
      "description": "Provides operations to construct, parse, and serialize a DNS change response, including converting between XML nodes, query parameters, and JSON representations. Works with structured data types such as `ChangeInfo.t` and AWS-specific query and JSON formats. Used to process and generate responses for DNS record set updates in AWS Route 53.",
      "description_length": 341,
      "index": 127,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChangeTagsForResourceResponse",
      "description": "Provides functions to create, parse, and serialize responses related to resource tag changes, working with the unit type to represent empty or placeholder values. Includes parsing from various input types, conversion to AWS query parameters, and JSON serialization. Used to handle API responses that indicate successful tag modifications without additional data.",
      "description_length": 362,
      "index": 128,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.InvalidChangeBatch",
      "description": "Provides operations to construct, parse, and serialize data structures representing invalid change batches, including creating instances with optional error messages, parsing XML nodes into batch objects, and converting between query, JSON, and internal representations. Works with custom types such as error messages, strings, and JSON structures. Used to handle AWS API responses that include invalid DNS change batches, enabling structured error handling and data exchange.",
      "description_length": 476,
      "index": 129,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyInstancesByPolicyRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing traffic policy instances by policy, including setting parameters like traffic policy ID, version, and pagination markers. Works with types such as strings, integers, and custom record types for DNS record types. Used to generate HTTP queries and JSON payloads for API interactions with AWS Route 53.",
      "description_length": 375,
      "index": 130,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.QueryLoggingConfigAlreadyExists",
      "description": "Provides functions to create, parse, and serialize a configuration error type representing an already existing query logging configuration. Works with AWS query and JSON formats, as well as XML nodes. Used to handle and convert error states in AWS Route 53 query logging operations.",
      "description_length": 282,
      "index": 131,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetGeoLocationRequest",
      "description": "Encodes and decodes geographic location parameters using continent, country, and subdivision codes. Processes XML nodes into structured data and serializes to query strings and JSON formats. Used to construct and parse HTTP requests for geolocation-based API interactions.",
      "description_length": 272,
      "index": 132,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NotAuthorizedException",
      "description": "Provides constructors and parsers for handling AWS authorization errors, including creating instances from messages, parsing XML nodes, and serializing to query parameters and JSON. Works with AWS-specific types such as `String.t`, `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to process and represent AWS API responses indicating access denial.",
      "description_length": 354,
      "index": 133,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyVersionsRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing traffic policy versions, including setting an ID, pagination markers, and item limits. Works with string-based identifiers, pagination parameters, and AWS query and JSON formats. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 320,
      "index": 134,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetHostedZoneCountRequest",
      "description": "Provides operations to create, parse, and serialize a request for retrieving the count of hosted zones, working with the unit type to represent an empty request structure. Converts the request into an AWS query and a JSON structure for API communication. Used to generate standardized API calls for domain management systems.",
      "description_length": 325,
      "index": 135,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TooManyVPCAssociationAuthorizations",
      "description": "Provides functions to construct, parse, and serialize a structure representing an excessive number of VPC association authorizations, including conversion to query parameters, JSON, and parsing from XML nodes. Works with AWS-specific types such as strings, JSON values, and XML nodes. Used to handle error responses in AWS API interactions related to VPC configuration limits.",
      "description_length": 376,
      "index": 136,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.UpdateHealthCheckRequest",
      "description": "Provides functions to construct, parse, and serialize a request for updating a health check, including setting parameters like ID, version, IP address, port, and associated regions. Works with types such as strings, integers, booleans, lists, and custom structures like `ChildHealthCheckList` and `AlarmIdentifier`. Used to generate HTTP query parameters or JSON payloads for API calls updating DNS health check configurations.",
      "description_length": 427,
      "index": 137,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckCountResponse",
      "description": "Provides a constructor for a health check count response, a parser for XML nodes, and conversions to query parameters, JSON, and from JSON. Works with AWS long integers and JSON structures. Used to process and serialize health check count data from API responses.",
      "description_length": 263,
      "index": 138,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListVPCAssociationAuthorizationsResponse",
      "description": "Provides functions to construct, parse, and serialize responses containing VPC association authorizations for a hosted zone, including handling pagination and JSON serialization. Works with AWS string types, VPC collections, and JSON structures. Used to process API responses from AWS Route 53 when listing authorized VPCs for a specific hosted zone.",
      "description_length": 350,
      "index": 139,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateVPCAssociationAuthorizationResponse",
      "description": "Provides functions to construct, parse, and serialize a response structure containing a hosted zone ID and a VPC, using XML and JSON formats. Works with AWS-specific types such as `hosted_zone_id` and `VPC.t`. Used to generate and process responses for authorizing VPC associations in DNS services.",
      "description_length": 298,
      "index": 140,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetQueryLoggingConfigRequest",
      "description": "Provides operations to construct, parse, and serialize a request for retrieving query logging configurations, including converting between XML, JSON, and query string formats. Works with string identifiers and structured data types representing AWS request parameters. Used to generate HTTP requests for AWS Route 53 query logging configuration retrieval.",
      "description_length": 355,
      "index": 141,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchHostedZone",
      "description": "Provides operations to create, parse, and serialize error data related to missing hosted zones in AWS Route 53. Works with a custom type representing error details, including optional message fields. Used to handle API responses and construct queries or JSON payloads for error conditions.",
      "description_length": 289,
      "index": 142,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicyAlreadyExists",
      "description": "Provides operations to construct, parse, and serialize error responses related to duplicate traffic policies, including creating instances with optional messages, converting to query parameters, and handling JSON encoding and decoding. Works with AWS-specific types such as strings, JSON values, and XML nodes. Used in AWS API interactions to manage and propagate errors when a traffic policy already exists.",
      "description_length": 408,
      "index": 143,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteReusableDelegationSetRequest",
      "description": "Provides operations to construct, parse, and serialize a request for deleting a reusable delegation set, including converting between XML, query, and JSON formats. Works with string identifiers and structured data types for AWS API interactions. Used to generate and process API requests in systems handling DNS configuration management.",
      "description_length": 337,
      "index": 144,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.InvalidTrafficPolicyDocument",
      "description": "Provides functions to construct, parse, and serialize traffic policy documents, including converting between XML nodes, query parameters, and JSON representations. Works with XML node structures, query parameters, and JSON objects. Used to validate and process AWS Route 53 traffic policy documents during API interactions.",
      "description_length": 323,
      "index": 145,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.VPCAssociationNotFound",
      "description": "Provides functions to create, parse, and serialize an error type representing a VPC association not found, including conversion to query parameters, JSON, and from JSON. Works with AWS-specific data types such as strings, query parameters, and JSON structures. Used to handle and transmit error information in AWS API interactions where a VPC association is missing.",
      "description_length": 366,
      "index": 146,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ConflictingDomainExists",
      "description": "Provides operations to create, parse, and serialize a domain conflict error, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as `Aws.BaseTypes.String.t`, `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle domain existence validation in AWS API interactions, such as when checking for duplicate domain names in route53.",
      "description_length": 402,
      "index": 147,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchCloudWatchLogsLogGroup",
      "description": "Provides operations to construct, parse, and serialize a log group error related to missing CloudWatch Logs, including creating an instance with an optional message, parsing XML nodes, and converting to query parameters or JSON format. Works with the `t` type, which encapsulates error details and a message. Used to handle and transmit errors in AWS CloudWatch Logs interactions, such as when a specified log group does not exist.",
      "description_length": 431,
      "index": 148,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTagsForResourcesRequest",
      "description": "Provides functions to construct, parse, and serialize requests for listing tags on AWS resources, including creating instances from resource type and IDs, parsing XML responses, and converting to query and JSON formats. Works with types representing resource types, resource IDs, and structured JSON data. Used to generate HTTP requests and process responses when querying AWS for resource tags.",
      "description_length": 395,
      "index": 149,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListHostedZonesRequest",
      "description": "Provides operations to construct, parse, and serialize request data for listing hosted zones, including setting pagination parameters and delegation set filters. Works with string-based markers, item limits, and delegation set identifiers. Used to generate HTTP query parameters and JSON payloads for API interactions with DNS management services.",
      "description_length": 347,
      "index": 150,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListHostedZonesResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing a list of hosted zones, including handling pagination parameters like marker and max_items. Works with custom types for hosted zones, strings, and boolean flags, as well as AWS-specific data structures for queries and JSON. Used to process API responses from services like Route 53, enabling structured access to zone listings and pagination details.",
      "description_length": 426,
      "index": 151,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateReusableDelegationSetRequest",
      "description": "Creates a request structure for delegating a reusable set of DNS records, supporting parsing from XML, conversion to query parameters, and serialization to JSON. Works with string-based identifiers and structured request data. Used to generate and process delegation setup requests in AWS Route 53 interactions.",
      "description_length": 311,
      "index": 152,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTagsForResourceResponse",
      "description": "Provides functions to construct, parse, and serialize a resource tag response, including converting between XML nodes, JSON, and query parameters. Works with `ResourceTagSet.t` and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to handle AWS API responses for listing tags associated with a resource.",
      "description_length": 324,
      "index": 153,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateHealthCheckResponse",
      "description": "Provides a constructor for building health check response objects using a health check record and a location string, along with parsing from XML nodes and serialization to query parameters, JSON associations, and deserialization from JSON. Works with `HealthCheck.t` and AWS-specific string and JSON types. Used to generate and process HTTP response payloads for health check endpoints.",
      "description_length": 386,
      "index": 154,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetChangeResponse",
      "description": "Provides operations to construct, parse, and serialize response data for change operations, working with `ChangeInfo.t` and XML or JSON structures. Includes parsing from XML nodes, conversion to AWS query parameters, and encoding/decoding with JSON. Used to process and format responses from AWS service interactions involving resource changes.",
      "description_length": 344,
      "index": 155,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.InvalidVPCId",
      "description": "Provides operations to create, parse, and serialize an error type representing an invalid VPC ID, including conversion to query parameters, JSON representation, and deserialization from JSON. Works with AWS-specific types such as strings, XML nodes, and JSON structures. Used to handle and propagate errors in AWS API interactions where a VPC ID is invalid.",
      "description_length": 357,
      "index": 156,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListGeoLocationsResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a list of geographic location details, including handling pagination tokens for continents, countries, and subdivisions. Works with custom types such as GeoLocationDetailsList.t and AWS base types for boolean and string values. Used to generate HTTP query parameters, JSON representations, and parse XML responses from AWS services.",
      "description_length": 409,
      "index": 157,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.UpdateTrafficPolicyInstanceRequest",
      "description": "Provides operations to construct, parse, and serialize a request for updating a traffic policy instance, including converting between XML, query parameters, and JSON formats. Works with string, long, and integer types to represent identifiers and version numbers. Used to generate HTTP requests for modifying DNS traffic policies in AWS Route 53.",
      "description_length": 346,
      "index": 158,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHostedZoneLimitResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a hosted zone limit and its current count. Works with the `HostedZoneLimit.t` type and AWS-specific data structures like `Aws.BaseTypes.Long.t` and `Aws.Query.t`. Used to process API responses from AWS Route 53 when retrieving limits on hosted zones.",
      "description_length": 327,
      "index": 159,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListHealthChecksResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a list of health checks, including handling pagination parameters like marker and max_items. Works with custom types for health checks, strings, booleans, and JSON structures. Used to generate HTTP query parameters from a response and convert between XML and JSON representations during API interactions.",
      "description_length": 381,
      "index": 160,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.IncompatibleVersion",
      "description": "Provides operations to construct, parse, serialize, and deserialize an error type representing incompatible version mismatches. Works with XML nodes, query parameters, and JSON structures. Used to handle version incompatibility responses in AWS API interactions.",
      "description_length": 262,
      "index": 161,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListQueryLoggingConfigsResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing DNS query logging configurations, including handling pagination tokens. Works with `QueryLoggingConfigs.t` and AWS-specific types for XML and JSON serialization. Used to generate HTTP query parameters and JSON payloads for API responses.",
      "description_length": 313,
      "index": 162,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.CreateTrafficPolicyInstanceResponse",
      "description": "Provides functions to construct, parse, and serialize a traffic policy instance response, including creating an instance with a specific policy and location, parsing XML nodes into the structure, and converting between JSON and query formats. Works with `TrafficPolicyInstance.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to generate HTTP responses and handle API interactions in AWS SDK implementations.",
      "description_length": 438,
      "index": 163,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckInUse",
      "description": "Provides operations to create, parse, and serialize health check status data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional message fields and internal state. Used to process and generate health check responses in AWS API interactions.",
      "description_length": 322,
      "index": 164,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TooManyHealthChecks",
      "description": "Provides operations to create, parse, and serialize health check configurations using XML and JSON formats. Works with XML node structures and JSON values to convert between internal representations and AWS query parameters. Used to generate and interpret health check data in AWS API interactions.",
      "description_length": 298,
      "index": 165,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetTrafficPolicyInstanceCountResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a traffic policy instance count. Works with integer values and XML or JSON data structures. Used to generate HTTP query parameters from a response or convert between XML nodes and structured data.",
      "description_length": 273,
      "index": 166,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteHostedZoneRequest",
      "description": "Provides functions to construct, parse, and serialize a request for deleting a hosted zone, including converting between XML, query parameters, and JSON formats. Works with string identifiers and structured data types representing AWS API requests. Used to generate HTTP requests and process responses in AWS Route 53 interactions.",
      "description_length": 331,
      "index": 167,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.UpdateHealthCheckResponse",
      "description": "Provides functions to construct, parse, and serialize health check response data. Works with `HealthCheck.t` and XML or JSON structures for data exchange. Used to generate AWS query parameters and JSON representations from parsed XML responses.",
      "description_length": 244,
      "index": 168,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChangeTagsForResourceRequest",
      "description": "Provides operations to construct, parse, and serialize requests for changing tags on AWS resources. Works with specific types such as resource type identifiers, resource IDs, tag lists, and tag key lists. Used to generate HTTP query parameters and JSON payloads for API calls that modify resource tags.",
      "description_length": 302,
      "index": 169,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateQueryLoggingConfigResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing a query logging configuration, including creating an instance from a configuration and location, parsing XML nodes, and converting to AWS query and JSON formats. Works with `QueryLoggingConfig.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Query.t`. Used to generate and process response data for AWS Route 53 query logging configurations.",
      "description_length": 433,
      "index": 170,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TooManyTrafficPolicies",
      "description": "Provides operations to construct, parse, and serialize traffic policy data structures, including creating instances with optional messages, parsing XML nodes into policy objects, and converting between JSON and query formats. Works with custom types representing traffic policies and AWS-specific data structures like JSON and query parameters. Used to handle policy configuration in AWS API interactions, such as validating and transmitting policy data during service requests.",
      "description_length": 478,
      "index": 171,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ListQueryLoggingConfigsRequest",
      "description": "Provides functions to construct, parse, and serialize request parameters for querying logging configurations, including setting hosted zone ID, pagination tokens, and result limits. Works with string-based identifiers and pagination controls. Used to generate HTTP query strings and JSON payloads for API interactions.",
      "description_length": 318,
      "index": 172,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DelegationSetNotAvailable",
      "description": "Provides operations to create, parse, and serialize a delegation set error structure, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to handle delegation set unavailability errors in AWS API interactions.",
      "description_length": 327,
      "index": 173,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteQueryLoggingConfigRequest",
      "description": "Provides operations to construct, parse, and serialize a request for deleting a query logging configuration, including converting between XML, query parameters, and JSON formats. Works with string identifiers and AWS-specific data structures like `Aws.Query.t` and `Aws.Json.t`. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 344,
      "index": 174,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetReusableDelegationSetLimitRequest",
      "description": "Provides operations to construct, parse, and serialize a request for retrieving limits on reusable delegation sets, including converting between XML, query parameters, and JSON formats. Works with custom types for delegation set IDs and limit types, along with standard string and JSON representations. Used to generate HTTP requests for API endpoints that enforce limits on delegation set configurations.",
      "description_length": 405,
      "index": 175,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListHostedZonesByVPCRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing hosted zones associated with a specific VPC, including handling pagination parameters. Works with string-based VPC identifiers, region types, and AWS query and JSON formats. Used to generate API-compatible requests for querying DNS configurations in a VPC environment.",
      "description_length": 344,
      "index": 176,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTagsForResourcesResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing resource tag sets. Works with `ResourceTagSetList.t` and AWS query and JSON formats. Used to convert XML responses from AWS API calls into structured data and back for API interactions.",
      "description_length": 261,
      "index": 177,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.AssociateVPCWithHostedZoneRequest",
      "description": "Provides functions to construct, parse, and serialize requests for associating a VPC with a hosted zone, including creating instances from JSON or XML, and generating query parameters. Works with AWS VPC objects and hosted zone identifiers. Used to prepare API requests for AWS Route 53 operations.",
      "description_length": 298,
      "index": 178,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetHostedZoneCountResponse",
      "description": "Provides a constructor for creating a response with a hosted zone count, a parser for XML nodes, and conversions to query parameters, JSON, and from JSON. Works with AWS response data structured as a record containing a long integer for the count. Used to process and serialize AWS Route 53 hosted zone count responses in API interactions.",
      "description_length": 339,
      "index": 179,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.TooManyHostedZones",
      "description": "Provides operations to create, parse, and serialize a structure representing an error related to exceeding the maximum number of hosted zones. Works with a custom type containing optional error messages and handles XML and JSON serialization. Used to manage AWS API responses where the limit of hosted zones is exceeded.",
      "description_length": 320,
      "index": 180,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DisassociateVPCFromHostedZoneRequest",
      "description": "Provides functions to construct, parse, and serialize requests for disassociating a VPC from a hosted zone, including converting between XML, query parameters, and JSON formats. Works with types representing hosted zone IDs, VPC configurations, and JSON structures. Used to generate API-compatible request payloads for DNS management systems.",
      "description_length": 342,
      "index": 181,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetTrafficPolicyInstanceCountRequest",
      "description": "Provides operations to create, parse, and serialize requests for retrieving traffic policy instance counts, working with unit types and AWS query structures. Converts request data into query parameters and JSON representations for API interactions. Used to prepare and process requests in AWS SDK integrations.",
      "description_length": 310,
      "index": 182,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListGeoLocationsRequest",
      "description": "Provides functions to construct, parse, and serialize request parameters for listing geographic locations, including setting start points by continent, country, and subdivision codes, and limiting results. Works with string-based identifiers and AWS query and JSON formats. Used to generate HTTP requests and process XML responses in API interactions.",
      "description_length": 351,
      "index": 183,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyInstancesByHostedZoneRequest",
      "description": "Provides functions to construct, parse, and serialize requests for listing traffic policy instances associated with a specific hosted zone, including handling pagination and filtering by instance name, type, and limit. Works with types such as hosted zone IDs, DNS record types, and pagination markers. Used to generate HTTP queries and JSON payloads for API interactions with Amazon Route 53.",
      "description_length": 393,
      "index": 184,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateReusableDelegationSetResponse",
      "description": "Provides functions to construct, parse, and serialize a response containing a delegation set, including creating an instance with a specific delegation set and location, converting to and from XML and JSON formats, and generating query parameters. Works with `DelegationSet.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to generate HTTP responses in AWS SDK interactions, such as when creating a reusable delegation set in Route 53.",
      "description_length": 465,
      "index": 185,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetAccountLimitResponse",
      "description": "Provides operations to construct, parse, and serialize account limit data, including creating instances from limit and count values, parsing XML nodes, and converting to query and JSON formats. Works with `AccountLimit.t` and `Aws.BaseTypes.Long.t` for representing account limits and numeric counts. Used to process API responses that return account usage limits and their current counts.",
      "description_length": 389,
      "index": 186,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DisassociateVPCFromHostedZoneResponse",
      "description": "Provides operations to construct, parse, and serialize a response structure containing a change information object. Works with `ChangeInfo.t` and AWS query/json formats. Used to generate HTTP requests and process XML responses in DNS management workflows.",
      "description_length": 255,
      "index": 187,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListResourceRecordSetsResponse",
      "description": "Provides operations to construct, parse, and serialize DNS resource record set responses, including handling truncation and pagination details. Works with custom types for resource record sets, boolean flags, and DNS record metadata. Used to generate HTTP query parameters, JSON representations, and parse XML responses from DNS API calls.",
      "description_length": 339,
      "index": 188,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPoliciesRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing traffic policies, including setting a marker for pagination and limiting results. Works with string-based identifiers and AWS query and JSON formats. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 291,
      "index": 189,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchGeoLocation",
      "description": "Provides operations to construct, parse, and serialize error objects related to invalid geographic locations. Works with a custom record type containing optional message information. Used to generate AWS query parameters and JSON representations for error responses in location-based API interactions.",
      "description_length": 301,
      "index": 190,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.UpdateTrafficPolicyCommentRequest",
      "description": "Provides operations to construct, parse, and serialize a request for updating a traffic policy comment, including converting between XML, query parameters, and JSON formats. Works with string and integer types for policy identifiers, versions, and comments. Used to generate HTTP requests for modifying DNS traffic policy details in AWS Route 53.",
      "description_length": 346,
      "index": 191,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.UpdateTrafficPolicyInstanceResponse",
      "description": "Provides functions to construct, parse, and serialize traffic policy instance responses, including converting between XML nodes, query parameters, and JSON representations. Works with the TrafficPolicyInstance.t type and AWS-specific data structures like Aws.Query.t and Aws.Json.t. Used to process and format responses from AWS Route 53 API interactions.",
      "description_length": 355,
      "index": 192,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DeleteVPCAssociationAuthorizationResponse",
      "description": "Provides functions to create, parse, and serialize responses related to VPC association authorization removal, working with unit types and AWS query structures. Includes conversion to and from JSON format for interoperability. Used to handle API response data in AWS SDK interactions.",
      "description_length": 284,
      "index": 193,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHealthCheckCountRequest",
      "description": "Provides functions to create, parse, and serialize a health check count request, working with the unit type. It converts the request into an AWS query and a JSON structure, and can reconstruct the request from JSON. Used to prepare and process health check count queries in AWS API interactions.",
      "description_length": 295,
      "index": 194,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.InsufficientCloudWatchLogsResourcePolicy",
      "description": "Provides operations to construct, parse, and serialize a CloudWatch Logs resource policy, including creating an instance with an optional message, parsing XML nodes into the policy structure, and converting between JSON and query formats. Works with AWS-specific types such as strings, JSON values, and query parameters. Used to generate and process policy configurations for logging resources in AWS.",
      "description_length": 401,
      "index": 195,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateTrafficPolicyVersionRequest",
      "description": "Provides operations to construct, parse, and serialize traffic policy version data, including creating a structured representation from XML nodes, converting to query parameters, and serializing to JSON. Works with string-based identifiers, policy documents, and optional comments. Used to generate and process AWS Route 53 traffic policy version requests in API interactions.",
      "description_length": 376,
      "index": 196,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DelegationSetInUse",
      "description": "Provides operations to create, parse, and serialize delegation set data, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as strings, query structures, and JSON values. Used to handle delegation set information in AWS API interactions, such as parsing responses from S3 or Route 53.",
      "description_length": 352,
      "index": 197,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyInstancesRequest",
      "description": "Provides operations to construct, parse, and serialize request data for listing traffic policy instances, including setting markers for pagination and filtering by instance name, type, and maximum items. Works with string and record types representing DNS record types and query parameters. Used to generate HTTP queries and JSON payloads for API interactions with DNS management services.",
      "description_length": 389,
      "index": 198,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.GetReusableDelegationSetRequest",
      "description": "Provides operations to construct, parse, and serialize a request for a reusable delegation set, including converting between XML nodes, query parameters, and JSON representations. Works with string identifiers and structured request data. Used to generate HTTP requests for AWS Route 53 API interactions.",
      "description_length": 304,
      "index": 199,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicyInstanceAlreadyExists",
      "description": "Provides functions to create, parse, and serialize error instances with a message, working with XML nodes and JSON structures. Supports converting error data into query parameters and reconstructing it from JSON. Used to handle duplicate traffic policy instance errors in AWS API interactions.",
      "description_length": 293,
      "index": 200,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteHostedZoneResponse",
      "description": "Provides operations to construct, parse, and serialize responses for deleting a hosted zone, including creating a response from a change info, parsing XML nodes, generating AWS query parameters, and converting to and from JSON. Works with `ChangeInfo.t` and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle API responses in AWS Route 53 interactions, such as confirming deletion status and extracting relevant metadata.",
      "description_length": 468,
      "index": 201,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteTrafficPolicyResponse",
      "description": "Provides functions to create, parse, and serialize responses for deleting a traffic policy, working with the unit type and AWS query and JSON formats. Includes a constructor, a parser that returns optional unit values, and methods to convert between data structures and AWS-compatible representations. Used to handle HTTP response transformations in AWS API interactions.",
      "description_length": 371,
      "index": 202,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyInstancesByHostedZoneResponse",
      "description": "Provides functions to construct, parse, and serialize responses containing a list of traffic policy instances, including markers for pagination and truncation status. Works with custom types for traffic policy instances, string-based markers, and DNS record types. Used to process API responses from Amazon Route 53, enabling efficient handling of large sets of traffic policy instances.",
      "description_length": 387,
      "index": 203,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchHealthCheck",
      "description": "Provides operations to create, parse, and serialize health check data structures. Works with AWS-specific types including strings, XML nodes, and JSON values. Used to construct and validate health check configurations from XML responses and convert them into query parameters or JSON for API interactions.",
      "description_length": 305,
      "index": 204,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchTrafficPolicy",
      "description": "Provides operations to create, parse, and serialize a traffic policy representation, including converting between XML nodes, query parameters, and JSON structures. Works with a custom type `t` that encapsulates policy details and optional error messages. Used to handle AWS-specific traffic policy data during request construction and response parsing.",
      "description_length": 352,
      "index": 205,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DelegationSetNotReusable",
      "description": "Provides operations to create, parse, and serialize delegation set data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured type containing optional message fields and internal state. Used to handle AWS delegation set configurations in request and response parsing workflows.",
      "description_length": 332,
      "index": 206,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetReusableDelegationSetLimitResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a reusable delegation set limit and a count. Works with `ReusableDelegationSetLimit.t` and `Aws.BaseTypes.Long.t` to represent limit values and numerical counts. Used to format API responses for AWS services that track delegation set usage limits.",
      "description_length": 324,
      "index": 207,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckVersionMismatch",
      "description": "Provides functions to create, parse, and serialize a version mismatch error structure, including converting between XML nodes, query parameters, and JSON representations. Works with a record type containing optional message information. Used to handle and transmit version mismatch errors in AWS-related operations.",
      "description_length": 315,
      "index": 208,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.InvalidDomainName",
      "description": "Provides operations to create, parse, serialize, and deserialize domain name validation errors. Works with a custom type representing invalid domain name errors and XML/JSON data structures. Used to handle AWS API responses where domain names fail validation checks.",
      "description_length": 266,
      "index": 209,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListReusableDelegationSetsResponse",
      "description": "Provides operations to construct, parse, and serialize responses containing delegation sets, including handling pagination parameters like marker and max_items. Works with custom types for delegation sets, strings, and boolean values, as well as AWS-specific JSON and query structures. Used to generate HTTP query parameters and JSON payloads for API responses involving reusable delegation sets.",
      "description_length": 396,
      "index": 210,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.DeleteHealthCheckResponse",
      "description": "Provides operations to create, parse, and serialize responses for deleting health checks, including converting between internal representations and query parameters or JSON. Works with the unit type and generic input values. Used to generate AWS API-compatible query strings and handle JSON responses in networked applications.",
      "description_length": 327,
      "index": 211,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.UpdateHostedZoneCommentResponse",
      "description": "Provides functions to construct, parse, and serialize a response for updating a hosted zone's comment, working with `HostedZone.t` and AWS query/json formats. Includes parsing from XML nodes, conversion to AWS query parameters, and encoding/decoding from JSON. Used to handle DNS configuration updates in AWS Route 53 interactions.",
      "description_length": 331,
      "index": 212,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.NoSuchQueryLoggingConfig",
      "description": "Provides operations to create, parse, and serialize logging configuration data, including converting between XML nodes, query parameters, and JSON representations. Works with a structured record type containing optional message fields. Used to handle AWS query logging settings during request construction and response parsing.",
      "description_length": 327,
      "index": 213,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.TrafficPolicyInUse",
      "description": "Provides operations to construct, parse, and serialize traffic policy data, including converting between XML nodes, query parameters, and JSON representations. Works with structured data representing active traffic policies, including optional message fields. Used to process and transmit policy configurations in AWS-related workflows.",
      "description_length": 336,
      "index": 214,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.UpdateTrafficPolicyCommentResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing a traffic policy comment, including converting between XML, query parameters, and JSON formats. Works with the `TrafficPolicy.t` type and AWS-specific data structures like `Ezxmlm.nodes`, `Aws.Query.t`, and `Aws.Json.t`. Used to handle HTTP response data in AWS Route 53 API interactions.",
      "description_length": 365,
      "index": 215,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateHealthCheckRequest",
      "description": "Creates a structured health check request using a caller reference and configuration. Operates on `HealthCheckConfig.t` and produces a `t` type representing the request. Parses XML nodes into the request format, serializes to query parameters, and converts to and from JSON for API interactions.",
      "description_length": 295,
      "index": 216,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateHostedZoneRequest",
      "description": "Creates and manipulates a request structure for AWS Route 53 hosted zone creation, supporting DNS name, VPC configuration, and caller reference. Operates on custom types including DNS names, VPC configurations, and JSON/Query representations. Used to generate API-compatible requests for setting up new hosted zones with specific configurations.",
      "description_length": 345,
      "index": 217,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DeleteTrafficPolicyInstanceRequest",
      "description": "Provides operations to construct, parse, and serialize a request for deleting a traffic policy instance, including converting between XML nodes, query parameters, and JSON representations. Works with string identifiers and structured data types for AWS API interactions. Used to generate HTTP requests and process responses in DNS management workflows.",
      "description_length": 352,
      "index": 218,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetTrafficPolicyRequest",
      "description": "Provides operations to construct, parse, and serialize a request for retrieving a traffic policy, including converting between XML, query parameters, and JSON formats. Works with string identifiers, integers for version numbers, and AWS-specific data types for XML and JSON. Used to generate HTTP requests for querying traffic policy configurations in AWS Route 53.",
      "description_length": 365,
      "index": 219,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateTrafficPolicyVersionResponse",
      "description": "Provides functions to construct, parse, and serialize a traffic policy version response, including converting between XML nodes, query parameters, and JSON representations. Works with `TrafficPolicy.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to generate HTTP responses and handle API interactions in AWS Route 53 traffic policy workflows.",
      "description_length": 374,
      "index": 220,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.CreateTrafficPolicyRequest",
      "description": "Provides operations to construct, parse, and serialize traffic policy requests, including creating instances from name and document, parsing XML nodes, and converting to query and JSON formats. Works with string-based data and structured JSON representations. Used to generate and process AWS Route 53 traffic policy configurations.",
      "description_length": 332,
      "index": 221,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.DeleteHealthCheckRequest",
      "description": "Provides operations to construct, parse, and serialize a request for deleting a health check, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to generate HTTP requests for removing health check configurations in AWS Route 53.",
      "description_length": 347,
      "index": 222,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.LastVPCAssociation",
      "description": "Provides operations to construct, parse, and serialize a structure representing the last VPC association, including converting between XML nodes, query parameters, and JSON. Works with AWS-specific types such as strings, queries, and JSON values. Used to handle VPC association data in API requests and responses.",
      "description_length": 313,
      "index": 223,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPoliciesResponse",
      "description": "Provides operations to construct, parse, and serialize a response containing traffic policy summaries, including handling pagination markers and limits. Works with custom types for summaries, booleans, and strings, as well as AWS query and JSON formats. Used to generate HTTP responses and process XML input from API calls.",
      "description_length": 323,
      "index": 224,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.PriorRequestNotComplete",
      "description": "Provides operations to create, parse, and serialize a request state object with an optional message. Works with string-based messages and structured data formats like XML, query strings, and JSON. Used to handle incomplete request states in AWS API interactions, such as resuming or retrying failed operations.",
      "description_length": 310,
      "index": 225,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneNotPrivate",
      "description": "Provides operations to create, parse, and serialize error data related to non-private hosted zones, including converting between XML nodes, query parameters, and JSON representations. Works with custom error types encapsulating optional messages. Used to handle AWS Route 53 API responses indicating invalid or non-private hosted zone configurations.",
      "description_length": 350,
      "index": 226,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ChangeResourceRecordSetsRequest",
      "description": "Provides operations to construct, parse, and serialize a request for updating DNS resource records, including creating a request from a hosted zone ID and change batch, converting to query parameters, and handling JSON serialization and deserialization. Works with types such as hosted zone IDs, change batches, and JSON structures. Used to generate and process DNS update requests in AWS Route 53 interactions.",
      "description_length": 411,
      "index": 227,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.GetHostedZoneResponse",
      "description": "Provides functions to construct, parse, and serialize DNS hosted zone responses, including conversion to query parameters and JSON formats. Works with types representing DNS hosted zones, delegation sets, and VPC configurations. Used to process AWS Route 53 API responses and prepare data for HTTP requests or JSON serialization.",
      "description_length": 329,
      "index": 228,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateTrafficPolicyResponse",
      "description": "Provides functions to construct, parse, and serialize traffic policy response data. Works with `TrafficPolicy.t` and AWS-specific types like `Aws.BaseTypes.String.t` and `Aws.Query.t`. Used to generate HTTP query parameters and JSON representations from traffic policy configurations.",
      "description_length": 284,
      "index": 229,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.HostedZoneAlreadyExists",
      "description": "Provides functions to create, parse, and serialize error data related to duplicate hosted zones, working with AWS XML and JSON formats. Operates on a structured type containing error details and optional messages. Used to handle and transmit specific AWS API errors during zone creation attempts.",
      "description_length": 296,
      "index": 230,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ListTrafficPolicyInstancesByPolicyResponse",
      "description": "Provides functions to construct, parse, and serialize responses containing a list of traffic policy instances, including markers for pagination and truncation status. Works with custom types for traffic policy instances, string-based markers, and DNS record types. Used to process API responses from services that return paginated traffic policy data.",
      "description_length": 351,
      "index": 231,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.ListHostedZonesByNameRequest",
      "description": "Provides operations to construct, parse, and serialize requests for listing hosted zones by name, including setting DNS names, hosted zone IDs, and maximum items. Works with string-based parameters and AWS query and JSON formats. Used to generate API-compatible request structures for DNS management systems.",
      "description_length": 308,
      "index": 232,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.UpdateHostedZoneCommentRequest",
      "description": "Provides functions to construct, parse, and serialize requests for updating a hosted zone's comment, including parsing XML nodes, generating query parameters, and converting to and from JSON. Works with string-based identifiers and optional comment fields. Used to prepare and process AWS Route 53 API requests for modifying zone metadata.",
      "description_length": 339,
      "index": 233,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ConflictingTypes",
      "description": "Provides operations to create, parse, and serialize a structured data type representing configuration conflicts. Works with XML nodes, JSON values, and query parameters to convert between external representations and an internal record type. Used to process and exchange conflict data in AWS-related workflows.",
      "description_length": 310,
      "index": 234,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.CreateVPCAssociationAuthorizationRequest",
      "description": "Provides functions to construct, parse, and serialize a request for authorizing a VPC association with a hosted zone, including converting between XML, query parameters, and JSON formats. Works with a record type containing a hosted zone ID and a VPC structure. Used to generate API requests for DNS service configuration in cloud infrastructure setups.",
      "description_length": 353,
      "index": 235,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.ConcurrentModification",
      "description": "Provides operations to create, parse, and serialize a structure representing concurrent modification data, including converting between XML nodes, query parameters, and JSON. Works with a custom record type containing optional message fields. Used to handle AWS API responses related to resource conflicts during updates.",
      "description_length": 321,
      "index": 236,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types.HealthCheckAlreadyExists",
      "description": "Provides operations to create, parse, and serialize a health check error type, including converting between XML nodes, query parameters, and JSON representations. Works with AWS-specific types such as `Aws.BaseTypes.String.t` and `Aws.Json.t`. Used to handle and transmit error data in AWS API interactions.",
      "description_length": 307,
      "index": 237,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.Types.TestDNSAnswerResponse",
      "description": "Provides functions to construct, parse, and serialize DNS answer responses, including converting between XML nodes, query structures, and JSON representations. Works with types such as nameserver, record name, record type, record data, response code, and protocol. Used to generate mock DNS responses for testing networked applications.",
      "description_length": 336,
      "index": 238,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.AssociateVPCWithHostedZone",
      "description": "Converts input parameters into an HTTP request for associating a VPC with a hosted zone, setting necessary query parameters and encoding the request. Processes HTTP responses to extract structured output or specific error details based on AWS error formats. Operates on input and output types representing the API's request and response structures, and handles error parsing for AWS-specific error codes.",
      "description_length": 404,
      "index": 239,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ChangeResourceRecordSets",
      "description": "Handles AWS Route 53 change requests by converting input structures into HTTP requests and parsing HTTP responses into output structures. Processes input containing resource record set changes and outputs corresponding response data, including error handling for AWS-specific error formats. Used to update DNS records through the Route 53 API by encoding and decoding request and response payloads.",
      "description_length": 398,
      "index": 240,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ChangeTagsForResource",
      "description": "Handles AWS resource tag modification requests by converting input parameters into signed HTTP requests and parsing response data. Operates on structured request and error types specific to AWS API interactions. Used to apply tag changes to resources like EC2 instances by generating properly formatted API calls.",
      "description_length": 313,
      "index": 241,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateHealthCheck",
      "description": "Handles creation of health checks by converting input data into signed HTTP requests and parsing HTTP responses. Operates on structured input and output types representing AWS health check requests and responses, along with error types for handling API-specific failures. Processes HTTP bodies to extract results or errors, ensuring correct encoding and decoding of AWS API interactions.",
      "description_length": 387,
      "index": 242,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateHostedZone",
      "description": "Handles AWS Route 53 hosted zone creation by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with structured input and output records representing hosted zone requests and responses.",
      "description_length": 353,
      "index": 243,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateQueryLoggingConfig",
      "description": "Handles conversion between native input and HTTP requests for AWS query-based operations, encoding parameters into query format and setting required Action and Version fields. Processes HTTP responses, decoding them into native output or specific error types based on AWS service definitions. Parses AWS error responses into structured error representations, validating against expected status codes and error types.",
      "description_length": 416,
      "index": 244,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.CreateReusableDelegationSet",
      "description": "Handles conversion between native input and HTTP requests for creating a reusable delegation set, encoding parameters into query format and setting required action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS service conventions. Parses AWS error responses into structured error representations matching the API's defined error set.",
      "description_length": 396,
      "index": 245,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateTrafficPolicy",
      "description": "Handles conversion between native input and HTTP requests for creating traffic policies, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into API-specific errors, validating status codes and error types against defined specifications.",
      "description_length": 394,
      "index": 246,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateTrafficPolicyInstance",
      "description": "Handles conversion between native input and HTTP requests for creating a traffic policy instance, including query parameter encoding and signing. Processes HTTP responses to extract structured outputs or specific error representations. Parses AWS error responses into domain-specific error types based on HTTP status and XML content.",
      "description_length": 333,
      "index": 247,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateTrafficPolicyVersion",
      "description": "Handles conversion between native input and HTTP requests for creating a traffic policy version, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Works with AWS service identifiers and signature versions to ensure correct request signing and endpoint resolution.",
      "description_length": 394,
      "index": 248,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.CreateVPCAssociationAuthorization",
      "description": "Handles the conversion of request inputs into HTTP format for AWS VPC association authorization, including setting action and version parameters. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS API definitions. Works with native request and response types, as well as error representations specific to the API.",
      "description_length": 363,
      "index": 249,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DeleteHealthCheck",
      "description": "Handles AWS health check deletion by converting input to HTTP requests and parsing responses. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Works with AWS service identifiers and structured request/response formats.",
      "description_length": 301,
      "index": 250,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DeleteHostedZone",
      "description": "Handles AWS Route 53 hosted zone deletion by converting input parameters into signed HTTP requests and parsing response data. Processes query-encoded requests with specific action and version parameters, and maps AWS error responses to internal error types. Used to manage DNS infrastructure through programmatic zone removal.",
      "description_length": 326,
      "index": 251,
      "embedding_norm": 0.9999998807907104
    },
    {
      "module_path": "Aws_route53.DeleteQueryLoggingConfig",
      "description": "Handles conversion between native input and HTTP requests for deleting query logging configurations, setting necessary parameters like Action and Version. Processes HTTP responses to extract results or decode specific AWS errors. Works with input representing deletion requests and outputs void, using AWS error structures for failure cases.",
      "description_length": 341,
      "index": 252,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DeleteReusableDelegationSet",
      "description": "Handles conversion of input parameters into HTTP requests for AWS API calls, specifically encoding query parameters and setting action and version. Processes HTTP responses, decoding them into a unit type or specific error structures. Parses AWS error responses into native error types based on HTTP status codes and XML content.",
      "description_length": 329,
      "index": 253,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DeleteTrafficPolicy",
      "description": "Handles conversion of delete traffic policy requests into HTTP format and processes corresponding responses. Operates on input representing a traffic policy deletion request and outputs a unit type, with error handling for AWS-specific response formats. Parses HTTP error responses into structured error types based on status codes and XML content.",
      "description_length": 348,
      "index": 254,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DeleteTrafficPolicyInstance",
      "description": "Handles conversion of request parameters into an HTTP request for deleting a traffic policy instance, including encoding and setting action/version parameters. Processes HTTP responses to extract results or decode specific AWS error formats. Works with input structured as a traffic policy instance request and outputs no data, focusing on error handling for API-specific failures.",
      "description_length": 381,
      "index": 255,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DeleteVPCAssociationAuthorization",
      "description": "Handles AWS API requests for removing VPC association authorization by encoding and decoding HTTP requests and responses. Operates on input structures representing the authorization request and outputs no data upon success. Parses AWS error responses into internal error types for specific API interactions.",
      "description_length": 307,
      "index": 256,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.DisassociateVPCFromHostedZone",
      "description": "Handles AWS Route 53 VPC disassociation by encoding request parameters into HTTP queries and decoding response data. Processes input containing VPC and hosted zone identifiers, returning structured responses or specific error types. Parses HTTP error responses into domain-specific error representations based on status codes and XML content.",
      "description_length": 342,
      "index": 257,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Errors_internal",
      "description": "Provides functions to convert error values to HTTP status codes, string representations, and from strings, along with a list of common errors. Works with a custom error type `t` used to represent application-specific error conditions. Used to handle error serialization and mapping in API responses and logging.",
      "description_length": 311,
      "index": 258,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.GetAccountLimit",
      "description": "Handles conversion between native input and HTTP requests for AWS account limit queries, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into structured outputs or specific error types based on AWS XML format. Parses AWS error responses into internal error representations, validating status codes and error types against defined specifications.",
      "description_length": 407,
      "index": 259,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetChange",
      "description": "Handles conversion between native input and HTTP requests for AWS change operations, encoding parameters into query format and setting action and version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes and status codes into internal error representations for precise error handling.",
      "description_length": 365,
      "index": 260,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetCheckerIpRanges",
      "description": "Handles conversion between HTTP requests and native input for AWS API calls, specifically encoding parameters and setting action/version. Decodes HTTP responses into structured output or specific error types based on AWS XML format. Designed for interacting with AWS services requiring signature-based authentication and error parsing.",
      "description_length": 335,
      "index": 261,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetGeoLocation",
      "description": "Converts AWS GetGeoLocation requests into HTTP format and processes responses, handling query encoding and error parsing. Operates on request and response records specific to the GetGeoLocation API, including error structures from AWS XML. Used to integrate geolocation data retrieval into custom HTTP clients and error-handling workflows.",
      "description_length": 339,
      "index": 262,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetHealthCheck",
      "description": "Handles conversion between native input and HTTP requests for AWS health check operations, encoding parameters into query format and setting required action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS specifications. Parses AWS error responses into structured, service-specific error representations.",
      "description_length": 365,
      "index": 263,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetHealthCheckCount",
      "description": "Handles AWS health check count requests by converting input to HTTP requests and parsing responses. Processes AWS-specific error structures and ensures correct signing and encoding for service interactions. Works with AWS request and response types to retrieve health check counts from supported services.",
      "description_length": 305,
      "index": 264,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetHealthCheckLastFailureReason",
      "description": "Converts input parameters into an HTTP request for retrieving the last failure reason of an AWS health check, setting necessary query parameters and signing the call. Processes HTTP responses into structured output or specific error types based on AWS XML formatting. Parses AWS error codes and messages into internal error representations for precise failure handling.",
      "description_length": 369,
      "index": 265,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.GetHealthCheckStatus",
      "description": "Handles conversion between native input and HTTP requests for AWS health check status queries, encoding parameters into query format and setting required action and version fields. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into service-specific error representations, validating status codes and error types.",
      "description_length": 404,
      "index": 266,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.GetHostedZone",
      "description": "Converts AWS API input into HTTP requests and parses HTTP responses into structured outputs, handling query encoding and error decoding for DNS zone operations. Operates on specific request and response types defined in the AWS API, including error representations from XML. Used to retrieve hosted zone details from AWS Route 53 by constructing and processing HTTP calls.",
      "description_length": 372,
      "index": 267,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetHostedZoneCount",
      "description": "Handles AWS Route 53 request signing and HTTP conversion for retrieving hosted zone counts. Processes input with no parameters and returns a response containing the count of hosted zones. Decodes HTTP responses into structured output or specific error types based on AWS XML format.",
      "description_length": 282,
      "index": 268,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetHostedZoneLimit",
      "description": "Handles conversion between native input and HTTP requests for retrieving hosted zone limits, encoding parameters into query format and setting action and version. Processes HTTP responses to extract structured output or specific error types based on AWS XML deserialization. Works with input and output types defined in the module's types, and error types from the internal error module.",
      "description_length": 387,
      "index": 269,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetQueryLoggingConfig",
      "description": "Handles conversion between native input and HTTP requests for AWS query protocol operations, specifically encoding Action and Version parameters. Decodes HTTP responses into structured output or error types based on AWS XML format. Parses AWS error responses into service-specific error representations using HTTP status codes and error identifiers.",
      "description_length": 349,
      "index": 270,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetReusableDelegationSet",
      "description": "Converts input data into an HTTP request for retrieving a reusable delegation set, encoding parameters and setting action and version. Processes HTTP responses into structured output or specific error types based on AWS XML format. Handles error parsing by matching HTTP status codes with expected error structures from the API specification.",
      "description_length": 342,
      "index": 271,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.GetReusableDelegationSetLimit",
      "description": "Handles AWS request signing and HTTP conversion for retrieving reusable delegation set limits. Processes input containing request parameters and outputs structured responses, including error parsing for specific AWS error codes. Converts between native types and HTTP representations for direct API interaction.",
      "description_length": 311,
      "index": 272,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.GetTrafficPolicy",
      "description": "Converts AWS GetTrafficPolicy requests into HTTP format and handles response decoding. Processes input containing DNS policy details and outputs structured response data. Parses AWS error messages into specific error types based on HTTP status and XML content.",
      "description_length": 260,
      "index": 273,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.GetTrafficPolicyInstance",
      "description": "Handles AWS request signing and HTTP conversion for retrieving traffic policy instances. Converts input parameters into HTTP requests with proper query encoding and parses HTTP responses into structured output or specific error types. Works with AWS service identifiers, request inputs, and response outputs tailored to the Route 53 API.",
      "description_length": 337,
      "index": 274,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.GetTrafficPolicyInstanceCount",
      "description": "Handles AWS request signing and HTTP conversion for retrieving traffic policy instance counts. Processes input with no parameters and returns a structured response containing instance count data. Decodes HTTP responses and maps AWS error messages to internal error types based on status codes.",
      "description_length": 293,
      "index": 275,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.ListGeoLocations",
      "description": "Handles conversion between native input and HTTP requests for geographic location listing, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Parses AWS error codes into domain-specific errors, validating status codes and error types.",
      "description_length": 338,
      "index": 276,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.ListHealthChecks",
      "description": "Handles conversion between native input and HTTP requests for listing health checks, including proper query encoding and setting action/version parameters. Processes HTTP responses to extract structured output or specific error representations based on AWS XML deserialization. Parses AWS error codes and status codes into domain-specific error types for precise error handling.",
      "description_length": 378,
      "index": 277,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListHostedZones",
      "description": "Converts AWS request inputs into HTTP requests with proper query encoding and sets action and version parameters. Parses HTTP responses into structured output or specific error types based on AWS XML format. Handles error decoding by matching HTTP status codes with expected error structures from the API specification.",
      "description_length": 319,
      "index": 278,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListHostedZonesByName",
      "description": "Converts input parameters into an HTTP request for listing DNS hosted zones by name, encoding necessary query parameters and setting the appropriate AWS signing method. Processes HTTP responses to extract structured results or specific AWS error details based on the response content and status code. Works with input and output types representing DNS zone listing requests and responses, and internal error representations from AWS API calls.",
      "description_length": 443,
      "index": 279,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.ListHostedZonesByVPC",
      "description": "Provides functions to convert input data into an HTTP request for listing hosted zones associated with a VPC, and to parse the resulting HTTP response into a structured output or error. Operates on input and output types representing AWS Route 53 requests and responses, and handles error decoding from XML. Used to fetch zone information from AWS based on VPC identifiers through direct API interaction.",
      "description_length": 404,
      "index": 280,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListQueryLoggingConfigs",
      "description": "Handles conversion between native input and HTTP requests for AWS query-based API calls, specifically encoding parameters into query format and setting action and version. Decodes HTTP responses into structured outputs or specific error types based on AWS XML responses. Designed for use with AWS services requiring signed HTTP requests, such as retrieving configuration lists from Route 53.",
      "description_length": 391,
      "index": 281,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.ListResourceRecordSets",
      "description": "Handles conversion between native input and HTTP requests for listing DNS resource record sets, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS XML deserialization. Utilizes service-specific signing and error parsing for accurate interaction with AWS DNS services.",
      "description_length": 350,
      "index": 282,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.ListReusableDelegationSets",
      "description": "Converts AWS request inputs to HTTP format and handles decoding of response data, including parsing AWS-specific error messages. Operates on structured request and response types derived from AWS API definitions. Used to manage DNS delegation set listings by encoding parameters and validating error responses from AWS services.",
      "description_length": 328,
      "index": 283,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTagsForResource",
      "description": "Handles conversion between native input and HTTP requests for listing tags associated with an AWS resource, including proper query encoding and setting action/version parameters. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Works with input and output types representing AWS resource tag listing requests and responses, and internal error representations.",
      "description_length": 419,
      "index": 284,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTagsForResources",
      "description": "Handles AWS request signing and HTTP conversion for resource tag listing. Processes input containing resource identifiers and outputs tag data, using specific AWS service configurations. Decodes HTTP responses and maps AWS error formats to internal error types for precise handling.",
      "description_length": 282,
      "index": 285,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTrafficPolicies",
      "description": "Handles conversion between native input and HTTP requests for listing traffic policies, encoding parameters and setting action/version. Processes HTTP responses into structured outputs or specific error types based on AWS protocol. Parses AWS error responses into domain-specific errors matching defined specifications.",
      "description_length": 319,
      "index": 286,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTrafficPolicyInstances",
      "description": "Handles conversion between native input and HTTP requests for listing traffic policy instances, including encoding parameters and setting action/version. Processes HTTP responses to extract structured output or specific error details. Works with AWS service-specific request and response types, and custom error representations.",
      "description_length": 328,
      "index": 287,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTrafficPolicyInstancesByHostedZone",
      "description": "Converts input parameters into an HTTP request for listing traffic policy instances associated with a hosted zone, including setting action and version parameters. Processes HTTP responses to extract structured output or specific error details based on AWS XML formatting. Operates on request and response types defined by the AWS Route 53 API, handling error parsing for API-specific failure conditions.",
      "description_length": 404,
      "index": 288,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTrafficPolicyInstancesByPolicy",
      "description": "Handles AWS Route 53 traffic policy instance listing by converting input parameters into signed HTTP requests and parsing HTTP responses into structured outputs. Operates on request and response types specific to the ListTrafficPolicyInstancesByPolicy API action. Processes error responses by mapping AWS XML errors to internal error representations based on HTTP status codes.",
      "description_length": 377,
      "index": 289,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListTrafficPolicyVersions",
      "description": "Handles conversion between native input and HTTP requests for listing traffic policy versions, including proper query encoding and setting action and version parameters. Processes HTTP responses to extract structured output or decode specific AWS error formats. Operates on input and output types defined for traffic policy version listing, and error types specific to AWS API responses.",
      "description_length": 387,
      "index": 290,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.ListVPCAssociationAuthorizations",
      "description": "Converts input requests into HTTP format for AWS API calls, including setting action and version parameters, and encodes data into query format. Parses HTTP responses into structured output or specific error types based on AWS XML deserialization. Handles error parsing by matching HTTP status codes with expected error formats from the API specification.",
      "description_length": 355,
      "index": 291,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.TestDNSAnswer",
      "description": "Handles conversion between native input and HTTP requests for DNS testing, encoding parameters and setting action/version. Decodes HTTP responses into structured outputs or specific error types. Parses AWS error responses into domain-specific errors based on status codes and XML content.",
      "description_length": 288,
      "index": 292,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.Types",
      "description": "The module provides a cohesive set of utilities for converting, serializing, and deserializing structured data between XML, JSON, and query formats, with a focus on AWS-related data types. It handles DNS resource records, geographic locations, health checks, hosted zones, traffic policies, and VPC configurations, using custom types like `t`, `RRType`, `GeoLocation`, and `HealthCheck.t`. Operations include parsing XML nodes, generating query parameters, and serializing/deserializing to JSON, enabling seamless data exchange for AWS API interactions. For example, it can convert XML DNS responses into structured records, serialize health check configurations for API requests, or transform geographic location data into query parameters for regional filtering.",
      "description_length": 764,
      "index": 293,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.UpdateHealthCheck",
      "description": "Handles conversion between native input and HTTP requests for updating a health check, encoding parameters in query format and setting action and version. Decodes HTTP responses into native output or specific error types based on AWS XML structure. Processes AWS error responses to map them to API-specific errors with validation against status codes.",
      "description_length": 351,
      "index": 294,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Aws_route53.UpdateHostedZoneComment",
      "description": "Handles the conversion of request inputs into HTTP requests for updating a hosted zone's comment in AWS Route 53, including setting the appropriate action and version parameters. Processes HTTP responses to extract structured output or specific error details based on AWS error formats. Works with request and response types defined in the Route 53 API to manage comment updates efficiently.",
      "description_length": 391,
      "index": 295,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.UpdateTrafficPolicyComment",
      "description": "Handles conversion between native input and HTTP requests for updating a traffic policy comment, encoding parameters in query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS XML structure. Parses AWS error responses into domain-specific errors, validating status codes and error types.",
      "description_length": 372,
      "index": 296,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53.UpdateTrafficPolicyInstance",
      "description": "Handles conversion between native input and HTTP requests for updating a traffic policy instance, encoding parameters into query format and setting action and version. Processes HTTP responses, decoding them into native output or specific error types based on AWS standards. Parses AWS error responses into application-specific errors, validating status codes and error types.",
      "description_length": 376,
      "index": 297,
      "embedding_norm": 1.0
    },
    {
      "module_path": "aws-route53",
      "description": "Provides functions for constructing and sending HTTP requests to AWS services, parsing JSON responses, and handling authentication signatures. Works with types such as request configurations, HTTP methods, and AWS service-specific data structures. Used to interact with S3 for object storage, DynamoDB for NoSQL queries, and EC2 for instance management.",
      "description_length": 353,
      "index": 298,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Aws_route53",
      "description": "The module provides a unified interface for interacting with AWS Route 53 and related services, handling request conversion, HTTP encoding, and response parsing. It supports operations like creating, updating, and deleting hosted zones, health checks, traffic policies, and VPC associations, using structured types such as `t`, `HealthCheck.t`, and `TrafficPolicy.t`. It enables tasks like listing DNS records, managing tags, and retrieving zone limits, with detailed error handling for AWS-specific response formats.",
      "description_length": 517,
      "index": 299,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 300,
    "meaningful_modules": 300,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 764,
    "min_description_length": 215,
    "avg_description_length": 339.30333333333334,
    "embedding_file_size_mb": 1.0899934768676758
  }
}