{
  "package": "zmq-eio",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 5,
  "creation_timestamp": "2025-06-18T16:29:04.076765",
  "modules": [
    {
      "module_path": "Zmq_eio.Socket.Router",
      "description": "Handles message passing between components using unique identifiers. Operates on `id_t` and string lists to send and receive structured data asynchronously. Enables non-blocking communication in concurrent systems.",
      "description_length": 214,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Zmq_eio.Socket.Monitor",
      "description": "Provides a non-blocking way to receive zeroMQ monitoring events from a socket, returning a deferred value when an event occurs. Works with zeroMQ socket objects and event data structures specific to the monitor interface. Used to track socket state changes, such as connection attempts or disconnections, in real-time during network operations.",
      "description_length": 344,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Zmq_eio.Socket",
      "description": "manages asynchronous message exchange using unique identifiers and string lists, while also supporting real-time monitoring of zeroMQ socket events through deferred values. It handles `id_t` and event-specific data structures to enable non-blocking communication and state tracking. Users can send structured data between components and react to socket activity without blocking execution. Examples include tracking connection status changes and routing messages across concurrent processes.",
      "description_length": 491,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "zmq-eio",
      "description": "Processes zero-copy message exchanges over ZeroMQ sockets, supporting multipart messages and frame manipulation. Operates on byte sequences, message buffers, and socket endpoints with asynchronous I/O. Enables real-time data streaming between distributed components in high-performance networking applications.",
      "description_length": 310,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Zmq_eio",
      "description": "manages asynchronous message passing with unique identifiers and string lists, while enabling real-time monitoring of zeroMQ socket events via deferred values. It operates on `id_t` and event-specific data structures to support non-blocking communication and state tracking. Users can send structured data between components and respond to socket activity without blocking execution. Examples include tracking connection status changes and routing messages across concurrent processes.",
      "description_length": 485,
      "index": 4,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 5,
    "meaningful_modules": 5,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 491,
    "min_description_length": 214,
    "avg_description_length": 368.8,
    "embedding_file_size_mb": 0.01860523223876953
  }
}