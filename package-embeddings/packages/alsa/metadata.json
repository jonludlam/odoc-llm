{
  "package": "alsa",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:31.600889",
  "modules": [
    {
      "module_path": "Alsa.Sequencer.Event",
      "library": "alsa",
      "description": "This module defines types and constructors for representing ALSA sequencer events, including MIDI-like messages such as note on/off, controller changes, and program changes. It works with integers and structured types like `note` and `controller` to encode musical and system events. Concrete use cases include building and parsing event streams for audio synthesis, MIDI processing, and real-time music control.",
      "description_length": 412,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Alsa.Sequencer",
      "library": "alsa",
      "description": "This module combines port management with event handling to enable creation of MIDI and hardware sequencer interfaces, supporting event subscription, timing, and routing. It defines core types like ports and events, with operations to open ports, subscribe to sources, and process event streams. The event submodule provides structured types for MIDI messages such as note on/off, controller, and program changes, allowing precise construction and parsing of real-time music data. Example usage includes setting up a MIDI input port, subscribing to all available sources, and processing incoming note events to drive audio synthesis or control external devices.",
      "description_length": 661,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Alsa",
      "library": "alsa",
      "description": "This module provides direct access to ALSA sound drivers, enabling control over audio and MIDI functionalities, including version retrieval, error handling, and stream management. It supports working with exceptions, direction types, and audio input/output streams, while its child modules extend capabilities into MIDI sequencing with port management, event subscription, and precise MIDI message handling. The sequencer submodule allows creation of MIDI interfaces, timing control, and event routing, with structured types for messages like note on/off and controller changes. Example use cases include setting up audio streams, handling real-time MIDI input, and driving synthesis or external devices through parsed MIDI events.",
      "description_length": 731,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 3,
    "filtered_empty_modules": 1,
    "retention_rate": 0.75
  },
  "statistics": {
    "max_description_length": 731,
    "min_description_length": 412,
    "avg_description_length": 601.3333333333334,
    "embedding_file_size_mb": 0.011328697204589844
  }
}