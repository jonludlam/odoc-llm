{
  "package": "camlprime",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:13.643847",
  "modules": [
    {
      "module_path": "Prime.MRlist",
      "description": "Provides operations to manipulate a list-like structure with numeric indices, including accessing elements by position, retrieving the head and tail, and determining the length. Works with a polymorphic list type that supports numeric key lookups and transformations. Used to efficiently query and navigate structured numeric data sequences in numerical computations.",
      "description_length": 367,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "camlprime",
      "description": "Provides functions for generating prime numbers, checking primality, and factoring integers. Operates on arbitrary-precision integers and returns results as lists of factors or boolean flags. Used to optimize cryptographic key generation and number-theoretic computations.",
      "description_length": 272,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Math",
      "description": "Performs modular arithmetic operations, including modulus on natural numbers and modular exponentiation with arbitrary-precision numbers. Checks if a number is happy by repeatedly summing the squares of its digits. Operates on natural numbers and arbitrary-precision numeric types. Used to validate cryptographic operations and number theory properties.",
      "description_length": 353,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "LazyList",
      "description": "Creates and manipulates potentially infinite sequences where elements are evaluated on demand. Operates on a custom lazy list type that defers computation of elements until accessed. Supports operations like extracting elements by index, mapping functions over elements, combining two lists element-wise, and checking membership at specific positions.",
      "description_length": 351,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rand",
      "description": "Generates pseudo-random numbers using a linear congruential generator with customizable seed, modulus, and multiplier. It operates on numeric types and integer ranges, producing values based on a stateful generator. Used for deterministic random number sequences in simulations or randomized algorithms.",
      "description_length": 303,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Prime",
      "description": "manipulates polymorphic list-like structures with numeric indices, enabling element access, head/tail extraction, and length calculation. It supports numeric key lookups and transformations, allowing efficient traversal and querying of structured numeric sequences. Operations include retrieving elements by position, splitting lists into head and tail, and computing lengths. This enables tasks such as iterating over numerical data, extracting specific elements, and performing transformations on indexed sequences.",
      "description_length": 517,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    }
  ],
  "filtering": {
    "total_modules_in_package": 6,
    "meaningful_modules": 6,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 517,
    "min_description_length": 272,
    "avg_description_length": 360.5,
    "embedding_file_size_mb": 0.02219390869140625
  }
}