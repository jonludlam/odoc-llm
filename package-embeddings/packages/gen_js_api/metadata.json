{
  "package": "gen_js_api",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-06-18T16:27:45.366753",
  "modules": [
    {
      "module_path": "gen_js_api",
      "description": "Generates OCaml binding code from signatures using conventions and annotations, translating JavaScript types and functions into OCaml equivalents. Works with OCaml modules, types, and functions that mirror JavaScript APIs, including objects, functions, and primitives. Used to create interoperable OCaml code for web applications compiled with js_of_ocaml, enabling access to DOM elements and browser APIs.",
      "description_length": 406,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gen_js_api_ppx_driver",
      "description": "Provides functions to validate attributes and locations during ppx processing, using ppxlib for static analysis. Operates on OCaml AST nodes and ppxlib metadata. Used to enforce strict attribute and location checks in code generation pipelines.",
      "description_length": 244,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Gen_js_api_ppx",
      "description": "Rewrites OCaml AST nodes to generate JavaScript-compatible code, handling type declarations, module expressions, and core types with location-aware transformations. Processes attributes and marks them as used during traversal. Used to convert OCaml types and expressions into a form suitable for JavaScript interop during ppx expansion.",
      "description_length": 336,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 406,
    "min_description_length": 244,
    "avg_description_length": 328.6666666666667,
    "embedding_file_size_mb": 0.011308670043945312
  }
}