{
  "package": "cmdlang-to-climate",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:37.467146",
  "modules": [
    {
      "module_path": "Cmdlang_to_climate.Translate.Private",
      "library": "cmdlang-to-climate",
      "description": "This module handles the core translation logic from command-line parsing structures to climate's internal representation, focusing on converting parser definitions into equivalent climate constructs. It operates directly on abstract syntax trees and parser configurations derived from cmdlang. Concrete use cases include translating command hierarchies and argument specifications into climate's structured format for command dispatch.",
      "description_length": 435,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Cmdlang_to_climate.Translate",
      "library": "cmdlang-to-climate",
      "description": "This module translates command-line interface definitions from `cmdlang` into equivalent `climate` structures, enabling migration or interoperability between the two libraries. It converts parameters, arguments, and commands directly, supporting use cases like building command-line tools with climate from existing cmdlang definitions. The core translation logic operates on abstract syntax trees and parser configurations, handling command hierarchies and argument specifications while omitting advanced features like auto-completion. It provides direct APIs for initiating translations and exposes internal routines for AST transformation, allowing fine-grained control over the conversion process.",
      "description_length": 701,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Cmdlang_to_climate",
      "library": "cmdlang-to-climate",
      "description": "This module bridges `cmdlang` and `climate` by translating command-line definitions into equivalent structures, enabling seamless migration or interoperability. It processes abstract syntax trees and parser configurations to convert commands, parameters, and arguments, supporting hierarchical command setups and direct API-driven translation. Users can programmatically transform existing `cmdlang` command definitions into `climate` equivalents, for example, converting a multi-level CLI tool with positional and optional arguments into a runnable `climate` command structure. Fine-grained control allows selective transformation of specific AST nodes, omitting advanced `cmdlang` features like auto-completion during conversion.",
      "description_length": 731,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 731,
    "min_description_length": 435,
    "avg_description_length": 622.3333333333334,
    "embedding_file_size_mb": 0.01131439208984375
  }
}