{
  "package": "batsat",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:43:39.111831",
  "modules": [
    {
      "module_path": "Batsat.Lit",
      "library": "batsat",
      "description": "This module represents propositional literals as integers, with operations to create, negate, compare, and inspect them. It provides functions to construct literals with a given sign, retrieve their absolute value, sign, or integer representation, and supports equality checks, hashing, and string formatting. Concrete use cases include encoding Boolean variables in SAT solvers, manipulating logical clauses, and implementing DPLL or CDCL algorithms.",
      "description_length": 451,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Batsat",
      "library": "batsat",
      "description": "This module provides operations for constructing and solving propositional logic problems through clause addition, literal manipulation, and assumption-driven solving. It works with a SAT problem representation type, propositional literals, and truth value enums (`V_undef`, `V_true`, `V_false`) to support tasks like unsat core extraction, proof tracing, and incremental solving. Key use cases include formal verification, automated reasoning, and constraint satisfaction systems requiring precise truth value tracking at specific decision levels.",
      "description_length": 548,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 548,
    "min_description_length": 451,
    "avg_description_length": 499.5,
    "embedding_file_size_mb": 0.029394149780273438
  }
}