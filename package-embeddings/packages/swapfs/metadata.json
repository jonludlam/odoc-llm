{
  "package": "swapfs",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:07.415982",
  "modules": [
    {
      "module_path": "Swapfs.S",
      "library": "swapfs",
      "description": "This module manages dynamic, unnamed files in a memory-efficient way using handles. It supports creating empty files, appending data, querying file size, reading partial content, and freeing resources explicitly. Use cases include handling temporary files, streaming data with dynamic sizing, and in-memory file manipulation without relying on the filesystem.",
      "description_length": 359,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Swapfs.Make",
      "library": "swapfs",
      "description": "This module implements a swap filesystem backed by a block device, supporting operations to manage unnamed files through handles. It provides functions to append data, read partial content, check file size, and free allocated blocks, working with handles that reference files in the filesystem. Use cases include efficient storage management on block devices with configurable allocation granularity.",
      "description_length": 400,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Swapfs",
      "library": "swapfs",
      "description": "This module organizes hierarchical data into a transactional filesystem, where changes can be grouped, reviewed, and applied or discarded atomically. It coordinates with submodules that manage dynamic in-memory files and block-backed storage, offering unified support for creating, modifying, and navigating files and directories through stable handles. Main operations include starting transactions, modifying files via append or read, and committing or rolling back changes, with concrete applications in configuration systems and temporary file workflows. Handles abstract file storage details, allowing code to work seamlessly across memory and block devices.",
      "description_length": 663,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 663,
    "min_description_length": 359,
    "avg_description_length": 474.0,
    "embedding_file_size_mb": 0.011312484741210938
  }
}