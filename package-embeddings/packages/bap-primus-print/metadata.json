{
  "package": "bap-primus-print",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:04:33.604529",
  "modules": [
    {
      "module_path": "Primus_print_main.Param",
      "library": "bap-plugin-primus_print",
      "description": "This module defines configuration parameters for controlling output behavior, including monitors, output destination, rule sets, and traceback depth. It works with string lists, optional strings, and optional integers to configure runtime settings. Concrete use cases include enabling specific monitoring modules, setting output files, defining analysis rules, and limiting traceback information during execution.",
      "description_length": 413,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Primus_print_main.Config",
      "library": "bap-plugin-primus_print",
      "description": "This module provides a framework for defining and managing typed configuration parameters, supporting operations like declaring command-line flags, converting values between string representations and structured types, and generating documentation. It works with a `reader` interface for accessing parameter values, futures for deferred computations, and a variety of converters for primitives (bool, int, float), collections (list, array, pair), and specialized types like file paths or enumerations. It is used to build robust command-line tools with type-safe configuration handling, automatic documentation generation, and validated input parsing for complex data.",
      "description_length": 668,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Primus_print_main",
      "library": "bap-plugin-primus_print",
      "description": "This module combines logging, string manipulation, and provider management with rule-based event parsing and execution monitoring to support program analysis and structured debugging. It works with formatters, streams, monitors, and stateful configurations, enabling trace visualization and dynamic output control. The first child module configures output behavior through monitors, rule sets, and traceback depth, using string lists and optional values to direct logging destinations and analysis scope. The second child module extends configuration handling with typed parameters, command-line flags, and value converters for robust tooling with type-safe inputs and automatic documentation.",
      "description_length": 693,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 693,
    "min_description_length": 413,
    "avg_description_length": 591.3333333333334,
    "embedding_file_size_mb": 0.011310577392578125
  }
}