{
  "package": "ocplib-json-typed-bson",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-07-15T23:04:56.525414",
  "modules": [
    {
      "module_path": "Json_repr_bson.Repr",
      "library": "ocplib-json-typed-bson",
      "description": "This module provides functions to convert between a BSON representation of JSON documents and a common intermediate format. It supports viewing a BSON value as a structured JSON representation and reconstructing a BSON value from that view. Use this module when serializing or deserializing JSON data to and from BSON format, such as in database interactions or API request handling.",
      "description_length": 383,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Json_repr_bson.Json_encoding",
      "library": "ocplib-json-typed-bson",
      "description": "This module provides functions to convert values to and from BSON representations using JSON encodings. It works with JSON encodings and BSON values, enabling serialization and deserialization of structured data. Concrete use cases include encoding custom data types to BSON for storage in a database or decoding BSON documents into typed values for processing.",
      "description_length": 361,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Json_repr_bson.Json_query",
      "library": "ocplib-json-typed-bson",
      "description": "This module provides functions to query, insert, replace, and merge values within BSON-encoded JSON documents. It operates directly on `Json_repr_bson.Repr.value` structures using a `Json_query.path` to navigate nested fields. Concrete use cases include modifying specific fields in a BSON document, extracting subdocuments, or combining multiple BSON structures.",
      "description_length": 363,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Json_repr_bson",
      "library": "ocplib-json-typed-bson",
      "description": "This module serializes and deserializes JSON documents to and from BSON format using an intermediate representation, operating on `bson` values and `bytes` with support for caching and handling mutable byte inputs. It enables efficient conversion between JSON and BSON, such as storing JSON data in BSON-compatible storage or parsing BSON from external sources. Submodules allow converting BSON to structured JSON views, encoding and decoding typed values using JSON encodings, and querying or modifying nested fields in BSON-encoded documents using JSON-style paths. These capabilities support use cases like database interactions, API request handling, and structured data processing.",
      "description_length": 686,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 686,
    "min_description_length": 361,
    "avg_description_length": 448.25,
    "embedding_file_size_mb": 0.014925003051757812
  }
}