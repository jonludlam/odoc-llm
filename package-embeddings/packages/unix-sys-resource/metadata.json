{
  "package": "unix-sys-resource",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 7,
  "creation_timestamp": "2025-08-14T23:05:10.853458",
  "modules": [
    {
      "module_path": "Sys_resource_unix.Resource",
      "library": "unix-sys-resource.unix",
      "description": "This module provides access to system resource information, specifically exposing the `host` value that represents the current machine's host details. It works with structured data types like `Sys_resource.Resource.Host.t` to capture system-specific attributes. Concrete use cases include retrieving hostname, IP addresses, or other host-related metadata for system monitoring or configuration tasks.",
      "description_length": 400,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sys_resource_unix",
      "library": "unix-sys-resource.unix",
      "description": "This module provides direct access to system resource information, including the current host's details and resource limits. It works with structured types like `Sys_resource.Host.t` and `Sys_resource.Resource.Limit.t` to retrieve and set resource constraints. Concrete use cases include querying and adjusting file descriptor limits or inspecting host metadata such as hostname and network addresses.",
      "description_length": 401,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sys_resource.Resource.Limit",
      "library": "unix-sys-resource",
      "description": "This module defines a type `t` representing resource limits, which can be either a specific integer value or infinity. It provides the `min` function to compute the minimum of two limits and `to_string` for converting limits to string representations. It is used to manage and compare resource constraints, such as memory or CPU usage limits, where a value may be unbounded.",
      "description_length": 374,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sys_resource.Resource.Host",
      "library": "unix-sys-resource",
      "description": "This module defines a data type `t` representing host resources, with functions to convert between host resource definitions and their internal representation. It works with the `defns` type from the `Sys_resource.Resource` module to structure and retrieve host-specific resource data. Concrete use cases include parsing and serializing host resource configurations for system management tasks.",
      "description_length": 394,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sys_resource.Host",
      "library": "unix-sys-resource",
      "description": "This module manages host-specific system resources, providing operations to retrieve and manipulate resource information such as CPU, memory, and network usage. It works with structured data representing host resources, including types like `Sys_resource.Resource.Host.t`. Concrete use cases include monitoring host performance metrics and enforcing resource limits in a distributed system environment.",
      "description_length": 402,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Sys_resource.Resource",
      "library": "unix-sys-resource",
      "description": "This module defines resource types and limit handling for system resources, including conversions to strings and integer codes. It works with structured resource definitions and host-specific data to manage constraints like memory or CPU limits. Concrete use cases include enforcing and comparing resource boundaries in system-level applications.",
      "description_length": 346,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Sys_resource",
      "library": "unix-sys-resource",
      "description": "This module provides functions to define, retrieve, and enforce system resource limits such as memory and CPU usage. It operates on structured resource definitions and host-specific data types to support concrete use cases like monitoring performance metrics and applying resource constraints in system-level or distributed applications.",
      "description_length": 337,
      "index": 6,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 7,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 402,
    "min_description_length": 337,
    "avg_description_length": 379.14285714285717,
    "embedding_file_size_mb": 0.10186004638671875
  }
}