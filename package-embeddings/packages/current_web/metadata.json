{
  "package": "current_web",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 6,
  "creation_timestamp": "2025-06-18T16:29:20.943424",
  "modules": [
    {
      "module_path": "Current_web.User",
      "description": "Creates user instances from strings, handling errors gracefully or raising exceptions. Operates on string identifiers to produce and extract user IDs. Used to validate and retrieve user identifiers in authentication and identity management workflows.",
      "description_length": 250,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web.Role",
      "description": "Provides functions to format and inspect role data, including operations to cancel and rebuild jobs, read metrics, and manage log matcher rules. Works with a variant type representing different role configurations. Used to enforce access control and monitoring policies in a system's administrative interface.",
      "description_length": 309,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web.Context",
      "description": "Provides functions to construct and manage HTTP request contexts, including extracting request data, generating CSRF tokens, handling user authentication, and rendering HTML responses with custom content or redirects. Operates on types like `Site.t`, `Cohttp.Request.t`, `User.t`, and `Uri.t`. Used to build dynamic web pages, handle form submissions, and manage user sessions with proper response formatting and redirection.",
      "description_length": 425,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Current_web.Resource",
      "description": "Handles access control for HTTP operations by defining required roles for GET and POST requests. Operates on role identifiers and request methods to enforce permissions. Used to validate user access before processing API endpoints.",
      "description_length": 231,
      "index": 3,
      "embedding_norm": 1.0
    },
    {
      "module_path": "current_web",
      "description": "Provides operations for fetching, building, testing, and deploying code based on version control events. Works with Git repositories, commit hashes, and build artifacts. Used to automate continuous integration workflows and update status indicators in real time.",
      "description_length": 262,
      "index": 4,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Current_web",
      "description": "manages user authentication, request handling, and access control by creating and validating user instances, formatting role data, constructing HTTP contexts, and enforcing role-based permissions. It works with types such as `User.t`, `Site.t`, `Cohttp.Request.t`, and role variants to support tasks like generating CSRF tokens, inspecting job metrics, and restricting API endpoints. Functions include extracting user IDs from strings, managing session data, and validating access based on request methods and roles. Examples include authenticating users, rendering dynamic HTML responses, and ensuring only authorized roles can perform specific HTTP operations.",
      "description_length": 662,
      "index": 5,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 7,
    "meaningful_modules": 6,
    "filtered_empty_modules": 1,
    "retention_rate": 0.8571428571428571
  },
  "statistics": {
    "max_description_length": 662,
    "min_description_length": 231,
    "avg_description_length": 356.5,
    "embedding_file_size_mb": 0.02220916748046875
  }
}