{
  "package": "ppx_system",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:05:02.289588",
  "modules": [
    {
      "module_path": "Ppx_system",
      "library": "ppx_system",
      "description": "This module defines and retrieves a custom extension for the OCaml PPX system. It works with `Ppxlib.Extension` types to integrate syntax extensions into the OCaml compilation pipeline. Concrete use cases include adding and processing custom `[%system]` extension points in OCaml source code during PPX rewriting.",
      "description_length": 313,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Ppx_system_runtime",
      "library": "ppx_system.runtime",
      "description": "This module defines a system type that represents different operating systems, including Darwin, FreeBSD, NetBSD, OpenBSD, Unix, Win32, and an Unknown variant for unrecognized systems. It is used to determine and match against the current runtime platform, enabling platform-specific behavior in applications. Concrete use cases include conditional execution based on OS, such as selecting file paths, system calls, or environment variables.",
      "description_length": 441,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 441,
    "min_description_length": 313,
    "avg_description_length": 377.0,
    "embedding_file_size_mb": 0.007689476013183594
  }
}