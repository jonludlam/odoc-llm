{
  "package": "expect",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 3,
  "creation_timestamp": "2025-07-15T23:05:21.791521",
  "modules": [
    {
      "module_path": "ExpectPcre",
      "library": "expect.pcre",
      "description": "This module enhances the `expect` function to support pattern matching with PCRE regular expressions using `Pat` or `Rex` constructors. It works with strings and Pcre regexps, allowing extraction of matched groups via `fmatches` callbacks. Use it to write concise assertions that match expected regex patterns or literal strings against actual output.",
      "description_length": 351,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Expect",
      "library": "expect",
      "description": "This module enables automated testing of interactive command-line programs by spawning processes, sending input, and asserting expected output patterns. It supports matching output lines using exact strings, substrings, prefixes, suffixes, regular expressions, or custom functions, with explicit handling for end-of-file and timeout events. Concrete use cases include testing REPLs, command-line tools with interactive prompts, and network clients that communicate over standard input/output.",
      "description_length": 492,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ExpectStr",
      "library": "expect.str",
      "description": "This module adds support for string-based regular expression matching to the `expect` function by allowing patterns to be specified using `Str.regexp`. It works with lists of match cases that combine `Str.regexp` values and arbitrary data, enabling conditional extraction or routing based on string input. Use this when parsing or validating textual data against regex patterns, such as processing log lines or command-line arguments.",
      "description_length": 434,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 492,
    "min_description_length": 351,
    "avg_description_length": 425.6666666666667,
    "embedding_file_size_mb": 0.011319160461425781
  }
}