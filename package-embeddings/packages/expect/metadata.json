{
  "package": "expect",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 3,
  "creation_timestamp": "2025-08-14T22:56:45.585780",
  "modules": [
    {
      "module_path": "Expect",
      "library": "expect",
      "description": "This module enables automated testing of interactive command-line programs by spawning processes, sending input, and matching output against patterns such as exact strings, regular expressions, or custom functions. It supports operations like `spawn` to start a process, `send` to provide input, `expect` to wait for specific output patterns, and `close` to terminate the process. Concrete use cases include testing shell scripts, interactive prompts, or network clients that communicate via standard input/output.",
      "description_length": 514,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ExpectPcre",
      "library": "expect.pcre",
      "description": "This module enhances the `Expect.expect` function to support pattern matching with both string patterns and compiled PCRE regular expressions. It accepts matchers like `Pat` for string-based matching and `Rex` for regex-based matching, along with optional transformation functions applied to matched strings. Use it to write concise expectation-based tests that validate output against literal strings or complex regex patterns.",
      "description_length": 428,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "ExpectStr",
      "library": "expect.str",
      "description": "This module enhances the `expect` function to support matching against `Str.regexp` patterns, enabling regex-based expectations. It works with `Str.regexp` and integrates directly with the `Expect.expect` interface for value assertions. Use it to write tests that validate string outputs using regular expressions, such as checking formatted log lines or parsing results.",
      "description_length": 371,
      "index": 2,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 3,
    "meaningful_modules": 3,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 514,
    "min_description_length": 371,
    "avg_description_length": 437.6666666666667,
    "embedding_file_size_mb": 0.04387092590332031
  }
}