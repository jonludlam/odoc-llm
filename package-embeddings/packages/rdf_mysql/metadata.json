{
  "package": "rdf_mysql",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 8,
  "creation_timestamp": "2025-08-14T23:04:19.644266",
  "modules": [
    {
      "module_path": "Rdf_mysql.My2.Mysql.BGP",
      "library": "rdf_mysql",
      "description": "This module implements a basic graph pattern (BGP) interface for querying RDF data stored in MySQL. It provides operations to convert between internal and external term representations, compare terms, and retrieve subjects, objects, or matching triples based on optional subject, predicate, or object constraints. The module works directly with MySQL-backed RDF graphs and their associated term types.",
      "description_length": 401,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_mysql.My1.Mysql.BGP",
      "library": "rdf_mysql",
      "description": "This module implements a basic graph pattern (BGP) query engine over an RDF dataset stored in MySQL. It provides operations to convert between internal and external term representations, compare terms, and retrieve subjects and objects from the graph. The core functionality supports pattern matching queries by allowing partial matching on subject, predicate, or object positions within RDF triples.",
      "description_length": 400,
      "index": 1,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_mysql.My2.Mysql",
      "library": "rdf_mysql",
      "description": "This module supports operations for managing RDF datasets in MySQL, focusing on graph manipulation, transaction control, and namespace handling. It works with MySQL-backed RDF graphs (`g` type) to enable subject-predicate-object queries, triple updates, existence checks, and term enumeration, while integrating the `BGP` module for advanced pattern matching and term representation. Use cases include semantic web applications requiring transactional integrity, dynamic namespace management, and efficient bulk operations on large RDF graphs.",
      "description_length": 543,
      "index": 2,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Rdf_mysql.My1.Mysql",
      "library": "rdf_mysql",
      "description": "This module provides operations for storing, querying, and manipulating RDF graphs in a MySQL database, supporting CRUD operations on triples, transaction management, and SPARQL-like pattern matching. It works with RDF terms (subjects, predicates, objects) and graph structures represented via the `g` type, while handling blank node identifiers, namespace mappings, and partial triple matching through its BGP module. It is suited for semantic web applications requiring scalable RDF storage with transactional integrity and efficient querying of structured data.",
      "description_length": 564,
      "index": 3,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Rdf_mysql.My2",
      "library": "rdf_mysql",
      "description": "This module provides functions for storing and querying RDF graphs in MySQL, supporting operations like adding or removing triples, executing SPARQL-like queries, and managing namespaces. It works directly with MySQL-backed RDF graphs (`g` type) and integrates with the `BGP` module for complex pattern matching. Use it for semantic web applications needing transactional updates, efficient bulk loading, or dynamic namespace registration with MySQL as the backend.",
      "description_length": 465,
      "index": 4,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_mysql.My",
      "library": "rdf_mysql",
      "description": "This module provides MySQL database interactions tailored for RDF graph storage, including SQL query execution, transaction management, and abstraction layers for triple operations (insertion, deletion, and retrieval) alongside namespace handling. It operates on MySQL connections, IRIs, RDF terms, and graph metadata, enabling use cases such as persistent RDF data storage, SPARQL query processing, and transactional consistency for complex graph manipulations involving blank nodes and hierarchical namespaces.",
      "description_length": 512,
      "index": 5,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Rdf_mysql.My1",
      "library": "rdf_mysql",
      "description": "This module implements MySQL-backed storage for RDF graphs with support for adding, removing, and querying triples using SPARQL-like patterns. It handles RDF terms, blank nodes, and graph structures via the `g` type, providing transaction control and efficient pattern matching through the BGP module. Use it to build semantic web services that require scalable, transactionally consistent RDF data storage with MySQL.",
      "description_length": 418,
      "index": 6,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Rdf_mysql",
      "library": "rdf_mysql",
      "description": "This module implements MySQL-backed RDF graph storage with transactional support for triple operations, SPARQL-like query execution, and namespace management. It operates on RDF terms, blank nodes, and graph structures through the `g` type, leveraging the BGP module for pattern matching. Use it to build semantic web services requiring scalable, transactionally consistent RDF data handling with MySQL.",
      "description_length": 403,
      "index": 7,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 8,
    "meaningful_modules": 8,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 564,
    "min_description_length": 400,
    "avg_description_length": 463.25,
    "embedding_file_size_mb": 0.11627674102783203
  }
}