{
  "package": "lacc",
  "embedding_model": "BAAI/bge-base-en-v1.5",
  "embedding_dimension": 1024,
  "total_modules": 4,
  "creation_timestamp": "2025-06-18T16:28:00.964043",
  "modules": [
    {
      "module_path": "Lacc.Acc",
      "description": "Maintains a mutable linked list structure, allowing elements to be added incrementally and the tail to be updated directly. It supports creating a new list, appending elements, and retrieving the final list as a standard OCaml list. Used to efficiently build and manipulate lists in a stepwise manner during processing.",
      "description_length": 319,
      "index": 0,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "Lacc.Dacc",
      "description": "Maintains and manipulates a mutable list structure, allowing accumulation of elements and direct modification of the tail. Operates on a custom type 'a t that encapsulates a list. Used to build and update lists in a controlled, in-place manner during processing pipelines.",
      "description_length": 272,
      "index": 1,
      "embedding_norm": 0.9999999403953552
    },
    {
      "module_path": "lacc",
      "description": "Provides functions for parsing and manipulating LAC (Labelled Automata Compiler) syntax trees, including node traversal, attribute extraction, and structure validation. Operates on custom data types representing automata states, transitions, and labels. Used to generate optimized state machine representations from high-level specifications.",
      "description_length": 342,
      "index": 2,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Lacc",
      "description": "Maintains a mutable list structure that allows incremental element addition and direct tail updates, supporting creation, appending, and conversion to a standard OCaml list. It operates on a custom type 'a t, enabling in-place list manipulation during processing. Users can build lists step by step, modify their tails dynamically, and retrieve the final result as a conventional list. This is useful for efficiently constructing and updating lists within pipelines or iterative processes.",
      "description_length": 489,
      "index": 3,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 4,
    "meaningful_modules": 4,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 489,
    "min_description_length": 272,
    "avg_description_length": 355.5,
    "embedding_file_size_mb": 0.014941215515136719
  }
}