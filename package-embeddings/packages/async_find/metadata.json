{
  "package": "async_find",
  "embedding_model": "Qwen/Qwen3-Embedding-0.6B",
  "embedding_dimension": 1024,
  "total_modules": 2,
  "creation_timestamp": "2025-07-15T23:03:28.741775",
  "modules": [
    {
      "module_path": "Async_find.Options",
      "library": "async_find",
      "description": "This module defines configuration options for controlling file traversal behavior, including depth limits, symlink handling, error handling strategies, and asynchronous filtering of files and directories. It works with integers, optional values, boolean flags, and deferred computations over file information records. Concrete use cases include customizing recursive file searches to skip directories, apply depth constraints, or log/handle errors during file system traversal.",
      "description_length": 477,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Async_find",
      "library": "async_find",
      "description": "This module traverses directories asynchronously, yielding file paths paired with metadata, and supports filtering and traversal options through its configuration submodule. The core functionality operates on file information records, allowing asynchronous filtering, depth control, symlink handling, and error recovery during traversal. It enables tasks like scanning large directories non-blockingly, indexing files matching specific criteria, or skipping unwanted directories dynamically. The combined API lets users define custom traversal strategies while processing file system content efficiently and concurrently.",
      "description_length": 621,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 621,
    "min_description_length": 477,
    "avg_description_length": 549.0,
    "embedding_file_size_mb": 0.00768280029296875
  }
}