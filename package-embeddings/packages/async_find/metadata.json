{
  "package": "async_find",
  "embedding_model": "Qwen/Qwen3-Embedding-8B",
  "embedding_dimension": 4096,
  "total_modules": 2,
  "creation_timestamp": "2025-08-14T22:43:28.012460",
  "modules": [
    {
      "module_path": "Async_find.Options",
      "library": "async_find",
      "description": "This module defines configuration options for controlling file search behavior, including depth limits, symlink handling, error handling strategies, and filtering logic. It works with file information structures to customize traversal during asynchronous file searches. Concrete use cases include restricting search depth, skipping directories based on conditions, and logging or handling file access errors during traversal.",
      "description_length": 425,
      "index": 0,
      "embedding_norm": 1.0
    },
    {
      "module_path": "Async_find",
      "library": "async_find",
      "description": "This module implements asynchronous file traversal with configurable search parameters, providing operations to iterate, fold, or collect files matching specific criteria. It works with file information tuples of type `string * Async.Unix.Stats.t` and supports concrete use cases such as searching directories up to a specified depth, filtering files based on custom logic, and handling symbolic links or access errors during traversal. Key functions include `next`, `iter`, `fold`, and `to_list`, with utilities like `find_all` for simplified file enumeration.",
      "description_length": 561,
      "index": 1,
      "embedding_norm": 1.0
    }
  ],
  "filtering": {
    "total_modules_in_package": 2,
    "meaningful_modules": 2,
    "filtered_empty_modules": 0,
    "retention_rate": 1.0
  },
  "statistics": {
    "max_description_length": 561,
    "min_description_length": 425,
    "avg_description_length": 493.0,
    "embedding_file_size_mb": 0.029413223266601562
  }
}